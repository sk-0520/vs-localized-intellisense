<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.Http</name>
  </assembly>
  <members>
    <member name="T:System.Net.Http.ByteArrayContent">
      <summary>Fornece conteúdo HTTP baseado em uma matriz de bytes.</summary>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.ByteArrayContent" />.</summary>
      <param name="content">O conteúdo usado para inicializar o <see cref="T:System.Net.Http.ByteArrayContent" />.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="content" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.ByteArrayContent" />.</summary>
      <param name="content">O conteúdo usado para inicializar o <see cref="T:System.Net.Http.ByteArrayContent" />.</param>
      <param name="offset">O deslocamento, em bytes, no parâmetro <paramref name="content" /> usado para inicializar o <see cref="T:System.Net.Http.ByteArrayContent" />.</param>
      <param name="count">O número de bytes em <paramref name="content" /> começando no parâmetro <paramref name="offset" /> usado para inicializar o <see cref="T:System.Net.Http.ByteArrayContent" />.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="content" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="offset" /> é menor que zero.  
  
- ou - 
O parâmetro <paramref name="offset" /> é maior que o tamanho do conteúdo especificado pelo parâmetro <paramref name="content" />.  
  
- ou - 
O parâmetro <paramref name="count" /> é menor que zero.  
  
- ou - 
O parâmetro <paramref name="count" /> é maior que o tamanho do conteúdo especificado pelo parâmetro <paramref name="content" /> – menos o parâmetro <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.CreateContentReadStream(System.Threading.CancellationToken)">
      <summary>Cria um fluxo de conteúdo HTTP para leitura. Ele usa a memória do <see cref="T:System.Net.Http.ByteArrayContent" /> como repositório de backup.</summary>
      <param name="cancellationToken">O token de cancelamento para cancelar a operação.</param>
      <returns>O fluxo de conteúdo HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync">
      <summary>Cria um fluxo de conteúdo HTTP como uma operação assíncrona para ler de qual repositório de backup é a memória do <see cref="T:System.Net.Http.ByteArrayContent" />.</summary>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary>Serializa e grava a matriz de bytes fornecida no construtor em um fluxo de conteúdo HTTP.</summary>
      <param name="stream">O fluxo de destino.</param>
      <param name="context">Informações opcionais sobre o transporte, como o token de associação de canal. Esse parâmetro pode ser <see langword="null" />.</param>
      <param name="cancellationToken">O token de cancelamento para cancelar a operação.</param>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary>Serialize e grave a matriz de bytes fornecida no construtor em um fluxo de conteúdo HTTP como uma operação assíncrona.</summary>
      <param name="stream">O fluxo de destino.</param>
      <param name="context">Informações sobre o transporte, como o token de associação de canal. Esse parâmetro pode ser <see langword="null" />.</param>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary>Serialize e grave a matriz de bytes fornecida no construtor em um fluxo de conteúdo HTTP como uma operação assíncrona.</summary>
      <param name="stream">O fluxo de destino.</param>
      <param name="context">Informações sobre o transporte, como o token de associação de canal. Esse parâmetro pode ser <see langword="null" />.</param>
      <param name="cancellationToken">O token de cancelamento para cancelar a operação.</param>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)">
      <summary>Determina se uma matriz de bytes tem um tamanho válido em bytes.</summary>
      <param name="length">O comprimento em bytes da matriz de bytes.</param>
      <returns>
        <see langword="true" /> se <paramref name="length" /> for um comprimento válido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.ClientCertificateOption">
      <summary>Especifica como os certificados de cliente são fornecidos.</summary>
    </member>
    <member name="F:System.Net.Http.ClientCertificateOption.Automatic">
      <summary>O <see cref="T:System.Net.Http.HttpClientHandler" /> tentará fornecer todos os certificados do cliente disponíveis automaticamente.</summary>
    </member>
    <member name="F:System.Net.Http.ClientCertificateOption.Manual">
      <summary>O aplicativo fornece manualmente os certificados cliente para o <see cref="T:System.Net.Http.WebRequestHandler" />. Esse valor é o padrão.</summary>
    </member>
    <member name="T:System.Net.Http.DelegatingHandler">
      <summary>Um tipo para manipuladores de HTTP que delegam o processamento de mensagens de resposta HTTP para outro manipulador, chamado de manipulador interno.</summary>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.#ctor">
      <summary>Cria uma nova instância da classe <see cref="T:System.Net.Http.DelegatingHandler" />.</summary>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary>Cria uma nova instância da classe <see cref="T:System.Net.Http.DelegatingHandler" /> com um manipulador interno específico.</summary>
      <param name="innerHandler">O manipulador interno que é responsável por processar as mensagens de resposta HTTP.</param>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.Net.Http.DelegatingHandler" /> e, opcionalmente, descarta os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Envia uma solicitação HTTP para o manipulador interno para envio ao servidor.</summary>
      <param name="request">A mensagem de solicitação HTTP para enviar ao servidor.</param>
      <param name="cancellationToken">Um token de cancelamento para cancelar a operação.</param>
      <returns>Uma mensagem da resposta HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Envia uma solicitação HTTP para o manipulador interno para enviar ao servidor como uma operação assíncrona.</summary>
      <param name="request">A mensagem de solicitação HTTP para enviar ao servidor.</param>
      <param name="cancellationToken">Um token de cancelamento para cancelar a operação.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="request" /> era <see langword="null" />.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="P:System.Net.Http.DelegatingHandler.InnerHandler">
      <summary>Obtém ou define o manipulador interno que processa as mensagens de resposta HTTP.</summary>
      <returns>O manipulador interno para mensagens de resposta HTTP.</returns>
    </member>
    <member name="T:System.Net.Http.FormUrlEncodedContent">
      <summary>Um contêiner para tuplas de nome/valor codificadas usando o tipo MIME application/x-www-form-urlencoded.</summary>
    </member>
    <member name="M:System.Net.Http.FormUrlEncodedContent.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.FormUrlEncodedContent" /> com uma coleção específica de pares nome-valor.</summary>
      <param name="nameValueCollection">Uma coleção de pares nome-valor.</param>
    </member>
    <member name="M:System.Net.Http.FormUrlEncodedContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary>Serializa e grava as tuplas de nome/valor fornecidas no construtor em um fluxo de conteúdo HTTP como uma operação assíncrona.</summary>
      <param name="stream">O fluxo de destino.</param>
      <param name="context">Informações sobre o transporte, como o token de associação de canal. Esse parâmetro pode ser <see langword="null" />.</param>
      <param name="cancellationToken">O token de cancelamento para cancelar a operação.</param>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="T:System.Net.Http.HeaderEncodingSelector`1">
      <summary>Representa um método que especifica a codificação a ser usada ao interpretar os valores de cabeçalho.</summary>
      <param name="headerName">O nome do cabeçalho a ser especificado para a codificação.</param>
      <param name="context">O tipo para o qual estamos codificando/decodificando os cabeçalhos.</param>
      <typeparam name="TContext" />
      <returns>A codificação a ser usada ou <see langword="null" /> para usar o comportamento padrão.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.AuthenticationHeaderValue">
      <summary>Representa informações de autenticação nos valores de cabeçalho Authorization, ProxyAuthorization, WWW-Authenticate e Proxy-Authenticate.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />.</summary>
      <param name="scheme">O esquema a ser usado para autorização.</param>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor(System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />.</summary>
      <param name="scheme">O esquema a ser usado para autorização.</param>
      <param name="parameter">As credenciais que contém as informações de autenticação do agente do usuário para o recurso que está sendo solicitado.</param>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.Equals(System.Object)">
      <summary>Determina se o <see cref="T:System.Object" /> especificado é igual ao objeto <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> atual.</summary>
      <param name="obj">O objeto a ser comparado com o objeto atual.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Object" /> especificado for igual ao objeto atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.GetHashCode">
      <summary>Serve como uma função de hash para um objeto <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />.</summary>
      <returns>Um código hash do objeto atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.Parse(System.String)">
      <summary>Converte uma cadeia de caracteres em uma instância <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />.</summary>
      <param name="input">Uma cadeia de caracteres que representa as informações de valor do cabeçalho de autenticação.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> é uma referência <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> não é informação de valor de cabeçalho de autenticação válida.</exception>
      <returns>Uma instância <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.System#ICloneable#Clone">
      <summary>Cria um novo objeto que é uma cópia da instância <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> atual.</summary>
      <returns>Uma cópia da instância atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.ToString">
      <summary>Retorna uma cadeia de caracteres que representa o objeto <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> atual.</summary>
      <returns>Uma cadeia de caracteres que representa o objeto atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.TryParse(System.String,System.Net.Http.Headers.AuthenticationHeaderValue@)">
      <summary>Determina se uma cadeia de caracteres é uma informação <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> válida.</summary>
      <param name="input">A cadeia de caracteres a ser validada.</param>
      <param name="parsedValue">A versão <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> da cadeia de caracteres.</param>
      <returns>
        <see langword="true" /> se <paramref name="input" /> for uma informação <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> válida; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.AuthenticationHeaderValue.Parameter">
      <summary>Obtém as credenciais que contém as informações de autenticação do agente do usuário para o recurso que está sendo solicitado.</summary>
      <returns>As credenciais que contêm as informações de autenticação.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.AuthenticationHeaderValue.Scheme">
      <summary>Obtém o esquema a ser usado para autorização.</summary>
      <returns>O esquema a ser usado para autorização.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.CacheControlHeaderValue">
      <summary>Representa o valor do cabeçalho Cache-Control.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)">
      <summary>Determina se o <see cref="T:System.Object" /> especificado é igual ao objeto <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> atual.</summary>
      <param name="obj">O objeto a ser comparado com o objeto atual.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Object" /> especificado for igual ao objeto atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode">
      <summary>Serve como uma função de hash para um objeto <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />.</summary>
      <returns>Um código hash do objeto atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)">
      <summary>Converte uma cadeia de caracteres em uma instância <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />.</summary>
      <param name="input">Uma cadeia de caracteres que representa as informações de valor do cabeçalho cache-control.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> é uma referência <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> não é uma informação válida de cabeçalho cache-control.</exception>
      <returns>Uma instância de <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone">
      <summary>Cria um novo objeto que é uma cópia da instância <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> atual.</summary>
      <returns>Uma cópia da instância atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.ToString">
      <summary>Retorna uma cadeia de caracteres que representa o objeto <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> atual.</summary>
      <returns>Uma cadeia de caracteres que representa o objeto atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)">
      <summary>Determina se uma cadeia de caracteres é uma informação <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> válida.</summary>
      <param name="input">A cadeia de caracteres a ser validada.</param>
      <param name="parsedValue">A versão <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> da cadeia de caracteres.</param>
      <returns>
        <see langword="true" /> se <paramref name="input" /> for uma informação <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> válida; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.Extensions">
      <summary>Tokens de extensão de cache, cada um com um valor atribuído.</summary>
      <returns>Uma coleção de tokens de extensão de cache, cada um com um valor atribuído opcional.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxAge">
      <summary>A duração máxima, especificada em segundos, que o cliente HTTP está disposto a aceitar uma resposta.</summary>
      <returns>O tempo em segundos.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale">
      <summary>Se um cliente HTTP estiver disposto a aceitar uma resposta que ultrapassou seu horário de expiração.</summary>
      <returns>
        <see langword="true" /> Se o cliente HTTP estiver disposto a aceitar uma resposta que excedeu o tempo de expiração; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit">
      <summary>O tempo máximo, em segundos, que um cliente HTTP está disposto a aceitar uma resposta que ultrapassou seu horário de expiração.</summary>
      <returns>O tempo em segundos.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MinFresh">
      <summary>O tempo de vida de atualização, especificado em segundos, que o cliente HTTP está disposto a aceitar uma resposta.</summary>
      <returns>O tempo em segundos.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate">
      <summary>Se o servidor de origem exige revalidação de uma entrada de cache em qualquer uso posterior quando a entrada de cache se torna obsoleta.</summary>
      <returns>
        <see langword="true" /> Se o servidor de origem exigir a revalidação de uma entrada de cache em qualquer uso subsequente quando a entrada se tornar obsoleta; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoCache">
      <summary>Se um cliente HTTP está disposto a aceitar uma resposta armazenada em cache.</summary>
      <returns>
        <see langword="true" /> Se o cliente HTTP não estiver disposto a aceitar uma resposta armazenada em cache; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders">
      <summary>Uma coleção de fieldnames na diretiva "no-cache" em um campo de cabeçalho de controle de cache em uma resposta HTTP.</summary>
      <returns>Uma coleção de FieldNames.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoStore">
      <summary>Se um cache não deve armazenar nenhuma parte da mensagem de solicitação HTTP ou nenhuma resposta.</summary>
      <returns>
        <see langword="true" /> se um cache não deve armazenar nenhuma parte da mensagem de solicitação HTTP ou de qualquer resposta; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoTransform">
      <summary>Se um cache ou proxy não deve alterar nenhum aspecto do corpo da entidade.</summary>
      <returns>
        <see langword="true" /> se um cache ou proxy não deve alterar nenhum aspecto do corpo da entidade; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached">
      <summary>Se um cache deve responder usando uma entrada armazenada em cache que é consistente com as outras restrições da solicitação HTTP ou se deve responder com status 504 (Tempo Limite de Gateway).</summary>
      <returns>
        <see langword="true" /> se um cache deve responder usando uma entrada armazenada em cache que seja consistente com as outras restrições da solicitação HTTP, ou responder com o status 504 (tempo limite do gateway); caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.Private">
      <summary>Se toda ou parte da mensagem de resposta HTTP é destinada a um único usuário e não deve ser armazenada em cache por um cache compartilhado.</summary>
      <returns>
        <see langword="true" /> se a mensagem de resposta HTTP for destinada a um único usuário e não deve ser armazenada em cache por um cache compartilhado; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders">
      <summary>Uma coleção de fieldnames na diretiva "private" em um campo de cabeçalho cache-control em uma resposta HTTP.</summary>
      <returns>Uma coleção de FieldNames.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate">
      <summary>Se o servidor de origem exige revalidação de uma entrada de cache em qualquer uso posterior quando a entrada de cache se torna obsoleta para caches de agente do usuário compartilhados.</summary>
      <returns>
        <see langword="true" /> Se o servidor de origem exigir a revalidação de uma entrada de cache em qualquer uso subsequente quando a entrada ficar obsoleta para os caches do agente de usuário compartilhado; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.Public">
      <summary>Se uma resposta HTTP pode ser armazenada em cache por qualquer cache, mesmo que normalmente não fosse armazenável em cache ou fosse armazenável em cache apenas dentro de um cache não compartilhado.</summary>
      <returns>
        <see langword="true" /> se a resposta HTTP pode ser armazenada em cache por qualquer cache, mesmo que normalmente seja não armazenável em cache ou armazenável em cache somente em um cache não compartilhado; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge">
      <summary>A duração máxima compartilhada, especificada em segundos, em uma resposta HTTP que substitui a diretiva "max-age" em um cabeçalho cache-control ou um cabeçalho Expires de um cache compartilhado.</summary>
      <returns>O tempo em segundos.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ContentDispositionHeaderValue">
      <summary>Representa o valor do cabeçalho Content-Disposition.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.#ctor(System.Net.Http.Headers.ContentDispositionHeaderValue)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</summary>
      <param name="source">Um <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</summary>
      <param name="dispositionType">Uma cadeia de caracteres que contém um <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.Equals(System.Object)">
      <summary>Determina se o <see cref="T:System.Object" /> especificado é igual ao objeto <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> atual.</summary>
      <param name="obj">O objeto a ser comparado com o objeto atual.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Object" /> especificado for igual ao objeto atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.GetHashCode">
      <summary>Serve como uma função de hash para um objeto <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</summary>
      <returns>Um código hash do objeto atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.Parse(System.String)">
      <summary>Converte uma cadeia de caracteres em uma instância <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</summary>
      <param name="input">Uma cadeia de caracteres que representa as informações de valor do cabeçalho da disposição de conteúdo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> é uma referência <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> não são informações de valor do cabeçalho da disposição de conteúdo.</exception>
      <returns>Uma instância <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.System#ICloneable#Clone">
      <summary>Cria um novo objeto que é uma cópia da instância <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> atual.</summary>
      <returns>Uma cópia da instância atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.ToString">
      <summary>Retorna uma cadeia de caracteres que representa o objeto <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> atual.</summary>
      <returns>Uma cadeia de caracteres que representa o objeto atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.TryParse(System.String,System.Net.Http.Headers.ContentDispositionHeaderValue@)">
      <summary>Determina se uma cadeia de caracteres é uma informação <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> válida.</summary>
      <param name="input">A cadeia de caracteres a ser validada.</param>
      <param name="parsedValue">A versão <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> da cadeia de caracteres.</param>
      <returns>
        <see langword="true" /> se <paramref name="input" /> for uma informação <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> válida; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.CreationDate">
      <summary>A data em que o arquivo foi criado.</summary>
      <returns>A data de criação do arquivo.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.DispositionType">
      <summary>O tipo de disposição de uma parte do corpo de conteúdo.</summary>
      <returns>O tipo de disposição.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.FileName">
      <summary>Uma sugestão de como construir um nome de arquivo para armazenar o conteúdo da mensagem a ser usado se a entidade for desanexada e armazenada em um arquivo separado.</summary>
      <returns>Um nome de arquivo sugerido.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.FileNameStar">
      <summary>Uma sugestão de como construir nomes de arquivo para armazenar os conteúdos de mensagem a serem usados se as entidades forem desanexadas e armazenadas em arquivos separados.</summary>
      <returns>Um nome de arquivo sugerido no formato filename *.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.ModificationDate">
      <summary>A data em que o arquivo foi modificado pela última vez.</summary>
      <returns>A data de modificação do arquivo.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Name">
      <summary>O nome de uma parte do corpo de conteúdo.</summary>
      <returns>O nome da parte do corpo do conteúdo.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Parameters">
      <summary>Um conjunto de parâmetros incluiu o cabeçalho Content-Disposition.</summary>
      <returns>Uma coleção de parâmetros.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.ReadDate">
      <summary>A data em que o arquivo foi lido pela última vez.</summary>
      <returns>A data da última leitura.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Size">
      <summary>O tamanho aproximado, em bytes, do arquivo.</summary>
      <returns>O tamanho aproximado, em bytes.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ContentRangeHeaderValue">
      <summary>Representa o valor do cabeçalho Content-Range.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</summary>
      <param name="length">O ponto inicial ou final do intervalo, em bytes.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</summary>
      <param name="from">A posição, em bytes, na qual iniciar o envio de dados.</param>
      <param name="to">A posição, em bytes, na qual parar o envio de dados.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64,System.Int64)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</summary>
      <param name="from">A posição, em bytes, na qual iniciar o envio de dados.</param>
      <param name="to">A posição, em bytes, na qual parar o envio de dados.</param>
      <param name="length">O ponto inicial ou final do intervalo, em bytes.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.Equals(System.Object)">
      <summary>Determina se o objeto especificado é igual ao objeto <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> atual.</summary>
      <param name="obj">O objeto a ser comparado com o objeto atual.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Object" /> especificado for igual ao objeto atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.GetHashCode">
      <summary>Funciona como uma função de hash para um objeto <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</summary>
      <returns>Um código hash do objeto atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.Parse(System.String)">
      <summary>Converte uma cadeia de caracteres em uma instância <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</summary>
      <param name="input">Uma cadeia de caracteres que representa as informações de valor do cabeçalho de intervalo do conteúdo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> é uma referência <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> não é uma informação de valor do cabeçalho de intervalo de conteúdo válida.</exception>
      <returns>Uma instância <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.System#ICloneable#Clone">
      <summary>Cria um novo objeto que é uma cópia da instância <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> atual.</summary>
      <returns>Uma cópia da instância atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.ToString">
      <summary>Retorna uma cadeia de caracteres que representa o objeto <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> atual.</summary>
      <returns>Uma cadeia de caracteres que representa o objeto atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.ContentRangeHeaderValue@)">
      <summary>Determina se uma cadeia de caracteres é uma informação <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> válida.</summary>
      <param name="input">A cadeia de caracteres a ser validada.</param>
      <param name="parsedValue">A versão <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> da cadeia de caracteres.</param>
      <returns>
        <see langword="true" /> se <paramref name="input" /> for uma informação <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> válida; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.From">
      <summary>Obtém a posição na qual iniciar o envio de dados.</summary>
      <returns>A posição, em bytes, na qual iniciar o envio de dados.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.HasLength">
      <summary>Especifica se o cabeçalho Content-Range tem um comprimento especificado.</summary>
      <returns>
        <see langword="true" /> Se o intervalo de conteúdo tiver um comprimento especificado; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.HasRange">
      <summary>Especifica se o cabeçalho Content-Range tem um intervalo especificado.</summary>
      <returns>
        <see langword="true" /> se Content-Range tem um intervalo especificado. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.Length">
      <summary>Obtém o comprimento do corpo da entidade completo.</summary>
      <returns>O comprimento do corpo da entidade completa.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.To">
      <summary>Obtém a posição na qual interromper o envio de dados.</summary>
      <returns>A posição na qual interromper o envio de dados.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.Unit">
      <summary>As unidades de intervalo usadas.</summary>
      <returns>Um <see cref="T:System.String" /> que contém as unidades de intervalo.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.EntityTagHeaderValue">
      <summary>Representa um valor de cabeçalho entity-tag.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</summary>
      <param name="tag">Uma cadeia de caracteres que contém um <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</param>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</summary>
      <param name="tag">Uma cadeia de caracteres que contém um <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</param>
      <param name="isWeak">Um valor que indica se esse cabeçalho de marca da entidade é um validador fraco. Se o cabeçalho de marca da entidade é um validador fraco, <paramref name="isWeak" /> deve ser definido como <see langword="true" />. Se o cabeçalho de marca da entidade for um validador forte, <paramref name="isWeak" /> deverá ser definido como <see langword="false" />.</param>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.Equals(System.Object)">
      <summary>Determina se o <see cref="T:System.Object" /> especificado é igual ao objeto <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> atual.</summary>
      <param name="obj">O objeto a ser comparado com o objeto atual.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Object" /> especificado for igual ao objeto atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.GetHashCode">
      <summary>Funciona como uma função de hash para um objeto <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</summary>
      <returns>Um código hash do objeto atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.Parse(System.String)">
      <summary>Converte uma cadeia de caracteres em uma instância <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</summary>
      <param name="input">Uma cadeia de caracteres que representa as informações de valor do cabeçalho de marca da entidade.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> é uma referência <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> não é uma informação de valor do cabeçalho de marca da entidade válida.</exception>
      <returns>Uma instância <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.System#ICloneable#Clone">
      <summary>Cria um novo objeto que é uma cópia da instância <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> atual.</summary>
      <returns>Uma cópia da instância atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.ToString">
      <summary>Retorna uma cadeia de caracteres que representa o objeto <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> atual.</summary>
      <returns>Uma cadeia de caracteres que representa o objeto atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.TryParse(System.String,System.Net.Http.Headers.EntityTagHeaderValue@)">
      <summary>Determina se uma cadeia de caracteres é uma informação <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> válida.</summary>
      <param name="input">A cadeia de caracteres a ser validada.</param>
      <param name="parsedValue">A versão <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> da cadeia de caracteres.</param>
      <returns>
        <see langword="true" /> se <paramref name="input" /> for uma informação <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> válida; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.EntityTagHeaderValue.Any">
      <summary>Obtém o valor de cabeçalho da marca da entidade.</summary>
      <returns>Retorna <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.EntityTagHeaderValue.IsWeak">
      <summary>Descobre se a marca da entidade é precedida por um indicador de fraqueza.</summary>
      <returns>
        <see langword="true" /> se a marca de entidade for precedida por um indicador de fraqueza; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.Http.Headers.EntityTagHeaderValue.Tag">
      <summary>Obtém a cadeia de caracteres entre aspas opaca.</summary>
      <returns>Uma cadeia de caracteres entre aspas opaca.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpContentHeaders">
      <summary>Representa a coleção de Cabeçalhos de Conteúdo, conforme definido na RFC 2616.</summary>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.Allow">
      <summary>Obtém o valor do cabeçalho de conteúdo <see langword="Allow" /> em uma resposta HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="Allow" /> em uma resposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentDisposition">
      <summary>Obtém o valor do cabeçalho de conteúdo <see langword="Content-Disposition" /> em uma resposta HTTP.</summary>
      <returns>O valor do cabeçalho de conteúdo <see langword="Content-Disposition" /> em uma resposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentEncoding">
      <summary>Obtém o valor do cabeçalho de conteúdo <see langword="Content-Encoding" /> em uma resposta HTTP.</summary>
      <returns>O valor do cabeçalho de conteúdo <see langword="Content-Encoding" /> em uma resposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentLanguage">
      <summary>Obtém o valor do cabeçalho de conteúdo <see langword="Content-Language" /> em uma resposta HTTP.</summary>
      <returns>O valor do cabeçalho de conteúdo <see langword="Content-Language" /> em uma resposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentLength">
      <summary>Obtém ou define o valor do cabeçalho de conteúdo <see langword="Content-Length" /> em uma resposta HTTP.</summary>
      <returns>O valor do cabeçalho de conteúdo <see langword="Content-Length" /> em uma resposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentLocation">
      <summary>Obtém ou define o valor do cabeçalho de conteúdo <see langword="Content-Location" /> em uma resposta HTTP.</summary>
      <returns>O valor do cabeçalho de conteúdo <see langword="Content-Location" /> em uma resposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentMD5">
      <summary>Obtém ou define o valor do cabeçalho de conteúdo <see langword="Content-MD5" /> em uma resposta HTTP.</summary>
      <returns>O valor do cabeçalho de conteúdo <see langword="Content-MD5" /> em uma resposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentRange">
      <summary>Obtém ou define o valor do cabeçalho de conteúdo <see langword="Content-Range" /> em uma resposta HTTP.</summary>
      <returns>O valor do cabeçalho de conteúdo <see langword="Content-Range" /> em uma resposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentType">
      <summary>Obtém ou define o valor do cabeçalho de conteúdo <see langword="Content-Type" /> em uma resposta HTTP.</summary>
      <returns>O valor do cabeçalho de conteúdo <see langword="Content-Type" /> em uma resposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.Expires">
      <summary>Obtém ou define o valor do cabeçalho de conteúdo <see langword="Expires" /> em uma resposta HTTP.</summary>
      <returns>O valor do cabeçalho de conteúdo <see langword="Expires" /> em uma resposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.LastModified">
      <summary>Obtém ou define o valor do cabeçalho de conteúdo <see langword="Last-Modified" /> em uma resposta HTTP.</summary>
      <returns>O valor do cabeçalho de conteúdo <see langword="Last-Modified" /> em uma resposta HTTP.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpHeaders">
      <summary>Uma coleção de cabeçalhos e seus valores conforme definido na RFC 2616.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Adiciona o cabeçalho especificado e seus valores na coleção <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <param name="name">O cabeçalho a ser adicionado à coleção.</param>
      <param name="values">Uma lista de valores de cabeçalho para adicionar à coleção.</param>
      <exception cref="T:System.ArgumentException">O nome não pode ser nulo ou vazio.</exception>
      <exception cref="T:System.ArgumentNullException">Os valores não podem ser nulos ou vazios.</exception>
      <exception cref="T:System.InvalidOperationException">Nome do cabeçalho utilizado incorretamente. Verifique se os cabeçalhos de solicitação são usados com HttpRequestMessage, os cabeçalhos de resposta com HttpResponseMessage e os cabeçalhos de conteúdo com objetos HttpContent.</exception>
      <exception cref="T:System.FormatException">O formato do nome do cabeçalho é inválido.

- ou -

Caracteres de nova linha em valores de cabeçalho devem ser seguidos por um caractere de espaço em branco.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.String)">
      <summary>Adiciona o cabeçalho especificado e seu valor na coleção <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <param name="name">O cabeçalho a ser adicionado à coleção.</param>
      <param name="value">O conteúdo do cabeçalho.</param>
      <exception cref="T:System.ArgumentException">O nome não pode ser nulo ou vazio.</exception>
      <exception cref="T:System.InvalidOperationException">Nome do cabeçalho utilizado incorretamente. Verifique se os cabeçalhos de solicitação são usados com HttpRequestMessage, os cabeçalhos de resposta com HttpResponseMessage e os cabeçalhos de conteúdo com objetos HttpContent.</exception>
      <exception cref="T:System.FormatException">O formato do nome do cabeçalho é inválido.

- ou -

Caracteres de nova linha em valores de cabeçalho devem ser seguidos por um caractere de espaço em branco.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Clear">
      <summary>Remove todos os cabeçalhos da coleção <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Contains(System.String)">
      <summary>Retorna se um cabeçalho específico existe na coleção <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <param name="name">O cabeçalho específico.</param>
      <returns>
        <see langword="true" /> se o cabeçalho especificado existe na coleção; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.GetEnumerator">
      <summary>Retorna um enumerador que pode ser iterado por meio da instância <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <returns>Um enumerador para o <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.GetValues(System.String)">
      <summary>Retorna todos os valores de cabeçalho para um cabeçalho especificado armazenado na coleção <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <param name="name">O cabeçalho especificado para o qual retornar valores.</param>
      <exception cref="T:System.InvalidOperationException">O cabeçalho não foi encontrado.</exception>
      <returns>Uma matriz de cadeias de caracteres de cabeçalho.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Remove(System.String)">
      <summary>Remove o cabeçalho especificado da coleção <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <param name="name">O nome do cabeçalho a ser removido da coleção.</param>
      <returns>Retorna <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.System#Collections#IEnumerable#GetEnumerator">
      <summary>Obtém um enumerador que pode iterar por uma <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <returns>Uma instância de uma implementação de uma <see cref="T:System.Collections.IEnumerator" /> que pode iterar por uma <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.ToString">
      <summary>Retorna uma cadeia de caracteres que representa o objeto <see cref="T:System.Net.Http.Headers.HttpHeaders" /> atual.</summary>
      <returns>Uma cadeia de caracteres que representa o objeto atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Retorna um valor que indica se o cabeçalho especificado e seus valores foram adicionados para a coleção <see cref="T:System.Net.Http.Headers.HttpHeaders" /> sem validar as informações fornecidas.</summary>
      <param name="name">O cabeçalho a ser adicionado à coleção.</param>
      <param name="values">Os valores do cabeçalho.</param>
      <returns>
        <see langword="true" /> se o cabeçalho especificado <paramref name="name" /> e <paramref name="values" /> puder ser adicionado à coleção; caso contrário <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.String)">
      <summary>Retorna um valor que indica se o cabeçalho especificado e seu valor foram adicionados para a coleção <see cref="T:System.Net.Http.Headers.HttpHeaders" /> sem validar as informações fornecidas.</summary>
      <param name="name">O cabeçalho a ser adicionado à coleção.</param>
      <param name="value">O conteúdo do cabeçalho.</param>
      <returns>
        <see langword="true" /> se o cabeçalho especificado <paramref name="name" /> e <paramref name="value" /> puder ser adicionado à coleção; caso contrário <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)">
      <summary>Retorna se um cabeçalho especificado e valores especificados são armazenados na coleção <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <param name="name">O cabeçalho especificado.</param>
      <param name="values">Os valores de cabeçalho especificados.</param>
      <returns>
        <see langword="true" /> é o cabeçalho especificado <paramref name="name" /> e <see langword="values" /> são armazenados na coleção; caso contrário <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpHeaderValueCollection`1">
      <summary>Representa uma coleção de valores de cabeçalho.</summary>
      <typeparam name="T">O tipo de coleção de cabeçalho.</typeparam>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Add(`0)">
      <summary>Adiciona uma entrada a <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <param name="item">O item a adicionar à coleção de cabeçalhos.</param>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Clear">
      <summary>Remove todas as entradas do <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Contains(`0)">
      <summary>Determina se o <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> contém um item.</summary>
      <param name="item">O item a localizar para a coleção de cabeçalhos.</param>
      <returns>
        <see langword="true" /> se a entrada estiver contida na instância <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />; caso contrário, <see langword="false" /></returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.CopyTo(`0[],System.Int32)">
      <summary>Copia todo o <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> em um <see cref="T:System.Array" /> unidimensional compatível, começando no índice especificado da matriz de destino.</summary>
      <param name="array">O <see cref="T:System.Array" /> unidimensional que é o destino dos elementos copiados de <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />. O <see cref="T:System.Array" /> deve ter indexação com base em zero.</param>
      <param name="arrayIndex">O índice com base em zero em <paramref name="array" /> no qual a cópia começa.</param>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.GetEnumerator">
      <summary>Retorna um enumerador que itera por meio de <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <returns>Um enumerador para a instância <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.ParseAdd(System.String)">
      <summary>Analisa e adiciona uma entrada a <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <param name="input">A entrada a adicionar.</param>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Remove(`0)">
      <summary>Remove o item especificado da <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <param name="item">O item a ser removido.</param>
      <returns>
        <see langword="true" /> se o <paramref name="item" /> foi removido da instância de <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />; caso contrário, <see langword="false" /></returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retorna um enumerador que itera por meio de <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <returns>Um enumerador para a instância <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.ToString">
      <summary>Retorna uma cadeia de caracteres que representa o objeto <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> atual. .</summary>
      <returns>Uma cadeia de caracteres que representa o objeto atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.TryParseAdd(System.String)">
      <summary>Determina se a entrada pode ser analisada e adicionada ao <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <param name="input">A entrada para validar.</param>
      <returns>
        <see langword="true" /> se a <paramref name="input" /> puder ser analisada e adicionada à instância <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />; caso contrário, <see langword="false" /></returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpHeaderValueCollection`1.Count">
      <summary>Obtém o número de cabeçalhos na <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <returns>O número de cabeçalhos em uma coleção</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpHeaderValueCollection`1.IsReadOnly">
      <summary>Obtém um valor que indica se a instância de <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> é somente leitura.</summary>
      <returns>
        <see langword="true" /> se a instância de <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> for somente leitura, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpRequestHeaders">
      <summary>Representa a coleção de Cabeçalhos de Solicitação, conforme definido na RFC 2616.</summary>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Accept">
      <summary>Obtém o valor do cabeçalho <see langword="Accept" /> para uma solicitação HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="Accept" /> para uma solicitação HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptCharset">
      <summary>Obtém o valor do cabeçalho <see langword="Accept-Charset" /> para uma solicitação HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="Accept-Charset" /> para uma solicitação HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptEncoding">
      <summary>Obtém o valor do cabeçalho <see langword="Accept-Encoding" /> para uma solicitação HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="Accept-Encoding" /> para uma solicitação HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptLanguage">
      <summary>Obtém o valor do cabeçalho <see langword="Accept-Language" /> para uma solicitação HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="Accept-Language" /> para uma solicitação HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Authorization">
      <summary>Obtém ou define o valor do cabeçalho <see langword="Authorization" /> para uma solicitação HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="Authorization" /> para uma solicitação HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.CacheControl">
      <summary>Obtém ou define o valor do cabeçalho <see langword="Cache-Control" /> para uma solicitação HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="Cache-Control" /> para uma solicitação HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Connection">
      <summary>Obtém o valor do cabeçalho <see langword="Connection" /> para uma solicitação HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="Connection" /> para uma solicitação HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.ConnectionClose">
      <summary>Obtém ou define um valor que indica se o cabeçalho <see langword="Connection" /> para uma solicitação HTTP contém Close.</summary>
      <returns>
        <see langword="true" /> Se o <see langword="Connection" /> cabeçalho contiver fechar, caso contrário <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Date">
      <summary>Obtém ou define o valor do cabeçalho <see langword="Date" /> para uma solicitação HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="Date" /> para uma solicitação HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Expect">
      <summary>Obtém o valor do cabeçalho <see langword="Expect" /> para uma solicitação HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="Expect" /> para uma solicitação HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.ExpectContinue">
      <summary>Obtém ou define um valor que indica se o cabeçalho <see langword="Expect" /> para uma solicitação HTTP contém Continue.</summary>
      <returns>
        <see langword="true" /> Se o <see langword="Expect" /> cabeçalho contiver continuar, caso contrário <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.From">
      <summary>Obtém ou define o valor do cabeçalho <see langword="From" /> para uma solicitação HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="From" /> para uma solicitação HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Host">
      <summary>Obtém ou define o valor do cabeçalho <see langword="Host" /> para uma solicitação HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="Host" /> para uma solicitação HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfMatch">
      <summary>Obtém o valor do cabeçalho <see langword="If-Match" /> para uma solicitação HTTP.</summary>
      <returns>Retorna <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.  
  
O valor do cabeçalho <see langword="If-Match" /> para uma solicitação HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfModifiedSince">
      <summary>Obtém ou define o valor do cabeçalho <see langword="If-Modified-Since" /> para uma solicitação HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="If-Modified-Since" /> para uma solicitação HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfNoneMatch">
      <summary>Obtém o valor do cabeçalho <see langword="If-None-Match" /> para uma solicitação HTTP.</summary>
      <returns>Obtém o valor do cabeçalho <see langword="If-None-Match" /> para uma solicitação HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfRange">
      <summary>Obtém ou define o valor do cabeçalho <see langword="If-Range" /> para uma solicitação HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="If-Range" /> para uma solicitação HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfUnmodifiedSince">
      <summary>Obtém ou define o valor do cabeçalho <see langword="If-Unmodified-Since" /> para uma solicitação HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="If-Unmodified-Since" /> para uma solicitação HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.MaxForwards">
      <summary>Obtém ou define o valor do cabeçalho <see langword="Max-Forwards" /> para uma solicitação HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="Max-Forwards" /> para uma solicitação HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Pragma">
      <summary>Obtém o valor do cabeçalho <see langword="Pragma" /> para uma solicitação HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="Pragma" /> para uma solicitação HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.ProxyAuthorization">
      <summary>Obtém ou define o valor do cabeçalho <see langword="Proxy-Authorization" /> para uma solicitação HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="Proxy-Authorization" /> para uma solicitação HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Range">
      <summary>Obtém ou define o valor do cabeçalho <see langword="Range" /> para uma solicitação HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="Range" /> para uma solicitação HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Referrer">
      <summary>Obtém ou define o valor do cabeçalho <see langword="Referer" /> para uma solicitação HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="Referer" /> para uma solicitação HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.TE">
      <summary>Obtém o valor do cabeçalho <see langword="TE" /> para uma solicitação HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="TE" /> para uma solicitação HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Trailer">
      <summary>Obtém o valor do cabeçalho <see langword="Trailer" /> para uma solicitação HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="Trailer" /> para uma solicitação HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.TransferEncoding">
      <summary>Obtém o valor do cabeçalho <see langword="Transfer-Encoding" /> para uma solicitação HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="Transfer-Encoding" /> para uma solicitação HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.TransferEncodingChunked">
      <summary>Obtém ou define um valor que indica se o cabeçalho <see langword="Transfer-Encoding" /> para uma solicitação HTTP contém blocos.</summary>
      <returns>
        <see langword="true" /> se o cabeçalho <see langword="Transfer-Encoding" /> contiver blocos, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Upgrade">
      <summary>Obtém o valor do cabeçalho <see langword="Upgrade" /> para uma solicitação HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="Upgrade" /> para uma solicitação HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.UserAgent">
      <summary>Obtém o valor do cabeçalho <see langword="User-Agent" /> para uma solicitação HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="User-Agent" /> para uma solicitação HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Via">
      <summary>Obtém o valor do cabeçalho <see langword="Via" /> para uma solicitação HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="Via" /> para uma solicitação HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Warning">
      <summary>Obtém o valor do cabeçalho <see langword="Warning" /> para uma solicitação HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="Warning" /> para uma solicitação HTTP.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpResponseHeaders">
      <summary>Representa a coleção de Cabeçalhos de Resposta, conforme definido na RFC 2616.</summary>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.AcceptRanges">
      <summary>Obtém o valor do cabeçalho <see langword="Accept-Ranges" /> para uma resposta HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="Accept-Ranges" /> para uma resposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Age">
      <summary>Obtém ou define o valor do cabeçalho <see langword="Age" /> para uma resposta HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="Age" /> para uma resposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.CacheControl">
      <summary>Obtém ou define o valor do cabeçalho <see langword="Cache-Control" /> para uma resposta HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="Cache-Control" /> para uma resposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Connection">
      <summary>Obtém o valor do cabeçalho <see langword="Connection" /> para uma resposta HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="Connection" /> para uma resposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.ConnectionClose">
      <summary>Obtém ou define um valor que indica se o cabeçalho <see langword="Connection" /> para uma resposta HTTP contém Close.</summary>
      <returns>
        <see langword="true" /> Se o <see langword="Connection" /> cabeçalho contiver fechar, caso contrário <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Date">
      <summary>Obtém ou define o valor do cabeçalho <see langword="Date" /> para uma resposta HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="Date" /> para uma resposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.ETag">
      <summary>Obtém ou define o valor do cabeçalho <see langword="ETag" /> para uma resposta HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="ETag" /> para uma resposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Location">
      <summary>Obtém ou define o valor do cabeçalho <see langword="Location" /> para uma resposta HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="Location" /> para uma resposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Pragma">
      <summary>Obtém o valor do cabeçalho <see langword="Pragma" /> para uma resposta HTTP.</summary>
      <returns>Retorna <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.  
  
O valor do cabeçalho <see langword="Pragma" /> para uma resposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.ProxyAuthenticate">
      <summary>Obtém o valor do cabeçalho <see langword="Proxy-Authenticate" /> para uma resposta HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="Proxy-Authenticate" /> para uma resposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.RetryAfter">
      <summary>Obtém ou define o valor do cabeçalho <see langword="Retry-After" /> para uma resposta HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="Retry-After" /> para uma resposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Server">
      <summary>Obtém o valor do cabeçalho <see langword="Server" /> para uma resposta HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="Server" /> para uma resposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Trailer">
      <summary>Obtém o valor do cabeçalho <see langword="Trailer" /> para uma resposta HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="Trailer" /> para uma resposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.TransferEncoding">
      <summary>Obtém o valor do cabeçalho <see langword="Transfer-Encoding" /> para uma resposta HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="Transfer-Encoding" /> para uma resposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.TransferEncodingChunked">
      <summary>Obtém ou define um valor que indica se o cabeçalho <see langword="Transfer-Encoding" /> para uma resposta HTTP contém blocos.</summary>
      <returns>
        <see langword="true" /> se o cabeçalho <see langword="Transfer-Encoding" /> contiver blocos, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Upgrade">
      <summary>Obtém o valor do cabeçalho <see langword="Upgrade" /> para uma resposta HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="Upgrade" /> para uma resposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Vary">
      <summary>Obtém o valor do cabeçalho <see langword="Vary" /> para uma resposta HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="Vary" /> para uma resposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Via">
      <summary>Obtém o valor do cabeçalho <see langword="Via" /> para uma resposta HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="Via" /> para uma resposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Warning">
      <summary>Obtém o valor do cabeçalho <see langword="Warning" /> para uma resposta HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="Warning" /> para uma resposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.WwwAuthenticate">
      <summary>Obtém o valor do cabeçalho <see langword="WWW-Authenticate" /> para uma resposta HTTP.</summary>
      <returns>O valor do cabeçalho <see langword="WWW-Authenticate" /> para uma resposta HTTP.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.MediaTypeHeaderValue">
      <summary>Representa um tipo de mídia usado em um cabeçalho Content-Type, conforme definido no RFC 2616.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />.</summary>
      <param name="source">Um objeto <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> usado para inicializar a nova instância.</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />.</summary>
      <param name="mediaType">A origem representada como uma cadeia de caracteres para inicializar a nova instância.</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.Equals(System.Object)">
      <summary>Determina se o <see cref="T:System.Object" /> especificado é igual ao objeto <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> atual.</summary>
      <param name="obj">O objeto a ser comparado com o objeto atual.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Object" /> especificado for igual ao objeto atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode">
      <summary>Funciona como uma função de hash para um objeto <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />.</summary>
      <returns>Um código hash do objeto atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.Parse(System.String)">
      <summary>Converte uma cadeia de caracteres em uma instância <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />.</summary>
      <param name="input">Uma cadeia de caracteres que representa informações de valor de cabeçalho do tipo de mídia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> é uma referência <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> não são informações de cabeçalho de valor de tipo de mídia válidas.</exception>
      <returns>Uma instância de <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.System#ICloneable#Clone">
      <summary>Cria um novo objeto que é uma cópia da instância <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> atual.</summary>
      <returns>Uma cópia da instância atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.ToString">
      <summary>Retorna uma cadeia de caracteres que representa o objeto <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> atual.</summary>
      <returns>Uma cadeia de caracteres que representa o objeto atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeHeaderValue@)">
      <summary>Determina se uma cadeia de caracteres é uma informação <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> válida.</summary>
      <param name="input">A cadeia de caracteres a ser validada.</param>
      <param name="parsedValue">A versão <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> da cadeia de caracteres.</param>
      <returns>
        <see langword="true" /> se <paramref name="input" /> for uma informação <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> válida; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeHeaderValue.CharSet">
      <summary>Obtém ou define o conjunto de caracteres.</summary>
      <returns>O conjunto de caracteres.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeHeaderValue.MediaType">
      <summary>Obtém ou define o valor do cabeçalho de tipo de mídia.</summary>
      <returns>O valor do cabeçalho de tipo de mídia.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeHeaderValue.Parameters">
      <summary>Obtém ou define os parâmetros de valor de cabeçalho do tipo de mídia.</summary>
      <returns>Os parâmetros de valor de cabeçalho de tipo de mídia.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue">
      <summary>Representa um tipo de mídia com um fator de qualidade adicional usado em um cabeçalho Content-Type.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />.</summary>
      <param name="mediaType">Um <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> representado como cadeia de caracteres para inicializar a nova instância.</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />.</summary>
      <param name="mediaType">Um <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> representado como cadeia de caracteres para inicializar a nova instância.</param>
      <param name="quality">A qualidade associada a esse valor de cabeçalho.</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse(System.String)">
      <summary>Converte uma cadeia de caracteres em uma instância <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />.</summary>
      <param name="input">Uma cadeia de caracteres que representa o tipo de mídia com informações de qualidade de valor de cabeçalho.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> é uma referência <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> não é o tipo de mídia válido com informações de valor de cabeçalho de qualidade.</exception>
      <returns>Uma instância de <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.System#ICloneable#Clone">
      <summary>Cria um novo objeto que é uma cópia da instância <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> atual.</summary>
      <returns>Uma cópia da instância atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeWithQualityHeaderValue@)">
      <summary>Determina se uma cadeia de caracteres é uma informação <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> válida.</summary>
      <param name="input">A cadeia de caracteres a ser validada.</param>
      <param name="parsedValue">A versão <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> da cadeia de caracteres.</param>
      <returns>
        <see langword="true" /> se <paramref name="input" /> for uma informação <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> válida; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Quality">
      <summary>Obtém ou define o valor de qualidade para o <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />.</summary>
      <returns>O valor de qualidade do <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> objeto.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.NameValueHeaderValue">
      <summary>Representa um par nome-valor usado em vários cabeçalhos conforme definido na RFC 2616.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.Net.Http.Headers.NameValueHeaderValue)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</summary>
      <param name="source">Um objeto <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> usado para inicializar a nova instância.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</summary>
      <param name="name">O nome do cabeçalho.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</summary>
      <param name="name">O nome do cabeçalho.</param>
      <param name="value">O valor do cabeçalho.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.Equals(System.Object)">
      <summary>Determina se o <see cref="T:System.Object" /> especificado é igual ao objeto <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> atual.</summary>
      <param name="obj">O objeto a ser comparado com o objeto atual.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Object" /> especificado for igual ao objeto atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.GetHashCode">
      <summary>Funciona como uma função de hash para um objeto <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</summary>
      <returns>Um código hash do objeto atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.Parse(System.String)">
      <summary>Converte uma cadeia de caracteres em uma instância <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</summary>
      <param name="input">Uma cadeia de caracteres que representa informações de valor de cabeçalho de valor de nome.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> é uma referência <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> não consiste em informações de valor de cabeçalho de valor de nome válidas.</exception>
      <returns>Uma instância de <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.System#ICloneable#Clone">
      <summary>Cria um novo objeto que é uma cópia da instância <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> atual.</summary>
      <returns>Uma cópia da instância atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.ToString">
      <summary>Retorna uma cadeia de caracteres que representa o objeto <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> atual.</summary>
      <returns>Uma cadeia de caracteres que representa o objeto atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueHeaderValue@)">
      <summary>Determina se uma cadeia de caracteres é uma informação <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> válida.</summary>
      <param name="input">A cadeia de caracteres a ser validada.</param>
      <param name="parsedValue">A versão <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> da cadeia de caracteres.</param>
      <returns>
        <see langword="true" /> se <paramref name="input" /> for uma informação <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> válida; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.NameValueHeaderValue.Name">
      <summary>Obtém o nome do cabeçalho.</summary>
      <returns>O nome do cabeçalho.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.NameValueHeaderValue.Value">
      <summary>Obtém o valor do cabeçalho.</summary>
      <returns>O valor do cabeçalho.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue">
      <summary>Representa um par nome-valor com parâmetros usados em vários cabeçalhos, conforme definido na RFC 2616.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.Net.Http.Headers.NameValueWithParametersHeaderValue)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <param name="source">Um objeto <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> usado para inicializar a nova instância.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <param name="name">O nome do cabeçalho.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <param name="name">O nome do cabeçalho.</param>
      <param name="value">O valor do cabeçalho.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Equals(System.Object)">
      <summary>Determina se o <see cref="T:System.Object" /> especificado é igual ao objeto <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> atual.</summary>
      <param name="obj">O objeto a ser comparado com o objeto atual.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Object" /> especificado for igual ao objeto atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.GetHashCode">
      <summary>Funciona como uma função de hash para um objeto <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <returns>Um código hash do objeto atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parse(System.String)">
      <summary>Converte uma cadeia de caracteres em uma instância <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <param name="input">Uma cadeia de caracteres que representa o valor de nome com informações de valor de cabeçalho do parâmetro.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> é uma referência <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> não é o valor de nome válido com informações de valor de cabeçalho do parâmetro.</exception>
      <returns>Uma instância de <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.System#ICloneable#Clone">
      <summary>Cria um novo objeto que é uma cópia da instância <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> atual.</summary>
      <returns>Uma cópia da instância atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.ToString">
      <summary>Retorna uma cadeia de caracteres que representa o objeto <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> atual.</summary>
      <returns>Uma cadeia de caracteres que representa o objeto atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueWithParametersHeaderValue@)">
      <summary>Determina se uma cadeia de caracteres é uma informação <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> válida.</summary>
      <param name="input">A cadeia de caracteres a ser validada.</param>
      <param name="parsedValue">A versão <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> da cadeia de caracteres.</param>
      <returns>
        <see langword="true" /> se <paramref name="input" /> for uma informação <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> válida; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parameters">
      <summary>Obtém os parâmetros do objeto <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <returns>Uma coleção que contém os parâmetros.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ProductHeaderValue">
      <summary>Representa um valor de token do produto em um cabeçalho de Agente do Usuário.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />.</summary>
      <param name="name">O Nome do produto.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />.</summary>
      <param name="name">O valor de nome do produto.</param>
      <param name="version">O valor de versão do produto.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.Equals(System.Object)">
      <summary>Determina se o <see cref="T:System.Object" /> especificado é igual ao objeto <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> atual.</summary>
      <param name="obj">O objeto a ser comparado com o objeto atual.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Object" /> especificado for igual ao objeto atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.GetHashCode">
      <summary>Funciona como uma função de hash para um objeto <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />.</summary>
      <returns>Um código hash do objeto atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.Parse(System.String)">
      <summary>Converte uma cadeia de caracteres em uma instância <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />.</summary>
      <param name="input">Uma cadeia de caracteres que representa as informações de valor de cabeçalho do produto.</param>
      <returns>Uma instância de <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.System#ICloneable#Clone">
      <summary>Cria um novo objeto que é uma cópia da instância <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> atual.</summary>
      <returns>Uma cópia da instância atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.ToString">
      <summary>Retorna uma cadeia de caracteres que representa o objeto <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> atual.</summary>
      <returns>Uma cadeia de caracteres que representa o objeto atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.TryParse(System.String,System.Net.Http.Headers.ProductHeaderValue@)">
      <summary>Determina se uma cadeia de caracteres é uma informação <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> válida.</summary>
      <param name="input">A cadeia de caracteres a ser validada.</param>
      <param name="parsedValue">A versão <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> da cadeia de caracteres.</param>
      <returns>
        <see langword="true" /> se <paramref name="input" /> for uma informação <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> válida; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ProductHeaderValue.Name">
      <summary>Obtém o nome do token de produto.</summary>
      <returns>O nome do token do produto.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ProductHeaderValue.Version">
      <summary>Obtém a versão do token do produto.</summary>
      <returns>A versão do token do produto.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ProductInfoHeaderValue">
      <summary>Representa um valor que pode ser um produto ou um comentário em um cabeçalho de Agente do Usuário.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.Net.Http.Headers.ProductHeaderValue)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <param name="product">Um objeto <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> usado para inicializar a nova instância.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <param name="comment">Um valor de comentário.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <param name="productName">O valor de nome do produto.</param>
      <param name="productVersion">O valor de versão do produto.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.Equals(System.Object)">
      <summary>Determina se o <see cref="T:System.Object" /> especificado é igual ao objeto <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> atual.</summary>
      <param name="obj">O objeto a ser comparado com o objeto atual.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Object" /> especificado for igual ao objeto atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.GetHashCode">
      <summary>Funciona como uma função de hash para um objeto <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <returns>Um código hash do objeto atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.Parse(System.String)">
      <summary>Converte uma cadeia de caracteres em uma instância <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <param name="input">Uma cadeia de caracteres que representa as informações de valor de cabeçalho de informações do produto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> é uma referência <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> não consiste em informações de valor de cabeçalho de produto válidas.</exception>
      <returns>Uma instância de <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.System#ICloneable#Clone">
      <summary>Cria um novo objeto que é uma cópia da instância <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> atual.</summary>
      <returns>Uma cópia da instância atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.ToString">
      <summary>Retorna uma cadeia de caracteres que representa o objeto <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> atual.</summary>
      <returns>Uma cadeia de caracteres que representa o objeto atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.TryParse(System.String,System.Net.Http.Headers.ProductInfoHeaderValue@)">
      <summary>Determina se uma cadeia de caracteres é uma informação <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> válida.</summary>
      <param name="input">A cadeia de caracteres a ser validada.</param>
      <param name="parsedValue">A versão <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> da cadeia de caracteres.</param>
      <returns>
        <see langword="true" /> se <paramref name="input" /> for uma informação <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> válida; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ProductInfoHeaderValue.Comment">
      <summary>Obtém o comentário do objeto <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <returns>O valor do comentário <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> .</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ProductInfoHeaderValue.Product">
      <summary>Obtém o produto do objeto <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <returns>O valor do produto deste <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> .</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RangeConditionHeaderValue">
      <summary>Representa um valor de cabeçalho If-Range que pode ser um valor de data/hora ou um valor de marca da entidade.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.DateTimeOffset)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <param name="date">Um valor de data usado para inicializar a nova instância.</param>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.Net.Http.Headers.EntityTagHeaderValue)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <param name="entityTag">Um objeto <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> usado para inicializar a nova instância.</param>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <param name="entityTag">Uma marca da entidade representada como uma cadeia de caracteres usada para inicializar a nova instância.</param>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.Equals(System.Object)">
      <summary>Determina se o <see cref="T:System.Object" /> especificado é igual ao objeto <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> atual.</summary>
      <param name="obj">O objeto a ser comparado com o objeto atual.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Object" /> especificado for igual ao objeto atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.GetHashCode">
      <summary>Funciona como uma função de hash para um objeto <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <returns>Um código hash do objeto atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.Parse(System.String)">
      <summary>Converte uma cadeia de caracteres em uma instância <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <param name="input">Uma cadeia de caracteres que representa as informações de valor do cabeçalho da condição de intervalo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> é uma referência <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> não é uma informação de valor do cabeçalho da Condição de intervalo válida.</exception>
      <returns>Uma instância de <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.System#ICloneable#Clone">
      <summary>Cria um novo objeto que é uma cópia da instância <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> atual.</summary>
      <returns>Uma cópia da instância atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.ToString">
      <summary>Retorna uma cadeia de caracteres que representa o objeto <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> atual.</summary>
      <returns>Uma cadeia de caracteres que representa o objeto atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeConditionHeaderValue@)">
      <summary>Determina se uma cadeia de caracteres é uma informação <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> válida.</summary>
      <param name="input">A cadeia de caracteres a ser validada.</param>
      <param name="parsedValue">A versão <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> da cadeia de caracteres.</param>
      <returns>
        <see langword="true" /> se <paramref name="input" /> for uma informação <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> válida; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeConditionHeaderValue.Date">
      <summary>Obtém a data do objeto <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <returns>A data do <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> objeto.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeConditionHeaderValue.EntityTag">
      <summary>Obtém a marca da entidade do objeto <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <returns>A marca de entidade do <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> objeto.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RangeHeaderValue">
      <summary>Representa um valor de cabeçalho de intervalo.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> com um intervalo de bytes.</summary>
      <param name="from">A posição na qual iniciar o envio de dados.</param>
      <param name="to">A posição na qual interromper o envio de dados.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="from" /> é maior que <paramref name="to" />  
  
- ou - 
 <paramref name="from" /> ou <paramref name="to" /> é menor que 0.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.Equals(System.Object)">
      <summary>Determina se o <see cref="T:System.Object" /> especificado é igual ao objeto <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> atual.</summary>
      <param name="obj">O objeto a ser comparado com o objeto atual.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Object" /> especificado for igual ao objeto atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.GetHashCode">
      <summary>Funciona como uma função de hash para um objeto <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</summary>
      <returns>Um código hash do objeto atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.Parse(System.String)">
      <summary>Converte uma cadeia de caracteres em uma instância <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</summary>
      <param name="input">Uma cadeia de caracteres que representa as informações de valor do cabeçalho de intervalo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> é uma referência <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> não é uma informação de valor do cabeçalho de intervalo válida.</exception>
      <returns>Uma instância de <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.System#ICloneable#Clone">
      <summary>Cria um novo objeto que é uma cópia da instância <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> atual.</summary>
      <returns>Uma cópia da instância atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.ToString">
      <summary>Retorna uma cadeia de caracteres que representa o objeto <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> atual.</summary>
      <returns>Uma cadeia de caracteres que representa o objeto atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeHeaderValue@)">
      <summary>Determina se uma cadeia de caracteres é uma informação <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> válida.</summary>
      <param name="input">A cadeia de caracteres a validar.</param>
      <param name="parsedValue">A versão <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> da cadeia de caracteres.</param>
      <returns>
        <see langword="true" /> se <paramref name="input" /> for uma informação <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> válida; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeHeaderValue.Ranges">
      <summary>Obtém os intervalos especificados do objeto <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</summary>
      <returns>Os intervalos do <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> objeto.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeHeaderValue.Unit">
      <summary>Obtém a unidade do objeto <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</summary>
      <returns>A unidade do <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> objeto.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RangeItemHeaderValue">
      <summary>Representa um intervalo de bytes em um valor de cabeçalho de intervalo.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" />.</summary>
      <param name="from">A posição na qual iniciar o envio de dados.</param>
      <param name="to">A posição na qual interromper o envio de dados.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="from" /> é maior que <paramref name="to" />  
  
- ou - 
 <paramref name="from" /> ou <paramref name="to" /> é menor que 0.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.Equals(System.Object)">
      <summary>Determina se o <see cref="T:System.Object" /> especificado é igual ao objeto <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> atual.</summary>
      <param name="obj">O objeto a ser comparado com o objeto atual.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Object" /> especificado for igual ao objeto atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.GetHashCode">
      <summary>Funciona como uma função de hash para um objeto <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" />.</summary>
      <returns>Um código hash do objeto atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.System#ICloneable#Clone">
      <summary>Cria um novo objeto que é uma cópia da instância <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> atual.</summary>
      <returns>Uma cópia da instância atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.ToString">
      <summary>Retorna uma cadeia de caracteres que representa o objeto <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> atual.</summary>
      <returns>Uma cadeia de caracteres que representa o objeto atual.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeItemHeaderValue.From">
      <summary>Obtém a posição na qual iniciar o envio de dados.</summary>
      <returns>A posição na qual iniciar o envio de dados.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeItemHeaderValue.To">
      <summary>Obtém a posição na qual interromper o envio de dados.</summary>
      <returns>A posição na qual interromper o envio de dados.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RetryConditionHeaderValue">
      <summary>Representa um valor de cabeçalho Retry-After que pode ser um valor de data/hora ou um intervalo de tempo.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.DateTimeOffset)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <param name="date">O deslocamento de data e hora usado para inicializar a nova instância.</param>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.TimeSpan)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <param name="delta">O delta, em segundos, usado para inicializar a nova instância.</param>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.Equals(System.Object)">
      <summary>Determina se o <see cref="T:System.Object" /> especificado é igual ao objeto <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> atual.</summary>
      <param name="obj">O objeto a ser comparado com o objeto atual.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Object" /> especificado for igual ao objeto atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.GetHashCode">
      <summary>Funciona como uma função de hash para um objeto <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <returns>Um código hash do objeto atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.Parse(System.String)">
      <summary>Converte uma cadeia de caracteres em uma instância <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <param name="input">Uma cadeia de caracteres que representa as informações de valor do cabeçalho da condição de repetição.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> é uma referência <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> não é uma informação de valor do cabeçalho da condição de repetição válida.</exception>
      <returns>Uma instância de <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.System#ICloneable#Clone">
      <summary>Cria um novo objeto que é uma cópia da instância <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> atual.</summary>
      <returns>Uma cópia da instância atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.ToString">
      <summary>Retorna uma cadeia de caracteres que representa o objeto <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> atual.</summary>
      <returns>Uma cadeia de caracteres que representa o objeto atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.TryParse(System.String,System.Net.Http.Headers.RetryConditionHeaderValue@)">
      <summary>Determina se uma cadeia de caracteres é uma informação <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> válida.</summary>
      <param name="input">A cadeia de caracteres a ser validada.</param>
      <param name="parsedValue">A versão <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> da cadeia de caracteres.</param>
      <returns>
        <see langword="true" /> se <paramref name="input" /> for uma informação <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> válida; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RetryConditionHeaderValue.Date">
      <summary>Obtém o deslocamento de data e hora do objeto <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <returns>O deslocamento de data e hora do <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> objeto.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RetryConditionHeaderValue.Delta">
      <summary>Obtém o delta em segundos do objeto <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <returns>O Delta, em segundos, do <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> objeto.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.StringWithQualityHeaderValue">
      <summary>Representa um valor de cabeçalho de cadeia de caracteres com uma qualidade opcional.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <param name="value">A cadeia de caracteres usada para inicializar a nova instância.</param>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <param name="value">Uma cadeia de caracteres usada para inicializar a nova instância.</param>
      <param name="quality">Um fator de qualidade usado para inicializar a nova instância.</param>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.Equals(System.Object)">
      <summary>Determina se o objeto especificado é igual ao objeto <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> atual.</summary>
      <param name="obj">O objeto a ser comparado com o objeto atual.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Object" /> especificado for igual ao objeto atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode">
      <summary>Funciona como uma função de hash para um objeto <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <returns>Um código hash do objeto atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.Parse(System.String)">
      <summary>Converte uma cadeia de caracteres em uma instância <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <param name="input">Uma cadeia de caracteres que representa as informações de valor do cabeçalho de qualidade.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> é uma referência <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> não é uma cadeia de caracteres válida com informações de valor do cabeçalho de qualidade.</exception>
      <returns>Uma instância de <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.System#ICloneable#Clone">
      <summary>Cria um novo objeto que é uma cópia da instância <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> atual.</summary>
      <returns>Uma cópia da instância atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.ToString">
      <summary>Retorna uma cadeia de caracteres que representa o objeto <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> atual.</summary>
      <returns>Uma cadeia de caracteres que representa o objeto atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.StringWithQualityHeaderValue@)">
      <summary>Determina se uma cadeia de caracteres é uma informação <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> válida.</summary>
      <param name="input">A cadeia de caracteres a ser validada.</param>
      <param name="parsedValue">A versão <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> da cadeia de caracteres.</param>
      <returns>
        <see langword="true" /> se <paramref name="input" /> for uma informação <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> válida; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.StringWithQualityHeaderValue.Quality">
      <summary>Obtém o fator de qualidade do objeto <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <returns>O fator de qualidade do <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> objeto.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.StringWithQualityHeaderValue.Value">
      <summary>Obtém o valor da cadeia de caracteres do objeto <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <returns>O valor da cadeia de caracteres do <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> objeto.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.TransferCodingHeaderValue">
      <summary>Representa um valor de cabeçalho de codificação de aceitação.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.#ctor(System.Net.Http.Headers.TransferCodingHeaderValue)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />.</summary>
      <param name="source">Um objeto <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> usado para inicializar a nova instância.</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />.</summary>
      <param name="value">Uma cadeia de caracteres usada para inicializar a nova instância.</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.Equals(System.Object)">
      <summary>Determina se o objeto especificado é igual ao objeto <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> atual.</summary>
      <param name="obj">O objeto a ser comparado com o objeto atual.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Object" /> especificado for igual ao objeto atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.GetHashCode">
      <summary>Funciona como uma função de hash para um objeto <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />.</summary>
      <returns>Um código hash do objeto atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.Parse(System.String)">
      <summary>Converte uma cadeia de caracteres em uma instância <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />.</summary>
      <param name="input">Uma cadeia de caracteres que representa informações de valor de cabeçalho de codificação de transferência.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> é uma referência <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> não representa informações de valor de cabeçalho de codificação de transferência válidas.</exception>
      <returns>Uma instância de <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.System#ICloneable#Clone">
      <summary>Cria um novo objeto que é uma cópia da instância <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> atual.</summary>
      <returns>Uma cópia da instância atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.ToString">
      <summary>Retorna uma cadeia de caracteres que representa o objeto <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> atual.</summary>
      <returns>Uma cadeia de caracteres que representa o objeto atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingHeaderValue@)">
      <summary>Determina se uma cadeia de caracteres é uma informação <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> válida.</summary>
      <param name="input">A cadeia de caracteres a ser validada.</param>
      <param name="parsedValue">A versão <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> da cadeia de caracteres.</param>
      <returns>
        <see langword="true" /> se <paramref name="input" /> for uma informação <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> válida; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.TransferCodingHeaderValue.Parameters">
      <summary>Obtém os parâmetros de codificação de transferência.</summary>
      <returns>Os parâmetros de codificação de transferência.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.TransferCodingHeaderValue.Value">
      <summary>Obtém o valor de codificação de transferência.</summary>
      <returns>O valor de codificação de transferência.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue">
      <summary>Representa um valor de cabeçalho Accept-Encoding com fator de qualidade opcional.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />.</summary>
      <param name="value">Uma cadeia de caracteres usada para inicializar a nova instância.</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />.</summary>
      <param name="value">Uma cadeia de caracteres usada para inicializar a nova instância.</param>
      <param name="quality">Um valor para o fator de qualidade.</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Parse(System.String)">
      <summary>Converte uma cadeia de caracteres em uma instância <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />.</summary>
      <param name="input">Uma cadeia de caracteres que representa informações de valor de codificação de transferência.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> é uma referência <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> não representa informações de qualidade de valor de cabeçalho de codificação de transferência válidas.</exception>
      <returns>Uma instância de <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.System#ICloneable#Clone">
      <summary>Cria um novo objeto que é uma cópia da instância <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> atual.</summary>
      <returns>Uma cópia da instância atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingWithQualityHeaderValue@)">
      <summary>Determina se uma cadeia de caracteres é uma informação <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> válida.</summary>
      <param name="input">A cadeia de caracteres a ser validada.</param>
      <param name="parsedValue">A versão <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> da cadeia de caracteres.</param>
      <returns>
        <see langword="true" /> se <paramref name="input" /> for uma informação <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> válida; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Quality">
      <summary>Obtém o fator de qualidade do <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />.</summary>
      <returns>O fator de qualidade do <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> .</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ViaHeaderValue">
      <summary>Representa o valor de um cabeçalho Via.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</summary>
      <param name="protocolVersion">A versão de protocolo do protocolo recebida.</param>
      <param name="receivedBy">O host e a porta pela qual a solicitação ou resposta foi recebida.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</summary>
      <param name="protocolVersion">A versão de protocolo do protocolo recebida.</param>
      <param name="receivedBy">O host e a porta pela qual a solicitação ou resposta foi recebida.</param>
      <param name="protocolName">O nome de protocolo do protocolo recebido.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</summary>
      <param name="protocolVersion">A versão de protocolo do protocolo recebida.</param>
      <param name="receivedBy">O host e a porta pela qual a solicitação ou resposta foi recebida.</param>
      <param name="protocolName">O nome de protocolo do protocolo recebido.</param>
      <param name="comment">O campo de comentário usado para identificar o software do gateway ou proxy do destinatário.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.Equals(System.Object)">
      <summary>Determina se o <see cref="T:System.Object" /> especificado é igual ao objeto <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> atual.</summary>
      <param name="obj">O objeto a ser comparado com o objeto atual.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Object" /> especificado for igual ao objeto atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.GetHashCode">
      <summary>Funciona como uma função de hash para um objeto <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</summary>
      <returns>Um código hash do objeto atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.Parse(System.String)">
      <summary>Converte uma cadeia de caracteres em uma instância <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</summary>
      <param name="input">Uma cadeia de caracteres que representa as informações de valor por meio do cabeçalho.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> é uma referência <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> não é válido por meio de informações de valor de cabeçalho.</exception>
      <returns>Uma instância de <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.System#ICloneable#Clone">
      <summary>Cria um novo objeto que é uma cópia da instância <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> atual.</summary>
      <returns>Uma cópia da instância atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.ToString">
      <summary>Retorna uma cadeia de caracteres que representa o objeto <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> atual.</summary>
      <returns>Uma cadeia de caracteres que representa o objeto atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.TryParse(System.String,System.Net.Http.Headers.ViaHeaderValue@)">
      <summary>Determina se uma cadeia de caracteres é uma informação <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> válida.</summary>
      <param name="input">A cadeia de caracteres a ser validada.</param>
      <param name="parsedValue">A versão <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> da cadeia de caracteres.</param>
      <returns>
        <see langword="true" /> se <paramref name="input" /> for uma informação <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> válida; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.Comment">
      <summary>Obtém o campo de comentário usado para identificar o software do gateway ou proxy do destinatário.</summary>
      <returns>O campo de comentário usado para identificar o software do gateway ou proxy do destinatário.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.ProtocolName">
      <summary>Obtém o nome de protocolo do protocolo recebido.</summary>
      <returns>O nome do protocolo.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.ProtocolVersion">
      <summary>Obtém a versão de protocolo do protocolo recebido.</summary>
      <returns>A versão do protocolo.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.ReceivedBy">
      <summary>Obtém o host e a porta pela qual a solicitação ou resposta foi recebida.</summary>
      <returns>O host e a porta pela qual a solicitação ou resposta foi recebida.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.WarningHeaderValue">
      <summary>Representa um valor de aviso usado pelo cabeçalho Warning.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />.</summary>
      <param name="code">O código de aviso específico.</param>
      <param name="agent">O host que anexou o aviso.</param>
      <param name="text">Uma cadeia de caracteres entre aspas que contém o texto de aviso.</param>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String,System.DateTimeOffset)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />.</summary>
      <param name="code">O código de aviso específico.</param>
      <param name="agent">O host que anexou o aviso.</param>
      <param name="text">Uma cadeia de caracteres entre aspas que contém o texto de aviso.</param>
      <param name="date">O carimbo de data/hora do aviso.</param>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.Equals(System.Object)">
      <summary>Determina se o <see cref="T:System.Object" /> especificado é igual ao objeto <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> atual.</summary>
      <param name="obj">O objeto a ser comparado com o objeto atual.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Object" /> especificado for igual ao objeto atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.GetHashCode">
      <summary>Funciona como uma função de hash para um objeto <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />.</summary>
      <returns>Um código hash do objeto atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.Parse(System.String)">
      <summary>Converte uma cadeia de caracteres em uma instância <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />.</summary>
      <param name="input">Uma cadeia de caracteres que representa as informações de valor do cabeçalho de autenticação.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> é uma referência <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> não é informação de valor de cabeçalho de autenticação válida.</exception>
      <returns>Retorna uma instância <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.System#ICloneable#Clone">
      <summary>Cria um novo objeto que é uma cópia da instância <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> atual.</summary>
      <returns>Retorna uma cópia da instância atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.ToString">
      <summary>Retorna uma cadeia de caracteres que representa o objeto <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> atual.</summary>
      <returns>Uma cadeia de caracteres que representa o objeto atual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.TryParse(System.String,System.Net.Http.Headers.WarningHeaderValue@)">
      <summary>Determina se uma cadeia de caracteres é uma informação <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> válida.</summary>
      <param name="input">A cadeia de caracteres a ser validada.</param>
      <param name="parsedValue">A versão <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> da cadeia de caracteres.</param>
      <returns>
        <see langword="true" /> se <paramref name="input" /> for uma informação <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> válida; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Agent">
      <summary>Obtém o host que anexou o aviso.</summary>
      <returns>O host que anexou o aviso.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Code">
      <summary>Obtém o código de aviso específico.</summary>
      <returns>O código de aviso específico.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Date">
      <summary>Obtém o carimbo de data/hora do aviso.</summary>
      <returns>O carimbo de data/hora do aviso.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Text">
      <summary>Obtém uma cadeia de caracteres entre aspas que contém o texto de aviso.</summary>
      <returns>Uma cadeia de caracteres entre aspas que contém o texto de aviso.</returns>
    </member>
    <member name="T:System.Net.Http.HttpClient">
      <summary>Fornece uma classe base para enviar solicitações HTTP e receber respostas HTTP de um recurso identificado por um URI.</summary>
    </member>
    <member name="M:System.Net.Http.HttpClient.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.HttpClient" /> usando um <see cref="T:System.Net.Http.HttpClientHandler" /> que é descartado quando essa instância é descartada.</summary>
    </member>
    <member name="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.HttpClient" /> com o manipulador especificado. O manipulador é descartado quando essa instância é descartada.</summary>
      <param name="handler">A pilha do manipulador HTTP a ser usada para enviar solicitações.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="handler" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.HttpClient" /> com o manipulador fornecido e especifica se esse manipulador deverá ser descartado quando essa instância for descartada.</summary>
      <param name="handler">O <see cref="T:System.Net.Http.HttpMessageHandler" /> responsável por processar as mensagens de resposta HTTP.</param>
      <param name="disposeHandler">
        <see langword="true" /> se o manipulador interno precisar ser descartado por HttpClient.Dispose, <see langword="false" /> se você quiser reutilizar o manipulador interno.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="handler" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.CancelPendingRequests">
      <summary>Cancele todas as solicitações pendentes nessa instância.</summary>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.String)">
      <summary>Envie uma solicitação DELETE para o URI especificado como uma operação assíncrona.</summary>
      <param name="requestUri">O URI ao qual a solicitação é enviada.</param>
      <exception cref="T:System.InvalidOperationException">A mensagem de solicitação já foi enviada pela instância <see cref="T:System.Net.Http.HttpClient" />.

- ou -

O <paramref name="requestUri" /> não é um URI absoluto.

- ou -

<see cref="P:System.Net.Http.HttpClient.BaseAddress" /> não está definido.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">A solicitação falhou devido a um problema subjacente, como conectividade de rede, falha de DNS, validação de certificado do servidor ou tempo limite.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Somente .NET Core e .NET 5.0 e posterior: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
      <summary>Envie uma solicitação DELETE para o URI especificado com um token de cancelamento como uma operação assíncrona.</summary>
      <param name="requestUri">O URI ao qual a solicitação é enviada.</param>
      <param name="cancellationToken">Um token de cancelamento que pode ser usado por outros objetos ou threads para receber um aviso de cancelamento.</param>
      <exception cref="T:System.InvalidOperationException">A mensagem de solicitação já foi enviada pela instância <see cref="T:System.Net.Http.HttpClient" />.

- ou -

O <paramref name="requestUri" /> não é um URI absoluto.

- ou -

<see cref="P:System.Net.Http.HttpClient.BaseAddress" /> não está definido.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">A solicitação falhou devido a um problema subjacente, como conectividade de rede, falha de DNS, validação de certificado do servidor ou tempo limite.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Somente .NET Core e .NET 5.0 e posterior: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)">
      <summary>Envie uma solicitação DELETE para o URI especificado como uma operação assíncrona.</summary>
      <param name="requestUri">O URI ao qual a solicitação é enviada.</param>
      <exception cref="T:System.InvalidOperationException">A mensagem de solicitação já foi enviada pela instância <see cref="T:System.Net.Http.HttpClient" />.

- ou -

O <paramref name="requestUri" /> não é um URI absoluto.

- ou -

<see cref="P:System.Net.Http.HttpClient.BaseAddress" /> não está definido.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">A solicitação falhou devido a um problema subjacente, como conectividade de rede, falha de DNS, validação de certificado do servidor ou tempo limite.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Somente .NET Core e .NET 5.0 e posterior: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
      <summary>Envie uma solicitação DELETE para o URI especificado com um token de cancelamento como uma operação assíncrona.</summary>
      <param name="requestUri">O URI ao qual a solicitação é enviada.</param>
      <param name="cancellationToken">Um token de cancelamento que pode ser usado por outros objetos ou threads para receber um aviso de cancelamento.</param>
      <exception cref="T:System.InvalidOperationException">A mensagem de solicitação já foi enviada pela instância <see cref="T:System.Net.Http.HttpClient" />.

- ou -

O <paramref name="requestUri" /> não é um URI absoluto.

- ou -

<see cref="P:System.Net.Http.HttpClient.BaseAddress" /> não está definido.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">A solicitação falhou devido a um problema subjacente, como conectividade de rede, falha de DNS, validação de certificado do servidor ou tempo limite.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Somente .NET Core e .NET 5.0 e posterior: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.Net.Http.HttpClient" /> e, opcionalmente, descarta os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String)">
      <summary>Envie uma solicitação GET para o URI especificado como uma operação assíncrona.</summary>
      <param name="requestUri">O URI ao qual a solicitação é enviada.</param>
      <exception cref="T:System.InvalidOperationException">O <paramref name="requestUri" /> deve ser um URI absoluto ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> deve ser definido.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">A solicitação falhou devido a um problema subjacente, como conectividade de rede, falha de DNS, validação de certificado do servidor ou tempo limite.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Somente .NET Core e .NET 5.0 e posterior: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)">
      <summary>Envie uma solicitação GET para o URI especificado com uma opção de conclusão de HTTP como uma operação assíncrona.</summary>
      <param name="requestUri">O URI ao qual a solicitação é enviada.</param>
      <param name="completionOption">Um valor de opção de conclusão de HTTP que indica quando a operação deve ser considerada concluída.</param>
      <exception cref="T:System.InvalidOperationException">O <paramref name="requestUri" /> deve ser um URI absoluto ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> deve ser definido.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">A solicitação falhou devido a um problema subjacente, como conectividade de rede, falha de DNS, validação de certificado do servidor ou tempo limite.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Somente .NET Core e .NET 5.0 e posterior: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary>Envie uma solicitação GET para o URI especificado com uma opção de conclusão de HTTP e um token de cancelamento como uma operação assíncrona.</summary>
      <param name="requestUri">O URI ao qual a solicitação é enviada.</param>
      <param name="completionOption">Um valor de opção de conclusão de HTTP que indica quando a operação deve ser considerada concluída.</param>
      <param name="cancellationToken">Um token de cancelamento que pode ser usado por outros objetos ou threads para receber um aviso de cancelamento.</param>
      <exception cref="T:System.InvalidOperationException">O <paramref name="requestUri" /> deve ser um URI absoluto ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> deve ser definido.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">A solicitação falhou devido a um problema subjacente, como conectividade de rede, falha de DNS, validação de certificado do servidor ou tempo limite.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Somente .NET Core e .NET 5.0 e posterior: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)">
      <summary>Envie uma solicitação GET para o URI especificado com um token de cancelamento como uma operação assíncrona.</summary>
      <param name="requestUri">O URI ao qual a solicitação é enviada.</param>
      <param name="cancellationToken">Um token de cancelamento que pode ser usado por outros objetos ou threads para receber um aviso de cancelamento.</param>
      <exception cref="T:System.InvalidOperationException">O <paramref name="requestUri" /> deve ser um URI absoluto ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> deve ser definido.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">A solicitação falhou devido a um problema subjacente, como conectividade de rede, falha de DNS, validação de certificado do servidor ou tempo limite.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Somente .NET Core e .NET 5.0 e posterior: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri)">
      <summary>Envie uma solicitação GET para o URI especificado como uma operação assíncrona.</summary>
      <param name="requestUri">O URI ao qual a solicitação é enviada.</param>
      <exception cref="T:System.InvalidOperationException">O <paramref name="requestUri" /> deve ser um URI absoluto ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> deve ser definido.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">A solicitação falhou devido a um problema subjacente, como conectividade de rede, falha de DNS, validação de certificado do servidor ou tempo limite.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Somente .NET Core e .NET 5.0 e posterior: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)">
      <summary>Envie uma solicitação GET para o URI especificado com uma opção de conclusão de HTTP como uma operação assíncrona.</summary>
      <param name="requestUri">O URI ao qual a solicitação é enviada.</param>
      <param name="completionOption">Um valor de opção de conclusão de HTTP que indica quando a operação deve ser considerada concluída.</param>
      <exception cref="T:System.InvalidOperationException">O <paramref name="requestUri" /> deve ser um URI absoluto ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> deve ser definido.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">A solicitação falhou devido a um problema subjacente, como conectividade de rede, falha de DNS, validação de certificado do servidor ou tempo limite.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Somente .NET Core e .NET 5.0 e posterior: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary>Envie uma solicitação GET para o URI especificado com uma opção de conclusão de HTTP e um token de cancelamento como uma operação assíncrona.</summary>
      <param name="requestUri">O URI ao qual a solicitação é enviada.</param>
      <param name="completionOption">Um valor de opção de conclusão de HTTP que indica quando a operação deve ser considerada concluída.</param>
      <param name="cancellationToken">Um token de cancelamento que pode ser usado por outros objetos ou threads para receber um aviso de cancelamento.</param>
      <exception cref="T:System.InvalidOperationException">O <paramref name="requestUri" /> deve ser um URI absoluto ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> deve ser definido.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">A solicitação falhou devido a um problema subjacente, como conectividade de rede, falha de DNS, validação de certificado do servidor ou tempo limite.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Somente .NET Core e .NET 5.0 e posterior: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)">
      <summary>Envie uma solicitação GET para o URI especificado com um token de cancelamento como uma operação assíncrona.</summary>
      <param name="requestUri">O URI ao qual a solicitação é enviada.</param>
      <param name="cancellationToken">Um token de cancelamento que pode ser usado por outros objetos ou threads para receber um aviso de cancelamento.</param>
      <exception cref="T:System.InvalidOperationException">O <paramref name="requestUri" /> deve ser um URI absoluto ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> deve ser definido.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">A solicitação falhou devido a um problema subjacente, como conectividade de rede, falha de DNS, validação de certificado do servidor ou tempo limite.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Somente .NET Core e .NET 5.0 e posterior: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)">
      <summary>Envia uma solicitação GET para o Uri especificado e retorna o corpo da resposta como uma matriz de bytes em uma operação assíncrona.</summary>
      <param name="requestUri">O URI ao qual a solicitação é enviada.</param>
      <exception cref="T:System.InvalidOperationException">O <paramref name="requestUri" /> deve ser um URI absoluto ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> deve ser definido.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">A solicitação falhou devido a um problema subjacente, como conectividade de rede, falha de DNS, validação de certificado do servidor ou tempo limite.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Somente .NET Core e .NET 5.0 e posterior: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String,System.Threading.CancellationToken)">
      <summary>Envia uma solicitação GET para o Uri especificado e retorna o corpo da resposta como uma matriz de bytes em uma operação assíncrona.</summary>
      <param name="requestUri">O URI ao qual a solicitação é enviada.</param>
      <param name="cancellationToken">O token de cancelamento para cancelar a operação.</param>
      <exception cref="T:System.Net.Http.HttpRequestException">A solicitação falhou devido a um problema subjacente, como conectividade de rede, falha de DNS, validação de certificado do servidor (ou tempo limite somente para .NET Framework).</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Somente .NET Core e .NET 5.0 e posterior: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)">
      <summary>Envie uma solicitação GET para o URI especificado e retorne o corpo da resposta como uma matriz de bytes em uma operação assíncrona.</summary>
      <param name="requestUri">O URI ao qual a solicitação é enviada.</param>
      <exception cref="T:System.InvalidOperationException">O <paramref name="requestUri" /> deve ser um URI absoluto ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> deve ser definido.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">A solicitação falhou devido a um problema subjacente, como conectividade de rede, falha de DNS, validação de certificado do servidor (ou tempo limite somente para .NET Framework).</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Somente .NET Core e .NET 5.0 e posterior: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri,System.Threading.CancellationToken)">
      <summary>Envie uma solicitação GET para o URI especificado e retorne o corpo da resposta como uma matriz de bytes em uma operação assíncrona.</summary>
      <param name="requestUri">O URI ao qual a solicitação é enviada.</param>
      <param name="cancellationToken">O token de cancelamento para cancelar a operação.</param>
      <exception cref="T:System.Net.Http.HttpRequestException">A solicitação falhou devido a um problema subjacente, como conectividade de rede, falha de DNS, validação de certificado do servidor (ou tempo limite somente para .NET Framework).</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Somente .NET Core e .NET 5.0 e posterior: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)">
      <summary>Envie uma solicitação GET para o URI especificado e retorne o corpo da resposta como um fluxo em uma operação assíncrona.</summary>
      <param name="requestUri">O URI ao qual a solicitação é enviada.</param>
      <exception cref="T:System.InvalidOperationException">O <paramref name="requestUri" /> deve ser um URI absoluto ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> deve ser definido.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">A solicitação falhou devido a um problema subjacente, como conectividade de rede, falha de DNS, validação de certificado do servidor (ou tempo limite somente para .NET Framework).</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Somente .NET Core e .NET 5.0 e posterior: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStreamAsync(System.String,System.Threading.CancellationToken)">
      <summary>Envie uma solicitação GET para o URI especificado e retorne o corpo da resposta como um fluxo em uma operação assíncrona.</summary>
      <param name="requestUri">O URI ao qual a solicitação é enviada.</param>
      <param name="cancellationToken">O token de cancelamento para cancelar a operação.</param>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)">
      <summary>Envie uma solicitação GET para o URI especificado e retorne o corpo da resposta como um fluxo em uma operação assíncrona.</summary>
      <param name="requestUri">O URI ao qual a solicitação é enviada.</param>
      <exception cref="T:System.InvalidOperationException">O <paramref name="requestUri" /> deve ser um URI absoluto ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> deve ser definido.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">A solicitação falhou devido a um problema subjacente, como conectividade de rede, falha de DNS, validação de certificado do servidor (ou tempo limite somente para .NET Framework).</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Somente .NET Core e .NET 5.0 e posterior: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri,System.Threading.CancellationToken)">
      <summary>Envie uma solicitação GET para o URI especificado e retorne o corpo da resposta como um fluxo em uma operação assíncrona.</summary>
      <param name="requestUri">O URI ao qual a solicitação é enviada.</param>
      <param name="cancellationToken">O token de cancelamento para cancelar a operação.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="requestUri" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">A solicitação falhou devido a um problema subjacente, como conectividade de rede, falha de DNS, validação de certificado do servidor (ou tempo limite somente para .NET Framework).</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Somente .NET Core e .NET 5.0 e posterior: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStringAsync(System.String)">
      <summary>Envie uma solicitação GET para o URI especificado e retorne o corpo da resposta como uma cadeia de caracteres em uma operação assíncrona.</summary>
      <param name="requestUri">O URI ao qual a solicitação é enviada.</param>
      <exception cref="T:System.InvalidOperationException">O <paramref name="requestUri" /> deve ser um URI absoluto ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> deve ser definido.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">A solicitação falhou devido a um problema subjacente, como conectividade de rede, falha de DNS, validação de certificado do servidor (ou tempo limite somente para .NET Framework).</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Somente .NET Core e .NET 5.0 e posterior: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStringAsync(System.String,System.Threading.CancellationToken)">
      <summary>Envie uma solicitação GET para o URI especificado e retorne o corpo da resposta como uma cadeia de caracteres em uma operação assíncrona.</summary>
      <param name="requestUri">O URI ao qual a solicitação é enviada.</param>
      <param name="cancellationToken">O token de cancelamento para cancelar a operação.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="requestUri" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">A solicitação falhou devido a um problema subjacente, como conectividade de rede, falha de DNS, validação de certificado do servidor (ou tempo limite somente para .NET Framework).</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Somente .NET Core e .NET 5.0 e posterior: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)">
      <summary>Envie uma solicitação GET para o URI especificado e retorne o corpo da resposta como uma cadeia de caracteres em uma operação assíncrona.</summary>
      <param name="requestUri">O URI ao qual a solicitação é enviada.</param>
      <exception cref="T:System.InvalidOperationException">O <paramref name="requestUri" /> deve ser um URI absoluto ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> deve ser definido.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">A solicitação falhou devido a um problema subjacente, como conectividade de rede, falha de DNS, validação de certificado do servidor (ou tempo limite somente para .NET Framework).</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Somente .NET Core e .NET 5.0 e posterior: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri,System.Threading.CancellationToken)">
      <summary>Envie uma solicitação GET para o URI especificado e retorne o corpo da resposta como uma cadeia de caracteres em uma operação assíncrona.</summary>
      <param name="requestUri">O URI ao qual a solicitação é enviada.</param>
      <param name="cancellationToken">O token de cancelamento para cancelar a operação.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="requestUri" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">A solicitação falhou devido a um problema subjacente, como conectividade de rede, falha de DNS, validação de certificado do servidor (ou tempo limite somente para .NET Framework).</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Somente .NET Core e .NET 5.0 e posterior: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.String,System.Net.Http.HttpContent)">
      <summary>Envia uma solicitação PATCH a um URI designado como uma cadeia de caracteres, como uma operação assíncrona.</summary>
      <param name="requestUri">O URI ao qual a solicitação é enviada.</param>
      <param name="content">O conteúdo da solicitação HTTP enviada ao servidor.</param>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary>Envia uma solicitação PATCH com um token de cancelamento a um URI representado como uma cadeia de caracteres, como uma operação assíncrona.</summary>
      <param name="requestUri">O URI ao qual a solicitação é enviada.</param>
      <param name="content">O conteúdo da solicitação HTTP enviada ao servidor.</param>
      <param name="cancellationToken">Um token de cancelamento que pode ser usado por outros objetos ou threads para receber um aviso de cancelamento.</param>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.Uri,System.Net.Http.HttpContent)">
      <summary>Envia uma solicitação PATCH como uma operação assíncrona.</summary>
      <param name="requestUri">O URI ao qual a solicitação é enviada.</param>
      <param name="content">O conteúdo da solicitação HTTP enviada ao servidor.</param>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary>Envia uma solicitação PATCH com um token de cancelamento como uma operação assíncrona.</summary>
      <param name="requestUri">O URI ao qual a solicitação é enviada.</param>
      <param name="content">O conteúdo da solicitação HTTP enviada ao servidor.</param>
      <param name="cancellationToken">Um token de cancelamento que pode ser usado por outros objetos ou threads para receber um aviso de cancelamento.</param>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)">
      <summary>Envie uma solicitação POST para o URI especificado como uma operação assíncrona.</summary>
      <param name="requestUri">O URI ao qual a solicitação é enviada.</param>
      <param name="content">O conteúdo da solicitação HTTP enviada ao servidor.</param>
      <exception cref="T:System.InvalidOperationException">O <paramref name="requestUri" /> deve ser um URI absoluto ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> deve ser definido.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">A solicitação falhou devido a um problema subjacente, como conectividade de rede, falha de DNS, validação de certificado do servidor ou tempo limite.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Somente .NET Core e .NET 5.0 e posterior: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary>Envie uma solicitação POST com um token de cancelamento como uma operação assíncrona.</summary>
      <param name="requestUri">O URI ao qual a solicitação é enviada.</param>
      <param name="content">O conteúdo da solicitação HTTP enviada ao servidor.</param>
      <param name="cancellationToken">Um token de cancelamento que pode ser usado por outros objetos ou threads para receber um aviso de cancelamento.</param>
      <exception cref="T:System.InvalidOperationException">O <paramref name="requestUri" /> deve ser um URI absoluto ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> deve ser definido.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">A solicitação falhou devido a um problema subjacente, como conectividade de rede, falha de DNS, validação de certificado do servidor ou tempo limite.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Somente .NET Core e .NET 5.0 e posterior: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
      <summary>Envie uma solicitação POST para o URI especificado como uma operação assíncrona.</summary>
      <param name="requestUri">O URI ao qual a solicitação é enviada.</param>
      <param name="content">O conteúdo da solicitação HTTP enviada ao servidor.</param>
      <exception cref="T:System.InvalidOperationException">O <paramref name="requestUri" /> deve ser um URI absoluto ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> deve ser definido.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">A solicitação falhou devido a um problema subjacente, como conectividade de rede, falha de DNS, validação de certificado do servidor ou tempo limite.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Somente .NET Core e .NET 5.0 e posterior: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary>Envie uma solicitação POST com um token de cancelamento como uma operação assíncrona.</summary>
      <param name="requestUri">O URI ao qual a solicitação é enviada.</param>
      <param name="content">O conteúdo da solicitação HTTP enviada ao servidor.</param>
      <param name="cancellationToken">Um token de cancelamento que pode ser usado por outros objetos ou threads para receber um aviso de cancelamento.</param>
      <exception cref="T:System.InvalidOperationException">O <paramref name="requestUri" /> deve ser um URI absoluto ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> deve ser definido.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">A solicitação falhou devido a um problema subjacente, como conectividade de rede, falha de DNS, validação de certificado do servidor ou tempo limite.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Somente .NET Core e .NET 5.0 e posterior: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)">
      <summary>Envie uma solicitação PUT para o URI especificado como uma operação assíncrona.</summary>
      <param name="requestUri">O URI ao qual a solicitação é enviada.</param>
      <param name="content">O conteúdo da solicitação HTTP enviada ao servidor.</param>
      <exception cref="T:System.InvalidOperationException">O <paramref name="requestUri" /> deve ser um URI absoluto ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> deve ser definido.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">A solicitação falhou devido a um problema subjacente, como conectividade de rede, falha de DNS, validação de certificado do servidor ou tempo limite.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Somente .NET Core e .NET 5.0 e posterior: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary>Envie uma solicitação PUT com um token de cancelamento como uma operação assíncrona.</summary>
      <param name="requestUri">O URI ao qual a solicitação é enviada.</param>
      <param name="content">O conteúdo da solicitação HTTP enviada ao servidor.</param>
      <param name="cancellationToken">Um token de cancelamento que pode ser usado por outros objetos ou threads para receber um aviso de cancelamento.</param>
      <exception cref="T:System.InvalidOperationException">O <paramref name="requestUri" /> deve ser um URI absoluto ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> deve ser definido.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">A solicitação falhou devido a um problema subjacente, como conectividade de rede, falha de DNS, validação de certificado do servidor ou tempo limite.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Somente .NET Core e .NET 5.0 e posterior: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
      <summary>Envie uma solicitação PUT para o URI especificado como uma operação assíncrona.</summary>
      <param name="requestUri">O URI ao qual a solicitação é enviada.</param>
      <param name="content">O conteúdo da solicitação HTTP enviada ao servidor.</param>
      <exception cref="T:System.InvalidOperationException">O <paramref name="requestUri" /> deve ser um URI absoluto ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> deve ser definido.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">A solicitação falhou devido a um problema subjacente, como conectividade de rede, falha de DNS, validação de certificado do servidor ou tempo limite.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Somente .NET Core e .NET 5.0 e posterior: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary>Envie uma solicitação PUT com um token de cancelamento como uma operação assíncrona.</summary>
      <param name="requestUri">O URI ao qual a solicitação é enviada.</param>
      <param name="content">O conteúdo da solicitação HTTP enviada ao servidor.</param>
      <param name="cancellationToken">Um token de cancelamento que pode ser usado por outros objetos ou threads para receber um aviso de cancelamento.</param>
      <exception cref="T:System.InvalidOperationException">O <paramref name="requestUri" /> deve ser um URI absoluto ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> deve ser definido.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">A solicitação falhou devido a um problema subjacente, como conectividade de rede, falha de DNS, validação de certificado do servidor ou tempo limite.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Somente .NET Core e .NET 5.0 e posterior: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.Send(System.Net.Http.HttpRequestMessage)">
      <summary>Envia uma solicitação HTTP com a solicitação especificada.</summary>
      <param name="request">A mensagem de solicitação HTTP a ser enviada.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="request" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">A versão HTTP é 2.0 ou superior ou a política de versão está definida como <see cref="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher" />.

- ou -

A classe personalizada derivada de <see cref="T:System.Net.Http.HttpContent" /> não substitui o método <see cref="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" />.

- ou -

O <see cref="T:System.Net.Http.HttpMessageHandler" /> personalizado não substitui o método <see cref="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />.</exception>
      <exception cref="T:System.InvalidOperationException">A mensagem de solicitação já foi enviada pela instância <see cref="T:System.Net.Http.HttpClient" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">A solicitação falhou devido a um problema subjacente, como conectividade de rede, falha de DNS, ou validação de certificado do servidor.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Se a exceção de <see cref="T:System.Threading.Tasks.TaskCanceledException" /> aninhar o <see cref="T:System.TimeoutException" />: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>Uma mensagem da resposta HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.Send(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
      <summary>Envia uma solicitação HTTP.</summary>
      <param name="request">A mensagem de solicitação HTTP a ser enviada.</param>
      <param name="completionOption">Um dos valores de enumeração que especifica quando a operação deve ser concluída (assim que uma resposta estiver disponível ou após a leitura de todo o conteúdo da resposta).</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="request" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">A versão HTTP é 2.0 ou superior ou a política de versão está definida como <see cref="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher" />.

- ou -

A classe personalizada derivada de <see cref="T:System.Net.Http.HttpContent" /> não substitui o método <see cref="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" />.

- ou -

O <see cref="T:System.Net.Http.HttpMessageHandler" /> personalizado não substitui o método <see cref="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />.</exception>
      <exception cref="T:System.InvalidOperationException">A mensagem de solicitação já foi enviada pela instância <see cref="T:System.Net.Http.HttpClient" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">A solicitação falhou devido a um problema subjacente, como conectividade de rede, falha de DNS, ou validação de certificado do servidor.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Se a exceção de <see cref="T:System.Threading.Tasks.TaskCanceledException" /> aninhar o <see cref="T:System.TimeoutException" />: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>A mensagem da resposta HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.Send(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary>Envia uma solicitação HTTP com a solicitação, a opção de conclusão e o token de cancelamento especificados.</summary>
      <param name="request">A mensagem de solicitação HTTP a ser enviada.</param>
      <param name="completionOption">Um dos valores de enumeração que especifica quando a operação deve ser concluída (assim que uma resposta estiver disponível ou após a leitura de todo o conteúdo da resposta).</param>
      <param name="cancellationToken">O token para cancelar a operação.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="request" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">A versão HTTP é 2.0 ou superior ou a política de versão está definida como <see cref="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher" />.

- ou -

A classe personalizada derivada de <see cref="T:System.Net.Http.HttpContent" /> não substitui o método <see cref="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" />.

- ou -

O <see cref="T:System.Net.Http.HttpMessageHandler" /> personalizado não substitui o método <see cref="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />.</exception>
      <exception cref="T:System.InvalidOperationException">A mensagem de solicitação já foi enviada pela instância <see cref="T:System.Net.Http.HttpClient" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">A solicitação falhou devido a um problema subjacente, como conectividade de rede, falha de DNS, ou validação de certificado do servidor.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">A solicitação foi cancelada.

- ou -

Se a exceção de <see cref="T:System.Threading.Tasks.TaskCanceledException" /> aninhar o <see cref="T:System.TimeoutException" />: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>A mensagem da resposta HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Envia uma solicitação HTTP com a solicitação e o token de cancelamento especificados.</summary>
      <param name="request">A mensagem de solicitação HTTP a ser enviada.</param>
      <param name="cancellationToken">O token para cancelar a operação.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="request" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">A versão HTTP é 2.0 ou superior ou a política de versão está definida como <see cref="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher" />.

- ou -

A classe personalizada derivada de <see cref="T:System.Net.Http.HttpContent" /> não substitui o método <see cref="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" />.

- ou -

O <see cref="T:System.Net.Http.HttpMessageHandler" /> personalizado não substitui o método <see cref="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />.</exception>
      <exception cref="T:System.InvalidOperationException">A mensagem de solicitação já foi enviada pela instância <see cref="T:System.Net.Http.HttpClient" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">A solicitação falhou devido a um problema subjacente, como conectividade de rede, falha de DNS, ou validação de certificado do servidor.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">A solicitação foi cancelada.

- ou -

Se a exceção de <see cref="T:System.Threading.Tasks.TaskCanceledException" /> aninhar o <see cref="T:System.TimeoutException" />: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>A mensagem da resposta HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
      <summary>Envie uma solicitação HTTP como uma operação assíncrona.</summary>
      <param name="request">A mensagem de solicitação HTTP a ser enviada.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="request" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">A mensagem de solicitação já foi enviada pela instância <see cref="T:System.Net.Http.HttpClient" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">A solicitação falhou devido a um problema subjacente, como conectividade de rede, falha de DNS, validação de certificado do servidor ou tempo limite.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Somente .NET Core e .NET 5.0 e posterior: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
      <summary>Envie uma solicitação HTTP como uma operação assíncrona.</summary>
      <param name="request">A mensagem de solicitação HTTP a ser enviada.</param>
      <param name="completionOption">Quando a operação deve ser concluída (assim que uma resposta estiver disponível ou após a leitura de todo o conteúdo da resposta).</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="request" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">A mensagem de solicitação já foi enviada pela instância <see cref="T:System.Net.Http.HttpClient" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">A solicitação falhou devido a um problema subjacente, como conectividade de rede, falha de DNS, validação de certificado do servidor ou tempo limite.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Somente .NET Core e .NET 5.0 e posterior: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary>Envie uma solicitação HTTP como uma operação assíncrona.</summary>
      <param name="request">A mensagem de solicitação HTTP a ser enviada.</param>
      <param name="completionOption">Quando a operação deve ser concluída (assim que uma resposta estiver disponível ou após a leitura de todo o conteúdo da resposta).</param>
      <param name="cancellationToken">O token de cancelamento para cancelar a operação.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="request" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">A mensagem de solicitação já foi enviada pela instância <see cref="T:System.Net.Http.HttpClient" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">A solicitação falhou devido a um problema subjacente, como conectividade de rede, falha de DNS, validação de certificado do servidor ou tempo limite.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Somente .NET Core e .NET 5.0 e posterior: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Envie uma solicitação HTTP como uma operação assíncrona.</summary>
      <param name="request">A mensagem de solicitação HTTP a ser enviada.</param>
      <param name="cancellationToken">O token de cancelamento para cancelar a operação.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="request" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">A mensagem de solicitação já foi enviada pela instância <see cref="T:System.Net.Http.HttpClient" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">A solicitação falhou devido a um problema subjacente, como conectividade de rede, falha de DNS, validação de certificado do servidor ou tempo limite.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Somente .NET Core e .NET 5.0 e posterior: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.BaseAddress">
      <summary>Obtém ou define o endereço básico do URI (Uniform Resource Identifier) do recurso da Internet usado ao enviar solicitações.</summary>
      <returns>O endereço básico do URI (Uniform Resource Identifier) do recurso da Internet usado ao enviar solicitações.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultProxy">
      <summary>Obtém ou define o proxy HTTP global.</summary>
      <exception cref="T:System.ArgumentNullException">O valor passado não pode ser <see langword="null" />.</exception>
      <returns>Um proxy usado por cada chamada que instancia um <see cref="T:System.Net.HttpWebRequest" /> .</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultRequestHeaders">
      <summary>Obtém os cabeçalhos que devem ser enviados com cada solicitação.</summary>
      <returns>Os cabeçalhos que devem ser enviados com cada solicitação.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultRequestVersion">
      <summary>Obtém ou define a versão HTTP padrão usada em solicitações posteriores feitas por essa instância de <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <exception cref="T:System.ArgumentNullException">Em uma operação de conjuntos, <see langword="DefaultRequestVersion" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">A instância de <see cref="T:System.Net.Http.HttpClient" /> já iniciou uma ou mais solicitações.</exception>
      <exception cref="T:System.ObjectDisposedException">A instância de <see cref="T:System.Net.Http.HttpClient" /> já foi descartada.</exception>
      <returns>A versão padrão a ser usada para qualquer solicitação feita com essa <see cref="T:System.Net.Http.HttpClient" /> instância.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultVersionPolicy">
      <summary>Obtém ou define a política de versão padrão para solicitações criadas implicitamente em métodos de conveniência, por exemplo, <see cref="M:System.Net.Http.HttpClient.GetAsync(System.String)" /> e <see cref="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)" />.</summary>
      <returns>O HttpVersionPolicy usado quando a conexão HTTP é estabelecida.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize">
      <summary>Obtém ou define o número máximo de bytes armazenados no buffer ao ler o conteúdo da resposta.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">O tamanho especificado é menor ou igual a zero.</exception>
      <exception cref="T:System.InvalidOperationException">Uma operação já foi iniciada na instância atual.</exception>
      <exception cref="T:System.ObjectDisposedException">A instância atual foi descartada.</exception>
      <returns>O número máximo de bytes armazenados em buffer ao ler o conteúdo da resposta. O valor padrão dessa propriedade é 2 gigabytes.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.Timeout">
      <summary>Obtém ou define o período de tempo de espera antes que a solicitação expire.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">O tempo excedido especificado é menor ou igual a zero e não é <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</exception>
      <exception cref="T:System.InvalidOperationException">Uma operação de leitura assíncrona já foi iniciada na instância atual.</exception>
      <exception cref="T:System.ObjectDisposedException">A instância atual foi descartada.</exception>
      <returns>O período de tempo de espera antes que a solicitação expire.</returns>
    </member>
    <member name="T:System.Net.Http.HttpClientHandler">
      <summary>O manipulador de mensagens padrão usado pelo <see cref="T:System.Net.Http.HttpClient" /> no .NET Framework e .NET Core 2.0 e versões anteriores.</summary>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.#ctor">
      <summary>Cria uma instância de uma classe <see cref="T:System.Net.Http.HttpClientHandler" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.Net.Http.HttpClientHandler" /> e, opcionalmente, descarta os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Cria uma instância de <see cref="T:System.Net.Http.HttpResponseMessage" /> com base nas informações fornecidas no <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
      <param name="request">A mensagem de solicitação HTTP.</param>
      <param name="cancellationToken">Um token de cancelamento para cancelar a operação.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="request" /> era <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Para HTTP/2 e superiores ou ao solicitar que uma atualização de versão seja habilitada por <see cref="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher" />.

- ou -

Se estiver usando uma classe personalizada derivada de <see cref="T:System.Net.Http.HttpContent" /> que não substitui o método <see cref="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" />.

- ou -

Se estiver usando um <see cref="T:System.Net.Http.HttpMessageHandler" /> personalizado que não substitui o método <see cref="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">A solicitação foi cancelada.

- ou -

Se a exceção de <see cref="T:System.Threading.Tasks.TaskCanceledException" /> aninhar o <see cref="T:System.TimeoutException" />: falha na solicitação porque o tempo limite foi atingido.</exception>
      <returns>A mensagem da resposta HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Cria uma instância de <see cref="T:System.Net.Http.HttpResponseMessage" /> com base nas informações fornecidas no <see cref="T:System.Net.Http.HttpRequestMessage" /> como uma operação que não será bloqueada.</summary>
      <param name="request">A mensagem de solicitação HTTP.</param>
      <param name="cancellationToken">Um token de cancelamento para cancelar a operação.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="request" /> era <see langword="null" />.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect">
      <summary>Obtém ou define um valor que indica se o manipulador deve seguir as respostas de redirecionamento.</summary>
      <returns>
        <see langword="true" /> Se o manipulador deve seguir as respostas de redirecionamento; caso contrário <see langword="false" /> . O valor padrão é <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.AutomaticDecompression">
      <summary>Obtém ou define o tipo de método de descompactação usado pelo manipulador para descompactação automática da resposta de conteúdo HTTP.</summary>
      <returns>O método de descompactação automática usado pelo manipulador.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.CheckCertificateRevocationList">
      <summary>Obtém ou define um valor que indica se o certificado é verificado em relação à lista de revogação de autoridade de certificação.</summary>
      <exception cref="T:System.PlatformNotSupportedException">Somente .NET Framework 4.7.1: esta propriedade não é implementada.</exception>
      <returns>
        <see langword="true" /> se a lista de certificados revogados é verificada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.ClientCertificateOptions">
      <summary>Obtém ou define um valor que indica se o certificado é selecionado automaticamente do repositório de certificados ou se o chamador tem permissão para passar um certificado do cliente específico.</summary>
      <returns>A coleção de certificados de segurança associados a esse manipulador.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.ClientCertificates">
      <summary>Obtém a coleção de certificados de segurança que estão associadas a solicitações ao servidor.</summary>
      <returns>O X509CertificateCollection que é apresentado ao servidor ao executar a autenticação de cliente baseada em certificado.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.CookieContainer">
      <summary>Obtém ou define o contêiner de cookies usado para armazenar cookies de servidor pelo manipulador.</summary>
      <returns>O contêiner de cookie usado para armazenar cookies de servidor pelo manipulador.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.Credentials">
      <summary>Obtém ou define informações de autenticação usadas por este manipulador.</summary>
      <returns>As credenciais de autenticação associadas ao manipulador. O padrão é <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator">
      <summary>Obtém um delegado em cache que sempre retorna <see langword="true" />.</summary>
      <returns>Um delegado em cache que sempre retorna <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.DefaultProxyCredentials">
      <summary>Quando o proxy padrão (sistema) está sendo usado, obtém ou define as credenciais a serem enviadas ao servidor proxy padrão para autenticação. O proxy padrão é usado apenas quando <see cref="P:System.Net.Http.HttpClientHandler.UseProxy" /> é definido como <see langword="true" /> e <see cref="P:System.Net.Http.HttpClientHandler.Proxy" /> é definido como <see langword="null" />.</summary>
      <returns>As credenciais necessárias para autenticar uma solicitação para o servidor proxy padrão.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections">
      <summary>Obtém ou define o número máximo de redirecionamentos que o manipulador segue.</summary>
      <returns>O número máximo de respostas de redirecionamento que o manipulador segue. O valor padrão é 50.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxConnectionsPerServer">
      <summary>Obtém ou define o número máximo de conexões simultâneas (por ponto de extremidade do servidor) permitidas ao fazer solicitações usando um objeto <see cref="T:System.Net.Http.HttpClient" />. Observe que o limite é por ponto de extremidade do servidor, portanto, por exemplo, um valor de 256 permitiria 256 conexões simultâneas com http://www.adatum.com/ e outras 256 com http://www.adventure-works.com/.</summary>
      <returns>O número máximo de conexões simultâneas (por ponto de extremidade do servidor) permitido por um <see cref="T:System.Net.Http.HttpClient" /> objeto.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize">
      <summary>Obtém ou define o tamanho máximo do buffer de conteúdo de solicitação usado pelo manipulador.</summary>
      <returns>O tamanho máximo do buffer de conteúdo de solicitação em bytes. O valor padrão é 2 gigabytes.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxResponseHeadersLength">
      <summary>Obtém ou define o comprimento máximo, em quilobytes (1024 bytes), dos cabeçalhos de resposta. Por exemplo, se o valor é 64, 65.536 bytes são permitidos para o comprimento máximo dos cabeçalhos de resposta.</summary>
      <returns>O comprimento máximo, em kilobytes (1024 bytes), dos cabeçalhos de resposta.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.PreAuthenticate">
      <summary>Obtém ou define um valor que indica se o manipulador envia um cabeçalho de autorização com a solicitação.</summary>
      <returns>
        <see langword="true" /> para o manipulador enviar um cabeçalho de autorização HTTP com solicitações após a autenticação ser realizada, caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.Properties">
      <summary>Obtém um dicionário gravável (ou seja, um mapa) de propriedades personalizadas para as solicitações de <see cref="T:System.Net.Http.HttpClient" />. O dicionário é inicializado vazio. Você pode inserir e consultar pares chave-valor para seus manipuladores personalizados e processamento especial.</summary>
      <returns>um dicionário gravável de propriedades personalizadas.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.Proxy">
      <summary>Obtém ou define as informações de proxy usadas pelo manipulador.</summary>
      <returns>As informações de proxy usadas pelo manipulador. O valor padrão é <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback">
      <summary>Obtém ou define um método de retorno de chamada para validar o certificado do servidor.</summary>
      <returns>Um método de retorno de chamada para validar o certificado do servidor.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SslProtocols">
      <summary>Obtém ou define o protocolo TLS/SSL usado pelos objetos <see cref="T:System.Net.Http.HttpClient" /> gerenciados pelo objeto HttpClientHandler.</summary>
      <exception cref="T:System.PlatformNotSupportedException">Somente .NET Framework 4.7.1: esta propriedade não é implementada.</exception>
      <returns>Um dos valores definidos na enumeração <see cref="T:System.Security.Authentication.SslProtocols" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression">
      <summary>Obtém um valor que indica se o manipulador dá suporte a descompactação de conteúdo de resposta automática.</summary>
      <returns>
        <see langword="true" /> Se o manipulador oferecer suporte à descompactação de conteúdo de resposta automática; caso contrário <see langword="false" /> . O valor padrão é <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SupportsProxy">
      <summary>Obtém um valor que indica se o manipulador dá suporte a configurações de proxy.</summary>
      <returns>
        <see langword="true" /> Se o manipulador for compatível com as configurações de proxy; caso contrário <see langword="false" /> . O valor padrão é <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration">
      <summary>Obtém um valor que indica se o manipulador dá ou não suporte a definições de configuração para as propriedades <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> e <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" />.</summary>
      <returns>
        <see langword="true" /> Se o manipulador der suporte a definições de configuração para <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> as <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> Propriedades e; caso contrário, <see langword="false" /> . O valor padrão é <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.UseCookies">
      <summary>Obtém ou define um valor que indica se o manipulador utiliza a propriedade <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> para armazenar cookies de servidor e usa esses cookies ao enviar solicitações.</summary>
      <returns>
        <see langword="true" /> Se o manipulador oferecer suporte a usar a  <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> propriedade para armazenar cookies de servidor e usar esses cookies ao enviar solicitações; caso contrário, <see langword="false" /> . O valor padrão é <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.UseDefaultCredentials">
      <summary>Obtém ou define um valor que controla se as credenciais padrão são enviadas com solicitações pelo manipulador.</summary>
      <returns>
        <see langword="true" /> se as credenciais padrão forem usadas; caso contrário, <see langword="false" />. O valor padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.UseProxy">
      <summary>Obtém ou define um valor que indica se o manipulador usa um proxy para solicitações.</summary>
      <returns>
        <see langword="true" /> Se o manipulador deve usar um proxy para solicitações; caso contrário <see langword="false" /> . O valor padrão é <see langword="true" />.</returns>
    </member>
    <member name="T:System.Net.Http.HttpCompletionOption">
      <summary>Indica se operações <see cref="T:System.Net.Http.HttpClient" /> deverão ser consideradas concluídas assim que uma resposta estiver disponível ou após a leitura de toda a mensagem de resposta, incluindo o conteúdo.</summary>
    </member>
    <member name="F:System.Net.Http.HttpCompletionOption.ResponseContentRead">
      <summary>A operação deverá ser concluída após a leitura da resposta inteira, incluindo o conteúdo.</summary>
    </member>
    <member name="F:System.Net.Http.HttpCompletionOption.ResponseHeadersRead">
      <summary>A operação deverá ser concluída assim que uma resposta estiver disponível e os cabeçalhos forem lidos. O conteúdo ainda não foi lido.</summary>
    </member>
    <member name="T:System.Net.Http.HttpContent">
      <summary>Uma classe base que representa um corpo de entidade HTTP e cabeçalhos de conteúdo.</summary>
    </member>
    <member name="M:System.Net.Http.HttpContent.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.HttpContent" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyTo(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary>Serializa o conteúdo HTTP em um fluxo de bytes e o copia para <paramref name="stream" />.</summary>
      <param name="stream">O fluxo de destino.</param>
      <param name="context">Informações sobre o transporte (por exemplo, o token da associação de canal). Esse parâmetro pode ser <see langword="null" />.</param>
      <param name="cancellationToken">O token de cancelamento para cancelar a operação.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="stream" /> era <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)">
      <summary>Serializa o conteúdo HTTP em um fluxo de bytes e cópia-o para o objeto de fluxo fornecido como o parâmetro <paramref name="stream" />.</summary>
      <param name="stream">O fluxo de destino.</param>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary>Serializa o conteúdo HTTP em um fluxo de bytes e cópia-o para o objeto de fluxo fornecido como o parâmetro <paramref name="stream" />.</summary>
      <param name="stream">O fluxo de destino.</param>
      <param name="context">Informações sobre o transporte (token da associação de canal, por exemplo). Esse parâmetro pode ser <see langword="null" />.</param>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary>Serializa o conteúdo HTTP em um fluxo de bytes e cópia-o para o objeto de fluxo fornecido como o parâmetro <paramref name="stream" />.</summary>
      <param name="stream">O fluxo de destino.</param>
      <param name="context">Informações sobre o transporte (token da associação de canal, por exemplo). Esse parâmetro pode ser <see langword="null" />.</param>
      <param name="cancellationToken">O token de cancelamento para cancelar a operação.</param>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Threading.CancellationToken)">
      <summary>Serializa o conteúdo HTTP em um fluxo de bytes e cópia-o para o objeto de fluxo fornecido como o parâmetro <paramref name="stream" />.</summary>
      <param name="stream">O fluxo de destino.</param>
      <param name="cancellationToken">O token de cancelamento para cancelar a operação.</param>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CreateContentReadStream(System.Threading.CancellationToken)">
      <param name="cancellationToken" />
    </member>
    <member name="M:System.Net.Http.HttpContent.CreateContentReadStreamAsync">
      <summary>Serializa o conteúdo HTTP em um fluxo de memória como uma operação assíncrona.</summary>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CreateContentReadStreamAsync(System.Threading.CancellationToken)">
      <summary>Serializa o conteúdo HTTP em um fluxo de memória como uma operação assíncrona.</summary>
      <param name="cancellationToken">O token de cancelamento para cancelar a operação.</param>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.Dispose">
      <summary>Libera os recursos não gerenciados e descarta aqueles gerenciados usados pelo <see cref="T:System.Net.Http.HttpContent" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpContent.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.Net.Http.HttpContent" /> e, opcionalmente, descarta os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.Net.Http.HttpContent.LoadIntoBufferAsync">
      <summary>Serializa o conteúdo HTTP em um buffer de memória como uma operação assíncrona.</summary>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)">
      <summary>Serializa o conteúdo HTTP em um buffer de memória como uma operação assíncrona.</summary>
      <param name="maxBufferSize">O tamanho máximo, em bytes, do buffer a usar.</param>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsByteArrayAsync">
      <summary>Serialize o conteúdo HTTP em uma matriz de bytes como uma operação assíncrona.</summary>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsByteArrayAsync(System.Threading.CancellationToken)">
      <summary>Serialize o conteúdo HTTP em uma matriz de bytes como uma operação assíncrona.</summary>
      <param name="cancellationToken">O token de cancelamento para cancelar a operação.</param>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStream">
      <summary>Serializa o conteúdo HTTP e retorna um fluxo que representa o conteúdo.</summary>
      <returns>O fluxo que representa o conteúdo HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStream(System.Threading.CancellationToken)">
      <summary>Serializa o conteúdo HTTP e retorna um fluxo que representa o conteúdo.</summary>
      <param name="cancellationToken">O token de cancelamento para cancelar a operação.</param>
      <returns>O fluxo que representa o conteúdo HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStreamAsync">
      <summary>Serializar o conteúdo HTTP e retornar um fluxo que representa o conteúdo como uma operação assíncrona.</summary>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStreamAsync(System.Threading.CancellationToken)">
      <summary>Serializar o conteúdo HTTP e retornar um fluxo que representa o conteúdo como uma operação assíncrona.</summary>
      <param name="cancellationToken">O token de cancelamento para cancelar a operação.</param>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStringAsync">
      <summary>Serialize o conteúdo HTTP em uma cadeia de caracteres como uma operação assíncrona.</summary>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStringAsync(System.Threading.CancellationToken)">
      <summary>Serialize o conteúdo HTTP em uma cadeia de caracteres como uma operação assíncrona.</summary>
      <param name="cancellationToken">O token de cancelamento para cancelar a operação.</param>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary>Quando substituído em uma classe derivada, serializa o conteúdo HTTP em um fluxo. Caso contrário, gerará um <see cref="T:System.NotSupportedException" />.</summary>
      <param name="stream">O fluxo de destino.</param>
      <param name="context">Informações sobre o transporte (por exemplo, o token da associação de canal). Esse parâmetro pode ser <see langword="null" />.</param>
      <param name="cancellationToken">O token de cancelamento para cancelar a operação.</param>
      <exception cref="T:System.NotSupportedException">O método não é substituído na classe derivada.</exception>
    </member>
    <member name="M:System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary>Serialize o conteúdo HTTP em um fluxo como uma operação assíncrona.</summary>
      <param name="stream">O fluxo de destino.</param>
      <param name="context">Informações sobre o transporte (token da associação de canal, por exemplo). Esse parâmetro pode ser <see langword="null" />.</param>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary>Serialize o conteúdo HTTP em um fluxo como uma operação assíncrona.</summary>
      <param name="stream">O fluxo de destino.</param>
      <param name="context">Informações sobre o transporte (token da associação de canal, por exemplo). Esse parâmetro pode ser <see langword="null" />.</param>
      <param name="cancellationToken">O token de cancelamento para cancelar a operação.</param>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.TryComputeLength(System.Int64@)">
      <summary>Determina se o conteúdo HTTP tem um tamanho válido em bytes.</summary>
      <param name="length">Obtém o tamanho do conteúdo HTTP em bytes.</param>
      <returns>
        <see langword="true" /> se <paramref name="length" /> for um comprimento válido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpContent.Headers">
      <summary>Obtém os cabeçalhos de conteúdo HTTP, conforme definido no RFC 2616.</summary>
      <returns>Os cabeçalhos de conteúdo, conforme definido no RFC 2616.</returns>
    </member>
    <member name="T:System.Net.Http.HttpKeepAlivePingPolicy">
      <summary>Especifica quando o quadro de ping HTTP/2 é enviado em uma conexão ociosa.</summary>
    </member>
    <member name="F:System.Net.Http.HttpKeepAlivePingPolicy.Always">
      <summary>Envia um ping Keep Alive por todo o tempo de vida da conexão.</summary>
    </member>
    <member name="F:System.Net.Http.HttpKeepAlivePingPolicy.WithActiveRequests">
      <summary>Envia um ping Keep Alive somente quando há fluxos ativos na conexão.</summary>
    </member>
    <member name="T:System.Net.Http.HttpMessageHandler">
      <summary>Um tipo base para manipuladores de mensagens HTTP.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.HttpMessageHandler" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.Dispose">
      <summary>Libera os recursos não gerenciados e descarta aqueles gerenciados usados pelo <see cref="T:System.Net.Http.HttpMessageHandler" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.Net.Http.HttpMessageHandler" /> e, opcionalmente, descarta os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Quando substituído em uma classe derivada, envia uma solicitação HTTP com a solicitação e o token de cancelamento especificados. Caso contrário, gerará um <see cref="T:System.NotSupportedException" />.</summary>
      <param name="request">A mensagem de solicitação HTTP a ser enviada.</param>
      <param name="cancellationToken">O token de cancelamento para cancelar a operação.</param>
      <exception cref="T:System.NotSupportedException">O método não é substituído na classe derivada.</exception>
      <returns>A mensagem da resposta HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Envie uma solicitação HTTP como uma operação assíncrona.</summary>
      <param name="request">A mensagem de solicitação HTTP a ser enviada.</param>
      <param name="cancellationToken">O token de cancelamento para cancelar a operação.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="request" /> era <see langword="null" />.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="T:System.Net.Http.HttpMessageInvoker">
      <summary>Uma classe de especialidade que permite que os aplicativos chamem o método <see cref="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" /> em uma cadeia de manipulador HTTP.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary>Inicializa uma instância de uma classe <see cref="T:System.Net.Http.HttpMessageInvoker" /> com um <see cref="T:System.Net.Http.HttpMessageHandler" /> específico.</summary>
      <param name="handler">O <see cref="T:System.Net.Http.HttpMessageHandler" /> responsável por processar as mensagens de resposta HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
      <summary>Inicializa uma instância de uma classe <see cref="T:System.Net.Http.HttpMessageInvoker" /> com um <see cref="T:System.Net.Http.HttpMessageHandler" /> específico.</summary>
      <param name="handler">O <see cref="T:System.Net.Http.HttpMessageHandler" /> responsável por processar as mensagens de resposta HTTP.</param>
      <param name="disposeHandler">
        <see langword="true" /> se o manipulador interno deverá ser descartado por Dispose(), <see langword="false" /> se você quiser reutilizar o manipulador interno.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.Dispose">
      <summary>Libera os recursos não gerenciados e descarta aqueles gerenciados usados pelo <see cref="T:System.Net.Http.HttpMessageInvoker" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.Net.Http.HttpMessageInvoker" /> e, opcionalmente, descarta os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Envia uma solicitação HTTP com a solicitação e o token de cancelamento especificados.</summary>
      <param name="request">A mensagem de solicitação HTTP a ser enviada.</param>
      <param name="cancellationToken">O token de cancelamento para cancelar a operação.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="request" /> era <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Para HTTP/2 e superiores ou ao solicitar que uma atualização de versão seja habilitada por <see cref="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher" />.

- ou -

Se estiver usando uma classe personalizada derivada de <see cref="T:System.Net.Http.HttpContent" /> que não substitui o método <see cref="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" />.

- ou -

Se estiver usando um <see cref="T:System.Net.Http.HttpMessageHandler" /> personalizado que não substitui o método <see cref="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />.</exception>
      <returns>A mensagem da resposta HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Envie uma solicitação HTTP como uma operação assíncrona.</summary>
      <param name="request">A mensagem de solicitação HTTP a ser enviada.</param>
      <param name="cancellationToken">O token de cancelamento para cancelar a operação.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="request" /> era <see langword="null" />.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="T:System.Net.Http.HttpMethod">
      <summary>Uma classe auxiliar para recuperação e comparação de métodos HTTP padrão e para a criação de novos métodos HTTP.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMethod.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.HttpMethod" /> com um método HTTP específico.</summary>
      <param name="method">O método HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpMethod.Equals(System.Net.Http.HttpMethod)">
      <summary>Determina se o <see cref="T:System.Net.Http.HttpMethod" /> especificado é igual ao <see cref="T:System.Object" /> atual.</summary>
      <param name="other">O método HTTP a comparar com o objeto atual.</param>
      <returns>
        <see langword="true" /> se o objeto especificado for igual ao objeto atual, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.Equals(System.Object)">
      <summary>Determina se o <see cref="T:System.Object" /> especificado é igual ao <see cref="T:System.Object" /> atual.</summary>
      <param name="obj">O objeto a ser comparado com o objeto atual.</param>
      <returns>
        <see langword="true" /> se o objeto especificado for igual ao objeto atual, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.GetHashCode">
      <summary>Serve como uma função de hash para esse tipo.</summary>
      <returns>Um código hash do <see cref="T:System.Object" /> atual.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.op_Equality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)">
      <summary>O operador de igualdade para comparar dois objetos <see cref="T:System.Net.Http.HttpMethod" />.</summary>
      <param name="left">O <see cref="T:System.Net.Http.HttpMethod" /> esquerdo para um operador de igualdade.</param>
      <param name="right">O <see cref="T:System.Net.Http.HttpMethod" /> direito para um operador de igualdade.</param>
      <returns>
        <see langword="true" /> se os parâmetros <paramref name="left" /> e <paramref name="right" /> especificados forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.op_Inequality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)">
      <summary>Operador de desigualdade para comparar dois objetos <see cref="T:System.Net.Http.HttpMethod" />.</summary>
      <param name="left">O <see cref="T:System.Net.Http.HttpMethod" /> esquerdo para um operador de desigualdade.</param>
      <param name="right">O <see cref="T:System.Net.Http.HttpMethod" /> direito para um operador de desigualdade.</param>
      <returns>
        <see langword="true" /> se os parâmetros <paramref name="left" /> e <paramref name="right" /> especificado não são iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.ToString">
      <summary>Retorna uma cadeia de caracteres que representa o objeto atual.</summary>
      <returns>Uma cadeia de caracteres que representa o objeto atual.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Delete">
      <summary>Representa um método de protocolo HTTP DELETE.</summary>
      <returns>Retorna <see cref="T:System.Net.Http.HttpMethod" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Get">
      <summary>Representa um método de protocolo HTTP GET.</summary>
      <returns>Retorna <see cref="T:System.Net.Http.HttpMethod" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Head">
      <summary>Representa um método de protocolo HTTP HEAD. O método HEAD é idêntico ao GET, exceto que o servidor retorna apenas cabeçalhos de mensagem na resposta, sem um corpo de mensagem.</summary>
      <returns>Retorna <see cref="T:System.Net.Http.HttpMethod" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Method">
      <summary>Um método HTTP.</summary>
      <returns>Um método HTTP representado como um <see cref="T:System.String" /> .</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Options">
      <summary>Representa um método de protocolo HTTP OPTIONS.</summary>
      <returns>Retorna <see cref="T:System.Net.Http.HttpMethod" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Patch">
      <summary>Obtém o método de protocolo HTTP PATCH.</summary>
      <returns>O método HTTP PATCH Protocol.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Post">
      <summary>Representa um método de protocolo HTTP POST que é usado para postar uma nova entidade como uma adição a um URI.</summary>
      <returns>Retorna <see cref="T:System.Net.Http.HttpMethod" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Put">
      <summary>Representa um método de protocolo HTTP PUT que é usado para substituir uma entidade identificada por um URI.</summary>
      <returns>Retorna <see cref="T:System.Net.Http.HttpMethod" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Trace">
      <summary>Representa um método de protocolo HTTP TRACE.</summary>
      <returns>Retorna <see cref="T:System.Net.Http.HttpMethod" />.</returns>
    </member>
    <member name="T:System.Net.Http.HttpRequestException">
      <summary>Uma classe base para exceções lançadas pelo <see cref="T:System.Net.Http.HttpClient" /> e pelas classes <see cref="T:System.Net.Http.HttpMessageHandler" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.HttpRequestException" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.HttpRequestException" /> com uma mensagem específica que descreve a exceção atual.</summary>
      <param name="message">Uma mensagem que descreve a exceção atual.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.HttpRequestException" /> com uma mensagem específica que descreve a exceção atual e uma exceção interna.</summary>
      <param name="message">Uma mensagem que descreve a exceção atual.</param>
      <param name="inner">A exceção interna.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor(System.String,System.Exception,System.Nullable{System.Net.HttpStatusCode})">
      <summary>Inicializa uma nova instância da <see cref="T:System.Net.Http.HttpRequestException" /> classe com uma mensagem específica que descreve a exceção atual, uma exceção interna e um código de status http.</summary>
      <param name="message">Uma mensagem que descreve a exceção atual.</param>
      <param name="inner">A exceção interna.</param>
      <param name="statusCode">O código de status do HTTP.</param>
    </member>
    <member name="P:System.Net.Http.HttpRequestException.StatusCode">
      <summary>Obtém o código de status HTTP a ser retornado com a exceção.</summary>
      <returns>Um código de status HTTP se a exceção representa um resultado não bem-sucedido; caso contrário, <c>NULL</c>.</returns>
    </member>
    <member name="T:System.Net.Http.HttpRequestMessage">
      <summary>Representa uma mensagem de solicitação HTTP.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.HttpRequestMessage" /> com um método HTTP e uma <see cref="T:System.Uri" /> de solicitação.</summary>
      <param name="method">O método HTTP.</param>
      <param name="requestUri">Uma cadeia de caracteres que representa a <see cref="T:System.Uri" /> da solicitação.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.Uri)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.HttpRequestMessage" /> com um método HTTP e uma <see cref="T:System.Uri" /> de solicitação.</summary>
      <param name="method">O método HTTP.</param>
      <param name="requestUri">O <see cref="T:System.Uri" /> a solicitar.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.Dispose">
      <summary>Libera os recursos não gerenciados e descarta aqueles gerenciados usados pelo <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.Net.Http.HttpRequestMessage" /> e, opcionalmente, descarta os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.ToString">
      <summary>Retorna uma cadeia de caracteres que representa o objeto atual.</summary>
      <returns>Uma representação de cadeia de caracteres do objeto atual.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Content">
      <summary>Obtém ou define o conteúdo da mensagem HTTP.</summary>
      <returns>O conteúdo de uma mensagem</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Headers">
      <summary>Obtém a coleção de cabeçalhos de solicitação HTTP.</summary>
      <returns>A coleção de cabeçalhos de solicitação HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Method">
      <summary>Obtém ou define o método HTTP usado pela mensagem de solicitação HTTP.</summary>
      <returns>O método HTTP usado pela mensagem de solicitação. O padrão é o método GET.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Options" />
    <member name="P:System.Net.Http.HttpRequestMessage.Properties">
      <summary>Obtém um conjunto de propriedades para a solicitação HTTP.</summary>
      <returns>Retorna <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.RequestUri">
      <summary>Obtém ou define o <see cref="T:System.Uri" /> usado para a solicitação HTTP.</summary>
      <returns>O <see cref="T:System.Uri" /> usado para a solicitação HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Version">
      <summary>Obtém ou define a versão da mensagem HTTP.</summary>
      <returns>A versão da mensagem HTTP. O valor padrão é <c>1,1</c>, a menos que você esteja direcionando o .net Core 2,1 ou 2,2. Nesse caso, o valor padrão é <c>2,0</c>.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.VersionPolicy">
      <summary>Obtém ou define a política que determina como <see cref="System.Net.Http.HttpRequestMessage.Version" /> é interpretado e como a versão HTTP final é negociada com o servidor.</summary>
      <returns>O HttpVersionPolicy usado quando a conexão HTTP é estabelecida.</returns>
    </member>
    <member name="T:System.Net.Http.HttpRequestOptions" />
    <member name="M:System.Net.Http.HttpRequestOptions.#ctor" />
    <member name="M:System.Net.Http.HttpRequestOptions.Set``1(System.Net.Http.HttpRequestOptionsKey{``0},``0)">
      <param name="key" />
      <param name="value" />
      <typeparam name="TValue" />
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Adiciona um item ao <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="item">O objeto a ser adicionado ao <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Clear">
      <summary>Remove todos os itens do <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Determinará se o <see cref="T:System.Collections.Generic.ICollection`1" /> contiver um valor específico.</summary>
      <param name="item">O objeto a ser localizado no <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="item" /> for encontrado no <see cref="T:System.Collections.Generic.ICollection`1" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Copia os elementos do <see cref="T:System.Collections.Generic.ICollection`1" /> para um <see cref="T:System.Array" />, começando em um determinado índice <see cref="T:System.Array" />.</summary>
      <param name="array">O <see cref="T:System.Array" /> unidimensional que é o destino dos elementos copiados de <see cref="T:System.Collections.Generic.ICollection`1" />. O <see cref="T:System.Array" /> deve ter indexação com base em zero.</param>
      <param name="arrayIndex">O índice com base em zero em <paramref name="array" /> no qual a cópia começa.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Remove a primeira ocorrência de um objeto específico do <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="item">O objeto a remover do <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="item" /> tiver sido removido com êxito do <see cref="T:System.Collections.Generic.ICollection`1" />; caso contrário, <see langword="false" />. Esse método também retornará <see langword="false" /> se o <paramref name="item" /> não for encontrado no <see cref="T:System.Collections.Generic.ICollection`1" /> original.</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#Add(System.String,System.Object)">
      <summary>Adiciona um elemento com a chave fornecida e o valor para o <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <param name="key">O objeto a ser usado como chave do elemento a ser adicionado.</param>
      <param name="value">O objeto a ser usado como o valor do elemento a ser adicionado.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#ContainsKey(System.String)">
      <summary>Determina se o <see cref="T:System.Collections.Generic.IDictionary`2" /> contém um elemento com a chave especificada.</summary>
      <param name="key">A chave a ser localizada no <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Collections.Generic.IDictionary`2" /> contiver um elemento com a chave; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#Remove(System.String)">
      <summary>Remove o elemento com a chave especificada do <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <param name="key">A chave do elemento a ser removido.</param>
      <returns>
        <see langword="true" /> se o elemento for removido com êxito; caso contrário, <see langword="false" />. Esse método também retornará <see langword="false" /> se <paramref name="key" /> não tiver sido encontrado no <see cref="T:System.Collections.Generic.IDictionary`2" /> original.</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#TryGetValue(System.String,System.Object@)">
      <param name="key" />
      <param name="value" />
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#GetEnumerator">
      <summary>Retorna um enumerador que itera pela coleção.</summary>
      <returns>Um enumerador que pode ser usado para iterar pela coleção.</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retorna um enumerador que itera em uma coleção.</summary>
      <returns>Um objeto <see cref="T:System.Collections.IEnumerator" /> que pode ser usado para iterar pela coleção.</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.TryGetValue``1(System.Net.Http.HttpRequestOptionsKey{``0},``0@)">
      <param name="key" />
      <param name="value" />
      <typeparam name="TValue" />
    </member>
    <member name="P:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Count">
      <summary>Obtém o número de elementos contidos no <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <returns>O número de elementos contidos no <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#IsReadOnly">
      <summary>Obtém um valor que indica se o <see cref="T:System.Collections.Generic.ICollection`1" /> é somente leitura.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Collections.Generic.ICollection`1" /> for somente leitura; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#Item(System.String)">
      <summary>Obtém ou define o elemento com a chave especificada.</summary>
      <param name="key">A chave do elemento a ser obtida ou adicionada.</param>
      <returns>O elemento com a chave especificada.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#Keys">
      <summary>Obtém um <see cref="T:System.Collections.Generic.ICollection`1" /> que contém as chaves do <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Um <see cref="T:System.Collections.Generic.ICollection`1" /> que contém as chaves do objeto que implementa <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#Values">
      <summary>Obtém um <see cref="T:System.Collections.Generic.ICollection`1" /> que contém os valores no <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Um <see cref="T:System.Collections.Generic.ICollection`1" /> que contém os valores no objeto que implementa <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="T:System.Net.Http.HttpRequestOptionsKey`1">
      <typeparam name="TValue" />
    </member>
    <member name="M:System.Net.Http.HttpRequestOptionsKey`1.#ctor(System.String)">
      <param name="key" />
    </member>
    <member name="P:System.Net.Http.HttpRequestOptionsKey`1.Key" />
    <member name="T:System.Net.Http.HttpResponseMessage">
      <summary>Representa uma mensagem de resposta HTTP incluindo o código de status e os dados.</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.HttpResponseMessage" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.#ctor(System.Net.HttpStatusCode)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.HttpResponseMessage" /> com um <see cref="P:System.Net.Http.HttpResponseMessage.StatusCode" /> específico.</summary>
      <param name="statusCode">O código de status da resposta HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.Dispose">
      <summary>Libera os recursos não gerenciados e descarta os recursos não gerenciados usados pelo <see cref="T:System.Net.Http.HttpResponseMessage" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.Net.Http.HttpResponseMessage" /> e, opcionalmente, descarta os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode">
      <summary>Gera uma exceção se a propriedade <see cref="P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode" /> da resposta HTTP for <see langword="false" />.</summary>
      <exception cref="T:System.Net.Http.HttpRequestException">A resposta HTTP for malsucedida.</exception>
      <returns>A mensagem da resposta HTTP se a chamada for bem-sucedida.</returns>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.ToString">
      <summary>Retorna uma cadeia de caracteres que representa o objeto atual.</summary>
      <returns>Uma representação de cadeia de caracteres do objeto atual.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.Content">
      <summary>Obtém ou define o conteúdo de uma mensagem de resposta HTTP.</summary>
      <returns>O conteúdo da mensagem de resposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.Headers">
      <summary>Obtém a coleção de cabeçalhos de resposta HTTP.</summary>
      <returns>A coleção de cabeçalhos de resposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode">
      <summary>Obtém um valor que indica se a resposta HTTP foi bem-sucedida.</summary>
      <returns>
        <see langword="true" /> Se <see cref="P:System.Net.Http.HttpResponseMessage.StatusCode" /> estava no intervalo de 200-299; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.ReasonPhrase">
      <summary>Obtém ou define a frase de motivo que geralmente é enviada por servidores juntamente com o código de status.</summary>
      <returns>A frase do motivo enviada pelo servidor.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.RequestMessage">
      <summary>Obtém ou define a mensagem de solicitação que levou a essa mensagem de resposta.</summary>
      <returns>A mensagem de solicitação que levou a essa mensagem de resposta.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.StatusCode">
      <summary>Obtém ou define o código de status da resposta HTTP.</summary>
      <returns>O código de status da resposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.TrailingHeaders">
      <summary>Obtém a coleção de cabeçalhos à direita incluídos em uma resposta HTTP.</summary>
      <exception cref="T:System.Net.Http.HttpRequestException">PROTOCOL_ERROR: a resposta HTTP/2 contém pseudo-cabeçalhos no quadro de cabeçalhos à direita.</exception>
      <returns>A coleção de cabeçalhos à direita na resposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.Version">
      <summary>Obtém ou define a versão da mensagem HTTP.</summary>
      <returns>A versão da mensagem HTTP. O padrão é 1,1.</returns>
    </member>
    <member name="T:System.Net.Http.HttpVersionPolicy">
      <summary>Especifica comportamentos para selecionar e negociar a versão HTTP de uma solicitação.</summary>
    </member>
    <member name="F:System.Net.Http.HttpVersionPolicy.RequestVersionExact">
      <summary>Use apenas a versão solicitada.</summary>
    </member>
    <member name="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher">
      <summary>Use a versão mais recente disponível, fazendo downgrade apenas para a versão solicitada, mas não para uma inferior.</summary>
    </member>
    <member name="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrLower">
      <summary>Use a versão solicitada ou faça downgrade para uma inferior. Este é o comportamento padrão.</summary>
    </member>
    <member name="T:System.Net.Http.MessageProcessingHandler">
      <summary>Um tipo base para manipuladores que realizam apenas pequenos processamentos de mensagens de solicitação de e/ou resposta.</summary>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.#ctor">
      <summary>Cria uma instância de uma classe <see cref="T:System.Net.Http.MessageProcessingHandler" />.</summary>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary>Cria uma instância de uma classe <see cref="T:System.Net.Http.MessageProcessingHandler" /> com um manipulador interno específico.</summary>
      <param name="innerHandler">O manipulador interno que é responsável por processar as mensagens de resposta HTTP.</param>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.ProcessRequest(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Executa o processamento em cada solicitação enviada ao servidor.</summary>
      <param name="request">A mensagem de solicitação HTTP a processar.</param>
      <param name="cancellationToken">Um token de cancelamento que pode ser usado por outros objetos ou threads para receber um aviso de cancelamento.</param>
      <returns>A mensagem de solicitação HTTP que foi processada.</returns>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.ProcessResponse(System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)">
      <summary>Execute o processamento em cada resposta do servidor.</summary>
      <param name="response">A mensagem de resposta HTTP a processar.</param>
      <param name="cancellationToken">Um token de cancelamento que pode ser usado por outros objetos ou threads para receber um aviso de cancelamento.</param>
      <returns>A mensagem de resposta HTTP que foi processada.</returns>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Envia uma solicitação HTTP para o manipulador interno para envio ao servidor.</summary>
      <param name="request">A mensagem de solicitação HTTP para enviar ao servidor.</param>
      <param name="cancellationToken">Um token de cancelamento que pode ser usado por outros objetos ou threads para receber um aviso de cancelamento.</param>
      <returns>A mensagem da resposta HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Envia uma solicitação HTTP para o manipulador interno para enviar ao servidor como uma operação assíncrona.</summary>
      <param name="request">A mensagem de solicitação HTTP para enviar ao servidor.</param>
      <param name="cancellationToken">Um token de cancelamento que pode ser usado por outros objetos ou threads para receber um aviso de cancelamento.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="request" /> era <see langword="null" />.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="T:System.Net.Http.MultipartContent">
      <summary>Fornece uma coleção de objetos <see cref="T:System.Net.Http.HttpContent" /> que são serializados utilizando a especificação de tipo de conteúdo com diversas partes/*.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartContent.#ctor">
      <summary>Cria uma nova instância da classe <see cref="T:System.Net.Http.MultipartContent" />.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartContent.#ctor(System.String)">
      <summary>Cria uma nova instância da classe <see cref="T:System.Net.Http.MultipartContent" />.</summary>
      <param name="subtype">O subtipo do conteúdo com diversas partes.</param>
      <exception cref="T:System.ArgumentException">O <paramref name="subtype" /> era <see langword="null" /> ou contém somente caracteres de espaço em branco.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartContent.#ctor(System.String,System.String)">
      <summary>Cria uma nova instância da classe <see cref="T:System.Net.Http.MultipartContent" />.</summary>
      <param name="subtype">O subtipo do conteúdo com diversas partes.</param>
      <param name="boundary">A cadeia de caracteres de limite para o conteúdo com diversas partes.</param>
      <exception cref="T:System.ArgumentException">O <paramref name="subtype" /> era <see langword="null" /> ou uma cadeia de caracteres vazia.  
  
O <paramref name="boundary" /> era <see langword="null" /> ou contém somente caracteres de espaço em branco.  
  
- ou - 
O <paramref name="boundary" /> termina com um caractere de espaço.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O comprimento do <paramref name="boundary" /> era maior que 70.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)">
      <summary>Adicionar conteúdo HTTP com diversas partes a uma coleção de objetos <see cref="T:System.Net.Http.HttpContent" /> que são serializados usando a especificação de tipo de conteúdo /* com diversas partes.</summary>
      <param name="content">O conteúdo HTTP a adicionar à coleção.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="content" /> era <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartContent.CreateContentReadStream(System.Threading.CancellationToken)">
      <summary>Serializa o conteúdo HTTP para um fluxo usando a codificação multipart/*.</summary>
      <param name="cancellationToken">O token de cancelamento para cancelar a operação.</param>
      <returns>O fluxo de conteúdo HTTP que representa o conteúdo HTTP codificado multipart/*.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.CreateContentReadStreamAsync">
      <summary>Serializa o conteúdo HTTP para um fluxo usando a codificação multipart/* como uma operação assíncrona.</summary>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.CreateContentReadStreamAsync(System.Threading.CancellationToken)">
      <summary>Serializa o conteúdo HTTP para um fluxo usando a codificação multipart/* como uma operação assíncrona.</summary>
      <param name="cancellationToken">O token de cancelamento para cancelar a operação.</param>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.Net.Http.MultipartContent" /> e, opcionalmente, descarta os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.Net.Http.MultipartContent.GetEnumerator">
      <summary>Retorna um enumerador que itera pela coleção de objetos <see cref="T:System.Net.Http.HttpContent" /> que são serializados utilizando a especificação de tipo de conteúdo /* com diversas partes.</summary>
      <returns>Um objeto que pode ser usado para iterar na coleção.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary>Serializa o conteúdo HTTP com várias partes para um fluxo.</summary>
      <param name="stream">O fluxo de destino.</param>
      <param name="context">Informações sobre o transporte (por exemplo, o token da associação de canal). Esse parâmetro pode ser <see langword="null" />.</param>
      <param name="cancellationToken">O token de cancelamento para cancelar a operação.</param>
    </member>
    <member name="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary>Serialize o conteúdo HTTP com diversas partes para um fluxo como uma operação assíncrona.</summary>
      <param name="stream">O fluxo de destino.</param>
      <param name="context">Informações sobre o transporte (token da associação de canal, por exemplo). Esse parâmetro pode ser <see langword="null" />.</param>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary>Serialize o conteúdo HTTP com diversas partes para um fluxo como uma operação assíncrona.</summary>
      <param name="stream">O fluxo de destino.</param>
      <param name="context">Informações sobre o transporte (token da associação de canal, por exemplo). Esse parâmetro pode ser <see langword="null" />.</param>
      <param name="cancellationToken">O token de cancelamento para cancelar a operação.</param>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator">
      <summary>A implementação explícita do método <see cref="M:System.Net.Http.MultipartContent.GetEnumerator" />.</summary>
      <returns>Um objeto que pode ser usado para iterar na coleção.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)">
      <summary>Determina se o conteúdo HTTP multipartes tem um tamanho válido em bytes.</summary>
      <param name="length">Obtém o tamanho do conteúdo HTTP em bytes.</param>
      <returns>
        <see langword="true" /> se <paramref name="length" /> for um comprimento válido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.MultipartContent.HeaderEncodingSelector">
      <summary>Obtém ou define um retorno de chamada que decodifica valores de cabeçalho de resposta.</summary>
      <returns>O retorno de chamada do seletor de codificação de cabeçalho para decodificar o valor para o nome do cabeçalho de resposta especificado ou <see langword="null" /> para indicar o comportamento padrão.</returns>
    </member>
    <member name="T:System.Net.Http.MultipartFormDataContent">
      <summary>Fornece um contêiner para conteúdo codificado usando o tipo MIME de várias partes/dados de formulário.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.#ctor">
      <summary>Cria uma nova instância da classe <see cref="T:System.Net.Http.MultipartFormDataContent" />.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.#ctor(System.String)">
      <summary>Cria uma nova instância da classe <see cref="T:System.Net.Http.MultipartFormDataContent" />.</summary>
      <param name="boundary">A cadeia de caracteres de limite para o conteúdo de dados de formulário de várias partes.</param>
      <exception cref="T:System.ArgumentException">O <paramref name="boundary" /> era <see langword="null" /> ou contém somente caracteres de espaço em branco.  
  
- ou - 
O <paramref name="boundary" /> termina com um caractere de espaço.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O comprimento do <paramref name="boundary" /> era maior que 70.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent)">
      <summary>Adicionar conteúdo HTTP a uma coleção de objetos <see cref="T:System.Net.Http.HttpContent" /> que são serializados para o tipo MIME de várias partes/dados de formulário.</summary>
      <param name="content">O conteúdo HTTP a adicionar à coleção.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="content" /> era <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent,System.String)">
      <summary>Adicionar conteúdo HTTP a uma coleção de objetos <see cref="T:System.Net.Http.HttpContent" /> que são serializados para o tipo MIME de várias partes/dados de formulário.</summary>
      <param name="content">O conteúdo HTTP a adicionar à coleção.</param>
      <param name="name">O nome do conteúdo HTTP a adicionar.</param>
      <exception cref="T:System.ArgumentException">O <paramref name="name" /> era <see langword="null" /> ou contém somente caracteres de espaço em branco.</exception>
      <exception cref="T:System.ArgumentNullException">O <paramref name="content" /> era <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent,System.String,System.String)">
      <summary>Adicionar conteúdo HTTP a uma coleção de objetos <see cref="T:System.Net.Http.HttpContent" /> que são serializados para o tipo MIME de várias partes/dados de formulário.</summary>
      <param name="content">O conteúdo HTTP a adicionar à coleção.</param>
      <param name="name">O nome do conteúdo HTTP a adicionar.</param>
      <param name="fileName">O nome de arquivo para o conteúdo HTTP a adicionar à coleção.</param>
      <exception cref="T:System.ArgumentException">O <paramref name="name" /> era <see langword="null" /> ou contém somente caracteres de espaço em branco.  
  
- ou - 
O <paramref name="fileName" /> era <see langword="null" /> ou contém somente caracteres de espaço em branco.</exception>
      <exception cref="T:System.ArgumentNullException">O <paramref name="content" /> era <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary>Serialize e grave o conteúdo fornecido no construtor em um fluxo de conteúdo HTTP como uma operação assíncrona.</summary>
      <param name="stream">O fluxo de destino.</param>
      <param name="context">Informações sobre o transporte, como o token de associação de canal. Esse parâmetro pode ser <see langword="null" />.</param>
      <param name="cancellationToken">O token de cancelamento para cancelar a operação.</param>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="T:System.Net.Http.ReadOnlyMemoryContent">
      <summary>Fornece conteúdo HTTP baseado em <see cref="T:System.ReadOnlyMemory`1" />.</summary>
    </member>
    <member name="M:System.Net.Http.ReadOnlyMemoryContent.#ctor(System.ReadOnlyMemory{System.Byte})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Http.ReadOnlyMemoryContent" />.</summary>
      <param name="content">O conteúdo usado para inicializar o <see cref="T:System.Net.Http.ReadOnlyMemoryContent" />.</param>
    </member>
    <member name="T:System.Net.Http.SocketsHttpConnectionContext">
      <summary>Representa o contexto passado para o <see cref="P:System.Net.Http.SocketsHttpHandler.ConnectCallback" /> de uma instância de <see cref="T:System.Net.Http.SocketsHttpHandler" />. .</summary>
    </member>
    <member name="P:System.Net.Http.SocketsHttpConnectionContext.DnsEndPoint">
      <summary>Obtém o ponto de extremidade DNS a ser usado por <see cref="P:System.Net.Http.SocketsHttpHandler.ConnectCallback" /> para estabelecer a conexão.</summary>
    </member>
    <member name="P:System.Net.Http.SocketsHttpConnectionContext.InitialRequestMessage">
      <summary>Obtém a mensagem de solicitação HTTP inicial que causa a criação da conexão.</summary>
      <returns>A mensagem de solicitação que está fazendo com que a conexão seja criada.</returns>
    </member>
    <member name="T:System.Net.Http.SocketsHttpHandler">
      <summary>Oferece o manipulador de mensagens padrão usado pelo <see cref="T:System.Net.Http.HttpClient" /> no .NET Core 2.1 e versões anteriores.</summary>
    </member>
    <member name="M:System.Net.Http.SocketsHttpHandler.#ctor">
      <summary>Cria uma instância de uma classe <see cref="T:System.Net.Http.SocketsHttpHandler" />.</summary>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.AllowAutoRedirect">
      <summary>Obtém ou define um valor que indica se o manipulador deve seguir as respostas de redirecionamento.</summary>
      <returns>
        <see langword="true" /> Se o manipulador deve seguir as respostas de redirecionamento; caso contrário <see langword="false" /> . O valor padrão é <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.AutomaticDecompression">
      <summary>Obtém ou define o tipo de método de descompactação usado pelo manipulador para descompactação automática da resposta de conteúdo HTTP.</summary>
      <returns>O tipo de método de descompactação usado pelo manipulador para a descompactação automática da resposta de conteúdo HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.ConnectCallback">
      <summary>Obtém ou define um retorno de chamada personalizado usado para abrir novas conexões.</summary>
      <returns>Um método de retorno de chamada para criar um fluxo.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.ConnectTimeout">
      <summary>Obtém ou define o intervalo de espera antes que o tempo limite de estabelecimento da conexão seja atingido.</summary>
      <returns>O período de tempo a aguardar antes da conexão ser estabelecida. O valor padrão é <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" /> .</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.CookieContainer">
      <summary>Obtém ou define o objeto de contêiner do cookie gerenciado.</summary>
      <returns>O objeto contêiner do cookie gerenciado.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.Credentials">
      <summary>Obtém ou define informações de autenticação usadas por este manipulador.</summary>
      <returns>As credenciais de autenticação associadas ao manipulador. O valor padrão é <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.DefaultProxyCredentials">
      <summary>Quando o proxy padrão (de sistema) é usado, obtém ou define as credenciais usadas para enviar ao servidor proxy padrão para autenticação.</summary>
      <returns>As credenciais usadas para autenticar o usuário em um proxy de autenticação.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.EnableMultipleHttp2Connections">
      <summary>Obtém ou define um valor que indica se conexões HTTP/2 adicionais podem ser estabelecidas com o mesmo servidor quando o número máximo de fluxos simultâneos é atingido em todas as conexões existentes.</summary>
      <returns>
        <see langword="true" /> se outras conexões HTTP/2 tiverem permissão para serem criadas; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.Expect100ContinueTimeout">
      <summary>Obtém ou define o valor de tempo limite para a resposta HTTP 100 Continue do servidor.</summary>
      <returns>O período de tempo para aguardar o HTTP 100 continuar. O valor padrão é de 1 segundo.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.IsSupported">
      <summary>Obtém um valor que indica se o manipulador tem suporte na plataforma atual.</summary>
      <returns>
        <see langword="true" /> Se houver suporte para o manipulador; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.KeepAlivePingDelay">
      <summary>Obtém ou define o atraso do ping de keep alive.</summary>
      <returns>O atraso de ping de Keep Alive. Assume o padrão de <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.KeepAlivePingPolicy">
      <summary>Obtém ou define o comportamento do ping de keep alive.</summary>
      <returns>O comportamento de ping de Keep Alive.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.KeepAlivePingTimeout">
      <summary>Obtém ou define o tempo limite do ping de keep alive.</summary>
      <returns>O tempo limite de ping de Keep Alive. O padrão é 20 segundos.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxAutomaticRedirections">
      <summary>Obtém ou define o número máximo de redirecionamentos de HTTP permitidos.</summary>
      <returns>O número máximo de redirecionamentos HTTP permitidos.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxConnectionsPerServer">
      <summary>Obtém ou define o número máximo de conexões TCP simultâneas permitido para um único servidor.</summary>
      <returns>O número máximo de conexões TCP simultâneas permitidas a um único servidor.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxResponseDrainSize">
      <summary>Obtém ou define o volume máximo de dados que pode ser extraído das respostas em bytes.</summary>
      <returns>A quantidade máxima de dados que podem ser descarregadas de respostas em bytes.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxResponseHeadersLength">
      <summary>Obtém ou define o comprimento máximo, em quilobytes (1024 bytes), dos cabeçalhos de resposta.</summary>
      <returns>O tamanho máximo da parte do cabeçalho da resposta do servidor, em quilobytes.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.PlaintextStreamFilter">
      <summary>Obtém ou define um retorno de chamada personalizado que fornece acesso ao fluxo do protocolo HTTP de texto não criptografado.</summary>
      <returns>Um retorno de chamada que fornece acesso ao fluxo do protocolo HTTP de texto não criptografado.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.PooledConnectionIdleTimeout">
      <summary>Obtém ou define quanto tempo uma conexão pode ficar ociosa no pool para ser considerada reutilizável.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">O valor especificado é menor que <see cref="F:System.TimeSpan.Zero" /> ou igual a <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</exception>
      <returns>O tempo ocioso máximo para uma conexão no pool. O valor padrão dessa propriedade é 2 minutos.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.PooledConnectionLifetime">
      <summary>Obtém ou define quanto tempo uma conexão pode ficar no pool para ser considerada reutilizável.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">O valor especificado é menor que <see cref="F:System.TimeSpan.Zero" /> ou igual a <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</exception>
      <returns>O tempo máximo para uma conexão estar no pool. O valor padrão desta propriedade é <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.PreAuthenticate">
      <summary>Obtém ou define um valor que indica se o manipulador envia um cabeçalho de autorização com a solicitação.</summary>
      <returns>
        <see langword="true" /> Se o manipulador enviar um cabeçalho de autorização com a solicitação; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.Properties" />
    <member name="P:System.Net.Http.SocketsHttpHandler.Proxy">
      <summary>Obtém ou define o proxy personalizado quando a propriedade <see cref="P:System.Net.Http.SocketsHttpHandler.UseProxy" /> é <see langword="true" />.</summary>
      <returns>O proxy personalizado.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.RequestHeaderEncodingSelector">
      <summary>Obtém ou define um retorno de chamada que decodifica os valores dos cabeçalhos da solicitação.</summary>
      <returns>O retorno de chamada do seletor de codificação de cabeçalho para decodificar o valor para o nome do cabeçalho de resposta especificado ou <see langword="null" /> para indicar o comportamento padrão.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.ResponseDrainTimeout">
      <summary>Obtém ou define o intervalo de espera para que os dados sejam descarregados das respostas.</summary>
      <returns>O período de tempo para aguardar os dados serem descarregados das respostas.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.ResponseHeaderEncodingSelector">
      <summary>Obtém ou define um retorno de chamada que decodifica valores de cabeçalho de resposta.</summary>
      <returns>O retorno de chamada do seletor de codificação de cabeçalho para decodificar o valor para o nome do cabeçalho de resposta especificado ou <see langword="null" /> para indicar o comportamento padrão.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.SslOptions">
      <summary>Obtém ou define o conjunto de opções usadas para a autenticação TLS do cliente.</summary>
      <returns>O conjunto de opções usadas para a autenticação TLS do cliente.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.UseCookies">
      <summary>Obtém ou define um valor que indica se o manipulador deve usar cookies.</summary>
      <returns>Um valor que indica se o manipulador deve usar cookies.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.UseProxy">
      <summary>Obtém ou define um valor que indica se o manipulador deve usar um proxy.</summary>
      <returns>Um valor que indica se o manipulador deve usar um proxy.</returns>
    </member>
    <member name="T:System.Net.Http.SocketsHttpPlaintextStreamFilterContext">
      <summary>Representa o contexto passado a PlaintextStreamFilter para uma instância de SocketsHttpHandler.</summary>
    </member>
    <member name="P:System.Net.Http.SocketsHttpPlaintextStreamFilterContext.InitialRequestMessage">
      <summary>Obtém a mensagem de solicitação HTTP inicial que está fazendo com que o fluxo seja usado.</summary>
      <returns>A mensagem de solicitação HTTP que está fazendo com que o fluxo seja usado.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpPlaintextStreamFilterContext.NegotiatedHttpVersion">
      <summary>Obtém a versão do HTTP em uso para este fluxo.</summary>
      <returns>A versão do HTTP em uso para este fluxo.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpPlaintextStreamFilterContext.PlaintextStream">
      <summary>Obtém o fluxo de texto não criptografado que será usado para solicitações e respostas de protocolo HTTP.</summary>
      <returns>O fluxo de texto não criptografado que será usado para solicitações e respostas do protocolo HTTP.</returns>
    </member>
    <member name="T:System.Net.Http.StreamContent">
      <summary>Fornece conteúdo HTTP baseado em um fluxo.</summary>
    </member>
    <member name="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream)">
      <summary>Cria uma nova instância da classe <see cref="T:System.Net.Http.StreamContent" />.</summary>
      <param name="content">O conteúdo usado para inicializar o <see cref="T:System.Net.Http.StreamContent" />.</param>
    </member>
    <member name="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream,System.Int32)">
      <summary>Cria uma nova instância da classe <see cref="T:System.Net.Http.StreamContent" />.</summary>
      <param name="content">O conteúdo usado para inicializar o <see cref="T:System.Net.Http.StreamContent" />.</param>
      <param name="bufferSize">O tamanho, em bytes, do buffer do <see cref="T:System.Net.Http.StreamContent" />.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="content" /> era <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O <paramref name="bufferSize" /> era menor que ou igual a zero.</exception>
    </member>
    <member name="M:System.Net.Http.StreamContent.CreateContentReadStream(System.Threading.CancellationToken)">
      <summary>Retorna o fluxo HTTP como um fluxo somente leitura.</summary>
      <param name="cancellationToken">O token de cancelamento para cancelar a operação.</param>
      <returns>O fluxo de conteúdo HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.StreamContent.CreateContentReadStreamAsync">
      <summary>Retorna o fluxo HTTP como um fluxo somente leitura como uma operação assíncrona.</summary>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.StreamContent.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.Net.Http.StreamContent" /> e, opcionalmente, descarta os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.Net.Http.StreamContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary>Serializa o conteúdo HTTP com várias partes para um fluxo.</summary>
      <param name="stream">O fluxo de destino.</param>
      <param name="context">Informações sobre o transporte (por exemplo, o token da associação de canal). Esse parâmetro pode ser <see langword="null" />.</param>
      <param name="cancellationToken">O token de cancelamento para cancelar a operação.</param>
    </member>
    <member name="M:System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary>Serialize o conteúdo HTTP em um fluxo como uma operação assíncrona.</summary>
      <param name="stream">O fluxo de destino.</param>
      <param name="context">Informações sobre o transporte (token da associação de canal, por exemplo). Esse parâmetro pode ser <see langword="null" />.</param>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary>Serialize o conteúdo HTTP em um fluxo como uma operação assíncrona.</summary>
      <param name="stream">O fluxo de destino.</param>
      <param name="context">Informações sobre o transporte (token da associação de canal, por exemplo). Esse parâmetro pode ser <see langword="null" />.</param>
      <param name="cancellationToken">O token de cancelamento para cancelar a operação.</param>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.Http.StreamContent.TryComputeLength(System.Int64@)">
      <summary>Determina se o conteúdo de fluxo tem um tamanho válido em bytes.</summary>
      <param name="length">Obtém o tamanho do conteúdo do fluxo em bytes.</param>
      <returns>
        <see langword="true" /> se <paramref name="length" /> for um comprimento válido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.StringContent">
      <summary>Fornece conteúdo HTTP baseado em uma cadeia de caracteres.</summary>
    </member>
    <member name="M:System.Net.Http.StringContent.#ctor(System.String)">
      <summary>Cria uma nova instância da classe <see cref="T:System.Net.Http.StringContent" />.</summary>
      <param name="content">O conteúdo usado para inicializar o <see cref="T:System.Net.Http.StringContent" />.</param>
    </member>
    <member name="M:System.Net.Http.StringContent.#ctor(System.String,System.Text.Encoding)">
      <summary>Cria uma nova instância da classe <see cref="T:System.Net.Http.StringContent" />.</summary>
      <param name="content">O conteúdo usado para inicializar o <see cref="T:System.Net.Http.StringContent" />.</param>
      <param name="encoding">A codificação a ser usada para o conteúdo.</param>
    </member>
    <member name="M:System.Net.Http.StringContent.#ctor(System.String,System.Text.Encoding,System.String)">
      <summary>Cria uma nova instância da classe <see cref="T:System.Net.Http.StringContent" />.</summary>
      <param name="content">O conteúdo usado para inicializar o <see cref="T:System.Net.Http.StringContent" />.</param>
      <param name="encoding">A codificação a ser usada para o conteúdo.</param>
      <param name="mediaType">O tipo de mídia a ser usado para o conteúdo.</param>
    </member>
    <member name="M:System.Net.Http.StringContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary>Serializa e grava a cadeia de caracteres fornecida no construtor em um fluxo de conteúdo HTTP como uma operação assíncrona.</summary>
      <param name="stream">O fluxo de destino.</param>
      <param name="context">Informações sobre o transporte, como o token de associação de canal. Esse parâmetro pode ser <see langword="null" />.</param>
      <param name="cancellationToken">O token de cancelamento para cancelar a operação.</param>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
  </members>
</doc>