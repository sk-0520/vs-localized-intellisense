<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Formats.Asn1</name>
  </assembly>
  <members>
    <member name="T:System.Formats.Asn1.Asn1Tag">
      <summary>Este tipo representa una etiqueta ASN.1, como se describe en la recomendación X. 680 de ITU-T.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Boolean">
      <summary>Representa la etiqueta de clase universal para un valor booleano.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ConstructedBitString">
      <summary>Representa la etiqueta de clase universal para un valor de cadena de bits en una codificación construida.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ConstructedOctetString">
      <summary>Representa la etiqueta de clase universal para un valor de cadena de octetos en una codificación construida.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Enumerated">
      <summary>Representa la etiqueta de clase universal para un valor enumerado.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.GeneralizedTime">
      <summary>Representa la etiqueta de clase universal para un valor GeneralizedTime.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Integer">
      <summary>Representa la etiqueta de clase universal para un valor entero.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Null">
      <summary>Representa la etiqueta de clase universal para un valor <see langword="null" />.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ObjectIdentifier">
      <summary>Representa la etiqueta de clase universal para un valor de identificador de objeto.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.PrimitiveBitString">
      <summary>Representa la etiqueta de clase universal para un valor de cadena de bits en una codificación primitiva.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.PrimitiveOctetString">
      <summary>Representa la etiqueta de clase universal para un valor de cadena de octetos en una codificación primitiva.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Sequence">
      <summary>Representa la etiqueta de clase universal para un valor de secuencia (siempre una codificación construida).</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.SetOf">
      <summary>Representa la etiqueta de clase universal para un valor SetOf (siempre es una codificación construida).</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.UtcTime">
      <summary>Representa la etiqueta de clase universal para un valor UtcTime.</summary>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.#ctor(System.Formats.Asn1.TagClass,System.Int32,System.Boolean)">
      <summary>Cree <see cref="T:System.Formats.Asn1.Asn1Tag" /> para un valor especificado dentro de una clase de etiqueta especificada.</summary>
      <param name="tagClass">La clase de etiqueta para esta etiqueta.</param>
      <param name="tagValue">Valor numérico de esta etiqueta.</param>
      <param name="isConstructed">
        <see langword="true" /> para una etiqueta construida, <see langword="false" /> para una etiqueta primitiva.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="tagClass" /> no es un valor conocido.
O bien, <paramref name="tagValue" /> es negativo.</exception>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.#ctor(System.Formats.Asn1.UniversalTagNumber,System.Boolean)">
      <summary>Cree un <see cref="T:System.Formats.Asn1.Asn1Tag" /> para una etiqueta de la clase UNIVERSAL.</summary>
      <param name="universalTagNumber">Uno de los valores de enumeración que especifica el tipo semántico para esta etiqueta.</param>
      <param name="isConstructed">
        <see langword="true" /> para una etiqueta construida, <see langword="false" /> para una etiqueta primitiva.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="universalTagNumber" /> no es un valor conocido.</exception>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.AsConstructed">
      <summary>Genera una etiqueta con los mismos valores <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> y <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />, pero cuyo <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> es <see langword="true" />.</summary>
      <returns>Una etiqueta con los mismos valores <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> y <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />, pero cuyo <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> es <see langword="true" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.AsPrimitive">
      <summary>Genera una etiqueta con los mismos valores <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> y <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />, pero cuyo <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> es <see langword="false" />.</summary>
      <returns>Una etiqueta con los mismos valores <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> y <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />, pero cuyo <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize">
      <summary>Indica el número de bytes necesarios para la codificación BER de esta etiqueta.</summary>
      <returns>El número de bytes necesarios para la codificación BER de esta etiqueta.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Decode(System.ReadOnlySpan{System.Byte},System.Int32@)">
      <summary>Lee una etiqueta codificada en BER que comienza en <paramref name="source" />.</summary>
      <param name="source">La secuencia de bytes de solo lectura cuyo comienzo es una etiqueta codificada en BER.</param>
      <param name="bytesConsumed">Cuando este método vuelve, contiene el número de bytes que contribuyeron a la etiqueta codificada. Este parámetro se trata como sin inicializar.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">Los datos proporcionados no se descodifican en una etiqueta.</exception>
      <returns>La etiqueta descodificada.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Encode(System.Span{System.Byte})">
      <summary>Escribe el formulario codificado en BER de esta etiqueta en <paramref name="destination" />.</summary>
      <param name="destination">El inicio de donde se debe escribir la etiqueta codificada.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destination" />.<see cref="P:System.Span`1.Length" /> &lt; <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" />.</exception>
      <returns>Número de bytes escritos en <paramref name="destination" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Equals(System.Formats.Asn1.Asn1Tag)">
      <summary>Comprueba si <paramref name="other" /> tiene la misma codificación que esta etiqueta.</summary>
      <param name="other">Etiqueta cuya igualdad se va a comprobar.</param>
      <returns>
        <see langword="true" />si <paramref name="other" /> tiene los mismos valores para <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" />, <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> y <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Equals(System.Object)">
      <summary>Comprueba si <paramref name="obj" /> es <see cref="T:System.Formats.Asn1.Asn1Tag" /> con la misma codificación que esta etiqueta.</summary>
      <param name="obj">Objeto cuya igualdad de valores se va a comprobar.</param>
      <returns>
        <see langword="false" /> si <paramref name="obj" /> no es <see cref="T:System.Formats.Asn1.Asn1Tag" />; de lo contrario <see cref="M:System.Formats.Asn1.Asn1Tag.Equals(System.Formats.Asn1.Asn1Tag)" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.GetHashCode">
      <summary>Devuelve el código hash de esta instancia.</summary>
      <returns>Código hash de un entero con signo de 32 bits.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.HasSameClassAndValue(System.Formats.Asn1.Asn1Tag)">
      <summary>Comprueba si <paramref name="other" /> tiene los mismos valores <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> y <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> que esta etiqueta, y no compara <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" />.</summary>
      <param name="other">Etiqueta cuya igualdad de concepto se va a comprobar.</param>
      <returns>
        <see langword="true" /> si <paramref name="other" /> tiene los mismos <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> y <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> que esta etiqueta; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.op_Equality(System.Formats.Asn1.Asn1Tag,System.Formats.Asn1.Asn1Tag)">
      <summary>Comprueba si dos valores <see cref="T:System.Formats.Asn1.Asn1Tag" /> tienen la misma codificación BER.</summary>
      <param name="left">Primer valor que se va a comparar.</param>
      <param name="right">Segundo valor que se va a comparar.</param>
      <returns>
        <see langword="true" /> si <paramref name="left" /> y <paramref name="right" /> tienen la misma codificación BER; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.op_Inequality(System.Formats.Asn1.Asn1Tag,System.Formats.Asn1.Asn1Tag)">
      <summary>Comprueba si dos valores <see cref="T:System.Formats.Asn1.Asn1Tag" /> tienen una codificación BER diferente.</summary>
      <param name="left">Primer valor que se va a comparar.</param>
      <param name="right">Segundo valor que se va a comparar.</param>
      <returns>
        <see langword="true" /> si <paramref name="left" /> y <paramref name="right" /> tienen una codificación BER diferente; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.ToString">
      <summary>Proporciona una representación de texto de esta etiqueta adecuada para la depuración.</summary>
      <returns>Una representación de texto de esta etiqueta adecuada para la depuración.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.TryDecode(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.Asn1Tag@,System.Int32@)">
      <summary>Intenta leer una etiqueta codificada en BER que comienza en <paramref name="source" />.</summary>
      <param name="source">La secuencia de bytes de solo lectura cuyo comienzo es una etiqueta codificada en BER.</param>
      <param name="tag">La etiqueta descodificada.</param>
      <param name="bytesConsumed">Cuando este método vuelve, contiene el número de bytes que han contribuido a la etiqueta codificada, 0 en caso de error. Este parámetro se trata como sin inicializar.</param>
      <returns>
        <see langword="true" /> si una etiqueta se descodificó correctamente; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary>Intenta escribir el formulario codificado en BER de esta etiqueta en <paramref name="destination" />.</summary>
      <param name="destination">El inicio de donde se debe escribir la etiqueta codificada.</param>
      <param name="bytesWritten">Recibe el valor de <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" /> si la operación se realiza correctamente, 0 en caso de error.</param>
      <returns>
        <see langword="false" /> si <paramref name="destination" />.<see cref="P:System.Span`1.Length" /> &lt; <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" />(); en caso contrario, <see langword="true" />.</returns>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.IsConstructed">
      <summary>Indica si la etiqueta representa una codificación construida (<see langword="true" />) o una codificación primitiva (<see langword="false" />).</summary>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.TagClass">
      <summary>La clase de etiqueta a la que pertenece esta etiqueta.</summary>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.TagValue">
      <summary>Valor numérico de esta etiqueta.</summary>
    </member>
    <member name="T:System.Formats.Asn1.AsnContentException">
      <summary>Excepción que se produce cuando no se puede descodificar correctamente un valor de ASN.1 codificado.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Formats.Asn1.AsnContentException" /> con el mensaje predeterminado.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Formats.Asn1.AsnContentException" /> con datos serializados.</summary>
      <param name="info">Objeto que contiene los datos del objeto serializados.</param>
      <param name="context">Información contextual acerca del origen o del destino.</param>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Formats.Asn1.AsnContentException" /> con el mensaje proporcionado.</summary>
      <param name="message">Mensaje de error que explica el motivo de la excepción.</param>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Formats.Asn1.AsnContentException" /> con el mensaje proporcionado y la excepción que es la causa de esta excepción.</summary>
      <param name="message">Mensaje de error que explica el motivo de la excepción.</param>
      <param name="inner">Excepción que es la causa de la excepción actual.</param>
    </member>
    <member name="T:System.Formats.Asn1.AsnDecoder">
      <summary>Proporciona métodos sin estado para descodificar datos ASN.1 con codificación BER, CER o DER.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadBitString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee un valor de cadena de bits de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas y devuelve el contenido de una nueva matriz.</summary>
      <param name="source">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="unusedBitCount">Si la operación se realiza correctamente, recibe el número de bits en el último byte que el escritor comunicó como "sin usar".
Este parámetro se trata como sin inicializar.</param>
      <param name="bytesConsumed">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>Una matriz que incluye el contenido del valor de la cadena de bits.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadBoolean(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee un valor booleano de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas.</summary>
      <param name="source">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="bytesConsumed">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag">Etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 1).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>El valor descodificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadCharacterString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee el siguiente valor como cadena de caracteres con la etiqueta y el tipo de codificación especificados, y devuelve la cadena descodificada.</summary>
      <param name="source">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="encodingType">Uno de los valores de enumeración que representa el tipo de valor que se va a procesar.</param>
      <param name="bytesConsumed">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta universal adecuada para el tipo de codificación solicitado.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> no está definido.
O bien, <paramref name="encodingType" /> no es un tipo de cadena de caracteres conocido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.
O bien, la cadena no se descodificó correctamente.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es igual que <paramref name="encodingType" />.</exception>
      <returns>El valor descodificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEncodedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@)">
      <summary>Busca el intervalo de contenido para el valor codificado al principio del búfer <paramref name="source" /> utilizando las reglas de codificación especificadas.</summary>
      <param name="source">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="contentOffset">Cuando este método vuelve, el desplazamiento de la carga útil de contenido en relación al inicio de <paramref name="source" />.
Este parámetro se trata como sin inicializar.</param>
      <param name="contentLength">Cuando este método vuelve, el número de bytes de la carga útil de contenido (que puede ser 0).
Este parámetro se trata como sin inicializar.</param>
      <param name="bytesConsumed">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">
        <paramref name="source" /> no representa un valor codificado con las reglas de codificación especificadas.</exception>
      <returns>La etiqueta que identifica el contenido.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee un valor enumerado de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas y devuelve el contenido como un segmento del búfer.</summary>
      <param name="source">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="bytesConsumed">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 10).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>El segmento del búfer que contiene los bytes del valor enumerado, en formato big endian con signo.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Type,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee un valor enumerado de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas y lo convierte en la enumeración que es distinta de [<see cref="T:System.FlagsAttribute" />] especificada por <paramref name="enumType" />.</summary>
      <param name="source">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="enumType">Objeto de tipo que representa el tipo de destino.</param>
      <param name="bytesConsumed">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 10).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.
O bien, el valor codificado es demasiado grande para ajustarse a un valor <paramref name="enumType" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> no es un tipo de enumeración.
O bien, <paramref name="enumType" /> se declaró con <see cref="T:System.FlagsAttribute" />.
O bien <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> es <see langword="null" />.</exception>
      <returns>El valor enumerado convertido en <paramref name="enumType" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedValue``1(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee un valor enumerado de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas y lo convierte en la enumeración que es distinta de [<see cref="T:System.FlagsAttribute" />] especificada por <typeparamref name="TEnum" />.</summary>
      <param name="source">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="bytesConsumed">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 10).</param>
      <typeparam name="TEnum">Tipo de enumeración de destino</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.
O bien, el valor codificado es demasiado grande para ajustarse a un valor <typeparamref name="TEnum" />.</exception>
      <exception cref="T:System.ArgumentException">
        <typeparamref name="TEnum" /> no es un tipo de enumeración.
O bien, <typeparamref name="TEnum" /> se declaró con <see cref="T:System.FlagsAttribute" />.
O bien <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>El valor enumerado convertido en <typeparamref name="TEnum" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadGeneralizedTime(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee un valor GeneralizedTime de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas.</summary>
      <param name="source">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="bytesConsumed">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 24).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>El valor descodificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadInteger(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee un valor entero de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas.</summary>
      <param name="source">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="bytesConsumed">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>El valor numérico descodificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadIntegerBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee un valor entero de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas y devuelve el contenido como un segmento del búfer.</summary>
      <param name="source">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="bytesConsumed">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>El segmento del búfer que contiene los bytes del valor entero, en formato big endian con signo.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitList(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee un valor NamedBitList de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas.</summary>
      <param name="source">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="bytesConsumed">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>Los bits del valor codificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitListValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Type,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee un valor NamedBitList de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas y lo convierte en la enumeración [<see cref="T:System.FlagsAttribute" />] especificada por <paramref name="flagsEnumType" />.</summary>
      <param name="source">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="flagsEnumType">Objeto de tipo que representa el tipo de destino.</param>
      <param name="bytesConsumed">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.
O bien, el valor codificado es demasiado grande para ajustarse a un valor <paramref name="flagsEnumType" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="flagsEnumType" /> no es un tipo de enumeración.
O bien, <paramref name="flagsEnumType" /> no se declaró con <see cref="T:System.FlagsAttribute" /> o <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="flagsEnumType" /> es <see langword="null" /></exception>
      <returns>El valor de NamedBitList convertido en <paramref name="flagsEnumType" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitListValue``1(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee un valor NamedBitList de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas y lo convierte en la enumeración [<see cref="T:System.FlagsAttribute" />] especificada por <typeparamref name="TFlagsEnum" />.</summary>
      <param name="source">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="bytesConsumed">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 3).</param>
      <typeparam name="TFlagsEnum">Tipo de enumeración de destino</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.
O bien, el valor codificado es demasiado grande para ajustarse a un valor <typeparamref name="TFlagsEnum" />.</exception>
      <exception cref="T:System.ArgumentException">
        <typeparamref name="TFlagsEnum" /> no es un tipo de enumeración.
O bien, <typeparamref name="TFlagsEnum" /> no se declaró con <see cref="T:System.FlagsAttribute" /> o <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>El valor de NamedBitList convertido en <typeparamref name="TFlagsEnum" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNull(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee un valor <see langword="null" /> de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas.</summary>
      <param name="source">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="bytesConsumed">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 5).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadObjectIdentifier(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee un valor de identificador de objeto de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas.</summary>
      <param name="source">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="bytesConsumed">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 6).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>El identificador de objeto descodificado, en notación decimal con puntos.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadOctetString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee un valor de cadena de octetos de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas y devuelve el contenido de una nueva matriz.</summary>
      <param name="source">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="bytesConsumed">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 4).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>Una matriz que incluye el contenido del valor de la cadena de octetos.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadSequence(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee un valor de Sequence o Sequence-Of de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas.</summary>
      <param name="source">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="contentOffset">Cuando este método vuelve, el desplazamiento de la carga útil de contenido en relación al inicio de <paramref name="source" />.
Este parámetro se trata como sin inicializar.</param>
      <param name="contentLength">Cuando este método vuelve, el número de bytes de la carga útil de contenido (que puede ser 0).
Este parámetro se trata como sin inicializar.</param>
      <param name="bytesConsumed">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 16).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadSetOf(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee un valor Set-Of de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas.</summary>
      <param name="source">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="contentOffset">Cuando este método vuelve, el desplazamiento de la carga útil de contenido en relación al inicio de <paramref name="source" />.
Este parámetro se trata como sin inicializar.</param>
      <param name="contentLength">Cuando este método vuelve, el número de bytes de la carga útil de contenido (que puede ser 0).
Este parámetro se trata como sin inicializar.</param>
      <param name="bytesConsumed">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="skipSortOrderValidation">
        <see langword="true" /> para aceptar siempre los datos en el orden en que se presentan, <see langword="false" /> para comprobar que los datos se ordenan correctamente cuando las reglas de codificación indican que se requiere la ordenación (CER y DER).</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 17).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadUtcTime(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee un valor UtcTime de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas.</summary>
      <param name="source">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="bytesConsumed">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="twoDigitYearMax">El año más grande que se va a representar con este valor.
El valor predeterminado, 2049, representa el intervalo 1950-2049 para los certificados X.509.</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 24).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> no está definido.
O bien, <paramref name="twoDigitYearMax" /> no están en el intervalo [99, 9999].</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>El valor descodificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadBitString(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Intenta copiar un valor de cadena de bits de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas en <paramref name="destination" />.</summary>
      <param name="source">El búfer que contiene los datos codificados.</param>
      <param name="destination">El búfer en el que se va a escribir.</param>
      <param name="ruleSet">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="unusedBitCount">Si la operación se realiza correctamente, recibe el número de bits en el último byte que el escritor comunicó como "sin usar".
Este parámetro se trata como sin inicializar.</param>
      <param name="bytesConsumed">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="bytesWritten">Cuando este método vuelve, el número total de bytes escritos en <paramref name="destination" />.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.
O bien, <paramref name="destination" /> se superpone a <paramref name="source" />.</exception>
      <returns>
        <see langword="true" /> si <paramref name="destination" /> es lo suficientemente grande como para recibir el valor de la cadena de bits; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadCharacterString(System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee un valor de cadena de caracteres de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas, copiando la cadena descodificada en un búfer de destino proporcionado.</summary>
      <param name="source">El búfer que contiene los datos codificados.</param>
      <param name="destination">El búfer en el que se va a escribir.</param>
      <param name="ruleSet">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="encodingType">Uno de los valores de enumeración que representa el tipo de valor que se va a procesar.</param>
      <param name="bytesConsumed">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="charsWritten">Cuando este método vuelve, el número de caracteres escritos en <paramref name="destination" />.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta universal adecuada para el tipo de codificación solicitado.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> no está definido.
O bien, <paramref name="encodingType" /> no es un tipo de cadena de caracteres conocido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.
O bien, la cadena no se descodificó correctamente.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es igual que <paramref name="encodingType" />.</exception>
      <returns>
        <see langword="true" /> y avanza el lector si <paramref name="destination" /> tenía suficiente longitud para recibir el valor; en caso contrario, <see langword="false" /> y el lector no avanza.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadCharacterStringBytes(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag,System.Int32@,System.Int32@)">
      <summary>Intenta leer un valor de cadena de caracteres de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas, copiando los bytes sin procesar en el búfer de destino proporcionado.</summary>
      <param name="source">El búfer que contiene los datos codificados.</param>
      <param name="destination">El búfer en el que se va a escribir.</param>
      <param name="ruleSet">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer.</param>
      <param name="bytesConsumed">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="bytesWritten">Si la operación se realiza correctamente, recibe el número de bytes escritos en <paramref name="destination" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es un tipo de etiqueta de cadena de caracteres.
O bien, <paramref name="destination" /> se superpone a <paramref name="source" />.</exception>
      <returns>
        <see langword="true" /> si <paramref name="destination" /> es lo suficientemente grande como para recibir el valor de la cadena de caracteres sin procesar; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadEncodedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag@,System.Int32@,System.Int32@,System.Int32@)">
      <summary>Intenta localizar el intervalo de contenido para el valor codificado al principio del búfer <paramref name="source" /> utilizando las reglas de codificación especificadas.</summary>
      <param name="source">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="tag">Cuando este método vuelve, la etiqueta que identifica el contenido.
Este parámetro se trata como sin inicializar.</param>
      <param name="contentOffset">Cuando este método vuelve, el desplazamiento de la carga útil de contenido en relación al inicio de <paramref name="source" />.
Este parámetro se trata como sin inicializar.</param>
      <param name="contentLength">Cuando este método vuelve, el número de bytes de la carga útil de contenido (que puede ser 0).
Este parámetro se trata como sin inicializar.</param>
      <param name="bytesConsumed">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> no está definido.</exception>
      <returns>
        <see langword="true" /> si <paramref name="source" /> representa una codificación estructural válida para las reglas de codificación especificadas; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadInt32(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Intenta leer un valor entero de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas como un valor de 32 bits.</summary>
      <param name="source">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="value">Si la operación se ejecuta correctamente, recibe el valor numérico interpretado.
Este parámetro se trata como sin inicializar.</param>
      <param name="bytesConsumed">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>
        <see langword="true" /> si el entero representa un valor que se encuentra entre <see cref="F:System.Int32.MinValue" /> y <see cref="F:System.Int32.MaxValue" />, ambos incluidos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadInt64(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int64@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Intenta leer un valor entero desde <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas como un valor de bit 64 con signo.</summary>
      <param name="source">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="value">Si la operación se ejecuta correctamente, recibe el valor numérico interpretado.
Este parámetro se trata como sin inicializar.</param>
      <param name="bytesConsumed">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>
        <see langword="true" /> si el entero representa un valor que se encuentra entre <see cref="F:System.Int64.MinValue" /> y <see cref="F:System.Int64.MaxValue" />, ambos incluidos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadOctetString(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Intenta obtener un valor de cadena de octetos de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas, copiando el valor en el búfer de destino proporcionado.</summary>
      <param name="source">El búfer que contiene los datos codificados.</param>
      <param name="destination">El búfer en el que se va a escribir.</param>
      <param name="ruleSet">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="bytesConsumed">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="bytesWritten">Cuando este método vuelve, el número total de bytes escritos en <paramref name="destination" />.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 4).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.
O bien, <paramref name="destination" /> se superpone a <paramref name="source" />.</exception>
      <returns>
        <see langword="true" /> si <paramref name="destination" /> es lo suficientemente grande como para recibir el valor de la cadena de octetos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveBitString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.ReadOnlySpan{System.Byte}@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Intenta obtener un valor de cadena de bits de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas, si el valor está contenido en una sola codificación (primitiva).</summary>
      <param name="source">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="unusedBitCount">Si la operación se realiza correctamente, recibe el número de bits en el último byte que el escritor comunicó como "sin usar".
Este parámetro se trata como sin inicializar.</param>
      <param name="value">Si la operación se ejecuta correctamente, recibe un segmento del búfer de entrada que corresponde al valor de la cadena de bits.
Este parámetro se trata como sin inicializar.</param>
      <param name="bytesConsumed">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>
        <see langword="true" /> si el valor de la cadena de bits tiene una codificación primitiva y todos los bits notificados como no utilizados se establecen en 0; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveCharacterStringBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag,System.ReadOnlySpan{System.Byte}@,System.Int32@)">
      <summary>Intenta obtener un valor de cadena de caracteres sin procesar de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas, si el valor está contenido en una sola codificación (primitiva).</summary>
      <param name="source">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer.</param>
      <param name="value">Si la operación se ejecuta correctamente, recibe un segmento del búfer de entrada que corresponde al valor de la cadena de bits.
Este parámetro se trata como sin inicializar.</param>
      <param name="bytesConsumed">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es un tipo de etiqueta de cadena de caracteres.</exception>
      <returns>
        <see langword="true" /> si el valor de la cadena de caracteres tiene una codificación primitiva; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveOctetString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.ReadOnlySpan{System.Byte}@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Intenta obtener un valor de cadena de octetos de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas, si el valor está contenido en una sola codificación (primitiva).</summary>
      <param name="source">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="value">Si la operación se ejecuta correctamente, recibe un segmento del búfer de entrada que corresponde al valor de la cadena de octetos.
Este parámetro se trata como sin inicializar.</param>
      <param name="bytesConsumed">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 4).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>
        <see langword="true" /> si el valor de la cadena de octetos tiene una codificación primitiva; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadUInt32(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.UInt32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Intenta leer un valor entero de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas como un valor de 32 bits sin signo.</summary>
      <param name="source">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="value">Si la operación se ejecuta correctamente, recibe el valor numérico interpretado.
Este parámetro se trata como sin inicializar.</param>
      <param name="bytesConsumed">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>
        <see langword="true" /> si el entero representa un valor que se encuentra entre <see cref="F:System.UInt32.MinValue" /> y <see cref="F:System.UInt32.MaxValue" />, ambos incluidos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadUInt64(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.UInt64@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Intenta leer un valor entero de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas como un valor de 64 bits sin signo.</summary>
      <param name="source">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="value">Si la operación se ejecuta correctamente, recibe el valor numérico interpretado.
Este parámetro se trata como sin inicializar.</param>
      <param name="bytesConsumed">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>
        <see langword="true" /> si el entero representa un valor que se encuentra entre <see cref="F:System.UInt64.MinValue" /> y <see cref="F:System.UInt64.MaxValue" />, ambos incluidos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnEncodingRules">
      <summary>Conjunto de reglas de codificación de un objeto <see cref="T:System.Formats.Asn1.AsnReader" /> o <see cref="T:System.Formats.Asn1.AsnWriter" />.</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.BER">
      <summary>Reglas de codificación básica ITU-T X. 690</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.CER">
      <summary>Reglas de codificación canónica ITU-T X. 690</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.DER">
      <summary>Reglas de codificación distinguida ITU-T X. 690</summary>
    </member>
    <member name="T:System.Formats.Asn1.AsnReader">
      <summary>Un lector con estado y de solo avance para datos de ASN.1 con codificación BER, CER o DER.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.#ctor(System.ReadOnlyMemory{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.AsnReaderOptions)">
      <summary>Construya <see cref="T:System.Formats.Asn1.AsnReader" /> sobre <paramref name="data" /> con un conjunto de reglas determinado.</summary>
      <param name="data">Datos que se van a leer.</param>
      <param name="ruleSet">Las restricciones de codificación para el lector.</param>
      <param name="options">Opciones adicionales para el lector.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> no está definido.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekContentBytes">
      <summary>Obtenga una vista de <see cref="T:System.ReadOnlyMemory`1" /> de los octetos de contenido (bytes) del siguiente valor codificado sin avanzar el lector.</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El lector se coloca en un punto en el que la etiqueta o la longitud no son válidas bajo las reglas de codificación actuales.</exception>
      <returns>Los bytes de los octetos de contenido del siguiente valor codificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekEncodedValue">
      <summary>Obtenga una vista de <see cref="T:System.ReadOnlyMemory`1" /> del siguiente valor codificado sin avanzar el lector. En el caso de codificaciones de longitud indefinida, esto incluye el marcador de fin de contenido.</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El lector se coloca en un punto en el que la etiqueta o la longitud no son válidas bajo las reglas de codificación actuales.</exception>
      <returns>Los bytes del siguiente valor codificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekTag">
      <summary>Lea la etiqueta codificada en la posición de datos siguiente, sin avanzar el lector.</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException">no se pudo descodificar una etiqueta en la posición actual del lector.</exception>
      <returns>El valor de la etiqueta descodificada.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadBitString(System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee el siguiente valor como una CADENA DE BITS con una etiqueta especificada y devuelve el valor en una matriz de bytes.</summary>
      <param name="unusedBitCount">Si la operación se realiza correctamente, recibe el número de bits en el último byte que el escritor comunicó como "sin usar".</param>
      <param name="expectedTag">Etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 1).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>Una copia del valor en una matriz recién asignada de tamaño preciso.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadBoolean(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee el siguiente valor como booleano con una etiqueta especificada.</summary>
      <param name="expectedTag">Etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 1).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>El valor descodificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadCharacterString(System.Formats.Asn1.UniversalTagNumber,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee el siguiente valor como cadena de caracteres con la etiqueta y el tipo de codificación especificados, y devuelve el valor descodificado como una cadena.</summary>
      <param name="encodingType">Uno de los valores de enumeración que representa el tipo de valor que se va a procesar.</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta universal adecuada para el tipo de codificación solicitado.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="encodingType" /> no es un tipo de cadena de caracteres conocido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.
O bien, la cadena no se descodificó correctamente.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es igual que <paramref name="encodingType" />.</exception>
      <returns>El valor descodificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEncodedValue">
      <summary>Obtenga una vista de <see cref="T:System.ReadOnlyMemory`1" /> del siguiente valor codificado y haga avanzar el lector después. Para una codificación de longitud indefinida, esto incluye el marcador de fin de contenido.</summary>
      <returns>Una vista de <see cref="T:System.ReadOnlyMemory`1" /> del siguiente valor codificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedBytes(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee el siguiente valor como enumerado con una etiqueta especificada y devuelve el contenido como <see cref="T:System.ReadOnlyMemory`1" /> sobre los datos originales.</summary>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 10).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>Los bytes del valor enumerado, en formato big endian firmado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedValue(System.Type,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee el siguiente valor como enumerado con una etiqueta especificada y lo convierte en la enumeración que es distinta de [<see cref="T:System.FlagsAttribute" />] especificada por <paramref name="enumType" />.</summary>
      <param name="enumType">Objeto de tipo que representa el tipo de destino.</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 10).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.
O bien, el valor codificado es demasiado grande para ajustarse a un valor <paramref name="enumType" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> no es un tipo de enumeración.
O bien, <paramref name="enumType" /> se declaró con <see cref="T:System.FlagsAttribute" />.
O bien <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> es <see langword="null" />.</exception>
      <returns>El valor enumerado convertido en <paramref name="enumType" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedValue``1(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee el siguiente valor como enumerado con una etiqueta especificada y lo convierte en la enumeración que es distinta de [<see cref="T:System.FlagsAttribute" />] especificada por <typeparamref name="TEnum" />.</summary>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 10).</param>
      <typeparam name="TEnum">Tipo de enumeración de destino</typeparam>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.
O bien, el valor codificado es demasiado grande para ajustarse a un valor <typeparamref name="TEnum" />.</exception>
      <exception cref="T:System.ArgumentException">
        <typeparamref name="TEnum" /> no es un tipo de enumeración.
O bien, <typeparamref name="TEnum" /> se declaró con <see cref="T:System.FlagsAttribute" />.
O bien <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>El valor enumerado convertido en <typeparamref name="TEnum" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadGeneralizedTime(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee el siguiente valor como GeneralizedTime con una etiqueta especificada.</summary>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 24).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>El valor descodificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadInteger(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee el siguiente valor como un entero con una etiqueta especificada.</summary>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>El valor descodificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadIntegerBytes(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee el siguiente valor como un entero con una etiqueta especificada y devuelve el contenido como <see cref="T:System.ReadOnlyMemory`1" /> sobre los datos originales.</summary>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>Los bytes del valor entero, en formato big endian con signo.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitList(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee el siguiente valor como NamedBitList con una etiqueta especificada.</summary>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>Los bits del valor codificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitListValue(System.Type,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee el siguiente valor como NamedBitList con una etiqueta especificada y lo convierte en la enumeración [<see cref="T:System.FlagsAttribute" />] especificada por <paramref name="flagsEnumType" />.</summary>
      <param name="flagsEnumType">Objeto de tipo que representa el tipo de destino.</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.
O bien, el valor codificado es demasiado grande para ajustarse a un valor <paramref name="flagsEnumType" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="flagsEnumType" /> no es un tipo de enumeración.
O bien, <paramref name="flagsEnumType" /> no se declaró con <see cref="T:System.FlagsAttribute" /> o <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="flagsEnumType" /> es <see langword="null" /></exception>
      <returns>El valor de NamedBitList convertido en <paramref name="flagsEnumType" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitListValue``1(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee el siguiente valor como NamedBitList con una etiqueta especificada y lo convierte en la enumeración [<see cref="T:System.FlagsAttribute" />] especificada por <typeparamref name="TFlagsEnum" />.</summary>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer.</param>
      <typeparam name="TFlagsEnum">Tipo de enumeración de destino</typeparam>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.
O bien, el valor codificado es demasiado grande para ajustarse a un valor <typeparamref name="TFlagsEnum" />.</exception>
      <exception cref="T:System.ArgumentException">
        <typeparamref name="TFlagsEnum" /> no es un tipo de enumeración.
O bien, <typeparamref name="TFlagsEnum" /> no se declaró con <see cref="T:System.FlagsAttribute" /> o <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>El valor de NamedBitList convertido en <typeparamref name="TFlagsEnum" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNull(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee el siguiente valor como NULL con una etiqueta especificada.</summary>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 5).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadObjectIdentifier(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee el siguiente valor como un IDENTIFICADOR DE OBJETO con una etiqueta especificada y devuelve el valor en una cadena con formato decimal con puntos.</summary>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 6).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>Valor del identificador de objeto en una cadena de formato decimal con puntos.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee el siguiente valor como una CADENA DE OCTETOS con la etiqueta UNIVERSAL 4 y devuelve el valor en una matriz de bytes.</summary>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 4).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>Una copia del valor en una matriz recién asignada de tamaño preciso.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee el siguiente valor como SEQUENCE o SEQUENCE-OF con la etiqueta especificada y devuelve el resultado como un nuevo lector situado en el primer valor de la secuencia (o con <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />).</summary>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 16).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>Un nuevo lector situado en el primer valor de la secuencia (o con <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />).</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSetOf(System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee el siguiente valor como un SET-OF con la etiqueta especificada y devuelve el resultado como un nuevo lector situado en el primer valor de Set-Of (o con <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />).</summary>
      <param name="skipSortOrderValidation">
        <see langword="true" /> para aceptar siempre los datos en el orden en que se presentan, <see langword="false" /> para comprobar que los datos se ordenan correctamente cuando las reglas de codificación indican que se requiere la ordenación (CER y DER).</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 17).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>Un nuevo lector situado en el primer valor de Set-Of (o con <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />).</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee el siguiente valor como SET-OF con la etiqueta especificada y devuelve el resultado como un nuevo lector situado en el primer valor de Set-Of (o con <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />), utilizando el valor <see cref="P:System.Formats.Asn1.AsnReaderOptions.SkipSetSortOrderVerification" /> del constructor (valor predeterminado <see langword="false" />).</summary>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 17).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>Un nuevo lector situado en el primer valor de Set-Of (o con <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />).</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadUtcTime(System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee el siguiente valor como UTCTime con una etiqueta especificada.</summary>
      <param name="twoDigitYearMax">El año más grande que se va a representar con este valor.</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 23).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>El valor descodificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadUtcTime(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee el siguiente valor como UTCTime con una etiqueta especificada utilizando el valor de <see cref="P:System.Formats.Asn1.AsnReaderOptions.UtcTimeTwoDigitYearMax" /> de las opciones que se pasan al constructor (con un valor predeterminado de 2049).</summary>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 23).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>El valor descodificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ThrowIfNotEmpty">
      <summary>Produce un <see cref="T:System.Formats.Asn1.AsnContentException" /> estandarizado si el lector tiene datos restantes; no realiza ninguna función si <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> devuelve <see langword="false" />.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadBitString(System.Span{System.Byte},System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee el siguiente valor como una CADENA DE BITS con una etiqueta especificada y copia el valor en un búfer de destino proporcionado.</summary>
      <param name="destination">El búfer en el que se va a escribir.</param>
      <param name="unusedBitCount">Si la operación se realiza correctamente, recibe el número de bits en el último byte que el escritor comunicó como "sin usar".</param>
      <param name="bytesWritten">Si la operación se realiza correctamente, recibe el número de bytes escritos en <paramref name="destination" />.</param>
      <param name="expectedTag">Etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 1).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>
        <see langword="true" /> y avanza el lector si <paramref name="destination" /> tenía suficiente longitud para recibir el valor; en caso contrario, <see langword="false" /> y el lector no avanza.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadCharacterString(System.Span{System.Char},System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee el siguiente valor como cadena de caracteres con la etiqueta y el tipo de codificación especificados y copia el valor descodificado en un búfer de destino proporcionado.</summary>
      <param name="destination">El búfer en el que se va a escribir.</param>
      <param name="encodingType">Uno de los valores de enumeración que representa el tipo de valor que se va a procesar.</param>
      <param name="charsWritten">Si la operación se ejecuta correctamente, recibe el número de caracteres escritos en <paramref name="destination" />.</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta universal adecuada para el tipo de codificación solicitado.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="encodingType" /> no es un tipo de cadena de caracteres conocido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.
O bien, la cadena no se descodificó correctamente.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es igual que <paramref name="encodingType" />.</exception>
      <returns>
        <see langword="true" /> y avanza el lector si <paramref name="destination" /> tenía suficiente longitud para recibir el valor; en caso contrario, <see langword="false" /> y el lector no avanza.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadCharacterStringBytes(System.Span{System.Byte},System.Formats.Asn1.Asn1Tag,System.Int32@)">
      <summary>Lee el siguiente valor como cadena de caracteres con la etiqueta especificada y copia los bytes sin procesar en un búfer de destino proporcionado.</summary>
      <param name="destination">El búfer en el que se va a escribir.</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer.</param>
      <param name="bytesWritten">Si la operación se realiza correctamente, recibe el número de bytes escritos en <paramref name="destination" />.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es un tipo de etiqueta de cadena de caracteres.</exception>
      <returns>
        <see langword="true" /> y avanza el lector si <paramref name="destination" /> tenía suficiente longitud para recibir el valor; en caso contrario, <see langword="false" /> y el lector no avanza.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadInt32(System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Intenta leer el siguiente valor como un entero con una etiqueta especificada, como un valor de 32 bits con signo.</summary>
      <param name="value">Si la operación se ejecuta correctamente, recibe el valor descodificado.</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>
        <see langword="false" /> y no avanza el lector si el valor no está entre <see cref="F:System.Int32.MinValue" /> y <see cref="F:System.Int32.MaxValue" />, ambos incluidos; en caso contrario, se devuelve <see langword="true" /> y el lector avanza.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadInt64(System.Int64@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Intenta leer el siguiente valor como un entero con una etiqueta especificada, como un valor de 64 bits con signo.</summary>
      <param name="value">Si la operación se ejecuta correctamente, recibe el valor descodificado.</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>
        <see langword="false" /> y no avanza el lector si el valor no está entre <see cref="F:System.Int64.MinValue" /> y <see cref="F:System.Int64.MaxValue" />, ambos incluidos; en caso contrario, se devuelve <see langword="true" /> y el lector avanza.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadOctetString(System.Span{System.Byte},System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee el valor siguiente como una CADENA DE OCTETOS con una etiqueta especificada, copiando el valor en un búfer de destino proporcionado.</summary>
      <param name="destination">El búfer en el que se va a escribir.</param>
      <param name="bytesWritten">Si la operación se realiza correctamente, recibe el número de bytes escritos en <paramref name="destination" />.</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 4).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>
        <see langword="true" /> y avanza el lector si <paramref name="destination" /> tenía suficiente longitud para recibir el valor; en caso contrario, <see langword="false" /> y el lector no avanza.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveBitString(System.Int32@,System.ReadOnlyMemory{System.Byte}@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lee el siguiente valor como una CADENA DE BITS con una etiqueta especificada y devuelve el contenido como <see cref="T:System.ReadOnlyMemory`1" /> sobre los datos originales.</summary>
      <param name="unusedBitCount">Si la operación se realiza correctamente, recibe el número de bits en el último byte que el escritor comunicó como "sin usar".</param>
      <param name="value">Si la operación se ejecuta correctamente, recibe <see cref="T:System.ReadOnlyMemory`1" /> sobre los datos originales correspondientes al valor de la CADENA DE BITS.</param>
      <param name="expectedTag">Etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 1).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>
        <see langword="true" /> y avanza el lector si el valor de la CADENA DE BITS tenía una codificación primitiva, <see langword="false" /> y no avanza el lector si tenía una codificación construida.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveCharacterStringBytes(System.Formats.Asn1.Asn1Tag,System.ReadOnlyMemory{System.Byte}@)">
      <summary>Lee el siguiente valor como un carácter con una etiqueta especificada y devuelve el contenido como <see cref="T:System.ReadOnlyMemory`1" /> sin procesar sobre los datos originales.</summary>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer.</param>
      <param name="contents">Si la operación se ejecuta correctamente, recibe <see cref="T:System.ReadOnlyMemory`1" /> sobre los datos originales correspondientes al valor de la cadena de caracteres.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es un tipo de etiqueta de cadena de caracteres.</exception>
      <returns>
        <see langword="true" /> y avanza el lector si el valor de la cadena de caracteres tenía una codificación primitiva; <see langword="false" /> y no avanza el lector si tenía una codificación construida.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveOctetString(System.ReadOnlyMemory{System.Byte}@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Intenta leer el siguiente valor como una CADENA DE OCTETOS con una etiqueta especificada y devuelve el contenido como <see cref="T:System.ReadOnlyMemory`1" /> sobre los datos originales.</summary>
      <param name="contents">Si la operación se ejecuta correctamente, recibe <see cref="T:System.ReadOnlyMemory`1" /> sobre los datos originales correspondientes al valor de la CADENA DE OCTETOS.</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>
        <see langword="true" /> y avanza el lector si el valor de la CADENA DE OCTETOS tenía una codificación primitiva, <see langword="false" /> y no avanza el lector si tenía una codificación construida.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadUInt32(System.UInt32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Intenta leer el siguiente valor como un entero con una etiqueta especificada, como un valor de 32 bits sin signo.</summary>
      <param name="value">Si la operación se ejecuta correctamente, recibe el valor descodificado.</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>
        <see langword="false" /> y no avanza el lector si el valor no está entre <see cref="F:System.UInt32.MinValue" /> y <see cref="F:System.UInt32.MaxValue" />, ambos incluidos; en caso contrario, se devuelve <see langword="true" /> y el lector avanza.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadUInt64(System.UInt64@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Intenta leer el siguiente valor como un entero con una etiqueta especificada, como un valor de 64 bits sin signo.</summary>
      <param name="value">Si la operación se ejecuta correctamente, recibe el valor descodificado.</param>
      <param name="expectedTag">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>
        <see langword="false" /> y no avanza el lector si el valor no está entre <see cref="F:System.UInt64.MinValue" /> y <see cref="F:System.UInt64.MaxValue" />, ambos incluidos; en caso contrario, se devuelve <see langword="true" /> y el lector avanza.</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReader.HasData">
      <summary>Obtiene una indicación de si el lector tiene datos restantes disponibles para su procesamiento.</summary>
      <returns>
        <see langword="true" /> Si hay más datos disponibles para que los procese el lector; en caso contrario, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReader.RuleSet">
      <summary>Obtiene las reglas de codificación que usa este lector.</summary>
      <returns>Las reglas de codificación que usa este lector.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnReaderOptions">
      <summary>Especifica las opciones que modifican el comportamiento de un objeto <see cref="T:System.Formats.Asn1.AsnReader" />.</summary>
    </member>
    <member name="P:System.Formats.Asn1.AsnReaderOptions.SkipSetSortOrderVerification">
      <summary>Obtiene o establece un valor que indica si el lector debe omitir el orden de ordenación en un conjunto o conjunto de valores.</summary>
      <returns>
        <see langword="true" /> Si el lector no debe validar que un conjunto o conjunto de valores está ordenado correctamente para las reglas de codificación actuales; en caso contrario, <see langword="false" /> .
De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReaderOptions.UtcTimeTwoDigitYearMax">
      <summary>Obtiene o establece el año más grande que se va a representar con un valor de UtcTime.</summary>
      <returns>El año más grande que se va a representar con un valor de UtcTime. El valor predeterminado es 2049.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnWriter">
      <summary>Un escritor de datos de ASN. 1 con codificación de BER, CER y DER.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.#ctor(System.Formats.Asn1.AsnEncodingRules)">
      <summary>Cree un nuevo <see cref="T:System.Formats.Asn1.AsnWriter" /> con un conjunto determinado de reglas de codificación.</summary>
      <param name="ruleSet">Las restricciones de codificación para el escritor.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> no está definido.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.CopyTo(System.Formats.Asn1.AsnWriter)">
      <summary>Copie el valor de este escritor en otro.</summary>
      <param name="destination">El escritor que va a recibir el valor.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destination" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> o <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> no se ha cerrado a través de <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> o <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.
O bien, este escritor está vacío.
O bien, este escritor representa más de un valor de nivel superior.
O bien, el valor de este escritor se codifica de una manera que no es compatible con el conjunto de reglas del escritor de destino.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Encode">
      <summary>Devuelve una nueva matriz que contiene el valor codificado.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> o <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> no se ha cerrado a través de <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> o <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      <returns>Un matriz de tamaño preciso que contiene el valor codificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Encode(System.Span{System.Byte})">
      <summary>Escribe la representación codificada de los datos en <paramref name="destination" />.</summary>
      <param name="destination">El búfer en el que se va a escribir.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> o <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> no se ha cerrado a través de <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> o <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      <returns>Número de bytes escritos en <paramref name="destination" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.EncodedValueEquals(System.Formats.Asn1.AsnWriter)">
      <summary>Determina si <see cref="M:System.Formats.Asn1.AsnWriter.Encode" /> generaría una salida idéntica a <paramref name="other" />.</summary>
      <param name="other">Instancia con la que se van a comparar los valores codificados.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> o <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> no se ha cerrado a través de <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> o <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      <returns>
        <see langword="true" /> si los datos codificados pendientes son idénticos a <paramref name="other" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.EncodedValueEquals(System.ReadOnlySpan{System.Byte})">
      <summary>Determina si <see cref="M:System.Formats.Asn1.AsnWriter.Encode" /> generaría una salida idéntica a <paramref name="other" />.</summary>
      <param name="other">Valor codificado con el que se va a comparar.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> o <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> no se ha cerrado a través de <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> o <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      <returns>
        <see langword="true" /> si los datos codificados pendientes son idénticos a <paramref name="other" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.GetEncodedLength">
      <summary>Obtiene el número de bytes que <see cref="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)" /> escribiría.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" />, <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />, o <see cref="M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> se llamó sin el método Pop correspondiente.</exception>
      <returns>El número de bytes que <see cref="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)" /> escribirá.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Indica que la cadena de octetos abiertos con la etiqueta UNIVERSAL 4 está cerrada y devuelve el escritor al contexto primario.</summary>
      <param name="tag">La etiqueta que se va a escribir o <see langword="null" /> para la etiqueta predeterminada (Universal 4).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <exception cref="T:System.InvalidOperationException">El escritor no está colocado actualmente dentro de una cadena de octetos con la etiqueta especificada.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Indica que la secuencia abierta con la etiqueta especificada está cerrada y se devuelve el escritor al contexto principal.</summary>
      <param name="tag">La etiqueta que se va a escribir o <see langword="null" /> para la etiqueta predeterminada (Universal 16).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <exception cref="T:System.InvalidOperationException">El escritor no está colocado actualmente dentro de una secuencia con la etiqueta especificada.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Indica que Set-Of abierto con la etiqueta especificada está cerrado y se devuelve el escritor al contexto principal.</summary>
      <param name="tag">La etiqueta que se va a escribir o <see langword="null" /> para la etiqueta predeterminada (Universal 17).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <exception cref="T:System.InvalidOperationException">El escritor no está colocado actualmente dentro de un Set-Of con la etiqueta especificada.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Comience a escribir un valor de cadena de octetos con una etiqueta especificada.</summary>
      <param name="tag">La etiqueta que se va a escribir o <see langword="null" /> para la etiqueta predeterminada (Universal 4).</param>
      <returns>Un valor descartable que llamará automáticamente a <see cref="M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Comience a escribir una secuencia con una etiqueta especificada.</summary>
      <param name="tag">La etiqueta que se va a escribir o <see langword="null" /> para la etiqueta predeterminada (Universal 16).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>Un valor descartable que llamará automáticamente a <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Comience a escribir un elemento Set-Of con una etiqueta especificada.</summary>
      <param name="tag">La etiqueta que se va a escribir o <see langword="null" /> para la etiqueta predeterminada (Universal 17).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns>Un valor descartable que llamará automáticamente a <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Reset">
      <summary>Restablezca el escritor para que no tenga datos, sin liberar recursos.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary>Intenta escribir la representación codificada de los datos en <paramref name="destination" />.</summary>
      <param name="destination">El búfer en el que se va a escribir.</param>
      <param name="bytesWritten">Si la operación se realiza correctamente, recibe el número de bytes escritos en <paramref name="destination" />.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> o <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> no se ha cerrado a través de <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> o <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      <returns>
        <see langword="true" /> si la codificación se realiza correctamente, <see langword="false" /> si <paramref name="destination" /> es demasiado pequeño.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteBitString(System.ReadOnlySpan{System.Byte},System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Escriba un valor de cadena de bits con una etiqueta especificada.</summary>
      <param name="value">Valor que se va a escribir.</param>
      <param name="unusedBitCount">El número de bits finales que no son semánticos.</param>
      <param name="tag">La etiqueta que se va a escribir, o <see langword="null" /> para la etiqueta predeterminada (Universal 3).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.
O bien, <paramref name="value" /> tiene una longitud 0 y <paramref name="unusedBitCount" /> no es 0. O bien <paramref name="value" /> no está vacío y se ha establecido cualquiera de los bits identificados por <paramref name="unusedBitCount" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="unusedBitCount" /> no está en el intervalo [0,7].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteBoolean(System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Escribe un valor booleano con una etiqueta especificada.</summary>
      <param name="value">Valor que se va a escribir.</param>
      <param name="tag">La etiqueta que se va a escribir o <see langword="null" /> para la etiqueta predeterminada (Universal 1).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteCharacterString(System.Formats.Asn1.UniversalTagNumber,System.ReadOnlySpan{System.Char},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Escriba la cadena proporcionada con el tipo de codificación especificado mediante la etiqueta especificada que corresponde al tipo de codificación.</summary>
      <param name="encodingType">Uno de los valores de enumeración que representa la codificación que se va a utilizar.</param>
      <param name="str">Cadena que se va a escribir.</param>
      <param name="tag">La etiqueta que se va a escribir o <see langword="null" /> para la etiqueta universal que es adecuada para el tipo de codificación solicitado.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="encodingType" /> no es un tipo de codificación de cadena de caracteres restringido.
O bien, <paramref name="encodingType" /> es un tipo de codificación de cadena de caracteres restringido que actualmente no es compatible con este método.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteCharacterString(System.Formats.Asn1.UniversalTagNumber,System.String,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Escriba la cadena proporcionada con el tipo de codificación especificado mediante la etiqueta especificada que corresponde al tipo de codificación.</summary>
      <param name="encodingType">Uno de los valores de enumeración que representa la codificación que se va a utilizar.</param>
      <param name="value">Cadena que se va a escribir.</param>
      <param name="tag">La etiqueta que se va a escribir o <see langword="null" /> para la etiqueta universal que es adecuada para el tipo de codificación solicitado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> es <see langword="null" /></exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="encodingType" /> no es un tipo de codificación de cadena de caracteres restringido.
O bien, <paramref name="encodingType" /> es un tipo de codificación de cadena de caracteres restringido que actualmente no es compatible con este método.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEncodedValue(System.ReadOnlySpan{System.Byte})">
      <summary>Escriba un solo valor que ya se haya codificado.</summary>
      <param name="value">Valor que se va a escribir.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> no se pudo leer bajo las reglas de codificación actuales.
O bien, <paramref name="value" /> tiene datos más allá del final del primer valor.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEnumeratedValue(System.Enum,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Escriba un valor de enumeración que es distinto de [<see cref="T:System.FlagsAttribute" />] como enumerado con la etiqueta UNIVERSAL 10.</summary>
      <param name="value">El valor de enumeración al que se le ha aplicado con conversión boxing que se va a escribir.</param>
      <param name="tag">La etiqueta que se va a escribir, o <see langword="null" /> para la etiqueta predeterminada (Universal 10).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.
O bien, <paramref name="value" /> no es un valor de enumeración al que se le ha aplicado la conversión boxing.
O bien, el tipo de <paramref name="value" /> al que no se le ha aplicado la conversión boxing se ha declarado [<see cref="T:System.FlagsAttribute" />].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEnumeratedValue``1(``0,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Escriba un valor de enumeración que es distinto de [<see cref="T:System.FlagsAttribute" />] como enumerado con la etiqueta UNIVERSAL 10.</summary>
      <param name="value">El valor de enumeración al que se le ha aplicado con conversión boxing que se va a escribir.</param>
      <param name="tag">La etiqueta que se va a escribir, o <see langword="null" /> para la etiqueta predeterminada (Universal 10).</param>
      <typeparam name="TEnum">Tipo de enumeración que no es [ <see cref="T:System.FlagsAttribute" /> ] que se va a escribir.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.
O bien, <typeparamref name="TEnum" /> no es una enumeración.
O bien, <typeparamref name="TEnum" /> se declara [<see cref="T:System.FlagsAttribute" />].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteGeneralizedTime(System.DateTimeOffset,System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Escribe el <see cref="T:System.DateTimeOffset" /> proporcionado como GeneralizedTime con una etiqueta UNIVERSAL 24 especificada, excluyendo opcionalmente las fracciones de segundo.</summary>
      <param name="value">Valor que se va a escribir.</param>
      <param name="omitFractionalSeconds">
        <see langword="true" /> para tratar las fracciones de segundo de <paramref name="value" /> como 0, incluso si hay un valor distinto de cero.</param>
      <param name="tag">La etiqueta que se va a escribir, o <see langword="null" /> para la etiqueta predeterminada (Universal 24).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.Int64,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Escribe un valor entero con una etiqueta especificada.</summary>
      <param name="value">Valor que se va a escribir.</param>
      <param name="tag">La etiqueta que se va a escribir, o <see langword="null" /> para la etiqueta predeterminada (Universal 2).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.Numerics.BigInteger,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Escribe un valor entero con una etiqueta especificada.</summary>
      <param name="value">Valor que se va a escribir.</param>
      <param name="tag">La etiqueta que se va a escribir, o <see langword="null" /> para la etiqueta predeterminada (Universal 2).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Escribe un valor entero con una etiqueta especificada.</summary>
      <param name="value">El valor entero que se va a escribir, en el orden de bytes big endian con signo.</param>
      <param name="tag">La etiqueta que se va a escribir, o <see langword="null" /> para la etiqueta predeterminada (Universal 2).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <exception cref="T:System.ArgumentException">Los 9 bits más significativos están establecidos.
O bien, los 9 bits más significativos no se han establecido.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.UInt64,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Escribe un valor entero con una etiqueta especificada.</summary>
      <param name="value">Valor que se va a escribir.</param>
      <param name="tag">La etiqueta que se va a escribir, o <see langword="null" /> para la etiqueta predeterminada (Universal 2).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteIntegerUnsigned(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Escribe un valor entero con una etiqueta especificada.</summary>
      <param name="value">El valor entero que se va a escribir, en el orden de bytes big endian sin signo.</param>
      <param name="tag">La etiqueta que se va a escribir, o <see langword="null" /> para la etiqueta predeterminada (Universal 2).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <exception cref="T:System.ArgumentException">Los 9 bits más significativos están anulados.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList(System.Collections.BitArray,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Escriba un valor de matriz de bits como NamedBitList con una etiqueta especificada.</summary>
      <param name="value">Los bits que se van a escribir.</param>
      <param name="tag">La etiqueta que se va a escribir, o <see langword="null" /> para la etiqueta predeterminada (Universal 3).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList(System.Enum,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Escriba un valor de enumeración [<see cref="T:System.FlagsAttribute" />] como NamedBitList con una etiqueta especificada.</summary>
      <param name="value">Valor de enumeración al que se le ha aplicado con conversión boxing que se va a escribir.</param>
      <param name="tag">La etiqueta que se va a escribir, o <see langword="null" /> para la etiqueta predeterminada (Universal 3).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.
O bien, <paramref name="value" /> no es un valor de enumeración al que se le ha aplicado la conversión boxing.
O bien, el tipo al que no se le ha aplicado la conversión boxing <paramref name="value" /> no se ha declarado [<see cref="T:System.FlagsAttribute" />].</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList``1(``0,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Escriba un valor de enumeración [<see cref="T:System.FlagsAttribute" />] como NamedBitList con una etiqueta especificada.</summary>
      <param name="value">El valor de enumeración que se va a escribir.</param>
      <param name="tag">La etiqueta que se va a escribir, o <see langword="null" /> para la etiqueta predeterminada (Universal 3).</param>
      <typeparam name="TEnum">Tipo de <see cref="T:System.FlagsAttribute" /> enumeración [] que se va a escribir.</typeparam>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.
O bien, <typeparamref name="TEnum" /> no es un valor de enumeración.
O bien, <typeparamref name="TEnum" /> no se ha declarado como [<see cref="T:System.FlagsAttribute" />].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNull(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Escriba NULL con una etiqueta especificada.</summary>
      <param name="tag">La etiqueta que se va a escribir, o <see langword="null" /> para la etiqueta predeterminada (Universal 5).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteObjectIdentifier(System.ReadOnlySpan{System.Char},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Escriba un identificador de objeto con una etiqueta especificada.</summary>
      <param name="oidValue">El identificador de objeto que se va a escribir.</param>
      <param name="tag">La etiqueta que se va a escribir, o <see langword="null" /> para la etiqueta predeterminada (Universal 6).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.
O bien, <paramref name="oidValue" /> no es un identificador de objeto decimal con puntos válido.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteObjectIdentifier(System.String,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Escriba un identificador de objeto con una etiqueta especificada.</summary>
      <param name="oidValue">El identificador de objeto que se va a escribir.</param>
      <param name="tag">La etiqueta que se va a escribir, o <see langword="null" /> para la etiqueta predeterminada (Universal 6).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.
O bien, <paramref name="oidValue" /> no es un identificador de objeto decimal con puntos válido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="oidValue" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteOctetString(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Escriba un valor de cadena de octetos con una etiqueta especificada.</summary>
      <param name="value">Valor que se va a escribir.</param>
      <param name="tag">La etiqueta que se va a escribir o <see langword="null" /> para la etiqueta predeterminada (Universal 4).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteUtcTime(System.DateTimeOffset,System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Escriba el valor proporcionado como UTCTime con una etiqueta especificada, siempre que el año esté en el intervalo permitido.</summary>
      <param name="value">Valor que se va a escribir.</param>
      <param name="twoDigitYearMax">El año válido máximo para <paramref name="value" />, después de la conversión a UTC.
Para el intervalo Time.utcTime X.509 de 1950-2049, pase <c>2049</c>.</param>
      <param name="tag">La etiqueta que se va a escribir, o <see langword="null" /> para la etiqueta predeterminada (Universal 23).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" />.<see cref="P:System.DateTimeOffset.Year" /> (después de la conversión a UTC) no está en el intervalo (<paramref name="twoDigitYearMax" /> - 100, <paramref name="twoDigitYearMax" />].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteUtcTime(System.DateTimeOffset,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Escriba el valor proporcionado como UTCTime con una etiqueta especificada y acepte el año de dos dígitos como válido en contexto.</summary>
      <param name="value">Valor que se va a escribir.</param>
      <param name="tag">La etiqueta que se va a escribir, o <see langword="null" /> para la etiqueta predeterminada (Universal 23).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
    </member>
    <member name="P:System.Formats.Asn1.AsnWriter.RuleSet">
      <summary>Obtiene las reglas de codificación que este escritor usa.</summary>
      <returns>Las reglas de codificación que usa este escritor.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnWriter.Scope">
      <summary>Proporciona un destino <see cref="T:System.IDisposable" /> para cerrar de manera segura una etiqueta abierta usando un ámbito léxico como ámbito lógico.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Scope.Dispose">
      <summary>Realiza tareas definidas por la aplicación asociadas a la liberación o al restablecimiento de recursos no administrados.</summary>
    </member>
    <member name="T:System.Formats.Asn1.TagClass">
      <summary>La clase de etiqueta para una etiqueta ASN.1 determinada.</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Application">
      <summary>La clase de etiqueta de aplicación</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.ContextSpecific">
      <summary>La clase de etiqueta específica del contexto</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Private">
      <summary>La clase de etiqueta privada</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Universal">
      <summary>La clase de etiqueta universal</summary>
    </member>
    <member name="T:System.Formats.Asn1.UniversalTagNumber">
      <summary>Asignaciones de etiquetas para la clase UNIVERSAL en ITU-T X.680.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.BitString">
      <summary>Valor de la etiqueta de clase universal para una cadena de bits.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.BMPString">
      <summary>Valor de la etiqueta de clase universal para BMPString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Boolean">
      <summary>Valor de la etiqueta de clase universal para un valor booleano.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Date">
      <summary>Valor de la etiqueta de clase universal para Date.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.DateTime">
      <summary>Valor de la etiqueta de clase universal para Date-Time.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Duration">
      <summary>Valor de la etiqueta de clase universal para Duration.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Embedded">
      <summary>Valor de la etiqueta de clase universal para Embedded-PDV.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.EndOfContents">
      <summary>Identificador reservado para el marcador de fin de contenido en una codificación de longitud indefinida.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Enumerated">
      <summary>Valor de la etiqueta de clase universal para Enumerated.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.External">
      <summary>Valor de la etiqueta de clase universal para External.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GeneralizedTime">
      <summary>Valor de la etiqueta de clase universal para GeneralizedTime.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GeneralString">
      <summary>Valor de la etiqueta de clase universal para GeneralString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GraphicString">
      <summary>Valor de la etiqueta de clase universal para GraphicString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.IA5String">
      <summary>Valor de la etiqueta de clase universal para IA5String.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.InstanceOf">
      <summary>Valor de la etiqueta de clase universal para Instance-Of.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Integer">
      <summary>Valor de la etiqueta de clase universal para un entero.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ISO646String">
      <summary>Valor de la etiqueta de clase universal para ISO646String (VisibleString).</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Null">
      <summary>Valor de la etiqueta de clase universal para un valor NULL.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.NumericString">
      <summary>Valor de la etiqueta de clase universal para NumericString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectDescriptor">
      <summary>El valor de la etiqueta de clase universal para un descriptor de objeto.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectIdentifier">
      <summary>El valor de la etiqueta de clase universal para un identificador de objeto.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectIdentifierIRI">
      <summary>El valor de la etiqueta de clase universal para un identificador de recursos internacionalizado de identificador de objetos (IRI).</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.OctetString">
      <summary>El valor de la etiqueta de clase universal para una cadena de octeto.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.PrintableString">
      <summary>Valor de la etiqueta de clase universal para PrintableString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Real">
      <summary>Valor de la etiqueta de clase universal para Real.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.RelativeObjectIdentifier">
      <summary>Valor de la etiqueta de clase universal para un identificador de objeto relativo.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.RelativeObjectIdentifierIRI">
      <summary>Valor de la etiqueta de clase universal para el identificador de recursos internacionalizado (IRI) del identificador de objeto relativo.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Sequence">
      <summary>Valor de la etiqueta de clase universal para Sequence.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.SequenceOf">
      <summary>Valor de la etiqueta de clase universal para Sequence-Of.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Set">
      <summary>Valor de la etiqueta de clase universal para Set.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.SetOf">
      <summary>Valor de la etiqueta de clase universal para Set-Of.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.T61String">
      <summary>Valor de la etiqueta de clase universal para T61String (TeletexString).</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.TeletexString">
      <summary>Valor de la etiqueta de clase universal para TeletexString (T61String).</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Time">
      <summary>Valor de la etiqueta de clase universal para Time.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.TimeOfDay">
      <summary>Valor de la etiqueta de clase universal para Time-Of-Day.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UniversalString">
      <summary>Valor de la etiqueta de clase universal para UniversalString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UnrestrictedCharacterString">
      <summary>Valor de la etiqueta de clase universal para una cadena de caracteres no restringida.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UtcTime">
      <summary>Valor de la etiqueta de clase universal para UTCTime.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UTF8String">
      <summary>Valor de la etiqueta de clase universal para UTF8String.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.VideotexString">
      <summary>Valor de la etiqueta de clase universal para VideotexString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.VisibleString">
      <summary>Valor de la etiqueta de clase universal para VisibleString (ISO646String).</summary>
    </member>
  </members>
</doc>