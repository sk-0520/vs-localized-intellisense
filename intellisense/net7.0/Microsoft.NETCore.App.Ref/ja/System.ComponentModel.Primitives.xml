<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ComponentModel.Primitives</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.BrowsableAttribute">
      <summary>プロパティまたはイベントを [プロパティ] ウィンドウに表示するかどうかを指定します。</summary>
    </member>
    <member name="F:System.ComponentModel.BrowsableAttribute.Default">
      <summary>
        <see cref="T:System.ComponentModel.BrowsableAttribute" /> の既定値 (<see cref="F:System.ComponentModel.BrowsableAttribute.Yes" />) を指定します。 <see langword="static" /> フィールドは読み取り専用です。</summary>
    </member>
    <member name="F:System.ComponentModel.BrowsableAttribute.No">
      <summary>特定のプロパティまたはイベントをデザイン時に変更できないことを指定します。 <see langword="static" /> フィールドは読み取り専用です。</summary>
    </member>
    <member name="F:System.ComponentModel.BrowsableAttribute.Yes">
      <summary>特定のプロパティまたはイベントをデザイン時に変更できることを指定します。 <see langword="static" /> フィールドは読み取り専用です。</summary>
    </member>
    <member name="M:System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)">
      <summary>
        <see cref="T:System.ComponentModel.BrowsableAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="browsable">特定のプロパティまたはイベントをデザイン時に変更できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</param>
    </member>
    <member name="M:System.ComponentModel.BrowsableAttribute.Equals(System.Object)">
      <summary>このインスタンスと指定したオブジェクトが等しいかどうかを示します。</summary>
      <param name="obj">比較対象のもう 1 つのオブジェクト。</param>
      <returns>
        <paramref name="obj" /> がこのインスタンスと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.BrowsableAttribute.GetHashCode">
      <summary>このインスタンスのハッシュ コードを返します。</summary>
      <returns>32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="M:System.ComponentModel.BrowsableAttribute.IsDefaultAttribute">
      <summary>この属性が既定値かどうかを判断します。</summary>
      <returns>属性がこの属性クラスの既定値の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.BrowsableAttribute.Browsable">
      <summary>オブジェクトが参照可能かどうかを示す値を取得します。</summary>
      <returns>オブジェクトが参照可能である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.CategoryAttribute">
      <summary>
        <see cref="T:System.Windows.Forms.PropertyGrid" /> コントロールが [項目別] モードに設定されているときに、コントロールに表示するプロパティまたはイベントを分類するカテゴリの名前を指定します。</summary>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.#ctor">
      <summary>Default というカテゴリ名を使用して、<see cref="T:System.ComponentModel.CategoryAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.#ctor(System.String)">
      <summary>指定したカテゴリ名を使用して、<see cref="T:System.ComponentModel.CategoryAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="category">カテゴリの名前を指定します。</param>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.Equals(System.Object)">
      <summary>指定したオブジェクトの値が現在の <see cref="T:System.ComponentModel.CategoryAttribute" /> と等しいかどうかを示す値を返します。</summary>
      <param name="obj">値が等しいかどうかを確認するオブジェクト。</param>
      <returns>指定したオブジェクトの値が現在の値と等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.GetHashCode">
      <summary>この属性のハッシュ コードを返します。</summary>
      <returns>32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.GetLocalizedString(System.String)">
      <summary>指定したカテゴリのローカライズされた名前を検索します。</summary>
      <param name="value">検索するカテゴリの識別子。</param>
      <returns>ローカライズされたカテゴリ名。ローカライズされた名前がない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.IsDefaultAttribute">
      <summary>この属性が既定値かどうかを判断します。</summary>
      <returns>属性がこの属性クラスの既定値の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Action">
      <summary>Action カテゴリを表す <see cref="T:System.ComponentModel.CategoryAttribute" /> を取得します。</summary>
      <returns>Action カテゴリの <see cref="T:System.ComponentModel.CategoryAttribute" />。</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Appearance">
      <summary>Appearance カテゴリを表す <see cref="T:System.ComponentModel.CategoryAttribute" /> を取得します。</summary>
      <returns>Appearance カテゴリの <see cref="T:System.ComponentModel.CategoryAttribute" />。</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Asynchronous">
      <summary>Asynchronous カテゴリを表す <see cref="T:System.ComponentModel.CategoryAttribute" /> を取得します。</summary>
      <returns>非同期カテゴリの <see cref="T:System.ComponentModel.CategoryAttribute" />。</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Behavior">
      <summary>Behavior カテゴリを表す <see cref="T:System.ComponentModel.CategoryAttribute" /> を取得します。</summary>
      <returns>Behavior カテゴリの <see cref="T:System.ComponentModel.CategoryAttribute" />。</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Category">
      <summary>この属性が適用されているプロパティまたはイベントのカテゴリ名を取得します。</summary>
      <returns>この属性が適用されているプロパティまたはイベントのカテゴリ名。</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Data">
      <summary>Data カテゴリを表す <see cref="T:System.ComponentModel.CategoryAttribute" /> を取得します。</summary>
      <returns>Data カテゴリの <see cref="T:System.ComponentModel.CategoryAttribute" />。</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Default">
      <summary>Default カテゴリを表す <see cref="T:System.ComponentModel.CategoryAttribute" /> を取得します。</summary>
      <returns>既定のカテゴリの <see cref="T:System.ComponentModel.CategoryAttribute" />。</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Design">
      <summary>Design カテゴリを表す <see cref="T:System.ComponentModel.CategoryAttribute" /> を取得します。</summary>
      <returns>Design カテゴリの <see cref="T:System.ComponentModel.CategoryAttribute" />。</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.DragDrop">
      <summary>DragDrop カテゴリを表す <see cref="T:System.ComponentModel.CategoryAttribute" /> を取得します。</summary>
      <returns>DragDrop カテゴリの <see cref="T:System.ComponentModel.CategoryAttribute" />。</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Focus">
      <summary>Focus カテゴリを表す <see cref="T:System.ComponentModel.CategoryAttribute" /> を取得します。</summary>
      <returns>Focus カテゴリの <see cref="T:System.ComponentModel.CategoryAttribute" />。</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Format">
      <summary>Format カテゴリを表す <see cref="T:System.ComponentModel.CategoryAttribute" /> を取得します。</summary>
      <returns>Format カテゴリの <see cref="T:System.ComponentModel.CategoryAttribute" />。</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Key">
      <summary>Key カテゴリを表す <see cref="T:System.ComponentModel.CategoryAttribute" /> を取得します。</summary>
      <returns>Key カテゴリの <see cref="T:System.ComponentModel.CategoryAttribute" />。</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Layout">
      <summary>Layout カテゴリを表す <see cref="T:System.ComponentModel.CategoryAttribute" /> を取得します。</summary>
      <returns>Layout カテゴリの <see cref="T:System.ComponentModel.CategoryAttribute" />。</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Mouse">
      <summary>Mouse カテゴリを表す <see cref="T:System.ComponentModel.CategoryAttribute" /> を取得します。</summary>
      <returns>Mouse カテゴリの <see cref="T:System.ComponentModel.CategoryAttribute" />。</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.WindowStyle">
      <summary>WindowStyle カテゴリを表す <see cref="T:System.ComponentModel.CategoryAttribute" /> を取得します。</summary>
      <returns>WindowStyle カテゴリの <see cref="T:System.ComponentModel.CategoryAttribute" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Component">
      <summary>
        <see cref="T:System.ComponentModel.IComponent" /> インターフェイスの基本実装を提供し、アプリケーション間でオブジェクトを共有できるようにします。</summary>
    </member>
    <member name="E:System.ComponentModel.Component.Disposed">
      <summary>
        <see cref="M:System.ComponentModel.Component.Dispose" /> メソッドの呼び出しによってコンポーネントが破棄されるときに発生します。</summary>
    </member>
    <member name="M:System.ComponentModel.Component.#ctor">
      <summary>
        <see cref="T:System.ComponentModel.Component" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Component.Dispose">
      <summary>
        <see cref="T:System.ComponentModel.Component" /> によって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.ComponentModel.Component.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.ComponentModel.Component" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.ComponentModel.Component.Finalize">
      <summary>
        <see cref="T:System.ComponentModel.Component" /> がガベージ コレクションによってクリアされる前に、アンマネージ リソースを解放し、その他のクリーンアップ操作を実行します。</summary>
    </member>
    <member name="M:System.ComponentModel.Component.GetService(System.Type)">
      <summary>
        <see cref="T:System.ComponentModel.Component" /> またはその <see cref="T:System.ComponentModel.Container" /> で提供されるサービスを表すオブジェクトを返します。</summary>
      <param name="service">
        <see cref="T:System.ComponentModel.Component" /> が提供するサービス。</param>
      <returns>
        <see cref="T:System.Object" /> によって提供されるサービスを表す <see cref="T:System.ComponentModel.Component" />。または <see cref="T:System.ComponentModel.Component" /> が指定されたサービスを提供しない場合には <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Component.ToString">
      <summary>
        <see cref="T:System.ComponentModel.Component" /> の名前 (存在する場合) を格納する <see cref="T:System.String" /> を返します。 このメソッドはオーバーライドできません。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Component" /> の名前 (存在する場合) を格納する <see cref="T:System.String" />。<see cref="T:System.ComponentModel.Component" /> に名前が付いていない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Component.CanRaiseEvents">
      <summary>コンポーネントがイベントを発生させることがきるかどうかを示す値を取得します。</summary>
      <returns>コンポーネントがイベントを発生させることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="P:System.ComponentModel.Component.Container">
      <summary>
        <see cref="T:System.ComponentModel.IContainer" /> を含む <see cref="T:System.ComponentModel.Component" /> を取得します。</summary>
      <returns>
        <see cref="T:System.ComponentModel.IContainer" /> を格納している <see cref="T:System.ComponentModel.Component" /> (存在する場合)。または <see cref="T:System.ComponentModel.Component" /> が <see cref="T:System.ComponentModel.IContainer" /> にカプセル化されていない場合には、<see langword="null" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Component.DesignMode">
      <summary>
        <see cref="T:System.ComponentModel.Component" /> が現在デザイン モードかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Component" /> がデザイン モードの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Component.Events">
      <summary>
        <see cref="T:System.ComponentModel.Component" /> に結び付けられているイベント ハンドラーのリストを取得します。</summary>
      <returns>コンポーネントのデリゲートを提供する <see cref="T:System.ComponentModel.EventHandlerList" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Component.Site">
      <summary>
        <see cref="T:System.ComponentModel.Component" /> の <see cref="T:System.ComponentModel.ISite" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.ComponentModel.ISite" /> に関連付けられている <see cref="T:System.ComponentModel.Component" />。<see cref="T:System.ComponentModel.Component" /> が <see cref="T:System.ComponentModel.IContainer" /> にカプセル化されていない場合、<see cref="T:System.ComponentModel.Component" /> に <see cref="T:System.ComponentModel.ISite" /> が関連付けられていない場合、または <see cref="T:System.ComponentModel.Component" /> が <see cref="T:System.ComponentModel.IContainer" /> から削除された場合には、<see langword="null" />。</returns>
    </member>
    <member name="T:System.ComponentModel.ComponentCollection">
      <summary>
        <see cref="T:System.ComponentModel.IComponent" /> オブジェクトのコレクション用の読み取り専用コンテナーを提供します。</summary>
    </member>
    <member name="M:System.ComponentModel.ComponentCollection.#ctor(System.ComponentModel.IComponent[])">
      <summary>指定したコンポーネントの配列を使用して、<see cref="T:System.ComponentModel.ComponentCollection" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="components">コレクションを初期化するために使用する <see cref="T:System.ComponentModel.IComponent" /> オブジェクトの配列。</param>
    </member>
    <member name="M:System.ComponentModel.ComponentCollection.CopyTo(System.ComponentModel.IComponent[],System.Int32)">
      <summary>指定した配列インデックスを開始位置として、配列にコレクション全体をコピーします。</summary>
      <param name="array">コレクション内のオブジェクトをコピーする先の <see cref="T:System.ComponentModel.IComponent" /> 配列。</param>
      <param name="index">コピーの開始位置を示す、<paramref name="array" /> のインデックス。</param>
    </member>
    <member name="P:System.ComponentModel.ComponentCollection.Item(System.Int32)">
      <summary>コレクション内の指定したインデックス位置の <see cref="T:System.ComponentModel.Component" /> を取得します。</summary>
      <param name="index">取得する <see cref="T:System.ComponentModel.Component" /> のコレクション インデックス。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">指定したインデックスが、コレクションのインデックスの範囲外にある場合。</exception>
      <returns>指定したインデックスにある <see cref="T:System.ComponentModel.IComponent" /> です。</returns>
    </member>
    <member name="P:System.ComponentModel.ComponentCollection.Item(System.String)">
      <summary>指定した名前と一致するコンポーネントをコレクションから取得します。</summary>
      <param name="name">取得する <see cref="T:System.ComponentModel.IComponent" /> の名前。</param>
      <returns>
        <paramref name="name" /> パラメーターで指定された名前と一致するコンポーネント。指定されたコンポーネントがコレクション内に見つからない場合は、<see langword="null" />。</returns>
    </member>
    <member name="T:System.ComponentModel.DescriptionAttribute">
      <summary>プロパティまたはイベントの説明文を指定します。</summary>
    </member>
    <member name="F:System.ComponentModel.DescriptionAttribute.Default">
      <summary>
        <see cref="T:System.ComponentModel.DescriptionAttribute" /> の既定値である空の文字列 ("") を指定します。 <see langword="static" /> フィールドは読み取り専用です。</summary>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.#ctor">
      <summary>パラメーターを指定せずに、<see cref="T:System.ComponentModel.DescriptionAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.#ctor(System.String)">
      <summary>説明を指定して、<see cref="T:System.ComponentModel.DescriptionAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="description">説明テキスト。</param>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.Equals(System.Object)">
      <summary>指定したオブジェクトの値が現在の <see cref="T:System.ComponentModel.DescriptionAttribute" /> と等しいかどうかを示す値を返します。</summary>
      <param name="obj">値が等しいかどうかを確認するオブジェクト。</param>
      <returns>指定したオブジェクトの値が現在の値と等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.GetHashCode">
      <summary>このインスタンスのハッシュ コードを返します。</summary>
      <returns>32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.IsDefaultAttribute">
      <summary>これが既定の <see cref="T:System.ComponentModel.DescriptionAttribute" /> インスタンスであるかどうかを示す値を返します。</summary>
      <returns>これが既定の <see cref="T:System.ComponentModel.DescriptionAttribute" /> インスタンスである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.DescriptionAttribute.Description">
      <summary>この属性に格納されている説明を取得します。</summary>
      <returns>この属性に格納されている説明。</returns>
    </member>
    <member name="P:System.ComponentModel.DescriptionAttribute.DescriptionValue">
      <summary>説明として格納されている文字列を取得または設定します。</summary>
      <returns>説明として格納されている文字列。 既定値は空の文字列 ("") です。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute">
      <summary>この属性が適用される型の値をシリアル化するためにシリアル化マネージャーが使用するシリアライザーを示します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.String,System.String)">
      <summary>
        <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="serializerTypeName">シリアライザーのデータ型の完全修飾名。</param>
      <param name="baseSerializerTypeName">シリアライザーのデータ型の完全修飾名。 シリアライザーの基本型がすべて異なっている場合に限り、1 つのクラスに複数のシリアライザーを提供できます。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.String,System.Type)">
      <summary>
        <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="serializerTypeName">シリアライザーのデータ型の完全修飾名。</param>
      <param name="baseSerializerType">シリアライザーの基本データ型。 シリアライザーの基本型がすべて異なっている場合に限り、1 つのクラスに複数のシリアライザーを提供できます。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.Type,System.Type)">
      <summary>
        <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="serializerType">シリアライザーのデータ型。</param>
      <param name="baseSerializerType">シリアライザーの基本データ型。 シリアライザーの基本型がすべて異なっている場合に限り、1 つのクラスに複数のシリアライザーを提供できます。</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerBaseTypeName">
      <summary>シリアライザー基本型の完全修飾型名を取得します。</summary>
      <returns>シリアライザー基本型の完全修飾型名。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerTypeName">
      <summary>シリアライザーの完全修飾型名を取得します。</summary>
      <returns>シリアライザーの完全修飾型名。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.TypeId">
      <summary>この属性型の一意の ID を示します。</summary>
      <returns>この属性型の一意の ID。</returns>
    </member>
    <member name="T:System.ComponentModel.DesignerAttribute">
      <summary>コンポーネントのデザイン時サービスを実装するために使用されるクラスを指定します。</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerAttribute.#ctor(System.String)">
      <summary>デザイン時サービスを提供する型の名前を指定して、<see cref="T:System.ComponentModel.DesignerAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="designerTypeName">この属性がバインドされているコンポーネントに対してデザイン時サービスを提供する型の完全修飾名の連結、および、格納されているこの型のアセンブリの名前。</param>
    </member>
    <member name="M:System.ComponentModel.DesignerAttribute.#ctor(System.String,System.String)">
      <summary>デザイナーの型とデザイナーの基本クラスを指定して、<see cref="T:System.ComponentModel.DesignerAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="designerTypeName">この属性がバインドされているコンポーネントに対してデザイン時サービスを提供する型の完全修飾名の連結、および、格納されているこの型のアセンブリの名前。</param>
      <param name="designerBaseTypeName">デザイナー クラスと関連付ける基本クラスの完全修飾名。</param>
    </member>
    <member name="M:System.ComponentModel.DesignerAttribute.#ctor(System.String,System.Type)">
      <summary>デザイナー クラスの名前とデザイナーの基本クラスを指定して、<see cref="T:System.ComponentModel.DesignerAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="designerTypeName">この属性がバインドされているコンポーネントに対してデザイン時サービスを提供する型の完全修飾名の連結、および、格納されているこの型のアセンブリの名前。</param>
      <param name="designerBaseType">
        <paramref name="designerTypeName" /> と関連付ける基本クラスを表す <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.ComponentModel.DesignerAttribute.#ctor(System.Type)">
      <summary>デザイン時サービスを提供する型を指定して、<see cref="T:System.ComponentModel.DesignerAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="designerType">この属性がバインドされているコンポーネントに対してデザイン時サービスを提供するクラスを表す <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.ComponentModel.DesignerAttribute.#ctor(System.Type,System.Type)">
      <summary>デザイナーの型とデザイナー基本クラスを指定して、<see cref="T:System.ComponentModel.DesignerAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="designerType">この属性がバインドされているコンポーネントに対してデザイン時サービスを提供するクラスを表す <see cref="T:System.Type" />。</param>
      <param name="designerBaseType">
        <paramref name="designerType" /> と関連付ける基本クラスを表す <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.ComponentModel.DesignerAttribute.Equals(System.Object)">
      <summary>指定したオブジェクトの値が現在の <see cref="T:System.ComponentModel.DesignerAttribute" /> と等しいかどうかを示す値を返します。</summary>
      <param name="obj">値が等しいかどうかを確認するオブジェクト。</param>
      <returns>指定したオブジェクトの値が現在の値と等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.DesignerAttribute.GetHashCode">
      <summary>このインスタンスのハッシュ コードを返します。</summary>
      <returns>32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="P:System.ComponentModel.DesignerAttribute.DesignerBaseTypeName">
      <summary>このデザイナーの基本型の名前を取得します。</summary>
      <returns>このデザイナーの基本型の名前。</returns>
    </member>
    <member name="P:System.ComponentModel.DesignerAttribute.DesignerTypeName">
      <summary>このデザイナー属性と関連付けられているデザイナー型の名前を取得します。</summary>
      <returns>このデザイナー属性と関連付けられているデザイナー型の名前。</returns>
    </member>
    <member name="P:System.ComponentModel.DesignerAttribute.TypeId">
      <summary>この属性型の一意の ID を取得します。</summary>
      <returns>この属性型の一意の ID。</returns>
    </member>
    <member name="T:System.ComponentModel.DesignerCategoryAttribute">
      <summary>クラスのデザイナーが特定のカテゴリに属することを指定します。</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerCategoryAttribute.Component">
      <summary>このカテゴリでマークされたコンポーネントが、コンポーネント デザイナーを使用することを指定します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerCategoryAttribute.Default">
      <summary>このカテゴリでマークされたコンポーネントが、コンポーネント デザイナーを使用できないことを指定します。 <see langword="static" /> フィールドは読み取り専用です。</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerCategoryAttribute.Form">
      <summary>このカテゴリでマークされたコンポーネントが、フォーム デザイナーを使用することを指定します。 <see langword="static" /> フィールドは読み取り専用です。</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerCategoryAttribute.Generic">
      <summary>このカテゴリでマークされたコンポーネントが、汎用デザイナーを使用することを指定します。 <see langword="static" /> フィールドは読み取り専用です。</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.#ctor">
      <summary>空の文字列 ("") を使用して、<see cref="T:System.ComponentModel.DesignerCategoryAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.#ctor(System.String)">
      <summary>指定したカテゴリ名を使用して、<see cref="T:System.ComponentModel.DesignerCategoryAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="category">カテゴリの名前を指定します。</param>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.Equals(System.Object)">
      <summary>指定したオブジェクトの値が現在の <see cref="T:System.ComponentModel.DesignOnlyAttribute" /> と等しいかどうかを示す値を返します。</summary>
      <param name="obj">値が等しいかどうかを確認するオブジェクト。</param>
      <returns>指定したオブジェクトの値が現在の値と等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.GetHashCode">
      <summary>このインスタンスのハッシュ コードを返します。</summary>
      <returns>32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.IsDefaultAttribute">
      <summary>この属性が既定値かどうかを判断します。</summary>
      <returns>属性がこの属性クラスの既定値の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.DesignerCategoryAttribute.Category">
      <summary>カテゴリの名前を取得します。</summary>
      <returns>カテゴリの名前を指定します。</returns>
    </member>
    <member name="P:System.ComponentModel.DesignerCategoryAttribute.TypeId">
      <summary>この属性の一意の識別子を取得します。</summary>
      <returns>この属性の一意の識別子である <see cref="T:System.Object" />。</returns>
    </member>
    <member name="T:System.ComponentModel.DesignerSerializationVisibility">
      <summary>デザイン時シリアライザーに対するプロパティの参照可能範囲を指定します。</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibility.Content">
      <summary>コード ジェネレーターは、オブジェクト自体のコードではなく、オブジェクトの内容のコードを生成します。</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibility.Hidden">
      <summary>コード ジェネレーターは、オブジェクトのコードを生成しません。</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibility.Visible">
      <summary>コード ジェネレーターは、オブジェクトのコードを生成します。</summary>
    </member>
    <member name="T:System.ComponentModel.DesignerSerializationVisibilityAttribute">
      <summary>デザイン時にコンポーネントのプロパティをシリアル化するときに使用する永続化の種類を指定します。</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Content">
      <summary>シリアライザーがプロパティ自体ではなくプロパティの内容をシリアル化することを指定します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Default">
      <summary>既定値 (<see cref="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible" />) を指定します。つまり、ビジュアルなデザイナーは既定の規則を使用してプロパティの値を生成します。 <see langword="static" /> フィールドは読み取り専用です。</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Hidden">
      <summary>シリアライザーがプロパティの値をシリアル化しないことを指定します。 <see langword="static" /> フィールドは読み取り専用です。</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible">
      <summary>シリアライザーによるプロパティの値のシリアル化を許可するように指定します。 <see langword="static" /> フィールドは読み取り専用です。</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.#ctor(System.ComponentModel.DesignerSerializationVisibility)">
      <summary>指定した <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> 値を使用して、<see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="visibility">
        <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> 値のいずれか 1 つ。</param>
    </member>
    <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.Equals(System.Object)">
      <summary>このインスタンスと指定したオブジェクトが等しいかどうかを示します。</summary>
      <param name="obj">比較対象のもう 1 つのオブジェクト。</param>
      <returns>
        <paramref name="obj" /> がこのインスタンスと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.GetHashCode">
      <summary>このオブジェクトのハッシュ コードを返します。</summary>
      <returns>32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.IsDefaultAttribute">
      <summary>属性の現在の値が既定値かどうかを示す値を取得します。</summary>
      <returns>属性が既定値に設定されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visibility">
      <summary>プロパティの値を永続化するかどうかと永続化の方法を決定するときにシリアライザーが使用する基本的なシリアル化モードを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> 値のいずれか 1 つ。 既定値は、<see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" /> です。</returns>
    </member>
    <member name="T:System.ComponentModel.DesignOnlyAttribute">
      <summary>プロパティを設定できるのがデザイン時だけかどうかを指定します。</summary>
    </member>
    <member name="F:System.ComponentModel.DesignOnlyAttribute.Default">
      <summary>
        <see cref="T:System.ComponentModel.DesignOnlyAttribute" /> の既定値 (<see cref="F:System.ComponentModel.DesignOnlyAttribute.No" />) を指定します。 <see langword="static" /> フィールドは読み取り専用です。</summary>
    </member>
    <member name="F:System.ComponentModel.DesignOnlyAttribute.No">
      <summary>プロパティをデザイン時に設定できるか、または実行時に設定できるかを指定します。 <see langword="static" /> フィールドは読み取り専用です。</summary>
    </member>
    <member name="F:System.ComponentModel.DesignOnlyAttribute.Yes">
      <summary>プロパティを設定できるのがデザイン時だけであることを指定します。 <see langword="static" /> フィールドは読み取り専用です。</summary>
    </member>
    <member name="M:System.ComponentModel.DesignOnlyAttribute.#ctor(System.Boolean)">
      <summary>
        <see cref="T:System.ComponentModel.DesignOnlyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="isDesignOnly">プロパティを設定できるのがデザイン時だけの場合は <see langword="true" />。プロパティをデザイン時と実行時の両方で設定できる場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.ComponentModel.DesignOnlyAttribute.Equals(System.Object)">
      <summary>指定したオブジェクトの値が現在の <see cref="T:System.ComponentModel.DesignOnlyAttribute" /> と等しいかどうかを示す値を返します。</summary>
      <param name="obj">値が等しいかどうかを確認するオブジェクト。</param>
      <returns>指定したオブジェクトの値が現在の値と等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.DesignOnlyAttribute.GetHashCode">
      <summary>このインスタンスのハッシュ コードを返します。</summary>
      <returns>32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="M:System.ComponentModel.DesignOnlyAttribute.IsDefaultAttribute">
      <summary>この属性が既定値かどうかを判断します。</summary>
      <returns>属性がこの属性クラスの既定値の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.DesignOnlyAttribute.IsDesignOnly">
      <summary>プロパティを設定できるのがデザイン時だけかどうかを示す値を取得します。</summary>
      <returns>プロパティを設定できるのがデザイン時だけである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.DisplayNameAttribute">
      <summary>引数を受け取らないプロパティ、イベント、またはパブリックな void メソッドの表示名を指定します。</summary>
    </member>
    <member name="F:System.ComponentModel.DisplayNameAttribute.Default">
      <summary>
        <see cref="T:System.ComponentModel.DisplayNameAttribute" /> の既定値を指定します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.#ctor">
      <summary>
        <see cref="T:System.ComponentModel.DisplayNameAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.#ctor(System.String)">
      <summary>表示名を使用して、<see cref="T:System.ComponentModel.DisplayNameAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="displayName">表示名です。</param>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.Equals(System.Object)">
      <summary>2 つの <see cref="T:System.ComponentModel.DisplayNameAttribute" /> インスタンスが等しいかどうかを判断します。</summary>
      <param name="obj">値が等しいかどうかを確認する <see cref="T:System.ComponentModel.DisplayNameAttribute" />。</param>
      <returns>指定したオブジェクトの値が現在のオブジェクトの値と等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.GetHashCode">
      <summary>このインスタンスのハッシュ コードを返します。</summary>
      <returns>現在の <see cref="T:System.ComponentModel.DisplayNameAttribute" /> のハッシュ コード。</returns>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.IsDefaultAttribute">
      <summary>この属性が既定値かどうかを判断します。</summary>
      <returns>属性がこの属性クラスの既定値の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.DisplayNameAttribute.DisplayName">
      <summary>この属性に格納されている引数を受け取らないプロパティ、イベント、またはパブリックな void メソッドの表示名を取得します。</summary>
      <returns>表示名です。</returns>
    </member>
    <member name="P:System.ComponentModel.DisplayNameAttribute.DisplayNameValue">
      <summary>表示名を取得または設定します。</summary>
      <returns>表示名です。</returns>
    </member>
    <member name="T:System.ComponentModel.EditorAttribute">
      <summary>プロパティの変更に使用するエディターを指定します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.ComponentModel.EditorAttribute.#ctor">
      <summary>既定のエディターを指定して、<see cref="T:System.ComponentModel.EditorAttribute" /> クラスの新しいインスタンスを初期化します。つまり、エディターは指定されません。</summary>
    </member>
    <member name="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)">
      <summary>エディターの型名と基本型名を指定して、<see cref="T:System.ComponentModel.EditorAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="typeName">エディターの完全修飾型名。</param>
      <param name="baseTypeName">エディターを検索するためのキーとして使用する基本クラスまたは基本インターフェイスの完全修飾型名。 このクラスは、<see cref="T:System.Drawing.Design.UITypeEditor" /> であるか、またはそこから派生している必要があります。</param>
    </member>
    <member name="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)">
      <summary>型名と基本型を指定して、<see cref="T:System.ComponentModel.EditorAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="typeName">エディターの完全修飾型名。</param>
      <param name="baseType">エディターを検索するためのキーとして使用する基本クラスまたは基本インターフェイスの <see cref="T:System.Type" />。 このクラスは、<see cref="T:System.Drawing.Design.UITypeEditor" /> であるか、またはそこから派生している必要があります。</param>
    </member>
    <member name="M:System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)">
      <summary>型と基本型を指定して、<see cref="T:System.ComponentModel.EditorAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="type">エディターの型を表す <see cref="T:System.Type" />。</param>
      <param name="baseType">エディターを検索するためのキーとして使用する基本クラスまたは基本インターフェイスの <see cref="T:System.Type" />。 このクラスは、<see cref="T:System.Drawing.Design.UITypeEditor" /> であるか、またはそこから派生している必要があります。</param>
    </member>
    <member name="M:System.ComponentModel.EditorAttribute.Equals(System.Object)">
      <summary>指定したオブジェクトの値が現在の <see cref="T:System.ComponentModel.EditorAttribute" /> と等しいかどうかを示す値を返します。</summary>
      <param name="obj">値が等しいかどうかを確認するオブジェクト。</param>
      <returns>指定したオブジェクトの値が現在のオブジェクトの値と等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.EditorAttribute.GetHashCode">
      <summary>このインスタンスのハッシュ コードを返します。</summary>
      <returns>32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="P:System.ComponentModel.EditorAttribute.EditorBaseTypeName">
      <summary>エディターを検索するためのキーとして使用する基本クラスまたは基本インターフェイスの名前を取得します。</summary>
      <returns>エディターを検索するためのキーとして機能する基本クラスまたは基本インターフェイスの名前。</returns>
    </member>
    <member name="P:System.ComponentModel.EditorAttribute.EditorTypeName">
      <summary>
        <see cref="P:System.Type.AssemblyQualifiedName" /> 形式のエディター クラス名を取得します。</summary>
      <returns>
        <see cref="P:System.Type.AssemblyQualifiedName" /> 形式のエディター クラス名。</returns>
    </member>
    <member name="P:System.ComponentModel.EditorAttribute.TypeId">
      <summary>この属性型の一意の ID を取得します。</summary>
      <returns>この属性型の一意の ID。</returns>
    </member>
    <member name="T:System.ComponentModel.EventHandlerList">
      <summary>デリゲートの単純なリストを提供します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.#ctor">
      <summary>
        <see cref="T:System.ComponentModel.EventHandlerList" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.AddHandler(System.Object,System.Delegate)">
      <summary>リストにデリゲートを追加します。</summary>
      <param name="key">イベントを所有しているオブジェクト。</param>
      <param name="value">リストに追加するデリゲート。</param>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.AddHandlers(System.ComponentModel.EventHandlerList)">
      <summary>デリゲートのリストを現在のリストに追加します。</summary>
      <param name="listToAddFrom">追加するリスト。</param>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.Dispose">
      <summary>デリゲート リストを破棄します。</summary>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.RemoveHandler(System.Object,System.Delegate)">
      <summary>リストからデリゲートを削除します。</summary>
      <param name="key">イベントを所有しているオブジェクト。</param>
      <param name="value">リストから削除するデリゲート。</param>
    </member>
    <member name="P:System.ComponentModel.EventHandlerList.Item(System.Object)">
      <summary>指定したオブジェクトのデリゲートを取得または設定します。</summary>
      <param name="key">リスト内で検索するオブジェクト。</param>
      <returns>指定したキーのデリゲート。該当するデリゲートが存在しない場合は <see langword="null" />。</returns>
    </member>
    <member name="T:System.ComponentModel.IComponent">
      <summary>すべてのコンポーネントに必要な機能を提供します。</summary>
    </member>
    <member name="E:System.ComponentModel.IComponent.Disposed">
      <summary>コンポーネントの <see cref="E:System.ComponentModel.IComponent.Disposed" /> イベントを処理するメソッドを表します。</summary>
    </member>
    <member name="P:System.ComponentModel.IComponent.Site">
      <summary>
        <see cref="T:System.ComponentModel.ISite" /> に関連付けられている <see cref="T:System.ComponentModel.IComponent" /> を取得または設定します。</summary>
      <returns>コンポーネントに関連付けられている <see cref="T:System.ComponentModel.ISite" /> オブジェクト。コンポーネントにサイトがない場合は <see langword="null" />。</returns>
    </member>
    <member name="T:System.ComponentModel.IContainer">
      <summary>コンテナーの機能を提供します。 コンテナーは、論理的に 0 個以上のコンポーネントを格納するオブジェクトです。</summary>
    </member>
    <member name="M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent)">
      <summary>指定した <see cref="T:System.ComponentModel.IComponent" /> を <see cref="T:System.ComponentModel.IContainer" /> のリストの末尾に追加します。</summary>
      <param name="component">追加する <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent,System.String)">
      <summary>指定した <see cref="T:System.ComponentModel.IComponent" /> を <see cref="T:System.ComponentModel.IContainer" /> のリストの末尾に追加し、そのコンポーネントに名前を割り当てます。</summary>
      <param name="component">追加する <see cref="T:System.ComponentModel.IComponent" />。</param>
      <param name="name">コンポーネントに割り当てる、大文字小文字を区別しない一意の名前。  
  
- または - 
 コンポーネントに名前を付けない場合は <see langword="null" />。</param>
    </member>
    <member name="M:System.ComponentModel.IContainer.Remove(System.ComponentModel.IComponent)">
      <summary>
        <see cref="T:System.ComponentModel.IContainer" /> からコンポーネントを削除します。</summary>
      <param name="component">削除する <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="P:System.ComponentModel.IContainer.Components">
      <summary>
        <see cref="T:System.ComponentModel.IContainer" /> 内のすべてのコンポーネントを取得します。</summary>
      <returns>
        <see cref="T:System.ComponentModel.IComponent" /> 内のすべてのコンポーネントを表す <see cref="T:System.ComponentModel.IContainer" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="T:System.ComponentModel.ImmutableObjectAttribute">
      <summary>オブジェクトが編集できるサブ プロパティがないことを指定します。 このクラスは継承できません。</summary>
    </member>
    <member name="F:System.ComponentModel.ImmutableObjectAttribute.Default">
      <summary>
        <see cref="T:System.ComponentModel.ImmutableObjectAttribute" /> の既定値を表します。</summary>
    </member>
    <member name="F:System.ComponentModel.ImmutableObjectAttribute.No">
      <summary>オブジェクトが編集できるサブ プロパティが少なくとも 1 つはあることを指定します。 <see langword="static" /> フィールドは読み取り専用です。</summary>
    </member>
    <member name="F:System.ComponentModel.ImmutableObjectAttribute.Yes">
      <summary>オブジェクトが編集できるサブ プロパティがないことを指定します。 <see langword="static" /> フィールドは読み取り専用です。</summary>
    </member>
    <member name="M:System.ComponentModel.ImmutableObjectAttribute.#ctor(System.Boolean)">
      <summary>
        <see cref="T:System.ComponentModel.ImmutableObjectAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="immutable">オブジェクトが不変である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.ComponentModel.ImmutableObjectAttribute.Equals(System.Object)">
      <summary>このインスタンスが、指定されたオブジェクトと等価であるかどうかを示す値を返します。</summary>
      <param name="obj">このインスタンスと比較する <see cref="T:System.Object" /> または null 参照 (Visual Basic では <see langword="Nothing" />)。</param>
      <returns>
        <see langword="true" /> がこのインスタンスの型および値に等しい場合は <paramref name="obj" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.ImmutableObjectAttribute.GetHashCode">
      <summary>このインスタンスのハッシュ コードを返します。</summary>
      <returns>現在の <see cref="T:System.ComponentModel.ImmutableObjectAttribute" /> のハッシュ コード。</returns>
    </member>
    <member name="M:System.ComponentModel.ImmutableObjectAttribute.IsDefaultAttribute">
      <summary>このインスタンス内の値が既定値であるかどうかを示します。</summary>
      <returns>このインスタンスがクラスの既定の属性である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.ImmutableObjectAttribute.Immutable">
      <summary>オブジェクトが不変かどうかを取得します。</summary>
      <returns>オブジェクトが不変である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.InitializationEventAttribute">
      <summary>初期化時に発生するイベントを指定します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.ComponentModel.InitializationEventAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.ComponentModel.InitializationEventAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="eventName">初期化イベントの名前。</param>
    </member>
    <member name="P:System.ComponentModel.InitializationEventAttribute.EventName">
      <summary>初期化イベントの名前を取得します。</summary>
      <returns>初期化イベントの名前。</returns>
    </member>
    <member name="T:System.ComponentModel.InvalidAsynchronousStateException">
      <summary>操作を実行するスレッドが存在しない場合、またはスレッドにメッセージ ループがない場合に、スローされます。</summary>
    </member>
    <member name="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor">
      <summary>
        <see cref="T:System.ComponentModel.InvalidAsynchronousStateException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>指定した <see cref="T:System.ComponentModel.InvalidAsynchronousStateException" /> と <see cref="T:System.Runtime.Serialization.SerializationInfo" /> を使用して、<see cref="T:System.Runtime.Serialization.StreamingContext" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info">逆シリアル化に使用する <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">逆シリアル化に使用する転送先。</param>
    </member>
    <member name="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor(System.String)">
      <summary>詳細説明を指定して、<see cref="T:System.ComponentModel.InvalidAsynchronousStateException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">エラーの詳細説明。</param>
    </member>
    <member name="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor(System.String,System.Exception)">
      <summary>詳細説明と例外を指定して、<see cref="T:System.ComponentModel.InvalidAsynchronousStateException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">エラーの詳細説明。</param>
      <param name="innerException">この例外の原因である内部例外への参照。</param>
    </member>
    <member name="T:System.ComponentModel.InvalidEnumArgumentException">
      <summary>引数として使用した列挙値が無効な場合にスローされる例外。</summary>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor">
      <summary>メッセージを指定せずに、<see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>指定したシリアル化データとコンテキストを使用して、<see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info">逆シリアル化に使用する <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">逆シリアル化に使用する転送先。</param>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String)">
      <summary>指定したメッセージを使用して、<see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">この例外で表示されるメッセージ。</param>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String,System.Exception)">
      <summary>詳細説明と例外を指定して、<see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">エラーの詳細説明。</param>
      <param name="innerException">この例外の原因である内部例外への参照。</param>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String,System.Int32,System.Type)">
      <summary>引数から生成されたメッセージ、無効な値、および列挙クラスを使用して、<see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="argumentName">例外の原因となった引数の名前。</param>
      <param name="invalidValue">失敗した引数の値。</param>
      <param name="enumClass">有効値を保持する列挙クラスを表す <see cref="T:System.Type" />。</param>
    </member>
    <member name="T:System.ComponentModel.ISite">
      <summary>サイトに必要な機能を提供します。</summary>
    </member>
    <member name="P:System.ComponentModel.ISite.Component">
      <summary>クラスによって実装される場合は、<see cref="T:System.ComponentModel.ISite" /> に関連付けられているコンポーネントを取得します。</summary>
      <returns>
        <see cref="T:System.ComponentModel.IComponent" /> に関連付けられている <see cref="T:System.ComponentModel.ISite" /> インスタンス。</returns>
    </member>
    <member name="P:System.ComponentModel.ISite.Container">
      <summary>クラスによって実装される場合は、<see cref="T:System.ComponentModel.IContainer" /> に関連付けられている <see cref="T:System.ComponentModel.ISite" /> を取得します。</summary>
      <returns>
        <see cref="T:System.ComponentModel.IContainer" /> に関連付けられている <see cref="T:System.ComponentModel.ISite" /> インスタンス。</returns>
    </member>
    <member name="P:System.ComponentModel.ISite.DesignMode">
      <summary>クラスによって実装される場合に、コンポーネントがデザイン モードかどうかを判断します。</summary>
      <returns>コンポーネントがデザイン モードの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.ISite.Name">
      <summary>クラスによって実装される場合は、<see cref="T:System.ComponentModel.ISite" /> に関連付けられているコンポーネントの名前を取得または設定します。</summary>
      <returns>
        <see cref="T:System.ComponentModel.ISite" /> に関連付けられるコンポーネントの名前。コンポーネントに名前が割り当てられていない場合は <see langword="null" />。</returns>
    </member>
    <member name="T:System.ComponentModel.ISupportInitialize">
      <summary>初期化をバッチ処理するための単純な処理通知をオブジェクトがサポートすることを指定します。</summary>
    </member>
    <member name="M:System.ComponentModel.ISupportInitialize.BeginInit">
      <summary>初期化の開始を通知するシグナルをオブジェクトに送信します。</summary>
    </member>
    <member name="M:System.ComponentModel.ISupportInitialize.EndInit">
      <summary>初期化の完了を通知するシグナルをオブジェクトに送信します。</summary>
    </member>
    <member name="T:System.ComponentModel.ISynchronizeInvoke">
      <summary>デリゲートを同期的または非同期的に実行する方法を提供します。</summary>
    </member>
    <member name="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])">
      <summary>このオブジェクトを作成したスレッド上でデリゲートを非同期的に実行します。</summary>
      <param name="method">
        <paramref name="args" /> に指定されているのと同じ数および型のパラメーターをとるメソッドへの <see cref="T:System.Delegate" />。</param>
      <param name="args">特定のメソッドに引数として渡す <see cref="T:System.Object" /> 型の配列。 引数が必要ない場合は、<see langword="null" /> を指定できます。</param>
      <returns>このメソッドを呼び出すことによって開始された非同期操作を表す <see cref="T:System.IAsyncResult" /> インターフェイス。</returns>
    </member>
    <member name="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)">
      <summary>
        <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" /> の呼び出しによって開始されたプロセスが完了するまで待機し、そのプロセスによって生成された値を返します。</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> の呼び出しによって開始された非同期操作を表す <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" /> インターフェイス。</param>
      <returns>非同期操作によって生成された戻り値を表す <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])">
      <summary>このオブジェクトを作成したスレッド上でデリゲートを同期的に呼び出し、その呼び出しを作成元のスレッドにマーシャリングします。</summary>
      <param name="method">コントロールのスレッドのコンテキストにおいて、呼び出すメソッドを格納している <see cref="T:System.Delegate" />。</param>
      <param name="args">特定のメソッドに渡す引数を表す、<see cref="T:System.Object" /> 型の配列。 引数が必要ない場合は、<see langword="null" /> を指定できます。</param>
      <returns>呼び出されているデリゲートからの戻り値を表す <see cref="T:System.Object" />。デリゲートに戻り値がない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.ComponentModel.ISynchronizeInvoke.InvokeRequired">
      <summary>このインターフェイスを実装するオブジェクトを呼び出すときに、呼び出し元が <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" /> を呼び出す必要があるかどうかを示す値を取得します。</summary>
      <returns>呼び出し元が <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" /> を呼び出す必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.LocalizableAttribute">
      <summary>プロパティをローカライズする必要があるかどうかを指定します。 このクラスは継承できません。</summary>
    </member>
    <member name="F:System.ComponentModel.LocalizableAttribute.Default">
      <summary>既定の値である <see cref="F:System.ComponentModel.LocalizableAttribute.No" /> を指定します。 <see langword="static" /> フィールドは読み取り専用です。</summary>
    </member>
    <member name="F:System.ComponentModel.LocalizableAttribute.No">
      <summary>プロパティをローカライズする必要がないことを指定します。 <see langword="static" /> フィールドは読み取り専用です。</summary>
    </member>
    <member name="F:System.ComponentModel.LocalizableAttribute.Yes">
      <summary>プロパティをローカライズすることを指定します。 <see langword="static" /> フィールドは読み取り専用です。</summary>
    </member>
    <member name="M:System.ComponentModel.LocalizableAttribute.#ctor(System.Boolean)">
      <summary>
        <see cref="T:System.ComponentModel.LocalizableAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="isLocalizable">プロパティをローカライズする必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.ComponentModel.LocalizableAttribute.Equals(System.Object)">
      <summary>指定したオブジェクトの値が現在の <see cref="T:System.ComponentModel.LocalizableAttribute" /> と等しいかどうかを示す値を返します。</summary>
      <param name="obj">値が等しいかどうかを確認するオブジェクト。</param>
      <returns>指定したオブジェクトの値が現在の値と等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.LocalizableAttribute.GetHashCode">
      <summary>このインスタンスのハッシュ コードを返します。</summary>
      <returns>現在の <see cref="T:System.ComponentModel.LocalizableAttribute" /> のハッシュ コード。</returns>
    </member>
    <member name="M:System.ComponentModel.LocalizableAttribute.IsDefaultAttribute">
      <summary>この属性が既定値かどうかを判断します。</summary>
      <returns>属性がこの属性クラスの既定値の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.LocalizableAttribute.IsLocalizable">
      <summary>プロパティをローカライズする必要があるかどうかを示す値を取得します。</summary>
      <returns>プロパティをローカライズする必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.MergablePropertyAttribute">
      <summary>[プロパティ] ウィンドウ内で、プロパティをほかのオブジェクトに属するプロパティと組み合わせることができることを指定します。</summary>
    </member>
    <member name="F:System.ComponentModel.MergablePropertyAttribute.Default">
      <summary>既定値 <see cref="F:System.ComponentModel.MergablePropertyAttribute.Yes" /> を指定します。この既定値は、[プロパティ] ウィンドウ内で別のオブジェクトに属するプロパティと組み合わせることができるプロパティです。 <see langword="static" /> フィールドは読み取り専用です。</summary>
    </member>
    <member name="F:System.ComponentModel.MergablePropertyAttribute.No">
      <summary>[プロパティ] ウィンドウ内で、プロパティを別のオブジェクトに属するプロパティとは組み合わせることができないことを指定します。 <see langword="static" /> フィールドは読み取り専用です。</summary>
    </member>
    <member name="F:System.ComponentModel.MergablePropertyAttribute.Yes">
      <summary>[プロパティ] ウィンドウ内で、プロパティを別のオブジェクトに属するプロパティとは組み合わせることができることを指定します。 <see langword="static" /> フィールドは読み取り専用です。</summary>
    </member>
    <member name="M:System.ComponentModel.MergablePropertyAttribute.#ctor(System.Boolean)">
      <summary>
        <see cref="T:System.ComponentModel.MergablePropertyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="allowMerge">[プロパティ] ウィンドウ内で、プロパティを別のオブジェクトに属するプロパティと組み合わせることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.ComponentModel.MergablePropertyAttribute.Equals(System.Object)">
      <summary>このインスタンスと指定したオブジェクトが等しいかどうかを示します。</summary>
      <param name="obj">比較対象のもう 1 つのオブジェクト。</param>
      <returns>
        <paramref name="obj" /> がこのインスタンスと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.MergablePropertyAttribute.GetHashCode">
      <summary>このインスタンスのハッシュ コードを返します。</summary>
      <returns>現在の <see cref="T:System.ComponentModel.MergablePropertyAttribute" /> のハッシュ コード。</returns>
    </member>
    <member name="M:System.ComponentModel.MergablePropertyAttribute.IsDefaultAttribute">
      <summary>この属性が既定値かどうかを判断します。</summary>
      <returns>属性がこの属性クラスの既定値の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.MergablePropertyAttribute.AllowMerge">
      <summary>[プロパティ] ウィンドウ内で、プロパティを別のオブジェクトに属するプロパティと組み合わせることができるかどうかを示す値を取得します。</summary>
      <returns>[プロパティ] ウィンドウ内で、プロパティを別のオブジェクトに属するプロパティと組み合わせることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.NotifyParentPropertyAttribute">
      <summary>属性が適用されているプロパティの値が変更された場合に、親プロパティに通知することを示します。 このクラスは継承できません。</summary>
    </member>
    <member name="F:System.ComponentModel.NotifyParentPropertyAttribute.Default">
      <summary>属性の状態が既定であることを示します。既定の状態では、プロパティの値が変更されても親プロパティには通知しません。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:System.ComponentModel.NotifyParentPropertyAttribute.No">
      <summary>プロパティの値が変更されたことを親プロパティに通知しないことを示します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:System.ComponentModel.NotifyParentPropertyAttribute.Yes">
      <summary>プロパティの値が変更されたことを親プロパティに通知することを示します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="M:System.ComponentModel.NotifyParentPropertyAttribute.#ctor(System.Boolean)">
      <summary>プロパティの値が変更されたことを親プロパティに通知するかどうかを決定する値を指定して、<see cref="T:System.ComponentModel.NotifyParentPropertyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="notifyParent">プロパティが変更されたことを親プロパティに通知する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.ComponentModel.NotifyParentPropertyAttribute.Equals(System.Object)">
      <summary>指定したオブジェクトが現在のオブジェクトと同じかどうかを示す値を取得します。</summary>
      <param name="obj">同じかどうかを確認する対象のオブジェクト。</param>
      <returns>指定したオブジェクトが現在のオブジェクトと同じ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.NotifyParentPropertyAttribute.GetHashCode">
      <summary>オブジェクトのハッシュ コードを取得します。</summary>
      <returns>属性が属しているオブジェクトのハッシュ コード。</returns>
    </member>
    <member name="M:System.ComponentModel.NotifyParentPropertyAttribute.IsDefaultAttribute">
      <summary>属性の現在の値が既定値かどうかを示す値を取得します。</summary>
      <returns>属性の現在の値が既定値である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.NotifyParentPropertyAttribute.NotifyParent">
      <summary>プロパティの値が変更されたことを親プロパティに通知するかどうかを示す値を取得または設定します。</summary>
      <returns>プロパティが変更されたことを親プロパティに通知する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.ParenthesizePropertyNameAttribute">
      <summary>関連付けられているプロパティの名前をかっこで囲んで [プロパティ] ウィンドウに表示するかどうかを示します。 このクラスは継承できません。</summary>
    </member>
    <member name="F:System.ComponentModel.ParenthesizePropertyNameAttribute.Default">
      <summary>関連付けられているプロパティをかっこで囲んで表示しないことを示す既定値を指定して、<see cref="T:System.ComponentModel.ParenthesizePropertyNameAttribute" /> クラスの新しいインスタンスを初期化します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.#ctor">
      <summary>関連付けられているプロパティをかっこで囲んで表示しないことを示す、<see cref="T:System.ComponentModel.ParenthesizePropertyNameAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.#ctor(System.Boolean)">
      <summary>属性をかっこで囲んで表示するかどうかを示す値を指定して、<see cref="T:System.ComponentModel.ParenthesizePropertyNameAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="needParenthesis">名前をかっこで囲む場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.Equals(System.Object)">
      <summary>指定されたオブジェクトとこのオブジェクトを比較して、等しいかどうかをテストします。</summary>
      <param name="obj" />
      <returns>等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.GetHashCode">
      <summary>オブジェクトのハッシュ コードを取得します。</summary>
      <returns>属性が属しているオブジェクトのハッシュ コード。</returns>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.IsDefaultAttribute">
      <summary>属性の現在の値が既定値かどうかを示す値を取得します。</summary>
      <returns>属性の現在の値が既定値である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.ParenthesizePropertyNameAttribute.NeedParenthesis">
      <summary>プロパティの名前をかっこで囲んで [プロパティ] ウィンドウに表示するかどうかを示す値を取得します。</summary>
      <returns>プロパティをかっこで囲んで表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.ReadOnlyAttribute">
      <summary>この属性が関連付けられているプロパティを読み取り専用にするか、読み書き両用にするかを指定します。 このクラスは継承できません。</summary>
    </member>
    <member name="F:System.ComponentModel.ReadOnlyAttribute.Default">
      <summary>
        <see cref="T:System.ComponentModel.ReadOnlyAttribute" /> の既定値である <see cref="F:System.ComponentModel.ReadOnlyAttribute.No" /> を指定します。つまり、この属性が関連付けられたプロパティは読み書き可能です。 <see langword="static" /> フィールドは読み取り専用です。</summary>
    </member>
    <member name="F:System.ComponentModel.ReadOnlyAttribute.No">
      <summary>この属性が関連付けられているプロパティが読み書き可能であり、変更できることを指定します。 <see langword="static" /> フィールドは読み取り専用です。</summary>
    </member>
    <member name="F:System.ComponentModel.ReadOnlyAttribute.Yes">
      <summary>この属性が関連付けられているプロパティが読み取り専用であり、サーバー エクスプローラーで変更できないことを指定します。 <see langword="static" /> フィールドは読み取り専用です。</summary>
    </member>
    <member name="M:System.ComponentModel.ReadOnlyAttribute.#ctor(System.Boolean)">
      <summary>
        <see cref="T:System.ComponentModel.ReadOnlyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="isReadOnly">この属性が関連付けられているプロパティが読み取り専用であることを示す場合は <see langword="true" />。プロパティが読み書き可能であることを示す場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.ComponentModel.ReadOnlyAttribute.Equals(System.Object)">
      <summary>このインスタンスと指定したオブジェクトが等しいかどうかを示します。</summary>
      <param name="value">比較対象のもう 1 つのオブジェクト。</param>
      <returns>
        <paramref name="value" /> がこのインスタンスと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.ReadOnlyAttribute.GetHashCode">
      <summary>このインスタンスのハッシュ コードを返します。</summary>
      <returns>現在の <see cref="T:System.ComponentModel.ReadOnlyAttribute" /> のハッシュ コード。</returns>
    </member>
    <member name="M:System.ComponentModel.ReadOnlyAttribute.IsDefaultAttribute">
      <summary>この属性が既定値かどうかを判断します。</summary>
      <returns>属性がこの属性クラスの既定値の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.ReadOnlyAttribute.IsReadOnly">
      <summary>この属性が関連付けられているプロパティが読み取り専用かどうかを示す値を取得します。</summary>
      <returns>この属性が関連付けられているプロパティが読み取り専用の場合は <see langword="true" />。プロパティが読み書き可能の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.RefreshProperties">
      <summary>[プロパティ] ウィンドウの表示を更新するときの型を示す識別子を定義します。</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshProperties.All">
      <summary>プロパティのクエリを再実行し、表示を更新する必要があります。</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshProperties.None">
      <summary>更新は不要です。</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshProperties.Repaint">
      <summary>表示を更新する必要があります。</summary>
    </member>
    <member name="T:System.ComponentModel.RefreshPropertiesAttribute">
      <summary>関連付けられているプロパティ値が変更されたときに、プロパティ グリッドが更新されるように指定します。 このクラスは継承できません。</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshPropertiesAttribute.All">
      <summary>プロパティ値が変更された場合に、すべてのプロパティのクエリが再実行されて更新されることを示します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshPropertiesAttribute.Default">
      <summary>プロパティ値が変更された場合に、ほかのプロパティ値が更新されないことを示します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshPropertiesAttribute.Repaint">
      <summary>プロパティ値が変更された場合に、すべてのプロパティが再描画されることを示します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="M:System.ComponentModel.RefreshPropertiesAttribute.#ctor(System.ComponentModel.RefreshProperties)">
      <summary>
        <see cref="T:System.ComponentModel.RefreshPropertiesAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="refresh">更新の特徴を示す <see cref="T:System.ComponentModel.RefreshProperties" /> 値。</param>
    </member>
    <member name="M:System.ComponentModel.RefreshPropertiesAttribute.Equals(System.Object)">
      <summary>オブジェクトの <see cref="Overload:System.Object.Equals" /> メソッドをオーバーライドします。</summary>
      <param name="obj" />
      <returns>指定したオブジェクトが同一である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.RefreshPropertiesAttribute.GetHashCode">
      <summary>このオブジェクトのハッシュ コードを返します。</summary>
      <returns>この属性が属するオブジェクトのハッシュ コード。</returns>
    </member>
    <member name="M:System.ComponentModel.RefreshPropertiesAttribute.IsDefaultAttribute">
      <summary>属性の現在の値が既定値かどうかを示す値を取得します。</summary>
      <returns>属性の現在の値が既定値である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.RefreshPropertiesAttribute.RefreshProperties">
      <summary>メンバーの更新プロパティを取得します。</summary>
      <returns>メンバーの現在の更新プロパティを示す <see cref="T:System.ComponentModel.RefreshProperties" />。</returns>
    </member>
  </members>
</doc>