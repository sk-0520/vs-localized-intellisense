<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime.Loader</name>
  </assembly>
  <members>
    <member name="T:System.Reflection.Metadata.AssemblyExtensions" />
    <member name="M:System.Reflection.Metadata.AssemblyExtensions.TryGetRawMetadata(System.Reflection.Assembly,System.Byte*@,System.Int32@)">
      <param name="assembly" />
      <param name="blob" />
      <param name="length" />
    </member>
    <member name="T:System.Runtime.Loader.AssemblyDependencyResolver">
      <summary>プログラムで、特定のアセンブリの依存関係に基づいて、パスへのアセンブリとネイティブ ライブラリを解決できるようにします。</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyDependencyResolver.#ctor(System.String)">
      <summary>コンポーネントのアセンブリへのパスを使用して、<see cref="T:System.Runtime.Loader.AssemblyDependencyResolver" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="componentAssemblyPath">コンポーネントまたはプラグインのマネージド エントリ ポイントへのパス。</param>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyDependencyResolver.ResolveAssemblyToPath(System.Reflection.AssemblyName)">
      <summary>コンポーネントの依存関係に基づいて、指定されたアセンブリ名でアセンブリへのパスを解決します。</summary>
      <param name="assemblyName">解決対象のアセンブリ名。</param>
      <returns>コンポーネントの deps.json ファイルから指定した名前を使用したアセンブリへのパス。または、アセンブリが deps. json ファイルに存在しないか、deps. json ファイルで指定された場所のディスク上にない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyDependencyResolver.ResolveUnmanagedDllToPath(System.String)">
      <summary>コンポーネントの依存関係に基づいて、指定された名前でネイティブ ライブラリへのパスを解決します。</summary>
      <param name="unmanagedDllName">解決対象のネイティブ ライブラリの名前。</param>
      <returns>コンポーネントの deps.json ファイルと現在のランタイム識別子から指定した名前を使用したアセンブリへのパス。または、アセンブリが deps. json ファイルに存在しないか、deps. json ファイルで指定された場所のディスク上にない場合は <see langword="null" />。</returns>
    </member>
    <member name="T:System.Runtime.Loader.AssemblyLoadContext">
      <summary>アセンブリ読み込みに関するランタイムのスコープの概念を表します。</summary>
    </member>
    <member name="E:System.Runtime.Loader.AssemblyLoadContext.Resolving">
      <summary>このアセンブリ読み込みコンテキストに読み込もうとしたときにアセンブリの解決に失敗したときに発生します。</summary>
    </member>
    <member name="E:System.Runtime.Loader.AssemblyLoadContext.ResolvingUnmanagedDll">
      <summary>ネイティブ ライブラリの解決が失敗したときに発生します。</summary>
    </member>
    <member name="E:System.Runtime.Loader.AssemblyLoadContext.Unloading">
      <summary>
        <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> がアンロードされるときに発生します。</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.#ctor">
      <summary>
        <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.#ctor(System.Boolean)">
      <summary>アンロードが有効かどうかを示す値を使用して、<see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="isCollectible">
        <see cref="M:System.Runtime.Loader.AssemblyLoadContext.Unload" /> を有効にするには <see langword="true" /> で、それ以外の場合は <see langword="false" /> です。 アンロードを有効にするにはパフォーマンス コストがあるため、既定値は <see langword="false" /> です。</param>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.#ctor(System.String,System.Boolean)">
      <summary>アンロードが有効かどうかを示す名前と値を使用して、<see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">新しいインスタンスの <see cref="P:System.Runtime.Loader.AssemblyLoadContext.Name" /> の値です。 この値は <see langword="null" /> の場合もあります。</param>
      <param name="isCollectible">
        <see cref="M:System.Runtime.Loader.AssemblyLoadContext.Unload" /> を有効にするには <see langword="true" /> で、それ以外の場合は <see langword="false" /> です。 アンロードを有効にするにはパフォーマンス コストがあるため、既定値は <see langword="false" /> です。</param>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection">
      <summary>
        <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" /> を <see langword="this" /><see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> に設定します。</summary>
      <returns>
        <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" /> の以前の値を復元するオブジェクトです。 これは、<see langword="using" /> ブロックの <see cref="T:System.IDisposable" /> として使用されることを意図しています。</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection(System.Reflection.Assembly)">
      <summary>アセンブリをロードした <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> に <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" /> を設定します。</summary>
      <param name="activating">要求された <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> インスタンスを決定するのに使用されるアセンブリです。</param>
      <returns>
        <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" /> の以前の値を復元するオブジェクトです。 これは、<see langword="using" /> ブロックの <see cref="T:System.IDisposable" /> として使用されることを意図しています。</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.Finalize">
      <summary>オブジェクトがガベージ コレクションにより収集される前に、そのオブジェクトがリソースを解放し、その他のクリーンアップ操作を実行できるようにします。</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.GetAssemblyName(System.String)">
      <summary>アセンブリ パスの <see cref="T:System.Reflection.AssemblyName" /> を取得します。</summary>
      <param name="assemblyPath">アセンブリへのパス。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyPath" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">アセンブリが見つかりません。</exception>
      <exception cref="T:System.BadImageFormatException">アセンブリは、有効なアセンブリではありません。</exception>
      <returns>
        <paramref name="assemblyPath" /> にあるアセンブリのすべて解析されたアセンブリ名を格納するオブジェクト。</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.GetLoadContext(System.Reflection.Assembly)">
      <summary>指定された <see cref="T:System.Reflection.Assembly" /> を含む <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> を取得します。</summary>
      <param name="assembly">アセンブリ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assembly" /> が <see langword="null" />です。</exception>
      <returns>
        <paramref name="assembly" /> を含むアセンブリ読み込みコンテキスト。 ランタイムから <paramref name="assembly" /> が提供されなかった場合、このメソッドは null を返します。</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)">
      <summary>派生クラス内でオーバーライドされると、<see cref="T:System.Reflection.AssemblyName" /> に基づいてアセンブリを解決して読み込むことができます。</summary>
      <param name="assemblyName">読み込むアセンブリを記述するオブジェクト。</param>
      <returns>読み込まれるアセンブリ。または <see langword="null" />。</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyName(System.Reflection.AssemblyName)">
      <summary>
        <see cref="T:System.Reflection.AssemblyName" /> を指定してアセンブリを解決して読み込みます。</summary>
      <param name="assemblyName">読み込むアセンブリについて記述しているオブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> が見つかりません。</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> は有効なアセンブリではありません。</exception>
      <exception cref="T:System.IO.FileLoadException">
        <paramref name="assemblyName" /> と一致しないアセンブリまたはモジュールが読み込まれました。</exception>
      <returns>読み込まれるアセンブリ。またはスローされます。</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyPath(System.String)">
      <summary>指定したパスのアセンブリ ファイルの内容を読み込みます。</summary>
      <param name="assemblyPath">読み込むファイルの完全修飾パス。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyPath" /> 引数が絶対パスではありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyPath" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.FileLoadException">検出されたファイルを読み込めませんでした。</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyPath" /> パラメーターが空の文字列 ("") になっているか、存在しません。</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyPath" /> は有効なアセンブリではありません。</exception>
      <returns>読み込まれるアセンブリ。</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromNativeImagePath(System.String,System.String)">
      <summary>指定したパスにあるマネージド アセンブリ ファイルのネイティブ イメージの内容を読み込みます。</summary>
      <param name="nativeImagePath">読み込むファイルの完全修飾パス。</param>
      <param name="assemblyPath">読み込むファイルの IL バージョンの完全修飾パス。または <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="nativeImagePath" /> 引数が絶対パスではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyPath" /> 引数が絶対パスではありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="nativeImagePath" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.FileLoadException">検出されたファイルを読み込めませんでした。</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="nativeImagePath" /> パラメーターが空の文字列 ("") になっているか、存在しません。</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyPath" /> は有効なアセンブリではありません。</exception>
      <returns>読み込まれるアセンブリ。</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromStream(System.IO.Stream)">
      <summary>マネージド アセンブリを含む COFF (Common Object File Format) ベースのイメージを使用して、アセンブリを読み込みます。</summary>
      <param name="assembly">マネージド アセンブリを含む COFF ベースのイメージであるバイト配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assembly" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assembly" /> は有効なアセンブリではありません。</exception>
      <returns>読み込まれるアセンブリ。</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromStream(System.IO.Stream,System.IO.Stream)">
      <summary>マネージド アセンブリが含まれている COFF (Common Object File Format) ベースのイメージを使用して、このアセンブリを読み込みます。アセンブリのシンボルを含めることもできます。</summary>
      <param name="assembly">マネージド アセンブリを含む COFF ベースのイメージであるバイト配列。</param>
      <param name="assemblySymbols">アセンブリのシンボルを表す生バイトを格納するバイト配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assembly" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assembly" /> は有効なアセンブリではありません。</exception>
      <returns>読み込まれるアセンブリ。</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDll(System.String)">
      <summary>名前を指定してアンマネージ ライブラリを読み込むことを派生クラスに許可します。</summary>
      <param name="unmanagedDllName">アンマネージ ライブラリの名前。 通常、これはパスまたは拡張子を含まないファイル名です。</param>
      <returns>読み込まれたライブラリのハンドル。または <see cref="F:System.IntPtr.Zero" />。</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDllFromPath(System.String)">
      <summary>指定したパスからアンマネージ ライブラリを読み込みます。</summary>
      <param name="unmanagedDllPath">アンマネージ ライブラリのパス。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="unmanagedDllPath" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="unmanagedDllPath" /> 引数が空であるか、絶対パスではありません。</exception>
      <exception cref="T:System.DllNotFoundException">ライブラリが見つかりません。</exception>
      <exception cref="T:System.BadImageFormatException">ライブラリが無効です。</exception>
      <returns>読み込まれたネイティブ ライブラリの OS ハンドル。</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.SetProfileOptimizationRoot(System.String)">
      <summary>この読み込みコンテキストの最適化プロファイルが格納されるルート パスを設定します。</summary>
      <param name="directoryPath">最適化プロファイルが格納されているディレクトリへの完全パス。</param>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.StartProfileOptimization(System.String)">
      <summary>指定されたプロファイルのプロファイル最適化を開始します。</summary>
      <param name="profile">最適化プロファイルの名前。</param>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.ToString">
      <summary>この読み込みコンテキストの文字列形式を返します。</summary>
      <returns>この読み込みコンテキストの文字列形式。</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.Unload">
      <summary>この <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> のアンロードを開始します。</summary>
      <exception cref="T:System.InvalidOperationException">アンロードすることはできません。</exception>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.All">
      <summary>
        <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> のすべてのインスタンスのコレクションを返します。</summary>
      <returns>すべてのインスタンスのコレクション <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 。</returns>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.Assemblies">
      <summary>
        <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> に読み込まれた <see cref="T:System.Reflection.Assembly" /> インスタンスのコレクションを返します。</summary>
      <returns>に読み込まれた <see cref="T:System.Reflection.Assembly" /> インスタンスのコレクション <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 。</returns>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext">
      <summary>
        <see cref="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection" /> への一番最近の呼び出しを使用して、<see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> セットを取得します。</summary>
      <returns>の <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 最後の呼び出しで設定された <see cref="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection" /> 。 この値は、<see langword="null" /> の場合もあります。 値はに格納さ <see cref="T:System.Threading.AsyncLocal`1" /> れるため、値は非同期コンテキストごとに一意です。</returns>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.Default">
      <summary>既定の <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> を取得します。 既定のコンテキストには、メイン アプリケーション アセンブリとその静的依存関係が含まれます。</summary>
      <returns>既定のアセンブリ読み込みコンテキスト。</returns>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.IsCollectible">
      <summary>この <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> が収集可能かどうかを示す値を取得します。</summary>
      <returns>
        <see langword="true" /> この <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> が収集可能な場合は。それ以外の場合は <see langword="false" /> 。 コンストラクターで値が指定されていない場合、値はに <see langword="false" /> なります。</returns>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.Name">
      <summary>
        <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> の名前を取得します。</summary>
      <returns>
        <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> の名前。 この値は <see langword="null" /> の場合もあります。</returns>
    </member>
    <member name="T:System.Runtime.Loader.AssemblyLoadContext.ContextualReflectionScope">
      <summary>
        <see cref="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection" /> のみで使用される戻り値の型を返します。 これは、<see langword="using" /> ブロックの <see cref="T:System.IDisposable" /> として使用されることを意図しています。</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.ContextualReflectionScope.Dispose">
      <summary>
        <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" /> を、このインスタンスを返した <see cref="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection" /> への呼び出しの前の値に設定します。</summary>
    </member>
  </members>
</doc>