<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualBasic.Core</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualBasic.AppWinStyle">
      <summary>Указывает стиль окна для использования вызванной программы при вызове функции <see langword="Shell" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.Hide">
      <summary>Окно является скрытым и фокус передается скрытому окну. Этот элемент эквивалентен константе <see langword="vbHide" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MaximizedFocus">
      <summary>Окно разворачивается на весь экран с установленным фокусом. Этот элемент эквивалентен константе <see langword="vbMaximizedFocus" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MinimizedFocus">
      <summary>Окно отображается в виде значка с фокусом. Этот элемент эквивалентен константе <see langword="vbMinimizedFocus" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MinimizedNoFocus">
      <summary>Окно отображается в виде значка. Активное в данный момент окно остается активным. Этот элемент эквивалентен константе <see langword="vbMinimizedNoFocus" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.NormalFocus">
      <summary>Окно получает фокус и открывается с исходными размером и положением. Этот элемент эквивалентен константе <see langword="vbNormalFocus" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.NormalNoFocus">
      <summary>Окно восстанавливает свои последние размер и положение. Активное в данный момент окно остается активным. Этот элемент эквивалентен константе <see langword="vbNormalNoFocus" />в языке Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CallType">
      <summary>Указывает тип процедуры, вызываемой при вызове функции <see langword="CallByName" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Get">
      <summary>Извлекается значение свойства.  Этот элемент эквивалентен константе <see langword="vbGet" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Let">
      <summary>Определяется значение свойства Object. Этот элемент эквивалентен константе <see langword="vbLet" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Method">
      <summary>Вызывается метод.  Этот элемент эквивалентен константе <see langword="vbMethod" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Set">
      <summary>Определяется значение свойства.  Этот элемент эквивалентен константе <see langword="vbSet" />в языке Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Collection">
      <summary>Коллекция <see langword="Collection" /> в Visual Basic — это упорядоченный набор элементов, на который можно ссылаться как на единое целое.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.#ctor">
      <summary>Создает и возвращает новый объект <see cref="T:Microsoft.VisualBasic.Collection" /> в Visual Basic.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
      <summary>Добавляет элемент в объект <see langword="Collection" />.</summary>
      <param name="Item">Обязательный. Объект любого типа, указывающий элемент, добавляемый в коллекцию.</param>
      <param name="Key">Необязательный элемент. Уникальное выражение типа <see langword="String" />, задающее ключевую строку, которая может использоваться для доступа к этому элементу коллекции вместо индекса позиции.</param>
      <param name="Before">Необязательный элемент. Выражение, задающее относительную позицию в коллекции. Добавляемый элемент помещается в коллекцию перед элементом, определяемым аргументом <paramref name="Before" />. Если параметр <paramref name="Before" /> является числовым выражением, то он должен быть числом от 1 до значения <see cref="P:Microsoft.VisualBasic.Collection.Count" /> коллекции. Если параметр <paramref name="Before" /> является выражением типа <see langword="String" />, то оно должно соответствовать ключевой строке, заданной при добавлении элемента в коллекцию. Нельзя указать одновременно и <paramref name="Before" />, и <paramref name="After" />.</param>
      <param name="After">Необязательный элемент. Выражение, задающее относительную позицию в коллекции. Добавляемый элемент помещается в коллекцию после элемента, определяемого аргументом <paramref name="After" />. Если параметр <paramref name="After" /> является числовым выражением, то он должен быть числом от 1 до значения <see langword="Count" /> коллекции. Если параметр <paramref name="After" /> является выражением типа <see langword="String" />, то он должно соответствовать ключевой строке, заданной при добавлении элемента в коллекцию. Нельзя указать одновременно и <paramref name="Before" />, и <paramref name="After" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Clear">
      <summary>Удаляет все элементы объекта <see langword="Collection" /> Visual Basic.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Contains(System.String)">
      <summary>Возвращает значение, показывающее, содержит ли объект Visual Basic <see langword="Collection" /> элемент с указанным ключом.</summary>
      <param name="Key">Обязательный. Выражение типа <see langword="String" />, которое задает ключ для поиска элемента в коллекции.</param>
      <returns>Значение <see langword="true" />, если объект Visual Basic <see langword="Collection" /> содержит элемент с указанным ключом; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.GetEnumerator">
      <summary>Возвращает перечислитель, выполняющий перебор элементов в коллекции.</summary>
      <returns>Перечислитель, который можно использовать для итерации по коллекции.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Remove(System.Int32)">
      <summary>Удаляет объект из коллекции <see langword="Collection" />.</summary>
      <param name="Index">Числовое выражение, задающее позицию элемента коллекции. Значение <paramref name="Index" /> должно быть числом от 1 до значения свойства <see cref="P:Microsoft.VisualBasic.Collection.Count" /> коллекции.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Remove(System.String)">
      <summary>Удаляет объект из коллекции <see langword="Collection" />.</summary>
      <param name="Key">Уникальное выражение типа <see langword="String" />, задающее строку ключа, которая может использоваться для доступа к элементу коллекции вместо индекса позиции. Значение <paramref name="Key" /> должно соответствовать аргументу <paramref name="Key" />, заданному при добавлении элемента в коллекцию.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Count">
      <summary>Получает число элементов в коллекции.</summary>
      <returns>Количество элементов в коллекции.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.Int32)">
      <summary>Получает определенный элемент объекта <see langword="Collection" /> по номеру позиции или ключу.</summary>
      <param name="Index">Числовое выражение, задающее позицию элемента коллекции. Значение <paramref name="Index" /> должно быть числом от 1 до значения свойства <see cref="P:Microsoft.VisualBasic.Collection.Count" /> коллекции. Или (Б) выражение типа <see langword="Object" />, задающее позицию или ключевую строку элемента в коллекции.</param>
      <returns>Конкретный элемент <see langword="Collection" /> объекта либо по положению, либо по ключу.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.Object)">
      <summary>Получает определенный элемент объекта <see langword="Collection" /> по номеру позиции или ключу.</summary>
      <param name="Index">Числовое выражение, задающее позицию элемента коллекции. Значение <paramref name="Index" /> должно быть числом от 1 до значения свойства <see cref="P:Microsoft.VisualBasic.Collection.Count" /> коллекции. Или (Б) выражение типа <see langword="Object" />, задающее позицию или ключевую строку элемента в коллекции.</param>
      <returns>Конкретный элемент <see langword="Collection" /> объекта либо по положению, либо по ключу.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.String)">
      <summary>Получает определенный элемент объекта <see langword="Collection" /> по номеру позиции или ключу.</summary>
      <param name="Key">Уникальное выражение типа <see langword="String" />, задающее строку ключа, которая может использоваться для доступа к элементу коллекции вместо индекса позиции. Значение <paramref name="Key" /> должно соответствовать аргументу <paramref name="Key" />, заданному при добавлении элемента в коллекцию.</param>
      <returns>Конкретный элемент <see langword="Collection" /> объекта либо по положению, либо по ключу.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComClassAttribute">
      <summary>Атрибут <see langword="ComClassAttribute" /> сообщает компилятору о необходимости добавления метаданных, позволяющих использовать класс в качестве COM-объекта.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see langword="ComClassAttribute" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see langword="ComClassAttribute" />.</summary>
      <param name="_ClassID">Инициализирует значение свойства <see langword="ClassID" />, используемого для однозначной идентификации класса.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see langword="ComClassAttribute" />.</summary>
      <param name="_ClassID">Инициализирует значение свойства <see langword="ClassID" />, используемого для однозначной идентификации класса.</param>
      <param name="_InterfaceID">Инициализирует значение свойства <see langword="InterfaceID" />, используемого для однозначной идентификации интерфейса.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see langword="ComClassAttribute" />.</summary>
      <param name="_ClassID">Инициализирует значение свойства <see langword="ClassID" />, используемого для однозначной идентификации класса.</param>
      <param name="_InterfaceID">Инициализирует значение свойства <see langword="InterfaceID" />, используемого для однозначной идентификации интерфейса.</param>
      <param name="_EventId">Инициализирует значение свойства <see langword="EventID" />, используемого для однозначной идентификации события.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.ClassID">
      <summary>Получает уникальный идентификатор класса.</summary>
      <returns>Только для чтения. Строка, используемая компилятором для однозначной идентификации класса при создании СОМ-объекта.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.EventID">
      <summary>Получает уникальный идентификатор события.</summary>
      <returns>Только для чтения. Строка, используемая компилятором для однозначной идентификации события для класса при создании СОМ-объекта.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceID">
      <summary>Получает уникальный идентификатор интерфейса.</summary>
      <returns>Только для чтения. Строка, используемая компилятором для однозначной идентификации интерфейса для класса при создании СОМ-объекта.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceShadows">
      <summary>Указывает, что имя СОМ-интерфейса подменяет другой член класса или базового класса.</summary>
      <returns>Значение <see langword="Boolean" />, указывающее, что имя СОМ-интерфейса подменяет другой член класса или базового класса.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompareMethod">
      <summary>Указывает, как сравнивать строки при вызове функций сравнения.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompareMethod.Binary">
      <summary>Выполняется двоичное сравнение. Этот элемент эквивалентен константе <see langword="vbBinaryCompare" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompareMethod.Text">
      <summary>Выполняется текстовое сравнение. Этот элемент эквивалентен константе <see langword="vbTextCompare" />в языке Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.BooleanType">
      <summary>Начиная с Visual Basic 2005 этот класс более не используется.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.BooleanType.FromObject(System.Object)">
      <summary>Возвращает значение типа <see langword="Boolean" />, соответствующее заданному объекту.</summary>
      <param name="Value">Обязательный. Объект, преобразуемый в значение <see langword="Boolean" />.</param>
      <returns>Значение типа <see langword="Boolean" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.BooleanType.FromString(System.String)">
      <summary>Возвращает значение типа <see langword="Boolean" />, соответствующее заданной строке.</summary>
      <param name="Value">Обязательный. Строка, преобразуемая в значение <see langword="Boolean" />.</param>
      <returns>Значение типа <see langword="Boolean" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ByteType">
      <summary>Начиная с Visual Basic 2005 этот класс более не используется.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ByteType.FromObject(System.Object)">
      <summary>Возвращает значение типа <see langword="Byte" />, соответствующее заданному объекту.</summary>
      <param name="Value">Обязательный. Объект, преобразуемый в значение <see langword="Byte" />.</param>
      <returns>Значение типа <see langword="Byte" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ByteType.FromString(System.String)">
      <summary>Возвращает значение типа <see langword="Byte" />, соответствующее заданной строке.</summary>
      <param name="Value">Обязательный. Строка, преобразуемая в значение <see langword="Byte" />.</param>
      <returns>Значение типа <see langword="Byte" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.CharArrayType">
      <summary>Начиная с Visual Basic 2005 этот класс более не используется.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharArrayType.FromObject(System.Object)">
      <summary>Возвращает значение типа <see langword="CharArray" />, соответствующее заданному объекту.</summary>
      <param name="Value">Обязательный. Объект, преобразуемый в значение <see langword="CharArray" />.</param>
      <returns>Значение типа <see langword="CharArray" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharArrayType.FromString(System.String)">
      <summary>Возвращает значение типа <see langword="CharArray" />, соответствующее заданной строке.</summary>
      <param name="Value">Обязательный. Строка, преобразуемая в значение <see langword="CharArray" />.</param>
      <returns>Значение типа <see langword="CharArray" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.CharType">
      <summary>Начиная с Visual Basic 2005 этот класс более не используется.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharType.FromObject(System.Object)">
      <summary>Возвращает значение типа <see langword="Char" />, соответствующее заданному объекту.</summary>
      <param name="Value">Обязательный. Объект, преобразуемый в значение <see langword="Char" />.</param>
      <returns>Значение типа <see langword="Char" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharType.FromString(System.String)">
      <summary>Возвращает значение типа <see langword="Char" />, соответствующее заданной строке.</summary>
      <param name="Value">Обязательный. Строка, преобразуемая в значение <see langword="Char" />.</param>
      <returns>Значение типа <see langword="Char" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Conversions">
      <summary>Предоставляет методы, выполняющие различные преобразования типов.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ChangeType(System.Object,System.Type)">
      <summary>Преобразовывает объект в указанный тип.</summary>
      <param name="Expression">Преобразуемый объект.</param>
      <param name="TargetType">Тип данных, в который требуется преобразовать объект.</param>
      <returns>Объект указанного конечного типа.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FallbackUserDefinedConversion(System.Object,System.Type)">
      <summary>Преобразовывает объект в указанный тип.</summary>
      <param name="Expression">Преобразуемый объект.</param>
      <param name="TargetType">Тип данных, в который требуется преобразовать объект.</param>
      <returns>Объект указанного конечного типа.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharAndCount(System.Char,System.Int32)">
      <summary>Преобразует значение типа <see cref="T:System.Char" /> в строку с учетом заданного числа байтов.</summary>
      <param name="Value">Преобразуемое значение <see langword="Char" />.</param>
      <param name="Count">Число байтов в значении <see langword="Char" />.</param>
      <returns>Строковое представление заданного значения.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharArray(System.Char[])">
      <summary>Преобразует массив типа <see cref="T:System.Char" /> в строку.</summary>
      <param name="Value">Преобразуемый массив <see langword="Char" />.</param>
      <returns>Строковое представление заданного массива.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharArraySubset(System.Char[],System.Int32,System.Int32)">
      <summary>Преобразует подмножество массива <see cref="T:System.Char" /> в строку.</summary>
      <param name="Value">Преобразуемый массив <see langword="Char" />.</param>
      <param name="StartIndex">Индекс начальной позиции (отсчитываемый от нуля).</param>
      <param name="Length">Длина подмассива в байтах.</param>
      <returns>Строковое представление части заданного массива, начинающейся с указанной позиции и имеющей указанную длину.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToBoolean(System.Object)">
      <summary>Преобразует объект в значение типа <see cref="T:System.Boolean" />.</summary>
      <param name="Value">Преобразуемый объект.</param>
      <returns>Значение <see langword="Boolean" />. Если задан объект NULL, возвращается <see langword="False" />, в противном случае — <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToBoolean(System.String)">
      <summary>Преобразуют строку в число <see cref="T:System.Boolean" />.</summary>
      <param name="Value">Преобразуемая строка.</param>
      <returns>Значение <see langword="Boolean" />. Если задана строка NULL, возвращается <see langword="False" />, в противном случае — <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToByte(System.Object)">
      <summary>Преобразует объект в значение типа <see cref="T:System.Byte" />.</summary>
      <param name="Value">Преобразуемый объект.</param>
      <returns>Значение объекта типа <see langword="Byte" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToByte(System.String)">
      <summary>Преобразуют строку в число <see cref="T:System.Byte" />.</summary>
      <param name="Value">Преобразуемая строка.</param>
      <returns>Значение строки типа <see langword="Byte" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToChar(System.Object)">
      <summary>Преобразует объект в значение типа <see cref="T:System.Char" />.</summary>
      <param name="Value">Преобразуемый объект.</param>
      <returns>Значение объекта типа <see langword="Char" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToChar(System.String)">
      <summary>Преобразуют строку в число <see cref="T:System.Char" />.</summary>
      <param name="Value">Преобразуемая строка.</param>
      <returns>Значение строки типа <see langword="Char" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToCharArrayRankOne(System.Object)">
      <summary>Преобразует объект в одномерный массив типа <see cref="T:System.Char" />.</summary>
      <param name="Value">Преобразуемый объект.</param>
      <returns>Одномерный массив <see langword="Char" /></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToCharArrayRankOne(System.String)">
      <summary>Преобразует строку в одномерный массив типа <see cref="T:System.Char" />.</summary>
      <param name="Value">Преобразуемая строка.</param>
      <returns>Одномерный массив <see langword="Char" /></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDate(System.Object)">
      <summary>Преобразует объект в значение типа <see cref="T:System.DateTime" />.</summary>
      <param name="Value">Преобразуемый объект.</param>
      <returns>Значение объекта типа <see langword="DateTime" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDate(System.String)">
      <summary>Преобразуют строку в число <see cref="T:System.DateTime" />.</summary>
      <param name="Value">Преобразуемая строка.</param>
      <returns>Значение строки типа <see langword="DateTime" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.Boolean)">
      <summary>Преобразует значение типа <see cref="T:System.Boolean" /> в значение типа <see cref="T:System.Decimal" />.</summary>
      <param name="Value">Булево значение, которое требуется преобразовать.</param>
      <returns>Логическое значение в представлении <see langword="Decimal" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.Object)">
      <summary>Преобразует объект в значение типа <see cref="T:System.Decimal" />.</summary>
      <param name="Value">Преобразуемый объект.</param>
      <returns>Значение объекта типа <see langword="Decimal" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.String)">
      <summary>Преобразуют строку в число <see cref="T:System.Decimal" />.</summary>
      <param name="Value">Преобразуемая строка.</param>
      <returns>Значение строки типа <see langword="Decimal" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDouble(System.Object)">
      <summary>Преобразует объект в значение типа <see cref="T:System.Double" />.</summary>
      <param name="Value">Преобразуемый объект.</param>
      <returns>Значение объекта типа <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDouble(System.String)">
      <summary>Преобразуют строку в число <see cref="T:System.Double" />.</summary>
      <param name="Value">Преобразуемая строка.</param>
      <returns>Значение строки типа <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToGenericParameter``1(System.Object)">
      <summary>Преобразует объект в универсальный тип <paramref name="T" />.</summary>
      <param name="Value">Преобразуемый объект.</param>
      <typeparam name="T">Тип, в который преобразуется объект <paramref name="Value" />.</typeparam>
      <returns>Структура или объект универсального типа <paramref name="T" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToInteger(System.Object)">
      <summary>Преобразует объект в целочисленное значение.</summary>
      <param name="Value">Преобразуемый объект.</param>
      <returns>Значение объекта типа <see langword="int" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToInteger(System.String)">
      <summary>Преобразует строку в целочисленное значение.</summary>
      <param name="Value">Преобразуемая строка.</param>
      <returns>Значение строки типа <see langword="int" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToLong(System.Object)">
      <summary>Преобразует объект в значение типа <see langword="Long" />.</summary>
      <param name="Value">Преобразуемый объект.</param>
      <returns>Значение объекта типа <see langword="Long" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToLong(System.String)">
      <summary>Преобразуют строку в число <see langword="Long" />.</summary>
      <param name="Value">Преобразуемая строка.</param>
      <returns>Значение строки типа <see langword="Long" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSByte(System.Object)">
      <summary>Преобразует объект в значение типа <see cref="T:System.SByte" />.</summary>
      <param name="Value">Преобразуемый объект.</param>
      <returns>Значение объекта типа <see langword="SByte" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSByte(System.String)">
      <summary>Преобразует строку в значение типа <see cref="T:System.SByte" />.</summary>
      <param name="Value">Преобразуемая строка.</param>
      <returns>Значение строки типа <see langword="SByte" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToShort(System.Object)">
      <summary>Преобразует объект в значение типа <see langword="Short" />.</summary>
      <param name="Value">Преобразуемый объект.</param>
      <returns>Значение объекта типа <see langword="Short" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToShort(System.String)">
      <summary>Преобразуют строку в число <see langword="Short" />.</summary>
      <param name="Value">Преобразуемая строка.</param>
      <returns>Значение строки типа <see langword="Short" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSingle(System.Object)">
      <summary>Преобразует объект в значение типа <see cref="T:System.Single" />.</summary>
      <param name="Value">Преобразуемый объект.</param>
      <returns>Значение объекта типа <see cref="T:System.Single" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSingle(System.String)">
      <summary>Преобразует значение типа <see cref="T:System.String" /> в значение <see cref="T:System.Single" />.</summary>
      <param name="Value">Преобразуемая строка.</param>
      <returns>Значение строки типа <see cref="T:System.Single" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Boolean)">
      <summary>Преобразует значение типа <see cref="T:System.Boolean" /> в значение типа <see cref="T:System.String" />.</summary>
      <param name="Value">Преобразуемое значение <see langword="Boolean" />.</param>
      <returns>Представление <see langword="String" /> значения <see langword="Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Byte)">
      <summary>Преобразует значение типа <see cref="T:System.Byte" /> в значение типа <see cref="T:System.String" />.</summary>
      <param name="Value">Преобразуемое значение <see langword="Byte" />.</param>
      <returns>Представление <see langword="String" /> значения <see langword="Byte" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Char)">
      <summary>Преобразует значение типа <see cref="T:System.Char" /> в значение типа <see cref="T:System.String" />.</summary>
      <param name="Value">Преобразуемое значение <see langword="Char" />.</param>
      <returns>Представление <see langword="String" /> значения <see langword="Char" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.DateTime)">
      <summary>Преобразует значение типа <see cref="T:System.DateTime" /> в значение типа <see cref="T:System.String" />.</summary>
      <param name="Value">Преобразуемое значение <see langword="DateTime" />.</param>
      <returns>Представление <see langword="String" /> значения <see langword="DateTime" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Decimal)">
      <summary>Преобразует значение типа <see cref="T:System.Decimal" /> в значение типа <see cref="T:System.String" />.</summary>
      <param name="Value">Преобразуемое значение <see langword="Decimal" />.</param>
      <returns>Представление <see langword="String" /> значения <see langword="Decimal" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Decimal,System.Globalization.NumberFormatInfo)">
      <summary>Преобразует значение типа <see cref="T:System.Decimal" /> в значение <see cref="T:System.String" />, используя указанный числовой формат.</summary>
      <param name="Value">Преобразуемое значение <see langword="decimal" />.</param>
      <param name="NumberFormat">Используемый числовой формат согласно <see cref="T:System.Globalization.NumberFormatInfo" />.</param>
      <returns>Представление <see langword="String" /> значения <see langword="Decimal" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Double)">
      <summary>Преобразует значение типа <see cref="T:System.Double" /> в значение типа <see cref="T:System.String" />.</summary>
      <param name="Value">Преобразуемое значение <see cref="T:System.Double" />.</param>
      <returns>Строковое представление значения типа <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Double,System.Globalization.NumberFormatInfo)">
      <summary>Преобразует значение типа <see cref="T:System.Double" /> в значение <see cref="T:System.String" />, используя указанный числовой формат.</summary>
      <param name="Value">Преобразуемое значение <see cref="T:System.Double" />.</param>
      <param name="NumberFormat">Используемый числовой формат согласно <see cref="T:System.Globalization.NumberFormatInfo" />.</param>
      <returns>Строковое представление значения типа <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int16)">
      <summary>Преобразует значение типа <see langword="Short" /> в значение типа <see cref="T:System.String" />.</summary>
      <param name="Value">Преобразуемое значение <see langword="Short" />.</param>
      <returns>Представление <see langword="String" /> значения <see langword="Short" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int32)">
      <summary>Преобразует целое число в значение типа <see cref="T:System.String" />.</summary>
      <param name="Value">Преобразуемое значение <see langword="int" />.</param>
      <returns>Представление <see langword="String" /> значения <see langword="int" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int64)">
      <summary>Преобразует значение типа <see langword="Long" /> в значение типа <see cref="T:System.String" />.</summary>
      <param name="Value">Преобразуемое значение <see langword="Long" />.</param>
      <returns>Представление <see langword="String" /> значения <see langword="Long" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Object)">
      <summary>Преобразует объект в значение типа <see cref="T:System.String" />.</summary>
      <param name="Value">Преобразуемый объект.</param>
      <returns>Объект в представлении <see langword="String" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Single)">
      <summary>Преобразует значение типа <see cref="T:System.Single" /> (число одинарной точности с плавающей запятой) в значение типа <see cref="T:System.String" />.</summary>
      <param name="Value">Преобразуемое значение <see cref="T:System.Single" />.</param>
      <returns>Строковое представление значения типа <see cref="T:System.Single" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Single,System.Globalization.NumberFormatInfo)">
      <summary>Преобразует значение типа <see cref="T:System.Single" /> в значение <see cref="T:System.String" />, используя указанный числовой формат.</summary>
      <param name="Value">Преобразуемое значение <see cref="T:System.Single" />.</param>
      <param name="NumberFormat">Используемый числовой формат согласно <see cref="T:System.Globalization.NumberFormatInfo" />.</param>
      <returns>Строковое представление значения типа <see cref="T:System.Single" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.UInt32)">
      <summary>Преобразует значение типа <see langword="uint" /> в значение типа <see cref="T:System.String" />.</summary>
      <param name="Value">Преобразуемое значение <see langword="Uint" />.</param>
      <returns>Представление <see langword="String" /> значения <see langword="Uint" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.UInt64)">
      <summary>Преобразует значение типа <see langword="Ulong" /> в значение типа <see cref="T:System.String" />.</summary>
      <param name="Value">Преобразуемое значение <see langword="Ulong" />.</param>
      <returns>Представление <see langword="String" /> значения <see langword="Ulong" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUInteger(System.Object)">
      <summary>Преобразует объект в значение типа <see langword="Uint" />.</summary>
      <param name="Value">Преобразуемый объект.</param>
      <returns>Значение объекта типа <see langword="Uint" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUInteger(System.String)">
      <summary>Преобразуют строку в число <see langword="Uint" />.</summary>
      <param name="Value">Преобразуемая строка.</param>
      <returns>Значение строки типа <see langword="Uint" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToULong(System.Object)">
      <summary>Преобразует объект в значение типа <see langword="Ulong" />.</summary>
      <param name="Value">Преобразуемый объект.</param>
      <returns>Значение объекта типа <see langword="Ulong" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToULong(System.String)">
      <summary>Преобразуют строку в число <see langword="Ulong" />.</summary>
      <param name="Value">Преобразуемая строка.</param>
      <returns>Значение строки типа <see langword="Ulong" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUShort(System.Object)">
      <summary>Преобразует объект в значение типа <see langword="Ushort" />.</summary>
      <param name="Value">Преобразуемый объект.</param>
      <returns>Значение объекта типа <see langword="Ushort" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUShort(System.String)">
      <summary>Преобразуют строку в число <see langword="Ushort" />.</summary>
      <param name="Value">Преобразуемая строка.</param>
      <returns>Значение строки типа <see langword="Ushort" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DateType">
      <summary>Начиная с Visual Basic 2005 этот класс более не используется.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromObject(System.Object)">
      <summary>Возвращает значение типа <see langword="Date" />, соответствующее заданному объекту.</summary>
      <param name="Value">Обязательный. Объект, преобразуемый в значение <see langword="Date" />.</param>
      <returns>Значение типа <see langword="Date" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromString(System.String)">
      <summary>Возвращает значение типа <see langword="Date" />, соответствующее заданной строке.</summary>
      <param name="Value">Обязательный. Строка, преобразуемая в значение <see langword="Date" />.</param>
      <returns>Значение типа <see langword="Date" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromString(System.String,System.Globalization.CultureInfo)">
      <summary>Возвращает значение типа <see langword="Date" />, соответствующее заданной строке, и сведения о языке и региональных параметрах.</summary>
      <param name="Value">Обязательный. Строка, преобразуемая в значение <see langword="Date" />.</param>
      <param name="culture">Обязательный. Объект <see cref="T:System.Globalization.CultureInfo" />, определяющий способ форматирования и отображения значений дат с учетом языка и региональных параметров.</param>
      <returns>Значение типа <see langword="Date" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DecimalType">
      <summary>Начиная с Visual Basic 2005 этот класс более не используется.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromBoolean(System.Boolean)">
      <summary>Возвращает значение типа <see langword="Decimal" />, соответствующее заданному значению типа <see langword="Boolean" />.</summary>
      <param name="Value">Обязательный. Значение <see langword="Boolean" />, преобразуемое в значение <see langword="Decimal" />.</param>
      <returns>Значение типа <see langword="Decimal" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromObject(System.Object)">
      <summary>Возвращает значение типа <see langword="Decimal" />, соответствующее заданному объекту.</summary>
      <param name="Value">Обязательный. Объект, преобразуемый в значение <see langword="Decimal" />.</param>
      <returns>Значение типа <see langword="Decimal" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary>Возвращает значение типа <see langword="Decimal" />, соответствующее заданному объекту, и необязательные сведения о форматировании чисел.</summary>
      <param name="Value">Обязательный. Объект, преобразуемый в значение <see langword="Decimal" />.</param>
      <param name="NumberFormat">Объект <see cref="T:System.Globalization.NumberFormatInfo" />, определяющий способ форматирования и отображения числовых значений с учетом языка и региональных параметров.</param>
      <returns>Значение типа <see langword="Decimal" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromString(System.String)">
      <summary>Возвращает значение типа <see langword="Decimal" />, соответствующее заданной строке.</summary>
      <param name="Value">Обязательный. Строка, преобразуемая в значение <see langword="Decimal" />.</param>
      <returns>Значение типа <see langword="Decimal" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary>Возвращает значение типа <see langword="Decimal" />, соответствующее заданной строке, и сведения о форматировании чисел.</summary>
      <param name="Value">Обязательный. Строка, преобразуемая в значение <see langword="Decimal" />.</param>
      <param name="NumberFormat">Объект <see cref="T:System.Globalization.NumberFormatInfo" />, определяющий способ форматирования и отображения числовых значений с учетом языка и региональных параметров.</param>
      <returns>Значение типа <see langword="Decimal" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.Parse(System.String,System.Globalization.NumberFormatInfo)">
      <summary>Возвращает значение типа <see langword="Decimal" />, соответствующее заданной строке, и сведения о форматировании чисел.</summary>
      <param name="Value">Обязательный. Строка, преобразуемая в значение <see langword="Decimal" />.</param>
      <param name="NumberFormat">Объект <see cref="T:System.Globalization.NumberFormatInfo" />, определяющий способ форматирования и отображения числовых значений с учетом языка и региональных параметров.</param>
      <returns>Значение типа <see langword="Decimal" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute">
      <summary>При применении к классу компилятор неявно вызывает метод инициализации компонента из синтетического конструктора по умолчанию.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute.#ctor">
      <summary>Инициализирует новый экземпляр атрибута <see cref="T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DoubleType">
      <summary>Начиная с Visual Basic 2005 этот класс более не используется.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromObject(System.Object)">
      <summary>Возвращает значение типа <see cref="T:System.Double" />, соответствующее заданному объекту.</summary>
      <param name="Value">Обязательный. Объект, преобразуемый в значение <see cref="T:System.Double" />.</param>
      <returns>Значение типа <see cref="T:System.Double" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary>Возвращает значение типа <see cref="T:System.Double" />, соответствующее заданному объекту.</summary>
      <param name="Value">Обязательный. Объект, преобразуемый в значение <see cref="T:System.Double" />.</param>
      <param name="NumberFormat">Объект <see cref="T:System.Globalization.NumberFormatInfo" />, определяющий способ форматирования и отображения числовых значений с учетом языка и региональных параметров.</param>
      <returns>Значение типа <see cref="T:System.Double" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromString(System.String)">
      <summary>Возвращает значение типа <see cref="T:System.Double" />, соответствующее заданной строке.</summary>
      <param name="Value">Обязательный. Строка, преобразуемая в значение <see cref="T:System.Double" />.</param>
      <returns>Значение типа <see cref="T:System.Double" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary>Возвращает значение типа <see cref="T:System.Double" />, соответствующее заданной строке, и сведения о форматировании чисел.</summary>
      <param name="Value">Обязательный. Строка, преобразуемая в значение <see cref="T:System.Double" />.</param>
      <param name="NumberFormat">Объект <see cref="T:System.Globalization.NumberFormatInfo" />, определяющий способ форматирования и отображения числовых значений с учетом языка и региональных параметров.</param>
      <returns>Значение типа <see cref="T:System.Double" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.Parse(System.String)">
      <summary>Возвращает значение типа <see cref="T:System.Double" />, соответствующее заданной строке.</summary>
      <param name="Value">Обязательный. Строка, преобразуемая в значение <see cref="T:System.Double" />.</param>
      <returns>Значение типа <see cref="T:System.Double" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.Parse(System.String,System.Globalization.NumberFormatInfo)">
      <summary>Возвращает значение типа <see cref="T:System.Double" />, соответствующее заданной строке, и сведения о форматировании чисел.</summary>
      <param name="Value">Обязательный. Строка, преобразуемая в значение <see cref="T:System.Double" />.</param>
      <param name="NumberFormat">Объект <see cref="T:System.Globalization.NumberFormatInfo" />, определяющий способ форматирования и отображения числовых значений с учетом языка и региональных параметров.</param>
      <returns>Значение типа <see cref="T:System.Double" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization">
      <summary>Этот класс используется компилятором Visual Basic при инициализации статических локальных элементов; он не предназначен для вызова непосредственно из программы. Исключение этого типа создается при сбое инициализации статической локальной переменной.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IntegerType">
      <summary>Начиная с Visual Basic 2005 этот класс более не используется.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IntegerType.FromObject(System.Object)">
      <summary>Возвращает значение типа <see langword="Integer" />, соответствующее заданному объекту.</summary>
      <param name="Value">Обязательный. Объект, преобразуемый в значение <see langword="Integer" />.</param>
      <returns>Значение типа <see langword="Integer" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IntegerType.FromString(System.String)">
      <summary>Возвращает значение типа <see langword="Integer" />, соответствующее заданной строке.</summary>
      <param name="Value">Обязательный. Строка, преобразуемая в значение <see langword="Integer" />.</param>
      <returns>Значение типа <see langword="Integer" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LateBinding">
      <summary>Начиная с Visual Basic 2005 этот класс более не используется.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean[])">
      <summary>Выполняет вызов метода объекта с поздней привязкой.</summary>
      <param name="o">Объект, для которого вызывается метод.</param>
      <param name="objType">Тип объекта.</param>
      <param name="name">Имя вызываемого метода объекта <paramref name="o" />.</param>
      <param name="args">Массив значений параметров, передаваемый в метод.</param>
      <param name="paramnames">Массив, содержащий имена параметров, в которые передаются значения элементов массива <paramref name="args" />.</param>
      <param name="CopyBack">Массив значений типа <see langword="Boolean" />, где <see langword="True" /> означает, что соответствующий параметр передается методом <see langword="ByRef" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean[])">
      <summary>Возвращает из объекта значение с поздней привязкой.</summary>
      <param name="o">Объект, из которого возвращается значение.</param>
      <param name="objType">Тип объекта.</param>
      <param name="name">Имя элемента объекта <paramref name="o" />, из которого извлекается значение.</param>
      <param name="args">Массив из одного или нескольких значений индексов, задающих расположение в объекте <paramref name="o" />, если <paramref name="o" /> — одномерный или многомерный массив, или массив значений аргументов, передаваемых в объект <paramref name="o" />.</param>
      <param name="paramnames">Массив, содержащий имена параметров, в которые передаются значения элементов массива <paramref name="args" />.</param>
      <param name="CopyBack">Массив значений типа <see langword="Boolean" />, где <see langword="True" /> означает, что соответствующий параметр передается методом <see langword="ByRef" />.</param>
      <returns>Если <paramref name="o" /> является массивом — значение из объекта <paramref name="o" /> в позиции, указанной элементом массива <paramref name="args" />. Если <paramref name="o" /> является объектом — возвращаемое значение объекта <paramref name="o" />, определяемое с использованием именнованных параметров из массива <paramref name="paramnames" /> и соответствующих им значений из массива <paramref name="args" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexGet(System.Object,System.Object[],System.String[])">
      <summary>Возвращает из объекта значение с поздней привязкой, используя указанный индекс или параметры.</summary>
      <param name="o">Объект, из которого возвращается значение.</param>
      <param name="args">Массив из одного или нескольких значений индексов, задающих расположение в объекте <paramref name="o" />, если <paramref name="o" /> — одномерный или многомерный массив, или массив значений аргументов, передаваемых в объект <paramref name="o" />.</param>
      <param name="paramnames">Массив, содержащий имена параметров, в которые передаются значения элементов массива <paramref name="args" />.</param>
      <returns>Если <paramref name="o" /> является массивом — значение из объекта <paramref name="o" /> в позиции, указанной элементом массива <paramref name="args" />. Если <paramref name="o" /> является объектом — возвращаемое значение объекта <paramref name="o" />, определяемое с использованием именнованных параметров из массива <paramref name="paramnames" /> и соответствующих им значений из массива <paramref name="args" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexSet(System.Object,System.Object[],System.String[])">
      <summary>Устанавливает значение объекта с поздней привязкой, используя указанные параметры.</summary>
      <param name="o">Объект, для которого устанавливается значение.</param>
      <param name="args">Массив из одного или нескольких значений индексов, задающих расположение в объекте <paramref name="o" />, если <paramref name="o" /> — одномерный или многомерный массив, или массив значений аргументов, передаваемых в объект <paramref name="o" />.</param>
      <param name="paramnames">Массив, содержащий имена параметров, в которые передаются значения элементов массива <paramref name="args" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary>Устанавливает значение объекта с поздней привязкой, используя указанные параметры.</summary>
      <param name="o">Объект, для которого устанавливается значение.</param>
      <param name="args">Массив из одного или нескольких значений параметров, передаваемых в объект <paramref name="o" />.</param>
      <param name="paramnames">Массив, содержащий имена параметров, в которые передаются значения элементов массива <paramref name="args" />.</param>
      <param name="OptimisticSet">
        <see langword="True" /> запрещает генерацию исключения в случае, если элемент набора не найден.</param>
      <param name="RValueBase">
        <see langword="True" /> определяет объект <paramref name="o" /> как результат выражения с поздней привязкой.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[])">
      <summary>Устанавливает значение члена объекта с поздней привязкой, используя указанные параметры.</summary>
      <param name="o">Объект, для члена которого устанавливается значение.</param>
      <param name="objType">Тип объекта.</param>
      <param name="name">Имя устанавливаемого члена.</param>
      <param name="args">Массив из одного или нескольких значений параметров, передаваемых в член объекта <paramref name="o" />.</param>
      <param name="paramnames">Массив, содержащий имена параметров, в которые передаются значения элементов массива <paramref name="args" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary>Устанавливает значение члена объекта с поздней привязкой, используя указанные параметры.</summary>
      <param name="o">Объект, для члена которого устанавливается значение.</param>
      <param name="objType">Тип объекта.</param>
      <param name="name">Имя устанавливаемого члена.</param>
      <param name="args">Массив из одного или нескольких значений параметров, передаваемых в член объекта <paramref name="o" />.</param>
      <param name="paramnames">Массив, содержащий имена параметров, в которые передаются значения элементов массива <paramref name="args" />.</param>
      <param name="OptimisticSet">
        <see langword="True" /> запрещает генерацию исключения в случае, если элемент набора не найден.</param>
      <param name="RValueBase">
        <see langword="True" /> определяет объект <paramref name="o" /> как результат выражения с поздней привязкой.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LikeOperator">
      <summary>Этот класс содержит вспомогательные средства, используемые компилятором Visual Basic для выполнения действий, связанных с оператором Like. Он не предназначен для вызова непосредственно из программы.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LikeOperator.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
      <summary>Выполняет двоичное или текстовое сравнение строк для двух заданных объектов. Данный вспомогательный метод не предназначен для вызова непосредственно из программы.</summary>
      <param name="Source">Строка, подлежащая сравнению.</param>
      <param name="Pattern">Строка, с которой сравнивается строка <paramref name="Source" />.</param>
      <param name="CompareOption">Перечисление <see cref="T:Microsoft.VisualBasic.CompareMethod" />, определяющее, используется ли текстовое сравнение. В случае <see cref="F:Microsoft.VisualBasic.CompareMethod.Text" /> данный метод использует текстовое сравнение, в случае <see cref="F:Microsoft.VisualBasic.CompareMethod.Binary" /> используется двоичное сравнение.</param>
      <returns>Значение <see langword="True" />, если строки совпали; в противном случае — значение <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LikeOperator.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>Выполняет двоичное или текстовое сравнение двух заданных строк. Данный вспомогательный метод не предназначен для вызова непосредственно из программы.</summary>
      <param name="Source">Строка, подлежащая сравнению.</param>
      <param name="Pattern">Строка, с которой сравнивается строка <paramref name="Source" />.</param>
      <param name="CompareOption">Перечисление <see cref="T:Microsoft.VisualBasic.CompareMethod" />, определяющее, используется ли текстовое сравнение. В случае <see cref="F:Microsoft.VisualBasic.CompareMethod.Text" /> данный метод использует текстовое сравнение, в случае <see cref="F:Microsoft.VisualBasic.CompareMethod.Binary" /> используется двоичное сравнение.</param>
      <returns>Значение <see langword="True" />, если строки совпали; в противном случае — значение <see langword="False" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LongType">
      <summary>Начиная с Visual Basic 2005 этот класс более не используется.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LongType.FromObject(System.Object)">
      <summary>Возвращает значение типа <see langword="Long" />, соответствующее заданному объекту.</summary>
      <param name="Value">Обязательный. Объект, преобразуемый в значение <see langword="Long" />.</param>
      <returns>Значение типа <see langword="Long" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LongType.FromString(System.String)">
      <summary>Возвращает значение типа <see langword="Long" />, соответствующее заданной строке.</summary>
      <param name="Value">Обязательный. Строка, преобразуемая в значение <see langword="Long" />.</param>
      <returns>Значение типа <see langword="Long" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.NewLateBinding">
      <summary>Этот класс предлагает вспомогательные средства, используемые компилятором Visual Basic для вызовов с поздней привязкой, и не предназначен для вызова непосредственно из программы.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackCall(System.Object,System.String,System.Object[],System.String[],System.Boolean)">
      <summary>Выполняет вызов метода или функции с поздней привязкой. Данный вспомогательный метод не предназначен для вызова непосредственно из программы.</summary>
      <param name="Instance">Экземпляр объекта вызова, к которому относится данное свойство или метод.</param>
      <param name="MemberName">Имя свойства или метода объекта вызова.</param>
      <param name="Arguments">Массив аргументов, которые передаются в вызываемый метод или свойство.</param>
      <param name="ArgumentNames">Массив имен аргументов.</param>
      <param name="IgnoreReturn">Значение типа <see langword="Boolean" />, которое указывает, можно ли игнорировать возвращаемое значение.</param>
      <returns>Экземпляр объекта вызова.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackGet(System.Object,System.String,System.Object[],System.String[])">
      <summary>Выполняет вызов с поздней привязкой для получения свойства или доступа к полю. Данный вспомогательный метод не предназначен для вызова непосредственно из программы.</summary>
      <param name="Instance">Экземпляр объекта вызова, к которому относится данное свойство или метод.</param>
      <param name="MemberName">Имя свойства или метода объекта вызова.</param>
      <param name="Arguments">Массив аргументов, которые передаются в вызываемый метод или свойство.</param>
      <param name="ArgumentNames">Массив имен аргументов.</param>
      <returns>Экземпляр объекта вызова.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackIndexSet(System.Object,System.Object[],System.String[])">
      <summary>Выполняет вызов с поздней привязкой для установки свойства или записи в поле. Данный вспомогательный метод не предназначен для вызова непосредственно из программы.</summary>
      <param name="Instance">Экземпляр объекта вызова, к которому относится данное свойство или метод.</param>
      <param name="Arguments">Массив аргументов, которые передаются в вызываемый метод или свойство.</param>
      <param name="ArgumentNames">Массив имен аргументов.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary>Выполняет вызов с поздней привязкой для установки свойства или записи в поле. Данный вспомогательный метод не предназначен для вызова непосредственно из программы.</summary>
      <param name="Instance">Экземпляр объекта вызова, к которому относится данное свойство или метод.</param>
      <param name="Arguments">Массив аргументов, которые передаются в вызываемый метод или свойство.</param>
      <param name="ArgumentNames">Массив имен аргументов.</param>
      <param name="OptimisticSet">Значение типа <see langword="Boolean" />, которое определяет, будет ли работать операция установки. Задайте значение <see langword="True" />, если полагаете, что в свойстве или поле установлено промежуточное значение; в противном случае задайте <see langword="False" />.</param>
      <param name="RValueBase">Значение типа <see langword="Boolean" />, указывающее, что базовая ссылка для поздней ссылки представляет собой <see langword="RValue" />. Задайте <see langword="True" />, если базовая ссылка для поздней ссылки представляет собой <see langword="RValue" />; это позволит генерировать исключение во время выполнения для поздних присваиваний значений полям, содержащим <see langword="RValues" /> для типов значений. В противном случае задайте <see langword="False" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackInvokeDefault1(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary>Выполняет получение с поздней привязкой свойства или поля по умолчанию или вызов метода или функции по умолчанию. Данный вспомогательный метод не предназначен для вызова непосредственно из программы.</summary>
      <param name="Instance">Экземпляр объекта вызова, к которому относится данное свойство или метод. Если параметр <paramref name="Instance" /> принадлежит типу <see cref="T:System.Dynamic.IDynamicMetaObjectProvider" />, выполните привязку с помощью среды DLR; в противном случае выполните стандартную позднюю привязку.</param>
      <param name="Arguments">Массив аргументов, которые передаются в вызываемый метод или свойство.</param>
      <param name="ArgumentNames">Массив имен аргументов.</param>
      <param name="ReportErrors">Значение типа <see langword="Boolean" />, которое указывает, следует ли создавать исключения при обнаружении ошибки. Установите значение <see langword="True" /> для создания исключений. Установите значение <see langword="False" />, чтобы возвращать значение <see langword="Nothing" /> в случае обнаружения ошибки.</param>
      <returns>Экземпляр объекта вызова.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackInvokeDefault2(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary>Выполняет получение с поздней привязкой свойства или поля по умолчанию или вызов метода или функции по умолчанию. Данный вспомогательный метод не предназначен для вызова непосредственно из программы.</summary>
      <param name="Instance">Экземпляр объекта вызова, к которому относится данное свойство или метод.</param>
      <param name="Arguments">Массив аргументов, которые передаются в вызываемый метод или свойство.</param>
      <param name="ArgumentNames">Массив имен аргументов.</param>
      <param name="ReportErrors">Значение типа <see langword="Boolean" />, которое указывает, следует ли создавать исключения при обнаружении ошибки. Установите значение <see langword="True" /> для создания исключений. Установите значение <see langword="False" />, чтобы возвращать значение <see langword="Nothing" /> в случае обнаружения ошибки.</param>
      <returns>Экземпляр объекта вызова.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackSet(System.Object,System.String,System.Object[])">
      <summary>Выполняет вызов с поздней привязкой для установки свойства или записи в поле. Данный вспомогательный метод не предназначен для вызова непосредственно из программы.</summary>
      <param name="Instance">Экземпляр объекта вызова, к которому относится данное свойство или метод.</param>
      <param name="MemberName">Имя свойства или метода объекта вызова.</param>
      <param name="Arguments">Массив аргументов, которые передаются в вызываемый метод или свойство.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackSetComplex(System.Object,System.String,System.Object[],System.Boolean,System.Boolean)">
      <summary>Выполняет вызов с поздней привязкой для установки свойства или записи в поле. Данный вспомогательный метод не предназначен для вызова непосредственно из программы.</summary>
      <param name="Instance">Экземпляр объекта вызова, к которому относится данное свойство или метод.</param>
      <param name="MemberName">Имя свойства или метода объекта вызова.</param>
      <param name="Arguments">Массив аргументов, которые передаются в вызываемый метод или свойство.</param>
      <param name="OptimisticSet">Значение типа <see langword="Boolean" />, которое определяет, будет ли работать операция установки. Задайте значение <see langword="True" />, если полагаете, что в свойстве или поле установлено промежуточное значение; в противном случае задайте <see langword="False" />.</param>
      <param name="RValueBase">Значение типа <see langword="Boolean" />, указывающее, что базовая ссылка для поздней ссылки представляет собой <see langword="RValue" />. Задайте <see langword="True" />, если базовая ссылка для поздней ссылки представляет собой <see langword="RValue" />; это позволит генерировать исключение во время выполнения для поздних присваиваний значений полям, содержащим <see langword="RValues" /> для типов значений. В противном случае задайте <see langword="False" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[],System.Boolean)">
      <summary>Выполняет вызов метода или функции с поздней привязкой. Данный вспомогательный метод не предназначен для вызова непосредственно из программы.</summary>
      <param name="Instance">Экземпляр объекта вызова, к которому относится данное свойство или метод.</param>
      <param name="Type">Тип объекта вызова.</param>
      <param name="MemberName">Имя свойства или метода объекта вызова.</param>
      <param name="Arguments">Массив аргументов, которые передаются в вызываемый метод или свойство.</param>
      <param name="ArgumentNames">Массив имен аргументов.</param>
      <param name="TypeArguments">Массив типов аргументов; используется только в универсальных вызовах для передачи типов аргументов.</param>
      <param name="CopyBack">Массив значений типа <see langword="Boolean" />, которые используются при поздней привязке для информирования веб-сайта вызова о том, какие аргументы совпадают с параметрами, передаваемыми методом <see langword="ByRef" />. Каждое значение <see langword="True" /> указывает, что аргумент совпал с параметром и должен быть скопирован обратно после завершения вызова метода <see langword="LateCall" />.</param>
      <param name="IgnoreReturn">Значение типа <see langword="Boolean" />, которое указывает, можно ли игнорировать возвращаемое значение.</param>
      <returns>Экземпляр объекта вызова.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCallInvokeDefault(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary>Выполняет вызов метода или функции по умолчанию с поздней привязкой. Данный вспомогательный метод не предназначен для вызова непосредственно из программы.</summary>
      <param name="Instance">Экземпляр объекта вызова, к которому относится данное свойство или метод.</param>
      <param name="Arguments">Массив аргументов, которые передаются в вызываемый метод или свойство.</param>
      <param name="ArgumentNames">Массив имен аргументов.</param>
      <param name="ReportErrors">Значение типа <see langword="Boolean" />, которое указывает, следует ли создавать исключения при обнаружении ошибки. Установите значение <see langword="True" /> для создания исключений. Установите значение <see langword="False" />, чтобы возвращать значение <see langword="Nothing" /> в случае обнаружения ошибки.</param>
      <returns>Экземпляр объекта вызова.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[])">
      <summary>Выполняет вызов с поздней привязкой для получения свойства или доступа к полю. Данный вспомогательный метод не предназначен для вызова непосредственно из программы.</summary>
      <param name="Instance">Экземпляр объекта вызова, к которому относится данное свойство или метод.</param>
      <param name="Type">Тип объекта вызова.</param>
      <param name="MemberName">Имя свойства или метода объекта вызова.</param>
      <param name="Arguments">Массив аргументов, которые передаются в вызываемый метод или свойство.</param>
      <param name="ArgumentNames">Массив имен аргументов.</param>
      <param name="TypeArguments">Массив типов аргументов; используется только в универсальных вызовах для передачи типов аргументов.</param>
      <param name="CopyBack">Массив значений типа <see langword="Boolean" />, которые используются при поздней привязке для информирования веб-сайта вызова о том, какие аргументы совпадают с параметрами, передаваемыми методом <see langword="ByRef" />. Каждое значение <see langword="True" /> указывает, что аргумент совпал с параметром и должен быть скопирован обратно после завершения вызова метода <see langword="LateCall" />.</param>
      <returns>Экземпляр объекта вызова.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGetInvokeDefault(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary>Выполняет получение свойства или поля по умолчанию с поздней привязкой. Данный вспомогательный метод не предназначен для вызова непосредственно из программы.</summary>
      <param name="Instance">Экземпляр объекта вызова, к которому относится данное свойство или метод.</param>
      <param name="Arguments">Массив аргументов, которые передаются в вызываемый метод или свойство.</param>
      <param name="ArgumentNames">Массив имен аргументов.</param>
      <param name="ReportErrors">Значение типа <see langword="Boolean" />, которое указывает, следует ли создавать исключения при обнаружении ошибки. Установите значение <see langword="True" /> для создания исключений. Установите значение <see langword="False" />, чтобы возвращать значение <see langword="Nothing" /> в случае обнаружения ошибки.</param>
      <returns>Экземпляр объекта вызова.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexGet(System.Object,System.Object[],System.String[])">
      <summary>Выполняет вызов с поздней привязкой для получения свойства или доступа к полю. Данный вспомогательный метод не предназначен для вызова непосредственно из программы.</summary>
      <param name="Instance">Экземпляр объекта вызова, к которому относится данное свойство или метод.</param>
      <param name="Arguments">Массив аргументов, которые передаются в вызываемый метод или свойство.</param>
      <param name="ArgumentNames">Массив имен аргументов.</param>
      <returns>Экземпляр объекта вызова.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSet(System.Object,System.Object[],System.String[])">
      <summary>Выполняет вызов с поздней привязкой для установки свойства или записи в поле. Данный вспомогательный метод не предназначен для вызова непосредственно из программы.</summary>
      <param name="Instance">Экземпляр объекта вызова, к которому относится данное свойство или метод.</param>
      <param name="Arguments">Массив аргументов, которые передаются в вызываемый метод или свойство.</param>
      <param name="ArgumentNames">Массив имен аргументов.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary>Выполняет вызов с поздней привязкой для установки свойства или записи в поле. Данный вспомогательный метод не предназначен для вызова непосредственно из программы.</summary>
      <param name="Instance">Экземпляр объекта вызова, к которому относится данное свойство или метод.</param>
      <param name="Arguments">Массив аргументов, которые передаются в вызываемый метод или свойство.</param>
      <param name="ArgumentNames">Массив имен аргументов.</param>
      <param name="OptimisticSet">Значение типа <see langword="Boolean" />, которое определяет, будет ли работать операция установки. Задайте значение <see langword="True" />, если полагаете, что в свойстве или поле установлено промежуточное значение; в противном случае задайте <see langword="False" />.</param>
      <param name="RValueBase">Значение типа <see langword="Boolean" />, указывающее, что базовая ссылка для поздней ссылки представляет собой <see langword="RValue" />. Задайте <see langword="True" />, если базовая ссылка для поздней ссылки представляет собой <see langword="RValue" />; это позволит генерировать исключение во время выполнения для поздних присваиваний значений полям, содержащим <see langword="RValues" /> для типов значений. В противном случае задайте <see langword="False" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[])">
      <summary>Выполняет вызов с поздней привязкой для установки свойства или записи в поле. Данный вспомогательный метод не предназначен для вызова непосредственно из программы.</summary>
      <param name="Instance">Экземпляр объекта вызова, к которому относится данное свойство или метод.</param>
      <param name="Type">Тип объекта вызова.</param>
      <param name="MemberName">Имя свойства или метода объекта вызова.</param>
      <param name="Arguments">Массив аргументов, которые передаются в вызываемый метод или свойство.</param>
      <param name="ArgumentNames">Массив имен аргументов.</param>
      <param name="TypeArguments">Массив типов аргументов; используется только в универсальных вызовах для передачи типов аргументов.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean,Microsoft.VisualBasic.CallType)">
      <summary>Выполняет вызов с поздней привязкой для установки свойства или записи в поле. Данный вспомогательный метод не предназначен для вызова непосредственно из программы.</summary>
      <param name="Instance">Экземпляр объекта вызова, к которому относится данное свойство или метод.</param>
      <param name="Type">Тип объекта вызова.</param>
      <param name="MemberName">Имя свойства или метода объекта вызова.</param>
      <param name="Arguments">Массив аргументов, которые передаются в вызываемый метод или свойство.</param>
      <param name="ArgumentNames">Массив имен аргументов.</param>
      <param name="TypeArguments">Массив типов аргументов; используется только в универсальных вызовах для передачи типов аргументов.</param>
      <param name="OptimisticSet">Значение типа <see langword="Boolean" />, которое определяет, будет ли работать операция установки. Задайте значение <see langword="True" />, если полагаете, что в свойстве или поле установлено промежуточное значение; в противном случае задайте <see langword="False" />.</param>
      <param name="RValueBase">Значение типа <see langword="Boolean" />, указывающее, что базовая ссылка для поздней ссылки представляет собой <see langword="RValue" />. Задайте <see langword="True" />, если базовая ссылка для поздней ссылки представляет собой <see langword="RValue" />; это позволит генерировать исключение во время выполнения для поздних присваиваний значений полям, содержащим <see langword="RValues" /> для типов значений. В противном случае задайте <see langword="False" />.</param>
      <param name="CallType">Член перечисления типа <see cref="T:Microsoft.VisualBasic.CallType" />, представляющий тип вызываемой процедуры. Значением CallType может быть <see langword="Method" />, <see langword="Get" /> или <see langword="Set" />. Используется только <see langword="Set" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean)">
      <summary>Выполняет вызов с поздней привязкой для установки свойства или записи в поле. Данный вспомогательный метод не предназначен для вызова непосредственно из программы.</summary>
      <param name="Instance">Экземпляр объекта вызова, к которому относится данное свойство или метод.</param>
      <param name="Type">Тип объекта вызова.</param>
      <param name="MemberName">Имя свойства или метода объекта вызова.</param>
      <param name="Arguments">Массив аргументов, которые передаются в вызываемый метод или свойство.</param>
      <param name="ArgumentNames">Массив имен аргументов.</param>
      <param name="TypeArguments">Массив типов аргументов; используется только в универсальных вызовах для передачи типов аргументов.</param>
      <param name="OptimisticSet">Значение типа <see langword="Boolean" />, которое определяет, будет ли работать операция установки. Задайте значение <see langword="True" />, если полагаете, что в свойстве или поле установлено промежуточное значение; в противном случае задайте <see langword="False" />.</param>
      <param name="RValueBase">Значение типа <see langword="Boolean" />, указывающее, что базовая ссылка для поздней ссылки представляет собой <see langword="RValue" />. Задайте <see langword="True" />, если базовая ссылка для поздней ссылки представляет собой <see langword="RValue" />; это позволит генерировать исключение во время выполнения для поздних присваиваний значений полям, содержащим <see langword="RValues" /> для типов значений. В противном случае задайте <see langword="False" />.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl">
      <summary>Этот класс используется компилятором Visual Basic для управления потоком объектов и не предназначен для вызова непосредственно из программы.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.CheckForSyncLockOnValueType(System.Object)">
      <summary>Проверяет блокировку синхронизации для указанного типа.</summary>
      <param name="Expression">Тип данных, для которого проверяется блокировка синхронизации.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl">
      <summary>Содержит службы, используемые компилятором Visual Basic для компиляции циклов <see langword="For...Next" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForLoopInitObj(System.Object,System.Object,System.Object,System.Object,System.Object@,System.Object@)">
      <summary>Инициализирует цикл <see langword="For...Next" />.</summary>
      <param name="Counter">Переменная счетчика цикла.</param>
      <param name="Start">Начальное значение счетчика цикла.</param>
      <param name="Limit">Значение параметра <see langword="To" />.</param>
      <param name="StepValue">Значение параметра <see langword="Step" />.</param>
      <param name="LoopForResult">Объект, содержащий проверенные значения параметров цикла.</param>
      <param name="CounterResult">Значение счетчика для следующей итерации цикла.</param>
      <returns>
        <see langword="False" />, если цикл прерван; в противном случае <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckDec(System.Decimal,System.Decimal,System.Decimal)">
      <summary>Проверяет допустимые значения для счетчика цикла, шага <see langword="Step" /> и параметра <see langword="To" />.</summary>
      <param name="count">Обязательный. Значение типа <see langword="Decimal" />, представляющее начальное значение, передаваемое для переменной счетчика цикла.</param>
      <param name="limit">Обязательный. Значение типа <see langword="Decimal" />, представляющее значение, передаваемое с использованием ключевого слова <see langword="To" />.</param>
      <param name="StepValue">Обязательный. Значение типа <see langword="Decimal" />, представляющее значение, передаваемое с использованием ключевого слова <see langword="Step" />.</param>
      <returns>
        <see langword="True" />, если <paramref name="StepValue" /> больше нуля и <paramref name="count" /> меньше или равно <paramref name="limit" />, или если <paramref name="StepValue" /> меньше или равно нулю и <paramref name="count" /> больше или равно <paramref name="limit" />; в противном случае <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckObj(System.Object,System.Object,System.Object@)">
      <summary>Производит переход к следующей итерации цикла <see langword="For...Next" />.</summary>
      <param name="Counter">Переменная счетчика цикла.</param>
      <param name="LoopObj">Объект, содержащий проверенные значения параметров цикла.</param>
      <param name="CounterResult">Значение счетчика для следующей итерации цикла.</param>
      <returns>
        <see langword="False" />, если цикл прерван; в противном случае <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckR4(System.Single,System.Single,System.Single)">
      <summary>Проверяет допустимые значения для счетчика цикла, шага <see langword="Step" /> и параметра <see langword="To" />.</summary>
      <param name="count">Обязательный. Значение типа <see cref="T:System.Single" />, представляющее начальное значение, передаваемое для переменной счетчика цикла.</param>
      <param name="limit">Обязательный. Значение типа <see cref="T:System.Single" />, представляющее значение, передаваемое с использованием ключевого слова <see langword="To" />.</param>
      <param name="StepValue">Обязательный. Значение типа <see cref="T:System.Single" />, представляющее значение, передаваемое с использованием ключевого слова <see langword="Step" />.</param>
      <returns>
        <see langword="True" />, если <paramref name="StepValue" /> больше нуля и <paramref name="count" /> меньше или равно <paramref name="limit" />, или если <paramref name="StepValue" /> меньше или равно нулю и <paramref name="count" /> больше или равно <paramref name="limit" />; в противном случае <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckR8(System.Double,System.Double,System.Double)">
      <summary>Проверяет допустимые значения для счетчика цикла, шага <see langword="Step" /> и параметра <see langword="To" />.</summary>
      <param name="count">Обязательный. Значение типа <see cref="T:System.Double" />, представляющее начальное значение, передаваемое для переменной счетчика цикла.</param>
      <param name="limit">Обязательный. Значение типа <see cref="T:System.Double" />, представляющее значение, передаваемое с использованием ключевого слова <see langword="To" />.</param>
      <param name="StepValue">Обязательный. Значение типа <see cref="T:System.Double" />, представляющее значение, передаваемое с использованием ключевого слова <see langword="Step" />.</param>
      <returns>
        <see langword="True" />, если <paramref name="StepValue" /> больше нуля и <paramref name="count" /> меньше или равно <paramref name="limit" />, или если <paramref name="StepValue" /> меньше или равно нулю и <paramref name="count" /> больше или равно <paramref name="limit" />; в противном случае <see langword="False" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectType">
      <summary>Начиная с Visual Basic 2005 этот класс более не используется.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.CompilerServices.ObjectType" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(System.Object,System.Object)">
      <summary>Выполняет операцию сложения (+).</summary>
      <param name="o1">Обязательный. Произвольное числовое выражение.</param>
      <param name="o2">Обязательный. Произвольное числовое выражение.</param>
      <returns>Сумма <paramref name="o1" /> и <paramref name="o2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(System.Object,System.Object)">
      <summary>Выполняет битовую операцию <see langword="And" />.</summary>
      <param name="obj1">Обязательный. Произвольное выражение типа <see langword="Boolean" /> или числового типа.</param>
      <param name="obj2">Обязательный. Произвольное выражение типа <see langword="Boolean" /> или числового типа.</param>
      <returns>1, если оба выражения <paramref name="obj1" /> и <paramref name="obj2" /> равны 1; в противном случае 0.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(System.Object,System.Object)">
      <summary>Выполняет битовую операцию <see langword="Or" />.</summary>
      <param name="obj1">Обязательный. Произвольное выражение типа <see langword="Boolean" /> или числового типа.</param>
      <param name="obj2">Обязательный. Произвольное выражение типа <see langword="Boolean" /> или числового типа.</param>
      <returns>0, если оба выражения <paramref name="obj1" /> и <paramref name="obj2" /> равны 0; в противном случае 1.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(System.Object,System.Object)">
      <summary>Выполняет операцию <see langword="Xor" />.</summary>
      <param name="obj1">Обязательный. Произвольное выражение типа <see langword="Boolean" /> или числового типа.</param>
      <param name="obj2">Обязательный. Произвольное выражение типа <see langword="Boolean" /> или числового типа.</param>
      <returns>Числовое значение, являющееся результатом применения битовой операции "исключающее ИЛИ" (поразрядной исключающей дизъюнкции) к двум битовым шаблонам чисел. Дополнительные сведения см. в статье Оператор Xor.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(System.Object,System.Object)">
      <summary>Выполняет операцию деления (/).</summary>
      <param name="o1">Обязательный. Произвольное числовое выражение.</param>
      <param name="o2">Обязательный. Произвольное числовое выражение.</param>
      <returns>Полное частное от деления <paramref name="o1" /> на <paramref name="o2" />, включая остаток, если он имеется.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(System.Object)">
      <summary>Возвращает упакованное примитивное значение. Этот метод используется с целью избежать многократного копирования структур.</summary>
      <param name="o">Обязательный. Любое выражение.</param>
      <returns>Примитивное значение параметра <paramref name="o" />, тип которого определен как объект.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(System.Object,System.Object)">
      <summary>Выполняет операцию деления нацело (\).</summary>
      <param name="o1">Обязательный. Произвольное числовое выражение.</param>
      <param name="o2">Обязательный. Произвольное числовое выражение.</param>
      <returns>Целочисленное частное от деления <paramref name="o1" /> на <paramref name="o2" />, при котором остаток отбрасывается и возвращается только целая часть результата.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
      <summary>Выполняет сравнение <see langword="Like" />.</summary>
      <param name="vLeft">Обязательный. Любое выражение.</param>
      <param name="vRight">Обязательный. Произвольное строковое выражение, которое отвечает правилам сопоставления с шаблоном, описанным в разделе, посвященном оператору Like.</param>
      <param name="CompareOption">Обязательный. Значение <see cref="T:Microsoft.VisualBasic.CompareMethod" />, указывающее, что в операции используется либо текстовое, либо двоичное сравнение.</param>
      <returns>Значение <see langword="True" />, если строковое представление значения в <paramref name="vLeft" /> соответствует шаблону, заданному выражением <paramref name="vRight" />; в противном случае — значение <see langword="False" />. Значение <see langword="True" /> если оба выражения <paramref name="vLeft" /> и <paramref name="vRight" /> имеют значение <see langword="Nothing" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(System.Object,System.Object)">
      <summary>Выполняет операцию взятия по модулю (<see langword="Mod" />).</summary>
      <param name="o1">Обязательный. Произвольное числовое выражение.</param>
      <param name="o2">Обязательный. Произвольное числовое выражение.</param>
      <returns>Остаток от деления <paramref name="o1" /> на <paramref name="o2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(System.Object,System.Object)">
      <summary>Выполняет операцию умножения (*).</summary>
      <param name="o1">Обязательный. Произвольное числовое выражение.</param>
      <param name="o2">Обязательный. Произвольное числовое выражение.</param>
      <returns>Произведение <paramref name="o1" /> на <paramref name="o2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(System.Object)">
      <summary>Выполняет операцию "унарный минус" (-).</summary>
      <param name="obj">Обязательный. Произвольное числовое выражение.</param>
      <returns>Отрицательное значение параметра <paramref name="obj" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(System.Object)">
      <summary>Выполняет операцию <see langword="Not" />.</summary>
      <param name="obj">Обязательный. Произвольное выражение типа <see langword="Boolean" /> или числового типа.</param>
      <returns>Для операций типа <see langword="Boolean" />: <see langword="False" />, если <paramref name="obj" /> имеет значение <see langword="True" />, в противном случае <see langword="True" />. Для битовых операций: 1, если <paramref name="obj" /> равняется 0, в противном случае 0.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(System.Object,System.Object,System.Boolean)">
      <summary>Выполняет двоичное или текстовое сравнение строк для двух заданных объектов.</summary>
      <param name="o1">Обязательный. Любое выражение.</param>
      <param name="o2">Обязательный. Любое выражение.</param>
      <param name="TextCompare">Обязательный. Значение <see langword="True" />, чтобы сравнивать строки без учета регистра символов; в противном случае — значение <see langword="False" />.</param>
      <returns>
        <list type="table">
          <listheader>
            <term> Значение</term>
            <description> Условие</description>
          </listheader>
          <item>
            <term> -1</term>
            <description>Значение 
                <paramref name="o1" /> меньше <paramref name="o2" />.</description>
          </item>
          <item>
            <term> 0</term>
            <description>
              <paramref name="o1" /> равно <paramref name="o2" />.</description>
          </item>
          <item>
            <term> 1</term>
            <description>Значение 
                <paramref name="o1" /> больше значения <paramref name="o2" />.</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(System.Object)">
      <summary>Выполняет операцию "унарный плюс" (+).</summary>
      <param name="obj">Обязательный. Произвольное числовое выражение.</param>
      <returns>Значение <paramref name="obj" />. (Знак <paramref name="obj" /> не изменяется.)</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(System.Object,System.Object)">
      <summary>Выполняет операцию возведения в степень (^).</summary>
      <param name="obj1">Обязательный. Произвольное числовое выражение.</param>
      <param name="obj2">Обязательный. Произвольное числовое выражение.</param>
      <returns>Результат возведения <paramref name="obj1" /> в степень <paramref name="obj2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(System.Object,System.Int32)">
      <summary>Выполняет арифметическое смещение влево (&lt;&lt;).</summary>
      <param name="o1">Обязательный. Целое числовое выражение. Битовый шаблон, подлежащий сдвигу. Данные должны быть целого типа (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> или <see langword="ULong" />).</param>
      <param name="amount">Обязательный. Числовое выражение. Количество разрядов, на которое следует сдвинуть битовый шаблон. Данные должны относиться к типу <see langword="Integer" /> или допускать расширение до типа <see langword="Integer" />.</param>
      <returns>Целое числовое значение. Результат сдвига битового шаблона. Тип данных такой же, как для <paramref name="o1" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(System.Object,System.Int32)">
      <summary>Выполняет арифметическое смещение вправо (&gt;&gt;).</summary>
      <param name="o1">Обязательный. Целое числовое выражение. Битовый шаблон, подлежащий сдвигу. Данные должны быть целого типа (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> или <see langword="ULong" />).</param>
      <param name="amount">Обязательный. Числовое выражение. Количество разрядов, на которое следует сдвинуть битовый шаблон. Данные должны относиться к типу <see langword="Integer" /> или допускать расширение до типа <see langword="Integer" />.</param>
      <returns>Целое числовое значение. Результат сдвига битового шаблона. Тип данных такой же, как для <paramref name="o1" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(System.Object,System.Object)">
      <summary>Выполняет операцию объединения строк (&amp;).</summary>
      <param name="vLeft">Обязательный. Любое выражение.</param>
      <param name="vRight">Обязательный. Любое выражение.</param>
      <returns>Строка, представляющая результат объединения <paramref name="vLeft" /> и <paramref name="vRight" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(System.Object,System.Object)">
      <summary>Выполняет операцию вычитания (-).</summary>
      <param name="o1">Обязательный. Произвольное числовое выражение.</param>
      <param name="o2">Обязательный. Произвольное числовое выражение.</param>
      <returns>Разность между <paramref name="o1" /> и <paramref name="o2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(System.Object,System.Object)">
      <summary>Выполняет сравнение <see langword="Xor" />.</summary>
      <param name="obj1">Обязательный. Произвольное выражение типа <see langword="Boolean" /> или числового типа.</param>
      <param name="obj2">Обязательный. Произвольное выражение типа <see langword="Boolean" /> или числового типа.</param>
      <returns>Значение типа <see langword="Boolean" /> или числовое значение. При сравнении типа <see langword="Boolean" /> возвращается результат применения логической операции "исключающее ИЛИ" (логической исключающей дизъюнкции) к двум значениям <see langword="Boolean" />. В случае битовых (числовых) операций возвращается числовое значение, являющееся результатом применения битовой операции "исключающее ИЛИ" (поразрядной исключающей дизъюнкции) к двум битовым шаблонам чисел. Дополнительные сведения см. в статье Оператор Xor.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Operators">
      <summary>Содержит математические операторы с поздней привязкой, такие как <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> и <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, которые используются компилятором Visual Basic для внутренних целей.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)">
      <summary>Представляет оператор сложения (+) языка Visual Basic.</summary>
      <param name="Left">Обязательный. Произвольное числовое выражение.</param>
      <param name="Right">Обязательный. Произвольное числовое выражение.</param>
      <returns>Сумма <paramref name="Left" /> и <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)">
      <summary>Представляет оператор <see langword="And" /> языка Visual Basic.</summary>
      <param name="Left">Обязательный. Произвольное выражение типа <see langword="Boolean" /> или числового типа.</param>
      <param name="Right">Обязательный. Произвольное выражение типа <see langword="Boolean" /> или числового типа.</param>
      <returns>Для операций типа <see langword="Boolean" />: <see langword="True" />, если <paramref name="Left" /> и <paramref name="Right" /> имеют значение <see langword="True" />, в противном случае <see langword="False" />. Для битовых операций: 1, если <paramref name="Left" /> и <paramref name="Right" /> имеют значение 1, в противном случае 0.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)">
      <summary>Представляет оператор равенства (=) языка Visual Basic.</summary>
      <param name="Left">Обязательный. Любое выражение.</param>
      <param name="Right">Обязательный. Любое выражение.</param>
      <param name="TextCompare">Обязательный. Значение <see langword="True" />, чтобы сравнивать строки без учета регистра символов; в противном случае — значение <see langword="False" />.</param>
      <returns>Значение <see langword="True" />, если <paramref name="Left" /> и <paramref name="Right" /> равны; в противном случае — значение <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)">
      <summary>Представляет оператор "больше чем" (&gt;) языка Visual Basic.</summary>
      <param name="Left">Обязательный. Любое выражение.</param>
      <param name="Right">Обязательный. Любое выражение.</param>
      <param name="TextCompare">Обязательный. Значение <see langword="True" />, чтобы сравнивать строки без учета регистра символов; в противном случае — значение <see langword="False" />.</param>
      <returns>Значение <see langword="True" />, если <paramref name="Left" /> больше <paramref name="Right" />; в противном случае — значение <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
      <summary>Представляет оператор "больше или равно" (&gt;=) языка Visual Basic.</summary>
      <param name="Left">Обязательный. Любое выражение.</param>
      <param name="Right">Обязательный. Любое выражение.</param>
      <param name="TextCompare">Обязательный. Значение <see langword="True" />, чтобы сравнивать строки без учета регистра символов; в противном случае — значение <see langword="False" />.</param>
      <returns>Значение <see langword="True" />, если значение <paramref name="Left" /> больше или равно <paramref name="Right" />; в противном случае — значение <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)">
      <summary>Представляет оператор "меньше чем" (&lt;) языка Visual Basic.</summary>
      <param name="Left">Обязательный. Любое выражение.</param>
      <param name="Right">Обязательный. Любое выражение.</param>
      <param name="TextCompare">Обязательный. Значение <see langword="True" />, чтобы сравнивать строки без учета регистра символов; в противном случае — значение <see langword="False" />.</param>
      <returns>Значение <see langword="True" />, если значение <paramref name="Left" /> меньше <paramref name="Right" />; в противном случае — значение <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
      <summary>Представляет оператор "меньше или равно" (&lt;) языка Visual Basic.</summary>
      <param name="Left">Обязательный. Любое выражение.</param>
      <param name="Right">Обязательный. Любое выражение.</param>
      <param name="TextCompare">Обязательный. Значение <see langword="True" />, чтобы сравнивать строки без учета регистра символов; в противном случае — значение <see langword="False" />.</param>
      <returns>Значение <see langword="True" />, если значение <paramref name="Left" /> меньше или равно <paramref name="Right" />; в противном случае — значение <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
      <summary>Представляет оператор неравенства (&lt;&gt;) языка Visual Basic.</summary>
      <param name="Left">Обязательный. Любое выражение.</param>
      <param name="Right">Обязательный. Любое выражение.</param>
      <param name="TextCompare">Обязательный. Значение <see langword="True" />, чтобы сравнивать строки без учета регистра символов; в противном случае — значение <see langword="False" />.</param>
      <returns>
        <see langword="True" />, если значения <paramref name="Left" /> и <paramref name="Right" /> не равны; в противном случае — <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)">
      <summary>Выполняет двоичное или текстовое сравнение двух заданных строк.</summary>
      <param name="Left">Обязательный. Произвольное выражение <see langword="String" /> .</param>
      <param name="Right">Обязательный. Произвольное выражение <see langword="String" /> .</param>
      <param name="TextCompare">Обязательный. Значение <see langword="True" />, чтобы сравнивать строки без учета регистра символов; в противном случае — значение <see langword="False" />.</param>
      <returns>
        <list type="table">
          <listheader>
            <term> Значение</term>
            <description> Условие</description>
          </listheader>
          <item>
            <term> -1</term>
            <description>Значение 
                <paramref name="Left" /> меньше <paramref name="Right" />.</description>
          </item>
          <item>
            <term> 0</term>
            <description>
              <paramref name="Left" /> равно <paramref name="Right" />.</description>
          </item>
          <item>
            <term> 1</term>
            <description>Значение 
                <paramref name="Left" /> больше значения <paramref name="Right" />.</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)">
      <summary>Представляет оператор объединения (&amp;) языка Visual Basic.</summary>
      <param name="Left">Обязательный. Любое выражение.</param>
      <param name="Right">Обязательный. Любое выражение.</param>
      <returns>Строка, представляющая результат объединения <paramref name="Left" /> и <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)">
      <summary>Представляет перегруженный оператор равенства (=) языка Visual Basic.</summary>
      <param name="Left">Обязательный. Любое выражение.</param>
      <param name="Right">Обязательный. Любое выражение.</param>
      <param name="TextCompare">Обязательный. Значение <see langword="True" />, чтобы сравнивать строки без учета регистра символов; в противном случае — значение <see langword="False" />.</param>
      <returns>Результат перегруженного оператора "равно". Значение <see langword="False" />, если перегрузка операторов не поддерживается.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)">
      <summary>Представляет перегруженный оператор "больше чем" (&gt;) языка Visual Basic.</summary>
      <param name="Left">Обязательный. Любое выражение.</param>
      <param name="Right">Обязательный. Любое выражение.</param>
      <param name="TextCompare">Обязательный. Значение <see langword="True" />, чтобы сравнивать строки без учета регистра символов; в противном случае — значение <see langword="False" />.</param>
      <returns>Результат перегруженного оператора "больше". Значение <see langword="False" />, если перегрузка операторов не поддерживается.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
      <summary>Представляет перегруженный оператор "больше или равно" (&gt;) языка Visual Basic.</summary>
      <param name="Left">Обязательный. Любое выражение.</param>
      <param name="Right">Обязательный. Любое выражение.</param>
      <param name="TextCompare">Обязательный. Значение <see langword="True" />, чтобы сравнивать строки без учета регистра символов; в противном случае — значение <see langword="False" />.</param>
      <returns>Результат перегруженного оператора "больше или равно". Значение <see langword="False" />, если перегрузка операторов не поддерживается.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)">
      <summary>Представляет перегруженный оператор "меньше чем" (&lt;) языка Visual Basic.</summary>
      <param name="Left">Обязательный. Любое выражение.</param>
      <param name="Right">Обязательный. Любое выражение.</param>
      <param name="TextCompare">Обязательный. Значение <see langword="True" />, чтобы сравнивать строки без учета регистра символов; в противном случае — значение <see langword="False" />.</param>
      <returns>Результат перегруженного оператора "меньше". Значение <see langword="False" />, если перегрузка операторов не поддерживается.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
      <summary>Представляет перегруженный оператор "меньше или равно" (&lt;) языка Visual Basic.</summary>
      <param name="Left">Обязательный. Любое выражение.</param>
      <param name="Right">Обязательный. Любое выражение.</param>
      <param name="TextCompare">Обязательный. Значение <see langword="True" />, чтобы сравнивать строки без учета регистра символов; в противном случае — значение <see langword="False" />.</param>
      <returns>Результат перегруженного оператора "меньше или равно". Значение <see langword="False" />, если перегрузка операторов не поддерживается.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
      <summary>Представляет перегруженный оператор неравенства (&lt;&gt;) языка Visual Basic.</summary>
      <param name="Left">Обязательный. Любое выражение.</param>
      <param name="Right">Обязательный. Любое выражение.</param>
      <param name="TextCompare">Обязательный. Значение <see langword="True" />, чтобы сравнивать строки без учета регистра символов; в противном случае — значение <see langword="False" />.</param>
      <returns>Результат перегруженного оператора "не равно". Значение <see langword="False" />, если перегрузка операторов не поддерживается.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)">
      <summary>Представляет оператор деления (/) языка Visual Basic.</summary>
      <param name="Left">Обязательный. Произвольное числовое выражение.</param>
      <param name="Right">Обязательный. Произвольное числовое выражение.</param>
      <returns>Полное частное от деления <paramref name="Left" /> на <paramref name="Right" />, включая остаток, если он имеется.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)">
      <summary>Представляет оператор возведения в степень (^) языка Visual Basic.</summary>
      <param name="Left">Обязательный. Произвольное числовое выражение.</param>
      <param name="Right">Обязательный. Произвольное числовое выражение.</param>
      <returns>Результат возведения <paramref name="Left" /> в степень <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])">
      <summary>Выполняет вычисление с поздней привязкой пользовательского оператора. Данный вспомогательный метод не предназначен для вызова непосредственно из программы.</summary>
      <param name="vbOp">Пользовательский оператор.</param>
      <param name="arguments" />
      <returns>Результат, возвращаемый пользовательским оператором.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)">
      <summary>Представляет оператор деления нацело (\) языка Visual Basic.</summary>
      <param name="Left">Обязательный. Произвольное числовое выражение.</param>
      <param name="Right">Обязательный. Произвольное числовое выражение.</param>
      <returns>Целочисленное частное от деления <paramref name="Left" /> на <paramref name="Right" />, при котором остаток отбрасывается и возвращается только целая часть результата.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)">
      <summary>Представляет оператор арифметического сдвига влево (&lt;&lt;) языка Visual Basic.</summary>
      <param name="Operand">Обязательный. Целое числовое выражение. Битовый шаблон, подлежащий сдвигу. Данные должны быть целого типа (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> или <see langword="ULong" />).</param>
      <param name="Amount">Обязательный. Числовое выражение. Количество разрядов, на которое следует сдвинуть битовый шаблон. Данные должны относиться к типу <see langword="Integer" /> или допускать расширение до типа <see langword="Integer" />.</param>
      <returns>Целое числовое значение. Результат сдвига битового шаблона. Тип данных такой же, как для <paramref name="Operand" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)">
      <summary>Представляет оператор <see langword="Mod" /> языка Visual Basic.</summary>
      <param name="Left">Обязательный. Произвольное числовое выражение.</param>
      <param name="Right">Обязательный. Произвольное числовое выражение.</param>
      <returns>Остаток от деления <paramref name="Left" /> на <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)">
      <summary>Представляет оператор умножения (*) языка Visual Basic.</summary>
      <param name="Left">Обязательный. Произвольное числовое выражение.</param>
      <param name="Right">Обязательный. Произвольное числовое выражение.</param>
      <returns>Произведение <paramref name="Left" /> на <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)">
      <summary>Представляет оператор "унарный минус" (-) языка Visual Basic.</summary>
      <param name="Operand">Обязательный. Произвольное числовое выражение.</param>
      <returns>Отрицательное значение параметра <paramref name="Operand" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)">
      <summary>Представляет оператор <see langword="Not" /> языка Visual Basic.</summary>
      <param name="Operand">Обязательный. Произвольное выражение типа <see langword="Boolean" /> или числового типа.</param>
      <returns>Для операций типа <see langword="Boolean" />: <see langword="False" />, если <paramref name="Operand" /> имеет значение <see langword="True" />, в противном случае <see langword="True" />. Для битовых операций: 1, если <paramref name="Operand" /> равняется 0, в противном случае 0.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)">
      <summary>Представляет оператор <see langword="Or" /> языка Visual Basic.</summary>
      <param name="Left">Обязательный. Произвольное выражение типа <see langword="Boolean" /> или числового типа.</param>
      <param name="Right">Обязательный. Произвольное выражение типа <see langword="Boolean" /> или числового типа.</param>
      <returns>Для операций типа <see langword="Boolean" />: <see langword="False" />, если <paramref name="Left" /> и <paramref name="Right" /> имеют значение <see langword="False" />, в противном случае <see langword="True" />. Для битовых операций: 0, если <paramref name="Left" /> и <paramref name="Right" /> имеют значение 0; в противном случае 1.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)">
      <summary>Представляет оператор "унарный плюс" (+) языка Visual Basic.</summary>
      <param name="Operand">Обязательный. Произвольное числовое выражение.</param>
      <returns>Значение <paramref name="Operand" />. (Знак <paramref name="Operand" /> не изменяется.)</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)">
      <summary>Представляет оператор арифметического сдвига вправо (&gt;&gt;) языка Visual Basic.</summary>
      <param name="Operand">Обязательный. Целое числовое выражение. Битовый шаблон, подлежащий сдвигу. Данные должны быть целого типа (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> или <see langword="ULong" />).</param>
      <param name="Amount">Обязательный. Числовое выражение. Количество разрядов, на которое следует сдвинуть битовый шаблон. Данные должны относиться к типу <see langword="Integer" /> или допускать расширение до типа <see langword="Integer" />.</param>
      <returns>Целое числовое значение. Результат сдвига битового шаблона. Тип данных такой же, как для <paramref name="Operand" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)">
      <summary>Представляет оператор вычитания (-) языка Visual Basic.</summary>
      <param name="Left">Обязательный. Произвольное числовое выражение.</param>
      <param name="Right">Обязательный. Произвольное числовое выражение.</param>
      <returns>Разность между <paramref name="Left" /> и <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)">
      <summary>Представляет оператор <see langword="Xor" /> языка Visual Basic.</summary>
      <param name="Left">Обязательный. Произвольное выражение типа <see langword="Boolean" /> или числового типа.</param>
      <param name="Right">Обязательный. Произвольное выражение типа <see langword="Boolean" /> или числового типа.</param>
      <returns>Значение типа <see langword="Boolean" /> или числовое значение. При сравнении типа <see langword="Boolean" /> возвращается результат применения логической операции "исключающее ИЛИ" (логической исключающей дизъюнкции) к двум значениям <see langword="Boolean" />. В случае битовых (числовых) операций возвращается числовое значение, являющееся результатом применения битовой операции "исключающее ИЛИ" (поразрядной исключающей дизъюнкции) к двум битовым шаблонам чисел. Дополнительные сведения см. в статье Оператор Xor.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute">
      <summary>Указывает, что текущее значение <see langword="Option Compare" /> должно быть передано в качестве значения по умолчанию для аргумента.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute">
      <summary>Этот вспомогательный класс генерируется компилятором Visual Basic, чтобы указать (отладчику Visual Basic), какой режим сравнения используется — двоичный или текстовый.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute" />. Это вспомогательный метод.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ProjectData">
      <summary>Содержит вспомогательные средства для объекта Visual Basic <see langword="Err" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.ClearProjectError">
      <summary>Выполняет действия, предусмотренные методом <see langword="Clear" /> объекта <see langword="Err" />. Вспомогательный метод.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.CreateProjectError(System.Int32)">
      <summary>Выполняет действия, предусмотренные методом <see langword="Raise" /> объекта <see langword="Err" />. Вспомогательный метод.</summary>
      <param name="hr">Целое число, обозначающее характер ошибки. Ошибки Visual Basic обозначаются числами в диапазоне 0-65535; диапазон 0-512 зарезервирован для системных ошибок; диапазон 513-65535 отводится для ошибок, определяемых пользователем.</param>
      <returns>Объект <see cref="T:System.Exception" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.EndApp">
      <summary>Закрывает все файлы для вызывающей сборки и прекращает процесс.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception)">
      <summary>Этот вспомогательный метод используется компилятором Visual Basic для записи сведений об исключениях в объект <see langword="Err" />.</summary>
      <param name="ex">Отслеживаемый объект <see cref="T:System.Exception" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception,System.Int32)">
      <summary>Этот вспомогательный метод используется компилятором Visual Basic для записи сведений об исключениях в объект <see langword="Err" />.</summary>
      <param name="ex">Отслеживаемый объект <see cref="T:System.Exception" />.</param>
      <param name="lErl">Номер строки исключения.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ShortType">
      <summary>Начиная с Visual Basic 2005 этот класс более не используется.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ShortType.FromObject(System.Object)">
      <summary>Возвращает значение типа <see langword="Short" />, соответствующее заданному объекту.</summary>
      <param name="Value">Обязательный. Объект, преобразуемый в значение <see langword="Short" />.</param>
      <returns>Значение типа <see langword="Short" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ShortType.FromString(System.String)">
      <summary>Возвращает значение типа <see langword="Short" />, соответствующее заданной строке.</summary>
      <param name="Value">Обязательный. Строка, преобразуемая в значение <see langword="Short" />.</param>
      <returns>Значение типа <see langword="Short" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.SingleType">
      <summary>Начиная с Visual Basic 2005 этот класс более не используется.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromObject(System.Object)">
      <summary>Возвращает значение типа <see cref="T:System.Single" />, соответствующее заданному объекту.</summary>
      <param name="Value">Обязательный. Объект, преобразуемый в значение <see cref="T:System.Single" />.</param>
      <returns>Значение типа <see cref="T:System.Single" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary>Возвращает значение типа <see cref="T:System.Single" />, соответствующее заданному объекту.</summary>
      <param name="Value">Обязательный. Объект, преобразуемый в значение <see cref="T:System.Single" />.</param>
      <param name="NumberFormat">Объект <see cref="T:System.Globalization.NumberFormatInfo" />, определяющий способ форматирования и отображения числовых значений с учетом языка и региональных параметров.</param>
      <returns>Значение типа <see cref="T:System.Single" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromString(System.String)">
      <summary>Возвращает значение типа <see cref="T:System.Single" />, соответствующее заданной строке.</summary>
      <param name="Value">Обязательный. Строка, преобразуемая в значение <see cref="T:System.Single" />.</param>
      <returns>Значение типа <see cref="T:System.Single" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary>Возвращает значение типа <see cref="T:System.Single" />, соответствующее заданной строке, и сведения о форматировании чисел.</summary>
      <param name="Value">Обязательный. Строка, преобразуемая в значение <see cref="T:System.Single" />.</param>
      <param name="NumberFormat">Объект <see cref="T:System.Globalization.NumberFormatInfo" />, определяющий способ форматирования и отображения числовых значений с учетом языка и региональных параметров.</param>
      <returns>Значение типа <see cref="T:System.Single" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute">
      <summary>Этот класс содержит атрибуты, которые применяются к конструкции стандартного модуля, передаваемой в промежуточный язык. Он не предназначен для вызова непосредственно из кода.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag">
      <summary>Этот класс используется компилятором Visual Basic для внутренних целей при инициализации статических локальных членов; он не предназначен для вызова непосредственно из программы.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.State">
      <summary>Возвращает состояние флага инициализации статического локального члена (инициализирован или нет).</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StringType">
      <summary>Начиная с Visual Basic 2005 этот класс более не используется.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean(System.Boolean)">
      <summary>Возвращает значение типа <see langword="String" />, соответствующее заданному значению типа <see langword="Boolean" />.</summary>
      <param name="Value">Обязательный. Значение <see langword="Boolean" /> для преобразования в значение <see langword="String" />.</param>
      <returns>Значение типа <see langword="String" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromByte(System.Byte)">
      <summary>Возвращает значение типа <see langword="String" />, соответствующее заданному значению типа <see langword="Byte" />.</summary>
      <param name="Value">Обязательный. Значение <see langword="Byte" /> для преобразования в значение <see langword="String" />.</param>
      <returns>Значение типа <see langword="String" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromChar(System.Char)">
      <summary>Возвращает значение типа <see langword="String" />, соответствующее заданному значению типа <see langword="Char" />.</summary>
      <param name="Value">Обязательный. Значение <see langword="Char" /> для преобразования в значение <see langword="String" />.</param>
      <returns>Значение типа <see langword="String" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDate(System.DateTime)">
      <summary>Возвращает значение типа <see langword="String" />, соответствующее заданной дате.</summary>
      <param name="Value">Обязательный. Дата, преобразуемая в значение <see langword="String" />.</param>
      <returns>Значение типа <see langword="String" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal)">
      <summary>Возвращает значение типа <see langword="String" />, соответствующее заданному значению типа <see langword="Decimal" />.</summary>
      <param name="Value">Обязательный. Значение <see langword="Decimal" /> для преобразования в значение <see langword="String" />.</param>
      <returns>Значение типа <see langword="String" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal,System.Globalization.NumberFormatInfo)">
      <summary>Возвращает значение типа <see langword="String" />, соответствующее заданному значению типа <see langword="Decimal" />, и сведения о форматировании чисел.</summary>
      <param name="Value">Обязательный. Значение <see langword="Decimal" /> для преобразования в значение <see langword="String" />.</param>
      <param name="NumberFormat">Объект <see cref="T:System.Globalization.NumberFormatInfo" />, определяющий способ форматирования и отображения числовых значений с учетом языка и региональных параметров.</param>
      <returns>Значение типа <see langword="String" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double)">
      <summary>Возвращает строковое значение, соответствующее указанному <see cref="T:System.Double" /> .</summary>
      <param name="Value">Обязательный. Значение <see cref="T:System.Double" /> для преобразования в значение <see cref="T:System.String" />.</param>
      <returns>Значение типа <see langword="String" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double,System.Globalization.NumberFormatInfo)">
      <summary>Возвращает строку, соответствующую заданным <see cref="T:System.Double" /> и числовым сведениям о форматировании.</summary>
      <param name="Value">Обязательный. Значение <see cref="T:System.Double" /> для преобразования в значение <see cref="T:System.String" />.</param>
      <param name="NumberFormat">Объект <see cref="T:System.Globalization.NumberFormatInfo" />, определяющий способ форматирования и отображения числовых значений с учетом языка и региональных параметров.</param>
      <returns>Строковое представление параметра <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromInteger(System.Int32)">
      <summary>Возвращает значение типа <see langword="String" />, соответствующее заданному значению типа <see langword="Integer" />.</summary>
      <param name="Value">Обязательный. Значение <see langword="Integer" /> для преобразования в значение <see langword="String" />.</param>
      <returns>Значение типа <see langword="String" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromLong(System.Int64)">
      <summary>Возвращает значение типа <see langword="String" />, соответствующее заданному значению типа <see cref="T:System.Int64" /> (64-разрядное целое число).</summary>
      <param name="Value">Обязательный. Значение <see cref="T:System.Int64" /> для преобразования в значение <see langword="String" />.</param>
      <returns>Значение типа <see langword="String" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromObject(System.Object)">
      <summary>Возвращает значение типа <see langword="String" />, соответствующее заданному объекту.</summary>
      <param name="Value">Обязательный. Объект, преобразуемый в значение <see langword="String" />.</param>
      <returns>Значение типа <see langword="String" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromShort(System.Int16)">
      <summary>Возвращает значение типа <see langword="String" />, соответствующее заданному значению типа <see cref="T:System.Int16" /> (16-разрядное целое число).</summary>
      <param name="Value">Обязательный. Значение <see langword="Int616" /> для преобразования в значение <see langword="String" />.</param>
      <returns>Значение типа <see langword="String" />, соответствующее параметру <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single)">
      <summary>Возвращает строковое значение, соответствующее указанному <see cref="T:System.Single" /> .</summary>
      <param name="Value">Обязательный. Значение <see cref="T:System.Single" /> для преобразования в значение <see langword="String" />.</param>
      <returns>Строковое значение, соответствующее <paramref name="Value" /> .</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single,System.Globalization.NumberFormatInfo)">
      <summary>Возвращает строковое значение, соответствующее заданным <see cref="T:System.Single" /> и числовым сведениям о форматировании.</summary>
      <param name="Value">Обязательный. Значение <see cref="T:System.Single" /> для преобразования в значение <see langword="String" />.</param>
      <param name="NumberFormat">Объект <see cref="T:System.Globalization.NumberFormatInfo" />, определяющий способ форматирования и отображения числовых значений с учетом языка и региональных параметров.</param>
      <returns>Строковое значение, соответствующее <paramref name="Value" /> .</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(System.String@,System.Int32,System.Int32,System.String)">
      <summary>Заменяет параметр <paramref name="sDest" /> значением параметра <paramref name="sInsert" />.</summary>
      <param name="sDest">Обязательный. Строковая переменная, подлежащая изменению.</param>
      <param name="StartPosition">Обязательный. Позиция внутри параметра <paramref name="sDest" />, начиная с которой производится замена. Индекс отсчитывается от 1.</param>
      <param name="MaxInsertLength">Обязательный. Максимальное число используемых символов параметра <paramref name="sInsert" />, начиная с первого символа.</param>
      <param name="sInsert">Обязательный. Строковое значение, которым заменяется параметр <paramref name="sDest" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)">
      <summary>Сравнивает две строки.</summary>
      <param name="sLeft">Обязательный. Строка, сравниваемая с параметром <paramref name="sRight" />.</param>
      <param name="sRight">Обязательный. Строка, сравниваемая с параметром <paramref name="sLeft" />.</param>
      <param name="TextCompare">Обязательный. Значение <see langword="True" /> для сравнения без учета регистра символов; в противном случае — значение <see langword="False" />.</param>
      <returns>
        <list type="table">
          <listheader>
            <term> Значение</term>
            <description> Условие</description>
          </listheader>
          <item>
            <term> нуль</term>
            <description> Эти две строки совпадают.</description>
          </item>
          <item>
            <term> меньше нуля</term>
            <description>Значение 
                <paramref name="sLeft" /> меньше <paramref name="sRight" />.</description>
          </item>
          <item>
            <term> больше нуля</term>
            <description>Значение 
                <paramref name="sLeft" /> больше значения <paramref name="sRight" />.</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>Сравнивает параметры <paramref name="Source" /> и <paramref name="Pattern" /> и возвращает те же результаты, что и оператор <see langword="Like" />.</summary>
      <param name="Source">Обязательный. Произвольное выражение <see langword="String" /> .</param>
      <param name="Pattern">Произвольное выражение <see langword="String" />, которое отвечает правилам сопоставления с шаблоном, описанным в разделе, посвященном оператору Like.</param>
      <param name="CompareOption">Задает способ сравнения строк с шаблоном, как описано в разделе <see cref="T:Microsoft.VisualBasic.CompareMethod" />. Может принимать значения <see langword="vbBinaryCompare" /> для двоичного сравнения или <see langword="vbTextCompare" /> для сравнения на основе порядка сортировки текста без учета регистра символов, определенного системным параметром <see langword="LocaleID" />.</param>
      <returns>Значение <see langword="Boolean" />, показывающее, соответствует ли строка шаблону. Если значение строки соответствует шаблону, результатом является значение <see langword="True" />. Если строка не соответствует шаблону, результатом является <see langword="False" />. Если и строка, и шаблон представляют собой пустые строки, результатом будет <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)">
      <summary>Сравнивает параметры <paramref name="Source" /> и <paramref name="Pattern" /> и возвращает те же результаты, что и оператор <see langword="Like" />, используя двоичное сравнение.</summary>
      <param name="Source">Обязательный. Произвольное выражение <see langword="String" /> .</param>
      <param name="Pattern">Обязательный. Произвольное выражение <see langword="String" />, которое отвечает правилам сопоставления с шаблоном, описанным в разделе, посвященном оператору Like.</param>
      <returns>Значение <see langword="Boolean" />, показывающее, соответствует ли строка шаблону. Если значение строки соответствует шаблону, результатом является значение <see langword="True" />. Если строка не соответствует шаблону, результатом является <see langword="False" />. Если и строка, и шаблон представляют собой пустые строки, результатом будет <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)">
      <summary>Сравнивает параметры <paramref name="Source" /> и <paramref name="Pattern" /> и возвращает те же результаты, что и оператор <see langword="Like" />, используя текстовое сравнение.</summary>
      <param name="Source">Обязательный. Произвольное выражение <see langword="String" /> .</param>
      <param name="Pattern">Обязательный. Произвольное выражение <see langword="String" />, которое отвечает правилам сопоставления с шаблоном, описанным в разделе, посвященном оператору Like.</param>
      <returns>Значение <see langword="Boolean" />, показывающее, соответствует ли строка шаблону. Если значение строки соответствует шаблону, результатом является значение <see langword="True" />. Если строка не соответствует шаблону, результатом является <see langword="False" />. Если и строка, и шаблон представляют собой пустые строки, результатом будет <see langword="True" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Utils">
      <summary>Содержит служебные программы, используемые компилятором Visual Basic.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Utils.CopyArray(System.Array,System.Array)">
      <summary>Используется компилятором Visual Basic в качестве вспомогательного метода для <see langword="Redim" />.</summary>
      <param name="arySrc">Массив, который необходимо скопировать.</param>
      <param name="aryDest">Массив назначения.</param>
      <returns>Скопированный массив.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Utils.GetResourceString(System.String,System.String[])">
      <summary>Извлекает и форматирует локализованную строку ресурса или сообщение об ошибке.</summary>
      <param name="ResourceKey">Идентификатор извлекаемой строки или сообщения об ошибке.</param>
      <param name="Args">Массив параметров для замещения местозаполнителей в строке или сообщении об ошибке.</param>
      <returns>Отформатированная строка ресурса или сообщение об ошибке.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Versioned">
      <summary>В модуле <see cref="T:Microsoft.VisualBasic.CompilerServices.Versioned" /> содержатся процедуры, используемые для взаимодействия с объектами, приложениями и системами.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
      <summary>Выполняет метод объекта или устанавливает/возвращает значение свойства объекта.</summary>
      <param name="Instance">Обязательный. <see langword="Object" />. Указатель на объект, к которому относится данное свойство или метод.</param>
      <param name="MethodName">Обязательный. <see langword="String" />. Строковое выражение, содержащее имя свойства или метода объекта.</param>
      <param name="UseCallType">Обязательный. Член перечисления типа <see cref="T:Microsoft.VisualBasic.CallType" />, представляющий тип вызываемой процедуры. Значением <see langword="CallType" /> может быть <see langword="Method" />, <see langword="Get" /> или <see langword="Set" />.</param>
      <param name="Arguments">Необязательный элемент. <see langword="ParamArray" />. Массив параметров, который содержит аргументы, передаваемые в вызываемый метод или свойство.</param>
      <returns>Выполняет метод объекта или устанавливает/возвращает значение свойства объекта.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.IsNumeric(System.Object)">
      <summary>Возвращает булево значение, указывающее, может ли выражение иметь числовое значение.</summary>
      <param name="Expression">Обязательный. Выражение <see langword="Object" />.</param>
      <returns>Возвращает булево значение, указывающее, может ли выражение иметь числовое значение.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.SystemTypeName(System.String)">
      <summary>Возвращает строковое значение, содержащее имя системного типа данных переменной.</summary>
      <param name="VbName">Обязательный. Строковая переменная, содержащая имя типа Visual Basic.</param>
      <returns>Возвращает строковое значение, содержащее имя системного типа данных переменной.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.TypeName(System.Object)">
      <summary>Возвращает строковое значение, содержащее сведения о типе данных переменной.</summary>
      <param name="Expression">Обязательный. Переменная <see langword="Object" />. Если <see langword="Option Strict" /> имеет значение <see langword="Off" />, разрешается передача переменной с любым типом данных, за исключением структуры.</param>
      <returns>Возвращает строковое значение, содержащее сведения о типе данных переменной.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.VbTypeName(System.String)">
      <summary>Возвращает строковое значение, содержащее имя типа данных Visual Basic для переменной.</summary>
      <param name="SystemName">Обязательный. Строковая переменная, содержащая имя типа, используемое общеязыковой средой выполнения.</param>
      <returns>Возвращает строковое значение, содержащее имя типа данных Visual Basic для переменной.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Constants">
      <summary>В модуле <see langword="Constants" /> содержатся различные константы. Эти константы могут использоваться в произвольном месте кода.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbAbort">
      <summary>Указывает, что в окне сообщения была нажата кнопка <see langword="Abort" />. Возвращается функцией <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbAbortRetryIgnore">
      <summary>Указывает, что при вызове функции <see langword="Abort" /> будут отображаться кнопки <see langword="Retry" />, <see langword="Ignore" /> и <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbApplicationModal">
      <summary>Указывает, что при вызове функции <see langword="MsgBox" /> окно сообщения будет отображаться как модальное диалоговое окно.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbArchive">
      <summary>Указывает функциям доступа к файлам, что файл изменился с момента последней операции резервного копирования.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbArray">
      <summary>Указывает, что типом объекта Variant является массив. Возвращается функцией <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBack">
      <summary>Представляет символ BACKSPACE для функций печати и отображения.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBinaryCompare">
      <summary>Указывает, что при вызове функций сравнения должно выполняться двоичное сравнение.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBoolean">
      <summary>Указывает, что типом объекта Variant является <see langword="Boolean" />. Возвращается функцией <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbByte">
      <summary>Указывает, что типом объекта Variant является <see langword="Byte" />. Возвращается функцией <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCancel">
      <summary>Указывает, что в окне сообщения была нажата кнопка <see langword="Cancel" />. Возвращается функцией <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCr">
      <summary>Представляет символ возврата каретки для функций печати и отображения.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCritical">
      <summary>Указывает, что при вызове функции <see langword="MsgBox" /> будет отображаться значок сообщения о критической ошибке.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCrLf">
      <summary>Представляет символ возврата каретки в сочетании с символом перевода строки для функций печати и отображения.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCurrency">
      <summary>Указывает, что типом объекта Variant является <see langword="Currency" />. Возвращается функцией <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDate">
      <summary>Указывает, что типом объекта Variant является <see langword="Date" />. Возвращается функцией <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDecimal">
      <summary>Указывает, что типом объекта Variant является <see langword="Decimal" />. Возвращается функцией <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton1">
      <summary>Указывает, что при открытии окна сообщения по умолчанию будет выбрана крайняя левая кнопка.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton2">
      <summary>Указывает, что при открытии окна сообщения по умолчанию будет выбрана вторая кнопка слева.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton3">
      <summary>Указывает, что при открытии окна сообщения по умолчанию будет выбрана третья кнопка слева.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDirectory">
      <summary>Указывает функциям доступа к файлам, что файл является каталогом или папкой.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDouble">
      <summary>Указывает, что типом объекта Variant является <see langword="Double" />. Возвращается функцией <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbEmpty">
      <summary>Указывает, что типом объекта Variant является <see langword="Empty" />. Возвращается функцией <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbExclamation">
      <summary>Указывает, что при вызове функции <see langword="MsgBox" /> будет отображаться значок восклицательного знака.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFalse">
      <summary>Указывает, что при вызове функций форматирования чисел должно использоваться значение <see langword="Boolean" /> типа <see langword="False" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstFourDays">
      <summary>Указывает, что при вызове функций для работы с датами должна использоваться первая неделя года, содержащая не менее четырех дней.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstFullWeek">
      <summary>Указывает, что при вызове функций для работы с датами должна использоваться первая полная неделя года.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstJan1">
      <summary>Указывает, что при вызове функций для работы с датами должна использоваться неделя года, на которую приходится первое января.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFormFeed">
      <summary>Представляет символ перевода строки для функций печати.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFriday">
      <summary>Указывает, что при вызове функций для работы с датами в качестве первого дня недели должна использоваться пятница.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbGeneralDate">
      <summary>Указывает, что при вызове функции <see langword="FormatDateTime" /> должен использоваться общий формат даты, установленный для текущего языка и региональных параметров.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbGet">
      <summary>Указывает, что при вызове функции <see langword="CallByName" /> должно извлекаться значение свойства.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHidden">
      <summary>Указывает функциям доступа к файлам, что данный файл является скрытым.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHide">
      <summary>Указывает, что при вызове функции <see langword="Shell" /> окно вызванной программы становится скрытым.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHiragana">
      <summary>Указывает, что при вызове функции <see langword="StrConv" /> символы хираганы должны быть преобразованы в символы катаканы.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbIgnore">
      <summary>Указывает, что в окне сообщения была нажата кнопка <see langword="Ignore" />. Возвращается функцией <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbInformation">
      <summary>Указывает, что при вызове функции <see langword="MsgBox" /> будет отображаться значок сведений.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbInteger">
      <summary>Указывает, что типом объекта Variant является <see langword="Integer" />. Возвращается функцией <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbKatakana">
      <summary>Указывает, что при вызове функции <see langword="StrConv" /> символы катаканы должны быть преобразованы в символы хираганы.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLet">
      <summary>Указывает, что при вызове функции <see langword="CallByName" /> для значения свойства должен быть задан экземпляр объекта.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLf">
      <summary>Представляет символ перевода строки для функций печати и отображения.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLinguisticCasing">
      <summary>Указывает, что при вызове функции <see langword="StrConv" /> символы должны быть преобразованы для применения лингвистических правил использования прописных и строчных букв, а не правил файловой системы.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLong">
      <summary>Указывает, что типом объекта Variant является <see langword="Long" />. Возвращается функцией <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLongDate">
      <summary>Указывает, что при вызове функции <see langword="FormatDateTime" /> должен использоваться длинный формат даты, установленный для текущего языка и региональных параметров.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLongTime">
      <summary>Указывает, что при вызове функции <see langword="FormatDateTime" /> должен использоваться длинный формат времени, установленный для текущего языка и региональных параметров.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLowerCase">
      <summary>Указывает, что при вызове функции <see langword="StrConv" /> символы должны быть преобразованы в нижний регистр.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMaximizedFocus">
      <summary>Указывает, что при вызове функции <see langword="Shell" /> окно вызванной программы разворачивается во весь экран и фокус находится внутри него.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMethod">
      <summary>Указывает, что при вызове функции <see langword="CallByName" /> должен быть вызван метод.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMinimizedFocus">
      <summary>Указывает, что при вызове функции <see langword="Shell" /> окно вызванной программы сворачивается и фокус находится внутри него.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMinimizedNoFocus">
      <summary>Указывает, что при вызове функции <see langword="Shell" /> окно вызванной программы сворачивается и фокус находится за его пределами.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMonday">
      <summary>Указывает, что при вызове функций для работы с датами в качестве первого дня недели должен использоваться понедельник.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxHelp">
      <summary>Указывает, что при вызове функции <see langword="Help" /> будет отображаться кнопка <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxRight">
      <summary>Указывает, что при вызове функции <see langword="MsgBox" /> текст будет выравниваться по правому краю.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxRtlReading">
      <summary>Указывает, что при вызове функции <see langword="MsgBox" /> будет отображаться текст с порядком чтения справа налево (иврит и арабская система письма).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxSetForeground">
      <summary>Указывает, что при вызове функции <see langword="MsgBox" /> окно сообщения будет отображаться на переднем плане.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNarrow">
      <summary>Указывает, что при вызове функции <see langword="StrConv" /> расширенные (двухбайтовые) символы должны быть преобразованы в обычные (однобайтовые) символы.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNewLine">
      <summary>Представляет символ новой строки для функций печати и отображения.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNo">
      <summary>Указывает, что в окне сообщения была нажата кнопка <see langword="No" />. Возвращается функцией <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormal">
      <summary>Указывает функциям доступа к файлам, что данный файл является обычным.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormalFocus">
      <summary>Указывает, что при вызове функции <see langword="Shell" /> окно вызванной программы принимает обычный размер и фокус находится внутри него.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormalNoFocus">
      <summary>Указывает, что при вызове функции <see langword="Shell" /> окно вызванной программы принимает обычный размер и фокус находится за его пределами.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNull">
      <summary>Указывает, что типом объекта Variant является <see langword="Nothing" />. Возвращается функцией <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNullChar">
      <summary>Представляет символ NULL для функций печати и отображения.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNullString">
      <summary>Представляет строку нулевой длины для функций печати и отображения, а также для вызова внешних процедур.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbObject">
      <summary>Указывает, что типом объекта Variant является <see langword="Object" />. Возвращается функцией <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbObjectError">
      <summary>Представляет номер ошибки объекта. Ошибки, определенные пользователем, должны иметь номер, превосходящий это число.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOK">
      <summary>Указывает, что в окне сообщения была нажата кнопка <see langword="OK" />. Возвращается функцией <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOKCancel">
      <summary>Указывает, что при вызове функции <see langword="OK" /> будут отображаться кнопки <see langword="Cancel" /> и <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOKOnly">
      <summary>Указывает, что при вызове функции <see langword="OK" /> будет отображаться только кнопка <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbProperCase">
      <summary>Указывает, что при вызове функции <see langword="StrConv" /> первая буква каждого слова в строке должна быть преобразована в верхний регистр, а все остальные символы — в нижний регистр.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbQuestion">
      <summary>Указывает, что при вызове функции <see langword="MsgBox" /> будет отображаться знак вопроса.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbReadOnly">
      <summary>Указывает функциям доступа к файлам, что данный файл предназначен только для чтения.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbRetry">
      <summary>Указывает, что в окне сообщения была нажата кнопка <see langword="Retry" />. Возвращается функцией <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbRetryCancel">
      <summary>Указывает, что при вызове функции <see langword="Retry" /> будут отображаться кнопки <see langword="Cancel" /> и <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSaturday">
      <summary>Указывает, что при вызове функций для работы с датами в качестве первого дня недели должна использоваться суббота.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSet">
      <summary>Указывает, что при вызове функции <see langword="CallByName" /> должно быть задано значение свойства.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbShortDate">
      <summary>Указывает, что при вызове функции <see langword="FormatDateTime" /> должен использоваться краткий формат даты, установленный для текущего языка и региональных параметров.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbShortTime">
      <summary>Указывает, что при вызове функции <see langword="FormatDateTime" /> должен использоваться краткий формат времени, установленный для текущего языка и региональных параметров.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSimplifiedChinese">
      <summary>Указывает, что при вызове функции <see langword="StrConv" /> символы должны быть преобразованы в китайские символы (упрощенное письмо).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSingle">
      <summary>Указывает, что типом объекта Variant является <see cref="T:System.Single" />. Возвращается функцией <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbString">
      <summary>Указывает, что типом объекта Variant является <see langword="String" />. Возвращается функцией <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSunday">
      <summary>Указывает, что при вызове функций для работы с датами в качестве первого дня недели должно использоваться воскресенье.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSystem">
      <summary>Указывает функциям доступа к файлам, что данный файл является системным.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSystemModal">
      <summary>Указывает, что при вызове функции <see langword="MsgBox" /> окно сообщения будет отображаться как модальное диалоговое окно.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTab">
      <summary>Представляет символ табуляции для функций печати и отображения.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTextCompare">
      <summary>Указывает, что при вызове функций сравнения должно выполняться текстовое сравнение.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbThursday">
      <summary>Указывает, что при вызове функций для работы с датами в качестве первого дня недели должен использоваться четверг.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTraditionalChinese">
      <summary>Указывает, что при вызове функции <see langword="StrConv" /> символы должны быть преобразованы в китайские символы (традиционное письмо).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTrue">
      <summary>Указывает, что при вызове функций форматирования чисел должно использоваться значение <see langword="Boolean" /> типа <see langword="True" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTuesday">
      <summary>Указывает, что при вызове функций для работы с датами в качестве первого дня недели должен использоваться вторник.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUpperCase">
      <summary>Указывает, что при вызове функции <see langword="StrConv" /> символы должны быть преобразованы в верхний регистр.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseDefault">
      <summary>Указывает, что при вызове функций форматирования чисел должно использоваться значение по умолчанию типа <see langword="Boolean" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUserDefinedType">
      <summary>Указывает, что типом объекта Variant является пользовательский тип. Возвращается функцией <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseSystem">
      <summary>Указывает, что при вызове функций для работы с датами должна использоваться первая неделя года, установленная в системе.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseSystemDayOfWeek">
      <summary>Указывает, что при вызове функций для работы с датами в качестве первого дня недели должен использоваться день, заданный в системе.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVariant">
      <summary>Указывает, что типом объекта Variant является <see langword="Variant" />. Возвращается функцией <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVerticalTab">
      <summary>Представляет символ возврата каретки для функций печати.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVolume">
      <summary>Указывает метку тома в качестве атрибута файла для функций доступа к файлам.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbWednesday">
      <summary>Указывает, что при вызове функций для работы с датами в качестве первого дня недели должна использоваться среда.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbWide">
      <summary>Указывает, что при вызове функции <see langword="StrConv" /> обычные (однобайтовые) символы должны быть преобразованы в расширенные (двухбайтовые) символы.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYes">
      <summary>Указывает, что в окне сообщения была нажата кнопка <see langword="Yes" />. Возвращается функцией <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYesNo">
      <summary>Указывает, что при вызове функции <see langword="Yes" /> будут отображаться кнопки <see langword="No" /> и <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYesNoCancel">
      <summary>Указывает, что при вызове функции <see langword="Yes" /> будут отображаться кнопки <see langword="No" />, <see langword="Cancel" /> и <see langword="MsgBox" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ControlChars">
      <summary>В модуле <see langword="ControlChars" /> содержатся константы, используемые в качестве управляющих символов. Эти константы могут использоваться в произвольном месте кода.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Back">
      <summary>Представляет символ BACKSPACE (<see langword="vbBack" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Cr">
      <summary>Представляет символ возврата каретки (<see langword="vbCr" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.CrLf">
      <summary>Представляет сочетание символов возврата каретки и перевода строки (<see langword="vbCrLf" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.FormFeed">
      <summary>Представляет символ перевода страницы для функций печати (<see langword="vbFormFeed" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Lf">
      <summary>Представляет символ перевода строки (<see langword="vbLf" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.NewLine">
      <summary>Представляет символ новой строки (<see langword="vbNewLine" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.NullChar">
      <summary>Представляет символ NULL (<see langword="vbNullChar" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Quote">
      <summary>Представляет символ двойных кавычек.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Tab">
      <summary>Представляет символ табуляции (<see langword="vbTab" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.VerticalTab">
      <summary>Представляет символ вертикальной табуляции (<see langword="vbVerticalTab" />).</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ControlChars.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.ControlChars" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Conversion">
      <summary>В модуле <see langword="Conversion" /> содержатся процедуры, используемые для выполнения различных операций преобразования.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.CTypeDynamic(System.Object,System.Type)">
      <summary>Преобразовывает объект в указанный тип.</summary>
      <param name="Expression">Преобразуемый объект.</param>
      <param name="TargetType">Тип данных, в который требуется преобразовать объект.</param>
      <returns>Объект, тип которого во время выполнения является запрошенным типом целевого объекта.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.CTypeDynamic``1(System.Object)">
      <summary>Преобразует объект в указанный универсальный тип.</summary>
      <param name="Expression">Преобразуемый объект.</param>
      <typeparam name="TargetType">Тип данных, в который требуется преобразовать объект.</typeparam>
      <returns>Объект со статической типизацией, имеющий запрошенный универсальный тип.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.ErrorToString">
      <summary>Возвращает сообщение об ошибке, соответствующее данному номеру ошибки.</summary>
      <exception cref="T:System.ArgumentException">
        <paramref name="ErrorNumber" /> выходит за пределы диапазона.</exception>
      <returns>Сообщение об ошибке, соответствующее самой последней ошибке времени выполнения.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.ErrorToString(System.Int32)">
      <summary>Возвращает сообщение об ошибке, соответствующее данному номеру ошибки.</summary>
      <param name="ErrorNumber">Необязательный элемент. Любой допустимый номер ошибки.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="ErrorNumber" /> выходит за пределы диапазона.</exception>
      <returns>Сообщение об ошибке, соответствующее данному номеру ошибки.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Decimal)">
      <summary>Возвращает целую часть числа.</summary>
      <param name="Number">Обязательный. Число типа <see langword="Decimal" /> или любое допустимое числовое выражение.</param>
      <exception cref="T:System.ArgumentNullException">Число не указано.</exception>
      <exception cref="T:System.ArgumentException">Число не является числовым типом.</exception>
      <returns>Целая часть числа.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Double)">
      <summary>Возвращает целую часть числа.</summary>
      <param name="Number">Обязательный. Число типа <see cref="T:System.Double" /> или любое допустимое числовое выражение.</param>
      <exception cref="T:System.ArgumentNullException">Число не указано.</exception>
      <exception cref="T:System.ArgumentException">Число не является числовым типом.</exception>
      <returns>Целая часть числа.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int16)">
      <summary>Возвращает целую часть числа.</summary>
      <param name="Number">Обязательный. Число типа <see langword="Short" /> или любое допустимое числовое выражение.</param>
      <exception cref="T:System.ArgumentNullException">Число не указано.</exception>
      <exception cref="T:System.ArgumentException">Число не является числовым типом.</exception>
      <returns>Целая часть числа.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int32)">
      <summary>Возвращает целую часть числа.</summary>
      <param name="Number">Обязательный. Число типа <see langword="Integer" /> или любое допустимое числовое выражение.</param>
      <exception cref="T:System.ArgumentNullException">Число не указано.</exception>
      <exception cref="T:System.ArgumentException">Число не является числовым типом.</exception>
      <returns>Целая часть числа.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int64)">
      <summary>Возвращает целую часть числа.</summary>
      <param name="Number">Обязательный. Число типа <see langword="Long" /> или любое допустимое числовое выражение.</param>
      <exception cref="T:System.ArgumentNullException">Число не указано.</exception>
      <exception cref="T:System.ArgumentException">Число не является числовым типом.</exception>
      <returns>Целая часть числа.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Object)">
      <summary>Возвращает целую часть числа.</summary>
      <param name="Number">Обязательный. Число типа <see langword="Object" /> или любое допустимое числовое выражение. Если параметр <paramref name="Number" /> имеет значение <see langword="Nothing" />, то возвращается значение <see langword="Nothing" />.</param>
      <exception cref="T:System.ArgumentNullException">Число не указано.</exception>
      <exception cref="T:System.ArgumentException">Число не является числовым типом.</exception>
      <returns>Целая часть числа.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Single)">
      <summary>Возвращает целую часть числа.</summary>
      <param name="Number">Обязательный. Число типа <see cref="T:System.Single" /> или любое допустимое числовое выражение.</param>
      <exception cref="T:System.ArgumentNullException">Число не указано.</exception>
      <exception cref="T:System.ArgumentException">Число не является числовым типом.</exception>
      <returns>Целая часть числа.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Byte)">
      <summary>Возвращает строку, представляющую шестнадцатеричное значение числа.</summary>
      <param name="Number">Обязательный. Любое допустимое числовое выражение или выражение типа <see langword="String" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> не задан.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> не относится к числовому типу.</exception>
      <returns>Строка, представляющая шестнадцатеричное значение числа.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int16)">
      <summary>Возвращает строку, представляющую шестнадцатеричное значение числа.</summary>
      <param name="Number">Обязательный. Любое допустимое числовое выражение или выражение типа <see langword="String" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> не задан.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> не относится к числовому типу.</exception>
      <returns>Строка, представляющая шестнадцатеричное значение числа.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int32)">
      <summary>Возвращает строку, представляющую шестнадцатеричное значение числа.</summary>
      <param name="Number">Обязательный. Любое допустимое числовое выражение или выражение типа <see langword="String" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> не задан.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> не относится к числовому типу.</exception>
      <returns>Строка, представляющая шестнадцатеричное значение числа.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int64)">
      <summary>Возвращает строку, представляющую шестнадцатеричное значение числа.</summary>
      <param name="Number">Обязательный. Любое допустимое числовое выражение или выражение типа <see langword="String" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> не задан.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> не относится к числовому типу.</exception>
      <returns>Строка, представляющая шестнадцатеричное значение числа.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Object)">
      <summary>Возвращает строку, представляющую шестнадцатеричное значение числа.</summary>
      <param name="Number">Обязательный. Любое допустимое числовое выражение или выражение типа <see langword="String" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> не задан.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> не относится к числовому типу.</exception>
      <returns>Строка, представляющая шестнадцатеричное значение числа.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.SByte)">
      <summary>Возвращает строку, представляющую шестнадцатеричное значение числа.</summary>
      <param name="Number">Обязательный. Любое допустимое числовое выражение или выражение типа <see langword="String" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> не задан.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> не относится к числовому типу.</exception>
      <returns>Строка, представляющая шестнадцатеричное значение числа.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt16)">
      <summary>Возвращает строку, представляющую шестнадцатеричное значение числа.</summary>
      <param name="Number">Обязательный. Любое допустимое числовое выражение или выражение типа <see langword="String" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> не задан.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> не относится к числовому типу.</exception>
      <returns>Строка, представляющая шестнадцатеричное значение числа.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt32)">
      <summary>Возвращает строку, представляющую шестнадцатеричное значение числа.</summary>
      <param name="Number">Обязательный. Любое допустимое числовое выражение или выражение типа <see langword="String" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> не задан.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> не относится к числовому типу.</exception>
      <returns>Строка, представляющая шестнадцатеричное значение числа.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt64)">
      <summary>Возвращает строку, представляющую шестнадцатеричное значение числа.</summary>
      <param name="Number">Обязательный. Любое допустимое числовое выражение или выражение типа <see langword="String" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> не задан.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> не относится к числовому типу.</exception>
      <returns>Строка, представляющая шестнадцатеричное значение числа.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Decimal)">
      <summary>Возвращает целую часть числа.</summary>
      <param name="Number">Обязательный. Число типа <see langword="Decimal" /> или любое допустимое числовое выражение.</param>
      <exception cref="T:System.ArgumentNullException">Число не указано.</exception>
      <exception cref="T:System.ArgumentException">Число не является числовым типом.</exception>
      <returns>Целая часть числа.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Double)">
      <summary>Возвращает целую часть числа.</summary>
      <param name="Number">Обязательный. Число типа <see cref="T:System.Double" /> или любое допустимое числовое выражение.</param>
      <exception cref="T:System.ArgumentNullException">Число не указано.</exception>
      <exception cref="T:System.ArgumentException">Число не является числовым типом.</exception>
      <returns>Целая часть числа.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int16)">
      <summary>Возвращает целую часть числа.</summary>
      <param name="Number">Обязательный. Число типа <see langword="Short" /> или любое допустимое числовое выражение.</param>
      <exception cref="T:System.ArgumentNullException">Число не указано.</exception>
      <exception cref="T:System.ArgumentException">Число не является числовым типом.</exception>
      <returns>Целая часть числа.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int32)">
      <summary>Возвращает целую часть числа.</summary>
      <param name="Number">Обязательный. Число типа <see langword="Integer" /> или любое допустимое числовое выражение.</param>
      <exception cref="T:System.ArgumentNullException">Число не указано.</exception>
      <exception cref="T:System.ArgumentException">Число не является числовым типом.</exception>
      <returns>Целая часть числа.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int64)">
      <summary>Возвращает целую часть числа.</summary>
      <param name="Number">Обязательный. Число типа <see langword="Long" /> или любое допустимое числовое выражение.</param>
      <exception cref="T:System.ArgumentNullException">Число не указано.</exception>
      <exception cref="T:System.ArgumentException">Число не является числовым типом.</exception>
      <returns>Целая часть числа.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Object)">
      <summary>Возвращает целую часть числа.</summary>
      <param name="Number">Обязательный. Число типа <see langword="Object" /> или любое допустимое числовое выражение. Если параметр <paramref name="Number" /> имеет значение <see langword="Nothing" />, то возвращается значение <see langword="Nothing" />.</param>
      <exception cref="T:System.ArgumentNullException">Число не указано.</exception>
      <exception cref="T:System.ArgumentException">Число не является числовым типом.</exception>
      <returns>Целая часть числа.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Single)">
      <summary>Возвращает целую часть числа.</summary>
      <param name="Number">Обязательный. Число типа <see cref="T:System.Single" /> или любое допустимое числовое выражение.</param>
      <exception cref="T:System.ArgumentNullException">Число не указано.</exception>
      <exception cref="T:System.ArgumentException">Число не является числовым типом.</exception>
      <returns>Целая часть числа.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Byte)">
      <summary>Возвращает строку, представляющую восьмеричное значение числа.</summary>
      <param name="Number">Обязательный. Любое допустимое числовое выражение или выражение типа <see langword="String" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> не задан.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> не относится к числовому типу.</exception>
      <returns>Строка, представляющая восьмеричное значение числа.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int16)">
      <summary>Возвращает строку, представляющую восьмеричное значение числа.</summary>
      <param name="Number">Обязательный. Любое допустимое числовое выражение или выражение типа <see langword="String" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> не задан.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> не относится к числовому типу.</exception>
      <returns>Строка, представляющая восьмеричное значение числа.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int32)">
      <summary>Возвращает строку, представляющую восьмеричное значение числа.</summary>
      <param name="Number">Обязательный. Любое допустимое числовое выражение или выражение типа <see langword="String" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> не задан.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> не относится к числовому типу.</exception>
      <returns>Строка, представляющая восьмеричное значение числа.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int64)">
      <summary>Возвращает строку, представляющую восьмеричное значение числа.</summary>
      <param name="Number">Обязательный. Любое допустимое числовое выражение или выражение типа <see langword="String" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> не задан.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> не относится к числовому типу.</exception>
      <returns>Строка, представляющая восьмеричное значение числа.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Object)">
      <summary>Возвращает строку, представляющую восьмеричное значение числа.</summary>
      <param name="Number">Обязательный. Любое допустимое числовое выражение или выражение типа <see langword="String" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> не задан.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> не относится к числовому типу.</exception>
      <returns>Строка, представляющая восьмеричное значение числа.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.SByte)">
      <summary>Возвращает строку, представляющую восьмеричное значение числа.</summary>
      <param name="Number">Обязательный. Любое допустимое числовое выражение или выражение типа <see langword="String" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> не задан.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> не относится к числовому типу.</exception>
      <returns>Строка, представляющая восьмеричное значение числа.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt16)">
      <summary>Возвращает строку, представляющую восьмеричное значение числа.</summary>
      <param name="Number">Обязательный. Любое допустимое числовое выражение или выражение типа <see langword="String" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> не задан.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> не относится к числовому типу.</exception>
      <returns>Строка, представляющая восьмеричное значение числа.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt32)">
      <summary>Возвращает строку, представляющую восьмеричное значение числа.</summary>
      <param name="Number">Обязательный. Любое допустимое числовое выражение или выражение типа <see langword="String" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> не задан.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> не относится к числовому типу.</exception>
      <returns>Строка, представляющая восьмеричное значение числа.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt64)">
      <summary>Возвращает строку, представляющую восьмеричное значение числа.</summary>
      <param name="Number">Обязательный. Любое допустимое числовое выражение или выражение типа <see langword="String" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> не задан.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> не относится к числовому типу.</exception>
      <returns>Строка, представляющая восьмеричное значение числа.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Str(System.Object)">
      <summary>Возвращает представление <see langword="String" /> числа.</summary>
      <param name="Number">Обязательный. <see langword="Object" />, содержащий любое допустимое числовое выражение.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> не задан.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="Number" /> не относится к числовому типу.</exception>
      <returns>Представление <see langword="String" /> числа.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.Char)">
      <summary>Возвращает порядковый номер, который содержится в строке в виде числовых значений соответствующего типа.</summary>
      <param name="Expression">Обязательный. Любое допустимое выражение<see langword="String" />, переменная <see langword="Object" /> или значение <see langword="Char" />. Если <paramref name="Expression" /> имеет тип <see langword="Object" />, значение должно быть преобразуемым в <see langword="String" />. В противном случае возникает ошибка <see cref="T:System.ArgumentException" />.</param>
      <exception cref="T:System.OverflowException">
        <paramref name="InputStr" /> — слишком большое значение.</exception>
      <exception cref="T:System.ArgumentException">
        <see langword="Object" /> — это выражение типа <see langword="String" />, которое нельзя преобразовать в <paramref name="Expression" />.</exception>
      <returns>Порядковый номер, который содержится в строке в виде числовых значений соответствующего типа.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.Object)">
      <summary>Возвращает порядковый номер, который содержится в строке в виде числовых значений соответствующего типа.</summary>
      <param name="Expression">Обязательный. Любое допустимое выражение<see langword="String" />, переменная <see langword="Object" /> или значение <see langword="Char" />. Если <paramref name="Expression" /> имеет тип <see langword="Object" />, значение должно быть преобразуемым в <see langword="String" />. В противном случае возникает ошибка <see cref="T:System.ArgumentException" />.</param>
      <exception cref="T:System.OverflowException">
        <paramref name="InputStr" /> — слишком большое значение.</exception>
      <exception cref="T:System.ArgumentException">
        <see langword="Object" /> — это выражение типа <see langword="String" />, которое нельзя преобразовать в <paramref name="Expression" />.</exception>
      <returns>Порядковый номер, который содержится в строке в виде числовых значений соответствующего типа.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.String)">
      <summary>Возвращает порядковый номер, который содержится в строке в виде числовых значений соответствующего типа.</summary>
      <param name="InputStr">Обязательный. Любое допустимое выражение<see langword="String" />, переменная <see langword="Object" /> или значение <see langword="Char" />. Если <paramref name="Expression" /> имеет тип <see langword="Object" />, значение должно быть преобразуемым в <see langword="String" />. В противном случае возникает ошибка <see cref="T:System.ArgumentException" />.</param>
      <exception cref="T:System.OverflowException">
        <paramref name="InputStr" /> — слишком большое значение.</exception>
      <exception cref="T:System.ArgumentException">
        <see langword="Object" /> — это выражение типа <see langword="String" />, которое нельзя преобразовать в <paramref name="Expression" />.</exception>
      <returns>Порядковый номер, который содержится в строке в виде числовых значений соответствующего типа.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.DateAndTime">
      <summary>В модуле <see langword="DateAndTime" /> содержатся процедуры и свойства, используемые в операциях, связанных с датой и временем.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)">
      <summary>Возвращает значение, содержащее дату и время, к которым был добавлен заданный период времени.</summary>
      <param name="Interval">Обязательный. Значение перечисления <see cref="T:Microsoft.VisualBasic.DateInterval" /> или строковое выражение, представляющее добавляемый период времени.</param>
      <param name="Number">Обязательный. Выражение с плавающей запятой, представляющее количество добавляемых интервалов. Может иметь как положительное (для получения значений даты и времени в будущем), так и отрицательное значение (для получения значений даты и времени в прошлом). Выражение может содержать дробную часть, если в параметре <paramref name="Interval" /> заданы часы, минуты или секунды. Для других значений параметра <paramref name="Interval" /> дробная часть значения <paramref name="Number" /> не обрабатывается.</param>
      <param name="DateValue">Обязательный. Выражение, представляющее дату и время, к которым добавляется интервал. Само значение <paramref name="DateValue" /> в вызывающей программе не изменяется.</param>
      <exception cref="T:System.InvalidCastException">
        <paramref name="DateValue" /> не может быть приведен к <see langword="Date" />.</exception>
      <exception cref="T:System.ArgumentException">Недопустимый параметр <paramref name="Interval" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Вычисленная дата приходится на период до 00:00:00 1 января 1 года или позже 23:59:59 31 декабря 9999 года.</exception>
      <returns>Значение, содержащее дату и время, к которым был добавлен заданный период времени.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)">
      <summary>Возвращает значение, содержащее дату и время, к которым был добавлен заданный период времени.</summary>
      <param name="Interval">Обязательный. Значение перечисления <see cref="T:Microsoft.VisualBasic.DateInterval" /> или строковое выражение, представляющее добавляемый период времени.</param>
      <param name="Number">Обязательный. Выражение с плавающей запятой, представляющее количество добавляемых интервалов. Параметр <paramref name="Number" /> может иметь как положительное (для получения значений даты и времени в будущем), так и отрицательное значение (для получения значений даты и времени в прошлом). Выражение может содержать дробную часть, если в параметре <paramref name="Interval" /> заданы часы, минуты или секунды. Для других значений параметра <paramref name="Interval" /> дробная часть значения <paramref name="Number" /> не обрабатывается.</param>
      <param name="DateValue">Обязательный. Выражение, представляющее дату и время, к которым добавляется интервал. Само значение <paramref name="DateValue" /> в вызывающей программе не изменяется.</param>
      <exception cref="T:System.InvalidCastException">
        <paramref name="DateValue" /> не может быть приведен к <see langword="Date" />.</exception>
      <exception cref="T:System.ArgumentException">Недопустимый параметр <paramref name="Interval" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Вычисленная дата приходится на период до 00:00:00 1 января 1 года или позже 23:59:59 31 декабря 9999 года.</exception>
      <returns>Значение, содержащее дату и время, к которым был добавлен заданный период времени.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>Возвращает значение типа long, указывающее количество интервалов времени между двумя значениями <see langword="Date" />.</summary>
      <param name="Interval">Обязательный. Значение перечисления <see cref="T:Microsoft.VisualBasic.DateInterval" /> или строковое выражение, представляющее интервал времени, используемый в качестве единицы измерения разницы между <paramref name="Date1" /> и <paramref name="Date2" />.</param>
      <param name="Date1">Обязательный. Первое значение даты/времени для использования в расчете.</param>
      <param name="Date2">Обязательный. Второе значение даты/времени для использования в расчете.</param>
      <param name="DayOfWeek">Необязательный элемент. Значение, выбранное из перечисления <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />, указывающее первый день недели. Если этот параметр не задан, используется значение <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />.</param>
      <param name="WeekOfYear">Необязательный элемент. Значение, выбранное из перечисления <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />, указывающее первую неделю года. Если этот параметр не задан, используется значение <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />.</param>
      <exception cref="T:System.ArgumentException">Значение <paramref name="Date1" />, <paramref name="Date2" /> или <paramref name="DayofWeek" /> выходит за пределы допустимого диапазона.</exception>
      <exception cref="T:System.InvalidCastException">Значение <paramref name="Date1" /> или <paramref name="Date2" /> имеет недопустимый тип.</exception>
      <returns>Значение типа long, указывающее количество интервалов времени между двумя значениями <see langword="Date" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>Возвращает значение типа long, указывающее количество интервалов времени между двумя значениями <see langword="Date" />.</summary>
      <param name="Interval">Обязательный. Значение перечисления <see cref="T:Microsoft.VisualBasic.DateInterval" /> или строковое выражение, представляющее интервал времени, используемый в качестве единицы измерения разницы между <paramref name="Date1" /> и <paramref name="Date2" />.</param>
      <param name="Date1">Обязательный. Первое значение даты/времени для использования в расчете.</param>
      <param name="Date2">Обязательный. Второе значение даты/времени для использования в расчете.</param>
      <param name="DayOfWeek">Необязательный элемент. Значение, выбранное из перечисления <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />, указывающее первый день недели. Если этот параметр не задан, используется значение <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />.</param>
      <param name="WeekOfYear">Необязательный элемент. Значение, выбранное из перечисления <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />, указывающее первую неделю года. Если этот параметр не задан, используется значение <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />.</param>
      <exception cref="T:System.ArgumentException">Значение <paramref name="Date1" />, <paramref name="Date2" /> или <paramref name="DayofWeek" /> выходит за пределы допустимого диапазона.</exception>
      <exception cref="T:System.InvalidCastException">Значение <paramref name="Date1" /> или <paramref name="Date2" /> имеет недопустимый тип.</exception>
      <returns>Значение типа long, указывающее количество интервалов времени между двумя значениями <see langword="Date" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>Возвращает целочисленное значение, содержащее указанный компонент данного значения типа <see langword="Date" />.</summary>
      <param name="Interval">Обязательный. Значение перечисления <see cref="T:Microsoft.VisualBasic.DateInterval" /> или строковое выражение, представляющие возвращаемую часть даты или времени.</param>
      <param name="DateValue">Обязательный. Значение <see langword="Date" />, которое требуется вычислить.</param>
      <param name="FirstDayOfWeekValue">Необязательный элемент. Значение, выбранное из перечисления <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />, указывающее первый день недели. Если этот параметр не задан, используется значение <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />.</param>
      <param name="FirstWeekOfYearValue">Необязательный элемент. Значение, выбранное из перечисления <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />, указывающее первую неделю года. Если этот параметр не задан, используется значение <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />.</param>
      <exception cref="T:System.ArgumentException">Недопустимый параметр <paramref name="Interval" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="DateValue" /> не может быть приведен к <see langword="Date" />.</exception>
      <returns>Целочисленное значение, содержащее указанный компонент данного значения типа <see langword="Date" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>Возвращает значение, содержащее указанный компонент заданного значения типа <see langword="Date" />.</summary>
      <param name="Interval">Обязательный. Значение перечисления <see cref="T:Microsoft.VisualBasic.DateInterval" /> или строковое выражение, представляющие возвращаемую часть даты или времени.</param>
      <param name="DateValue">Обязательный. Значение <see langword="Date" />, которое требуется вычислить.</param>
      <param name="DayOfWeek">Необязательный элемент. Значение, выбранное из перечисления <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />, указывающее первый день недели. Если этот параметр не задан, используется значение <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />.</param>
      <param name="WeekOfYear">Необязательный элемент. Значение, выбранное из перечисления <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />, указывающее первую неделю года. Если этот параметр не задан, используется значение <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Interval" /> недопустим.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="DateValue" /> не может быть приведен к <see langword="Date" />.</exception>
      <returns>Целочисленное значение, содержащее указанный компонент данного значения типа <see langword="Date" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)">
      <summary>Возвращает значение типа <see langword="Date" />, представляющее заданный год, месяц и день с временем, установленным на полночь (00:00:00).</summary>
      <param name="Year">Обязательный. Целочисленное выражение со значениями от 1 до 9999. Однако значения, которые меньше этого диапазона, также являются допустимыми. Как объясняется ниже в разделе "Примечания", значение параметра <paramref name="Year" /> от 0 до 99 представляет соответствующий год в диапазоне от 1930 до 2029. Если значение параметра <paramref name="Year" /> меньше 1, оно вычитается из текущего года.</param>
      <param name="Month">Обязательный. Целочисленное выражение со значениями от 1 до 12. Однако значения, находящиеся за пределами этого диапазона, также являются допустимыми. Значение параметра <paramref name="Month" /> смещается на 1 и применяется к январю вычисляемого года. Другими словами, к январю добавляется значение (<paramref name="Month" /> - 1). При необходимости год вычисляется заново. Следующие результаты поясняют этот эффект. 
Если значение <paramref name="Month" /> равно 1, то результатом вычислений будет январь расчетного года.  
  
Если значение <paramref name="Month" /> равно 0, то результатом вычислений будет декабрь предыдущего года.  
  
Если значение <paramref name="Month" /> равно -1, то результатом вычислений будет ноябрь предыдущего года.  
  
Если значение <paramref name="Month" /> равно 13, то результатом является январь следующего года.</param>
      <param name="Day">Обязательный. Целочисленное выражение со значениями от 1 до 31. Однако значения, находящиеся за пределами этого диапазона, также являются допустимыми. Значение аргумента <paramref name="Day" /> смещается на 1 и применяется к первому дню расчетного месяца. Другими словами, к первому дню месяца добавляется значение (<paramref name="Day" /> - 1). При необходимости месяц и год вычисляются заново. Следующие результаты поясняют этот эффект. 
Если значение <paramref name="Day" /> равно 1, то результатом вычислений будет первый день расчетного месяца.  
  
Если значение <paramref name="Day" /> равно 0, то результатом вычислений будет последний день предыдущего месяца.  
  
Если значение <paramref name="Day" /> равно -1, то результатом вычислений будет предпоследний день предыдущего месяца.  
  
Если значение аргумента <paramref name="Day" /> превышает число дней текущего месяца, результатом вычислений будет соответствующий день следующего месяца. Например, если значение параметра <paramref name="Month" /> равно 4, а значение <paramref name="Day" /> равно 31, результатом вычислений будет 1 мая.</param>
      <returns>Значение типа <see langword="Date" />, представляющее заданный год, месяц и день со временем, установленным на полночь (00:00:00).</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)">
      <summary>Возвращает значение типа <see langword="Date" />, содержащее строковое представление даты с временем, установленным на полночь (00:00:00).</summary>
      <param name="StringDate">Обязательный. Строковое выражение, представляющее значение даты и времени в диапазоне от 00:00:00 1 января 1 года до 23:59:59 31 декабря 9999 года.</param>
      <exception cref="T:System.InvalidCastException">Параметр <paramref name="StringDate" /> содержит недопустимое значение времени.</exception>
      <returns>Значение типа <see langword="Date" />, содержащее строковое представление даты с временем, установленным на полночь (00:00:00).</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)">
      <summary>Возвращает целочисленное значение в диапазоне от 1 до 31, представляющее день месяца.</summary>
      <param name="DateValue">Обязательный. Значение типа <see langword="Date" />, из которого нужно извлечь день.</param>
      <returns>Целочисленное значение в диапазоне от 1 до 31, представляющее день месяца.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)">
      <summary>Возвращает целочисленное значение в диапазоне от 0 до 23, представляющее час суток.</summary>
      <param name="TimeValue">Обязательный. Значение типа <see langword="Date" />, из которого нужно извлечь час.</param>
      <returns>Целочисленное значение в диапазоне от 0 до 23, представляющее час суток.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)">
      <summary>Возвращает целочисленное значение в диапазоне от 0 до 59, представляющее минуту часа.</summary>
      <param name="TimeValue">Обязательный. Значение типа <see langword="Date" />, из которого нужно извлечь минуты.</param>
      <returns>Целочисленное значение в диапазоне от 0 до 59, представляющее минуту часа.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)">
      <summary>Возвращает целочисленное значение в диапазоне от 1 до 12, представляющее месяц года.</summary>
      <param name="DateValue">Обязательный. Значение типа <see langword="Date" />, из которого нужно извлечь месяц.</param>
      <returns>Целочисленное значение в диапазоне от 1 до 12, представляющее месяц года.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)">
      <summary>Возвращает строковое значение, содержащее название указанного месяца.</summary>
      <param name="Month">Обязательный. Числовое представление месяца со значениями от 1 до 13; 1 обозначает январь, 12 — декабрь. Можно использовать значение 13 в 13-месячном календаре. Если в системе используется 12-месячный календарь, а значение <paramref name="Month" /> равно 13, функция <c>MonthName</c> возвращает пустую строку.</param>
      <param name="Abbreviate">Необязательный элемент. Значение <see langword="True" />, чтобы сократить имя месяца; в противном случае значение <see langword="False" />. Значение по умолчанию — <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Month" /> меньше 1 или больше 13.</exception>
      <returns>Строковое значение, содержащее название указанного месяца.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)">
      <summary>Возвращает целочисленное значение в диапазоне от 0 до 59, представляющее секунду в минуте.</summary>
      <param name="TimeValue">Обязательный. Значение типа <see langword="Date" />, из которого нужно извлечь секунды.</param>
      <returns>Целочисленное значение в диапазоне от 0 до 59, представляющее секунду в минуте.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)">
      <summary>Возвращает значение типа <see langword="Date" />, представляющее заданный час, минуту и секунду, при этом дата установлена относительно 1 января 1 года.</summary>
      <param name="Hour">Обязательный. Целочисленное выражение со значениями от 0 до 23. Однако значения, находящиеся за пределами этого диапазона, также являются допустимыми.</param>
      <param name="Minute">Обязательный. Целочисленное выражение со значениями от 0 до 59. Однако значения, находящиеся за пределами этого диапазона, также являются допустимыми. Значение параметра <paramref name="Minute" /> добавляется к расчетному часу, и отрицательное значение указывает минуты до наступления этого часа.</param>
      <param name="Second">Обязательный. Целочисленное выражение со значениями от 0 до 59. Однако значения, находящиеся за пределами этого диапазона, также являются допустимыми. Значение параметра <paramref name="Second" /> добавляется к вычисленным минутам, поэтому отрицательное значение указывает секунды до наступления этой минуты.</param>
      <exception cref="T:System.ArgumentException">Значение аргумента находится вне диапазона от -2147483648 до 2147483647</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Вычисленное время меньше, чем –24 (отрицательное значение) часа.</exception>
      <returns>Значение типа <see langword="Date" />, представляющее заданный час, минуту и секунду, при этом дата установлена относительно 1 января 1 года.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)">
      <summary>Возвращает значение типа <see langword="Date" />, содержащее строковое представление времени с датой, установленной на 1 января 1 года.</summary>
      <param name="StringTime">Обязательный. Строковое выражение, представляющее значение даты и времени в диапазоне от 00:00:00 1 января 1 года до 23:59:59 31 декабря 9999 года.</param>
      <exception cref="T:System.InvalidCastException">
        <paramref name="StringTime" /> содержит недопустимое значение даты.</exception>
      <returns>Значение типа <see langword="Date" />, содержащее строковое представление времени с датой, установленной на 1 января 1 года.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)">
      <summary>Возвращает целочисленное значение, которое содержит число, представляющее день недели.</summary>
      <param name="DateValue">Обязательный. Значение типа <see langword="Date" />, для которого требуется определить день недели.</param>
      <param name="DayOfWeek">Необязательный элемент. Значение, выбранное из перечисления <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />, указывающее первый день недели. Если этот параметр не задан, используется значение <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="DayOfWeek" /> меньше 0 или больше 7.</exception>
      <returns>Целочисленное значение, которое содержит число, представляющее день недели.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)">
      <summary>Возвращает строковое значение, содержащее название указанного дня недели.</summary>
      <param name="Weekday">Обязательный. Целое число. Числовое обозначение дня недели со значениями от 1 до 7: 1 обозначает первый день недели, а 7 — последний. Первый и последний дни недели определяются значением параметра <paramref name="FirstDayOfWeekValue" />.</param>
      <param name="Abbreviate">Необязательный элемент. Значение типа <see langword="Boolean" />, указывающее, должно ли название дня недели быть представлено в сокращенном виде. Если параметр опущен, по умолчанию используется значение <see langword="False" />, определяющее, что имя дня недели представляется не в сокращенном виде.</param>
      <param name="FirstDayOfWeekValue">Необязательный элемент. Значение, выбранное из перечисления <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />, указывающее первый день недели. Если этот параметр не задан, используется значение <see langword="FirstDayOfWeek.System" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Weekday" /> меньше 1 или больше 7 или <paramref name="FirstDayOfWeekValue" /> меньше 0 или больше 7.</exception>
      <returns>Строковое значение, содержащее название указанного дня недели.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)">
      <summary>Возвращает целочисленное значение в диапазоне от 1 до 9999, представляющее год.</summary>
      <param name="DateValue">Обязательный. Значение типа <see langword="Date" />, из которого нужно извлечь год.</param>
      <returns>Целочисленное значение в диапазоне от 1 до 9999, представляющее год.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.DateString">
      <summary>Возвращает или задает строковое значение, представляющее текущую дату по часам компьютера.</summary>
      <exception cref="T:System.InvalidCastException">Недопустимый формат используется для задания значения <see cref="P:Microsoft.VisualBasic.DateAndTime.DateString" />.</exception>
      <returns>Возвращает или задает строковое значение, представляющее текущую дату по часам компьютера.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Now">
      <summary>Возвращает значение, содержащее текущие системные значения даты и времени.</summary>
      <returns>Текущие дата и время в соответствии с вашей системой.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay">
      <summary>Возвращает или задает значение типа <see langword="Date" />, содержащее текущее время суток (системное).</summary>
      <returns>Возвращает или задает значение типа <see langword="Date" />, содержащее текущее время суток (системное).</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Timer">
      <summary>Возвращает значение типа <see cref="T:System.Double" />, представляющее число секунд, прошедших после полуночи.</summary>
      <returns>Значение, представляющее число секунд, истекших с полуночи.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.TimeString">
      <summary>Возвращает или устанавливает строковое значение, которое представляет текущее время дня по часам компьютера.</summary>
      <exception cref="T:System.InvalidCastException">Недопустимый формат используется для задания значения <see langword="TimeString" />.</exception>
      <returns>Возвращает или устанавливает строковое значение, которое представляет текущее время дня по часам компьютера.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Today">
      <summary>Возвращает или задает значение <see langword="Date" />, содержащее текущую системную дату.</summary>
      <returns>Возвращает или задает значение <see langword="Date" />, содержащее текущую системную дату.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.DateFormat">
      <summary>Указывает, как отображать даты при вызове функции <see langword="FormatDateTime" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.GeneralDate">
      <summary>В случае действительных чисел отображает дату и время. Если у числа нет дробной части, отображается только дата. Если у числа нет целой части, отображается только время. Формат отображения даты и времени определяется региональными параметрами, установленными для компьютера. Этот элемент эквивалентен константе <see langword="vbGeneralDate" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.LongDate">
      <summary>Отображает дату в полном формате, который определяется установленными для компьютера региональными параметрами. Этот элемент эквивалентен константе <see langword="vbLongDate" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.LongTime">
      <summary>Отображает время в полном формате, который определяется установленными для компьютера региональными параметрами. Этот элемент эквивалентен константе <see langword="vbLongTime" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.ShortDate">
      <summary>Отображает дату в кратком формате, который определяется установленными для компьютера региональными параметрами. Этот элемент эквивалентен константе <see langword="vbShortDate" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.ShortTime">
      <summary>Отображает время в кратком формате, который определяется установленными для компьютера региональными параметрами. Этот элемент эквивалентен константе <see langword="vbShortTime" />в языке Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.DateInterval">
      <summary>Указывает способ определения и форматирования интервалов дат при вызове функций для работы с датами.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Day">
      <summary>День месяца (от 1 до 31)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.DayOfYear">
      <summary>День года (от 1 до 366)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Hour">
      <summary>Час (от 0 до 23)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Minute">
      <summary>Минута (от 0 до 59)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Month">
      <summary>Месяц (от 1 до 12)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Quarter">
      <summary>Квартал года (от 1 до 4)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Second">
      <summary>Секунда (от 0 до 59)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Weekday">
      <summary>День недели (от 1 до 7)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.WeekOfYear">
      <summary>Неделя года (от 1 до 53)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Year">
      <summary>Year;</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.DueDate">
      <summary>Указывает, когда должны осуществляться платежи при вызове финансовых методов.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DueDate.BegOfPeriod">
      <summary>Начало периода времени.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DueDate.EndOfPeriod">
      <summary>Окончание периода времени.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ErrObject">
      <summary>В модуле <see langword="ErrObject" /> содержатся свойства и процедуры, используемые для идентификации и обработки ошибок времени выполнения с помощью объекта <see langword="Err" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.Clear">
      <summary>Удаляет все значения свойств объекта <see langword="Err" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.GetException">
      <summary>Возвращает исключение, представляющее возникшую ошибку.</summary>
      <returns>Исключение, представляющее возникшую ошибку.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
      <summary>Генерирует ошибку во время выполнения, может использоваться вместо оператора <see langword="Error" />.</summary>
      <param name="Number">Обязательный. Целое число типа <see langword="Long" />, определяющее тип ошибки. Ошибки Visual Basic обозначаются числами в диапазоне 0-65535; диапазон 0-512 зарезервирован для системных ошибок; диапазон 513-65535 отводится для ошибок, определяемых пользователем. При задании свойства <see langword="Number" /> для кода создания ошибки в модуле класса к константе <see langword="vbObjectError" /> необходимо добавить номер пользовательского кода ошибки. Например, чтобы создать номер ошибки 513, нужно присвоить свойству <see langword="Number" /> значение <c>vbObjectError + 513</c>.</param>
      <param name="Source">Необязательный элемент. Выражение типа <see langword="String" />, содержащее имя объекта или приложения, вызвавшего ошибку. При задании этого свойства для объекта используется формат <c>проект</c>.<c>класс</c>. Если <paramref name="Source" /> не указан, используется идентификатор процесса текущего проекта Visual Basic.</param>
      <param name="Description">Необязательный элемент. Выражение типа <see langword="String" />, описывающее ошибку. Если это значение не задано, то проверяется значение свойства <see langword="Number" />. Если данное значение может быть сопоставлено с кодом ошибки во время выполнения Visual Basic, то в качестве свойства <see langword="Error" /> используется строка, возвращаемая функцией <see langword="Description" />. Если не существует ошибки Visual Basic, соответствующей свойству <see langword="Number" />, то используется сообщение "Application-defined or object-defined error" ("Ошибка, определенная приложением или объектом").</param>
      <param name="HelpFile">Необязательный элемент. Полный путь к файлу справки, в котором может содержаться справка о данной ошибке. Если данный аргумент не указан, то используется полный путь (содержащий имя устройства, путь и имя файла) к файлу справки Visual Basic.</param>
      <param name="HelpContext">Необязательный элемент. Идентификатор контекста, определяющий для данной ошибки раздел справки в файле <paramref name="HelpFile" />. Если данный параметр опущен, то используется идентификатор контекста файла справки Visual Basic, соответствующий свойству <see langword="Number" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Description">
      <summary>Возвращает или задает выражение <see langword="String" />, содержащее строку описания, связанную с ошибкой. Read/write.</summary>
      <returns>Возвращает или задает выражение <see langword="String" />, содержащее строку описания, связанную с ошибкой. Read/write.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Erl">
      <summary>Возвращает целое число, указывающее номер строки последнего выполненного оператора.</summary>
      <returns>Номер строки последней выполненной инструкции.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.HelpContext">
      <summary>Возвращает или задает значение <see langword="Integer" />, содержащее идентификатор контекста для раздела в файле справки. Read/write.</summary>
      <returns>Возвращает или задает значение <see langword="Integer" />, содержащее идентификатор контекста для раздела в файле справки. Read/write.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.HelpFile">
      <summary>Возвращает или задает выражение <see langword="String" />, содержащее полный путь к файлу справки. Read/write.</summary>
      <returns>Возвращает или задает выражение <see langword="String" />, содержащее полный путь к файлу справки. Read/write.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.LastDllError">
      <summary>Возвращает код системной ошибки, полученной при вызове библиотеки DLL.</summary>
      <returns>Код системной ошибки, вызванный вызовом библиотеки динамической компоновки (DLL).</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Number">
      <summary>Возвращает или задает численное значение, определяющее ошибку. Read/write.</summary>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> больше 65535.</exception>
      <returns>Возвращает или задает численное значение, определяющее ошибку. Read/write.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Source">
      <summary>Возвращает или задает выражение <see langword="String" />, определяющее имя объекта или приложения, вызвавшего ошибку. Read/write.</summary>
      <returns>Возвращает или задает выражение <see langword="String" />, определяющее имя объекта или приложения, вызвавшего ошибку. Read/write.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileAttribute">
      <summary>Указывает атрибуты файла, используемые при вызове функций доступа к файлам.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Archive">
      <summary>Файл был изменен с момента создания последней резервной копии. Этот элемент эквивалентен константе <see langword="vbArchive" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Directory">
      <summary>Каталог или папка. Этот элемент эквивалентен константе <see langword="vbDirectory" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Hidden">
      <summary>Скрытый. Этот элемент эквивалентен константе <see langword="vbHidden" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Normal">
      <summary>Обычный (по умолчанию для <see langword="Dir" /> и <see langword="SetAttr" />). Никакие специальные атрибуты не применены к этому файлу. Этот элемент эквивалентен константе <see langword="vbNormal" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.ReadOnly">
      <summary>Только для чтения. Этот элемент эквивалентен константе <see langword="vbReadOnly" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.System">
      <summary>Системный файл. Этот элемент эквивалентен константе <see langword="vbSystem" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Volume">
      <summary>Метка тома. Этот атрибут не является допустимым при использовании <see langword="SetAttr" />. Этот элемент эквивалентен константе <see langword="vbVolume" />в языке Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption">
      <summary>Указывает, какие действия должны выполняться, когда удаляемый каталог содержит файлы или каталоги.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.DeleteAllContents">
      <summary>Удаляет содержимое каталога вместе с каталогом. По умолчанию.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.ThrowIfDirectoryNonEmpty">
      <summary>Генерирует <see cref="T:System.IO.IOException" />, если каталог не пуст. В свойстве <see langword="Data" /> исключения перечислены файлы, которые не могут быть удалены.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.FieldType">
      <summary>Указывает тип текстовых полей — поля с разделителями или поля фиксированной ширины.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.FieldType.Delimited">
      <summary>Указывает, что используются поля с разделителями.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.FieldType.FixedWidth">
      <summary>Указывает, что используются поля фиксированного размера.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.FileSystem">
      <summary>Включает свойства и методы для работы с дисками, файлами и каталогами.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(System.String,System.String)">
      <summary>Объединяет два пути и возвращает правильно отформатированный путь.</summary>
      <param name="baseDirectory">
        <see langword="String" />. Первый путь, который необходимо объединить.</param>
      <param name="relativePath">
        <see langword="String" />. Второй путь, который необходимо объединить.</param>
      <exception cref="T:System.ArgumentException">Путь <paramref name="baseDirectory" /> или <paramref name="relativePath" /> сформирован неправильно.</exception>
      <returns>Сочетание заданных путей.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String)">
      <summary>Копирует содержимое каталога в другой каталог.</summary>
      <param name="sourceDirectoryName">Каталог, который необходимо скопировать.</param>
      <param name="destinationDirectoryName">Местоположение, в которое необходимо скопировать содержимое каталога.</param>
      <exception cref="T:System.ArgumentException">Путь является недопустимым, так как он либо представляет собой строку нулевой длины (пустую строку), либо содержит только пробел, либо содержит недопустимые символы, либо представляет собой путь к устройству (начинается с символов \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> или <paramref name="sourceDirectoryName" /> равен <see langword="Nothing" /> или является пустой строкой.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Исходный каталог не существует.</exception>
      <exception cref="T:System.IO.IOException">Исходный и конечный пути совпадают.</exception>
      <exception cref="T:System.InvalidOperationException">Операция является циклической.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Имя папки в пути содержит двоеточие (:) или имеет недопустимый формат.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют необходимые разрешения на просмотр пути.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Конечный файл существует, но к нему нет доступа.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Копирует содержимое каталога в другой каталог.</summary>
      <param name="sourceDirectoryName">Каталог, который необходимо скопировать.</param>
      <param name="destinationDirectoryName">Местоположение, в которое необходимо скопировать содержимое каталога.</param>
      <param name="showUI">Указывает, следует ли отображать ход выполнения операции. Значение по умолчанию — <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">Путь является недопустимым, так как он либо представляет собой строку нулевой длины (пустую строку), либо содержит только пробел, либо содержит недопустимые символы, либо представляет собой путь к устройству (начинается с символов \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> или <paramref name="sourceDirectoryName" /> равен <see langword="Nothing" /> или является пустой строкой.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Исходный каталог не существует.</exception>
      <exception cref="T:System.IO.IOException">Исходный и конечный пути совпадают.</exception>
      <exception cref="T:System.InvalidOperationException">Операция является циклической.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Имя папки в пути содержит двоеточие (:) или имеет недопустимый формат.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют необходимые разрешения на просмотр пути.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Конечный файл существует, но к нему нет доступа.</exception>
      <exception cref="T:System.OperationCanceledException">Параметр <paramref name="ShowUI" /> имеет значение <see langword="UIOption.AllDialogs" />, а пользователь отменил операцию, или один или несколько файлов в каталоге не могут быть скопированы.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Копирует содержимое каталога в другой каталог.</summary>
      <param name="sourceDirectoryName">Каталог, который необходимо скопировать.</param>
      <param name="destinationDirectoryName">Местоположение, в которое необходимо скопировать содержимое каталога.</param>
      <param name="showUI">Указывает, следует ли отображать ход выполнения операции. Значение по умолчанию — <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Указывает, что следует делать, если пользователь нажимает кнопку Отмена во время операции. Значение по умолчанию — <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">Путь является недопустимым, так как он либо представляет собой строку нулевой длины (пустую строку), либо содержит только пробел, либо содержит недопустимые символы, либо представляет собой путь к устройству (начинается с символов \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> или <paramref name="sourceDirectoryName" /> равен <see langword="Nothing" /> или является пустой строкой.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Исходный каталог не существует.</exception>
      <exception cref="T:System.IO.IOException">Исходный и конечный пути совпадают.</exception>
      <exception cref="T:System.InvalidOperationException">Операция является циклической.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Имя папки в пути содержит двоеточие (:) или имеет недопустимый формат.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют необходимые разрешения на просмотр пути.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Конечный файл существует, но к нему нет доступа.</exception>
      <exception cref="T:System.OperationCanceledException">Параметр <paramref name="ShowUI" /> имеет значение <see langword="UIOption.AllDialogs" />, а пользователь отменил операцию, или один или несколько файлов в каталоге не могут быть скопированы.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,System.Boolean)">
      <summary>Копирует содержимое каталога в другой каталог.</summary>
      <param name="sourceDirectoryName">Каталог, который необходимо скопировать.</param>
      <param name="destinationDirectoryName">Местоположение, в которое необходимо скопировать содержимое каталога.</param>
      <param name="overwrite">Значение <see langword="True" /> для перезаписи существующих файлов; в противном случае — значение <see langword="False" />. Значение по умолчанию — <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">Путь является недопустимым, так как он либо представляет собой строку нулевой длины (пустую строку), либо содержит только пробел, либо содержит недопустимые символы, либо представляет собой путь к устройству (начинается с символов \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> или <paramref name="sourceDirectoryName" /> равен <see langword="Nothing" /> или является пустой строкой.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Исходный каталог не существует.</exception>
      <exception cref="T:System.IO.IOException">Исходный и конечный пути совпадают.</exception>
      <exception cref="T:System.InvalidOperationException">Операция является циклической.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Имя папки в пути содержит двоеточие (:) или имеет недопустимый формат.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют необходимые разрешения на просмотр пути.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Конечный файл существует, но к нему нет доступа.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)">
      <summary>Копирует файл в новое местоположение.</summary>
      <param name="sourceFileName">Файл, который необходимо скопировать.</param>
      <param name="destinationFileName">Местоположение, в которое необходимо скопировать файл.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> содержит сведения о пути.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> или <paramref name="sourceFileName" /> равен <see langword="Nothing" /> или является пустой строкой.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Исходный файл не является допустимым или не существует.</exception>
      <exception cref="T:System.IO.IOException">Файл в целевом каталоге с тем же именем уже используется.</exception>
      <exception cref="T:System.NotSupportedException">Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Пользователь не имеет необходимого разрешения.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют необходимые разрешения на просмотр пути.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Копирует файл в новое местоположение.</summary>
      <param name="sourceFileName">Файл, который необходимо скопировать.</param>
      <param name="destinationFileName">Местоположение, в которое необходимо скопировать файл.</param>
      <param name="showUI">Указывает, следует ли отображать ход выполнения операции. Значение по умолчанию — <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> содержит сведения о пути.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> или <paramref name="sourceFileName" /> равен <see langword="Nothing" /> или является пустой строкой.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Исходный файл не является допустимым или не существует.</exception>
      <exception cref="T:System.IO.IOException">Конечный файл существует, а параметр <paramref name="overwrite" /> имеет значение <see langword="False" />.</exception>
      <exception cref="T:System.NotSupportedException">Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Пользователь не имеет необходимого разрешения.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют необходимые разрешения на просмотр пути.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Копирует файл в новое местоположение.</summary>
      <param name="sourceFileName">Файл, который необходимо скопировать.</param>
      <param name="destinationFileName">Местоположение, в которое необходимо скопировать файл.</param>
      <param name="showUI">Указывает, следует ли отображать ход выполнения операции. Значение по умолчанию — <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Указывает, что следует делать, если пользователь нажимает кнопку Отмена во время операции. Значение по умолчанию — <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> содержит сведения о пути.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> или <paramref name="sourceFileName" /> равен <see langword="Nothing" /> или является пустой строкой.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Исходный файл не является допустимым или не существует.</exception>
      <exception cref="T:System.IO.IOException">Конечный файл существует, а параметр <paramref name="overwrite" /> имеет значение <see langword="False" />.</exception>
      <exception cref="T:System.NotSupportedException">Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Пользователь не имеет необходимого разрешения.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют необходимые разрешения на просмотр пути.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="UICancelOption" /> имеет значение <see langword="ThrowException" />, а пользователь отменил операцию, или возникла ошибка ввода-вывода.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,System.Boolean)">
      <summary>Копирует файл в новое местоположение.</summary>
      <param name="sourceFileName">Файл, который необходимо скопировать.</param>
      <param name="destinationFileName">Местоположение, в которое необходимо скопировать файл.</param>
      <param name="overwrite">Значение <see langword="True" />, если нужно перезаписывать существующие файлы; в противном случае — значение <see langword="False" />. Значение по умолчанию — <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> содержит сведения о пути.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> или <paramref name="sourceFileName" /> равен <see langword="Nothing" /> или является пустой строкой.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Исходный файл не является допустимым или не существует.</exception>
      <exception cref="T:System.IO.IOException">Конечный файл существует, а параметр <paramref name="overwrite" /> имеет значение <see langword="False" />.</exception>
      <exception cref="T:System.NotSupportedException">Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Пользователь не имеет необходимого разрешения.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют необходимые разрешения на просмотр пути.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)">
      <summary>Создает каталог.</summary>
      <param name="directory">Имя и местоположение каталога.</param>
      <exception cref="T:System.ArgumentException">Неверное имя каталога. Например, оно содержит недопустимые символы или состоит только из пробелов.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="directory" /> имеет значение <see langword="Nothing" /> или является пустой строкой.</exception>
      <exception cref="T:System.IO.PathTooLongException">Имя каталога имеет слишком большую длину.</exception>
      <exception cref="T:System.NotSupportedException">Имя каталога состоит только из двоеточия (:).</exception>
      <exception cref="T:System.IO.IOException">Родительский каталог создаваемого каталога доступен только для чтения.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У пользователя нет разрешения на создание каталога.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)">
      <summary>Удаляет каталог.</summary>
      <param name="directory">Каталог, который необходимо удалить.</param>
      <param name="onDirectoryNotEmpty">Указывает, какие действия должны выполняться, когда удаляемый каталог содержит файлы или каталоги. Значение по умолчанию — <see langword="DeleteDirectoryOption.DeleteAllContents" />.</param>
      <exception cref="T:System.ArgumentException">Путь является пустой строкой, некорректен, содержит только пробелы или содержит недопустимые символы (включая знаки подстановки). Путь является путем к устройству (начинается с символов \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="directory" /> имеет значение <see langword="Nothing" /> или является пустой строкой.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Каталог не существует или является файлом.</exception>
      <exception cref="T:System.IO.IOException">Файл в каталоге или подкаталоге используется.</exception>
      <exception cref="T:System.NotSupportedException">Имя каталога содержит двоеточие (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.Security.SecurityException">Пользователь не имеет необходимых разрешений.</exception>
      <exception cref="T:System.OperationCanceledException">Пользователь отменяет операцию, или не удается удалить каталог.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>Удаляет каталог.</summary>
      <param name="directory">Каталог, который необходимо удалить.</param>
      <param name="showUI">Указывает, следует ли отображать ход выполнения операции. Значение по умолчанию — <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Указывает, следует ли отправлять удаленный файл в корзину. Значение по умолчанию — <see langword="RecycleOption.DeletePermanently" />.</param>
      <exception cref="T:System.ArgumentException">Путь является пустой строкой, некорректен, содержит только пробелы или содержит недопустимые символы (включая знаки подстановки). Путь является путем к устройству (начинается с символов \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="directory" /> имеет значение <see langword="Nothing" /> или является пустой строкой.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Каталог не существует или является файлом.</exception>
      <exception cref="T:System.IO.IOException">Файл в каталоге или подкаталоге используется.</exception>
      <exception cref="T:System.NotSupportedException">Имя каталога содержит двоеточие (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.Security.SecurityException">Пользователь не имеет необходимых разрешений.</exception>
      <exception cref="T:System.OperationCanceledException">Пользователь отменяет операцию, или не удается удалить каталог.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Удаляет каталог.</summary>
      <param name="directory">Каталог, который необходимо удалить.</param>
      <param name="showUI">Указывает, следует ли отображать ход выполнения операции. Значение по умолчанию — <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Указывает, следует ли отправлять удаленный файл в корзину. Значение по умолчанию — <see langword="RecycleOption.DeletePermanently" />.</param>
      <param name="onUserCancel">Указывает, следует ли создавать исключение, если пользователь нажимает кнопку Отмена.</param>
      <exception cref="T:System.ArgumentException">Путь является пустой строкой, некорректен, содержит только пробелы или содержит недопустимые символы (включая знаки подстановки). Путь является путем к устройству (начинается с символов \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="directory" /> имеет значение <see langword="Nothing" /> или является пустой строкой.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Каталог не существует или является файлом.</exception>
      <exception cref="T:System.IO.IOException">Файл в каталоге или подкаталоге используется.</exception>
      <exception cref="T:System.NotSupportedException">Имя каталога содержит двоеточие (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.Security.SecurityException">Пользователь не имеет необходимых разрешений.</exception>
      <exception cref="T:System.OperationCanceledException">Пользователь отменяет операцию, или не удается удалить каталог.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String)">
      <summary>Удаляет файл.</summary>
      <param name="file">Путь к удаляемому файлу и его имя.</param>
      <exception cref="T:System.ArgumentException">Путь является недопустимым, так как он либо представляет собой строку нулевой длины (пустую строку), либо содержит только пробел, либо содержит недопустимые символы, либо оканчивается косой чертой там, где должен быть указан файл, либо представляет собой путь к устройству (начинается с символов \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="file" /> имеет значение <see langword="Nothing" /> или является пустой строкой.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат.</exception>
      <exception cref="T:System.IO.IOException">Файл уже используется.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют необходимые разрешения на просмотр пути.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл не существует.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Пользователь не имеет разрешения на удаление файла, или файл доступен только для чтения.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>Удаляет файл.</summary>
      <param name="file">Путь к удаляемому файлу и его имя.</param>
      <param name="showUI">Указывает, следует ли отображать ход выполнения операции. Значение по умолчанию — <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Должен ли удаленный файл быть отправлен в корзину. Значение по умолчанию — <see langword="RecycleOption.DeletePermanently" />.</param>
      <exception cref="T:System.ArgumentException">Путь является недопустимым, так как он либо представляет собой строку нулевой длины (пустую строку), либо содержит только пробел, либо содержит недопустимые символы, либо оканчивается косой чертой там, где должен быть указан файл, либо представляет собой путь к устройству (начинается с символов \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="file" /> имеет значение <see langword="Nothing" /> или является пустой строкой.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат.</exception>
      <exception cref="T:System.IO.IOException">Файл уже используется.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют необходимые разрешения на просмотр пути.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл не существует.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Пользователь не имеет разрешения на удаление файла, или файл доступен только для чтения.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Удаляет файл.</summary>
      <param name="file">Путь к удаляемому файлу и его имя.</param>
      <param name="showUI">Указывает, следует ли отображать ход выполнения операции. Значение по умолчанию — <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Должен ли удаленный файл быть отправлен в корзину. Значение по умолчанию — <see langword="RecycleOption.DeletePermanently" />.</param>
      <param name="onUserCancel">Указывает, выдается ли исключение, когда пользователь отменяет операцию. Значение по умолчанию — <see langword="UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">Путь является недопустимым, так как он либо представляет собой строку нулевой длины (пустую строку), либо содержит только пробел, либо содержит недопустимые символы, либо оканчивается косой чертой там, где должен быть указан файл, либо представляет собой путь к устройству (начинается с символов \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="file" /> имеет значение <see langword="Nothing" /> или является пустой строкой.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат.</exception>
      <exception cref="T:System.IO.IOException">Файл уже используется.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют необходимые разрешения на просмотр пути.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл не существует.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Пользователь не имеет разрешения на удаление файла, или файл доступен только для чтения.</exception>
      <exception cref="T:System.OperationCanceledException">Пользователь отменил операцию, и для параметра <paramref name="onUserCancel" /> установлено значение <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(System.String)">
      <summary>Возвращает значение <see langword="True" />, если указанный каталог существует.</summary>
      <param name="directory">Путь к каталогу.</param>
      <returns>Значение <see langword="True" />, если каталог существует; в противном случае — значение <see langword="False" />. Этот метод также возвращает <see langword="False" />, если параметр представляет имя и путь файла, а не каталог.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FileExists(System.String)">
      <summary>Возвращает значение <see langword="True" />, если указанный файл существует.</summary>
      <param name="file">Путь к файлу и его имя.</param>
      <exception cref="T:System.ArgumentException">Имя файла заканчивается обратной косой чертой (\).</exception>
      <returns>Возвращает значение <see langword="True" />, если файл существует; в противном случае возвращает значение <see langword="False" />. Этот метод также возвращает <see langword="False" />, если параметр представляет путь к каталогу, а файлу.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)">
      <summary>Возвращает доступный только для чтения набор строк, представляющих собой имена файлов, которые содержат указанный текст.</summary>
      <param name="directory">Каталог, в котором необходимо выполнить поиск.</param>
      <param name="containsText">Текст, поиск которого необходимо выполнить.</param>
      <param name="ignoreCase">Значение <see langword="True" />, если при поиске следует учитывать регистр; в противном случае — значение <see langword="False" />. Значение по умолчанию — <see langword="True" />.</param>
      <param name="searchType">Указывает, нужно ли включать вложенные папки. Значение по умолчанию — <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <exception cref="T:System.ArgumentException">Путь является недопустимым по одной из следующих причин: это строка нулевой длины. Он содержит только пробелы; Он содержит недопустимые символы; или это путь к устройству (начинается с <c> \\ . \</c>).</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="directory" /> имеет значение <see langword="Nothing" /> или является пустой строкой.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Заданный каталог не существует.</exception>
      <exception cref="T:System.IO.IOException">Заданный каталог указывает на существующий файл.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Указанный путь каталога содержит двоеточие (:) или имеет недопустимый формат.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют необходимые разрешения на просмотр пути.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У пользователя нет необходимых разрешений.</exception>
      <returns>Доступная только для чтения коллекция имен файлов, содержащих указанный текст.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Возвращает доступный только для чтения набор строк, представляющих собой имена файлов, которые содержат указанный текст.</summary>
      <param name="directory">Каталог, в котором необходимо выполнить поиск.</param>
      <param name="containsText">Текст, поиск которого необходимо выполнить.</param>
      <param name="ignoreCase">Значение <see langword="True" />, если при поиске следует учитывать регистр; в противном случае — значение <see langword="False" />. Значение по умолчанию — <see langword="True" />.</param>
      <param name="searchType">Указывает, нужно ли включать вложенные папки. Значение по умолчанию — <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <param name="fileWildcards">Шаблон, которому необходимо соответствовать.</param>
      <exception cref="T:System.ArgumentException">Путь является недопустимым по одной из следующих причин: это строка нулевой длины. Он содержит только пробелы; Он содержит недопустимые символы; или это путь к устройству (начинается с <c> \\ . \</c>).</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="directory" /> имеет значение <see langword="Nothing" /> или является пустой строкой.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Заданный каталог не существует.</exception>
      <exception cref="T:System.IO.IOException">Заданный каталог указывает на существующий файл.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Указанный путь каталога содержит двоеточие (:) или имеет недопустимый формат.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют необходимые разрешения на просмотр пути.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У пользователя нет необходимых разрешений.</exception>
      <returns>Доступная только для чтения коллекция имен файлов, содержащих указанный текст.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String)">
      <summary>Возвращает коллекцию строк, представляющих имена путей вложенных папок в каталоге.</summary>
      <param name="directory">Путь к каталогу и его имя.</param>
      <exception cref="T:System.ArgumentException">Путь является недопустимым, так как он либо представляет собой строку нулевой длины (пустую строку), либо содержит только пробел, либо содержит недопустимые символы, либо представляет собой путь к устройству (начинается с символов \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="directory" /> имеет значение <see langword="Nothing" /> или является пустой строкой.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Заданный каталог не существует.</exception>
      <exception cref="T:System.IO.IOException">Заданный каталог указывает на существующий файл.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют необходимые разрешения на просмотр пути.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У пользователя нет необходимых разрешений.</exception>
      <returns>Доступная только для чтения коллекция путей к подкаталогам в указанном каталоге.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Возвращает коллекцию строк, представляющих имена путей вложенных папок в каталоге.</summary>
      <param name="directory">Путь к каталогу и его имя.</param>
      <param name="searchType">Указывает, нужно ли включать вложенные папки. Значение по умолчанию — <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <param name="wildcards">Шаблон, которому должны соответствовать имена.</param>
      <exception cref="T:System.ArgumentException">Путь является недопустимым, так как он либо представляет собой строку нулевой длины (пустую строку), либо содержит только пробел, либо содержит недопустимые символы, либо представляет собой путь к устройству (начинается с символов \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">Один или несколько указанных подстановочных знаков являются <see langword="Nothing" />, пустой строкой или содержат только пробелы.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Заданный каталог не существует.</exception>
      <exception cref="T:System.IO.IOException">Заданный каталог указывает на существующий файл.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют необходимые разрешения на просмотр пути.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У пользователя нет необходимых разрешений.</exception>
      <returns>Доступная только для чтения коллекция путей к подкаталогам в указанном каталоге.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)">
      <summary>Возвращает объект <see cref="T:System.IO.DirectoryInfo" /> для указанного пути.</summary>
      <param name="directory">
        <see langword="String" />. Путь к каталогу.</param>
      <exception cref="T:System.ArgumentException">Путь является недопустимым, так как он либо представляет собой строку нулевой длины (пустую строку), либо содержит только пробел, либо содержит недопустимые символы, либо представляет собой путь к устройству (начинается с символов \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="directory" /> имеет значение <see langword="Nothing" /> или является пустой строкой.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Путь каталога содержит двоеточие (:) или имеет недопустимый формат.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют необходимые разрешения на просмотр пути.</exception>
      <returns>Объект <see cref="T:System.IO.DirectoryInfo" /> для указанного пути.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(System.String)">
      <summary>Возвращает объект <see cref="T:System.IO.DriveInfo" /> для указанного диска.</summary>
      <param name="drive">Диск, который необходимо проверить.</param>
      <exception cref="T:System.ArgumentException">Путь является недопустимым, так как он либо представляет собой строку нулевой длины (пустую строку), либо содержит только пробел, либо содержит недопустимые символы, либо представляет собой путь к устройству (начинается с символов \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="drive" /> имеет значение <see langword="Nothing" /> или является пустой строкой.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют необходимые разрешения на просмотр пути.</exception>
      <returns>Объект <see cref="T:System.IO.DriveInfo" /> для указанного диска.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)">
      <summary>Возвращает объект <see cref="T:System.IO.FileInfo" /> для указанного файла.</summary>
      <param name="file">Путь к файлу и его имя.</param>
      <exception cref="T:System.ArgumentException">Недопустимое имя пути Например, оно содержит недопустимые символы или состоит из пробела. В конце имени файла указана косая черта.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="file" /> имеет значение <see langword="Nothing" /> или является пустой строкой.</exception>
      <exception cref="T:System.NotSupportedException">Путь содержит двоеточие в середине строки.</exception>
      <exception cref="T:System.IO.PathTooLongException">Слишком длинный путь.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя нет необходимых разрешений.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У пользователя нет доступа к списку управления доступом (ACL) файла.</exception>
      <returns>Объект <see cref="T:System.IO.FileInfo" /> для указанного файла.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String)">
      <summary>Возвращает коллекцию строк только для чтения, представляющих имена путей к файлам в папке.</summary>
      <param name="directory">Каталог, в котором необходимо выполнить поиск.</param>
      <exception cref="T:System.ArgumentException">Путь является недопустимым, так как он либо представляет собой строку нулевой длины (пустую строку), либо содержит только пробел, либо содержит недопустимые символы, либо представляет собой путь к устройству (начинается с символов \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> имеет значение <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Каталог, где следует выполнить поиск, не существует.</exception>
      <exception cref="T:System.IO.IOException">Параметр <paramref name="directory" /> указывает на существующий файл.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют необходимые разрешения на просмотр пути.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У пользователя нет необходимых разрешений.</exception>
      <returns>Доступная только для чтения коллекция имен файлов из указанного каталога.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Возвращает коллекцию строк только для чтения, представляющих имена путей к файлам в папке.</summary>
      <param name="directory">Каталог, в котором необходимо выполнить поиск.</param>
      <param name="searchType">Указывает, нужно ли включать вложенные папки. Значение по умолчанию — <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <param name="wildcards">Шаблон, которому необходимо соответствовать.</param>
      <exception cref="T:System.ArgumentException">Путь является недопустимым, так как он либо представляет собой строку нулевой длины (пустую строку), либо содержит только пробел, либо содержит недопустимые символы, либо представляет собой путь к устройству (начинается с символов \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> имеет значение <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Каталог, где следует выполнить поиск, не существует.</exception>
      <exception cref="T:System.IO.IOException">Параметр <paramref name="directory" /> указывает на существующий файл.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют необходимые разрешения на просмотр пути.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У пользователя нет необходимых разрешений.</exception>
      <returns>Доступная только для чтения коллекция имен файлов из указанного каталога.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetName(System.String)">
      <summary>Анализирует имя файла без указанного пути.</summary>
      <param name="path">Обязательный. Путь, синтаксический анализ которого нужно выполнить. <see langword="String" />.</param>
      <returns>Имя файла из указанного пути.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)">
      <summary>Возвращает родительский путь предоставленного пути.</summary>
      <param name="path">Путь, который необходимо проверить.</param>
      <exception cref="T:System.ArgumentException">Путь не имеет родительского пути, так как это корневой путь.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат.</exception>
      <returns>Родительский путь для заданного пути.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName">
      <summary>Создает на диске временный пустой файл с уникальным именем и возвращает полный путь этого файла.</summary>
      <returns>
        <see langword="String" />, содержащая полный путь к временному файлу.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String)">
      <summary>Перемещает каталог из одного местоположения в другое.</summary>
      <param name="sourceDirectoryName">Путь к каталогу, который необходимо переместить.</param>
      <param name="destinationDirectoryName">Путь к каталогу, в который необходимо переместить исходный каталог.</param>
      <exception cref="T:System.ArgumentException">Путь является недопустимым, так как он либо представляет собой строку нулевой длины (пустую строку), либо содержит только пробел, либо содержит недопустимые символы, либо представляет собой путь к устройству (начинается с символов \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> или <paramref name="destinationDirectoryName" /> равен <see langword="Nothing" /> или является пустой строкой.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Каталог не существует.</exception>
      <exception cref="T:System.IO.IOException">Источник является корневым каталогом, либо исходный путь совпадает с целевым.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.InvalidOperationException">Операция является циклической.</exception>
      <exception cref="T:System.NotSupportedException">Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют необходимые разрешения на просмотр пути.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Пользователь не имеет необходимого разрешения.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Перемещает каталог из одного местоположения в другое.</summary>
      <param name="sourceDirectoryName">Путь к каталогу, который необходимо переместить.</param>
      <param name="destinationDirectoryName">Путь к каталогу, в который необходимо переместить исходный каталог.</param>
      <param name="showUI">Указывает, следует ли отображать ход выполнения операции. Значение по умолчанию — <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">Путь является недопустимым, так как он либо представляет собой строку нулевой длины (пустую строку), либо содержит только пробел, либо содержит недопустимые символы, либо представляет собой путь к устройству (начинается с символов \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> или <paramref name="destinationDirectoryName" /> равен <see langword="Nothing" /> или является пустой строкой.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Каталог не существует.</exception>
      <exception cref="T:System.IO.IOException">Целевой каталог уже существует, а параметру <paramref name="overwrite" /> присвоено значение <see langword="False" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.InvalidOperationException">Операция является циклической.</exception>
      <exception cref="T:System.NotSupportedException">Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют необходимые разрешения на просмотр пути.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Пользователь не имеет необходимого разрешения.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Перемещает каталог из одного местоположения в другое.</summary>
      <param name="sourceDirectoryName">Путь к каталогу, который необходимо переместить.</param>
      <param name="destinationDirectoryName">Путь к каталогу, в который необходимо переместить исходный каталог.</param>
      <param name="showUI">Указывает, следует ли отображать ход выполнения операции. Значение по умолчанию — <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Указывает, выдается ли исключение, когда пользователь отменяет операцию. Значение по умолчанию — <see langword="UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">Путь является недопустимым, так как он либо представляет собой строку нулевой длины (пустую строку), либо содержит только пробел, либо содержит недопустимые символы, либо представляет собой путь к устройству (начинается с символов \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> или <paramref name="destinationDirectoryName" /> равен <see langword="Nothing" /> или является пустой строкой.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Каталог не существует.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="onUserCancel" /> имеет значение <see langword="ThrowException" />, и подкаталог файла не может быть скопирован.</exception>
      <exception cref="T:System.OperationCanceledException">Параметр <paramref name="onUserCancel" /> имеет значение <see langword="ThrowException" />, а пользователь отменяет операцию, или операция не может быть завершена.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют необходимые разрешения на просмотр пути.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.InvalidOperationException">Операция является циклической.</exception>
      <exception cref="T:System.NotSupportedException">Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Пользователь не имеет необходимого разрешения.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,System.Boolean)">
      <summary>Перемещает каталог из одного местоположения в другое.</summary>
      <param name="sourceDirectoryName">Путь к каталогу, который необходимо переместить.</param>
      <param name="destinationDirectoryName">Путь к каталогу, в который необходимо переместить исходный каталог.</param>
      <param name="overwrite">Значение <see langword="True" />, если нужно перезаписывать существующие каталоги; в противном случае — значение <see langword="False" />. Значение по умолчанию — <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">Путь является недопустимым, так как он либо представляет собой строку нулевой длины (пустую строку), либо содержит только пробел, либо содержит недопустимые символы, либо представляет собой путь к устройству (начинается с символов \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> или <paramref name="destinationDirectoryName" /> равен <see langword="Nothing" /> или является пустой строкой.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Каталог не существует.</exception>
      <exception cref="T:System.IO.IOException">Целевой каталог уже существует, а параметру <paramref name="overwrite" /> присвоено значение <see langword="False" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.InvalidOperationException">Операция является циклической.</exception>
      <exception cref="T:System.NotSupportedException">Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют необходимые разрешения на просмотр пути.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Пользователь не имеет необходимого разрешения.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String)">
      <summary>Перемещает файл в новое местоположение.</summary>
      <param name="sourceFileName">Путь к перемещаемому файлу.</param>
      <param name="destinationFileName">Путь к каталогу, в который необходимо переместить файл.</param>
      <exception cref="T:System.ArgumentException">Путь является недопустимым, так как либо представляет собой строку нулевой длины (пустую строку), либо содержит только пробел, либо содержит недопустимые символы, либо представляет собой путь к устройству (начинается с символов \\.\); заканчивается косой чертой.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="destinationFileName" /> имеет значение <see langword="Nothing" /> или является пустой строкой.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Исходный файл не является допустимым или не существует.</exception>
      <exception cref="T:System.IO.IOException">Файл уже используется другим процессом или возникла ошибка ввода-вывода.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют необходимые разрешения на просмотр пути.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Перемещает файл в новое местоположение.</summary>
      <param name="sourceFileName">Путь к перемещаемому файлу.</param>
      <param name="destinationFileName">Путь к каталогу, в который необходимо переместить файл.</param>
      <param name="showUI">Указывает, следует ли отображать ход выполнения операции. Значение по умолчанию — <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">Путь является недопустимым, так как либо представляет собой строку нулевой длины (пустую строку), либо содержит только пробел, либо содержит недопустимые символы, либо представляет собой путь к устройству (начинается с символов \\.\); заканчивается косой чертой.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="destinationFileName" /> имеет значение <see langword="Nothing" /> или является пустой строкой.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Исходный файл не является допустимым или не существует.</exception>
      <exception cref="T:System.IO.IOException">Файл уже используется другим процессом или возникла ошибка ввода-вывода.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют необходимые разрешения на просмотр пути.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Перемещает файл в новое местоположение.</summary>
      <param name="sourceFileName">Путь к перемещаемому файлу.</param>
      <param name="destinationFileName">Путь к каталогу, в который необходимо переместить файл.</param>
      <param name="showUI">Указывает, следует ли отображать ход выполнения операции. Значение по умолчанию — <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Указывает, выдается ли исключение, когда пользователь отменяет операцию. Значение по умолчанию — <see langword="UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">Путь является недопустимым, так как либо представляет собой строку нулевой длины (пустую строку), либо содержит только пробел, либо содержит недопустимые символы, либо представляет собой путь к устройству (начинается с символов \\.\); заканчивается косой чертой.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="destinationFileName" /> имеет значение <see langword="Nothing" /> или является пустой строкой.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Исходный файл не является допустимым или не существует.</exception>
      <exception cref="T:System.IO.IOException">Файл уже используется другим процессом или возникла ошибка ввода-вывода.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="onUserCancel" /> имеет значение <see langword="ThrowException" />, а пользователь отменил операцию, или возникла ошибка ввода-вывода.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют необходимые разрешения на просмотр пути.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,System.Boolean)">
      <summary>Перемещает файл в новое местоположение.</summary>
      <param name="sourceFileName">Путь к перемещаемому файлу.</param>
      <param name="destinationFileName">Путь к каталогу, в который необходимо переместить файл.</param>
      <param name="overwrite">Значение <see langword="True" /> для перезаписи существующих файлов; в противном случае — значение <see langword="False" />. Значение по умолчанию — <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">Путь является недопустимым, так как либо представляет собой строку нулевой длины (пустую строку), либо содержит только пробел, либо содержит недопустимые символы, либо представляет собой путь к устройству (начинается с символов \\.\); заканчивается косой чертой.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="destinationFileName" /> имеет значение <see langword="Nothing" /> или является пустой строкой.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Исходный файл не является допустимым или не существует.</exception>
      <exception cref="T:System.IO.IOException">Файл уже используется другим процессом или возникла ошибка ввода-вывода.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют необходимые разрешения на просмотр пути.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)">
      <summary>Метод <see langword="OpenTextFieldParser" /> позволяет создать объект <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />, который предоставляет простой и эффективный способ синтаксического анализа структурированных текстовых файлов, например журналов. Объект <see langword="TextFieldParser" /> может использоваться для чтения и файлов с разделителями, и файлов с полями фиксированного размера.</summary>
      <param name="file">Файл, который необходимо открыть с помощью <see langword="TextFieldParser" />.</param>
      <exception cref="T:System.ArgumentException">Путь является недопустимым, так как либо представляет собой строку нулевой длины (пустую строку), либо содержит только пробел, либо содержит недопустимые символы, либо представляет собой путь к устройству (начинается с символов \\.\); заканчивается косой чертой.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> имеет значение <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл не существует.</exception>
      <exception cref="T:System.IO.IOException">Файл уже используется другим процессом или возникла ошибка ввода-вывода.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">Строка не может быть проанализирована с использованием указанного формата. Сообщение исключения содержит строку, вызвавшую исключение, а свойство <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> содержит текст, который содержится в этой строке.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют необходимые разрешения на просмотр пути.</exception>
      <returns>Объект <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> для чтения указанного файла.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.Int32[])">
      <summary>Метод <see langword="OpenTextFieldParser" /> позволяет создать объект <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />, который предоставляет простой и эффективный способ синтаксического анализа структурированных текстовых файлов, например журналов. Объект <see langword="TextFieldParser" /> может использоваться для чтения и файлов с разделителями, и файлов с полями фиксированного размера.</summary>
      <param name="file">Файл, который необходимо открыть с помощью <see langword="TextFieldParser" />.</param>
      <param name="fieldWidths">Значения ширины полей.</param>
      <exception cref="T:System.ArgumentException">Путь является недопустимым, так как либо представляет собой строку нулевой длины (пустую строку), либо содержит только пробел, либо содержит недопустимые символы, либо представляет собой путь к устройству (начинается с символов \\.\); заканчивается косой чертой.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> имеет значение <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл не существует.</exception>
      <exception cref="T:System.IO.IOException">Файл уже используется другим процессом или возникла ошибка ввода-вывода.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">Строка не может быть проанализирована с использованием указанного формата. Сообщение исключения содержит строку, вызвавшую исключение, а свойство <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> содержит текст, который содержится в этой строке.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют необходимые разрешения на просмотр пути.</exception>
      <returns>Объект <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> для чтения указанного файла.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.String[])">
      <summary>Метод <see langword="OpenTextFieldParser" /> позволяет создать объект <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />, который предоставляет простой и эффективный способ синтаксического анализа структурированных текстовых файлов, например журналов. Объект <see langword="TextFieldParser" /> может использоваться для чтения и файлов с разделителями, и файлов с полями фиксированного размера.</summary>
      <param name="file">Файл, который необходимо открыть с помощью <see langword="TextFieldParser" />.</param>
      <param name="delimiters">Разделители для полей.</param>
      <exception cref="T:System.ArgumentException">Путь является недопустимым, так как либо представляет собой строку нулевой длины (пустую строку), либо содержит только пробел, либо содержит недопустимые символы, либо представляет собой путь к устройству (начинается с символов \\.\); заканчивается косой чертой.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> имеет значение <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл не существует.</exception>
      <exception cref="T:System.IO.IOException">Файл уже используется другим процессом или возникла ошибка ввода-вывода.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">Строка не может быть проанализирована с использованием указанного формата. Сообщение исключения содержит строку, вызвавшую исключение, а свойство <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> содержит текст, который содержится в этой строке.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют необходимые разрешения на просмотр пути.</exception>
      <returns>Объект <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> для чтения указанного файла.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String)">
      <summary>Открывает объект <see cref="T:System.IO.StreamReader" /> для чтения файла.</summary>
      <param name="file">Файл, чтение которого необходимо выполнить.</param>
      <exception cref="T:System.ArgumentException">Имя файла оканчивается обратной косой чертой (\).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удается найти указанный файл.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя нет необходимых разрешений на чтение из файла.</exception>
      <returns>Объект <see cref="T:System.IO.StreamReader" /> для чтения файла.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String,System.Text.Encoding)">
      <summary>Открывает объект <see cref="T:System.IO.StreamReader" /> для чтения файла.</summary>
      <param name="file">Файл, чтение которого необходимо выполнить.</param>
      <param name="encoding">Кодировка, используемая для содержимого файла. Кодировкой по умолчанию является ASCII.</param>
      <exception cref="T:System.ArgumentException">Имя файла оканчивается обратной косой чертой (\).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удается найти указанный файл.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя нет необходимых разрешений на чтение из файла.</exception>
      <returns>Объект <see cref="T:System.IO.StreamReader" /> для чтения файла.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean)">
      <summary>Открывает объект <see cref="T:System.IO.StreamWriter" /> для записи в указанный файл.</summary>
      <param name="file">Файл, в который необходимо выполнить запись.</param>
      <param name="append">
        <see langword="True" /> для добавления содержимого файла; <see langword="False" /> для перезаписи содержимого файла. Значение по умолчанию — <see langword="False" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="file" /> имеет значение <see langword="Nothing" /> или является пустой строкой.</exception>
      <exception cref="T:System.ArgumentException">Имя файла заканчивается косой чертой.</exception>
      <returns>Объект <see cref="T:System.IO.StreamWriter" /> для записи в указанный файл.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)">
      <summary>Открывает объект <see cref="T:System.IO.StreamWriter" /> для записи в указанный файл.</summary>
      <param name="file">Файл, в который необходимо выполнить запись.</param>
      <param name="append">
        <see langword="True" /> для добавления содержимого файла; <see langword="False" /> для перезаписи содержимого файла. Значение по умолчанию — <see langword="False" />.</param>
      <param name="encoding">Кодировка, которую необходимо использовать для записи в файл. Кодировкой по умолчанию является ASCII.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="file" /> имеет значение <see langword="Nothing" /> или является пустой строкой.</exception>
      <exception cref="T:System.ArgumentException">Имя файла заканчивается косой чертой.</exception>
      <returns>Объект <see cref="T:System.IO.StreamWriter" /> для записи в указанный файл.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(System.String)">
      <summary>Возвращает содержимое файла в виде массива байтов.</summary>
      <param name="file">Файл, чтение которого необходимо выполнить.</param>
      <exception cref="T:System.ArgumentException">Путь является недопустимым, так как либо представляет собой строку нулевой длины (пустую строку), либо содержит только пробел, либо содержит недопустимые символы, либо представляет собой путь к устройству (начинается с символов \\.\); заканчивается косой чертой.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> имеет значение <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл не существует.</exception>
      <exception cref="T:System.IO.IOException">Файл уже используется другим процессом или возникла ошибка ввода-вывода.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат.</exception>
      <exception cref="T:System.OutOfMemoryException">Не хватает памяти для записи строки в буфер.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют необходимые разрешения на просмотр пути.</exception>
      <returns>
        <see langword="Byte" /> массив с содержимым файла.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String)">
      <summary>Возвращает содержимое текстового файла как <see langword="String" />.</summary>
      <param name="file">Имя файла и путь к файлу, чтение которого необходимо выполнить.</param>
      <exception cref="T:System.ArgumentException">Путь является недопустимым, так как либо представляет собой строку нулевой длины (пустую строку), либо содержит только пробел, либо содержит недопустимые символы, либо представляет собой путь к устройству (начинается с символов \\.\); заканчивается косой чертой.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> имеет значение <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл не существует.</exception>
      <exception cref="T:System.IO.IOException">Файл уже используется другим процессом или возникла ошибка ввода-вывода.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат.</exception>
      <exception cref="T:System.OutOfMemoryException">Не хватает памяти для записи строки в буфер.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют необходимые разрешения на просмотр пути.</exception>
      <returns>
        <see langword="String" /> с содержимым файла.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String,System.Text.Encoding)">
      <summary>Возвращает содержимое текстового файла как <see langword="String" />.</summary>
      <param name="file">Имя файла и путь к файлу, чтение которого необходимо выполнить.</param>
      <param name="encoding">Кодировка, которую необходимо использовать при чтении файла. По умолчанию — UTF-8.</param>
      <exception cref="T:System.ArgumentException">Путь является недопустимым, так как либо представляет собой строку нулевой длины (пустую строку), либо содержит только пробел, либо содержит недопустимые символы, либо представляет собой путь к устройству (начинается с символов \\.\); заканчивается косой чертой.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> имеет значение <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл не существует.</exception>
      <exception cref="T:System.IO.IOException">Файл уже используется другим процессом или возникла ошибка ввода-вывода.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат.</exception>
      <exception cref="T:System.OutOfMemoryException">Не хватает памяти для записи строки в буфер.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют необходимые разрешения на просмотр пути.</exception>
      <returns>
        <see langword="String" /> с содержимым файла.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(System.String,System.String)">
      <summary>Переименование каталога.</summary>
      <param name="directory">Имя каталога, который необходимо переименовать, и путь к нему.</param>
      <param name="newName">Новое имя каталога.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" /> содержит сведения о пути.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> имеет значение <see langword="Nothing" />.  
  
-или- 
 Параметр <paramref name="newName" /> имеет значение <see langword="Nothing" /> или является пустой строкой.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Каталог не существует.</exception>
      <exception cref="T:System.IO.IOException">Имеется существующий файл или каталог с именем, указанным в <paramref name="newName" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют необходимые разрешения на просмотр пути.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Пользователь не имеет необходимого разрешения.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(System.String,System.String)">
      <summary>Переименование файла.</summary>
      <param name="file">Файл, который необходимо переименовать.</param>
      <param name="newName">Новое имя файла.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" /> содержит сведения о пути или оканчивается обратной косой чертой (\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> имеет значение <see langword="Nothing" />.  
  
-или- 
 Параметр <paramref name="newName" /> имеет значение <see langword="Nothing" /> или является пустой строкой.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Каталог не существует.</exception>
      <exception cref="T:System.IO.IOException">Имеется существующий файл или каталог с именем, указанным в <paramref name="newName" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют необходимые разрешения на просмотр пути.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Пользователь не имеет необходимого разрешения.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(System.String,System.Byte[],System.Boolean)">
      <summary>Записывает данные в двоичный файл.</summary>
      <param name="file">Имя файла, в который необходимо выполнить запись, и путь к нему.</param>
      <param name="data">Данные, которые необходимо записать в файл.</param>
      <param name="append">
        <see langword="True" /> для добавления содержимого файла; <see langword="False" /> для перезаписи содержимого файла. Значение по умолчанию — <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">Путь является недопустимым, так как либо представляет собой строку нулевой длины (пустую строку), либо содержит только пробел, либо содержит недопустимые символы, либо представляет собой путь к устройству (начинается с символов \\.\); заканчивается косой чертой.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> имеет значение <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл не существует.</exception>
      <exception cref="T:System.IO.IOException">Файл уже используется другим процессом или возникла ошибка ввода-вывода.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат.</exception>
      <exception cref="T:System.OutOfMemoryException">Не хватает памяти для записи строки в буфер.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют необходимые разрешения на просмотр пути.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean)">
      <summary>Записывает текст в файл.</summary>
      <param name="file">Файл, в который необходимо выполнить запись.</param>
      <param name="text">Текст, который необходимо записать в файл.</param>
      <param name="append">
        <see langword="True" /> для добавления содержимого файла; <see langword="False" /> для перезаписи содержимого файла.</param>
      <exception cref="T:System.ArgumentException">Путь является недопустимым, так как либо представляет собой строку нулевой длины (пустую строку), либо содержит только пробел, либо содержит недопустимые символы, либо представляет собой путь к устройству (начинается с символов \\.\); заканчивается косой чертой.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> имеет значение <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл не существует.</exception>
      <exception cref="T:System.IO.IOException">Файл уже используется другим процессом или возникла ошибка ввода-вывода.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат.</exception>
      <exception cref="T:System.OutOfMemoryException">Не хватает памяти для записи строки в буфер.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют необходимые разрешения на просмотр пути.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)">
      <summary>Записывает текст в файл.</summary>
      <param name="file">Файл, в который необходимо выполнить запись.</param>
      <param name="text">Текст, который необходимо записать в файл.</param>
      <param name="append">
        <see langword="True" /> для добавления содержимого файла; <see langword="False" /> для перезаписи содержимого файла.</param>
      <param name="encoding">Кодировка, которую необходимо использовать для записи в файл.</param>
      <exception cref="T:System.ArgumentException">Путь является недопустимым, так как либо представляет собой строку нулевой длины (пустую строку), либо содержит только пробел, либо содержит недопустимые символы, либо представляет собой путь к устройству (начинается с символов \\.\); заканчивается косой чертой.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> имеет значение <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл не существует.</exception>
      <exception cref="T:System.IO.IOException">Файл уже используется другим процессом или возникла ошибка ввода-вывода.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат.</exception>
      <exception cref="T:System.OutOfMemoryException">Не хватает памяти для записи строки в буфер.</exception>
      <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют необходимые разрешения на просмотр пути.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory">
      <summary>Получает или задает текущий каталог.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">Недопустимый путь.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У пользователя нет необходимых разрешений.</exception>
      <returns>Текущий каталог для файловых операций ввода-вывода.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.FileSystem.Drives">
      <summary>Возвращает доступную только для чтения коллекцию имен всех доступных дисков.</summary>
      <returns>Доступная только для чтения коллекция всех доступных дисков в виде объектов <see cref="T:System.IO.DriveInfo" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.MalformedLineException">
      <summary>Исключение, которое генерируется, когда <see cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" /> не может проанализировать строку с помощью указанного формата.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> с сериализованными данными.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий сериализованные данные объекта по возникающему исключению.</param>
      <param name="context">Структура <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащая контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение, описывающее ошибку.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Строка <see cref="T:System.String" />, описывающая ошибку.</param>
      <param name="innerException">Объект <see cref="T:System.Exception" />, являющийся причиной текущего исключения. Если параметр <see cref="P:System.Exception.InnerException" /> не является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic), то текущее исключение возникает в блоке catch, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> с указанным сообщением об ошибке и номером строки.</summary>
      <param name="message">Текст сообщения данного исключения.</param>
      <param name="lineNumber">Номер неправильно сформированной строки.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64,System.Exception)">
      <summary>Вызывает инициализацию нового экземпляра класса <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> с указанным сообщением об ошибке, номером строки и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Текст сообщения данного исключения.</param>
      <param name="lineNumber">Номер неправильно сформированной строки.</param>
      <param name="innerException">Исключение <see cref="T:System.Exception" />, являющееся причиной текущего исключения. Если параметр <see cref="P:System.Exception.InnerException" /> не является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic), то текущее исключение возникает в блоке catch, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Задает объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> с данными об исключении.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий сериализованные данные объекта по возникающему исключению.</param>
      <param name="context">Структура <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащая контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.ToString">
      <summary>Создает и возвращает строковое представление текущего исключения.</summary>
      <returns>Строковое представление текущего исключения.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber">
      <summary>Получает номер неправильно сформированной строки.</summary>
      <returns>Номер неправильно сформированной строки.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.RecycleOption">
      <summary>Указывает, должен ли файл быть удален окончательно или помещен в корзину.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.RecycleOption.DeletePermanently">
      <summary>Удаление файла или каталога без возможности восстановления. По умолчанию.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.RecycleOption.SendToRecycleBin">
      <summary>Помещение файла или каталога в корзину.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.SearchOption">
      <summary>Указывает, следует ли выполнять поиск по всем каталогам или только по каталогам верхнего уровня.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SearchOption.SearchAllSubDirectories">
      <summary>Поиск указанного каталога и все вложенных подкаталогов. По умолчанию.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SearchOption.SearchTopLevelOnly">
      <summary>Поиск только указанного каталога, исключая подкаталоги.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.SpecialDirectories">
      <summary>Включает свойства для доступа к часто используемым каталогам.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.SpecialDirectories.#ctor">
      <summary>Возвращает экземпляр класса <see cref="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.AllUsersApplicationData">
      <summary>Получает путь, указывающий на каталог Application Data для всех пользователей.</summary>
      <exception cref="T:System.Security.Permissions.EnvironmentPermission">Управляет доступом к системным и пользовательским переменным среды. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Путь пуст. Обычно это происходит потому, что операционная система не поддерживает каталог.</exception>
      <returns>Путь к каталогу Application Data для всех пользователей.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.CurrentUserApplicationData">
      <summary>Получает путь, указывающий на каталог Application Data для текущего пользователя.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">Путь пуст. Обычно это происходит потому, что операционная система не поддерживает каталог.</exception>
      <returns>Путь к каталогу Application Data для текущего пользователя.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Desktop">
      <summary>Получает путь, указывающий каталог рабочего стола.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">Путь пуст. Обычно это происходит потому, что операционная система не поддерживает каталог.</exception>
      <returns>Путь к каталогу рабочего стола.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyDocuments">
      <summary>Получает путь, указывающий на каталог Мои Документы.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">Путь пуст. Обычно это происходит потому, что операционная система не поддерживает каталог.</exception>
      <returns>Путь к каталогу "Мои документы".</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyMusic">
      <summary>Получает путь, указывающий каталог My Music.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">Путь пуст. Обычно это происходит потому, что операционная система не поддерживает каталог.</exception>
      <returns>Путь к каталогу My Music.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyPictures">
      <summary>Получает путь, указывающий каталог My Pictures.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">Путь пуст. Обычно это происходит потому, что операционная система не поддерживает каталог.</exception>
      <returns>Путь к каталогу My Pictures.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.ProgramFiles">
      <summary>Возвращает путь к каталогу Program Files.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">Путь пуст. Обычно это происходит потому, что операционная система не поддерживает каталог.</exception>
      <returns>Путь к каталогу Program Files .</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Programs">
      <summary>Получает путь, указывающий каталог Programs.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">Путь пуст. Обычно это происходит потому, что операционная система не поддерживает каталог.</exception>
      <returns>Путь к каталогу Programs.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Temp">
      <summary>Получает путь, указывающий каталог Temp.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">Путь пуст. Обычно это происходит потому, что операционная система не поддерживает каталог.</exception>
      <returns>Путь к каталогу Temp.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
      <summary>Предоставляет методы и свойства для анализа структурированных текстовых файлов.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)">
      <summary>Инициализирует новый экземпляр класса <see langword="TextFieldParser" />.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />. Поток, который необходимо проанализировать.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> имеет значение <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> не может быть считан.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary>Инициализирует новый экземпляр класса <see langword="TextFieldParser" />.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />. Поток, который необходимо проанализировать.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. Кодировка символов, которая используется, если кодировка не определена из файла. Значение по умолчанию — <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="stream" /> или <paramref name="defaultEncoding" /> имеет значение <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> не может быть считан.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see langword="TextFieldParser" />.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />. Поток, который необходимо проанализировать.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. Кодировка символов, которая используется, если кодировка не определена из файла. Значение по умолчанию — <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <param name="detectEncoding">
        <see langword="Boolean" />. Указывает, следует ли выполнять поиск меток порядка байтов с начала файла. Значение по умолчанию — <see langword="True" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="stream" /> или <paramref name="defaultEncoding" /> имеет значение <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> не может быть считан.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see langword="TextFieldParser" />.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />. Поток, который необходимо проанализировать.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. Кодировка символов, которая используется, если кодировка не определена из файла. Значение по умолчанию — <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <param name="detectEncoding">
        <see langword="Boolean" />. Указывает, следует ли выполнять поиск меток порядка байтов с начала файла. Значение по умолчанию — <see langword="True" />.</param>
      <param name="leaveOpen">
        <see langword="Boolean" />. Указывает, оставить ли <paramref name="stream" /> открытым после того, как объект <see langword="TextFieldParser" /> будет закрыт. Значение по умолчанию — <see langword="False" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="stream" /> или <paramref name="defaultEncoding" /> имеет значение <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> не может быть считан.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)">
      <summary>Инициализирует новый экземпляр класса <see langword="TextFieldParser" />.</summary>
      <param name="reader">
        <see cref="T:System.IO.TextReader" />. Поток <see cref="T:System.IO.TextReader" />, который необходимо проанализировать.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> имеет значение <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see langword="TextFieldParser" />.</summary>
      <param name="path">
        <see langword="String" />. Полный путь к файлу, который необходимо проанализировать.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="path" /> равен пустой строке.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)">
      <summary>Инициализирует новый экземпляр класса <see langword="TextFieldParser" />.</summary>
      <param name="path">
        <see langword="String" />. Полный путь к файлу, который необходимо проанализировать.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. Кодировка символов, которая используется, если кодировка не определена из файла. Значение по умолчанию — <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> является пустой строкой или <paramref name="defaultEncoding" /> равен <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see langword="TextFieldParser" />.</summary>
      <param name="path">
        <see langword="String" />. Полный путь к файлу, который необходимо проанализировать.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. Кодировка символов, которая используется, если кодировка не определена из файла. Значение по умолчанию — <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <param name="detectEncoding">
        <see langword="Boolean" />. Указывает, следует ли выполнять поиск меток порядка байтов с начала файла. Значение по умолчанию — <see langword="True" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> является пустой строкой или <paramref name="defaultEncoding" /> равен <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Close">
      <summary>Закрывает текущий объект <see langword="TextFieldParser" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)">
      <summary>Освобождает ресурсы, используемые объектом <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />.</summary>
      <param name="disposing">Логическое. Значение <see langword="True" /> соответствует освобождению управляемых и неуправляемых ресурсов; значение <see langword="False" /> соответствует освобождению только неуправляемых ресурсов.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize">
      <summary>Позволяет объекту <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> попытаться освободить ресурсы и выполнить другие завершающие операции, прежде чем объект будет уничтожен в процессе сборки мусора.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
      <summary>Считывает указанное число символов, не перемещая курсор.</summary>
      <param name="numberOfChars">Количество символов, которые необходимо считать. Обязательный.</param>
      <exception cref="T:System.ArgumentException">Значение параметра<paramref name="numberOfChars" /> меньше 0.</exception>
      <returns>Строка, содержащая указанное количество прочитанных символов.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
      <summary>Считывает все поля в текущей строке, возвращает их в виде массива строк и перемещает курсор на следующую строку, содержащую данные.</summary>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">Невозможно выполнить синтаксический анализ поля с помощью указанного формата.</exception>
      <returns>Массив строк, который содержит значения полей для текущей строки.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine">
      <summary>Возвращает текущую строку в качестве строки и перемещает курсор к следующей строке.</summary>
      <returns>Текущая строка из файла или потока.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd">
      <summary>Считывает оставшуюся часть текстового файла и возвращает ее в виде строки.</summary>
      <returns>Оставшийся текст из файла или потока.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
      <summary>Задает указанные значения разделителя для чтения и устанавливает типы полей в <see langword="Delimited" />.</summary>
      <param name="delimiters">Массив типа <see langword="String" />.</param>
      <exception cref="T:System.ArgumentException">Разделитель имеет нулевую длину.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
      <summary>Задает указанные значения разделителя для чтения.</summary>
      <param name="fieldWidths">Массив типа <see langword="Integer" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.System#IDisposable#Dispose">
      <summary>Освобождает ресурсы, используемые объектом <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens">
      <summary>Определяет маркер комментария. Маркер комментария является последовательностью символов, которая при помещении в начале строки указывает, что данная строка является комментарием и не должна обрабатываться средством синтаксического анализа.</summary>
      <exception cref="T:System.ArgumentException">Токен комментария включает пробел.</exception>
      <returns>Строковый массив, содержащий все токены комментариев для объекта <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
      <summary>Определяет разделители в текстовом файле.</summary>
      <exception cref="T:System.ArgumentException">Значению разделителя устанавливается значение символа новой строки, пустой строке или <see langword="Nothing" />.</exception>
      <returns>Строковый массив, содержащий все разделители полей для объекта <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
      <summary>Возвращает <see langword="True" />, если между текущей позицией курсора и концом файла нет непустых строк, не являющихся комментариями.</summary>
      <returns>Значение <see langword="True" />, если данных для чтения не осталось; в противном случае — значение <see langword="False" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
      <summary>Возвращает строку, вызвавшую последнее исключение <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" />.</summary>
      <returns>Строка, вызвавшая последнее исключение <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
      <summary>Возвращает номер строки, вызвавшей последнее исключение <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" />.</summary>
      <returns>Номер строки, вызвавшей последнее исключение <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
      <summary>Обозначает ширину каждого столбца в анализируемом текстовом файле.</summary>
      <exception cref="T:System.ArgumentException">Значение ширины в любом месте, отличном от последней записи массива, меньше или равно нулю.</exception>
      <returns>Целочисленный массив, содержащий ширину каждого столбца в анализируемом текстовом файле.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes">
      <summary>При анализе файла с разделителями обозначает, заключены ли поля в кавычки.</summary>
      <returns>Значение <see langword="True" />, если поля заключены в кавычки; в противном случае — значение <see langword="False" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber">
      <summary>Возвращает номер текущей строки или значение "–1", если в потоке не осталось символов.</summary>
      <returns>Текущий номер строки.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
      <summary>Указывает, является ли анализируемый файл файлом с разделителями или файлом с полями фиксированного размера.</summary>
      <returns>Значение <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" />, которое указывает, является ли анализируемый файл файлом с разделителями или файлом с полями фиксированного размера.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace">
      <summary>Указывает, нужно ли удалять начальные и конечные пробелы из значений поля.</summary>
      <returns>Значение <see langword="True" />, если следует удалять начальные и конечные пробелы из значений поля; в противном случае — значение <see langword="False" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.UICancelOption">
      <summary>Указывает, будет ли создаваться исключение, если во время операции пользователь нажмет кнопку Отмена.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UICancelOption.DoNothing">
      <summary>Ничего не выполнять, когда пользователь нажимает кнопку Отмена.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException">
      <summary>Создавать исключение, когда пользователь нажимает кнопку Отмена.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.UIOption">
      <summary>Задает диалоговые окна для отображения при копировании, удалении или перемещении файлов или каталогов.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UIOption.AllDialogs">
      <summary>Показывать диалоговое окно хода выполнения и диалоговые окна ошибок.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UIOption.OnlyErrorDialogs">
      <summary>Показывать только диалоговые окна ошибки и скрывать диалоговые окна хода установки. По умолчанию.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileSystem">
      <summary>В модуле <see langword="FileSystem" /> содержатся процедуры, используемые для выполнения операций с файлами, папками или каталогами и системой. Возможность <see langword="My" /> обеспечивает улучшенные производительность и быстродействие в операциях файлового ввода-вывода по сравнению с модулем <see langword="FileSystem" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)">
      <summary>Изменяет текущую папку или каталог. Возможность <see langword="My" /> обеспечивает улучшенные производительность и быстродействие операций файлового ввода-вывода по сравнению с функциями <see langword="ChDir" />. Дополнительные сведения см. в разделе <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</summary>
      <param name="Path">Обязательный. Строковое выражение, определяющее, какая папка или каталог становятся новым каталогом или папкой по умолчанию. Параметр <paramref name="Path" /> может содержать метку диска. Если диск не указан, функция <see langword="ChDir" /> меняет каталог или папку по умолчанию на текущем диске.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="Path" /> пуст.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Указан несуществующий диск или диск недоступен.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.Char)">
      <summary>Изменяет текущий диск.</summary>
      <param name="Drive">Обязательный. Строковое выражение, задающее существующий диск. Если указать пустую строку (""), текущий диск не изменится. Если аргумент <paramref name="Drive" /> содержит строку из нескольких знаков, функция <see langword="ChDrive" /> использует только первую букву.</param>
      <exception cref="T:System.IO.IOException">Указан несуществующий диск или диск недоступен.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.String)">
      <summary>Изменяет текущий диск.</summary>
      <param name="Drive">Обязательный. Строковое выражение, задающее существующий диск. Если указать пустую строку (""), текущий диск не изменится. Если аргумент <paramref name="Drive" /> содержит строку из нескольких знаков, функция <see langword="ChDrive" /> использует только первую букву.</param>
      <exception cref="T:System.IO.IOException">Указан несуществующий диск или диск недоступен.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.CurDir">
      <summary>Возвращает строку, представляющую текущий путь. Объект <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> предоставляет большую производительность и быстродействие в операциях файлового ввода-вывода по сравнению с функцией <see langword="CurDir" />. Для получения дополнительной информации см. <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</summary>
      <returns>Строка, представляющая текущий путь.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.CurDir(System.Char)">
      <summary>Возвращает строку, представляющую текущий путь. Объект <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> предоставляет большую производительность и быстродействие в операциях файлового ввода-вывода по сравнению с функцией <see langword="CurDir" />. Для получения дополнительной информации см. <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</summary>
      <param name="Drive">Необязательный элемент. Выражение типа <see langword="Char" />, задающее существующий диск. Если диск не указан или параметр <paramref name="Drive" /> является пустой строкой (""), функция <see langword="CurDir" /> возвращает путь для текущего диска.</param>
      <returns>Строка, представляющая текущий путь.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Dir">
      <summary>Возвращает строку, представляющую имя файла, каталога или папки, соответствующую указанному шаблону, атрибуту файла или метке тома диска. Объект <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> обеспечивает большие показатели производительности и быстродействия операций файлового ввода-вывода, чем функция <see langword="Dir" />. Дополнительные сведения см. в разделе <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />.</summary>
      <returns>Строка, представляющая имя файла, каталога или папки, соответствующее указанному шаблону, атрибуту файла или метке тома на диске.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Dir(System.String,Microsoft.VisualBasic.FileAttribute)">
      <summary>Возвращает строку, представляющую имя файла, каталога или папки, соответствующую указанному шаблону, атрибуту файла или метке тома диска. Объект <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> обеспечивает большие показатели производительности и быстродействия операций файлового ввода-вывода, чем функция <see langword="Dir" />. Дополнительные сведения см. в разделе <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />.</summary>
      <param name="PathName">Необязательный элемент. Строковое выражение, задающее имя файла, имя каталога или папки, либо метку тома диска. Если параметр <paramref name="PathName" /> не обнаруживается, возвращается строка нулевой длины (<see langword="&quot;&quot;" />).</param>
      <param name="Attributes">Необязательный элемент. Перечисление или числовое выражение, значение которого задает атрибуты файла. Если этот параметр опущен, функция <see langword="Dir" /> возвращает файлы, соответствующие параметру <paramref name="Pathname" />, но не имеющие атрибутов.</param>
      <returns>Строка, представляющая имя файла, каталога или папки, соответствующее указанному шаблону, атрибуту файла или метке тома на диске.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)">
      <summary>Возвращает логическое значение <see langword="True" /> при достижении конца файла, открытого в режиме <see langword="Random" /> или в режиме последовательного ввода (<see langword="Input" />).</summary>
      <param name="FileNumber">Обязательный. Значение <see langword="Integer" />, содержащее любой допустимый номер файла.</param>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
      <returns>Логическое значение <see langword="True" /> при достижении конца файла, открытого в режиме <see langword="Random" /> или в режиме последовательного ввода (<see langword="Input" />).</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)">
      <summary>Возвращает перечисление, представляющее режим файла для файлов, открытых функцией <see langword="FileOpen" />. Объект <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> обеспечивает большие показатели производительности и быстродействия операций файлового ввода-вывода, чем функция <see langword="FileAttr" />. Дополнительные сведения см. в разделе <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</summary>
      <param name="FileNumber">Обязательный. <see langword="Integer" />. Любой допустимый номер файла.</param>
      <returns>Одно из следующих значений: 
 <list type="table"><listheader><term>Значение</term><description>Режим доступа к файлу</description></listheader><item><term>1</term><description><see langword="OpenMode.Input" /></description></item><item><term>2</term><description><see langword="OpenMode.Output" /></description></item><item><term>4</term><description><see langword="OpenMode.Random" /></description></item><item><term>8</term><description><see langword="OpenMode.Append" /></description></item><item><term>32</term><description><see langword="OpenMode.Binary" /></description></item></list></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])">
      <summary>Завершает операции ввода-вывода с файлом, открытым с помощью функции <see langword="FileOpen" />. Возможность <see langword="My" /> предоставляет лучшие показатели производительности и быстродействии в операциях файлового ввода-вывода. Дополнительные сведения см. в разделе <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumbers">Необязательный элемент. Массив параметров из 0 или нескольких каналов, которые должны быть закрыты.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> — не существует.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileCopy(System.String,System.String)">
      <summary>Копирует файл. Объект <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> предоставляет большую производительность и быстродействие в операциях файлового ввода-вывода по сравнению с функцией <see langword="FileCopy" />. Дополнительные сведения см. в разделе <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)" />.</summary>
      <param name="Source">Обязательный. Строковое выражение, задающее имя копируемого файла. Параметр <paramref name="Source" /> может содержать имя каталога или папки, а также имя диска, где находится исходный файл.</param>
      <param name="Destination">Обязательный. Строковое выражение, определяющее имя файла назначения. Параметр <paramref name="Destination" /> может содержать имя каталога или папки, а также имя диска, где находится файл назначения.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="Source" /> или <paramref name="Destination" /> недопустим или не указан.</exception>
      <exception cref="T:System.IO.IOException">Этот файл уже открыт.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл не существует.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileDateTime(System.String)">
      <summary>Возвращает значение типа <see langword="Date" />, которое указывает дату и время последней операции записи в файл. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="FileDateTime" />. Дополнительные сведения см. в разделе <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</summary>
      <param name="PathName">Обязательный. Строковое выражение, определяющее имя файла. <paramref name="PathName" /> — может включать каталог или папку, а также имя диска.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="PathName" /> недопустим или содержит подстановочный знак.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Указанный файл не существует.</exception>
      <returns>Значение типа <see langword="Date" />, которое указывает дату и время создания или последнего изменения файла.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Array@,System.Int64,System.Boolean,System.Boolean)">
      <summary>Считывает данные из файла открытия диска в переменную. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="FileGet" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Допустимое имя переменной, в которую считываются данные.</param>
      <param name="RecordNumber">Необязательный элемент. Номер записи (файлы режима <see langword="Random" />) или номер байта (файлы режима <see langword="Binary" />), с которого начинается считывание.</param>
      <param name="ArrayIsDynamic">Необязательный элемент. Применяется только при записи массива. Указывает, нужно ли обрабатывать массив как динамический, и обязательно ли записывать дескриптор массива, описывающий его длину и границы.</param>
      <param name="StringIsFixedLength">Необязательный элемент. Используется только при записи строки. Указывает, записывать ли двухбайтовый дескриптор длины строки. Значение по умолчанию — <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 и не равно –1.</exception>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Boolean@,System.Int64)">
      <summary>Считывает данные из файла открытия диска в переменную. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="FileGet" />. Дополнительные сведения см. в разделе <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Допустимое имя переменной, в которую считываются данные.</param>
      <param name="RecordNumber">Необязательный элемент. Номер записи (файлы режима <see langword="Random" />) или номер байта (файлы режима <see langword="Binary" />), с которого начинается считывание.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 и не равно –1.</exception>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Byte@,System.Int64)">
      <summary>Считывает данные из файла открытия диска в переменную. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="FileGet" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Допустимое имя переменной, в которую считываются данные.</param>
      <param name="RecordNumber">Необязательный элемент. Номер записи (файлы режима <see langword="Random" />) или номер байта (файлы режима <see langword="Binary" />), с которого начинается считывание.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 и не равно –1.</exception>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Char@,System.Int64)">
      <summary>Считывает данные из файла открытия диска в переменную. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="FileGet" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Допустимое имя переменной, в которую считываются данные.</param>
      <param name="RecordNumber">Необязательный элемент. Номер записи (файлы режима <see langword="Random" />) или номер байта (файлы режима <see langword="Binary" />), с которого начинается считывание.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 и не равно –1.</exception>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.DateTime@,System.Int64)">
      <summary>Считывает данные из файла открытия диска в переменную. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="FileGet" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Допустимое имя переменной, в которую считываются данные.</param>
      <param name="RecordNumber">Необязательный элемент. Номер записи (файлы режима <see langword="Random" />) или номер байта (файлы режима <see langword="Binary" />), с которого начинается считывание.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 и не равно –1.</exception>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Decimal@,System.Int64)">
      <summary>Считывает данные из файла открытия диска в переменную. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="FileGet" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Допустимое имя переменной, в которую считываются данные.</param>
      <param name="RecordNumber">Необязательный элемент. Номер записи (файлы режима <see langword="Random" />) или номер байта (файлы режима <see langword="Binary" />), с которого начинается считывание.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 и не равно –1.</exception>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Double@,System.Int64)">
      <summary>Считывает данные из файла открытия диска в переменную. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="FileGet" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Допустимое имя переменной, в которую считываются данные.</param>
      <param name="RecordNumber">Необязательный элемент. Номер записи (файлы режима <see langword="Random" />) или номер байта (файлы режима <see langword="Binary" />), с которого начинается считывание.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 и не равно –1.</exception>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int16@,System.Int64)">
      <summary>Считывает данные из файла открытия диска в переменную. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="FileGet" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Допустимое имя переменной, в которую считываются данные.</param>
      <param name="RecordNumber">Необязательный элемент. Номер записи (файлы режима <see langword="Random" />) или номер байта (файлы режима <see langword="Binary" />), с которого начинается считывание.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 и не равно –1.</exception>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int32@,System.Int64)">
      <summary>Считывает данные из файла открытия диска в переменную. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="FileGet" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Допустимое имя переменной, в которую считываются данные.</param>
      <param name="RecordNumber">Необязательный элемент. Номер записи (файлы режима <see langword="Random" />) или номер байта (файлы режима <see langword="Binary" />), с которого начинается считывание.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 и не равно –1.</exception>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int64@,System.Int64)">
      <summary>Считывает данные из файла открытия диска в переменную. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="FileGet" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Допустимое имя переменной, в которую считываются данные.</param>
      <param name="RecordNumber">Необязательный элемент. Номер записи (файлы режима <see langword="Random" />) или номер байта (файлы режима <see langword="Binary" />), с которого начинается считывание.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 и не равно –1.</exception>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Single@,System.Int64)">
      <summary>Считывает данные из файла открытия диска в переменную. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="FileGet" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Допустимое имя переменной, в которую считываются данные.</param>
      <param name="RecordNumber">Необязательный элемент. Номер записи (файлы режима <see langword="Random" />) или номер байта (файлы режима <see langword="Binary" />), с которого начинается считывание.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 и не равно –1.</exception>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.String@,System.Int64,System.Boolean)">
      <summary>Считывает данные из файла открытия диска в переменную. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="FileGet" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Допустимое имя переменной, в которую считываются данные.</param>
      <param name="RecordNumber">Необязательный элемент. Номер записи (файлы режима <see langword="Random" />) или номер байта (файлы режима <see langword="Binary" />), с которого начинается считывание.</param>
      <param name="StringIsFixedLength">Необязательный элемент. Используется только при записи строки. Указывает, записывать ли двухбайтовый дескриптор длины строки. Значение по умолчанию — <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 и не равно –1.</exception>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.ValueType@,System.Int64)">
      <summary>Считывает данные из файла открытия диска в переменную. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="FileGet" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Допустимое имя переменной, в которую считываются данные.</param>
      <param name="RecordNumber">Необязательный элемент. Номер записи (файлы режима <see langword="Random" />) или номер байта (файлы режима <see langword="Binary" />), с которого начинается считывание.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 и не равно –1.</exception>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)">
      <summary>Считывает данные из файла открытия диска в переменную.  Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="FileGetObject" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Допустимое имя переменной, в которую считываются данные.</param>
      <param name="RecordNumber">Необязательный элемент. Номер записи (файлы режима <see langword="Random" />) или номер байта (файлы режима <see langword="Binary" />), с которого начинается считывание.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)">
      <summary>Возвращает значение, которое указывает длину файла в байтах. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="FileLen" />. Для получения дополнительной информации см. <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</summary>
      <param name="PathName">Обязательный. Строковое выражение, которое определяет файл. <paramref name="PathName" /> — может включать каталог или папку, а также имя диска.</param>
      <exception cref="T:System.IO.FileNotFoundException">Файл не существует.</exception>
      <returns>Длина файла в байтах.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)">
      <summary>Открывает файл для ввода или вывода. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="FileOpen" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла. Для получения следующего свободного номера файла следует использовать функцию <see langword="FreeFile" />.</param>
      <param name="FileName">Обязательный. Строковое выражение, которое указывает имя файла. Может включать имя каталога или папки, а также имя диска.</param>
      <param name="Mode">Обязательный. Перечисление, определяющее режим файла: <see langword="Append" />, <see langword="Binary" />, <see langword="Input" />, <see langword="Output" /> или <see langword="Random" />. Дополнительные сведения см. в разделе <see cref="T:Microsoft.VisualBasic.OpenMode" />.</param>
      <param name="Access">Необязательный элемент. Перечисление, определяющие операции, разрешенные для работы с открытым файлом: <see langword="Read" />, <see langword="Write" /> или <see langword="ReadWrite" />. По умолчанию — <see langword="ReadWrite" />. Дополнительные сведения см. в разделе <see cref="T:Microsoft.VisualBasic.OpenAccess" />.</param>
      <param name="Share">Необязательный элемент. Перечисление операций, не разрешенных при работе с файлом, открытым другим процессом: <see langword="Shared" />, <see langword="Lock Read" />, <see langword="Lock Write" /> и <see langword="Lock Read Write" />. По умолчанию — <see langword="Lock Read Write" />. Дополнительные сведения см. в разделе <see cref="T:Microsoft.VisualBasic.OpenShare" />.</param>
      <param name="RecordLength">Необязательный элемент. Число, не превышающее 32 767 (байт). Для файлов, открытых с произвольным доступом, это значение является длиной записи. Для файлов с последовательным доступом — это число знаков в буфере.</param>
      <exception cref="T:System.ArgumentException">Отрицательная длина записи (не равная –1).</exception>
      <exception cref="T:System.IO.IOException">Файл <paramref name="FileName" /> уже открыт, или <paramref name="FileName" /> является недопустимым.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Array,System.Int64,System.Boolean,System.Boolean)">
      <summary>Записывает значения переменных в файл на диске. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="FilePut" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Допустимое имя переменной, содержащей данные для записи на диск.</param>
      <param name="RecordNumber">Необязательный элемент. Номер записи (файлы, открытые в режиме <see langword="Random" />) или номер байта (файлы, открытые в режиме <see langword="Binary" />), с которого начинается запись.</param>
      <param name="ArrayIsDynamic">Необязательный элемент. Применяется только при записи массива. Указывает, нужно ли обрабатывать массив как динамический, и записывать ли дескриптор массива для строки, определяющий ее длину.</param>
      <param name="StringIsFixedLength">Необязательный элемент. Используется только при записи строки. Указывает, записывать ли в файл двухбайтовый дескриптор длины строки. Значение по умолчанию — <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 и не равно –1.</exception>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Boolean,System.Int64)">
      <summary>Записывает значения переменных в файл на диске. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="FilePut" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Допустимое имя переменной, содержащей данные для записи на диск.</param>
      <param name="RecordNumber">Необязательный элемент. Номер записи (файлы, открытые в режиме <see langword="Random" />) или номер байта (файлы, открытые в режиме <see langword="Binary" />), с которого начинается запись.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 и не равно –1.</exception>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Byte,System.Int64)">
      <summary>Записывает значения переменных в файл на диске. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="FilePut" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Допустимое имя переменной, содержащей данные для записи на диск.</param>
      <param name="RecordNumber">Необязательный элемент. Номер записи (файлы, открытые в режиме <see langword="Random" />) или номер байта (файлы, открытые в режиме <see langword="Binary" />), с которого начинается запись.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 и не равно –1.</exception>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Char,System.Int64)">
      <summary>Записывает значения переменных в файл на диске. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="FilePut" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Допустимое имя переменной, содержащей данные для записи на диск.</param>
      <param name="RecordNumber">Необязательный элемент. Номер записи (файлы, открытые в режиме <see langword="Random" />) или номер байта (файлы, открытые в режиме <see langword="Binary" />), с которого начинается запись.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 и не равно –1.</exception>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.DateTime,System.Int64)">
      <summary>Записывает значения переменных в файл на диске. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="FilePut" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Допустимое имя переменной, содержащей данные для записи на диск.</param>
      <param name="RecordNumber">Необязательный элемент. Номер записи (файлы, открытые в режиме <see langword="Random" />) или номер байта (файлы, открытые в режиме <see langword="Binary" />), с которого начинается запись.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 и не равно –1.</exception>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Decimal,System.Int64)">
      <summary>Записывает значения переменных в файл на диске. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="FilePut" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Допустимое имя переменной, содержащей данные для записи на диск.</param>
      <param name="RecordNumber">Необязательный элемент. Номер записи (файлы, открытые в режиме <see langword="Random" />) или номер байта (файлы, открытые в режиме <see langword="Binary" />), с которого начинается запись.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 и не равно –1.</exception>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Double,System.Int64)">
      <summary>Записывает значения переменных в файл на диске. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="FilePut" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Допустимое имя переменной, содержащей данные для записи на диск.</param>
      <param name="RecordNumber">Необязательный элемент. Номер записи (файлы, открытые в режиме <see langword="Random" />) или номер байта (файлы, открытые в режиме <see langword="Binary" />), с которого начинается запись.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 и не равно –1.</exception>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int16,System.Int64)">
      <summary>Записывает значения переменных в файл на диске. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="FilePut" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Допустимое имя переменной, содержащей данные для записи на диск.</param>
      <param name="RecordNumber">Необязательный элемент. Номер записи (файлы, открытые в режиме <see langword="Random" />) или номер байта (файлы, открытые в режиме <see langword="Binary" />), с которого начинается запись.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 и не равно –1.</exception>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int32,System.Int64)">
      <summary>Записывает значения переменных в файл на диске. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="FilePut" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Допустимое имя переменной, содержащей данные для записи на диск.</param>
      <param name="RecordNumber">Необязательный элемент. Номер записи (файлы, открытые в режиме <see langword="Random" />) или номер байта (файлы, открытые в режиме <see langword="Binary" />), с которого начинается запись.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 и не равно –1.</exception>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int64,System.Int64)">
      <summary>Записывает значения переменных в файл на диске. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="FilePut" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Допустимое имя переменной, содержащей данные для записи на диск.</param>
      <param name="RecordNumber">Необязательный элемент. Номер записи (файлы, открытые в режиме <see langword="Random" />) или номер байта (файлы, открытые в режиме <see langword="Binary" />), с которого начинается запись.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 и не равно –1.</exception>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Single,System.Int64)">
      <summary>Записывает значения переменных в файл на диске. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="FilePut" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Допустимое имя переменной, содержащей данные для записи на диск.</param>
      <param name="RecordNumber">Необязательный элемент. Номер записи (файлы, открытые в режиме <see langword="Random" />) или номер байта (файлы, открытые в режиме <see langword="Binary" />), с которого начинается запись.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 и не равно –1.</exception>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.String,System.Int64,System.Boolean)">
      <summary>Записывает значения переменных в файл на диске. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="FilePut" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Допустимое имя переменной, содержащей данные для записи на диск.</param>
      <param name="RecordNumber">Необязательный элемент. Номер записи (файлы, открытые в режиме <see langword="Random" />) или номер байта (файлы, открытые в режиме <see langword="Binary" />), с которого начинается запись.</param>
      <param name="StringIsFixedLength">Необязательный элемент. Используется только при записи строки. Указывает, записывать ли в файл двухбайтовый дескриптор длины строки. Значение по умолчанию — <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 и не равно –1.</exception>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.ValueType,System.Int64)">
      <summary>Записывает значения переменных в файл на диске. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="FilePut" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Допустимое имя переменной, содержащей данные для записи на диск.</param>
      <param name="RecordNumber">Необязательный элемент. Номер записи (файлы, открытые в режиме <see langword="Random" />) или номер байта (файлы, открытые в режиме <see langword="Binary" />), с которого начинается запись.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 и не равно –1.</exception>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Object,System.Object,System.Object)">
      <summary>Записывает значения переменных в файл на диске. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="FilePut" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Допустимое имя переменной, содержащей данные для записи на диск.</param>
      <param name="RecordNumber">Необязательный элемент. Номер записи (файлы, открытые в режиме <see langword="Random" />) или номер байта (файлы, открытые в режиме <see langword="Binary" />), с которого начинается запись.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 и не равно –1.</exception>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePutObject(System.Int32,System.Object,System.Int64)">
      <summary>Записывает значения переменных в файл на диске.  Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="FilePutObject" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Допустимое имя переменной, содержащей данные для записи на диск.</param>
      <param name="RecordNumber">Необязательный элемент. Номер записи (файлы, открытые в режиме <see langword="Random" />) или номер байта (файлы, открытые в режиме <see langword="Binary" />), с которого начинается запись.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)">
      <summary>Присваивает ширину строки вывода в файле, открытом функцией <see langword="FileOpen" />.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="RecordWidth">Обязательный. Числовое выражение в диапазоне от 0 до 255 включительно, которое показывает, сколько знаков появится в строке перед началом новой строки. Если параметр <paramref name="RecordWidth" /> равен 0, ограничения на длину строки не устанавливаются. Значение по умолчанию для <paramref name="RecordWidth" /> равно 0.</param>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FreeFile">
      <summary>Возвращает значение типа <see langword="Integer" />, представляющее следующий номер файла, доступный для использования функцией <see langword="FileOpen" />.</summary>
      <exception cref="T:System.IO.IOException">Используется больше 255 файлов.</exception>
      <returns>Целочисленное значение, представляющее следующий номер файла, доступный для использования функцией <see langword="FileOpen" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)">
      <summary>Возвращает значение <see langword="FileAttribute" />, представляющее атрибуты файла, каталога или папки. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="FileAttribute" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="PathName">Обязательный. Строковое выражение, определяющее имя файла, каталога или папки. Выражение <paramref name="PathName" /> может содержать имя каталога или папки и имя диска.</param>
      <exception cref="T:System.IO.IOException">Параметр <paramref name="Pathname" /> недопустим или содержит подстановочный знак.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Указанный файл не существует.</exception>
      <returns>Побитовое сочетание значений перечисления.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Boolean@)">
      <summary>Читает данные из открытого последовательного файла и присваивает данные переменным.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Переменная, которой присваиваются значения, считанные из файла. Не может быть массивом или объектной переменной.</param>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Byte@)">
      <summary>Читает данные из открытого последовательного файла и присваивает данные переменным.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Переменная, которой присваиваются значения, считанные из файла. Не может быть массивом или объектной переменной.</param>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Char@)">
      <summary>Читает данные из открытого последовательного файла и присваивает данные переменным.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Переменная, которой присваиваются значения, считанные из файла. Не может быть массивом или объектной переменной.</param>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.DateTime@)">
      <summary>Читает данные из открытого последовательного файла и присваивает данные переменным.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Переменная, которой присваиваются значения, считанные из файла. Не может быть массивом или объектной переменной.</param>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Decimal@)">
      <summary>Читает данные из открытого последовательного файла и присваивает данные переменным.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Переменная, которой присваиваются значения, считанные из файла. Не может быть массивом или объектной переменной.</param>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Double@)">
      <summary>Читает данные из открытого последовательного файла и присваивает данные переменным.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Переменная, которой присваиваются значения, считанные из файла. Не может быть массивом или объектной переменной.</param>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int16@)">
      <summary>Читает данные из открытого последовательного файла и присваивает данные переменным.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Переменная, которой присваиваются значения, считанные из файла. Не может быть массивом или объектной переменной.</param>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int32@)">
      <summary>Читает данные из открытого последовательного файла и присваивает данные переменным.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Переменная, которой присваиваются значения, считанные из файла. Не может быть массивом или объектной переменной.</param>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int64@)">
      <summary>Читает данные из открытого последовательного файла и присваивает данные переменным.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Переменная, которой присваиваются значения, считанные из файла. Не может быть массивом или объектной переменной.</param>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Object@)">
      <summary>Читает данные из открытого последовательного файла и присваивает данные переменным.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Переменная, которой присваиваются значения, считанные из файла. Не может быть массивом или объектной переменной.</param>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Single@)">
      <summary>Читает данные из открытого последовательного файла и присваивает данные переменным.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Переменная, которой присваиваются значения, считанные из файла. Не может быть массивом или объектной переменной.</param>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.String@)">
      <summary>Читает данные из открытого последовательного файла и присваивает данные переменным.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Value">Обязательный. Переменная, которой присваиваются значения, считанные из файла. Не может быть массивом или объектной переменной.</param>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)">
      <summary>Возвращает значение <see langword="String" />, содержащее знаки из файла, открытого в режиме <see langword="Input" /> или <see langword="Binary" />. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="InputString" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="CharCount">Обязательный. Любое допустимое числовое выражение, указывающее число знаков, которые надо прочитать.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> — не существует.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="CharCount" />&lt; 0 или &gt; 214.</exception>
      <returns>Строка, содержащая знаки из файла, открытого в режиме <see langword="Input" /> или <see langword="Binary" />. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="InputString" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)">
      <summary>Удаляет файлы с диска. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="Kill" />. Дополнительные сведения см. в разделе <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="PathName">Обязательный. Строковое выражение, определяющее файлы, которые должны быть удалены. Выражение <paramref name="PathName" /> может содержать имя каталога или папки и имя диска.</param>
      <exception cref="T:System.IO.IOException">Удаляемые файлы открыты.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Удаляемые файлы не найдены.</exception>
      <exception cref="T:System.Security.SecurityException">В разрешении отказано.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.LineInput(System.Int32)">
      <summary>Читает одну строку из открытого последовательного файла и присваивает ее переменной типа <see langword="String" />.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <exception cref="T:System.IO.EndOfStreamException">Достигнут конец файла.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> — не существует.</exception>
      <returns>Читает одну строку из открытого последовательного файла и присваивает ее переменной типа <see langword="String" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)">
      <summary>Возвращает значение, указывающее текущую позицию для ввода-вывода в открытом файле.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла типа <see langword="Integer" />.</param>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
      <returns>Текущая позиция чтения или записи в открытом файле.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32)">
      <summary>Управляет доступом других процессов ко всему файлу, открытому с помощью функции <see langword="Open" />, или к его части. Средства из пространства имен <see langword="My" /> обеспечивают большую производительность и быстродействие операций файлового ввода-вывода, чем методы <see langword="Lock" /> и <see langword="Unlock" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64)">
      <summary>Управляет доступом других процессов ко всему файлу, открытому с помощью функции <see langword="Open" />, или к его части. Средства из пространства имен <see langword="My" /> обеспечивают большую производительность и быстродействие операций файлового ввода-вывода, чем методы <see langword="Lock" /> и <see langword="Unlock" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Record">Необязательный элемент. Номер единственной записи или единственного байта для блокировки или разблокировки.</param>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64,System.Int64)">
      <summary>Управляет доступом других процессов ко всему файлу, открытому с помощью функции <see langword="Open" />, или к его части. Средства из пространства имен <see langword="My" /> обеспечивают большую производительность и быстродействие операций файлового ввода-вывода, чем методы <see langword="Lock" /> и <see langword="Unlock" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="FromRecord">Необязательный элемент. Номер первой записи или первого байта, начиная с которого файл открывается или закрывается для доступа.</param>
      <param name="ToRecord">Необязательный элемент. Номер последней записи или последнего байта, которыми заканчивается часть файла, открытая или закрытая для доступа.</param>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)">
      <summary>Возвращает размер (в байтах) файла, открытого функцией <see langword="FileOpen" />. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="LOF" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Целое число, содержащее допустимый номер файла.</param>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
      <returns>Размер (в байтах) файла, открытого функцией <see langword="FileOpen" />. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="LOF" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)">
      <summary>Создает каталог. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="MkDir" />. Для получения дополнительной информации см. <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)" />.</summary>
      <param name="Path">Обязательный. Строковое выражение, задающее создаваемый каталог. Параметр <paramref name="Path" /> может содержать метку диска. Если диск не указан, <see langword="MkDir" /> создает каталог на текущем диске.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Path" /> не указан или пуст.</exception>
      <exception cref="T:System.Security.SecurityException">В разрешении отказано.</exception>
      <exception cref="T:System.IO.IOException">Каталог уже существует.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])">
      <summary>Записывает отформатированные данные в последовательный файл.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Output">Необязательный элемент. Ноль или больше выражений с разделителями-запятыми для записи в файл.  
  
Параметры аргумента <paramref name="Output" />: 
 <see langword="T:System.IO.IOException" />: недопустимый режим файла.  
  
 <see langword="T:System.IO.IOException" />: <paramref name="FileNumber" /> не существует.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])">
      <summary>Записывает отформатированные данные в последовательный файл.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Output">Необязательный элемент. Ноль или больше выражений с разделителями-запятыми для записи в файл.  
  
Параметры аргумента <paramref name="Output" />: 
 <see langword="T:System.IO.IOException" />: недопустимый режим файла.  
  
 <see langword="T:System.IO.IOException" />: <paramref name="FileNumber" /> не существует.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Rename(System.String,System.String)">
      <summary>Переименовывает файл или каталог на диске. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="Rename" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="OldPath">Обязательный. Строковое выражение, указывающее имя и расположение существующего файла. Выражение <paramref name="OldPath" /> может содержать имя каталога и метку диска для файла.</param>
      <param name="NewPath">Обязательный. Строковое выражение, указывающее имя и расположение нового файла. Параметр <paramref name="NewPath" /> может содержать имя каталога и метку диска для нового местонахождения файла. Имя файла, заданного параметром <paramref name="NewPath" /> не может быть именем существующего файла.</param>
      <exception cref="T:System.ArgumentException">Недопустимый путь.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл <paramref name="OldPath" /> не существует.</exception>
      <exception cref="T:System.IO.IOException">Нельзя переименовать с указанием другого диска.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Reset">
      <summary>Закрывает все файлы на диске, открытые функцией <see langword="FileOpen" />. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="Reset" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)">
      <summary>Удаляет существующий каталог. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="RmDir" />. Для получения дополнительной информации см. <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory" />.</summary>
      <param name="Path">Обязательный. Строковое выражение, определяющее удаляемый каталог или папку. Параметр <paramref name="Path" /> может содержать метку диска. Если диск не указан, <see langword="RmDir" /> удаляет каталог на текущем диске.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Path" /> не указан или пуст.</exception>
      <exception cref="T:System.IO.IOException">Удаляемый каталог содержит файлы.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Каталог не существует.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32)">
      <summary>Возвращает значение типа <see langword="Long" />, указывающее текущую позицию ввода-вывода в файле, открытом функцией <see langword="FileOpen" />, или устанавливает позицию для следующей операции ввода-вывода в файле, открытом с помощью функции <see langword="FileOpen" />. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="Seek" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Значение <see langword="Integer" />, содержащее допустимый номер файла.</param>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
      <returns>Значение типа <see langword="Long" />, указывающее текущую позицию ввода-вывода в файле, открытом функцией <see langword="FileOpen" />, или устанавливает позицию для следующей операции ввода-вывода в файле, открытом с помощью функции <see langword="FileOpen" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32,System.Int64)">
      <summary>Возвращает значение типа <see langword="Long" />, указывающее текущую позицию ввода-вывода в файле, открытом функцией <see langword="FileOpen" />, или устанавливает позицию для следующей операции ввода-вывода в файле, открытом с помощью функции <see langword="FileOpen" />. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="Seek" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Значение <see langword="Integer" />, содержащее допустимый номер файла.</param>
      <param name="Position">Обязательный. Число в диапазоне от 1 до 2 147 483 647 включительно, определяющее место следующей операции чтения/записи.</param>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)">
      <summary>Устанавливает атрибуты файла. Функция <see langword="My" /> обеспечивает более высокие показатели производительности и быстродействия в операциях файлового ввода-вывода в сравнении с <see langword="SetAttr" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="PathName">Обязательный. Строковое выражение, определяющее имя файла. <paramref name="PathName" /> может включать каталог или папку, а также диск.</param>
      <param name="Attributes">Обязательный. Константа или числовое выражение, сумма которого определяет атрибуты файла.</param>
      <exception cref="T:System.ArgumentException">Недопустимый тип <paramref name="Attribute" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)">
      <summary>Используется с функцией <see langword="Print" /> или <see langword="PrintLine" /> для установки позиции вывода.</summary>
      <param name="Count">Обязательный. Число пробелов, вставляемых перед отображением или печатью очередного выражения в списке.</param>
      <returns>Используется с функцией <see langword="Print" /> или <see langword="PrintLine" /> для установки позиции вывода.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.TAB">
      <summary>Используется с функциями <see langword="Print" /> или <see langword="PrintLine" /> для установки позиции вывода.</summary>
      <returns>Используется с функциями <see langword="Print" /> или <see langword="PrintLine" /> для установки позиции вывода.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.TAB(System.Int16)">
      <summary>Используется с функциями <see langword="Print" /> или <see langword="PrintLine" /> для установки позиции вывода.</summary>
      <param name="Column">Необязательный элемент. Номер столбца, в который помещается курсор перед отображением или печатью следующего выражения из списка. Если этот параметр опущен, <see langword="TAB" /> перемещает положение курсора в начало следующей зоны печати.</param>
      <returns>Используется с функциями <see langword="Print" /> или <see langword="PrintLine" /> для установки позиции вывода.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32)">
      <summary>Управляет доступом других процессов ко всему файлу, открытому с помощью функции <see langword="Open" />, или к его части. Средства из пространства имен <see langword="My" /> обеспечивают большую производительность и быстродействие операций файлового ввода-вывода, чем методы <see langword="Lock" /> и <see langword="Unlock" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64)">
      <summary>Управляет доступом других процессов ко всему файлу, открытому с помощью функции <see langword="Open" />, или к его части. Средства из пространства имен <see langword="My" /> обеспечивают большую производительность и быстродействие операций файлового ввода-вывода, чем методы <see langword="Lock" /> и <see langword="Unlock" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="Record">Необязательный элемент. Номер единственной записи или единственного байта для блокировки или разблокировки.</param>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64,System.Int64)">
      <summary>Управляет доступом других процессов ко всему файлу, открытому с помощью функции <see langword="Open" />, или к его части. Средства из пространства имен <see langword="My" /> обеспечивают большую производительность и быстродействие операций файлового ввода-вывода, чем методы <see langword="Lock" /> и <see langword="Unlock" />. Для получения дополнительной информации см. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Обязательный. Любой допустимый номер файла.</param>
      <param name="FromRecord">Необязательный элемент. Номер первой записи или первого байта, начиная с которого файл открывается или закрывается для доступа.</param>
      <param name="ToRecord">Необязательный элемент. Номер последней записи или последнего байта, которыми заканчивается часть файла, открытая или закрытая для доступа.</param>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])">
      <summary>Записывает данные в последовательный файл. Данные, записанные с использованием <see langword="Write" />, обычно считываются с помощью <see langword="Input" />.</summary>
      <param name="FileNumber">Обязательный. Выражение <see langword="Integer" />, содержащее любой допустимый номер файла.</param>
      <param name="Output">Необязательный элемент. Одно или несколько выражений с разделителями-запятыми, которые нужно записать в файл.</param>
      <exception cref="T:System.IO.IOException">Недопустимый режим файла.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])">
      <summary>Записывает данные в последовательный файл. Данные, записанные с использованием <see langword="Write" />, обычно считываются с помощью <see langword="Input" />.</summary>
      <param name="FileNumber">Обязательный. Выражение <see langword="Integer" />, содержащее любой допустимый номер файла.</param>
      <param name="Output">Необязательный элемент. Одно или несколько выражений с разделителями-запятыми, которые нужно записать в файл.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Financial">
      <summary>В модуле <see langword="Financial" /> содержатся процедуры, используемые для выполнения финансовых операций.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>Возвращает значение, определяющее амортизацию актива за указанный период времени с помощью метода двойного уменьшения остатка или другого указанного метода.</summary>
      <param name="Cost">Обязательный. Начальная стоимость актива.</param>
      <param name="Salvage">Обязательный. Стоимость актива на момент окончания срока его эксплуатации.</param>
      <param name="Life">Обязательный. Срок эксплуатации актива.</param>
      <param name="Period">Обязательный. Период расчета амортизации актива.</param>
      <param name="Factor">Необязательный элемент. Коэффициент уменьшения остатка. Если значение не указано, то предполагается 2 (метод двойного уменьшения остатка).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Factor" />&lt;= 0, <paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &lt; = 0 или <paramref name="Period" /> &gt; <paramref name="Life" /> .</exception>
      <returns>Значение, определяющее амортизацию актива за указанный период времени с помощью метода двойного уменьшения остатка или другого указанного метода.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Возвращает значение, указывающее будущее значение аннуитета, рассчитываемого на основе периодических фиксированных выплат и постоянной процентной ставки.</summary>
      <param name="Rate">Обязательный. Процентная ставка за период. Например, при взятии ссуды на автомобиль под годовую процентную ставку (APR) размером 10% с ежемесячными выплатами ставка за период равна отношению 0,1/12 или 0,0083.</param>
      <param name="NPer">Обязательный. Общее количество периодов платежей аннуитета. Например, при ежемесячных выплатах ссуды за автомобиль на протяжении 4 лет общее количество периодов выплат будет равно 4 x 12 (или 48).</param>
      <param name="Pmt">Обязательный. Платеж за каждый период. Обычно платежи содержат основную сумму и проценты, которые не изменяются на протяжении периода действия аннуитета.</param>
      <param name="PV">Необязательный элемент. Приведенная (нынешняя) стоимость, или общая сумма, равноценная на данный момент серии будущих выплат. Например, если для покупки автомобиля взят заем, то эта сумма представляет собой текущее значение предстоящих ежемесячных платежей за автомобиль. Если этот аргумент опущен, используется значение 0.</param>
      <param name="Due">Необязательный элемент. Объект типа <see cref="T:Microsoft.VisualBasic.DueDate" />, указывающий время выплат. Этот аргумент должен равняться либо <see langword="DueDate.EndOfPeriod" />, если выплаты должны производиться в конце периода, либо <see langword="DueDate.BegOfPeriod" /> в случае оплаты в начале периода. Если аргумент не указан, принимается значение <see langword="DueDate.EndOfPeriod" />.</param>
      <returns>Будущее значение аннуитета, рассчитываемое на основе периодических фиксированных выплат и постоянной процентной ставки.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Возвращает значение, определяющее процентный платеж аннуитета, рассчитываемый на основе периодических фиксированных выплат и постоянной процентной ставки.</summary>
      <param name="Rate">Обязательный. Процентная ставка за период. Например, при взятии ссуды на автомобиль под годовую процентную ставку (APR) размером 10% с ежемесячными выплатами ставка за период равна отношению 0,1/12 или 0,0083.</param>
      <param name="Per">Обязательный. Расчетный период в интервале от 1 до <paramref name="NPer" />.</param>
      <param name="NPer">Обязательный. Общее количество периодов платежей аннуитета. Например, при ежемесячных выплатах ссуды за автомобиль на протяжении 4 лет общее количество периодов выплат будет равно 4 x 12 (или 48).</param>
      <param name="PV">Обязательный. Значение, задающее текущую сумму (или значение на сегодняшний день) серии будущих платежей или поступлений. Например, если для покупки автомобиля взят заем, то эта сумма представляет собой текущее значение предстоящих ежемесячных платежей за автомобиль.</param>
      <param name="FV">Необязательный элемент. Значение, задающее требуемую будущую сумму или баланс наличности после уплаты последнего платежа. Например, будущее значение ссуды равно $0, поcкольку такова будет ее величина после последней выплаты. Но если требуется собрать за 18 лет сумму в $50 000 на образование детей, то будущая сумма будет равна $50 000. Если этот аргумент опущен, используется значение 0.</param>
      <param name="Due">Необязательный элемент. Объект типа <see cref="T:Microsoft.VisualBasic.DueDate" />, указывающий время выплат. Этот аргумент должен равняться либо <c>DueDate.EndOfPeriod</c>, если выплаты должны производиться в конце периода, либо <c>DueDate.BegOfPeriod</c> в случае оплаты в начале периода. Если аргумент не задан, используется значение <c>DueDate.EndOfPeriod</c>.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Per" />&lt;= 0 или <paramref name="Per" /> &gt;<paramref name="NPer" /></exception>
      <returns>Процентный платеж аннуитета, рассчитываемый на основе периодических фиксированных выплат и постоянной процентной ставки.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)">
      <summary>Возвращает значение, определяющее внутреннюю ставку доходности для ряда периодических денежных потоков (платежей и поступлений).</summary>
      <param name="ValueArray">Обязательный. Массив значений типа <see cref="T:System.Double" />, определяющий значения денежных операций. Этот массив должен содержать по крайней мере одно отрицательное значение (платеж) и одно положительное значение (поступление).</param>
      <param name="Guess">Необязательный элемент. Объект, задающий значение, которое будет возвращено функцией <see langword="IRR" />. Если этот параметр опущен, используется значение <paramref name="Guess" />, равное 0,1 (10 процентам).</param>
      <exception cref="T:System.ArgumentException">Недопустимые значения аргумента массива или <paramref name="Guess" /> &lt; =-1.</exception>
      <returns>Внутренняя ставка доходности для ряда периодических денежных потоков (платежей и поступлений).</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)">
      <summary>Возвращает значение, определяющее внутреннюю ставку доходности для ряда периодических денежных потоков (платежей и поступлений).</summary>
      <param name="ValueArray">Обязательный. Массив значений типа <see cref="T:System.Double" />, определяющий значения денежных операций. Этот массив должен содержать по крайней мере одно отрицательное значение (платеж) и одно положительное значение (поступление).</param>
      <param name="FinanceRate">Обязательный. Значение, определяющее процентную ставку оплаты как стоимость финансирования.</param>
      <param name="ReinvestRate">Обязательный. Значение, определяющее процентную ставку доходов от реинвестирования денежных средств.</param>
      <exception cref="T:System.ArgumentException">Ранг <paramref name="ValueArray" /> не равен 1, <paramref name="FinanceRate" /> =-1, или <paramref name="ReinvestRate" /> =-1</exception>
      <exception cref="T:System.DivideByZeroException">Произошло деление на ноль.</exception>
      <returns>Измененная внутренняя ставка доходности для ряда периодических денежных потоков (платежей и поступлений).</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Возвращает значение, определяющее число периодов выплат аннуитета, рассчитываемое на основе периодических фиксированных платежей и постоянной процентной ставки.</summary>
      <param name="Rate">Обязательный. Процентная ставка за период. Например, при взятии ссуды на автомобиль под годовую процентную ставку (APR) размером 10% с ежемесячными выплатами ставка за период равна отношению 0,1/12 или 0,0083.</param>
      <param name="Pmt">Обязательный. Платеж за каждый период. Обычно платежи содержат основную сумму и проценты, которые не изменяются на протяжении периода действия аннуитета.</param>
      <param name="PV">Обязательный. Значение, задающее текущую сумму (или значение на сегодняшний день) серии будущих платежей или поступлений. Например, если для покупки автомобиля взят заем, то эта сумма представляет собой текущее значение предстоящих ежемесячных платежей за автомобиль.</param>
      <param name="FV">Необязательный элемент. Значение, задающее требуемую будущую сумму или баланс наличности после уплаты последнего платежа. Например, будущее значение ссуды равно $0, поcкольку такова будет ее величина после последней выплаты. Но если требуется собрать за 18 лет сумму в $50 000 на образование детей, то будущая сумма будет равна $50 000. Если этот аргумент опущен, используется значение 0.</param>
      <param name="Due">Необязательный элемент. Объект типа <see cref="T:Microsoft.VisualBasic.DueDate" />, указывающий время выплат. Этот аргумент должен равняться либо <c>DueDate.EndOfPeriod</c>, если выплаты должны производиться в конце периода, либо <c>DueDate.BegOfPeriod</c> в случае оплаты в начале периода. Если аргумент не задан, используется значение <c>DueDate.EndOfPeriod</c>.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Rate" /> = 0 и <paramref name="Pmt" /> = 0</exception>
      <returns>Число периодов выплат аннуитета, рассчитываемое на основе периодических фиксированных платежей и постоянной процентной ставки.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)">
      <summary>Возвращает значение, определяющее величину чистой приведенной стоимости инвестирования на основе ряда периодических денежных потоков (платежей и поступлений) и учетной ставки.</summary>
      <param name="Rate">Обязательный. Представленное в виде десятичного числа значение, задающее размер учетной ставки за период времени.</param>
      <param name="ValueArray">Обязательный. Массив значений типа <see cref="T:System.Double" />, определяющий значения денежных операций. Этот массив должен содержать по крайней мере одно отрицательное значение (платеж) и одно положительное значение (поступление).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="ValueArray" />имеет значение <see langword="Nothing" /> , ранг <paramref name="ValueArray" /> &lt; &gt; 1 или <paramref name="Rate" /> =-1</exception>
      <returns>Значение, определяющее величину чистой приведенной стоимости инвестирования на основе ряда периодических денежных потоков (платежей и поступлений) и учетной ставки.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Возвращает значение, определяющее платеж по аннуитету на основе периодических фиксированных платежей и постоянной процентной ставки.</summary>
      <param name="Rate">Обязательный. Процентная ставка за период. Например, при взятии ссуды на автомобиль под годовую процентную ставку (APR) размером 10% с ежемесячными выплатами ставка за период равна отношению 0,1/12 или 0,0083.</param>
      <param name="NPer">Обязательный. Общее количество периодов платежей аннуитета. Например, при ежемесячных выплатах ссуды за автомобиль на протяжении 4 лет общее количество периодов выплат будет равно 4 * 12 (или 48).</param>
      <param name="PV">Обязательный. Значение, определяющее текущую стоимость (или общую сумму) платежей, которые должны быть уплачены в будущем. Например, если для покупки автомобиля взят заем, то эта сумма представляет собой текущее значение предстоящих ежемесячных платежей за автомобиль.</param>
      <param name="FV">Необязательный элемент. Значение, задающее требуемую будущую сумму или баланс наличности после уплаты последнего платежа. Например, будущее значение ссуды равно $0, поcкольку такова будет ее величина после последней выплаты. Но если требуется собрать за 18 лет сумму в $50 000 на образование детей, то будущая сумма будет равна $50 000. Если этот аргумент опущен, используется значение 0.</param>
      <param name="Due">Необязательный элемент. Объект типа <see cref="T:Microsoft.VisualBasic.DueDate" />, указывающий время выплат. Этот аргумент должен равняться либо <c>DueDate.EndOfPeriod</c>, если выплаты должны производиться в конце периода, либо <c>DueDate.BegOfPeriod</c> в случае оплаты в начале периода. Если аргумент не задан, используется значение <c>DueDate.EndOfPeriod</c>.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="NPer" /> = 0.</exception>
      <returns>Платеж по аннуитету на основе периодических фиксированных платежей и постоянной процентной ставки.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Возвращает значение, определяющее главный платеж аннуитета, рассчитываемый на основе периодических фиксированных выплат и постоянной процентной ставки.</summary>
      <param name="Rate">Обязательный. Процентная ставка за период. Например, при взятии ссуды на автомобиль под годовую процентную ставку (APR) размером 10% с ежемесячными выплатами ставка за период равна отношению 0,1/12 или 0,0083.</param>
      <param name="Per">Обязательный. Расчетный период в интервале от 1 до <paramref name="NPer" />.</param>
      <param name="NPer">Обязательный. Общее количество периодов платежей аннуитета. Например, при ежемесячных выплатах ссуды за автомобиль на протяжении 4 лет общее количество периодов выплат будет равно 4 x 12 (или 48).</param>
      <param name="PV">Обязательный. Текущее значение из серии будущих платежей или поступлений. Например, если для покупки автомобиля взят заем, то эта сумма представляет собой текущее значение предстоящих ежемесячных платежей за автомобиль.</param>
      <param name="FV">Необязательный элемент. Значение, задающее требуемую будущую сумму или баланс наличности после уплаты последнего платежа. Например, будущее значение ссуды равно $0, поcкольку такова будет ее величина после последней выплаты. Но если требуется собрать за 18 лет сумму в $50 000 на образование детей, то будущая сумма будет равна $50 000. Если этот аргумент опущен, используется значение 0.</param>
      <param name="Due">Необязательный элемент. Объект типа <see cref="T:Microsoft.VisualBasic.DueDate" />, указывающий время выплат. Этот аргумент должен равняться либо <c>DueDate.EndOfPeriod</c>, если выплаты должны производиться в конце периода, либо <c>DueDate.BegOfPeriod</c> в случае оплаты в начале периода. Если аргумент не задан, используется значение <c>DueDate.EndOfPeriod</c>.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Per" />&lt;= 0 или <paramref name="Per" /> &gt; <paramref name="NPer" />.</exception>
      <returns>Главный платеж аннуитета, рассчитываемый на основе периодических фиксированных выплат и постоянной процентной ставки.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Возвращает значение, определяющее текущее значение аннуитета на основе фиксированных периодических платежей и постоянной процентной ставки.</summary>
      <param name="Rate">Обязательный. Процентная ставка за период. Например, при взятии ссуды на автомобиль под годовую процентную ставку (APR) размером 10% с ежемесячными выплатами ставка за период равна отношению 0,1/12 или 0,0083.</param>
      <param name="NPer">Обязательный. Общее количество периодов платежей аннуитета. Например, при ежемесячных выплатах ссуды за автомобиль на протяжении 4 лет количество периодов выплат будет равно 4 * 12 (или 48).</param>
      <param name="Pmt">Обязательный. Платеж за каждый период. Обычно платежи содержат основную сумму и проценты, которые не изменяются на протяжении периода действия аннуитета.</param>
      <param name="FV">Необязательный элемент. Значение, задающее требуемую будущую сумму или баланс наличности после уплаты последнего платежа. Например, будущее значение ссуды равно $0, поcкольку такова будет ее величина после последней выплаты. Но если требуется собрать за 18 лет сумму в $50 000 на образование детей, то будущая сумма будет равна $50 000. Если этот аргумент опущен, используется значение 0.</param>
      <param name="Due">Необязательный элемент. Объект типа <see cref="T:Microsoft.VisualBasic.DueDate" />, указывающий время выплат. Этот аргумент должен равняться либо <c>DueDate.EndOfPeriod</c>, если выплаты должны производиться в конце периода, либо <c>DueDate.BegOfPeriod</c> в случае оплаты в начале периода. Если аргумент не задан, используется значение <c>DueDate.EndOfPeriod</c>.</param>
      <returns>Текущее значение аннуитета на основе фиксированных периодических платежей и постоянной процентной ставки.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)">
      <summary>Возвращает значение, определяющее процентную ставку за период для аннуитета.</summary>
      <param name="NPer">Обязательный. Общее количество периодов платежей аннуитета. Например, при ежемесячных выплатах ссуды за автомобиль на протяжении 4 лет общее количество периодов оплаты будет равно 4 x 12 (или 48).</param>
      <param name="Pmt">Обязательный. Платеж за каждый период. Обычно платежи содержат основную сумму и проценты, которые не изменяются на протяжении периода действия аннуитета.</param>
      <param name="PV">Обязательный. Значение, задающее текущую сумму (или значение на сегодняшний день) серии будущих платежей или поступлений. Например, если для покупки автомобиля взят заем, то эта сумма представляет собой текущее значение предстоящих ежемесячных платежей за автомобиль.</param>
      <param name="FV">Необязательный элемент. Значение, задающее требуемую будущую сумму или баланс наличности после уплаты последнего платежа. Например, будущее значение ссуды равно $0, поcкольку такова будет ее величина после последней выплаты. Но если требуется собрать за 18 лет сумму в $50 000 на образование детей, то будущая сумма будет равна $50 000. Если этот аргумент опущен, используется значение 0.</param>
      <param name="Due">Необязательный элемент. Объект типа <see cref="T:Microsoft.VisualBasic.DueDate" />, указывающий время выплат. Этот аргумент должен равняться либо <c>DueDate.EndOfPeriod</c>, если выплаты должны производиться в конце периода, либо <c>DueDate.BegOfPeriod</c> в случае оплаты в начале периода. Если аргумент не задан, используется значение <c>DueDate.EndOfPeriod</c>.</param>
      <param name="Guess">Необязательный элемент. Оцениваемое значение, возвращаемое функцией <see langword="Rate" />. Если этот параметр опущен, используется значение <paramref name="Guess" />, равное 0,1 (10 процентам).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="NPer" />&lt;= 0.</exception>
      <returns>Процентная ставка за период для аннуитета.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)">
      <summary>Возвращает значение, определяющее равномерную амортизацию актива за один период времени.</summary>
      <param name="Cost">Обязательный. Начальная стоимость актива.</param>
      <param name="Salvage">Обязательный. Стоимость актива на момент окончания срока его эксплуатации.</param>
      <param name="Life">Обязательный. Срок эксплуатации актива.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Life" /> = 0.</exception>
      <returns>Равномерная амортизация актива за один период времени.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)">
      <summary>Возвращает значение, определяющее величину ускоренной амортизации актива за указанный период времени.</summary>
      <param name="Cost">Обязательный. Начальная стоимость актива.</param>
      <param name="Salvage">Обязательный. Стоимость актива на момент окончания срока его эксплуатации.</param>
      <param name="Life">Обязательный. Срок эксплуатации актива.</param>
      <param name="Period">Обязательный. Период расчета амортизации актива.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Salvage" />&lt;0, <paramref name="Period" /> &gt; <paramref name="Life" />, или <paramref name="Period" /> &lt; = 0.</exception>
      <returns>Величина ускоренной амортизации актива за указанный период времени.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FirstDayOfWeek">
      <summary>Указывает первый день недели для использования при вызове функций для работы с датами.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Friday">
      <summary>Friday (пятница). Этот элемент эквивалентен константе Visual Basic <see langword="vbFriday" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Monday">
      <summary>Monday (понедельник). Этот элемент эквивалентен константе Visual Basic <see langword="vbMonday" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Saturday">
      <summary>Saturday (суббота). Этот элемент эквивалентен константе Visual Basic <see langword="vbSaturday" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday">
      <summary>Sunday (воскресенье). Этот элемент эквивалентен константе Visual Basic <see langword="vbSunday" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.System">
      <summary>Первый день недели, в соответствии с параметрами системы. Этот элемент эквивалентен константе Visual Basic <see langword="vbUseSystemDayOfWeek" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Thursday">
      <summary>Thursday (четверг). Этот элемент эквивалентен константе Visual Basic <see langword="vbThursday" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Tuesday">
      <summary>Tuesday (вторник). Этот элемент эквивалентен константе Visual Basic <see langword="vbTuesday" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Wednesday">
      <summary>Wednesday (среда). Этот элемент эквивалентен константе Visual Basic <see langword="vbWednesday" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FirstWeekOfYear">
      <summary>Указывает первую неделю года для использования при вызове функций для работы с датами.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.FirstFourDays">
      <summary>Первая неделя, в которую попадают как минимум четыре дня нового года. Этот элемент эквивалентен константе <see langword="vbFirstFourDays" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.FirstFullWeek">
      <summary>Первая полная неделя года. Этот элемент эквивалентен константе <see langword="vbFirstFullWeek" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1">
      <summary>Неделя, на которую попадает день 1 января (по умолчанию). Этот элемент эквивалентен константе <see langword="vbFirstJan1" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.System">
      <summary>Неделя, являющаяся первой в году согласно параметрам системы. Этот элемент эквивалентен константе <see langword="vbUseSystem" />в языке Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.HideModuleNameAttribute">
      <summary>Атрибут <see langword="HideModuleNameAttribute" /> при применении к модулю позволяет обращаться к членам модуля, используя только квалификацию, необходимую для модуля.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.HideModuleNameAttribute.#ctor">
      <summary>Инициализирует новый экземпляр атрибута <see cref="T:Microsoft.VisualBasic.HideModuleNameAttribute" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Information">
      <summary>В модуле <see langword="Information" /> содержатся процедуры, используемые для возврата, тестирования и проверки информации.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.Erl">
      <summary>Возвращает целое число, указывающее номер строки последнего выполненного оператора. Только для чтения.</summary>
      <returns>Возвращает целое число, указывающее номер строки последнего выполненного оператора. Только для чтения.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.Err">
      <summary>Содержит сведения об ошибках во время выполнения.</summary>
      <returns>Содержит сведения об ошибках во время выполнения.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsArray(System.Object)">
      <summary>Возвращает значение типа <see langword="Boolean" />, показывающее, указывает ли переменная на массив.</summary>
      <param name="VarName">Обязательный. Переменная <see langword="Object" />.</param>
      <returns>Возвращает значение типа <see langword="Boolean" />, показывающее, указывает ли переменная на массив.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsDate(System.Object)">
      <summary>Возвращает значение <see langword="Boolean" />, показывающее, представляет ли выражение допустимое значение <see langword="Date" />.</summary>
      <param name="Expression">Обязательный. Выражение <see langword="Object" />.</param>
      <returns>Возвращает значение <see langword="Boolean" />, показывающее, представляет ли выражение допустимое значение <see langword="Date" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)">
      <summary>Возвращает значение <see langword="Boolean" />, показывающее, относится ли выражение к классу <see cref="T:System.DBNull" />.</summary>
      <param name="Expression">Обязательный. Выражение <see langword="Object" />.</param>
      <returns>Возвращает значение <see langword="Boolean" />, показывающее, относится ли выражение к классу <see cref="T:System.DBNull" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsError(System.Object)">
      <summary>Возвращает значение типа <see langword="Boolean" />, указывающее, является ли выражение типом исключения.</summary>
      <param name="Expression">Обязательный. Выражение <see langword="Object" />.</param>
      <returns>Возвращает значение типа <see langword="Boolean" />, указывающее, является ли выражение типом исключения.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)">
      <summary>Возвращает значение <see langword="Boolean" />, показывающее отсутствует ли для выражения назначенный объект.</summary>
      <param name="Expression">Обязательный. Выражение <see langword="Object" />.</param>
      <returns>Возвращает значение <see langword="Boolean" />, показывающее отсутствует ли для выражения назначенный объект.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
      <summary>Возвращает значение типа <see langword="Boolean" />, указывающее, может ли выражение обрабатываться как число.</summary>
      <param name="Expression">Обязательный. Выражение <see langword="Object" />.</param>
      <returns>Возвращает значение типа <see langword="Boolean" />, указывающее, может ли выражение обрабатываться как число.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsReference(System.Object)">
      <summary>Возвращает значение <see langword="Boolean" />, показывающее, относится ли выражение к ссылочному типу.</summary>
      <param name="Expression">Обязательный. Выражение <see langword="Object" />.</param>
      <returns>Возвращает значение <see langword="Boolean" />, показывающее, относится ли выражение к ссылочному типу.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
      <summary>Возвращает наименьший доступный индекс для указанного измерения массива.</summary>
      <param name="Array">Обязательный. Массив данных любого типа. Массив, в котором осуществляется поиск минимального индекса измерения.</param>
      <param name="Rank">Необязательный элемент. <see langword="Integer" />. Измерение, для которого возвращается минимальный индекс. Используйте 1 для первого измерения, 2 — для второго и т. д. Если параметр <paramref name="Rank" /> опущен, используется значение 1.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Array" /> имеет значение <see langword="Nothing" />.</exception>
      <exception cref="T:System.RankException">Параметр <paramref name="Rank" /> меньше 1 или <paramref name="Rank" /> превышает ранг <paramref name="Array" />.</exception>
      <returns>
        <see langword="Integer" />. Наименьшее значение, которое может содержать нижний индекс для указанного измерения. После инициализации массива <paramref name="Array" /> метод <see langword="LBound" /> всегда возвращает значение 0, даже если массив не содержит элементов (например, является строкой нулевой длины). Если параметр <paramref name="Array" /> равен <see langword="Nothing" />, <see langword="LBound" /> вызывает исключение <see cref="T:System.ArgumentNullException" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
      <summary>Возвращает значение типа <see langword="Integer" />, представляющее RGB-код цвета, соответствующего указанному номеру цвета.</summary>
      <param name="Color">Обязательный. Целое число от 0 до 15.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="Color" /> находится вне диапазона от 0 до 15 включительно.</exception>
      <returns>Возвращает значение типа <see langword="Integer" />, представляющее RGB-код цвета, соответствующего указанному номеру цвета.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
      <summary>Возвращает значение типа <see langword="Integer" />, представляющее RGB-значение цвета, состоящее из набора красного, зеленого и синего компонентов цвета.</summary>
      <param name="Red">Обязательный. Значение типа <see langword="Integer" /> в диапазоне 0–255 включительно, представляющее интенсивность красного компонента цвета.</param>
      <param name="Green">Обязательный. Значение типа <see langword="Integer" /> в диапазоне 0–255 включительно, представляющее интенсивность зеленого компонента цвета.</param>
      <param name="Blue">Обязательный. Значение типа <see langword="Integer" /> в диапазоне 0–255 включительно, представляющее интенсивность синего компонента цвета.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Green" />, <paramref name="Blue" /> или <paramref name="Red" /> находятся вне диапазона от 0 до 255 включительно.</exception>
      <returns>Возвращает значение типа <see langword="Integer" />, представляющее RGB-значение цвета, состоящее из набора красного, зеленого и синего компонентов цвета.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)">
      <summary>Возвращает значение типа <see langword="String" />, содержащее имя системного типа данных переменной.</summary>
      <param name="VbName">Обязательный. Переменная типа <see langword="String" />, содержащая имя типа Visual Basic.</param>
      <returns>Возвращает значение типа <see langword="String" />, содержащее имя системного типа данных переменной.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
      <summary>Возвращает значение типа <see langword="String" />, содержащее сведения о типе данных переменной.</summary>
      <param name="VarName">Обязательный. Переменная <see langword="Object" />. Если <see langword="Option Strict" /> имеет значение <see langword="Off" />, разрешается передача переменной с любым типом данных, за исключением структуры.</param>
      <returns>Возвращает значение типа <see langword="String" />, содержащее сведения о типе данных переменной.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
      <summary>Возвращает наибольший доступный индекс для указанной размерности массива.</summary>
      <param name="Array">Обязательный. Массив данных любого типа. Массив, в котором осуществляется поиск наибольшего индекса измерения.</param>
      <param name="Rank">Необязательный элемент. <see langword="Integer" />. Измерение, для которого возвращается максимальный индекс. Используйте 1 для первого измерения, 2 — для второго и т. д. Если параметр <paramref name="Rank" /> опущен, используется значение 1.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Array" /> имеет значение <see langword="Nothing" />.</exception>
      <exception cref="T:System.RankException">Параметр <paramref name="Rank" /> меньше 1 или <paramref name="Rank" /> превышает ранг <paramref name="Array" />.</exception>
      <returns>
        <see langword="Integer" />. Может содержать самое большое значение нижнего индекса для указанного измерения. Если массив <paramref name="Array" /> содержит ровно один элемент, метод <see langword="UBound" /> возвращает значение 0. Если массив <paramref name="Array" /> не содержит элементов (например, является строкой нулевой длины), метод <see langword="UBound" /> возвращает значение -1.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
      <summary>Возвращает значение типа <see langword="Integer" />, содержащее классификацию типа данных переменной.</summary>
      <param name="VarName">Обязательный. Переменная <see langword="Object" />. Если <see langword="Option Strict" /> имеет значение <see langword="Off" />, разрешается передача переменной с любым типом данных, за исключением структуры.</param>
      <returns>Возвращает значение типа <see langword="Integer" />, содержащее классификацию типа данных переменной.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)">
      <summary>Возвращает значение типа <see langword="String" />, содержащее имя типа данных Visual Basic для переменной.</summary>
      <param name="UrtName">Обязательный. Переменная типа <see langword="String" />, содержащая имя типа, используемое средой CLR.</param>
      <returns>Возвращает значение типа <see langword="String" />, содержащее имя типа данных Visual Basic для переменной.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Interaction">
      <summary>В модуле <see langword="Interaction" /> содержатся процедуры, используемые для взаимодействия с объектами, приложениями и системами.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
      <summary>Активирует приложение, которое уже выполняется.</summary>
      <param name="ProcessId">Значение типа <see langword="Integer" />, задающее номер идентификатора процесса Win32, назначенного процессу. Можно использовать идентификатор, который возвращает <see cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />, если он не равен нулю.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
      <summary>Активирует приложение, которое уже выполняется.</summary>
      <param name="Title">Выражение типа <see langword="String" />, задающее заголовок для строки заголовка активируемого окна приложения. Можно использовать название, присваимое приложению при запуске.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Beep">
      <summary>Издает звуковой сигнал с помощью встроенного динамика компьютера.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
      <summary>Выполняет метод объекта или устанавливает/возвращает значение свойства объекта.</summary>
      <param name="ObjectRef">Обязательный. <see langword="Object" />. Указатель на объект, к которому относится данное свойство или метод.</param>
      <param name="ProcName">Обязательный. <see langword="String" />. Строковое выражение, содержащее имя свойства или метода объекта.</param>
      <param name="UseCallType">Обязательный. Член перечисления типа <see cref="T:Microsoft.VisualBasic.CallType" />, представляющий тип вызываемой процедуры. Значением <see langword="CallType" /> может быть <see langword="Method" />, <see langword="Get" /> или <see langword="Set" />.</param>
      <param name="Args">Необязательный элемент. <see langword="ParamArray" />. Массив параметров, который содержит аргументы, передаваемые в вызываемый метод или свойство.</param>
      <exception cref="T:System.ArgumentException">Недопустимое значение <paramref name="UseCallType" />; должно быть <see langword="Method" />, <see langword="Get" /> или <see langword="Set" />.</exception>
      <returns>Выполняет метод объекта или устанавливает/возвращает значение свойства объекта.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
      <summary>Выбирает и возвращает значение из списка аргументов.</summary>
      <param name="Index">Обязательный. <see cref="T:System.Double" />. Числовое выражение, результатом которого является значение между 1 и числом элементов, переданных в аргументе <paramref name="Choice" />.</param>
      <param name="Choice">Обязательный. Массив параметров <see langword="Object" />. Можно передать либо одну переменную, либо выражение, которое вычисляется как выражение типа <see langword="Object" />, как список переменных типа <see langword="Object" /> или список выражений, разделенных запятыми, либо как одномерный массив элементов типа <see langword="Object" />.</param>
      <returns>Выбирает и возвращает значение из списка аргументов.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Command">
      <summary>Возвращает набор аргументов командной строки, которая используется для запуска Visual Basic или выполняемой программы, разработанной с помощью Visual Basic. Возможность <see langword="My" /> обеспечивает большую производительность и быстродействие, чем функция <see langword="Command" />. Для получения дополнительной информации см. <see cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" />.</summary>
      <returns>Набор аргументов командной строки, которая используется для запуска Visual Basic или выполняемой программы, разработанной с помощью Visual Basic.  
  
Возможность <see langword="My" /> обеспечивает большую производительность и быстродействие, чем функция <see langword="Command" />. Для получения дополнительной информации см. <see cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
      <summary>Создает и возвращает ссылку на COM-объект. Функция <see langword="CreateObject" /> не может использоваться для создания экземпляров классов в Visual Basic, если эти классы явным образом не представлены как COM-компоненты.</summary>
      <param name="ProgId">Обязательный. <see langword="String" />. Программный идентификатор создаваемого объекта.</param>
      <param name="ServerName">Необязательный элемент. <see langword="String" />. Имя сетевого сервера, на котором будет создан объект. Если параметр <paramref name="ServerName" /> равен пустой строке (""), то используется локальный компьютер.</param>
      <exception cref="T:System.Exception">Сервер недоступен.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Объект указанного типа не существует.</exception>
      <returns>Создает и возвращает ссылку на COM-объект. Функция <see langword="CreateObject" /> не может использоваться для создания экземпляров классов в Visual Basic, если эти классы явным образом не представлены как COM-компоненты.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
      <summary>Удаляет раздел или настройку параметра из записи приложения в реестре Windows. Возможность <see langword="My" /> предоставляет большую производительность и быстродействие в операциях с реестром, чем функция <see langword="DeleteSetting" />. Дополнительные сведения см. в статье <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />.</summary>
      <param name="AppName">Обязательный. Выражение типа <see langword="String" />, содержащее имя приложения или проекта, к которому применяется настройка раздела или параметра.</param>
      <param name="Section">Обязательный. Значение типа <see langword="String" />, содержащее имя раздела, из которого удаляется настройка параметра. Если заданы только <paramref name="AppName" /> и <paramref name="Section" />, указанный раздел удаляется вместе со всеми относящимися к нему настройками параметров.</param>
      <param name="Key">Необязательный элемент. Выражение типа <see langword="String" />, содержащее имя удаляемой настройки параметра.</param>
      <exception cref="T:System.ArgumentException">Пользователь не выполнил вход в систему.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Environ(System.Int32)">
      <summary>Возвращает строку, связанную с переменной среды операционной системы.</summary>
      <param name="Expression">Обязательный. Значение, которое вычисляется либо как строка, содержащая имя переменной среды, либо как целое число, соответствующее порядковому номеру строки в таблице строк среды.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Expression" /> отсутствует.</exception>
      <returns>Строка, связанная с переменной среды операционной системы.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Environ(System.String)">
      <summary>Возвращает строку, связанную с переменной среды операционной системы.</summary>
      <param name="Expression">Обязательный. Значение, которое вычисляется либо как строка, содержащая имя переменной среды, либо как целое число, соответствующее порядковому номеру строки в таблице строк среды.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Expression" /> отсутствует.</exception>
      <returns>Строка, связанная с переменной среды операционной системы.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
      <summary>Возвращает список параметров разделов и соответствующих значений (первоначально созданных с помощью функции <see langword="SaveSetting" />) из записи приложения в реестре Windows. Использование возможности <see langword="My" /> предоставляет большие производительность и быстродействие в операциях файлового ввода-вывода, чем <see langword="GetAllSettings" />. Для получения дополнительной информации см. <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />.</summary>
      <param name="AppName">Обязательный. Выражение типа <see langword="String" />, содержащее имя приложения или проекта, для которого запрашиваются настройки параметров.</param>
      <param name="Section">Обязательный. Выражение <see langword="String" />, содержащее имя раздела, параметры которого запрашиваются. Функция <see langword="GetAllSettings" /> возвращает объект, содержащий двухмерный массив строк. Строки содержат все настройки параметров в указанном разделе плюс соответствующие значения.</param>
      <exception cref="T:System.ArgumentException">Пользователь не выполнил вход в систему.</exception>
      <returns>Список параметров разделов и соответствующих значений (первоначально созданных с помощью функции <see langword="SaveSetting" />) из записи приложения в реестре Windows.  
  
Использование возможности <see langword="My" /> предоставляет большие производительность и быстродействие в операциях файлового ввода-вывода, чем <see langword="GetAllSettings" />. Для получения дополнительной информации см. <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
      <summary>Возвращает ссылку на объект, предоставленную COM-компонентом.</summary>
      <param name="PathName">Необязательный элемент. <see langword="String" />. Полный путь и имя файла, в котором содержится извлекаемый объект. Если параметр <paramref name="PathName" /> опущен, необходим параметр <paramref name="Class" />.</param>
      <param name="Class">Обязательный параметр, если отсутствует <paramref name="PathName" />. <see langword="String" />. Строка, представляющая класс объекта. Каждый аргумент <paramref name="Class" /> имеет следующие синтаксис и составляющие: 
 <c>appname</c><c>.</c><c>objecttype</c>  
  
[1|1] параметр 
[1|2] описание 
[2|1] <c>appname</c>  
  
[2|2] обязательный. <see langword="String" />. Имя приложения, предоставляющего объект.  
  
[3|1] <c>objecttype</c>  
  
[3|2] обязательный. <see langword="String" />. Тип или класс создаваемого объекта.</param>
      <exception cref="T:System.Exception">Объект указанного класса не существует.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Объект с указанным путем и именем файла не существует.</exception>
      <returns>Ссылка на объект, предоставленная компонентом COM.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
      <summary>Возвращает значение настройки параметра из записи приложения в реестре Windows. Возможность <see langword="My" /> предоставляет большую производительность и быстродействие в операциях реестра, чем функция <see langword="GetAllSettings" />. Для получения дополнительной информации см. <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />.</summary>
      <param name="AppName">Обязательный. Выражение типа <see langword="String" />, содержащее имя приложения или проекта, для которого запрашиваются настройки параметров.</param>
      <param name="Section">Обязательный. Выражение типа <see langword="String" />, содержащее имя раздела, в котором обнаружена настройка параметра.</param>
      <param name="Key">Обязательный. Выражение <see langword="String" />, содержащее имя настройки ключа, которое следует вернуть.</param>
      <param name="Default">Необязательный элемент. Выражение, содержащее значение, которое следует вернуть, если в настройках <paramref name="Key" /> значение отсутствует. Если этот параметр опущен, то предполагается, что <paramref name="Default" /> является строкой нулевой длины ("").</param>
      <exception cref="T:System.ArgumentException">Один или несколько аргументов не являются выражениями <see langword="String" />, или пользователь не вошел в систему.</exception>
      <returns>Значение настройки параметра из записи приложения в реестре Windows.  
  
Возможность <see langword="My" /> предоставляет большую производительность и быстродействие в операциях реестра, чем функция <see langword="GetAllSettings" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
      <summary>Возвращает один из двух объектов, в зависимости от результата вычисления выражения.</summary>
      <param name="Expression">Обязательный. <see langword="Boolean" />. Вычисляемое выражение.</param>
      <param name="TruePart">Обязательный. <see langword="Object" />. Возвращается, если значение <paramref name="Expression" /> равно <see langword="True" />.</param>
      <param name="FalsePart">Обязательный. <see langword="Object" />. Возвращается, если значение <paramref name="Expression" /> равно <see langword="False" />.</param>
      <returns>Возвращает один из двух объектов, в зависимости от результата вычисления выражения.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
      <summary>Отображает приглашение в диалоговом окне, ожидает ввода текста или нажатия кнопки и возвращает строку, являющуюся содержимым текстового поля.</summary>
      <param name="Prompt">Требуется выражение типа <see langword="String" />, отображаемое в диалоговом окне в виде сообщения. Максимальная длина параметра <paramref name="Prompt" /> составляет примерно 1024 знака и зависит от ширины используемых знаков. Если <paramref name="Prompt" /> состоит из нескольких строк, то строки можно разделить с помощью знака возврата каретки (<see langword="Chr(" />13<see langword=")" />), знака перевода строки (<see langword="Chr(" />10<see langword=")" />) или сочетания возврата каретки и перевода строки (<see langword="Chr(" />13<see langword=")" /> &amp; <see langword="Chr(" />10<see langword=")" />) после каждой строки.</param>
      <param name="Title">Необязательный элемент. Выражение типа <see langword="String" />, отображаемое в строке заголовка диалогового окна. Если параметр <paramref name="Title" /> опущен, в строку заголовка помещается имя приложения.</param>
      <param name="DefaultResponse">Необязательный элемент. Выражение типа <see langword="String" />, отображаемое в качестве ответного сообщения по умолчанию, если ничего другого не было введено. Если параметр <paramref name="DefaultResponse" /> опущен, отображаемое текстовое поле будет пустым.</param>
      <param name="XPos">Необязательный элемент. Числовое выражение, которое задает расстояние в твипах между левым краем диалогового окна и левым краем экрана. Если параметр <paramref name="XPos" /> опущен, то диалоговое окно центрируется по горизонтали.</param>
      <param name="YPos">Необязательный элемент. Числовое выражение, которое задает расстояние в твипах между верхним краем диалогового окна и верхним краем экрана. Если параметр <paramref name="YPos" /> опущен, то диалоговое окно располагается на уровне, составляющем примерно треть высоты экрана.</param>
      <returns>Отображает приглашение в диалоговом окне, ожидает ввода текста или нажатия кнопки и возвращает строку, являющуюся содержимым текстового поля.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
      <summary>Отображает сообщение в диалоговом окне, ожидает нажатия кнопки и возвращает целое число, показывающее, какая кнопка была нажата.</summary>
      <param name="Prompt">Обязательный. Выражение типа <see langword="String" />, отображаемое в диалоговом окне в виде сообщения. Максимальная длина параметра <paramref name="Prompt" /> составляет примерно 1024 знака и зависит от ширины используемых знаков. Если <paramref name="Prompt" /> состоит из нескольких строк, то строки можно разделить с помощью знака возврата каретки (<see langword="Chr(" />13<see langword=")" />), знака перевода строки (<see langword="Chr(" />10<see langword=")" />) или сочетания возврата каретки и перевода строки (<see langword="Chr(" />13<see langword=")" /> &amp; <see langword="Chr(" />10<see langword=")" />) после каждой строки.</param>
      <param name="Buttons">Необязательный элемент. Числовое выражение, являющееся суммой значений, задающих номер и тип отображаемых кнопок, стиль используемого значка, тип кнопки по умолчанию и признак модальности окна сообщения. Если параметр <paramref name="Buttons" /> опущен, по умолчанию используется нулевое значение.</param>
      <param name="Title">Необязательный элемент. Выражение типа <see langword="String" />, отображаемое в строке заголовка диалогового окна. Если параметр <paramref name="Title" /> опущен, в строку заголовка помещается имя приложения.</param>
      <exception cref="T:System.ArgumentException">Либо <paramref name="Prompt" /> — это не выражение типа <see langword="String" />, либо параметр <paramref name="Title" /> имеет недопустимое значение.</exception>
      <exception cref="T:System.InvalidOperationException">Процесс не выполняется в режиме интерактивного взаимодействия с пользователем.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Один или несколько параметров не являются членами перечислений <see langword="MsgBoxResult" /> или <see langword="MsgBoxStyle" />.</exception>
      <returns>Одно из следующих значений: <list type="table"><listheader><term>Константа</term><description>Значение</description></listheader><item><term><see langword="OK" /></term><description>1</description></item><item><term><see langword="Cancel" /></term><description>2</description></item><item><term><see langword="Abort" /></term><description>3</description></item><item><term><see langword="Retry" /></term><description>4</description></item><item><term><see langword="Ignore" /></term><description>5</description></item><item><term><see langword="Yes" /></term><description>6</description></item><item><term><see langword="No" /></term><description>7</description></item></list></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
      <summary>Возвращает строку, предоставляющую вычисленный диапазон, содержащий число.</summary>
      <param name="Number">Обязательный. <see langword="Long" />. Целое значение, которое нудно разместить в одном из вычисленных диапазонов.</param>
      <param name="Start">Обязательный. <see langword="Long" />. Целое значение, которое обозначает начало набора вычисленных диапазонов. Значение параметра <paramref name="Start" /> не может быть меньше 0.</param>
      <param name="Stop">Обязательный. <see langword="Long" />. Целое значение, которое обозначает конец набора вычисленных диапазонов. Значение <paramref name="Stop" /> не может быть меньше или равно значению <paramref name="Start" />.</param>
      <param name="Interval">Обязательный. <see langword="Long" />. Целое значение, которое обозначает размер каждого вычисленного диапазона между значениями <paramref name="Start" /> и <paramref name="Stop" />. Значение параметра <paramref name="Interval" /> не может быть меньше 1.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Start" /> &lt; 0, <paramref name="Stop" /> &lt;= <paramref name="Start" /> или <paramref name="Interval" /> &lt; 1.</exception>
      <returns>Строка, предоставляющая вычисляемый диапазон, содержащий число.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
      <summary>Сохраняет или создает запись приложения в реестре Windows. Возможность <see langword="My" /> предоставляет большую производительность и быстродействие в операциях реестра, чем функция <see langword="SaveSetting" />. Для получения дополнительной информации см. <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />.</summary>
      <param name="AppName">Обязательный. Выражение типа <see langword="String" />, содержащее имя приложения или проекта, в котором применяется этот параметр.</param>
      <param name="Section">Обязательный. Выражение типа <see langword="String" />, содержащее имя раздела, в котором сохраняется настройка параметра реестра.</param>
      <param name="Key">Обязательный. Выражение типа <see langword="String" />, содержащее имя сохраняемой настройки параметра реестра.</param>
      <param name="Setting">Обязательный. Выражение, содержащее значение, которое устанавливается для параметра <paramref name="Key" />.</param>
      <exception cref="T:System.ArgumentException">Реестр ключа не может быть создан, или пользователь не выполнил вход в систему.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
      <summary>Запускает исполняемую программу и возвращает целочисленное значение, содержащее идентификатор процесса программы, если программа в данный момент все еще выполняется.</summary>
      <param name="PathName">Обязательный. <see langword="String" />. Имя программы для выполнения, а также все обязательные аргументы и параметры командной строки. <paramref name="PathName" /> также может включать диск и путь к каталогу или папку.  
 Если путь к программе неизвестен, для ее поиска можно использовать <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles" />. Например, можно вызвать функцию <c>My.Computer.FileSystem.GetFiles("C:\", True, "testFile.txt")</c>, которая возвращает полный путь для каждого файла с именем <c>testFile.txt</c> в любом месте на диске C:\.</param>
      <param name="Style">Необязательный элемент. <see langword="AppWinStyle" />. Значение, выбранное из перечисления <see cref="T:Microsoft.VisualBasic.AppWinStyle" /> и задающее стиль окна, в котором запускается программа. Если параметр <paramref name="Style" /> опущен, <see langword="Shell" /> использует стиль <see langword="AppWinStyle.MinimizedFocus" />, запуская программу в свернутом состоянии и с установленным фокусом.</param>
      <param name="Wait">Необязательный элемент. <see langword="Boolean" />. Значение, показывающее должна ли функция <see langword="Shell" /> ожидать завершения программы. Если параметр <paramref name="Wait" /> опущен, <see langword="Shell" /> использует значение <see langword="False" />.</param>
      <param name="Timeout">Необязательный элемент. <see langword="Integer" />. Число миллисекунд ожидания завершения, если значение <paramref name="Wait" /> равно <see langword="True" />. Если параметр <paramref name="Timeout" /> опущен, функция <see langword="Shell" /> использует значение -1, которое означает, что таймаут не используется, и <see langword="Shell" /> ожидает завершения выполнения программы. Таким образом, если опустить параметр <paramref name="Timeout" /> или установить его равным -1, существует возможность, что функция <see langword="Shell" /> никогда не возвратит управление в программу.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Style" /> вне диапазона от 0 до 9 включительно.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <see langword="Shell" /> не удается найти файл <paramref name="PathName" />.</exception>
      <exception cref="T:System.NullReferenceException">
        <paramref name="PathName" /> имеет значение <see langword="Nothing" />.</exception>
      <returns>Целое число, содержащее идентификатор процесса программы, если она все еще выполняется. 0, если выполнение программы уже завершено.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
      <summary>Вычисляет значения выражений из списка и возвращает значение <see langword="Object" />, соответствующее первому выражению в списке, которое равно <see langword="True" />.</summary>
      <param name="VarExpr">Обязательный. Массив параметров <see langword="Object" />. Должен содержать четное количество элементов. Можно передать список переменных типа <see langword="Object" /> или выражений, разделенных запятыми, либо одномерный массив элементов типа <see langword="Object" />.</param>
      <exception cref="T:System.ArgumentException">Число элементов нечетно.</exception>
      <returns>Вычисляет значения выражений из списка и возвращает значение <see langword="Object" />, соответствующее первому выражению в списке, которое равно <see langword="True" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.MsgBoxResult">
      <summary>Указывает, какая кнопка нажата в окне сообщения, возвращаемом функцией <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Abort">
      <summary>Нажата кнопка Прервать. Этот элемент эквивалентен константе <see langword="vbAbort" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Cancel">
      <summary>Нажата кнопка Отмена. Этот элемент эквивалентен константе <see langword="vbCancel" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Ignore">
      <summary>Нажата кнопка Пропустить. Этот элемент эквивалентен константе <see langword="vbIgnore" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.No">
      <summary>Нажата кнопка Нет. Этот элемент эквивалентен константе <see langword="vbNo" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Ok">
      <summary>Нажата кнопка ОК. Этот элемент эквивалентен константе <see langword="vbOK" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Retry">
      <summary>Нажата кнопка Повторить. Этот элемент эквивалентен константе <see langword="vbRetry" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Yes">
      <summary>Нажата кнопка Да. Этот элемент эквивалентен константе <see langword="vbYes" />в языке Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MsgBoxStyle">
      <summary>Указывает, какие кнопки отображаются при вызове функции <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.AbortRetryIgnore">
      <summary>Кнопки Прервать, Повторить и Пропустить. Этот элемент эквивалентен константе <see langword="vbAbortRetryIgnore" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.ApplicationModal">
      <summary>Модальное окно сообщения на уровне приложения. Этот элемент эквивалентен константе <see langword="vbApplicationModal" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Critical">
      <summary>Важное сообщение. Этот элемент эквивалентен константе <see langword="vbCritical" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton1">
      <summary>По умолчанию используется первая кнопка. Этот элемент эквивалентен константе <see langword="vbDefaultButton1" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton2">
      <summary>По умолчанию используется вторая кнопка. Этот элемент эквивалентен константе <see langword="vbDefaultButton2" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton3">
      <summary>По умолчанию используется третья кнопка. Этот элемент эквивалентен константе <see langword="vbDefaultButton3" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Exclamation">
      <summary>Предупреждающее сообщение. Этот элемент эквивалентен константе <see langword="vbExclamation" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Information">
      <summary>Информационное сообщение. Этот элемент эквивалентен константе <see langword="vbInformation" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxHelp">
      <summary>Текст справки. Этот элемент эквивалентен константе <see langword="vbMsgBoxHelp" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxRight">
      <summary>Выравнивание текста по правому краю. Этот элемент эквивалентен константе <see langword="vbMsgBoxRight" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxRtlReading">
      <summary>Текст для чтения справа налево (языки иврит и арабский). Этот элемент эквивалентен константе <see langword="vbMsgBoxRtlReading" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxSetForeground">
      <summary>Окно сообщения на переднем плане. Этот элемент эквивалентен константе <see langword="vbMsgBoxSetForeground" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OkCancel">
      <summary>Кнопки ОК и Отмена. Этот элемент эквивалентен константе <see langword="vbOKCancel" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OkOnly">
      <summary>Только кнопка ОК (по умолчанию). Этот элемент эквивалентен константе <see langword="vbOKOnly" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Question">
      <summary>Запрос с предупреждением. Этот элемент эквивалентен константе <see langword="vbQuestion" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.RetryCancel">
      <summary>Кнопки Повторить и Отмена. Этот элемент эквивалентен константе <see langword="vbRetryCancel" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.SystemModal">
      <summary>Модальное окно сообщения на уровне системы. Этот элемент эквивалентен константе <see langword="vbSystemModal" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.YesNo">
      <summary>Кнопки Да и Нет. Этот элемент эквивалентен константе <see langword="vbYesNo" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.YesNoCancel">
      <summary>Кнопки Да, Нет и Отменить. Этот элемент эквивалентен константе <see langword="vbYesNoCancel" />в языке Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MyGroupCollectionAttribute">
      <summary>Этот атрибут поддерживает <see langword="My.Forms" /> и <see langword="My.WebServices" /> в Visual Basic.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.MyGroupCollectionAttribute.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Этот атрибут поддерживает <see langword="My.Forms" /> и <see langword="My.WebServices" /> в Visual Basic.</summary>
      <param name="typeToCollect">
        <see langword="String" />. Инициализирует свойство <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName" />. Компилятор создает свойства метода доступа для классов, производных от этого типа.</param>
      <param name="createInstanceMethodName">
        <see langword="String" />. Инициализирует свойство <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod" />. Определяет метод класса, который создает экземпляры типа.</param>
      <param name="disposeInstanceMethodName">
        <see langword="String" />. Инициализирует свойство <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod" />. Определяет метод класса, который удаляет экземпляры типа.</param>
      <param name="defaultInstanceAlias">
        <see langword="String" />. Инициализирует свойство <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias" />. Задает имя свойства, возвращающего экземпляр класса по умолчанию.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod">
      <summary>Это свойство поддерживает <see langword="My" /> в Visual Basic.</summary>
      <returns>Определяет метод класса, который создает экземпляры типа.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias">
      <summary>Это свойство поддерживает <see langword="My" /> в Visual Basic.</summary>
      <returns>Задает имя свойства, возвращающего экземпляр класса по умолчанию.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod">
      <summary>Это свойство поддерживает <see langword="My" /> в Visual Basic.</summary>
      <returns>Определяет метод класса, который удаляет экземпляры типа.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName">
      <summary>Это свойство поддерживает <see langword="My" /> в Visual Basic.</summary>
      <returns>Определяет имя типа, для которого компилятор создает свойства метода доступа.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenAccess">
      <summary>Указывает, как открыть файл при вызове функций для работы с файлами.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Default">
      <summary>Разрешены чтение и запись. Это значение по умолчанию.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Read">
      <summary>Разрешено чтение.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.ReadWrite">
      <summary>Разрешены чтение и запись.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Write">
      <summary>Разрешена запись.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenMode">
      <summary>Указывает, как открыть файл при вызове функций для работы с файлами.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Append">
      <summary>Файл открыт для добавления данных в его конец. По умолчанию.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Binary">
      <summary>Файл открыт для двоичного доступа.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Input">
      <summary>Файл открыт для чтения.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Output">
      <summary>Файл открыт для записи.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Random">
      <summary>Файл открыт для произвольного доступа.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenShare">
      <summary>Указывает, как открыть файл при вызове функций для работы с файлами.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.Default">
      <summary>
        <see langword="LockReadWrite" />. Это значение по умолчанию.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockRead">
      <summary>Другие процессы не могут читать данный файл.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockReadWrite">
      <summary>Другие процессы не могут читать данный файл или записывать в него.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockWrite">
      <summary>Другие процессы не могут записывать в данный файл.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.Shared">
      <summary>Любые процессы могут читать или записывать в данный файл.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.SpcInfo">
      <summary>Этот класс поддерживает функции Visual Basic <see langword="Print" /> и <see langword="PrintLine" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.SpcInfo.Count">
      <summary>Это поле поддерживает функции Visual Basic <see langword="Print" /> и <see langword="PrintLine" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Strings">
      <summary>В модуле <see langword="Strings" /> содержатся процедуры, используемые для выполнения операций над строками.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
      <summary>Возвращает целочисленное значение, представляющее код заданного символа.</summary>
      <param name="String">Обязательный. Любое допустимое значение <see langword="Char" /> или выражение <see langword="String" />. Если параметр <paramref name="String" /> — выражение типа <see langword="String" />, в качестве входного значения используется только первый знак строки. Если параметр <paramref name="String" /> равен <see langword="Nothing" /> или не содержит знаков, возникает ошибка <see cref="T:System.ArgumentException" />.</param>
      <returns>Код символа, соответствующий символу.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
      <summary>Возвращает целочисленное значение, представляющее код заданного символа.</summary>
      <param name="String">Обязательный. Любое допустимое значение <see langword="Char" /> или выражение <see langword="String" />. Если параметр <paramref name="String" /> — выражение типа <see langword="String" />, в качестве входного значения используется только первый знак строки. Если параметр <paramref name="String" /> равен <see langword="Nothing" /> или не содержит знаков, возникает ошибка <see cref="T:System.ArgumentException" />.</param>
      <returns>Код символа, соответствующий символу.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
      <summary>Возвращает целочисленное значение, представляющее код заданного символа.</summary>
      <param name="String">Обязательный. Любое допустимое значение <see langword="Char" /> или выражение <see langword="String" />. Если параметр <paramref name="String" /> — выражение типа <see langword="String" />, в качестве входного значения используется только первый знак строки. Если параметр <paramref name="String" /> равен <see langword="Nothing" /> или не содержит знаков, возникает ошибка <see cref="T:System.ArgumentException" />.</param>
      <returns>Код символа, соответствующий символу.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
      <summary>Возвращает целочисленное значение, представляющее код заданного символа.</summary>
      <param name="String">Обязательный. Любое допустимое значение <see langword="Char" /> или выражение <see langword="String" />. Если параметр <paramref name="String" /> — выражение типа <see langword="String" />, в качестве входного значения используется только первый знак строки. Если параметр <paramref name="String" /> равен <see langword="Nothing" /> или не содержит знаков, возникает ошибка <see cref="T:System.ArgumentException" />.</param>
      <returns>Код символа, соответствующий символу.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
      <summary>Возвращает знак, связанный с указанным кодом знака.</summary>
      <param name="CharCode">Обязательный. Выражение <see langword="Integer" />, представляющее <c>кодовую точку</c> (код символа) для символа.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="CharCode" /> &lt; 0 или &gt; 255 для <see langword="Chr" />.</exception>
      <returns>Знак, связанный с указанным кодом знака.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
      <summary>Возвращает знак, связанный с указанным кодом знака.</summary>
      <param name="CharCode">Обязательный. Выражение <see langword="Integer" />, представляющее <c>кодовую точку</c> (код символа) для символа.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="CharCode" /> &lt; –32768 или &gt; 65535 для <see langword="ChrW" />.</exception>
      <returns>Знак, связанный с указанным кодом знака.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
      <summary>Возвращает массив (с индексацией от нуля), который содержит подмножество массива типа <see langword="String" />, выделяемое согласно указанным условиям фильтрации.</summary>
      <param name="Source">Обязательный. Одномерный массив строк, в котором необходимо выполнить поиск.</param>
      <param name="Match">Обязательный. Строка, которую требуется найти.</param>
      <param name="Include">Необязательный элемент. Значение типа <see langword="Boolean" />, указывающее, какие подстроки требуется возвращать: содержащие или не содержащие строку <paramref name="Match" />. Если параметр <paramref name="Include" /> равен <see langword="True" />, функция <see langword="Filter" /> возвращает подмножество строк массива, содержащих <paramref name="Match" /> в виде подстроки. Если параметр <paramref name="Include" /> равен <see langword="False" />, функция <see langword="Filter" /> возвращает подмножество строк массива, не содержащих <paramref name="Match" /> в виде подстроки.</param>
      <param name="Compare">Необязательный элемент. Числовое значение, указывающее вид выполняемого сравнения строк. Сведения о значениях см. в разделе "Параметры".</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Source" /> является <see langword="Nothing" /> или не является одномерным массивом.</exception>
      <returns>Массив с индексацией от нуля, который содержит подмножество массива типа <see langword="String" />, выделяемое согласно указанным условиям фильтрации.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
      <summary>Возвращает массив (с индексацией от нуля), который содержит подмножество массива типа <see langword="String" />, выделяемое согласно указанным условиям фильтрации.</summary>
      <param name="Source">Обязательный. Одномерный массив строк, в котором необходимо выполнить поиск.</param>
      <param name="Match">Обязательный. Строка, которую требуется найти.</param>
      <param name="Include">Необязательный элемент. Значение типа <see langword="Boolean" />, указывающее, какие подстроки требуется возвращать: содержащие или не содержащие строку <paramref name="Match" />. Если параметр <paramref name="Include" /> равен <see langword="True" />, функция <see langword="Filter" /> возвращает подмножество строк массива, содержащих <paramref name="Match" /> в виде подстроки. Если параметр <paramref name="Include" /> равен <see langword="False" />, функция <see langword="Filter" /> возвращает подмножество строк массива, не содержащих <paramref name="Match" /> в виде подстроки.</param>
      <param name="Compare">Необязательный элемент. Числовое значение, указывающее вид выполняемого сравнения строк. Сведения о значениях см. в разделе "Параметры".</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Source" /> является <see langword="Nothing" /> или не является одномерным массивом.</exception>
      <returns>Массив с индексацией от нуля, который содержит подмножество массива типа <see langword="String" />, выделяемое согласно указанным условиям фильтрации.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
      <summary>Возвращает строку, отформатированную в соответствии с инструкциями, содержащимися в формате выражения <see langword="String" />.</summary>
      <param name="Expression">Обязательный. Любое допустимое выражение.</param>
      <param name="Style">Необязательный элемент. Правильно именованное или определенное пользователем выражение формата <see langword="String" />.</param>
      <returns>Строка, отформатированная в соответствии с инструкциями, содержащимися в формате выражения <see langword="String" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary>Возвращает выражение в формате денежной единицы с использованием символа денежной единицы, определенного в системной панели управления.</summary>
      <param name="Expression">Обязательный. Форматируемое выражение.</param>
      <param name="NumDigitsAfterDecimal">Необязательный элемент. Числовое значение, указывающее количество цифр, которые должны быть отображены справа от десятичного разделителя. По умолчанию используется значение –1, указывающее на использование региональных настроек компьютера.</param>
      <param name="IncludeLeadingDigit">Необязательный элемент. Перечисление <see cref="T:Microsoft.VisualBasic.TriState" />, указывающее, следует ли отображать ноль в начале дробных значений. Значения см. в разделе "Примечания".</param>
      <param name="UseParensForNegativeNumbers">Необязательный элемент. Перечисление <see cref="T:Microsoft.VisualBasic.TriState" />, указывающее, следует ли заключать отрицательные значения в скобки. Значения см. в разделе "Примечания".</param>
      <param name="GroupDigits">Необязательный элемент. Перечисление <see cref="T:Microsoft.VisualBasic.TriState" />, указывающее, следует ли объединять разряды чисел в группы, используя разделитель групп, определенный в региональных параметрах компьютера. Значения см. в разделе "Примечания".</param>
      <exception cref="T:System.ArgumentException">Число цифр после десятичного разделителя превышает 99.</exception>
      <exception cref="T:System.InvalidCastException">Тип не является числовым.</exception>
      <returns>Выражение в формате денежной единицы с использованием символа денежной единицы, определенного в системной панели управления.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
      <summary>Возвращает строковое выражение, представляющее значение даты и времени.</summary>
      <param name="Expression">Обязательный. Форматируемое выражение <see langword="Date" />.</param>
      <param name="NamedFormat">Необязательный элемент. Числовое значение, указывающее используемый формат даты/времени. Если опущен, используется <see langword="DateFormat.GeneralDate" />.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="NamedFormat" /> недопустим.</exception>
      <returns>Строковое выражение, представляющее значение даты и времени.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary>Возвращает выражение в формате числа.</summary>
      <param name="Expression">Обязательный. Форматируемое выражение.</param>
      <param name="NumDigitsAfterDecimal">Необязательный элемент. Числовое значение, указывающее количество цифр, которые должны быть отображены справа от десятичного разделителя. По умолчанию используется значение –1, указывающее на использование региональных настроек компьютера.</param>
      <param name="IncludeLeadingDigit">Необязательный элемент. Константа <see cref="T:Microsoft.VisualBasic.TriState" />, указывающая, следует ли отображать 0 в начале дробных значений. Сведения о значениях см. в разделе "Параметры".</param>
      <param name="UseParensForNegativeNumbers">Необязательный элемент. Константа <see cref="T:Microsoft.VisualBasic.TriState" />, указывающая, следует ли заключать отрицательные значения в скобки. Сведения о значениях см. в разделе "Параметры".</param>
      <param name="GroupDigits">Необязательный элемент. Константа <see cref="T:Microsoft.VisualBasic.TriState" />, указывающая, группируются ли значения с использованием разделителя, указанного в настройках языкового стандарта. Сведения о значениях см. в разделе "Параметры".</param>
      <exception cref="T:System.InvalidCastException">Тип не является числовым.</exception>
      <returns>Выражение в формате числа.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary>Возвращает выражение в виде процента (умноженное на 100) с символом % в конце.</summary>
      <param name="Expression">Обязательный. Форматируемое выражение.</param>
      <param name="NumDigitsAfterDecimal">Необязательный элемент. Числовое значение, указывающее количество отображаемых цифр справа от десятичной запятой. По умолчанию используется значение –1, указывающее на использование настроек языкового стандарта.</param>
      <param name="IncludeLeadingDigit">Необязательный элемент. Константа <see cref="T:Microsoft.VisualBasic.TriState" />, указывающая, отображается ли ноль в дробных значениях. Сведения о значениях см. в разделе "Параметры".</param>
      <param name="UseParensForNegativeNumbers">Необязательный элемент. Константа <see cref="T:Microsoft.VisualBasic.TriState" />, указывающая, нужно ли заключать отрицательные значения в скобки. Сведения о значениях см. в разделе "Параметры".</param>
      <param name="GroupDigits">Необязательный элемент. Константа <see cref="T:Microsoft.VisualBasic.TriState" />, указывающая, группируются ли значения с использованием разделителя, указанного в настройках языкового стандарта. Сведения о значениях см. в разделе "Параметры".</param>
      <exception cref="T:System.InvalidCastException">Тип не является числовым.</exception>
      <returns>Выражение в виде процента (умноженное на 100) с символом % в конце.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)">
      <summary>Возвращает значение типа <see langword="Char" />, представляющее знак из указанной позиции в предоставленной строке.</summary>
      <param name="str">Обязательный. Любое допустимое выражение типа <see langword="String" />.</param>
      <param name="Index">Обязательный. Выражение <see langword="Integer" />. Возвращаемый индекс знака (основанный на 1) в <paramref name="str" />.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="str" /> равен <see langword="Nothing" />, параметр <paramref name="Index" /> &lt; 1, или параметр <paramref name="Index" /> больше индекса последнего символа в <paramref name="str" />.</exception>
      <returns>Значение типа <see langword="Char" />, представляющее знак из указанного индекса в предоставленной строке.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>Возвращает целое число, указывающее начальную позицию первого вхождения одной строки в другую.</summary>
      <param name="StartPos" />
      <param name="String1">Обязательный. Искомое выражение типа <see langword="String" />.</param>
      <param name="String2">Обязательный. Искомое выражение <see langword="String" />.</param>
      <param name="Compare">Необязательный элемент. Указывает тип сравнения строк. Если параметр <paramref name="Compare" /> не задан, параметр <see langword="Option Compare" /> определяет тип сравнения.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Start" /> &lt; 1.</exception>
      <returns>
        <list type="table">
          <listheader>
            <term>If</term>
            <description>InStr возвращает</description>
          </listheader>
          <item>
            <term>Параметр 
                <paramref name="String1" /> является пустой строкой или значением <see langword="Nothing" /></term>
            <description>0</description>
          </item>
          <item>
            <term>Параметр 
                <paramref name="String2" /> является пустой строкой или значением <see langword="Nothing" /></term>
            <description>
              <paramref name="start" />
            </description>
          </item>
          <item>
            <term>Параметр 
                <paramref name="String2" /> не найден.</term>
            <description>0</description>
          </item>
          <item>
            <term>
              <paramref name="String2" /> находится в пределах <paramref name="String1" /></term>
            <description> Позиция, где начинается соответствие</description>
          </item>
          <item>
            <term>Длина 
                <paramref name="Start" /> &gt; параметра <paramref name="String1" /></term>
            <description>0</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>Возвращает целое число, указывающее начальную позицию первого вхождения одной строки в другую.</summary>
      <param name="String1">Обязательный. Искомое выражение типа <see langword="String" />.</param>
      <param name="String2">Обязательный. Искомое выражение <see langword="String" />.</param>
      <param name="Compare">Необязательный элемент. Указывает тип сравнения строк. Если параметр <paramref name="Compare" /> не задан, параметр <see langword="Option Compare" /> определяет тип сравнения.</param>
      <returns>
        <list type="table">
          <listheader>
            <term>If</term>
            <description>InStr возвращает</description>
          </listheader>
          <item>
            <term>Параметр 
                <paramref name="String1" /> является пустой строкой или значением <see langword="Nothing" /></term>
            <description>0</description>
          </item>
          <item>
            <term>Параметр 
                <paramref name="String2" /> является пустой строкой или значением <see langword="Nothing" /></term>
            <description>Начальная позиция диапазона для поиска, которая по умолчанию в первом положении символа.</description>
          </item>
          <item>
            <term>Параметр 
                <paramref name="String2" /> не найден.</term>
            <description>0</description>
          </item>
          <item>
            <term>
              <paramref name="String2" /> находится в пределах <paramref name="String1" /></term>
            <description>Позиция, где начинается соответствие.</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary>Возвращает позицию первого вхождения одной строки в другую, начиная с правого конца строки.</summary>
      <param name="StringCheck">Обязательный. Строковое выражение, в котором ведется поиск.</param>
      <param name="StringMatch">Обязательный. Строковое выражение, которое требуется найти.</param>
      <param name="Start">Необязательный элемент. Числовое выражение, устанавливающее начальную позицию, начиная с 1, для каждой операции поиска, начиная с левого края строки. Если параметр <paramref name="Start" /> не указан, то используется значение –1, означающее, что поиск начинается с позиции последнего символа. После этого строка просматривается справа налево.</param>
      <param name="Compare">Необязательный элемент. Числовое значение, показывающее вид сравнения, используемое при оценке подстрок. Если этот аргумент опущен, то выполняется двоичное сравнение. См. значения в разделе "Параметры".</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Start" /> = 0 или <paramref name="Start" /> &lt; –1.</exception>
      <returns>
        <list type="table">
          <listheader>
            <term>If</term>
            <description>InStrRev возвращает</description>
          </listheader>
          <item>
            <term>Параметр 
                <paramref name="StringCheck" /> имеет нулевую длину</term>
            <description>0</description>
          </item>
          <item>
            <term>Параметр 
                <paramref name="StringMatch" /> имеет нулевую длину</term>
            <description>
              <paramref name="Start" />
            </description>
          </item>
          <item>
            <term>Параметр 
                <paramref name="StringMatch" /> не найден.</term>
            <description>0</description>
          </item>
          <item>
            <term>
              <paramref name="StringMatch" /> находится в пределах <paramref name="StringCheck" /></term>
            <description>Позиция, в которой найдено первое сравнение, начиная с правого конца строки.</description>
          </item>
          <item>
            <term>Значение параметра 
                <paramref name="Start" /> больше, чем длина параметра <paramref name="StringMatch" /></term>
            <description>0</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
      <summary>Возвращает строку, образуемую путем соединения нескольких подстрок, содержащихся в массиве.</summary>
      <param name="SourceArray">Обязательный. Одномерный массив подстрок, подлежащих объединению.</param>
      <param name="Delimiter">Необязательный элемент. Любая строка, используемая для разделения подстрок в составе возвращаемой строки. Если этот аргумент опущен, используется знак пробела (" "). Если в качестве <paramref name="Delimiter" /> задана строка нулевой длины ("") или ключевое слово <see langword="Nothing" />, все элементы списка объединяются без разделителей.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="SourceArray" /> не является одномерным.</exception>
      <returns>Строка, созданная путем соединения нескольких подстрок, содержащихся в массиве.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
      <summary>Возвращает строку, образуемую путем соединения нескольких подстрок, содержащихся в массиве.</summary>
      <param name="SourceArray">Обязательный. Одномерный массив подстрок, подлежащих объединению.</param>
      <param name="Delimiter">Необязательный элемент. Любая строка, используемая для разделения подстрок в составе возвращаемой строки. Если этот аргумент опущен, используется знак пробела (" "). Если в качестве <paramref name="Delimiter" /> задана строка нулевой длины ("") или ключевое слово <see langword="Nothing" />, все элементы списка объединяются без разделителей.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="SourceArray" /> не является одномерным.</exception>
      <returns>Строка, созданная путем соединения нескольких подстрок, содержащихся в массиве.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LCase(System.Char)">
      <summary>Возвращает строку или символ, преобразованные в нижний регистр.</summary>
      <param name="Value">Обязательный. Любое допустимое значение <see langword="String" /> или выражение <see langword="Char" />.</param>
      <returns>Строка или символ, преобразованные в нижний регистр.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LCase(System.String)">
      <summary>Возвращает строку или символ, преобразованные в нижний регистр.</summary>
      <param name="Value">Обязательный. Любое допустимое значение <see langword="String" /> или выражение <see langword="Char" />.</param>
      <returns>Строка или символ, преобразованные в нижний регистр.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
      <summary>Возвращает строку, содержащую указанное число знаков с левой стороны строки.</summary>
      <param name="str">Обязательный. Выражение типа <see langword="String" />, из которого возвращаются крайние левые знаки.</param>
      <param name="Length">Обязательный. Выражение <see langword="Integer" />. Числовое выражение, показывающее необходимое число возвращаемых знаков. Если выражение равно 0, возвращается строка нулевой длины (""). Если выражение больше или равно числу знаков в <paramref name="str" />, то возвращается вся строка.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Length" /> &lt; 0.</exception>
      <returns>Строка, содержащая указанное число знаков с левой стороны строки.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
      <summary>Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</summary>
      <param name="Expression">Любое допустимое выражение <see langword="String" /> или имя переменной. Если <paramref name="Expression" /> имеет тип <see langword="Object" />, то функция <see langword="Len" /> возвращает размер объекта, как при записи в файл функцией <see langword="FilePut" />.</param>
      <returns>Целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
      <summary>Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</summary>
      <param name="Expression">Любое допустимое выражение <see langword="String" /> или имя переменной. Если <paramref name="Expression" /> имеет тип <see langword="Object" />, то функция <see langword="Len" /> возвращает размер объекта, как при записи в файл функцией <see langword="FilePut" />.</param>
      <returns>Целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
      <summary>Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</summary>
      <param name="Expression">Любое допустимое выражение <see langword="String" /> или имя переменной. Если <paramref name="Expression" /> имеет тип <see langword="Object" />, то функция <see langword="Len" /> возвращает размер объекта, как при записи в файл функцией <see langword="FilePut" />.</param>
      <returns>Целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
      <summary>Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</summary>
      <param name="Expression">Любое допустимое выражение <see langword="String" /> или имя переменной. Если <paramref name="Expression" /> имеет тип <see langword="Object" />, то функция <see langword="Len" /> возвращает размер объекта, как при записи в файл функцией <see langword="FilePut" />.</param>
      <returns>Целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
      <summary>Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</summary>
      <param name="Expression">Любое допустимое выражение <see langword="String" /> или имя переменной. Если <paramref name="Expression" /> имеет тип <see langword="Object" />, то функция <see langword="Len" /> возвращает размер объекта, как при записи в файл функцией <see langword="FilePut" />.</param>
      <returns>Целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
      <summary>Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</summary>
      <param name="Expression">Любое допустимое выражение <see langword="String" /> или имя переменной. Если <paramref name="Expression" /> имеет тип <see langword="Object" />, то функция <see langword="Len" /> возвращает размер объекта, как при записи в файл функцией <see langword="FilePut" />.</param>
      <returns>Целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
      <summary>Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</summary>
      <param name="Expression">Любое допустимое выражение <see langword="String" /> или имя переменной. Если <paramref name="Expression" /> имеет тип <see langword="Object" />, то функция <see langword="Len" /> возвращает размер объекта, как при записи в файл функцией <see langword="FilePut" />.</param>
      <returns>Целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
      <summary>Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</summary>
      <param name="Expression">Любое допустимое выражение <see langword="String" /> или имя переменной. Если <paramref name="Expression" /> имеет тип <see langword="Object" />, то функция <see langword="Len" /> возвращает размер объекта, как при записи в файл функцией <see langword="FilePut" />.</param>
      <returns>Целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
      <summary>Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</summary>
      <param name="Expression">Любое допустимое выражение <see langword="String" /> или имя переменной. Если <paramref name="Expression" /> имеет тип <see langword="Object" />, то функция <see langword="Len" /> возвращает размер объекта, как при записи в файл функцией <see langword="FilePut" />.</param>
      <returns>Целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
      <summary>Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</summary>
      <param name="Expression">Любое допустимое выражение <see langword="String" /> или имя переменной. Если <paramref name="Expression" /> имеет тип <see langword="Object" />, то функция <see langword="Len" /> возвращает размер объекта, как при записи в файл функцией <see langword="FilePut" />.</param>
      <returns>Целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
      <summary>Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</summary>
      <param name="Expression">Любое допустимое выражение <see langword="String" /> или имя переменной. Если <paramref name="Expression" /> имеет тип <see langword="Object" />, то функция <see langword="Len" /> возвращает размер объекта, как при записи в файл функцией <see langword="FilePut" />.</param>
      <returns>Целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
      <summary>Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</summary>
      <param name="Expression">Любое допустимое выражение <see langword="String" /> или имя переменной. Если <paramref name="Expression" /> имеет тип <see langword="Object" />, то функция <see langword="Len" /> возвращает размер объекта, как при записи в файл функцией <see langword="FilePut" />.</param>
      <returns>Целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.String)">
      <summary>Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</summary>
      <param name="Expression">Любое допустимое выражение <see langword="String" /> или имя переменной. Если <paramref name="Expression" /> имеет тип <see langword="Object" />, то функция <see langword="Len" /> возвращает размер объекта, как при записи в файл функцией <see langword="FilePut" />.</param>
      <returns>Целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
      <summary>Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</summary>
      <param name="Expression">Любое допустимое выражение <see langword="String" /> или имя переменной. Если <paramref name="Expression" /> имеет тип <see langword="Object" />, то функция <see langword="Len" /> возвращает размер объекта, как при записи в файл функцией <see langword="FilePut" />.</param>
      <returns>Целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
      <summary>Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</summary>
      <param name="Expression">Любое допустимое выражение <see langword="String" /> или имя переменной. Если <paramref name="Expression" /> имеет тип <see langword="Object" />, то функция <see langword="Len" /> возвращает размер объекта, как при записи в файл функцией <see langword="FilePut" />.</param>
      <returns>Целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
      <summary>Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</summary>
      <param name="Expression">Любое допустимое выражение <see langword="String" /> или имя переменной. Если <paramref name="Expression" /> имеет тип <see langword="Object" />, то функция <see langword="Len" /> возвращает размер объекта, как при записи в файл функцией <see langword="FilePut" />.</param>
      <returns>Целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
      <summary>Возвращает выровненную по левому краю строку запрашиваемой длины, содержащую указанную строку.</summary>
      <param name="Source">Обязательный. Выражение <see langword="String" />. Имя строковой переменной.</param>
      <param name="Length">Обязательный. Выражение <see langword="Integer" />. Длина возвращаемой строки.</param>
      <returns>Выровненная по левому краю строка запрашиваемой длины, содержащая указанную строку.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LTrim(System.String)">
      <summary>Возвращает строку, содержащую копию указанной строки без начальных пробелов (<see langword="LTrim" />), замыкающих пробелов (<see langword="RTrim" />) или без тех и других (<see langword="Trim" />).</summary>
      <param name="str">Обязательный. Любое допустимое выражение типа <see langword="String" />.</param>
      <returns>Строка, содержащая копию указанной строки без начальных пробелов (<see langword="LTrim" />), замыкающих пробелов (<see langword="RTrim" />) или без тех и других (<see langword="Trim" />).</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
      <summary>Возвращает строку, содержащую все символы начиная с указанной позиции в строке.</summary>
      <param name="str">Обязательный. Выражение <see langword="String" />, из которого возвращаются знаки.</param>
      <param name="Start">Обязательный. Выражение <see langword="Integer" />. Начальная позиция возвращаемых знаков. Если параметр <paramref name="Start" /> больше, чем количество символов в параметре <paramref name="str" />, функция <see langword="Mid" /> возвращает пустую строку (""). Значение параметра <paramref name="Start" /> отсчитывается с единицы.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Start" /> &lt;= 0 или <paramref name="Length" /> &lt; 0.</exception>
      <returns>Строка, состоящая из всех символов начиная с указанной позиции в строке.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
      <summary>Возвращает строку, содержащую указанное число символов начиная с указанной позиции в строке.</summary>
      <param name="str">Обязательный. Выражение <see langword="String" />, из которого возвращаются знаки.</param>
      <param name="Start">Обязательный. Выражение <see langword="Integer" />. Начальная позиция возвращаемых знаков. Если параметр <paramref name="Start" /> больше, чем количество символов в параметре <paramref name="str" />, функция <see langword="Mid" /> возвращает пустую строку (""). Значение параметра <paramref name="Start" /> отсчитывается с единицы.</param>
      <param name="Length">Необязательный элемент. Выражение <see langword="Integer" />. Число возвращаемых знаков. Если этот параметр опущен или количество знаков в тексте меньше значения <paramref name="Length" /> (включая знак на позиции <paramref name="Start" />), возвращаются все знаки от начальной позиции до конца строки.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Start" /> &lt;= 0 или <paramref name="Length" /> &lt; 0.</exception>
      <returns>Строка, состоящая из указанного числа символов начиная с указанной позиции в строке.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary>Возвращает строку, в которой указанная подстрока заданное число раз заменена другой подстрокой.</summary>
      <param name="Expression">Обязательный. Строковое выражение, содержащее замещаемую подстроку.</param>
      <param name="Find">Обязательный. Подстрока, которую требуется найти.</param>
      <param name="Replacement">Обязательный. Подстрока для замены.</param>
      <param name="Start">Необязательный элемент. Позиция в <paramref name="Expression" />, с которой начинается подстрока, используемая для замены. Возвращаемое значение <see langword="Replace" /> представляет собой строку, начинающуюся с <paramref name="Start" /> с соответствующими заменами. Если этот аргумент не указан, используется значение 1.</param>
      <param name="Count">Необязательный элемент. Число выполняемых замен подстроки. Если этот аргумент опущен, по умолчанию принимается значение –1, указывающее, что следует "выполнить все возможные замены".</param>
      <param name="Compare">Необязательный элемент. Числовое значение, показывающее вид сравнения, используемое при оценке подстрок. См. значения в разделе "Параметры".</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Count" /> &lt; –1 или <paramref name="Start" /> &lt;= 0.</exception>
      <returns>Одно из следующих значений.
          <list type="table"><listheader><term>If</term><description>Функция Replace возвращает</description></listheader><item><term>Параметр <paramref name="Find" /> является пустой строкой или значением <see langword="Nothing" /></term><description> Копия выражения <paramref name="Expression" /></description></item><item><term>Параметр <paramref name="Replace" /> имеет нулевую длину</term><description> Копия выражения <paramref name="Expression" /> без вхождений строки <paramref name="Find" /></description></item><item><term>Строка <paramref name="Expression" /> является пустой строкой или значением <see langword="Nothing" />, или значение <paramref name="Start" /> больше длины выражения <paramref name="Expression" /></term><description><see langword="Nothing" /></description></item><item><term><paramref name="Count" /> равно 0</term><description> Копия выражения <paramref name="Expression" /></description></item></list></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
      <summary>Возвращает строку, содержащую указанное число знаков с правой стороны строки.</summary>
      <param name="str">Обязательный. Выражение типа <see langword="String" />, из которого возвращаются крайние правые знаки.</param>
      <param name="Length">Обязательный. <see langword="Integer" />. Числовое выражение, показывающее необходимое число возвращаемых знаков. Если выражение равно 0, возвращается строка нулевой длины (""). Если выражение больше или равно числу знаков в <paramref name="str" />, то возвращается вся строка.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Length" /> &lt; 0.</exception>
      <returns>Строка, содержащая указанное число знаков с правой стороны строки.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
      <summary>Возвращает выровненную по правому краю строку, содержащую указанную строку, настроенную под указанную длину.</summary>
      <param name="Source">Обязательный. Выражение <see langword="String" />. Имя строковой переменной.</param>
      <param name="Length">Обязательный. Выражение <see langword="Integer" />. Длина возвращаемой строки.</param>
      <returns>Выровненная по правому краю строка, содержащая указанную строку, настроенную под указанную длину.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.RTrim(System.String)">
      <summary>Возвращает строку, содержащую копию указанной строки без начальных пробелов (<see langword="LTrim" />), замыкающих пробелов (<see langword="RTrim" />) или без тех и других (<see langword="Trim" />).</summary>
      <param name="str">Обязательный. Любое допустимое выражение типа <see langword="String" />.</param>
      <returns>Строка, содержащая копию указанной строки без начальных пробелов (<see langword="LTrim" />), замыкающих пробелов (<see langword="RTrim" />) или без тех и других (<see langword="Trim" />).</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Space(System.Int32)">
      <summary>Возвращает строку, состоящую из указанного числа пробелов.</summary>
      <param name="Number">Обязательный. Выражение <see langword="Integer" />. Нужное количество пробелов в строке.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> &lt; 0.</exception>
      <returns>Строка, состоящая из указанного числа пробелов.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary>Возвращает одномерный массив (с индексацией от нуля), содержащий указанное число подстрок.</summary>
      <param name="Expression">Обязательный. Выражение типа <see langword="String" />, содержащее подстроки и разделители.</param>
      <param name="Delimiter">Необязательный элемент. Одиночный знак, используемый для обозначения границ подстроки. Если аргумент <paramref name="Delimiter" /> опущен, в качестве разделителя используется знак пробела (" ").</param>
      <param name="Limit">Необязательный элемент. Максимальное число подстрок, на которые должна быть разделена входная строка. Значение по умолчанию –1 указывает, что входная строка должна быть разбита в местах каждого из вхождений строки <paramref name="Delimiter" />.</param>
      <param name="Compare">Необязательный элемент. Числовое значение, которое указывает вид сравнения, выполняемого при оценке подстрок. Сведения о значениях см. в разделе "Параметры".</param>
      <returns>Массив<see langword="String" /> . Если <paramref name="Expression" /> является строкой нулевой длины (""), функция <see langword="Split" /> возвращает одноэлементный массив, содержащий строку нулевой длины. Если <paramref name="Delimiter" /> является строкой нулевой длины, или он нигде не найден в параметре <paramref name="Expression" />, функция <see langword="Split" /> возвращает одноэлементный массив, содержащий всю строку <paramref name="Expression" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>Возвращает -1, 0 или 1 в зависимости от результата сравнения строк.</summary>
      <param name="String1">Обязательный. Любое допустимое выражение типа <see langword="String" />.</param>
      <param name="String2">Обязательный. Любое допустимое выражение типа <see langword="String" />.</param>
      <param name="Compare">Необязательный элемент. Указывает тип сравнения строк. Если параметр <paramref name="Compare" /> не задан, параметр <see langword="Option Compare" /> определяет тип сравнения.</param>
      <exception cref="T:System.ArgumentException">Недопустимое значение параметра <paramref name="Compare" />.</exception>
      <returns>Одно из следующих значений: <list type="table"><listheader><term>If</term><description>StrComp возвращает</description></listheader><item><term><paramref name="String1" /> при сортировке помещается перед <paramref name="String2" /></term><description>-1</description></item><item><term><paramref name="String1" /> равно <paramref name="String2" />.</term><description>0</description></item><item><term><paramref name="String1" /> при сортировке помещается после <paramref name="String2" /></term><description>1</description></item></list></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
      <summary>Возвращает строку, преобразованную как указано.</summary>
      <param name="str">Обязательный. Преобразуемое выражение <see langword="String" />.</param>
      <param name="Conversion">Обязательный. Член <see cref="T:Microsoft.VisualBasic.VbStrConv" />. Значение перечисления, задающее тип выполняемого преобразования.</param>
      <param name="LocaleID">Необязательный элемент. Значение <see langword="LocaleID" />, если оно отличается от системного значения <see langword="LocaleID" />. (Системное значение <see langword="LocaleID" /> является значением по умолчанию.)</param>
      <exception cref="T:System.ArgumentException">Значение <paramref name="LocaleID" /> не поддерживается, <paramref name="Conversion" /> &lt; 0 или &gt; 2048, либо конверсия не поддерживается для указанного языкового стандарта.</exception>
      <returns>Строка, преобразованная как указано.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
      <summary>Возвращает строку или объект, состоящие из указанного знака, повторенного определенное количество раз.</summary>
      <param name="Number">Обязательный. Выражение <see langword="Integer" />. Длина возвращаемой строки.</param>
      <param name="Character">Обязательный. Любое допустимое выражение <see langword="Char" />, <see langword="String" /> или <see langword="Object" />. Используется только первый знак выражения. Если параметр Character относится к типу <see langword="Object" />, он должен содержать значение <see langword="Char" /> или <see langword="String" />.</param>
      <exception cref="T:System.ArgumentException">Недопустимо значение <paramref name="Number" /> меньшее 0 или типа <paramref name="Character" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Character" /> имеет значение <see langword="Nothing" />.</exception>
      <returns>Строка или объект, состоящие из указанного знака, повторенного определенное количество раз.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
      <summary>Возвращает строку или объект, состоящие из указанного знака, повторенного определенное количество раз.</summary>
      <param name="Number">Обязательный. Выражение <see langword="Integer" />. Длина возвращаемой строки.</param>
      <param name="Character">Обязательный. Любое допустимое выражение <see langword="Char" />, <see langword="String" /> или <see langword="Object" />. Используется только первый знак выражения. Если параметр Character относится к типу <see langword="Object" />, он должен содержать значение <see langword="Char" /> или <see langword="String" />.</param>
      <exception cref="T:System.ArgumentException">Недопустимо значение <paramref name="Number" /> меньшее 0 или типа <paramref name="Character" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Character" /> имеет значение <see langword="Nothing" />.</exception>
      <returns>Строка или объект, состоящие из указанного знака, повторенного определенное количество раз.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
      <summary>Возвращает строку или объект, состоящие из указанного знака, повторенного определенное количество раз.</summary>
      <param name="Number">Обязательный. Выражение <see langword="Integer" />. Длина возвращаемой строки.</param>
      <param name="Character">Обязательный. Любое допустимое выражение <see langword="Char" />, <see langword="String" /> или <see langword="Object" />. Используется только первый знак выражения. Если параметр Character относится к типу <see langword="Object" />, он должен содержать значение <see langword="Char" /> или <see langword="String" />.</param>
      <exception cref="T:System.ArgumentException">Недопустимо значение <paramref name="Number" /> меньшее 0 или типа <paramref name="Character" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Character" /> имеет значение <see langword="Nothing" />.</exception>
      <returns>Строка или объект, состоящие из указанного знака, повторенного определенное количество раз.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrReverse(System.String)">
      <summary>Возвращает строку, содержащую те же знаки, что и в заданной строке, но в противоположном порядке.</summary>
      <param name="Expression">Обязательный. Строковое выражение, знаки которого следует переставить в обратном порядке. Если параметр <paramref name="Expression" /> является строкой нулевой длины (""), то возвращается строка нулевой длины.</param>
      <returns>Строка, содержащая те же знаки, что и в заданной строке, но в противоположном порядке.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Trim(System.String)">
      <summary>Возвращает строку, содержащую копию указанной строки без начальных пробелов (<see langword="LTrim" />), замыкающих пробелов (<see langword="RTrim" />) или без тех и других (<see langword="Trim" />).</summary>
      <param name="str">Обязательный. Любое допустимое выражение типа <see langword="String" />.</param>
      <returns>Строка, содержащая копию указанной строки без начальных пробелов (<see langword="LTrim" />), замыкающих пробелов (<see langword="RTrim" />) или без тех и других (<see langword="Trim" />).</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.UCase(System.Char)">
      <summary>Возвращает строку или знак, содержащий указанную строку, преобразованную в верхний регистр.</summary>
      <param name="Value">Обязательный. Любое допустимое значение <see langword="String" /> или выражение <see langword="Char" />.</param>
      <returns>Строка или знак, содержащие указанную строку, преобразованную в верхний регистр.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.UCase(System.String)">
      <summary>Возвращает строку или знак, содержащий указанную строку, преобразованную в верхний регистр.</summary>
      <param name="Value">Обязательный. Любое допустимое значение <see langword="String" /> или выражение <see langword="Char" />.</param>
      <returns>Строка или знак, содержащие указанную строку, преобразованную в верхний регистр.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.TabInfo">
      <summary>Этот класс поддерживает функции Visual Basic <see langword="Print" /> и <see langword="PrintLine" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TabInfo.Column">
      <summary>Это поле поддерживает функции Visual Basic <see langword="Print" /> и <see langword="PrintLine" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.TriState">
      <summary>Указывает логическое значение или определяет, должно ли при вызове функций форматирования чисел использоваться значение по умолчанию.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.False">
      <summary>False (ложь). Числовое значение этого члена равно 0.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.True">
      <summary>True (истина). Числовое значение этого члена равно –1.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.UseDefault">
      <summary>Значение по умолчанию. Числовое значение этого члена равно –2.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.VariantType">
      <summary>Указывает тип объекта Variant, возвращенного функцией <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Array">
      <summary>Array (массив). Этот элемент эквивалентен константе <see langword="vbArray" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Boolean">
      <summary>
        <see langword="Boolean" />. (<see langword="True" /> или <see langword="False" />.) Этот элемент эквивалентен константе <see langword="vbBoolean" /> в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Byte">
      <summary>
        <see langword="Byte" />. (От 0 до 255.) Этот элемент эквивалентен константе Visual Basic <see langword="vbByte" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Char">
      <summary>
        <see langword="Char" />. (От 0 до 65 535.) Этот элемент эквивалентен константе <see langword="vbChar" /> в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Currency">
      <summary>Currency (валюта). Этот элемент эквивалентен константе <see langword="vbCurrency" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.DataObject">
      <summary>DataObject.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Date">
      <summary>
        <see langword="Date" />. (С 00:00:00 1 января 0001 года по 23:59:59 31 декабря 9999 года.) Этот элемент эквивалентен константе Visual Basic <see langword="vbDate" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Decimal">
      <summary>
        <see langword="Decimal" />. (От 0 до +/-79 228 162 514 264 337 593 543 950 335 без десятичной запятой; от 0 до +/-7,9228162514264337593543950335 с 28 значащими знаками справа от запятой; минимальное ненулевое значение равно +/-0,0000000000000000000000000001.) Этот элемент эквивалентен константе <see langword="vbDecimal" /> в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Double">
      <summary>
        <see langword="Double" />. (От -1,79769313486231E+308 до -4,94065645841247E-324 для отрицательных значений; от 4,94065645841247E-324 до 1,79769313486231E+308 для положительных значений.) Этот элемент эквивалентен константе <see langword="vbDouble" /> в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Empty">
      <summary>Пустая ссылка (Null). Этот элемент эквивалентен константе <see langword="vbEmpty" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Error">
      <summary>
        <see cref="T:System.Exception" />
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Integer">
      <summary>
        <see langword="Integer" />. (От -2 147 483 648 до 2 147 483 647.) Этот элемент эквивалентен константе <see langword="vbInteger" /> в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Long">
      <summary>
        <see langword="Long" />. (От -9 223 372 036 854 775 808 до 9 223 372 036 854 775 807.) Этот элемент эквивалентен константе <see langword="vbLong" /> в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Null">
      <summary>Пустой объект (Null). Этот элемент эквивалентен константе <see langword="vbNull" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Object">
      <summary>В переменной с типом <see langword="Object" /> может храниться любой тип. Этот элемент эквивалентен константе <see langword="vbObject" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Short">
      <summary>
        <see langword="Short" />. (От −32 768 до 32 767.)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Single">
      <summary>
        <see langword="Single" />. (От 3,402823E+38 до -1,401298E-45 для отрицательных значений; от 1,401298E-45 до 3,402823E+38 для положительных значений.) Этот элемент эквивалентен константе <see langword="vbSingle" /> в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.String">
      <summary>
        <see langword="String" />. (От 0 до приблизительно 2 миллиардов знаков Юникода.) Этот элемент эквивалентен константе <see langword="vbString" /> в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.UserDefinedType">
      <summary>Пользовательский тип. Диапазон каждого элемента структуры определяется типом данных элемента и не зависит от диапазонов других элементов. Этот элемент эквивалентен константе <see langword="vbUserDefinedType" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Variant">
      <summary>
        <see langword="Variant" />. Этот элемент эквивалентен константе <see langword="vbVariant" />в языке Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.VBFixedArrayAttribute">
      <summary>Указывает, что массив в структуре или внешней переменной следует рассматривать как массив с фиксированным размером.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedArrayAttribute.#ctor(System.Int32)">
      <summary>Инициализирует значение свойства <see langword="Bounds" />.</summary>
      <param name="UpperBound1">Инициализирует значение верхнего поля, представляющего размер первого измерения массива.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedArrayAttribute.#ctor(System.Int32,System.Int32)">
      <summary>Инициализирует значение свойства <see langword="Bounds" />.</summary>
      <param name="UpperBound1">Инициализирует значение верхнего поля, представляющего размер первого измерения массива.</param>
      <param name="UpperBound2">Инициализирует значение верхнего поля, представляющего размер второго измерения массива.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedArrayAttribute.Bounds">
      <summary>Возвращает границы массива.</summary>
      <returns>Содержит целочисленный массив, представляющий границы массива.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedArrayAttribute.Length">
      <summary>Возвращает размер массива.</summary>
      <returns>Содержит целочисленное значение, представляющее количество элементов в массиве.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VBFixedStringAttribute">
      <summary>Указывает, что строка должна обрабатываться как строка с фиксированной длиной.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedStringAttribute.#ctor(System.Int32)">
      <summary>Инициализирует значение поля <see langword="SizeConst" />.</summary>
      <param name="Length">Длина строки фиксированного размера.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedStringAttribute.Length">
      <summary>Получает длину строки.</summary>
      <returns>Длина строки.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VBMath">
      <summary>В модуле <see langword="VbMath" /> содержатся процедуры, используемые для выполнения математических операций.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Randomize">
      <summary>Инициализирует генератор случайных чисел.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)">
      <summary>Инициализирует генератор случайных чисел.</summary>
      <param name="Number">Необязательный элемент. Любое допустимое числовое выражение или <see langword="Object" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Rnd">
      <summary>Возвращает случайное число типа <see cref="T:System.Single" />.</summary>
      <returns>Следующее случайное число в последовательности.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)">
      <summary>Возвращает случайное число типа <see cref="T:System.Single" />.</summary>
      <param name="Number">Необязательный элемент. Значение типа <see cref="T:System.Single" /> значение или любое допустимое выражение типа <see cref="T:System.Single" />.</param>
      <returns>Если аргумент Number меньше нуля, Rnd создает каждый раз одно и то же число, используя <paramref name="Number" /> в качестве начального числа. Если аргумент Number больше нуля, Rnd создает следующее случайное число в последовательности. Если аргумент Number равен нулю, функция Rnd генерирует самое последнее созданное число. Если аргумент Number не указан, функция Rnd создает следующее случайное число в последовательности.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VbStrConv">
      <summary>Указывает, преобразование какого типа следует выполнить при вызове функции <see langword="StrConv" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Hiragana">
      <summary>Преобразует все символы катакана в символы хирагана. Используется только с японским языком. Этот элемент эквивалентен константе <see langword="vbHiragana" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Katakana">
      <summary>Преобразует все символы хирагана в символы катакана. Используется только с японским языком. Этот элемент эквивалентен константе <see langword="vbKatakana" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.LinguisticCasing">
      <summary>Изменяет для строки правила файловой системы в лингвистические правила учета регистра. Этот элемент эквивалентен константе <see langword="vbLinguisticCasing" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Lowercase">
      <summary>Преобразует строку в нижний регистр. Этот элемент эквивалентен константе <see langword="vbLowerCase" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Narrow">
      <summary>Преобразует все широкие (двухбайтовые) символы в узкие (однобайтовые). Используется с азиатскими языками. Этот элемент эквивалентен константе <see langword="vbNarrow" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.None">
      <summary>Преобразование не выполняется.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.ProperCase">
      <summary>Преобразует первую букву каждого слова в строке в верхний регистр. Этот элемент эквивалентен константе <see langword="vbProperCase" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.SimplifiedChinese">
      <summary>Преобразует строку в символы упрощенного китайского письма. Этот элемент эквивалентен константе <see langword="vbSimplifiedChinese" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.TraditionalChinese">
      <summary>Преобразует строку в символы традиционного китайского письма. Этот элемент эквивалентен константе <see langword="vbTraditionalChinese" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Uppercase">
      <summary>Преобразует строку в верхний регистр. Этот элемент эквивалентен константе <see langword="vbUpperCase" />в языке Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Wide">
      <summary>Преобразует все узкие (однобайтовые) символы в широкие (двухбайтовые). Используется с азиатскими языками. Этот элемент эквивалентен константе <see langword="vbWide" />в языке Visual Basic. Преобразование может использовать форму нормализации C даже в том случае, если входной символ уже является полноширинным. Например, полноширинная строка "は゛" нормализуется к виду "ば". См. статью Формы нормализации Юникода.</summary>
    </member>
  </members>
</doc>