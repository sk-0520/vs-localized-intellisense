<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.Http</name>
  </assembly>
  <members>
    <member name="T:System.Net.Http.ByteArrayContent">
      <summary>Fornisce il contenuto HTTP basato su una matrice di byte.</summary>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.ByteArrayContent" />.</summary>
      <param name="content">Contenuto utilizzato per inizializzare l'oggetto <see cref="T:System.Net.Http.ByteArrayContent" />.</param>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="content" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.ByteArrayContent" />.</summary>
      <param name="content">Contenuto usato per inizializzare <see cref="T:System.Net.Http.ByteArrayContent" />.</param>
      <param name="offset">Offset, in byte, nel parametro <paramref name="content" /> utilizzato per inizializzare l'oggetto <see cref="T:System.Net.Http.ByteArrayContent" />.</param>
      <param name="count">Numero di byte in <paramref name="content" /> a partire dal parametro <paramref name="offset" /> utilizzato per inizializzare <see cref="T:System.Net.Http.ByteArrayContent" />.</param>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="content" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="offset" /> è minore di zero.  
  
-oppure- 
Il parametro <paramref name="offset" /> è maggiore della lunghezza del contenuto specificato dal parametro <paramref name="content" />.  
  
-oppure- 
Il parametro <paramref name="count" /> è minore di zero.  
  
-oppure- 
Il parametro <paramref name="count" /> è maggiore della lunghezza del contenuto specificato dal parametro <paramref name="content" />, meno il parametro <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.CreateContentReadStream(System.Threading.CancellationToken)">
      <summary>Crea un flusso di contenuto HTTP per la lettura. Usa la memoria da <see cref="T:System.Net.Http.ByteArrayContent" /> come archivio di backup.</summary>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
      <returns>Flusso di contenuto HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync">
      <summary>Crea un flusso di contenuto HTTP come operazione asincrona di lettura il cui archivio di backup è la memoria da <see cref="T:System.Net.Http.ByteArrayContent" />.</summary>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary>Serializza e scrive in un flusso di contenuto HTTP la matrice di byte specificata nel costruttore.</summary>
      <param name="stream">Il flusso di destinazione.</param>
      <param name="context">Informazioni facoltative relative al trasporto, ad esempio il token di associazione del canale. Questo parametro può essere <see langword="null" />.</param>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary>Serializza e scrive in un flusso di contenuto HTTP la matrice di byte specificata nel costruttore, come operazione asincrona.</summary>
      <param name="stream">Il flusso di destinazione.</param>
      <param name="context">Informazioni relative al trasporto, ad esempio il token di associazione del canale. Questo parametro può essere <see langword="null" />.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary>Serializza e scrive in un flusso di contenuto HTTP la matrice di byte specificata nel costruttore, come operazione asincrona.</summary>
      <param name="stream">Il flusso di destinazione.</param>
      <param name="context">Informazioni relative al trasporto, ad esempio il token di associazione del canale. Questo parametro può essere <see langword="null" />.</param>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)">
      <summary>Determina se una matrice di byte ha una lunghezza in byte valida.</summary>
      <param name="length">Lunghezza in byte della matrice di byte.</param>
      <returns>
        <see langword="true" /> se <paramref name="length" /> è una lunghezza valida; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.ClientCertificateOption">
      <summary>Specifica come i certificati client vengono forniti.</summary>
    </member>
    <member name="F:System.Net.Http.ClientCertificateOption.Automatic">
      <summary>
        <see cref="T:System.Net.Http.HttpClientHandler" /> tenterà di fornire automaticamente tutti i certificati client disponibili.</summary>
    </member>
    <member name="F:System.Net.Http.ClientCertificateOption.Manual">
      <summary>L'applicazione manualmente fornisce i certificati client a <see cref="T:System.Net.Http.WebRequestHandler" />. Questo valore è quello predefinito.</summary>
    </member>
    <member name="T:System.Net.Http.DelegatingHandler">
      <summary>Tipo per gestori HTTP che delegano l'elaborazione dei messaggi di risposta HTTP a un altro gestore, chiamato gestore interno.</summary>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.#ctor">
      <summary>Crea una nuova istanza della classe <see cref="T:System.Net.Http.DelegatingHandler" />.</summary>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary>Crea una nuova istanza di una classe <see cref="T:System.Net.Http.DelegatingHandler" /> con un gestore interno specificato.</summary>
      <param name="innerHandler">Gestore interno responsabile per l'elaborazione dei messaggi di risposta HTTP.</param>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate da <see cref="T:System.Net.Http.DelegatingHandler" /> e, facoltativamente, elimina le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Invia al gestore interno una richiesta HTTP da inviare al server.</summary>
      <param name="request">Messaggio di richiesta HTTP da inviare al server.</param>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
      <returns>Messaggio di risposta HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Invia al gestore interno una richiesta HTTP da inviare al server come operazione asincrona.</summary>
      <param name="request">Messaggio di richiesta HTTP da inviare al server.</param>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="request" /> era <see langword="null" />.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="P:System.Net.Http.DelegatingHandler.InnerHandler">
      <summary>Ottiene o imposta il gestore interno che elabora i messaggi di risposta HTTP.</summary>
      <returns>Gestore interno per i messaggi di risposta HTTP.</returns>
    </member>
    <member name="T:System.Net.Http.FormUrlEncodedContent">
      <summary>Contenitore per le tuple nome/valore codificate utilizzando il tipo MIME application/x-www-form-urlencoded.</summary>
    </member>
    <member name="M:System.Net.Http.FormUrlEncodedContent.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.FormUrlEncodedContent" /> con una raccolta di coppie nome/valore specifica.</summary>
      <param name="nameValueCollection">Raccolta di coppie nome/valore.</param>
    </member>
    <member name="M:System.Net.Http.FormUrlEncodedContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary>Consente di serializzare e scrivere in un flusso di contenuto HTTP tutte le tuple nome/valore specificate nel costruttore come operazione asincrona.</summary>
      <param name="stream">Il flusso di destinazione.</param>
      <param name="context">Informazioni relative al trasporto, ad esempio il token di associazione del canale. Questo parametro può essere <see langword="null" />.</param>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="T:System.Net.Http.HeaderEncodingSelector`1">
      <summary>Rappresenta un metodo che specifica la codifica da usare per l'interpretazione dei valori di intestazione.</summary>
      <param name="headerName">Nome dell'intestazione da specificare per la codifica.</param>
      <param name="context">Tipo per cui si stanno codificando/decodificando le intestazioni.</param>
      <typeparam name="TContext" />
      <returns>Codifica da usare o <see langword="null" /> per usare il comportamento predefinito.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.AuthenticationHeaderValue">
      <summary>Rappresenta le informazioni di autenticazione nei valori di intestazione Authorization, ProxyAuthorization, WWW-Authenticate e Proxy-Authenticate.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />.</summary>
      <param name="scheme">Schema da usare per l'autorizzazione.</param>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />.</summary>
      <param name="scheme">Schema da usare per l'autorizzazione.</param>
      <param name="parameter">Le credenziali che contengono le informazioni di autenticazione dell'agente utente per la risorsa richiesta.</param>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.Equals(System.Object)">
      <summary>Determina se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> corrente.</summary>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.GetHashCode">
      <summary>Viene usato come funzione hash per un oggetto <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />.</summary>
      <returns>Codice hash per l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.Parse(System.String)">
      <summary>Converte una stringa in un'istanza di <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />.</summary>
      <param name="input">Stringa che rappresenta le informazioni sul valore dell'intestazione relativa all'autenticazione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è un riferimento <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> non include informazioni valide sul valore dell'intestazione relativa all'autenticazione.</exception>
      <returns>Istanza di <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuovo oggetto che è una copia dell'istanza corrente di <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />.</summary>
      <returns>Copia dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.TryParse(System.String,System.Net.Http.Headers.AuthenticationHeaderValue@)">
      <summary>Determina se una stringa contiene informazioni valide su <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />.</summary>
      <param name="input">Stringa da convalidare.</param>
      <param name="parsedValue">Versione <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> della stringa.</param>
      <returns>
        <see langword="true" /> se <paramref name="input" /> contiene informazioni valide su <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.AuthenticationHeaderValue.Parameter">
      <summary>Ottiene le credenziali che contengono le informazioni di autenticazione dell'agente utente per la risorsa richiesta.</summary>
      <returns>Credenziali contenenti le informazioni di autenticazione.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.AuthenticationHeaderValue.Scheme">
      <summary>Ottiene lo schema da usare per l'autorizzazione.</summary>
      <returns>Schema da usare per l'autorizzazione.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.CacheControlHeaderValue">
      <summary>Rappresenta il valore dell'intestazione Cache-Control.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)">
      <summary>Determina se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> corrente.</summary>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode">
      <summary>Viene usato come funzione hash per un oggetto <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />.</summary>
      <returns>Codice hash per l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)">
      <summary>Converte una stringa in un'istanza di <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />.</summary>
      <param name="input">Stringa che rappresenta le informazioni sul valore dell'intestazione relativa al controllo cach.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è un riferimento <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> non include informazioni valide sul valore dell'intestazione relativa al controllo cache.</exception>
      <returns>Istanza di <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuovo oggetto che è una copia dell'istanza corrente di <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />.</summary>
      <returns>Copia dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)">
      <summary>Determina se una stringa contiene informazioni valide su <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />.</summary>
      <param name="input">Stringa da convalidare.</param>
      <param name="parsedValue">Versione <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> della stringa.</param>
      <returns>
        <see langword="true" /> se <paramref name="input" /> contiene informazioni valide su <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.Extensions">
      <summary>Token di estensione della cache, ciascuno con un valore facoltativo assegnato.</summary>
      <returns>Raccolta di token di estensione della cache, ciascuno con un valore facoltativo assegnato.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxAge">
      <summary>Tempo massimo, espresso in secondi, entro il quale il client HTTP accetta una risposta.</summary>
      <returns>Tempo espresso in secondi.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale">
      <summary>Determina se un client HTTP accetta una risposta che ha superato la data e l'ora di scadenza.</summary>
      <returns>
        <see langword="true" /> se il client HTTP accetta una risposta che ha superato la data e l'ora di scadenza; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit">
      <summary>Tempo massimo, espresso in secondi, entro il quale un client HTTP accetta una risposta che ha superato l'ora di scadenza.</summary>
      <returns>Tempo espresso in secondi.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MinFresh">
      <summary>Tempo di aggiornamento, espresso in secondi, entro il quale un client HTTP accetta una risposta.</summary>
      <returns>Tempo espresso in secondi.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate">
      <summary>Determina se il server di origine richiede la riconvalida di una voce della cache in un eventuale uso successivo nel caso in cui la voce della cache diventi obsoleta.</summary>
      <returns>
        <see langword="true" /> se il server di origine richiede la riconvalida di una voce della cache in un eventuale uso successivo nel caso in cui la voce diventi obsoleta; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoCache">
      <summary>Determina se un client HTTP accetta una risposta memorizzata nella cache.</summary>
      <returns>
        <see langword="true" /> Se il client HTTP non è disposto ad accettare una risposta memorizzata nella cache; in caso contrario, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders">
      <summary>Raccolta di nomi di campo nella direttiva "no-cache" in un campo di intestazione cache-control di una risposta HTTP.</summary>
      <returns>Raccolta di nomi di campo.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoStore">
      <summary>Determina se una cache non deve memorizzare nessuna parte del messaggio di richiesta HTTP o di una risposta.</summary>
      <returns>
        <see langword="true" /> Se una cache non deve archiviare alcuna parte del messaggio di richiesta HTTP o di una risposta; in caso contrario, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoTransform">
      <summary>Determina se una cache o un proxy non deve modificare qualsiasi aspetto del corpo dell'entità.</summary>
      <returns>
        <see langword="true" /> se una cache o un proxy non deve modificare qualsiasi aspetto del corpo dell'entità; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached">
      <summary>Determina se una cache deve rispondere usando una voce memorizzata nella cache coerente con altri vincoli della richiesta HTTP oppure con un messaggio di stato 504 (Timeout gateway).</summary>
      <returns>
        <see langword="true" /> se una cache deve rispondere usando una voce memorizzata nella cache coerente con altri vincoli della richiesta HTTP oppure con un messaggio di stato 504 (Timeout gateway); in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.Private">
      <summary>Determina se l'intero messaggio di risposta HTTP, o parte di esso, è destinato a un singolo utente e non deve essere memorizzato da una cache condivisa.</summary>
      <returns>
        <see langword="true" /> se il messaggio di risposta HTTP è destinato a un singolo utente e non deve essere memorizzato da una cache condivisa; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders">
      <summary>Raccolta di nomi di campo nella direttiva "private" in un campo di intestazione cache-control di una risposta HTTP.</summary>
      <returns>Raccolta di nomi di campo.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate">
      <summary>Determina se il server di origine richiede la riconvalida di una voce della cache in un eventuale uso successivo nel caso in cui la voce diventi obsoleta per le cache di agente utente condivise.</summary>
      <returns>
        <see langword="true" /> se il server di origine richiede la riconvalida di una voce della cache in un eventuale uso successivo nel caso in cui la voce diventi obsoleta per le cache di agente utente condivise; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.Public">
      <summary>Determina se una risposta HTTP può essere memorizzata da una cache qualsiasi, anche se normalmente non è memorizzabile nella cache oppure è memorizzabile solo all'interno di una cache non condivisa.</summary>
      <returns>
        <see langword="true" /> se la risposta HTTP può essere memorizzata da una cache qualsiasi, anche se normalmente non è memorizzabile nella cache oppure è memorizzabile solo all'interno di una cache non condivisa; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge">
      <summary>Il tempo massimo condiviso, espresso in secondi, entro il quale una risposta HTTP esegue l'override della direttiva "max-age" in un'intestazione cache-control o in un'intestazione Expires per una cache condivisa.</summary>
      <returns>Tempo espresso in secondi.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ContentDispositionHeaderValue">
      <summary>Rappresenta il valore dell'intestazione Content-Disposition.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.#ctor(System.Net.Http.Headers.ContentDispositionHeaderValue)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</summary>
      <param name="source">Oggetto <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</summary>
      <param name="dispositionType">Stringa contenente un <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.Equals(System.Object)">
      <summary>Determina se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> corrente.</summary>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.GetHashCode">
      <summary>Viene usato come funzione hash per un oggetto <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</summary>
      <returns>Codice hash per l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.Parse(System.String)">
      <summary>Converte una stringa in un'istanza di <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</summary>
      <param name="input">Stringa che rappresenta le informazioni sul valore dell'intestazione relativa alla disposizione dei contenuti.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è un riferimento <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> non include informazioni valide sul valore dell'intestazione relativa alla disposizione dei contenuti.</exception>
      <returns>Istanza di <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuovo oggetto che è una copia dell'istanza corrente di <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</summary>
      <returns>Copia dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.TryParse(System.String,System.Net.Http.Headers.ContentDispositionHeaderValue@)">
      <summary>Determina se una stringa contiene informazioni valide su <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</summary>
      <param name="input">Stringa da convalidare.</param>
      <param name="parsedValue">Versione <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> della stringa.</param>
      <returns>
        <see langword="true" /> se <paramref name="input" /> contiene informazioni valide su <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.CreationDate">
      <summary>Data di creazione del file.</summary>
      <returns>Data di creazione del file.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.DispositionType">
      <summary>Tipo di disposizione per una parte di corpo del contenuto.</summary>
      <returns>Tipo di disposizione.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.FileName">
      <summary>Suggerimento per creare un nome file per l'archiviazione del payload del messaggio da usare se l'entità viene scollegata e archiviata in un file separato.</summary>
      <returns>Nome file suggerito.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.FileNameStar">
      <summary>Suggerimento per creare nomi file per l'archiviazione dei payload di messaggi da usare se le entità vengono scollegate e archiviate in un file separato.</summary>
      <returns>Nome suggerito per il nome file del form*.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.ModificationDate">
      <summary>Data dell'ultima modifica apportata al file.</summary>
      <returns>Data di modifica del file.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Name">
      <summary>Nome di una parte di corpo del contenuto.</summary>
      <returns>Nome della parte di corpo del contenuto.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Parameters">
      <summary>Set di parametri che include l'intestazione Content-Disposition.</summary>
      <returns>Raccolta di parametri.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.ReadDate">
      <summary>Data dell'ultima lettura del file.</summary>
      <returns>Data dell'ultima lettura.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Size">
      <summary>Dimensione approssimativa del file, espressa in byte.</summary>
      <returns>Dimensione approssimativa, espressa in byte.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ContentRangeHeaderValue">
      <summary>Rappresenta il valore dell'intestazione Content-Range.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</summary>
      <param name="length">Il punto iniziale o finale dell'intervallo, in byte.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</summary>
      <param name="from">Posizione, espressa in byte, in cui avviare l'invio dei dati.</param>
      <param name="to">La posizione, in byte, in cui interrompere l'invio dei dati.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64,System.Int64)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</summary>
      <param name="from">Posizione, espressa in byte, in cui avviare l'invio dei dati.</param>
      <param name="to">La posizione, in byte, in cui interrompere l'invio dei dati.</param>
      <param name="length">Il punto iniziale o finale dell'intervallo, in byte.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> corrente.</summary>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.GetHashCode">
      <summary>Viene usato come funzione hash per un oggetto <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</summary>
      <returns>Codice hash per l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.Parse(System.String)">
      <summary>Converte una stringa in un'istanza di <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</summary>
      <param name="input">Stringa che rappresenta le informazioni sul valore dell'intestazione relativa all'intervallo di contenuti.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è un riferimento <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> non include informazioni valide sul valore dell'intestazione relativa all'intervallo di contenuti.</exception>
      <returns>Istanza di <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuovo oggetto che è una copia dell'istanza corrente di <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</summary>
      <returns>Copia dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.ContentRangeHeaderValue@)">
      <summary>Determina se una stringa contiene informazioni valide su <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</summary>
      <param name="input">Stringa da convalidare.</param>
      <param name="parsedValue">Versione <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> della stringa.</param>
      <returns>
        <see langword="true" /> se <paramref name="input" /> contiene informazioni valide su <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.From">
      <summary>Ottiene la posizione in cui avviare l'invio dei dati.</summary>
      <returns>Posizione, espressa in byte, in cui avviare l'invio dei dati.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.HasLength">
      <summary>Ottiene un valore che indica se per l'intestazione Content-Range è stata specificata una lunghezza.</summary>
      <returns>
        <see langword="true" /> se per Content-Range è stata specificata una lunghezza; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.HasRange">
      <summary>Ottiene un valore che indica se per Content-Range è stato specificato un intervallo.</summary>
      <returns>
        <see langword="true" /> se per Content-Range è stato specificato un intervallo; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.Length">
      <summary>Ottiene la lunghezza del corpo completo dell'entità.</summary>
      <returns>Lunghezza del corpo completo dell'entità.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.To">
      <summary>Ottiene la posizione in cui arrestare l'invio dei dati.</summary>
      <returns>Posizione in cui arrestare l'invio dei dati.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.Unit">
      <summary>Unità di intervallo usate.</summary>
      <returns>Oggetto <see cref="T:System.String" /> contenente unità di intervallo.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.EntityTagHeaderValue">
      <summary>Rappresenta un valore di intestazione entity-tag.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</summary>
      <param name="tag">Stringa contenente un oggetto <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</param>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</summary>
      <param name="tag">Stringa contenente un oggetto <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</param>
      <param name="isWeak">Un valore che indica se questa intestazione del tag di entità è una convalida debole. Se l'intestazione del tag di entità è una convalida debole, allora <paramref name="isWeak" /> deve essere impostato su <see langword="true" />. Se l'intestazione del tag di entità è una convalida forte, allora <paramref name="isWeak" /> deve essere impostato su <see langword="false" />.</param>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.Equals(System.Object)">
      <summary>Determina se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> corrente.</summary>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.GetHashCode">
      <summary>Viene usato come funzione hash per un oggetto <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</summary>
      <returns>Codice hash per l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.Parse(System.String)">
      <summary>Converte una stringa in un'istanza di <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</summary>
      <param name="input">Stringa che rappresenta le informazioni sul valore dell'intestazione relativa ai tag di entità.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è un riferimento <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> non include informazioni valide sul valore dell'intestazione relativa ai tag di entità.</exception>
      <returns>Istanza di <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuovo oggetto che è una copia dell'istanza corrente di <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</summary>
      <returns>Copia dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.TryParse(System.String,System.Net.Http.Headers.EntityTagHeaderValue@)">
      <summary>Determina se una stringa contiene informazioni valide su <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</summary>
      <param name="input">Stringa da convalidare.</param>
      <param name="parsedValue">Versione <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> della stringa.</param>
      <returns>
        <see langword="true" /> se <paramref name="input" /> contiene informazioni valide su <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.EntityTagHeaderValue.Any">
      <summary>Ottiene il valore di intestazione del tag di entità.</summary>
      <returns>Restituisce <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.EntityTagHeaderValue.IsWeak">
      <summary>Ottiene un valore che indica se il tag di entità è preceduto da un indicatore di debolezza.</summary>
      <returns>
        <see langword="true" /> se il tag di entità è preceduto da un indicatore di debolezza; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.EntityTagHeaderValue.Tag">
      <summary>Ottiene la stringa tra virgolette opaca.</summary>
      <returns>Stringa tra virgolette opaca.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpContentHeaders">
      <summary>Rappresenta la raccolta di intestazioni di contenuto, come definito in RFC 2616.</summary>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.Allow">
      <summary>Ottiene il valore dell'intestazione di contenuto <see langword="Allow" /> per una risposta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="Allow" /> per una risposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentDisposition">
      <summary>Ottiene il valore dell'intestazione di contenuto <see langword="Content-Disposition" /> per una risposta HTTP.</summary>
      <returns>Valore dell'intestazione di contenuto <see langword="Content-Disposition" /> per una risposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentEncoding">
      <summary>Ottiene il valore dell'intestazione di contenuto <see langword="Content-Encoding" /> per una risposta HTTP.</summary>
      <returns>Valore dell'intestazione di contenuto <see langword="Content-Encoding" /> per una risposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentLanguage">
      <summary>Ottiene il valore dell'intestazione di contenuto <see langword="Content-Language" /> per una risposta HTTP.</summary>
      <returns>Valore dell'intestazione di contenuto <see langword="Content-Language" /> per una risposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentLength">
      <summary>Ottiene o imposta il valore dell'intestazione di contenuto <see langword="Content-Length" /> per una risposta HTTP.</summary>
      <returns>Valore dell'intestazione di contenuto <see langword="Content-Length" /> per una risposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentLocation">
      <summary>Ottiene o imposta il valore dell'intestazione di contenuto <see langword="Content-Location" /> per una risposta HTTP.</summary>
      <returns>Valore dell'intestazione di contenuto <see langword="Content-Location" /> per una risposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentMD5">
      <summary>Ottiene o imposta il valore dell'intestazione di contenuto <see langword="Content-MD5" /> per una risposta HTTP.</summary>
      <returns>Valore dell'intestazione di contenuto <see langword="Content-MD5" /> per una risposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentRange">
      <summary>Ottiene o imposta il valore dell'intestazione di contenuto <see langword="Content-Range" /> per una risposta HTTP.</summary>
      <returns>Valore dell'intestazione di contenuto <see langword="Content-Range" /> per una risposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentType">
      <summary>Ottiene o imposta il valore dell'intestazione di contenuto <see langword="Content-Type" /> per una risposta HTTP.</summary>
      <returns>Valore dell'intestazione di contenuto <see langword="Content-Type" /> per una risposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.Expires">
      <summary>Ottiene o imposta il valore dell'intestazione di contenuto <see langword="Expires" /> per una risposta HTTP.</summary>
      <returns>Valore dell'intestazione di contenuto <see langword="Expires" /> per una risposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.LastModified">
      <summary>Ottiene o imposta il valore dell'intestazione di contenuto <see langword="Last-Modified" /> per una risposta HTTP.</summary>
      <returns>Valore dell'intestazione di contenuto <see langword="Last-Modified" /> per una risposta HTTP.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpHeaders">
      <summary>Raccolta di intestazioni e relativi valori, come definito in RFC 2616.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Aggiunge l'intestazione specificata e i valori relativi nella raccolta <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <param name="name">Intestazione da aggiungere alla raccolta.</param>
      <param name="values">Elenco di valori dell'intestazione da aggiungere alla raccolta.</param>
      <exception cref="T:System.ArgumentException">Il nome non può essere Null o vuoto.</exception>
      <exception cref="T:System.ArgumentNullException">I valori non possono essere Null o vuoti.</exception>
      <exception cref="T:System.InvalidOperationException">Nome dell'intestazione utilizzato in modo improprio. Verificare che le intestazioni delle richieste vengano usate con oggetti HttpRequestMessage, le intestazioni di risposta con oggetti HttpResponseMessage e le intestazioni del contenuto con oggetti HttpContent.</exception>
      <exception cref="T:System.FormatException">Il formato del nome dell'intestazione non è valido.

-oppure-

I caratteri di nuova riga nei valori dell'intestazione devono essere seguiti da un carattere di spazio vuoto.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.String)">
      <summary>Aggiunge l'intestazione specificata e il valore relativo nella raccolta <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <param name="name">Intestazione da aggiungere alla raccolta.</param>
      <param name="value">Contenuto dell'intestazione.</param>
      <exception cref="T:System.ArgumentException">Il nome non può essere Null o vuoto.</exception>
      <exception cref="T:System.InvalidOperationException">Nome dell'intestazione utilizzato in modo improprio. Verificare che le intestazioni delle richieste vengano usate con oggetti HttpRequestMessage, le intestazioni di risposta con oggetti HttpResponseMessage e le intestazioni del contenuto con oggetti HttpContent.</exception>
      <exception cref="T:System.FormatException">Il formato del nome dell'intestazione non è valido.

-oppure-

I caratteri di nuova riga nei valori dell'intestazione devono essere seguiti da un carattere di spazio vuoto.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Clear">
      <summary>Rimuove tutte le intestazioni dalla raccolta <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Contains(System.String)">
      <summary>Restituisce se esiste una specifica intestazione nella raccolta <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <param name="name">Intestazione specifica.</param>
      <returns>
        <see langword="true" /> se l'intestazione specifica esiste nella raccolta; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere l'istanza di <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <returns>Enumeratore per l'oggetto <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.GetValues(System.String)">
      <summary>Restituisce tutti i valori per un'intestazione specificata archiviata nella raccolta <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <param name="name">Intestazione specificata per la quale restituire i valori.</param>
      <exception cref="T:System.InvalidOperationException">Impossibile trovare l'intestazione.</exception>
      <returns>Matrice di stringhe di intestazione.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Remove(System.String)">
      <summary>Rimuove l'intestazione specificata dalla raccolta <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <param name="name">Il nome dell'intestazione da rimuovere dalla raccolta.</param>
      <returns>Restituisce <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.System#Collections#IEnumerable#GetEnumerator">
      <summary>Ottiene un enumeratore in grado di scorrere un oggetto <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <returns>Istanza di un'implementazione di un oggetto <see cref="T:System.Collections.IEnumerator" /> che è in grado di scorrere un oggetto <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto <see cref="T:System.Net.Http.Headers.HttpHeaders" /> corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Restituisce un valore che indica se l'intestazione specificata e i relativi valori sono stati aggiunti alla raccolta <see cref="T:System.Net.Http.Headers.HttpHeaders" /> senza convalidare le informazioni fornite.</summary>
      <param name="name">Intestazione da aggiungere alla raccolta.</param>
      <param name="values">Valori dell'intestazione.</param>
      <returns>
        <see langword="true" /> se è stato possibile aggiungere alla raccolta i valori <paramref name="name" /> e <paramref name="values" /> dell'intestazione specificata; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.String)">
      <summary>Restituisce un valore che indica se l'intestazione specificata e il relativo valore sono stati aggiunti alla raccolta <see cref="T:System.Net.Http.Headers.HttpHeaders" /> senza convalidare le informazioni fornite.</summary>
      <param name="name">Intestazione da aggiungere alla raccolta.</param>
      <param name="value">Contenuto dell'intestazione.</param>
      <returns>
        <see langword="true" /> se è stato possibile aggiungere alla raccolta i valori <paramref name="name" /> e <paramref name="value" /> dell'intestazione specificata; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)">
      <summary>Restituito se un'intestazione e i valori specificati vengono archiviati nella raccolta <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <param name="name">Intestazione specificata.</param>
      <param name="values">Valori dell'intestazione specificata.</param>
      <returns>
        <see langword="true" /> se i valori <paramref name="name" /> e <see langword="values" /> dell'intestazione specificata sono archiviati nella raccolta; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpHeaderValueCollection`1">
      <summary>Rappresenta una raccolta di valori di intestazione.</summary>
      <typeparam name="T">Tipo di raccolta di intestazione.</typeparam>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Add(`0)">
      <summary>Aggiunge una voce a <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <param name="item">Elemento da aggiungere alla raccolta dell'intestazione.</param>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Clear">
      <summary>Rimuove tutte le voci da <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Contains(`0)">
      <summary>Determina se <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> contiene un elemento.</summary>
      <param name="item">Elemento da trovare nella raccolta intestazioni.</param>
      <returns>
        <see langword="true" /> se la voce è contenuta nell'istanza di <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />; in caso contrario <see langword="false" /></returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.CopyTo(`0[],System.Int32)">
      <summary>Copia l'intero oggetto <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> in un oggetto <see cref="T:System.Array" /> compatibile unidimensionale, a partire dall'indice specificato della matrice di destinazione.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="arrayIndex">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.GetEnumerator">
      <summary>Restituisce un enumeratore che esegue l'iterazione di <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <returns>Enumeratore per l'istanza di <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.ParseAdd(System.String)">
      <summary>Analizza e aggiunge una voce all'oggetto <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <param name="input">Voce da aggiungere.</param>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Remove(`0)">
      <summary>Rimuove l'elemento specificato dall'oggetto <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <param name="item">Elemento da rimuovere.</param>
      <returns>
        <see langword="true" /> se <paramref name="item" /> è stato rimosso dall'istanza di <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore che esegue l'iterazione di <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <returns>Enumeratore per l'istanza di <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> corrente. .</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.TryParseAdd(System.String)">
      <summary>Determina se l'input può essere analizzato e aggiunto a <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <param name="input">Voce da convalidare.</param>
      <returns>
        <see langword="true" /> se <paramref name="input" /> può essere analizzato e aggiunto all'istanza di <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />; in caso contrario, <see langword="false" /></returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpHeaderValueCollection`1.Count">
      <summary>Ottiene il numero di intestazioni nell'oggetto <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <returns>Numero di intestazioni in una raccolta.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpHeaderValueCollection`1.IsReadOnly">
      <summary>Ottiene un valore che indica se l'istanza di <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> è di sola lettura.</summary>
      <returns>
        <see langword="true" /> se l'istanza di <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> è di sola lettura, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpRequestHeaders">
      <summary>Rappresenta la raccolta di intestazioni di richiesta, come definito in RFC 2616.</summary>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Accept">
      <summary>Ottiene il valore dell'intestazione <see langword="Accept" /> per una richiesta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="Accept" /> per una richiesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptCharset">
      <summary>Ottiene il valore dell'intestazione <see langword="Accept-Charset" /> per una richiesta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="Accept-Charset" /> per una richiesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptEncoding">
      <summary>Ottiene il valore dell'intestazione <see langword="Accept-Encoding" /> per una richiesta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="Accept-Encoding" /> per una richiesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptLanguage">
      <summary>Ottiene il valore dell'intestazione <see langword="Accept-Language" /> per una richiesta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="Accept-Language" /> per una richiesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Authorization">
      <summary>Ottiene o imposta il valore dell'intestazione <see langword="Authorization" /> per una richiesta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="Authorization" /> per una richiesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.CacheControl">
      <summary>Ottiene o imposta il valore dell'intestazione <see langword="Cache-Control" /> per una richiesta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="Cache-Control" /> per una richiesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Connection">
      <summary>Ottiene il valore dell'intestazione <see langword="Connection" /> per una richiesta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="Connection" /> per una richiesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.ConnectionClose">
      <summary>Ottiene o imposta un valore che indica se l'intestazione <see langword="Connection" /> per una richiesta HTTP contiene Close.</summary>
      <returns>
        <see langword="true" /> se l'intestazione <see langword="Connection" /> contiene Close; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Date">
      <summary>Ottiene o imposta il valore dell'intestazione <see langword="Date" /> per una richiesta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="Date" /> per una richiesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Expect">
      <summary>Ottiene il valore dell'intestazione <see langword="Expect" /> per una richiesta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="Expect" /> per una richiesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.ExpectContinue">
      <summary>Ottiene o imposta un valore che indica se l'intestazione <see langword="Expect" /> per una richiesta HTTP contiene Continue.</summary>
      <returns>
        <see langword="true" /> se l'intestazione <see langword="Expect" /> contiene Continue; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.From">
      <summary>Ottiene o imposta il valore dell'intestazione <see langword="From" /> per una richiesta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="From" /> per una richiesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Host">
      <summary>Ottiene o imposta il valore dell'intestazione <see langword="Host" /> per una richiesta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="Host" /> per una richiesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfMatch">
      <summary>Ottiene il valore dell'intestazione <see langword="If-Match" /> per una richiesta HTTP.</summary>
      <returns>Restituisce <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.  
  
Valore dell'intestazione <see langword="If-Match" /> per una richiesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfModifiedSince">
      <summary>Ottiene o imposta il valore dell'intestazione <see langword="If-Modified-Since" /> per una richiesta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="If-Modified-Since" /> per una richiesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfNoneMatch">
      <summary>Ottiene il valore dell'intestazione <see langword="If-None-Match" /> per una richiesta HTTP.</summary>
      <returns>Ottiene il valore dell'intestazione <see langword="If-None-Match" /> per una richiesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfRange">
      <summary>Ottiene o imposta il valore dell'intestazione <see langword="If-Range" /> per una richiesta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="If-Range" /> per una richiesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfUnmodifiedSince">
      <summary>Ottiene o imposta il valore dell'intestazione <see langword="If-Unmodified-Since" /> per una richiesta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="If-Unmodified-Since" /> per una richiesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.MaxForwards">
      <summary>Ottiene o imposta il valore dell'intestazione <see langword="Max-Forwards" /> per una richiesta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="Max-Forwards" /> per una richiesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Pragma">
      <summary>Ottiene il valore dell'intestazione <see langword="Pragma" /> per una richiesta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="Pragma" /> per una richiesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.ProxyAuthorization">
      <summary>Ottiene o imposta il valore dell'intestazione <see langword="Proxy-Authorization" /> per una richiesta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="Proxy-Authorization" /> per una richiesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Range">
      <summary>Ottiene o imposta il valore dell'intestazione <see langword="Range" /> per una richiesta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="Range" /> per una richiesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Referrer">
      <summary>Ottiene o imposta il valore dell'intestazione <see langword="Referer" /> per una richiesta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="Referer" /> per una richiesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.TE">
      <summary>Ottiene il valore dell'intestazione <see langword="TE" /> per una richiesta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="TE" /> per una richiesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Trailer">
      <summary>Ottiene il valore dell'intestazione <see langword="Trailer" /> per una richiesta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="Trailer" /> per una richiesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.TransferEncoding">
      <summary>Ottiene il valore dell'intestazione <see langword="Transfer-Encoding" /> per una richiesta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="Transfer-Encoding" /> per una richiesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.TransferEncodingChunked">
      <summary>Ottiene o imposta un valore che indica se l'intestazione <see langword="Transfer-Encoding" /> per una richiesta HTTP contiene Chunked.</summary>
      <returns>
        <see langword="true" /> se l'intestazione <see langword="Transfer-Encoding" /> contiene Chunked; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Upgrade">
      <summary>Ottiene il valore dell'intestazione <see langword="Upgrade" /> per una richiesta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="Upgrade" /> per una richiesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.UserAgent">
      <summary>Ottiene il valore dell'intestazione <see langword="User-Agent" /> per una richiesta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="User-Agent" /> per una richiesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Via">
      <summary>Ottiene il valore dell'intestazione <see langword="Via" /> per una richiesta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="Via" /> per una richiesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Warning">
      <summary>Ottiene il valore dell'intestazione <see langword="Warning" /> per una richiesta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="Warning" /> per una richiesta HTTP.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpResponseHeaders">
      <summary>Rappresenta la raccolta di intestazioni di risposta, come definito in RFC 2616.</summary>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.AcceptRanges">
      <summary>Ottiene il valore dell'intestazione <see langword="Accept-Ranges" /> per una risposta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="Accept-Ranges" /> per una risposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Age">
      <summary>Ottiene o imposta il valore dell'intestazione <see langword="Age" /> per una risposta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="Age" /> per una risposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.CacheControl">
      <summary>Ottiene o imposta il valore dell'intestazione <see langword="Cache-Control" /> per una risposta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="Cache-Control" /> per una risposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Connection">
      <summary>Ottiene il valore dell'intestazione <see langword="Connection" /> per una risposta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="Connection" /> per una risposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.ConnectionClose">
      <summary>Ottiene o imposta un valore che indica se l'intestazione <see langword="Connection" /> per una risposta HTTP contiene Close.</summary>
      <returns>
        <see langword="true" /> se l'intestazione <see langword="Connection" /> contiene Close; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Date">
      <summary>Ottiene o imposta il valore dell'intestazione <see langword="Date" /> per una risposta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="Date" /> per una risposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.ETag">
      <summary>Ottiene o imposta il valore dell'intestazione <see langword="ETag" /> per una risposta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="ETag" /> per una risposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Location">
      <summary>Ottiene o imposta il valore dell'intestazione <see langword="Location" /> per una risposta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="Location" /> per una risposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Pragma">
      <summary>Ottiene il valore dell'intestazione <see langword="Pragma" /> per una risposta HTTP.</summary>
      <returns>Restituisce <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.  
  
Valore dell'intestazione <see langword="Pragma" /> per una risposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.ProxyAuthenticate">
      <summary>Ottiene il valore dell'intestazione <see langword="Proxy-Authenticate" /> per una risposta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="Proxy-Authenticate" /> per una risposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.RetryAfter">
      <summary>Ottiene o imposta il valore dell'intestazione <see langword="Retry-After" /> per una risposta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="Retry-After" /> per una risposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Server">
      <summary>Ottiene il valore dell'intestazione <see langword="Server" /> per una risposta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="Server" /> per una risposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Trailer">
      <summary>Ottiene il valore dell'intestazione <see langword="Trailer" /> per una risposta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="Trailer" /> per una risposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.TransferEncoding">
      <summary>Ottiene il valore dell'intestazione <see langword="Transfer-Encoding" /> per una risposta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="Transfer-Encoding" /> per una risposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.TransferEncodingChunked">
      <summary>Ottiene o imposta un valore che indica se l'intestazione <see langword="Transfer-Encoding" /> per una risposta HTTP contiene Chunked.</summary>
      <returns>
        <see langword="true" /> se l'intestazione <see langword="Transfer-Encoding" /> contiene Chunked; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Upgrade">
      <summary>Ottiene il valore dell'intestazione <see langword="Upgrade" /> per una risposta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="Upgrade" /> per una risposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Vary">
      <summary>Ottiene il valore dell'intestazione <see langword="Vary" /> per una risposta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="Vary" /> per una risposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Via">
      <summary>Ottiene il valore dell'intestazione <see langword="Via" /> per una risposta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="Via" /> per una risposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Warning">
      <summary>Ottiene il valore dell'intestazione <see langword="Warning" /> per una risposta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="Warning" /> per una risposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.WwwAuthenticate">
      <summary>Ottiene il valore dell'intestazione <see langword="WWW-Authenticate" /> per una risposta HTTP.</summary>
      <returns>Valore dell'intestazione <see langword="WWW-Authenticate" /> per una risposta HTTP.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.MediaTypeHeaderValue">
      <summary>Rappresenta un tipo di supporto utilizzato in un'intestazione Content-Type come definito nello standard RFC 2616.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />.</summary>
      <param name="source">Oggetto <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> utilizzato per inizializzare la nuova istanza.</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />.</summary>
      <param name="mediaType">Origine rappresentata come stringa per inizializzare la nuova istanza.</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.Equals(System.Object)">
      <summary>Determina se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> corrente.</summary>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode">
      <summary>Viene usato come funzione hash per un oggetto <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />.</summary>
      <returns>Codice hash per l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.Parse(System.String)">
      <summary>Converte una stringa in un'istanza di <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />.</summary>
      <param name="input">Stringa che rappresenta le informazioni sul valore dell'intestazione relativa al tipo di supporto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è un riferimento <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> non include informazioni valide sul valore dell'intestazione relativa al tipo di supporto.</exception>
      <returns>Istanza di <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuovo oggetto che è una copia dell'istanza corrente di <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />.</summary>
      <returns>Copia dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeHeaderValue@)">
      <summary>Determina se una stringa contiene informazioni valide su <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />.</summary>
      <param name="input">Stringa da convalidare.</param>
      <param name="parsedValue">Versione <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> della stringa.</param>
      <returns>
        <see langword="true" /> se <paramref name="input" /> contiene informazioni valide su <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeHeaderValue.CharSet">
      <summary>Ottiene o imposta il set di caratteri.</summary>
      <returns>Set di caratteri.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeHeaderValue.MediaType">
      <summary>Ottiene o imposta il valore dell'intestazione media-type.</summary>
      <returns>Valore dell'intestazione media-type.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeHeaderValue.Parameters">
      <summary>Ottiene o imposta i parametri del valore dell'intestazione media-type.</summary>
      <returns>Parametri del valore dell'intestazione media-type.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue">
      <summary>Rappresenta un tipo di supporto con un fattore di qualità aggiuntivo utilizzato in un'intestazione Content-Type.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />.</summary>
      <param name="mediaType">Oggetto <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> rappresentato come stringa per inizializzare la nuova istanza.</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />.</summary>
      <param name="mediaType">Oggetto <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> rappresentato come stringa per inizializzare la nuova istanza.</param>
      <param name="quality">Qualità associata a questo valore di intestazione.</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse(System.String)">
      <summary>Converte una stringa in un'istanza di <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />.</summary>
      <param name="input">Stringa che rappresenta le informazioni sul valore dell'intestazione relativa al tipo di supporto con qualità.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è un riferimento <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> non include informazioni valide sul valore dell'intestazione relativa al tipo di supporto con qualità.</exception>
      <returns>Istanza di <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuovo oggetto che è una copia dell'istanza corrente di <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />.</summary>
      <returns>Copia dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeWithQualityHeaderValue@)">
      <summary>Determina se una stringa contiene informazioni valide su <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />.</summary>
      <param name="input">Stringa da convalidare.</param>
      <param name="parsedValue">Versione <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> della stringa.</param>
      <returns>
        <see langword="true" /> se <paramref name="input" /> contiene informazioni valide su <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Quality">
      <summary>Ottiene o imposta il valore di qualità per <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />.</summary>
      <returns>Valore di qualità dell'oggetto <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.NameValueHeaderValue">
      <summary>Rappresenta una coppia nome/valore utilizzata in varie intestazioni come definito nello standard RFC 2616.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.Net.Http.Headers.NameValueHeaderValue)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</summary>
      <param name="source">Oggetto <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> utilizzato per inizializzare la nuova istanza.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</summary>
      <param name="name">Nome dell'intestazione.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</summary>
      <param name="name">Nome dell'intestazione.</param>
      <param name="value">Valore dell'intestazione.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.Equals(System.Object)">
      <summary>Determina se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> corrente.</summary>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.GetHashCode">
      <summary>Viene usato come funzione hash per un oggetto <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</summary>
      <returns>Codice hash per l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.Parse(System.String)">
      <summary>Converte una stringa in un'istanza di <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</summary>
      <param name="input">Stringa che rappresenta le informazioni sul valore dell'intestazione relativa al valore del nome.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è un riferimento <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> non include informazioni valide sul valore dell'intestazione relativa al valore del nome.</exception>
      <returns>Istanza di <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuovo oggetto che è una copia dell'istanza corrente di <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</summary>
      <returns>Copia dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueHeaderValue@)">
      <summary>Determina se una stringa contiene informazioni valide su <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</summary>
      <param name="input">Stringa da convalidare.</param>
      <param name="parsedValue">Versione <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> della stringa.</param>
      <returns>
        <see langword="true" /> se <paramref name="input" /> contiene informazioni valide su <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.NameValueHeaderValue.Name">
      <summary>Ottiene il nome dell'intestazione.</summary>
      <returns>Nome dell'intestazione.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.NameValueHeaderValue.Value">
      <summary>Ottiene il valore dell'intestazione.</summary>
      <returns>Valore dell'intestazione.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue">
      <summary>Rappresenta una coppia nome/valore con parametri utilizzata in varie intestazioni come definito nello standard RFC 2616.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.Net.Http.Headers.NameValueWithParametersHeaderValue)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <param name="source">Oggetto <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> utilizzato per inizializzare la nuova istanza.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <param name="name">Nome dell'intestazione.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <param name="name">Nome dell'intestazione.</param>
      <param name="value">Valore dell'intestazione.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Equals(System.Object)">
      <summary>Determina se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> corrente.</summary>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.GetHashCode">
      <summary>Viene usato come funzione hash per un oggetto <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <returns>Codice hash per l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parse(System.String)">
      <summary>Converte una stringa in un'istanza di <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <param name="input">Stringa che rappresenta le informazioni sul valore dell'intestazione relativa al valore del nome con parametri.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è un riferimento <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> non include informazioni valide sul valore dell'intestazione relativa al valore del nome con parametri.</exception>
      <returns>Istanza di <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuovo oggetto che è una copia dell'istanza corrente di <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <returns>Copia dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueWithParametersHeaderValue@)">
      <summary>Determina se una stringa contiene informazioni valide su <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <param name="input">Stringa da convalidare.</param>
      <param name="parsedValue">Versione <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> della stringa.</param>
      <returns>
        <see langword="true" /> se <paramref name="input" /> contiene informazioni valide su <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parameters">
      <summary>Ottiene i parametri dall'oggetto <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <returns>Raccolta contenente i parametri.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ProductHeaderValue">
      <summary>Rappresenta un valore di token di prodotto in un'intestazione User-Agent.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />.</summary>
      <param name="name">Nome del prodotto.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />.</summary>
      <param name="name">Valore del nome prodotto.</param>
      <param name="version">Valore della versione del prodotto.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.Equals(System.Object)">
      <summary>Determina se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> corrente.</summary>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.GetHashCode">
      <summary>Viene usato come funzione hash per un oggetto <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />.</summary>
      <returns>Codice hash per l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.Parse(System.String)">
      <summary>Converte una stringa in un'istanza di <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />.</summary>
      <param name="input">Stringa che rappresenta le informazioni sul valore dell'intestazione relativa al prodotto.</param>
      <returns>Istanza di <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuovo oggetto che è una copia dell'istanza corrente di <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />.</summary>
      <returns>Copia dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.TryParse(System.String,System.Net.Http.Headers.ProductHeaderValue@)">
      <summary>Determina se una stringa contiene informazioni valide su <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />.</summary>
      <param name="input">Stringa da convalidare.</param>
      <param name="parsedValue">Versione <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> della stringa.</param>
      <returns>
        <see langword="true" /> se <paramref name="input" /> contiene informazioni valide su <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ProductHeaderValue.Name">
      <summary>Ottiene il nome del token del prodotto.</summary>
      <returns>Nome del token del prodotto.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ProductHeaderValue.Version">
      <summary>Ottiene la versione del token del prodotto.</summary>
      <returns>Versione del token del prodotto.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ProductInfoHeaderValue">
      <summary>Rappresenta un valore che può essere un prodotto o un commento in un'intestazione User-Agent.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.Net.Http.Headers.ProductHeaderValue)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <param name="product">Oggetto <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> utilizzato per inizializzare la nuova istanza.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <param name="comment">Valore di commento.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <param name="productName">Valore del nome prodotto.</param>
      <param name="productVersion">Valore della versione del prodotto.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.Equals(System.Object)">
      <summary>Determina se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> corrente.</summary>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.GetHashCode">
      <summary>Viene usato come funzione hash per un oggetto <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <returns>Codice hash per l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.Parse(System.String)">
      <summary>Converte una stringa in un'istanza di <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <param name="input">Stringa che rappresenta le informazioni sul valore dell'intestazione relativa ai dati sul prodotto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è un riferimento <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> non include informazioni valide sul valore dell'intestazione relativa ai dati sul prodotto.</exception>
      <returns>Istanza di <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuovo oggetto che è una copia dell'istanza corrente di <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <returns>Copia dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.TryParse(System.String,System.Net.Http.Headers.ProductInfoHeaderValue@)">
      <summary>Determina se una stringa contiene informazioni valide su <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <param name="input">Stringa da convalidare.</param>
      <param name="parsedValue">Versione <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> della stringa.</param>
      <returns>
        <see langword="true" /> se <paramref name="input" /> contiene informazioni valide su <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ProductInfoHeaderValue.Comment">
      <summary>Ottiene il commento dall'oggetto <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <returns>Valore di commento dell'oggetto <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ProductInfoHeaderValue.Product">
      <summary>Ottiene il prodotto dall'oggetto <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <returns>Valore del prodotto ottenuto dall'oggetto <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RangeConditionHeaderValue">
      <summary>Rappresenta un valore di intestazione If-Range che può essere un valore di tipo Date/Time o tag entità.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.DateTimeOffset)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <param name="date">Un valore di data utilizzato per inizializzare la nuova istanza.</param>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.Net.Http.Headers.EntityTagHeaderValue)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <param name="entityTag">Oggetto <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> utilizzato per inizializzare la nuova istanza.</param>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <param name="entityTag">Una tag di entità rappresentata come stringa utilizzata per inizializzare la nuova istanza.</param>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.Equals(System.Object)">
      <summary>Determina se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> corrente.</summary>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.GetHashCode">
      <summary>Viene usato come funzione hash per un oggetto <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <returns>Codice hash per l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.Parse(System.String)">
      <summary>Converte una stringa in un'istanza di <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <param name="input">Stringa che rappresenta le informazioni sul valore dell'intestazione relativa alla condizione di intervallo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è un riferimento <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> non include informazioni valide sul valore dell'intestazione relativa alla condizione di intervallo.</exception>
      <returns>Istanza di <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuovo oggetto che è una copia dell'istanza corrente di <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <returns>Copia dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeConditionHeaderValue@)">
      <summary>Determina se una stringa contiene informazioni valide su <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <param name="input">Stringa da convalidare.</param>
      <param name="parsedValue">Versione <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> della stringa.</param>
      <returns>
        <see langword="true" /> se <paramref name="input" /> contiene informazioni valide su <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeConditionHeaderValue.Date">
      <summary>Ottiene la data dall'oggetto <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <returns>Data dall'oggetto <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeConditionHeaderValue.EntityTag">
      <summary>Ottiene il tag dell'entità dall'oggetto <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <returns>Tag dell'entità dall'oggetto <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RangeHeaderValue">
      <summary>Rappresenta un valore di intestazione con intervallo.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> con un intervallo di date.</summary>
      <param name="from">Posizione in cui avviare l'invio dei dati.</param>
      <param name="to">Posizione in cui arrestare l'invio dei dati.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="from" /> è maggiore di <paramref name="to" />  
  
-oppure- 
 <paramref name="from" /> o <paramref name="to" /> è minore di 0.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.Equals(System.Object)">
      <summary>Determina se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> corrente.</summary>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.GetHashCode">
      <summary>Viene usato come funzione hash per un oggetto <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</summary>
      <returns>Codice hash per l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.Parse(System.String)">
      <summary>Converte una stringa in un'istanza di <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</summary>
      <param name="input">Stringa che rappresenta le informazioni sul valore dell'intestazione relativa all'intervallo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è un riferimento <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> non include informazioni valide sul valore dell'intestazione relativa all'intervallo.</exception>
      <returns>Istanza di <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuovo oggetto che è una copia dell'istanza corrente di <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</summary>
      <returns>Copia dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeHeaderValue@)">
      <summary>Determina se una stringa contiene informazioni valide su <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</summary>
      <param name="input">Stringa da convalidare.</param>
      <param name="parsedValue">Versione <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> della stringa.</param>
      <returns>
        <see langword="true" /> se <paramref name="input" /> contiene informazioni valide su <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeHeaderValue.Ranges">
      <summary>Ottiene gli intervalli specificati dall'oggetto <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</summary>
      <returns>Intervalli specificati dall'oggetto <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeHeaderValue.Unit">
      <summary>Ottiene l'unità dall'oggetto <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</summary>
      <returns>Unità dall'oggetto <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RangeItemHeaderValue">
      <summary>Rappresenta un valore di intestazione con intervallo di byte in un intervallo.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" />.</summary>
      <param name="from">Posizione in cui avviare l'invio dei dati.</param>
      <param name="to">Posizione in cui arrestare l'invio dei dati.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="from" /> è maggiore di <paramref name="to" />  
  
-oppure- 
 <paramref name="from" /> o <paramref name="to" /> è minore di 0.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.Equals(System.Object)">
      <summary>Determina se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> corrente.</summary>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.GetHashCode">
      <summary>Viene usato come funzione hash per un oggetto <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" />.</summary>
      <returns>Codice hash per l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuovo oggetto che è una copia dell'istanza corrente di <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" />.</summary>
      <returns>Copia dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeItemHeaderValue.From">
      <summary>Ottiene la posizione in cui avviare l'invio dei dati.</summary>
      <returns>Posizione in cui avviare l'invio dei dati.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeItemHeaderValue.To">
      <summary>Ottiene la posizione in cui arrestare l'invio dei dati.</summary>
      <returns>Posizione in cui arrestare l'invio dei dati.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RetryConditionHeaderValue">
      <summary>Rappresenta un valore di intestazione Retry-After che può essere un valore di tipo Date/Time o Timespan.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.DateTimeOffset)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <param name="date">L'offset di data e ora utilizzato per inizializzare la nuova istanza.</param>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.TimeSpan)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <param name="delta">Delta, in secondi, utilizzato per inizializzare la nuova istanza.</param>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.Equals(System.Object)">
      <summary>Determina se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> corrente.</summary>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.GetHashCode">
      <summary>Viene usato come funzione hash per un oggetto <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <returns>Codice hash per l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.Parse(System.String)">
      <summary>Converte una stringa in un'istanza di <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <param name="input">Stringa che rappresenta le informazioni sul valore dell'intestazione relativa alla condizione di retry.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è un riferimento <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> non include informazioni valide sul valore dell'intestazione relativa alla condizione di retry.</exception>
      <returns>Istanza di <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuovo oggetto che è una copia dell'istanza corrente di <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <returns>Copia dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.TryParse(System.String,System.Net.Http.Headers.RetryConditionHeaderValue@)">
      <summary>Determina se una stringa contiene informazioni valide su <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <param name="input">Stringa da convalidare.</param>
      <param name="parsedValue">Versione <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> della stringa.</param>
      <returns>
        <see langword="true" /> se <paramref name="input" /> contiene informazioni valide su <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RetryConditionHeaderValue.Date">
      <summary>Ottiene l'offset di data e ora dall'oggetto <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <returns>Offset di data e ora dall'oggetto <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RetryConditionHeaderValue.Delta">
      <summary>Ottiene il delta in secondi dall'oggetto <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <returns>Delta in secondi dall'oggetto <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.StringWithQualityHeaderValue">
      <summary>Rappresenta un valore di intestazione stringa con una qualità facoltativa.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <param name="value">Stringa utilizzata per inizializzare la nuova istanza.</param>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <param name="value">Stringa utilizzata per inizializzare la nuova istanza.</param>
      <param name="quality">Fattore di qualità utilizzato per inizializzare la nuova istanza.</param>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> corrente.</summary>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode">
      <summary>Viene usato come funzione hash per un oggetto <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <returns>Codice hash per l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.Parse(System.String)">
      <summary>Converte una stringa in un'istanza di <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <param name="input">Stringa che rappresenta le informazioni sul valore dell'intestazione relativa alla qualità.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è un riferimento <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> non include informazioni valide sul valore dell'intestazione relativa alla stringa con qualità.</exception>
      <returns>Istanza di <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuovo oggetto che è una copia dell'istanza corrente di <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <returns>Copia dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.StringWithQualityHeaderValue@)">
      <summary>Determina se una stringa contiene informazioni valide su <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <param name="input">Stringa da convalidare.</param>
      <param name="parsedValue">Versione <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> della stringa.</param>
      <returns>
        <see langword="true" /> se <paramref name="input" /> contiene informazioni valide su <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.StringWithQualityHeaderValue.Quality">
      <summary>Ottiene il fattore di qualità dall'oggetto <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <returns>Fattore di qualità ottenuto dall'oggetto <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.StringWithQualityHeaderValue.Value">
      <summary>Ottiene il valore stringa dall'oggetto <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <returns>Valore stringa ottenuto dall'oggetto <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.TransferCodingHeaderValue">
      <summary>Rappresenta un valore di intestazione Accept-Encoding.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.#ctor(System.Net.Http.Headers.TransferCodingHeaderValue)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />.</summary>
      <param name="source">Oggetto <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> utilizzato per inizializzare la nuova istanza.</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />.</summary>
      <param name="value">Stringa utilizzata per inizializzare la nuova istanza.</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> corrente.</summary>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.GetHashCode">
      <summary>Viene usato come funzione hash per un oggetto <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />.</summary>
      <returns>Codice hash per l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.Parse(System.String)">
      <summary>Converte una stringa in un'istanza di <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />.</summary>
      <param name="input">Stringa che rappresenta le informazioni sul valore dell'intestazione relativa alla codifica di trasferimento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è un riferimento <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> non include informazioni valide sul valore dell'intestazione relativa alla codifica di trasferimento.</exception>
      <returns>Istanza di <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuovo oggetto che è una copia dell'istanza corrente di <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />.</summary>
      <returns>Copia dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingHeaderValue@)">
      <summary>Determina se una stringa contiene informazioni valide su <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />.</summary>
      <param name="input">Stringa da convalidare.</param>
      <param name="parsedValue">Versione <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> della stringa.</param>
      <returns>
        <see langword="true" /> se <paramref name="input" /> contiene informazioni valide su <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.TransferCodingHeaderValue.Parameters">
      <summary>Ottiene i parametri per la codifica di trasferimento.</summary>
      <returns>Parametri per la codifica di trasferimento.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.TransferCodingHeaderValue.Value">
      <summary>Ottiene il valore della codifica di trasferimento.</summary>
      <returns>Valore della codifica di trasferimento.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue">
      <summary>Rappresenta un valore di intestazione di intestazione Accept-Encoding con fattore di qualità facoltativa.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />.</summary>
      <param name="value">Stringa utilizzata per inizializzare la nuova istanza.</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />.</summary>
      <param name="value">Stringa utilizzata per inizializzare la nuova istanza.</param>
      <param name="quality">Un valore per il fattore di qualità.</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Parse(System.String)">
      <summary>Converte una stringa in un'istanza di <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />.</summary>
      <param name="input">Stringa che rappresenta le informazioni sul valore della codifica di trasferimento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è un riferimento <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> non include informazioni valide sul valore dell'intestazione relativa alla codifica di trasferimento con qualità.</exception>
      <returns>Istanza di <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuovo oggetto che è una copia dell'istanza corrente di <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />.</summary>
      <returns>Copia dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingWithQualityHeaderValue@)">
      <summary>Determina se una stringa contiene informazioni valide su <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />.</summary>
      <param name="input">Stringa da convalidare.</param>
      <param name="parsedValue">Versione <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> della stringa.</param>
      <returns>
        <see langword="true" /> se <paramref name="input" /> contiene informazioni valide su <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Quality">
      <summary>Ottiene il fattore di qualità da <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />.</summary>
      <returns>Fattore di qualità da <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ViaHeaderValue">
      <summary>Rappresenta il valore di un'intestazione Via.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</summary>
      <param name="protocolVersion">La versione del protocollo ricevuto.</param>
      <param name="receivedBy">Host e porta da cui la richiesta o la risposta è stata ricevuta.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</summary>
      <param name="protocolVersion">La versione del protocollo ricevuto.</param>
      <param name="receivedBy">Host e porta da cui la richiesta o la risposta è stata ricevuta.</param>
      <param name="protocolName">Il nome del protocollo ricevuto.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</summary>
      <param name="protocolVersion">La versione del protocollo ricevuto.</param>
      <param name="receivedBy">Host e porta da cui la richiesta o la risposta è stata ricevuta.</param>
      <param name="protocolName">Il nome del protocollo ricevuto.</param>
      <param name="comment">Campo di commento usato per identificare il software del proxy o del gateway del destinatario.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.Equals(System.Object)">
      <summary>Determina se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> corrente.</summary>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.GetHashCode">
      <summary>Viene usato come funzione hash per un oggetto <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</summary>
      <returns>Codice hash per l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.Parse(System.String)">
      <summary>Converte una stringa in un'istanza di <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</summary>
      <param name="input">Stringa che rappresenta le informazioni sul valore dell'intestazione Via.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è un riferimento <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> non include informazioni valide sul valore dell'intestazione Via.</exception>
      <returns>Istanza di <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuovo oggetto che è una copia dell'istanza corrente di <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</summary>
      <returns>Copia dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.TryParse(System.String,System.Net.Http.Headers.ViaHeaderValue@)">
      <summary>Determina se una stringa contiene informazioni valide su <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</summary>
      <param name="input">Stringa da convalidare.</param>
      <param name="parsedValue">Versione <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> della stringa.</param>
      <returns>
        <see langword="true" /> se <paramref name="input" /> contiene informazioni valide su <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.Comment">
      <summary>Ottiene il campo di commento usato per identificare il software del proxy o del gateway del destinatario.</summary>
      <returns>Campo di commento usato per identificare il software del proxy o del gateway del destinatario.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.ProtocolName">
      <summary>Ottiene il nome del protocollo ricevuto.</summary>
      <returns>Nome del protocollo.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.ProtocolVersion">
      <summary>Ottiene la versione del protocollo ricevuto.</summary>
      <returns>Versione del protocollo.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.ReceivedBy">
      <summary>Ottiene l'host e la porta da cui la richiesta o la risposta è stata ricevuta.</summary>
      <returns>Host e porta da cui la richiesta o la risposta è stata ricevuta.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.WarningHeaderValue">
      <summary>Rappresenta un valore di avviso usato dall'intestazione Warning.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />.</summary>
      <param name="code">Codice di avviso specifico.</param>
      <param name="agent">Host che ha associato l'avviso.</param>
      <param name="text">Stringa racchiusa tra virgolette contenente il testo dell'avviso.</param>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String,System.DateTimeOffset)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />.</summary>
      <param name="code">Codice di avviso specifico.</param>
      <param name="agent">Host che ha associato l'avviso.</param>
      <param name="text">Stringa racchiusa tra virgolette contenente il testo dell'avviso.</param>
      <param name="date">Indicatore di data e ora dell'avviso.</param>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.Equals(System.Object)">
      <summary>Determina se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> corrente.</summary>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.GetHashCode">
      <summary>Viene usato come funzione hash per un oggetto <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />.</summary>
      <returns>Codice hash per l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.Parse(System.String)">
      <summary>Converte una stringa in un'istanza di <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />.</summary>
      <param name="input">Stringa che rappresenta le informazioni sul valore dell'intestazione relativa all'autenticazione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è un riferimento <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> non include informazioni valide sul valore dell'intestazione relativa all'autenticazione.</exception>
      <returns>Restituisce un'istanza di <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuovo oggetto che è una copia dell'istanza corrente di <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />.</summary>
      <returns>Restituisce una copia dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.TryParse(System.String,System.Net.Http.Headers.WarningHeaderValue@)">
      <summary>Determina se una stringa contiene informazioni valide su <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />.</summary>
      <param name="input">Stringa da convalidare.</param>
      <param name="parsedValue">Versione <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> della stringa.</param>
      <returns>
        <see langword="true" /> se <paramref name="input" /> contiene informazioni valide su <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Agent">
      <summary>Ottiene l'host che ha associato l'avviso.</summary>
      <returns>Host che ha associato l'avviso.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Code">
      <summary>Ottiene il codice di avviso specifico.</summary>
      <returns>Codice di avviso specifico.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Date">
      <summary>Ottiene l'indicatore di data e ora dell'avviso.</summary>
      <returns>Indicatore di data e ora dell'avviso.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Text">
      <summary>Ottiene una stringa racchiusa tra virgolette contenente il testo dell'avviso.</summary>
      <returns>Stringa racchiusa tra virgolette contenente il testo dell'avviso.</returns>
    </member>
    <member name="T:System.Net.Http.HttpClient">
      <summary>Fornisce una classe base per l'invio di richieste HTTP e la ricezione di risposte HTTP da una risorsa identificata da un URI.</summary>
    </member>
    <member name="M:System.Net.Http.HttpClient.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.HttpClient" /> con <see cref="T:System.Net.Http.HttpClientHandler" /> che viene eliminato quando viene eliminata l'istanza.</summary>
    </member>
    <member name="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.HttpClient" /> con il gestore specificato. Il gestore viene eliminato quando viene eliminata l'istanza.</summary>
      <param name="handler">Stack del gestore HTTP da usare per inviare le richieste.</param>
      <exception cref="T:System.ArgumentNullException">L'elemento <paramref name="handler" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.HttpClient" /> con il gestore specificato e stabilisce se il gestore deve essere eliminato quando viene eliminata l'istanza.</summary>
      <param name="handler">Oggetto <see cref="T:System.Net.Http.HttpMessageHandler" /> responsabile dell'elaborazione dei messaggi di risposta HTTP.</param>
      <param name="disposeHandler">
        <see langword="true" /> se il gestore interno deve essere eliminato da HttpClient.Dispose, <see langword="false" /> se si intende usare ancora il gestore interno.</param>
      <exception cref="T:System.ArgumentNullException">L'elemento <paramref name="handler" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.CancelPendingRequests">
      <summary>Annullare tutte le richieste in sospeso in questa istanza.</summary>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.String)">
      <summary>Inviare una richiesta DELETE all'URI specificato come operazione asincrona.</summary>
      <param name="requestUri">L'URI a cui viene inviata la richiesta.</param>
      <exception cref="T:System.InvalidOperationException">Il messaggio di richiesta è già stato inviato dall'istanza di <see cref="T:System.Net.Http.HttpClient" />.

-oppure-

<paramref name="requestUri" /> non è un URI assoluto.

-oppure-

La proprietà <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> non è impostata.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Solo .NET Core e .NET 5.0 e versioni successive: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
      <summary>Inviare una richiesta DELETE all'URI specificato con un token di annullamento come operazione asincrona.</summary>
      <param name="requestUri">L'URI a cui viene inviata la richiesta.</param>
      <param name="cancellationToken">Token di annullamento utilizzabile da altri oggetti o thread per ricevere l'avviso dell'annullamento.</param>
      <exception cref="T:System.InvalidOperationException">Il messaggio di richiesta è già stato inviato dall'istanza di <see cref="T:System.Net.Http.HttpClient" />.

-oppure-

<paramref name="requestUri" /> non è un URI assoluto.

-oppure-

La proprietà <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> non è impostata.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Solo .NET Core e .NET 5.0 e versioni successive: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)">
      <summary>Inviare una richiesta DELETE all'URI specificato come operazione asincrona.</summary>
      <param name="requestUri">L'URI a cui viene inviata la richiesta.</param>
      <exception cref="T:System.InvalidOperationException">Il messaggio di richiesta è già stato inviato dall'istanza di <see cref="T:System.Net.Http.HttpClient" />.

-oppure-

<paramref name="requestUri" /> non è un URI assoluto.

-oppure-

La proprietà <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> non è impostata.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Solo .NET Core e .NET 5.0 e versioni successive: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
      <summary>Inviare una richiesta DELETE all'URI specificato con un token di annullamento come operazione asincrona.</summary>
      <param name="requestUri">L'URI a cui viene inviata la richiesta.</param>
      <param name="cancellationToken">Token di annullamento utilizzabile da altri oggetti o thread per ricevere l'avviso dell'annullamento.</param>
      <exception cref="T:System.InvalidOperationException">Il messaggio di richiesta è già stato inviato dall'istanza di <see cref="T:System.Net.Http.HttpClient" />.

-oppure-

<paramref name="requestUri" /> non è un URI assoluto.

-oppure-

La proprietà <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> non è impostata.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Solo .NET Core e .NET 5.0 e versioni successive: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate da <see cref="T:System.Net.Http.HttpClient" /> e, facoltativamente, elimina le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String)">
      <summary>Inviare una richiesta GET all'URI specificato come operazione asincrona.</summary>
      <param name="requestUri">L'URI a cui viene inviata la richiesta.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="requestUri" /> deve essere un URI assoluto o deve essere impostato <see cref="P:System.Net.Http.HttpClient.BaseAddress" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Solo .NET Core e .NET 5.0 e versioni successive: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)">
      <summary>Inviare una richiesta GET all'URI specificato con un'opzione di completamento HTTP come operazione asincrona.</summary>
      <param name="requestUri">L'URI a cui viene inviata la richiesta.</param>
      <param name="completionOption">Valore di opzione di completamento HTTP che indica quando l'operazione deve essere considerata completata.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="requestUri" /> deve essere un URI assoluto o deve essere impostato <see cref="P:System.Net.Http.HttpClient.BaseAddress" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Solo .NET Core e .NET 5.0 e versioni successive: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary>Inviare una richiesta GET all'URI specificato con un'opzione di completamento HTTP e un token di annullamento come operazione asincrona.</summary>
      <param name="requestUri">L'URI a cui viene inviata la richiesta.</param>
      <param name="completionOption">Valore di opzione di completamento HTTP che indica quando l'operazione deve essere considerata completata.</param>
      <param name="cancellationToken">Token di annullamento utilizzabile da altri oggetti o thread per ricevere l'avviso dell'annullamento.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="requestUri" /> deve essere un URI assoluto o deve essere impostato <see cref="P:System.Net.Http.HttpClient.BaseAddress" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Solo .NET Core e .NET 5.0 e versioni successive: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)">
      <summary>Inviare una richiesta GET all'URI specificato con un token di annullamento come operazione asincrona.</summary>
      <param name="requestUri">L'URI a cui viene inviata la richiesta.</param>
      <param name="cancellationToken">Token di annullamento utilizzabile da altri oggetti o thread per ricevere l'avviso dell'annullamento.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="requestUri" /> deve essere un URI assoluto o deve essere impostato <see cref="P:System.Net.Http.HttpClient.BaseAddress" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Solo .NET Core e .NET 5.0 e versioni successive: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri)">
      <summary>Inviare una richiesta GET all'URI specificato come operazione asincrona.</summary>
      <param name="requestUri">L'URI a cui viene inviata la richiesta.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="requestUri" /> deve essere un URI assoluto o deve essere impostato <see cref="P:System.Net.Http.HttpClient.BaseAddress" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Solo .NET Core e .NET 5.0 e versioni successive: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)">
      <summary>Inviare una richiesta GET all'URI specificato con un'opzione di completamento HTTP come operazione asincrona.</summary>
      <param name="requestUri">L'URI a cui viene inviata la richiesta.</param>
      <param name="completionOption">Valore di opzione di completamento HTTP che indica quando l'operazione deve essere considerata completata.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="requestUri" /> deve essere un URI assoluto o deve essere impostato <see cref="P:System.Net.Http.HttpClient.BaseAddress" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Solo .NET Core e .NET 5.0 e versioni successive: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary>Inviare una richiesta GET all'URI specificato con un'opzione di completamento HTTP e un token di annullamento come operazione asincrona.</summary>
      <param name="requestUri">L'URI a cui viene inviata la richiesta.</param>
      <param name="completionOption">Valore di opzione di completamento HTTP che indica quando l'operazione deve essere considerata completata.</param>
      <param name="cancellationToken">Token di annullamento utilizzabile da altri oggetti o thread per ricevere l'avviso dell'annullamento.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="requestUri" /> deve essere un URI assoluto o deve essere impostato <see cref="P:System.Net.Http.HttpClient.BaseAddress" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Solo .NET Core e .NET 5.0 e versioni successive: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)">
      <summary>Inviare una richiesta GET all'URI specificato con un token di annullamento come operazione asincrona.</summary>
      <param name="requestUri">L'URI a cui viene inviata la richiesta.</param>
      <param name="cancellationToken">Token di annullamento utilizzabile da altri oggetti o thread per ricevere l'avviso dell'annullamento.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="requestUri" /> deve essere un URI assoluto o deve essere impostato <see cref="P:System.Net.Http.HttpClient.BaseAddress" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Solo .NET Core e .NET 5.0 e versioni successive: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)">
      <summary>Invia una richiesta GET all'URI specificato e restituisce il corpo della risposta come matrice di byte in un'operazione asincrona.</summary>
      <param name="requestUri">L'URI a cui viene inviata la richiesta.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="requestUri" /> deve essere un URI assoluto o deve essere impostato <see cref="P:System.Net.Http.HttpClient.BaseAddress" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Solo .NET Core e .NET 5.0 e versioni successive: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String,System.Threading.CancellationToken)">
      <summary>Invia una richiesta GET all'URI specificato e restituisce il corpo della risposta come matrice di byte in un'operazione asincrona.</summary>
      <param name="requestUri">L'URI a cui viene inviata la richiesta.</param>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
      <exception cref="T:System.Net.Http.HttpRequestException">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS o di convalida del certificato server (o di timeout solo per .NET Framework).</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Solo .NET Core e .NET 5.0 e versioni successive: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)">
      <summary>Inviare una richiesta GET all'URI specificato e restituire il corpo della risposta come matrice di byte in un'operazione asincrona.</summary>
      <param name="requestUri">L'URI a cui viene inviata la richiesta.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="requestUri" /> deve essere un URI assoluto o deve essere impostato <see cref="P:System.Net.Http.HttpClient.BaseAddress" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS o di convalida del certificato server (o di timeout solo per .NET Framework).</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Solo .NET Core e .NET 5.0 e versioni successive: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri,System.Threading.CancellationToken)">
      <summary>Inviare una richiesta GET all'URI specificato e restituire il corpo della risposta come matrice di byte in un'operazione asincrona.</summary>
      <param name="requestUri">L'URI a cui viene inviata la richiesta.</param>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
      <exception cref="T:System.Net.Http.HttpRequestException">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS o di convalida del certificato server (o di timeout solo per .NET Framework).</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Solo .NET Core e .NET 5.0 e versioni successive: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)">
      <summary>Inviare una richiesta GET all'URI specificato e restituisce il corpo della risposta come flusso in un'operazione asincrona.</summary>
      <param name="requestUri">L'URI a cui viene inviata la richiesta.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="requestUri" /> deve essere un URI assoluto o deve essere impostato <see cref="P:System.Net.Http.HttpClient.BaseAddress" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS o di convalida del certificato server (o di timeout solo per .NET Framework).</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Solo .NET Core e .NET 5.0 e versioni successive: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStreamAsync(System.String,System.Threading.CancellationToken)">
      <summary>Inviare una richiesta GET all'URI specificato e restituisce il corpo della risposta come flusso in un'operazione asincrona.</summary>
      <param name="requestUri">L'URI a cui viene inviata la richiesta.</param>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)">
      <summary>Inviare una richiesta GET all'URI specificato e restituisce il corpo della risposta come flusso in un'operazione asincrona.</summary>
      <param name="requestUri">L'URI a cui viene inviata la richiesta.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="requestUri" /> deve essere un URI assoluto o deve essere impostato <see cref="P:System.Net.Http.HttpClient.BaseAddress" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS o di convalida del certificato server (o di timeout solo per .NET Framework).</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Solo .NET Core e .NET 5.0 e versioni successive: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri,System.Threading.CancellationToken)">
      <summary>Inviare una richiesta GET all'URI specificato e restituisce il corpo della risposta come flusso in un'operazione asincrona.</summary>
      <param name="requestUri">L'URI a cui viene inviata la richiesta.</param>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
      <exception cref="T:System.ArgumentNullException">L'elemento <paramref name="requestUri" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS o di convalida del certificato server (o di timeout solo per .NET Framework).</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Solo .NET Core e .NET 5.0 e versioni successive: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStringAsync(System.String)">
      <summary>Inviare una richiesta GET all'URI specificato e restituisce il corpo della risposta come stringa in un'operazione asincrona.</summary>
      <param name="requestUri">L'URI a cui viene inviata la richiesta.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="requestUri" /> deve essere un URI assoluto o deve essere impostato <see cref="P:System.Net.Http.HttpClient.BaseAddress" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS o di convalida del certificato server (o di timeout solo per .NET Framework).</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Solo .NET Core e .NET 5.0 e versioni successive: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStringAsync(System.String,System.Threading.CancellationToken)">
      <summary>Inviare una richiesta GET all'URI specificato e restituisce il corpo della risposta come stringa in un'operazione asincrona.</summary>
      <param name="requestUri">L'URI a cui viene inviata la richiesta.</param>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
      <exception cref="T:System.ArgumentNullException">L'elemento <paramref name="requestUri" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS o di convalida del certificato server (o di timeout solo per .NET Framework).</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Solo .NET Core e .NET 5.0 e versioni successive: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)">
      <summary>Inviare una richiesta GET all'URI specificato e restituisce il corpo della risposta come stringa in un'operazione asincrona.</summary>
      <param name="requestUri">L'URI a cui viene inviata la richiesta.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="requestUri" /> deve essere un URI assoluto o deve essere impostato <see cref="P:System.Net.Http.HttpClient.BaseAddress" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS o di convalida del certificato server (o di timeout solo per .NET Framework).</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Solo .NET Core e .NET 5.0 e versioni successive: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri,System.Threading.CancellationToken)">
      <summary>Inviare una richiesta GET all'URI specificato e restituisce il corpo della risposta come stringa in un'operazione asincrona.</summary>
      <param name="requestUri">L'URI a cui viene inviata la richiesta.</param>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
      <exception cref="T:System.ArgumentNullException">L'elemento <paramref name="requestUri" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS o di convalida del certificato server (o di timeout solo per .NET Framework).</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Solo .NET Core e .NET 5.0 e versioni successive: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.String,System.Net.Http.HttpContent)">
      <summary>Invia una richiesta PATCH come operazione asincrona a un URI designato come stringa.</summary>
      <param name="requestUri">L'URI a cui viene inviata la richiesta.</param>
      <param name="content">Il contenuto della richiesta HTTP inviato al server.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary>Invia una richiesta PATCH con un token di annullamento come operazione asincrona a un URI rappresentato come stringa.</summary>
      <param name="requestUri">L'URI a cui viene inviata la richiesta.</param>
      <param name="content">Il contenuto della richiesta HTTP inviato al server.</param>
      <param name="cancellationToken">Token di annullamento utilizzabile da altri oggetti o thread per ricevere l'avviso dell'annullamento.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.Uri,System.Net.Http.HttpContent)">
      <summary>Invia una richiesta PATCH come operazione asincrona.</summary>
      <param name="requestUri">L'URI a cui viene inviata la richiesta.</param>
      <param name="content">Il contenuto della richiesta HTTP inviato al server.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary>Invia una richiesta PATCH con un token di annullamento come operazione asincrona.</summary>
      <param name="requestUri">L'URI a cui viene inviata la richiesta.</param>
      <param name="content">Il contenuto della richiesta HTTP inviato al server.</param>
      <param name="cancellationToken">Token di annullamento utilizzabile da altri oggetti o thread per ricevere l'avviso dell'annullamento.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)">
      <summary>Inviare una richiesta POST all'URI specificato come operazione asincrona.</summary>
      <param name="requestUri">L'URI a cui viene inviata la richiesta.</param>
      <param name="content">Il contenuto della richiesta HTTP inviato al server.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="requestUri" /> deve essere un URI assoluto o deve essere impostato <see cref="P:System.Net.Http.HttpClient.BaseAddress" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Solo .NET Core e .NET 5.0 e versioni successive: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary>Inviare una richiesta POST con un token di annullamento come operazione asincrona.</summary>
      <param name="requestUri">L'URI a cui viene inviata la richiesta.</param>
      <param name="content">Il contenuto della richiesta HTTP inviato al server.</param>
      <param name="cancellationToken">Token di annullamento utilizzabile da altri oggetti o thread per ricevere l'avviso dell'annullamento.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="requestUri" /> deve essere un URI assoluto o deve essere impostato <see cref="P:System.Net.Http.HttpClient.BaseAddress" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Solo .NET Core e .NET 5.0 e versioni successive: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
      <summary>Inviare una richiesta POST all'URI specificato come operazione asincrona.</summary>
      <param name="requestUri">L'URI a cui viene inviata la richiesta.</param>
      <param name="content">Il contenuto della richiesta HTTP inviato al server.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="requestUri" /> deve essere un URI assoluto o deve essere impostato <see cref="P:System.Net.Http.HttpClient.BaseAddress" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Solo .NET Core e .NET 5.0 e versioni successive: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary>Inviare una richiesta POST con un token di annullamento come operazione asincrona.</summary>
      <param name="requestUri">L'URI a cui viene inviata la richiesta.</param>
      <param name="content">Il contenuto della richiesta HTTP inviato al server.</param>
      <param name="cancellationToken">Token di annullamento utilizzabile da altri oggetti o thread per ricevere l'avviso dell'annullamento.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="requestUri" /> deve essere un URI assoluto o deve essere impostato <see cref="P:System.Net.Http.HttpClient.BaseAddress" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Solo .NET Core e .NET 5.0 e versioni successive: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)">
      <summary>Inviare una richiesta PUT all'URI specificato come operazione asincrona.</summary>
      <param name="requestUri">L'URI a cui viene inviata la richiesta.</param>
      <param name="content">Il contenuto della richiesta HTTP inviato al server.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="requestUri" /> deve essere un URI assoluto o deve essere impostato <see cref="P:System.Net.Http.HttpClient.BaseAddress" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Solo .NET Core e .NET 5.0 e versioni successive: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary>Inviare una richiesta PUT con un token di annullamento come operazione asincrona.</summary>
      <param name="requestUri">L'URI a cui viene inviata la richiesta.</param>
      <param name="content">Il contenuto della richiesta HTTP inviato al server.</param>
      <param name="cancellationToken">Token di annullamento utilizzabile da altri oggetti o thread per ricevere l'avviso dell'annullamento.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="requestUri" /> deve essere un URI assoluto o deve essere impostato <see cref="P:System.Net.Http.HttpClient.BaseAddress" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Solo .NET Core e .NET 5.0 e versioni successive: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
      <summary>Inviare una richiesta PUT all'URI specificato come operazione asincrona.</summary>
      <param name="requestUri">L'URI a cui viene inviata la richiesta.</param>
      <param name="content">Il contenuto della richiesta HTTP inviato al server.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="requestUri" /> deve essere un URI assoluto o deve essere impostato <see cref="P:System.Net.Http.HttpClient.BaseAddress" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Solo .NET Core e .NET 5.0 e versioni successive: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary>Inviare una richiesta PUT con un token di annullamento come operazione asincrona.</summary>
      <param name="requestUri">L'URI a cui viene inviata la richiesta.</param>
      <param name="content">Il contenuto della richiesta HTTP inviato al server.</param>
      <param name="cancellationToken">Token di annullamento utilizzabile da altri oggetti o thread per ricevere l'avviso dell'annullamento.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="requestUri" /> deve essere un URI assoluto o deve essere impostato <see cref="P:System.Net.Http.HttpClient.BaseAddress" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Solo .NET Core e .NET 5.0 e versioni successive: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.Send(System.Net.Http.HttpRequestMessage)">
      <summary>Invia una richiesta HTTP con la richiesta specificata.</summary>
      <param name="request">Messaggio di richiesta HTTP da inviare.</param>
      <exception cref="T:System.ArgumentNullException">L'elemento <paramref name="request" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">La versione HTTP è 2.0 o successiva oppure il criterio di versione è impostato su <see cref="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher" />.

-oppure-

La classe personalizzata derivata da <see cref="T:System.Net.Http.HttpContent" /> non esegue l'override del metodo <see cref="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" />.

-oppure-

L'oggetto <see cref="T:System.Net.Http.HttpMessageHandler" /> personalizzato non esegue l'override del metodo <see cref="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />.</exception>
      <exception cref="T:System.InvalidOperationException">Il messaggio di richiesta è già stato inviato dall'istanza di <see cref="T:System.Net.Http.HttpClient" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS o di convalida del certificato server.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Se l'eccezione <see cref="T:System.Threading.Tasks.TaskCanceledException" /> si annida in <see cref="T:System.TimeoutException" />: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Messaggio di risposta HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.Send(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
      <summary>Invia una richiesta HTTP.</summary>
      <param name="request">Messaggio di richiesta HTTP da inviare.</param>
      <param name="completionOption">Uno dei valori di enumerazione che specifica quando l'operazione deve essere completata (non appena la risposta è disponibile o dopo aver letto il contenuto della risposta).</param>
      <exception cref="T:System.ArgumentNullException">L'elemento <paramref name="request" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">La versione HTTP è 2.0 o successiva oppure il criterio di versione è impostato su <see cref="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher" />.

-oppure-

La classe personalizzata derivata da <see cref="T:System.Net.Http.HttpContent" /> non esegue l'override del metodo <see cref="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" />.

-oppure-

L'oggetto <see cref="T:System.Net.Http.HttpMessageHandler" /> personalizzato non esegue l'override del metodo <see cref="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />.</exception>
      <exception cref="T:System.InvalidOperationException">Il messaggio di richiesta è già stato inviato dall'istanza di <see cref="T:System.Net.Http.HttpClient" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS o di convalida del certificato server.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Se l'eccezione <see cref="T:System.Threading.Tasks.TaskCanceledException" /> si annida in <see cref="T:System.TimeoutException" />: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Messaggio di risposta HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.Send(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary>Invia una richiesta HTTP con la richiesta, l'opzione di completamento e il token di annullamento specificati.</summary>
      <param name="request">Messaggio di richiesta HTTP da inviare.</param>
      <param name="completionOption">Uno dei valori di enumerazione che specifica quando l'operazione deve essere completata (non appena la risposta è disponibile o dopo aver letto il contenuto della risposta).</param>
      <param name="cancellationToken">Token per annullare l'operazione.</param>
      <exception cref="T:System.ArgumentNullException">L'elemento <paramref name="request" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">La versione HTTP è 2.0 o successiva oppure il criterio di versione è impostato su <see cref="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher" />.

-oppure-

La classe personalizzata derivata da <see cref="T:System.Net.Http.HttpContent" /> non esegue l'override del metodo <see cref="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" />.

-oppure-

L'oggetto <see cref="T:System.Net.Http.HttpMessageHandler" /> personalizzato non esegue l'override del metodo <see cref="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />.</exception>
      <exception cref="T:System.InvalidOperationException">Il messaggio di richiesta è già stato inviato dall'istanza di <see cref="T:System.Net.Http.HttpClient" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS o di convalida del certificato server.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">La richiesta è stata annullata.

-oppure-

Se l'eccezione <see cref="T:System.Threading.Tasks.TaskCanceledException" /> si annida in <see cref="T:System.TimeoutException" />: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Messaggio di risposta HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Invia una richiesta HTTP con la richiesta e il token di annullamento specificati.</summary>
      <param name="request">Messaggio di richiesta HTTP da inviare.</param>
      <param name="cancellationToken">Token per annullare l'operazione.</param>
      <exception cref="T:System.ArgumentNullException">L'elemento <paramref name="request" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">La versione HTTP è 2.0 o successiva oppure il criterio di versione è impostato su <see cref="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher" />.

-oppure-

La classe personalizzata derivata da <see cref="T:System.Net.Http.HttpContent" /> non esegue l'override del metodo <see cref="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" />.

-oppure-

L'oggetto <see cref="T:System.Net.Http.HttpMessageHandler" /> personalizzato non esegue l'override del metodo <see cref="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />.</exception>
      <exception cref="T:System.InvalidOperationException">Il messaggio di richiesta è già stato inviato dall'istanza di <see cref="T:System.Net.Http.HttpClient" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS o di convalida del certificato server.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">La richiesta è stata annullata.

-oppure-

Se l'eccezione <see cref="T:System.Threading.Tasks.TaskCanceledException" /> si annida in <see cref="T:System.TimeoutException" />: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Messaggio di risposta HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
      <summary>Inviare una richiesta HTTP come operazione asincrona.</summary>
      <param name="request">Messaggio di richiesta HTTP da inviare.</param>
      <exception cref="T:System.ArgumentNullException">L'elemento <paramref name="request" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Il messaggio di richiesta è già stato inviato dall'istanza di <see cref="T:System.Net.Http.HttpClient" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Solo .NET Core e .NET 5.0 e versioni successive: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
      <summary>Inviare una richiesta HTTP come operazione asincrona.</summary>
      <param name="request">Messaggio di richiesta HTTP da inviare.</param>
      <param name="completionOption">Quando l'operazione deve essere completata (non appena la risposta è disponibile o dopo aver letto l'intero contenuto della risposta).</param>
      <exception cref="T:System.ArgumentNullException">L'elemento <paramref name="request" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Il messaggio di richiesta è già stato inviato dall'istanza di <see cref="T:System.Net.Http.HttpClient" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Solo .NET Core e .NET 5.0 e versioni successive: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary>Inviare una richiesta HTTP come operazione asincrona.</summary>
      <param name="request">Messaggio di richiesta HTTP da inviare.</param>
      <param name="completionOption">Quando l'operazione deve essere completata (non appena la risposta è disponibile o dopo aver letto l'intero contenuto della risposta).</param>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
      <exception cref="T:System.ArgumentNullException">L'elemento <paramref name="request" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Il messaggio di richiesta è già stato inviato dall'istanza di <see cref="T:System.Net.Http.HttpClient" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Solo .NET Core e .NET 5.0 e versioni successive: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Inviare una richiesta HTTP come operazione asincrona.</summary>
      <param name="request">Messaggio di richiesta HTTP da inviare.</param>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
      <exception cref="T:System.ArgumentNullException">L'elemento <paramref name="request" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Il messaggio di richiesta è già stato inviato dall'istanza di <see cref="T:System.Net.Http.HttpClient" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">Solo .NET Core e .NET 5.0 e versioni successive: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.BaseAddress">
      <summary>Ottiene o imposta l'indirizzo di base dell'URI (Uniform Resource Identifier) della risorsa Internet usata quando si inviano le richieste.</summary>
      <returns>L'indirizzo di base dell'URI (Uniform Resource Identifier) della risorsa Internet usata quando si inviano le richieste.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultProxy">
      <summary>Ottiene o imposta il proxy HTTP globale.</summary>
      <exception cref="T:System.ArgumentNullException">Il valore passato non può essere <see langword="null" />.</exception>
      <returns>Un proxy utilizzato da ogni chiamata che crea un'istanza di un oggetto <see cref="T:System.Net.HttpWebRequest" /> .</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultRequestHeaders">
      <summary>Ottiene le intestazioni che devono essere inviate con ogni richiesta.</summary>
      <returns>Intestazioni da inviare con ogni richiesta.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultRequestVersion">
      <summary>Ottiene o imposta la versione HTTP predefinita usata per le richieste successive effettuate da questa istanza di <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <exception cref="T:System.ArgumentNullException">In un'operazione di impostazione, <see langword="DefaultRequestVersion" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">L'istanza di <see cref="T:System.Net.Http.HttpClient" /> ha già avviato una o più richieste.</exception>
      <exception cref="T:System.ObjectDisposedException">L'istanza di <see cref="T:System.Net.Http.HttpClient" /> è già stata eliminata.</exception>
      <returns>Versione predefinita da utilizzare per tutte le richieste effettuate con questa <see cref="T:System.Net.Http.HttpClient" /> istanza.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultVersionPolicy">
      <summary>Ottiene o imposta i criteri di versione predefiniti per le richieste create in modo implicito nei metodi pratici, ad esempio <see cref="M:System.Net.Http.HttpClient.GetAsync(System.String)" /> e <see cref="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)" />.</summary>
      <returns>HttpVersionPolicy utilizzato quando viene stabilita la connessione HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize">
      <summary>Ottiene o imposta il numero massimo di byte per la memorizzazione nel buffer durante la lettura del contenuto della risposta.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Le dimensioni specificate sono inferiori o uguali a zero.</exception>
      <exception cref="T:System.InvalidOperationException">È già stata avviata un'operazione sull'istanza corrente.</exception>
      <exception cref="T:System.ObjectDisposedException">L'istanza corrente è stata eliminata.</exception>
      <returns>Numero massimo di byte per la memorizzazione nel buffer durante la lettura del contenuto della risposta. Il valore predefinito di questa proprietà è 2 gigabyte.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.Timeout">
      <summary>Ottiene o imposta l'intervallo di tempo da attendere prima che si verifichi il timeout della richiesta.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Il timeout specificato è minore o uguale a zero e non è <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</exception>
      <exception cref="T:System.InvalidOperationException">È già stata avviata un'operazione sull'istanza corrente.</exception>
      <exception cref="T:System.ObjectDisposedException">L'istanza corrente è stata eliminata.</exception>
      <returns>Intervallo di tempo da attendere prima che si verifichi il timeout della richiesta.</returns>
    </member>
    <member name="T:System.Net.Http.HttpClientHandler">
      <summary>Il gestore di messaggi predefinito usato da <see cref="T:System.Net.Http.HttpClient" />.NET Framework e .NET Core 2.0 e versioni precedenti.</summary>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.#ctor">
      <summary>Crea un'istanza di una classe <see cref="T:System.Net.Http.HttpClientHandler" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate da <see cref="T:System.Net.Http.HttpClientHandler" /> e, facoltativamente, elimina le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Crea un'istanza di <see cref="T:System.Net.Http.HttpResponseMessage" /> in base alle informazioni fornite nell'oggetto <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
      <param name="request">Messaggio di richiesta HTTP.</param>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="request" /> era <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Per HTTP/2 e versioni successive o quando la richiesta di aggiornamento della versione è abilitata da <see cref="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher" />.

-oppure-

Se l'uso della classe personalizzata derivata da <see cref="T:System.Net.Http.HttpContent" /> non esegue l'override del metodo <see cref="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" />.

-oppure-

Se l'uso dell'oggetto <see cref="T:System.Net.Http.HttpMessageHandler" /> personalizzato non esegue l'override del metodo <see cref="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">La richiesta è stata annullata.

-oppure-

Se l'eccezione <see cref="T:System.Threading.Tasks.TaskCanceledException" /> si annida in <see cref="T:System.TimeoutException" />: la richiesta non è riuscita a causa di un timeout.</exception>
      <returns>Messaggio di risposta HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Crea un'istanza di <see cref="T:System.Net.Http.HttpResponseMessage" /> in base alle informazioni fornite nell'oggetto <see cref="T:System.Net.Http.HttpRequestMessage" /> come operazione che non si bloccherà.</summary>
      <param name="request">Messaggio di richiesta HTTP.</param>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="request" /> era <see langword="null" />.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect">
      <summary>Ottiene o imposta un valore che indica se il gestore deve seguire le risposte di reindirizzamento.</summary>
      <returns>
        <see langword="true" /> Se il gestore deve seguire le risposte di Reindirizzamento; in caso contrario <see langword="false" /> ,. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.AutomaticDecompression">
      <summary>Ottiene o imposta il tipo di metodo di decompressione usato dal gestore per la decompressione automatica della risposta del contenuto HTTP.</summary>
      <returns>Metodo automatico di decompressione usato dal gestore.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.CheckCertificateRevocationList">
      <summary>Ottiene o imposta un valore che indica se il certificato viene verificato rispetto all'elenco di revoche dell'autorità di certificazione.</summary>
      <exception cref="T:System.PlatformNotSupportedException">.NET Framework 4.7.1: questa proprietà non implementata.</exception>
      <returns>
        <see langword="true" /> se l'elenco certificati revocati è verificato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.ClientCertificateOptions">
      <summary>Ottiene o imposta un valore che indica se il certificato viene selezionato automaticamente dall'archivio certificati oppure se il chiamante è autorizzato a passare un certificato client specifico.</summary>
      <returns>Raccolta di certificati di sicurezza associati a questo gestore.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.ClientCertificates">
      <summary>Ottiene la raccolta dei certificati di sicurezza associati alle richieste al server.</summary>
      <returns>X509Certificatecollection presentato al server quando si esegue l'autenticazione client basata su certificato.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.CookieContainer">
      <summary>Ottiene o imposta il contenitore di cookie usato dal gestore per archiviare i cookie del server.</summary>
      <returns>Contenitore di cookie usato dal gestore per archiviare i cookie del server.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.Credentials">
      <summary>Ottiene o imposta le informazioni sull'autenticazione usate dal gestore.</summary>
      <returns>Credenziali di autenticazione associate al gestore. Il valore predefinito è <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator">
      <summary>Ottiene un delegato memorizzato nella cache che restituisce sempre <see langword="true" />.</summary>
      <returns>Delegato memorizzato nella cache che restituisce sempre <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.DefaultProxyCredentials">
      <summary>Quando viene usato il proxy predefinito (di sistema), ottiene o imposta le credenziali da inviare al server proxy predefinito per l'autenticazione. Il proxy predefinito viene usato solo quando l'elemento <see cref="P:System.Net.Http.HttpClientHandler.UseProxy" /> è impostato su <see langword="true" /> e l'elemento <see cref="P:System.Net.Http.HttpClientHandler.Proxy" /> è impostato su <see langword="null" />.</summary>
      <returns>Credenziali necessarie per autenticare una richiesta al server proxy predefinito.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections">
      <summary>Ottiene o imposta il numero massimo di reindirizzamenti seguiti dal gestore.</summary>
      <returns>Numero massimo di risposte di reindirizzamento seguite dal gestore. Il valore predefinito è 50.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxConnectionsPerServer">
      <summary>Ottiene o imposta il numero massimo di connessioni simultanee (per endpoint server) consentito quando si effettuano richieste tramite un oggetto <see cref="T:System.Net.Http.HttpClient" />. Il limite è per ogni endpoint server. Ad esempio il valore 256 autorizza 256 connessioni simultanee a http://www.adatum.com/ e altre 256 connessioni simultanee a http://www.adventure-works.com/.</summary>
      <returns>Numero massimo di connessioni simultanee (per endpoint server) consentite da un <see cref="T:System.Net.Http.HttpClient" /> oggetto.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize">
      <summary>Ottiene o imposta la dimensione massima del buffer di contenuto della richiesta usata dal gestore.</summary>
      <returns>Dimensione massima in byte del buffer di contenuto della richiesta. Il valore predefinito è 2 gigabyte.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxResponseHeadersLength">
      <summary>Ottiene o imposta la lunghezza massima in kilobyte (1024 byte) delle intestazioni di risposta. Se ad esempio il valore è 64 la lunghezza massima consentita per le intestazioni di risposta è pari a 65536 byte.</summary>
      <returns>Lunghezza massima, espressa in kilobyte (1024 byte), delle intestazioni della risposta.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.PreAuthenticate">
      <summary>Ottiene o imposta un valore che indica se il gestore invia un'intestazione di autorizzazione con la richiesta.</summary>
      <returns>
        <see langword="true" /> se il gestore invia un'intestazione Autorizzazione HTTP con le richieste una volta eseguita l'autenticazione; in caso contrario <see langword="false" />. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.Properties">
      <summary>Ottiene un dizionario modificabile (una mappa) delle proprietà personalizzate per le richieste <see cref="T:System.Net.Http.HttpClient" />. Il dizionario viene inizializzato vuoto. È possibile inserire e cercare coppie chiave-valore per i gestori personalizzati e l'elaborazione speciale.</summary>
      <returns>dizionario scrivibile di proprietà personalizzate.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.Proxy">
      <summary>Ottiene o imposta le informazioni sul proxy usate dal gestore.</summary>
      <returns>Informazioni sul proxy usate dal gestore. Il valore predefinito è <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback">
      <summary>Ottiene o imposta un metodo callback per convalidare il certificato del server.</summary>
      <returns>Un metodo callback per convalidare il certificato del server.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SslProtocols">
      <summary>Ottiene o imposta il protocollo TLS/SSL usato dagli oggetti <see cref="T:System.Net.Http.HttpClient" /> gestiti dall'oggetto HttpClientHandler.</summary>
      <exception cref="T:System.PlatformNotSupportedException">.NET Framework 4.7.1: questa proprietà non implementata.</exception>
      <returns>Uno dei valori definiti nell'enumerazione <see cref="T:System.Security.Authentication.SslProtocols" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression">
      <summary>Ottiene un valore che indica se il gestore supporta la decompressione automatica del contenuto della risposta.</summary>
      <returns>
        <see langword="true" /> se il gestore supporta la decompressione automatica del contenuto della risposta; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SupportsProxy">
      <summary>Ottiene un valore che indica se il gestore supporta le impostazioni proxy.</summary>
      <returns>
        <see langword="true" /> se il gestore supporta le impostazioni proxy; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration">
      <summary>Ottiene un valore che indica se il gestore supporta le impostazioni di configurazione per le proprietà <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> e <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" />.</summary>
      <returns>
        <see langword="true" /> se il gestore supporta le impostazioni di configurazione per le proprietà <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> e <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" />; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.UseCookies">
      <summary>Ottiene o imposta un valore che indica se il gestore usa la proprietà <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> per archiviare i cookie del server e usa questi cookie durante l'invio delle richieste.</summary>
      <returns>
        <see langword="true" /> se il gestore supporta la proprietà <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> per archiviare i cookie del server e usa tali cookie quando invia richieste; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.UseDefaultCredentials">
      <summary>Ottiene o imposta un valore che controlla se le credenziali predefinite sono inviate con le richieste dal gestore.</summary>
      <returns>
        <see langword="true" /> se vengono usate le credenziali predefinite; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.UseProxy">
      <summary>Ottiene o imposta un valore che indica se il gestore usa un proxy per le richieste.</summary>
      <returns>
        <see langword="true" /> se il gestore deve usare un proxy per le richieste; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="T:System.Net.Http.HttpCompletionOption">
      <summary>Indica se le operazioni di <see cref="T:System.Net.Http.HttpClient" /> devono essere considerate completate non appena la risposta è disponibile o dopo la lettura dell'intero messaggio di risposta, incluso il contenuto.</summary>
    </member>
    <member name="F:System.Net.Http.HttpCompletionOption.ResponseContentRead">
      <summary>L'operazione deve essere completata dopo la lettura della risposta intera che include il contenuto.</summary>
    </member>
    <member name="F:System.Net.Http.HttpCompletionOption.ResponseHeadersRead">
      <summary>L'operazione deve essere completata non appena una risposta è disponibile e le intestazioni vengono lette. Il contenuto non è ancora pronto.</summary>
    </member>
    <member name="T:System.Net.Http.HttpContent">
      <summary>Classe base che rappresenta un corpo di entità e intestazioni di contenuto HTTP.</summary>
    </member>
    <member name="M:System.Net.Http.HttpContent.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.HttpContent" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyTo(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary>Serializza il contenuto HTTP in un flusso di byte e lo copia in <paramref name="stream" />.</summary>
      <param name="stream">Il flusso di destinazione.</param>
      <param name="context">Informazioni relative al trasporto, ad esempio il token di associazione del canale. Questo parametro può essere <see langword="null" />.</param>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="stream" /> era <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)">
      <summary>Serializza il contenuto HTTP in un flusso di byte e lo copia nell'oggetto flusso fornito come parametro di <paramref name="stream" />.</summary>
      <param name="stream">Il flusso di destinazione.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary>Serializza il contenuto HTTP in un flusso di byte e lo copia nell'oggetto flusso fornito come parametro di <paramref name="stream" />.</summary>
      <param name="stream">Il flusso di destinazione.</param>
      <param name="context">Informazioni relative al trasporto, ad esempio il token di associazione del canale. Questo parametro può essere <see langword="null" />.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary>Serializza il contenuto HTTP in un flusso di byte e lo copia nell'oggetto flusso fornito come parametro di <paramref name="stream" />.</summary>
      <param name="stream">Il flusso di destinazione.</param>
      <param name="context">Informazioni relative al trasporto, ad esempio il token di associazione del canale. Questo parametro può essere <see langword="null" />.</param>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Threading.CancellationToken)">
      <summary>Serializza il contenuto HTTP in un flusso di byte e lo copia nell'oggetto flusso fornito come parametro di <paramref name="stream" />.</summary>
      <param name="stream">Il flusso di destinazione.</param>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CreateContentReadStream(System.Threading.CancellationToken)">
      <param name="cancellationToken" />
    </member>
    <member name="M:System.Net.Http.HttpContent.CreateContentReadStreamAsync">
      <summary>Serializza il contenuto HTTP in un flusso di memoria come operazione asincrona.</summary>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CreateContentReadStreamAsync(System.Threading.CancellationToken)">
      <summary>Serializza il contenuto HTTP in un flusso di memoria come operazione asincrona.</summary>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.Dispose">
      <summary>Rilascia le risorse non gestite ed elimina le risorse gestite utilizzate dall'oggetto <see cref="T:System.Net.Http.HttpContent" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpContent.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate da <see cref="T:System.Net.Http.HttpContent" /> e, facoltativamente, elimina le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.Net.Http.HttpContent.LoadIntoBufferAsync">
      <summary>Serializza il contenuto HTTP in un buffer di memoria come operazione asincrona.</summary>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)">
      <summary>Serializza il contenuto HTTP in un buffer di memoria come operazione asincrona.</summary>
      <param name="maxBufferSize">Dimensione massima, in byte, del buffer da usare.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsByteArrayAsync">
      <summary>Serializza il contenuto HTTP in una matrice di byte come operazione asincrona.</summary>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsByteArrayAsync(System.Threading.CancellationToken)">
      <summary>Serializza il contenuto HTTP in una matrice di byte come operazione asincrona.</summary>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStream">
      <summary>Serializza il contenuto HTTP e restituisce un flusso che rappresenta il contenuto.</summary>
      <returns>Flusso che rappresenta il contenuto HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStream(System.Threading.CancellationToken)">
      <summary>Serializza il contenuto HTTP e restituisce un flusso che rappresenta il contenuto.</summary>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
      <returns>Flusso che rappresenta il contenuto HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStreamAsync">
      <summary>Serializza il contenuto HTTP e restituisce un flusso che rappresenta il contenuto come operazione asincrona.</summary>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStreamAsync(System.Threading.CancellationToken)">
      <summary>Serializza il contenuto HTTP e restituisce un flusso che rappresenta il contenuto come operazione asincrona.</summary>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStringAsync">
      <summary>Serializza il contenuto HTTP in una stringa come operazione asincrona.</summary>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStringAsync(System.Threading.CancellationToken)">
      <summary>Serializza il contenuto HTTP in una stringa come operazione asincrona.</summary>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary>Quando sottoposto a override in una classe derivata, serializza il contenuto HTTP in un flusso. in caso contrario, genera <see cref="T:System.NotSupportedException" />.</summary>
      <param name="stream">Il flusso di destinazione.</param>
      <param name="context">Informazioni relative al trasporto, ad esempio il token di associazione del canale. Questo parametro può essere <see langword="null" />.</param>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
      <exception cref="T:System.NotSupportedException">Il metodo non viene sottoposto a override nella classe derivata.</exception>
    </member>
    <member name="M:System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary>Serializza il contenuto HTTP in un flusso come operazione asincrona.</summary>
      <param name="stream">Il flusso di destinazione.</param>
      <param name="context">Informazioni relative al trasporto, ad esempio il token di associazione del canale. Questo parametro può essere <see langword="null" />.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary>Serializza il contenuto HTTP in un flusso come operazione asincrona.</summary>
      <param name="stream">Il flusso di destinazione.</param>
      <param name="context">Informazioni relative al trasporto, ad esempio il token di associazione del canale. Questo parametro può essere <see langword="null" />.</param>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.TryComputeLength(System.Int64@)">
      <summary>Determina se il contenuto HTTP ha una lunghezza in byte valida.</summary>
      <param name="length">Lunghezza in byte del contenuto HTTP.</param>
      <returns>
        <see langword="true" /> se <paramref name="length" /> è una lunghezza valida; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpContent.Headers">
      <summary>Ottiene le intestazioni di contenuto HTTP, come definito in RFC 2616.</summary>
      <returns>Intestazioni di contenuto HTTP, come definito in RFC 2616.</returns>
    </member>
    <member name="T:System.Net.Http.HttpKeepAlivePingPolicy">
      <summary>Specifica quando il frame ping HTTP/2 viene inviato in una connessione inattiva.</summary>
    </member>
    <member name="F:System.Net.Http.HttpKeepAlivePingPolicy.Always">
      <summary>Invia un ping keep-alive per l'intera durata della connessione.</summary>
    </member>
    <member name="F:System.Net.Http.HttpKeepAlivePingPolicy.WithActiveRequests">
      <summary>Invia un ping keep-alive solo quando sono presenti flussi attivi nella connessione.</summary>
    </member>
    <member name="T:System.Net.Http.HttpMessageHandler">
      <summary>Tipo di base per i gestori di messaggi HTTP.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.HttpMessageHandler" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.Dispose">
      <summary>Rilascia le risorse non gestite ed elimina le risorse gestite utilizzate dall'oggetto <see cref="T:System.Net.Http.HttpMessageHandler" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate da <see cref="T:System.Net.Http.HttpMessageHandler" /> e, facoltativamente, elimina le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Quando viene eseguito l'override in una classe derivata, invia una richiesta HTTP con la richiesta e il token di annullamento specificati. in caso contrario, genera <see cref="T:System.NotSupportedException" />.</summary>
      <param name="request">Messaggio di richiesta HTTP da inviare.</param>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
      <exception cref="T:System.NotSupportedException">Il metodo non viene sottoposto a override nella classe derivata.</exception>
      <returns>Messaggio di risposta HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Inviare una richiesta HTTP come operazione asincrona.</summary>
      <param name="request">Messaggio di richiesta HTTP da inviare.</param>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="request" /> era <see langword="null" />.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="T:System.Net.Http.HttpMessageInvoker">
      <summary>Classe di specializzazione che consente alle applicazioni di chiamare il metodo <see cref="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" /> su una catena del gestore HTTP.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary>Inizializza una nuova istanza di una classe <see cref="T:System.Net.Http.HttpMessageInvoker" /> con un <see cref="T:System.Net.Http.HttpMessageHandler" /> specifico.</summary>
      <param name="handler">Oggetto <see cref="T:System.Net.Http.HttpMessageHandler" /> responsabile dell'elaborazione dei messaggi di risposta HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
      <summary>Inizializza una nuova istanza di una classe <see cref="T:System.Net.Http.HttpMessageInvoker" /> con un <see cref="T:System.Net.Http.HttpMessageHandler" /> specifico.</summary>
      <param name="handler">Oggetto <see cref="T:System.Net.Http.HttpMessageHandler" /> responsabile dell'elaborazione dei messaggi di risposta HTTP.</param>
      <param name="disposeHandler">
        <see langword="true" /> se il gestore interno deve essere eliminato da Dispose(), <see langword="false" /> se si intende riusare il gestore interno.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.Dispose">
      <summary>Rilascia le risorse non gestite ed elimina le risorse gestite utilizzate dall'oggetto <see cref="T:System.Net.Http.HttpMessageInvoker" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate da <see cref="T:System.Net.Http.HttpMessageInvoker" /> e, facoltativamente, elimina le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Invia una richiesta HTTP con la richiesta e il token di annullamento specificati.</summary>
      <param name="request">Messaggio di richiesta HTTP da inviare.</param>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="request" /> era <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Per HTTP/2 e versioni successive o quando la richiesta di aggiornamento della versione è abilitata da <see cref="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher" />.

-oppure-

Se l'uso della classe personalizzata derivata da <see cref="T:System.Net.Http.HttpContent" /> non esegue l'override del metodo <see cref="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" />.

-oppure-

Se l'uso dell'oggetto <see cref="T:System.Net.Http.HttpMessageHandler" /> personalizzato non esegue l'override del metodo <see cref="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />.</exception>
      <returns>Messaggio di risposta HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Inviare una richiesta HTTP come operazione asincrona.</summary>
      <param name="request">Messaggio di richiesta HTTP da inviare.</param>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="request" /> era <see langword="null" />.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="T:System.Net.Http.HttpMethod">
      <summary>Classe di helper per recuperare e confrontare i metodi HTTP standard e per creare nuovi metodi HTTP.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMethod.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.HttpMethod" /> con un metodo HTTP specifico.</summary>
      <param name="method">Metodo HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpMethod.Equals(System.Net.Http.HttpMethod)">
      <summary>Determina se l'oggetto <see cref="T:System.Net.Http.HttpMethod" /> specificato è uguale all'oggetto <see cref="T:System.Object" /> corrente.</summary>
      <param name="other">Metodo HTTP da confrontare con l'oggetto corrente.</param>
      <returns>
        <see langword="true" /> se l'oggetto specificato è uguale all'oggetto corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.Equals(System.Object)">
      <summary>Determina se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto <see cref="T:System.Object" /> corrente.</summary>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
      <returns>
        <see langword="true" /> se l'oggetto specificato è uguale all'oggetto corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.GetHashCode">
      <summary>Viene usato come funzione hash per questo tipo.</summary>
      <returns>Codice hash per l'oggetto <see cref="T:System.Object" /> corrente.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.op_Equality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)">
      <summary>Operatore di uguaglianza per confrontare due oggetti <see cref="T:System.Net.Http.HttpMethod" />.</summary>
      <param name="left">Oggetto <see cref="T:System.Net.Http.HttpMethod" /> a sinistra di un operatore di uguaglianza.</param>
      <param name="right">Oggetto <see cref="T:System.Net.Http.HttpMethod" /> a destra di un operatore di uguaglianza.</param>
      <returns>
        <see langword="true" /> se i parametri <paramref name="left" /> e <paramref name="right" /> specificati sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.op_Inequality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)">
      <summary>Operatore di disuguaglianza per confrontare due oggetti <see cref="T:System.Net.Http.HttpMethod" />.</summary>
      <param name="left">Oggetto <see cref="T:System.Net.Http.HttpMethod" /> a sinistra di un operatore di disuguaglianza.</param>
      <param name="right">Oggetto <see cref="T:System.Net.Http.HttpMethod" /> a destra di un operatore di disuguaglianza.</param>
      <returns>
        <see langword="true" /> se i parametri <paramref name="left" /> e <paramref name="right" /> specificati sono diversi; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Delete">
      <summary>Rappresenta un metodo di protocollo HTTP DELETE.</summary>
      <returns>Restituisce <see cref="T:System.Net.Http.HttpMethod" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Get">
      <summary>Rappresenta un metodo di protocollo HTTP GET.</summary>
      <returns>Restituisce <see cref="T:System.Net.Http.HttpMethod" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Head">
      <summary>Rappresenta un metodo di protocollo HTTP HEAD. Il metodo HEAD è identico al metodo GET ad eccezione del fatto che, nella risposta, il server restituisce solo intestazioni di messaggio senza un corpo del messaggio.</summary>
      <returns>Restituisce <see cref="T:System.Net.Http.HttpMethod" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Method">
      <summary>Metodo HTTP.</summary>
      <returns>Metodo HTTP rappresentato come oggetto <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Options">
      <summary>Rappresenta un metodo di protocollo HTTP OPTIONS.</summary>
      <returns>Restituisce <see cref="T:System.Net.Http.HttpMethod" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Patch">
      <summary>Ottiene il metodo del protocollo PATCH HTTP.</summary>
      <returns>Metodo del protocollo PATCH HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Post">
      <summary>Rappresenta un metodo di protocollo HTTP POST utilizzato per inviare una nuova entità come aggiunta a un URI.</summary>
      <returns>Restituisce <see cref="T:System.Net.Http.HttpMethod" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Put">
      <summary>Rappresenta un metodo di protocollo HTTP PUT utilizzato per sostituire un'entità identificata da un URI.</summary>
      <returns>Restituisce <see cref="T:System.Net.Http.HttpMethod" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Trace">
      <summary>Rappresenta un metodo di protocollo HTTP TRACE.</summary>
      <returns>Restituisce <see cref="T:System.Net.Http.HttpMethod" />.</returns>
    </member>
    <member name="T:System.Net.Http.HttpRequestException">
      <summary>Classe base per eccezioni generate dalle classi <see cref="T:System.Net.Http.HttpClient" /> e <see cref="T:System.Net.Http.HttpMessageHandler" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.HttpRequestException" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.HttpRequestException" /> con un messaggio specifico che descrive l'eccezione corrente.</summary>
      <param name="message">Messaggio che descrive l'eccezione corrente.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.HttpRequestException" /> con un messaggio specifico che descrive l'eccezione corrente e l'eccezione interna.</summary>
      <param name="message">Messaggio che descrive l'eccezione corrente.</param>
      <param name="inner">Eccezione interna.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor(System.String,System.Exception,System.Nullable{System.Net.HttpStatusCode})">
      <summary>Inizializza una nuova istanza della <see cref="T:System.Net.Http.HttpRequestException" /> classe con un messaggio specifico che descrive l'eccezione corrente, un'eccezione interna e un codice di stato http.</summary>
      <param name="message">Messaggio che descrive l'eccezione corrente.</param>
      <param name="inner">Eccezione interna.</param>
      <param name="statusCode">Codice di stato HTTP.</param>
    </member>
    <member name="P:System.Net.Http.HttpRequestException.StatusCode">
      <summary>Ottiene il codice di stato HTTP da restituire con l'eccezione.</summary>
      <returns>Codice di stato HTTP se l'eccezione rappresenta un risultato non riuscito; in caso contrario, <c>null</c>.</returns>
    </member>
    <member name="T:System.Net.Http.HttpRequestMessage">
      <summary>Rappresenta un messaggio di richiesta HTTP.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.HttpRequestMessage" /> con un metodo HTTP e una richiesta <see cref="T:System.Uri" />.</summary>
      <param name="method">Metodo HTTP.</param>
      <param name="requestUri">Stringa che rappresenta la richiesta <see cref="T:System.Uri" />.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.Uri)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.HttpRequestMessage" /> con un metodo HTTP e una richiesta <see cref="T:System.Uri" />.</summary>
      <param name="method">Metodo HTTP.</param>
      <param name="requestUri">Oggetto <see cref="T:System.Uri" /> da richiedere.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.Dispose">
      <summary>Rilascia le risorse non gestite ed elimina le risorse gestite utilizzate dall'oggetto <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate da <see cref="T:System.Net.Http.HttpRequestMessage" /> e, facoltativamente, elimina le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente.</summary>
      <returns>Rappresentazione di stringa dell'oggetto corrente.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Content">
      <summary>Ottiene o imposta il contenuto del messaggio HTTP.</summary>
      <returns>Contenuto di un messaggio</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Headers">
      <summary>Ottiene la raccolta di intestazioni di richiesta HTTP.</summary>
      <returns>Raccolta di intestazioni di richiesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Method">
      <summary>Ottiene o imposta il metodo HTTP usato dal messaggio di richiesta HTTP.</summary>
      <returns>Metodo HTTP usato dal messaggio di richiesta. Il metodo predefinito è GET.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Options" />
    <member name="P:System.Net.Http.HttpRequestMessage.Properties">
      <summary>Ottiene un set di proprietà per la richiesta HTTP.</summary>
      <returns>Restituisce <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.RequestUri">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.Uri" /> usato per la richiesta HTTP.</summary>
      <returns>Oggetto <see cref="T:System.Uri" /> usato per la richiesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Version">
      <summary>Ottiene o imposta la versione del messaggio HTTP.</summary>
      <returns>Versione del messaggio HTTP. Il valore predefinito è <c>1,1</c>, a meno che non si abbia come destinazione .net core 2,1 o 2,2. In tal caso, il valore predefinito è <c>2,0</c>.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.VersionPolicy">
      <summary>Ottiene o imposta i criteri che determinano il modo in cui <see cref="System.Net.Http.HttpRequestMessage.Version" /> viene interpretato e il modo in cui viene negoziata la versione HTTP finale con il server.</summary>
      <returns>HttpVersionPolicy utilizzato quando viene stabilita la connessione HTTP.</returns>
    </member>
    <member name="T:System.Net.Http.HttpRequestOptions" />
    <member name="M:System.Net.Http.HttpRequestOptions.#ctor" />
    <member name="M:System.Net.Http.HttpRequestOptions.Set``1(System.Net.Http.HttpRequestOptionsKey{``0},``0)">
      <param name="key" />
      <param name="value" />
      <typeparam name="TValue" />
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Aggiunge un elemento a <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="item">Oggetto da aggiungere all'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Clear">
      <summary>Rimuove tutti gli elementi da <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Stabilisce se <see cref="T:System.Collections.Generic.ICollection`1" /> contiene un valore specifico.</summary>
      <param name="item">Oggetto da individuare nella raccolta <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="item" /> è presente in <see cref="T:System.Collections.Generic.ICollection`1" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Copia gli elementi di <see cref="T:System.Collections.Generic.ICollection`1" /> in <see cref="T:System.Array" /> a partire da un particolare indice <see cref="T:System.Array" />.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="arrayIndex">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Rimuove la prima occorrenza di un oggetto specifico da <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="item">Oggetto da rimuovere da <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="item" /> è stato rimosso correttamente da <see cref="T:System.Collections.Generic.ICollection`1" />; in caso contrario, <see langword="false" />. Questo metodo restituisce inoltre <see langword="false" /> se <paramref name="item" /> non viene trovato nell'oggetto <see cref="T:System.Collections.Generic.ICollection`1" /> originale.</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#Add(System.String,System.Object)">
      <summary>Aggiunge un elemento con la chiave e il valore forniti all'interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <param name="key">Oggetto da usare come chiave dell'elemento da aggiungere.</param>
      <param name="value">Oggetto da usare come valore dell'elemento da aggiungere.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#ContainsKey(System.String)">
      <summary>Determina se <see cref="T:System.Collections.Generic.IDictionary`2" /> contiene un elemento con la chiave specificata.</summary>
      <param name="key">Chiave da individuare in <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
      <returns>
        <see langword="true" /> se <see cref="T:System.Collections.Generic.IDictionary`2" /> contiene un elemento con la chiave; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#Remove(System.String)">
      <summary>Rimuove l'elemento con la chiave specificata da <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <param name="key">Chiave dell'elemento da rimuovere.</param>
      <returns>
        <see langword="true" /> se l'elemento viene rimosso correttamente; in caso contrario, <see langword="false" />. Questo metodo restituisce anche <see langword="false" /> se <paramref name="key" /> non è stato trovato nell'interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" /> originale.</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#TryGetValue(System.String,System.Object@)">
      <param name="key" />
      <param name="value" />
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere la raccolta.</summary>
      <returns>Enumeratore che può essere usato per scorrere la raccolta.</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.TryGetValue``1(System.Net.Http.HttpRequestOptionsKey{``0},``0@)">
      <param name="key" />
      <param name="value" />
      <typeparam name="TValue" />
    </member>
    <member name="P:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Count">
      <summary>Ottiene il numero di elementi contenuti in <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <returns>Il numero di elementi contenuti in <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#IsReadOnly">
      <summary>Ottiene un valore che indica se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura.</summary>
      <returns>
        <see langword="true" /> se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#Item(System.String)">
      <summary>Ottiene o imposta l'elemento con la chiave specificata.</summary>
      <param name="key">Chiave dell'elemento da ottenere o impostare.</param>
      <returns>Elemento con la chiave specificata.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#Keys">
      <summary>Ottiene <see cref="T:System.Collections.Generic.ICollection`1" /> contenente le chiavi di <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> contenente le chiavi dell'oggetto che implementa l'interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#Values">
      <summary>Ottiene <see cref="T:System.Collections.Generic.ICollection`1" /> contenente i valori in <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> contenente i valori nell'oggetto che implementa l'interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="T:System.Net.Http.HttpRequestOptionsKey`1">
      <typeparam name="TValue" />
    </member>
    <member name="M:System.Net.Http.HttpRequestOptionsKey`1.#ctor(System.String)">
      <param name="key" />
    </member>
    <member name="P:System.Net.Http.HttpRequestOptionsKey`1.Key" />
    <member name="T:System.Net.Http.HttpResponseMessage">
      <summary>Rappresenta un messaggio di risposta HTTP che include il codice di stato e i dati.</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.HttpResponseMessage" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.#ctor(System.Net.HttpStatusCode)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.HttpResponseMessage" /> con un <see cref="P:System.Net.Http.HttpResponseMessage.StatusCode" /> specifico.</summary>
      <param name="statusCode">Codice di stato della risposta HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.Dispose">
      <summary>Rilascia le risorse non gestite ed elimina le risorse non gestite utilizzate dall'oggetto <see cref="T:System.Net.Http.HttpResponseMessage" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate da <see cref="T:System.Net.Http.HttpResponseMessage" /> e, facoltativamente, elimina le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode">
      <summary>Genera un'eccezione se la proprietà <see cref="P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode" /> per la risposta HTTP è <see langword="false" />.</summary>
      <exception cref="T:System.Net.Http.HttpRequestException">La risposta HTTP non è riuscita.</exception>
      <returns>Messaggio della risposta HTTP se la chiamata ha esito positivo.</returns>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente.</summary>
      <returns>Rappresentazione di stringa dell'oggetto corrente.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.Content">
      <summary>Ottiene o imposta il contenuto di un messaggio di risposta HTTP.</summary>
      <returns>Contenuto del messaggio di risposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.Headers">
      <summary>Ottiene la raccolta di intestazioni di risposta HTTP.</summary>
      <returns>Raccolta di intestazioni di risposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode">
      <summary>Ottiene un valore che indica se la risposta HTTP ha avuto esito positivo.</summary>
      <returns>
        <see langword="true" /> Se <see cref="P:System.Net.Http.HttpResponseMessage.StatusCode" /> è compreso nell'intervallo 200-299; in caso contrario, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.ReasonPhrase">
      <summary>Ottiene o imposta l'enunciazione generalmente inviata dai server con il codice di stato.</summary>
      <returns>Enunciazione inviata dal server.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.RequestMessage">
      <summary>Ottiene o imposta il messaggio di richiesta che ha portato a questo messaggio di risposta.</summary>
      <returns>Messaggio di richiesta che ha portato a questo messaggio di risposta.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.StatusCode">
      <summary>Ottiene e imposta il codice di stato della risposta HTTP.</summary>
      <returns>Codice di stato della risposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.TrailingHeaders">
      <summary>Ottiene la raccolta di intestazioni finali incluse in una risposta HTTP.</summary>
      <exception cref="T:System.Net.Http.HttpRequestException">PROTOCOL_ERROR: la risposta HTTP/2 contiene pseudo-intestazioni nel frame delle intestazioni finali.</exception>
      <returns>Raccolta di intestazioni finali nella risposta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.Version">
      <summary>Ottiene o imposta la versione del messaggio HTTP.</summary>
      <returns>Versione del messaggio HTTP. Il valore predefinito è 1.1.</returns>
    </member>
    <member name="T:System.Net.Http.HttpVersionPolicy">
      <summary>Specifica i comportamenti per la selezione e la negoziazione della versione HTTP per una richiesta.</summary>
    </member>
    <member name="F:System.Net.Http.HttpVersionPolicy.RequestVersionExact">
      <summary>Usare solo la versione richiesta.</summary>
    </member>
    <member name="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher">
      <summary>Usare la versione più recente disponibile, effettuando il downgrade solo alla versione richiesta ma non a una versione precedente.</summary>
    </member>
    <member name="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrLower">
      <summary>Usare la versione richiesta o effettuare il downgrade a una versione precedente. Comportamento predefinito.</summary>
    </member>
    <member name="T:System.Net.Http.MessageProcessingHandler">
      <summary>Tipo di base per i gestori che eseguono solo un'elaborazione limitata dei messaggi di richiesta e/o risposta.</summary>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.#ctor">
      <summary>Crea un'istanza di una classe <see cref="T:System.Net.Http.MessageProcessingHandler" />.</summary>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary>Crea un'istanza di una classe <see cref="T:System.Net.Http.MessageProcessingHandler" /> con un gestore interno specificato.</summary>
      <param name="innerHandler">Gestore interno responsabile per l'elaborazione dei messaggi di risposta HTTP.</param>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.ProcessRequest(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Esegue l'elaborazione per ogni richiesta inviata al server.</summary>
      <param name="request">Messaggio di richiesta HTTP da elaborare.</param>
      <param name="cancellationToken">Token di annullamento utilizzabile da altri oggetti o thread per ricevere l'avviso dell'annullamento.</param>
      <returns>Messaggio di richiesta HTTP elaborato.</returns>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.ProcessResponse(System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)">
      <summary>Esegue operazioni di elaborazione su ogni risposta ottenuta dal server.</summary>
      <param name="response">Messaggio di risposta HTTP da elaborare.</param>
      <param name="cancellationToken">Token di annullamento utilizzabile da altri oggetti o thread per ricevere l'avviso dell'annullamento.</param>
      <returns>Messaggio di risposta HTTP elaborato.</returns>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Invia al gestore interno una richiesta HTTP da inviare al server.</summary>
      <param name="request">Messaggio di richiesta HTTP da inviare al server.</param>
      <param name="cancellationToken">Token di annullamento utilizzabile da altri oggetti o thread per ricevere l'avviso dell'annullamento.</param>
      <returns>Messaggio di risposta HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Invia al gestore interno una richiesta HTTP da inviare al server come operazione asincrona.</summary>
      <param name="request">Messaggio di richiesta HTTP da inviare al server.</param>
      <param name="cancellationToken">Token di annullamento utilizzabile da altri oggetti o thread per ricevere l'avviso dell'annullamento.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="request" /> era <see langword="null" />.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="T:System.Net.Http.MultipartContent">
      <summary>Fornisce una raccolta di oggetti <see cref="T:System.Net.Http.HttpContent" /> che vengono serializzati utilizzando la specifica di tipo di contenuto multipart/*.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartContent.#ctor">
      <summary>Crea una nuova istanza della classe <see cref="T:System.Net.Http.MultipartContent" />.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartContent.#ctor(System.String)">
      <summary>Crea una nuova istanza della classe <see cref="T:System.Net.Http.MultipartContent" />.</summary>
      <param name="subtype">Sottotipo del contenuto multiparte.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="subtype" /> è <see langword="null" /> o contiene solo spazi vuoti.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartContent.#ctor(System.String,System.String)">
      <summary>Crea una nuova istanza della classe <see cref="T:System.Net.Http.MultipartContent" />.</summary>
      <param name="subtype">Sottotipo del contenuto a più parti.</param>
      <param name="boundary">La stringa limite per il contenuto a più parti.</param>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="subtype" /> era <see langword="null" /> o una stringa vuota.  
  
<paramref name="boundary" /> era <see langword="null" /> o contiene solo spazi vuoti.  
  
-oppure- 
<paramref name="boundary" /> termina con un spazio.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La lunghezza di <paramref name="boundary" /> era maggiore di 70.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)">
      <summary>Aggiungere contenuto HTTP multipart a una raccolta di oggetti di <see cref="T:System.Net.Http.HttpContent" /> che vengono serializzati utilizzando la specifica di tipo di contenuto multipart/*.</summary>
      <param name="content">Contenuto HTTP da aggiungere alla raccolta.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="content" /> era <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartContent.CreateContentReadStream(System.Threading.CancellationToken)">
      <summary>Serializza il contenuto HTTP in un flusso usando la codifica multipart/*.</summary>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
      <returns>Flusso di contenuto HTTP che rappresenta il contenuto HTTP con codifica multipart/*.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.CreateContentReadStreamAsync">
      <summary>Serializza il contenuto HTTP in un flusso usando la codifica multipart/* come operazione asincrona.</summary>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.CreateContentReadStreamAsync(System.Threading.CancellationToken)">
      <summary>Serializza il contenuto HTTP in un flusso usando la codifica multipart/* come operazione asincrona.</summary>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate da <see cref="T:System.Net.Http.MultipartContent" /> e, facoltativamente, elimina le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.Net.Http.MultipartContent.GetEnumerator">
      <summary>Restituisce un enumeratore che scorre la raccolta di oggetti <see cref="T:System.Net.Http.HttpContent" /> che vengono serializzati usando la specifica del tipo di contenuto multipart/*.</summary>
      <returns>Oggetto che può essere usato per scorrere la raccolta.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary>Serializza il contenuto HTTP a più parti in un flusso.</summary>
      <param name="stream">Il flusso di destinazione.</param>
      <param name="context">Informazioni relative al trasporto, ad esempio il token di associazione del canale. Questo parametro può essere <see langword="null" />.</param>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
    </member>
    <member name="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary>Serializza il contenuto HTTP multipart in un flusso come operazione asincrona.</summary>
      <param name="stream">Il flusso di destinazione.</param>
      <param name="context">Informazioni relative al trasporto, ad esempio il token di associazione del canale. Questo parametro può essere <see langword="null" />.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary>Serializza il contenuto HTTP multipart in un flusso come operazione asincrona.</summary>
      <param name="stream">Il flusso di destinazione.</param>
      <param name="context">Informazioni relative al trasporto, ad esempio il token di associazione del canale. Questo parametro può essere <see langword="null" />.</param>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator">
      <summary>Implementazione esplicita del metodo <see cref="M:System.Net.Http.MultipartContent.GetEnumerator" />.</summary>
      <returns>Oggetto che può essere usato per scorrere la raccolta.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)">
      <summary>Determina se il contenuto multipart HTTP ha una lunghezza in byte valida.</summary>
      <param name="length">Lunghezza in byte del contenuto HTTP.</param>
      <returns>
        <see langword="true" /> se <paramref name="length" /> è una lunghezza valida; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.MultipartContent.HeaderEncodingSelector">
      <summary>Ottiene o imposta un callback che decodifica i valori dell'intestazione della risposta.</summary>
      <returns>Callback del selettore di codifica dell'intestazione per decodificare il valore per il nome dell'intestazione di risposta specificata o <see langword="null" /> per indicare il comportamento predefinito.</returns>
    </member>
    <member name="T:System.Net.Http.MultipartFormDataContent">
      <summary>Fornisce un contenitore per il contenuto codificato usando il tipo MIME multipart/form-data.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.#ctor">
      <summary>Crea una nuova istanza della classe <see cref="T:System.Net.Http.MultipartFormDataContent" />.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.#ctor(System.String)">
      <summary>Crea una nuova istanza della classe <see cref="T:System.Net.Http.MultipartFormDataContent" />.</summary>
      <param name="boundary">La stringa limite per il contenuto dati del form a più parti.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="boundary" /> è <see langword="null" /> o contiene solo spazi vuoti.  
  
-oppure- 
<paramref name="boundary" /> termina con un spazio.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La lunghezza di <paramref name="boundary" /> è maggiore di 70.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent)">
      <summary>Aggiungere il contenuto HTTP multipart a una raccolta di oggetti di <see cref="T:System.Net.Http.HttpContent" /> che vengono serializzati nel tipo MIME multipart/form-data.</summary>
      <param name="content">Contenuto HTTP da aggiungere alla raccolta.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="content" /> era <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent,System.String)">
      <summary>Aggiungere il contenuto HTTP multipart a una raccolta di oggetti di <see cref="T:System.Net.Http.HttpContent" /> che vengono serializzati nel tipo MIME multipart/form-data.</summary>
      <param name="content">Contenuto HTTP da aggiungere alla raccolta.</param>
      <param name="name">Nome del contenuto HTTP da aggiungere.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> è <see langword="null" /> o contiene solo spazi vuoti.</exception>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="content" /> era <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent,System.String,System.String)">
      <summary>Aggiungere il contenuto HTTP multipart a una raccolta di oggetti di <see cref="T:System.Net.Http.HttpContent" /> che vengono serializzati nel tipo MIME multipart/form-data.</summary>
      <param name="content">Contenuto HTTP da aggiungere alla raccolta.</param>
      <param name="name">Nome del contenuto HTTP da aggiungere.</param>
      <param name="fileName">Nome file del contenuto HTTP da aggiungere alla raccolta.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> è <see langword="null" /> o contiene solo spazi vuoti.  
  
-oppure- 
<paramref name="fileName" /> è <see langword="null" /> o contiene solo spazi vuoti.</exception>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="content" /> era <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary>Consente di serializzare e scrivere il contenuto specificato nel costruttore in un flusso di contenuto HTTP come operazione asincrona.</summary>
      <param name="stream">Il flusso di destinazione.</param>
      <param name="context">Informazioni relative al trasporto, ad esempio il token di associazione del canale. Questo parametro può essere <see langword="null" />.</param>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="T:System.Net.Http.ReadOnlyMemoryContent">
      <summary>Fornisce contenuto HTTP in base a <see cref="T:System.ReadOnlyMemory`1" />.</summary>
    </member>
    <member name="M:System.Net.Http.ReadOnlyMemoryContent.#ctor(System.ReadOnlyMemory{System.Byte})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.ReadOnlyMemoryContent" />.</summary>
      <param name="content">Contenuto usato per inizializzare <see cref="T:System.Net.Http.ReadOnlyMemoryContent" />.</param>
    </member>
    <member name="T:System.Net.Http.SocketsHttpConnectionContext">
      <summary>Rappresenta il contesto passato a <see cref="P:System.Net.Http.SocketsHttpHandler.ConnectCallback" /> per un'istanza di <see cref="T:System.Net.Http.SocketsHttpHandler" />. .</summary>
    </member>
    <member name="P:System.Net.Http.SocketsHttpConnectionContext.DnsEndPoint">
      <summary>Ottiene l'endpoint DNS che deve essere usato da <see cref="P:System.Net.Http.SocketsHttpHandler.ConnectCallback" /> per stabilire la connessione.</summary>
    </member>
    <member name="P:System.Net.Http.SocketsHttpConnectionContext.InitialRequestMessage">
      <summary>Ottiene il messaggio di richiesta HTTP iniziale che sta causando la creazione della connessione.</summary>
      <returns>Messaggio di richiesta che sta causando la creazione della connessione.</returns>
    </member>
    <member name="T:System.Net.Http.SocketsHttpHandler">
      <summary>Fornisce il gestore di messaggi predefinito usato da <see cref="T:System.Net.Http.HttpClient" /> in .NET Core 2.1 e versioni successive.</summary>
    </member>
    <member name="M:System.Net.Http.SocketsHttpHandler.#ctor">
      <summary>Crea un'istanza di una classe <see cref="T:System.Net.Http.SocketsHttpHandler" />.</summary>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.AllowAutoRedirect">
      <summary>Ottiene o imposta un valore che indica se il gestore deve seguire le risposte di reindirizzamento.</summary>
      <returns>
        <see langword="true" /> Se il gestore deve seguire le risposte di Reindirizzamento; in caso contrario <see langword="false" /> ,. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.AutomaticDecompression">
      <summary>Ottiene o imposta il tipo di metodo di decompressione usato dal gestore per la decompressione automatica della risposta del contenuto HTTP.</summary>
      <returns>Tipo di metodo di decompressione utilizzato dal gestore per la decompressione automatica della risposta del contenuto HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.ConnectCallback">
      <summary>Ottiene o imposta un callback personalizzato usato per aprire nuove connessioni.</summary>
      <returns>Metodo di callback per creare un flusso.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.ConnectTimeout">
      <summary>Ottiene o imposta l'intervallo di tempo di attesa prima che si verifichi il timeout della richiesta.</summary>
      <returns>TimeSpan da attendere prima che si verifichi il timeout della connessione. Il valore predefinito è <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" /> .</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.CookieContainer">
      <summary>Ottiene o imposta l'oggetto contenitore del cookie gestito.</summary>
      <returns>Oggetto contenitore dei cookie gestiti.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.Credentials">
      <summary>Ottiene o imposta le informazioni sull'autenticazione usate dal gestore.</summary>
      <returns>Credenziali di autenticazione associate al gestore. Il valore predefinito è <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.DefaultProxyCredentials">
      <summary>Quando viene usato il proxy predefinito (di sistema), ottiene o imposta le credenziali da inviare al server proxy predefinito per l'autenticazione.</summary>
      <returns>Credenziali utilizzate per autenticare l'utente in un proxy di autenticazione.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.EnableMultipleHttp2Connections">
      <summary>Ottiene o imposta un valore che indica se è possibile stabilire connessioni HTTP/2 aggiuntive allo stesso server quando viene raggiunto il numero massimo di flussi simultanei in tutte le connessioni esistenti.</summary>
      <returns>
        <see langword="true" /> Se è consentita la creazione di altre connessioni HTTP/2. in caso contrario, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.Expect100ContinueTimeout">
      <summary>Ottiene o imposta il valore di timeout per la risposta continua del server HTTP 100.</summary>
      <returns>L'intervallo di tempo di attesa per l'HTTP 100 continua. Il valore predefinito è 1 secondo.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.IsSupported">
      <summary>Ottiene un valore che indica se il gestore è supportato nella piattaforma corrente.</summary>
      <returns>
        <see langword="true" /> Se il gestore è supportato; in caso contrario, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.KeepAlivePingDelay">
      <summary>Ottiene o imposta il ritardo del ping keep-alive.</summary>
      <returns>Ritardo del ping keep alive. Il valore predefinito è <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.KeepAlivePingPolicy">
      <summary>Ottiene o imposta il comportamento del ping keep-alive.</summary>
      <returns>Comportamento del ping keep alive.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.KeepAlivePingTimeout">
      <summary>Ottiene o imposta il timeout del ping keep-alive.</summary>
      <returns>Timeout del ping keep alive. Il valore predefinito è 20 secondi.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxAutomaticRedirections">
      <summary>Ottiene o imposta il numero massimo di reindirizzamenti HTTP consentiti.</summary>
      <returns>Numero massimo di reindirizzamenti HTTP consentiti.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxConnectionsPerServer">
      <summary>Ottiene o imposta il numero massimo di connessioni TCP simultanee consentite a un singolo server.</summary>
      <returns>Numero massimo di connessioni TCP simultanee consentite a un singolo server.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxResponseDrainSize">
      <summary>Ottiene o imposta la quantità massima di dati che possono essere svuotati dalle risposte in byte.</summary>
      <returns>Quantità massima di dati che è possibile svuotare dalle risposte in byte.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxResponseHeadersLength">
      <summary>Ottiene o imposta la lunghezza massima in kilobyte (1024 byte) delle intestazioni di risposta.</summary>
      <returns>Dimensione massima della parte di intestazione della risposta del server, espressa in kilobyte.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.PlaintextStreamFilter">
      <summary>Ottiene o imposta un callback personalizzato che consente l'accesso al flusso del protocollo HTTP senza crittografia.</summary>
      <returns>Callback che fornisce l'accesso al flusso del protocollo HTTP non crittografato.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.PooledConnectionIdleTimeout">
      <summary>Ottiene o imposta il tempo per il quale una connessione può rimanere inattiva nel pool ed essere considerata riutilizzabile.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore specificato è minore di <see cref="F:System.TimeSpan.Zero" /> o uguale a <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</exception>
      <returns>Tempo di inattività massimo per una connessione nel pool. Il valore predefinito per questa proprietà è 2 minuti.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.PooledConnectionLifetime">
      <summary>Ottiene o imposta il tempo per il quale una connessione può rimanere nel pool ed essere considerata riutilizzabile.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore specificato è minore di <see cref="F:System.TimeSpan.Zero" /> o uguale a <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</exception>
      <returns>Tempo massimo in cui una connessione deve essere nel pool. Il valore predefinito di questa proprietà è <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.PreAuthenticate">
      <summary>Ottiene o imposta un valore che indica se il gestore invia un'intestazione di autorizzazione con la richiesta.</summary>
      <returns>
        <see langword="true" /> Se il gestore invia un'intestazione di autorizzazione con la richiesta; in caso contrario, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.Properties" />
    <member name="P:System.Net.Http.SocketsHttpHandler.Proxy">
      <summary>Ottiene o imposta il proxy personalizzato quando la proprietà <see cref="P:System.Net.Http.SocketsHttpHandler.UseProxy" /> è <see langword="true" />.</summary>
      <returns>Proxy personalizzato.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.RequestHeaderEncodingSelector">
      <summary>Ottiene o imposta un callback che decodifica i valori delle intestazioni della richiesta.</summary>
      <returns>Callback del selettore di codifica dell'intestazione per decodificare il valore per il nome dell'intestazione di risposta specificata o <see langword="null" /> per indicare il comportamento predefinito.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.ResponseDrainTimeout">
      <summary>Ottiene o imposta l'intervallo di tempo di attesa per lo svuotamento dei dati dalle risposte.</summary>
      <returns>TimeSpan da attendere per il drenaggio dei dati dalle risposte.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.ResponseHeaderEncodingSelector">
      <summary>Ottiene o imposta un callback che decodifica i valori delle intestazioni della risposta.</summary>
      <returns>Callback del selettore di codifica dell'intestazione per decodificare il valore per il nome dell'intestazione di risposta specificata o <see langword="null" /> per indicare il comportamento predefinito.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.SslOptions">
      <summary>Ottiene o imposta il set di opzioni usato per l'autenticazione TLS del client.</summary>
      <returns>Set di opzioni utilizzato per l'autenticazione TLS del client.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.UseCookies">
      <summary>Ottiene o imposta un valore che indica se il gestore deve usare i cookie.</summary>
      <returns>Valore che indica se il gestore deve utilizzare i cookie.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.UseProxy">
      <summary>Ottiene o imposta un valore che indica se il gestore deve usare un proxy.</summary>
      <returns>Valore che indica se il gestore deve usare un proxy.</returns>
    </member>
    <member name="T:System.Net.Http.SocketsHttpPlaintextStreamFilterContext">
      <summary>Rappresenta il contesto passato a PlaintextStreamFilter per un'istanza di SocketsHttpHandler.</summary>
    </member>
    <member name="P:System.Net.Http.SocketsHttpPlaintextStreamFilterContext.InitialRequestMessage">
      <summary>Ottiene il messaggio di richiesta HTTP iniziale che sta causando il flusso da usare.</summary>
      <returns>Messaggio di richiesta HTTP che causa l'utilizzo del flusso.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpPlaintextStreamFilterContext.NegotiatedHttpVersion">
      <summary>Ottiene la versione di HTTP in uso per il flusso.</summary>
      <returns>Versione di HTTP utilizzata per questo flusso.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpPlaintextStreamFilterContext.PlaintextStream">
      <summary>Ottiene il flusso di testo non crittografato che verrà usato per le richieste e le risposte del protocollo HTTP.</summary>
      <returns>Flusso di testo normale che verrà utilizzato per le richieste e le risposte del protocollo HTTP.</returns>
    </member>
    <member name="T:System.Net.Http.StreamContent">
      <summary>Fornisce il contenuto HTTP basato su un flusso.</summary>
    </member>
    <member name="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream)">
      <summary>Crea una nuova istanza della classe <see cref="T:System.Net.Http.StreamContent" />.</summary>
      <param name="content">Contenuto usato per inizializzare <see cref="T:System.Net.Http.StreamContent" />.</param>
    </member>
    <member name="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream,System.Int32)">
      <summary>Crea una nuova istanza della classe <see cref="T:System.Net.Http.StreamContent" />.</summary>
      <param name="content">Contenuto usato per inizializzare <see cref="T:System.Net.Http.StreamContent" />.</param>
      <param name="bufferSize">Dimensione del buffer, in byte, per <see cref="T:System.Net.Http.StreamContent" />.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="content" /> era <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> era minore o uguale a zero.</exception>
    </member>
    <member name="M:System.Net.Http.StreamContent.CreateContentReadStream(System.Threading.CancellationToken)">
      <summary>Restituisce il flusso HTTP come flusso di sola lettura.</summary>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
      <returns>Flusso di contenuto HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.StreamContent.CreateContentReadStreamAsync">
      <summary>Restituisce il flusso HTTP come flusso di sola lettura come operazione asincrona.</summary>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.StreamContent.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate da <see cref="T:System.Net.Http.StreamContent" /> e, facoltativamente, elimina le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.Net.Http.StreamContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary>Serializza il contenuto HTTP a più parti in un flusso.</summary>
      <param name="stream">Il flusso di destinazione.</param>
      <param name="context">Informazioni relative al trasporto, ad esempio il token di associazione del canale. Questo parametro può essere <see langword="null" />.</param>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
    </member>
    <member name="M:System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary>Serializza il contenuto HTTP in un flusso come operazione asincrona.</summary>
      <param name="stream">Il flusso di destinazione.</param>
      <param name="context">Informazioni relative al trasporto, ad esempio il token di associazione del canale. Questo parametro può essere <see langword="null" />.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary>Serializza il contenuto HTTP in un flusso come operazione asincrona.</summary>
      <param name="stream">Il flusso di destinazione.</param>
      <param name="context">Informazioni relative al trasporto, ad esempio il token di associazione del canale. Questo parametro può essere <see langword="null" />.</param>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.Http.StreamContent.TryComputeLength(System.Int64@)">
      <summary>Determina se il contenuto del flusso ha una lunghezza in byte valida.</summary>
      <param name="length">Lunghezza in byte del contenuto del flusso.</param>
      <returns>
        <see langword="true" /> se <paramref name="length" /> è una lunghezza valida; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.StringContent">
      <summary>Fornisce il contenuto HTTP basato su una stringa.</summary>
    </member>
    <member name="M:System.Net.Http.StringContent.#ctor(System.String)">
      <summary>Crea una nuova istanza della classe <see cref="T:System.Net.Http.StringContent" />.</summary>
      <param name="content">Contenuto usato per inizializzare <see cref="T:System.Net.Http.StringContent" />.</param>
    </member>
    <member name="M:System.Net.Http.StringContent.#ctor(System.String,System.Text.Encoding)">
      <summary>Crea una nuova istanza della classe <see cref="T:System.Net.Http.StringContent" />.</summary>
      <param name="content">Contenuto usato per inizializzare <see cref="T:System.Net.Http.StringContent" />.</param>
      <param name="encoding">Codifica da utilizzare per il contenuto.</param>
    </member>
    <member name="M:System.Net.Http.StringContent.#ctor(System.String,System.Text.Encoding,System.String)">
      <summary>Crea una nuova istanza della classe <see cref="T:System.Net.Http.StringContent" />.</summary>
      <param name="content">Contenuto usato per inizializzare <see cref="T:System.Net.Http.StringContent" />.</param>
      <param name="encoding">Codifica da utilizzare per il contenuto.</param>
      <param name="mediaType">Tipo di dati multimediali da utilizzare per il contenuto.</param>
    </member>
    <member name="M:System.Net.Http.StringContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary>Consente di serializzare e scrivere la stringa specificata nel costruttore in un flusso di contenuto HTTP come operazione asincrona.</summary>
      <param name="stream">Il flusso di destinazione.</param>
      <param name="context">Informazioni relative al trasporto, ad esempio il token di associazione del canale. Questo parametro può essere <see langword="null" />.</param>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
  </members>
</doc>