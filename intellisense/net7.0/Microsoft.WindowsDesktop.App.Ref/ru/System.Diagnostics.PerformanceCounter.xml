<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.PerformanceCounter</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.CounterCreationData">
      <summary>Определяет тип настраиваемого счетчика, его имя и строку справки.</summary>
    </member>
    <member name="M:System.Diagnostics.CounterCreationData.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.CounterCreationData" /> для счетчика типа <see langword="NumberOfItems32" /> с пустым именем и строкой справки.</summary>
    </member>
    <member name="M:System.Diagnostics.CounterCreationData.#ctor(System.String,System.String,System.Diagnostics.PerformanceCounterType)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.CounterCreationData" /> для счетчика заданного типа, используя указанное имя счетчика и строки справки.</summary>
      <param name="counterName">Имя счетчика, которое должно быть уникальным в его категории.</param>
      <param name="counterHelp">Текст описания поведения счетчика.</param>
      <param name="counterType">Перечисление <see cref="T:System.Diagnostics.PerformanceCounterType" />, используемое для определения поведения счетчика.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Значение задано для параметра <paramref name="counterType" />, который не является элементом перечисления <see cref="T:System.Diagnostics.PerformanceCounterType" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="counterHelp" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="P:System.Diagnostics.CounterCreationData.CounterHelp">
      <summary>Возвращает или задает описание настраиваемого счетчика.</summary>
      <exception cref="T:System.ArgumentNullException">Указанное значение равно <see langword="null" />.</exception>
      <returns>Текст описания поведения счетчика.</returns>
    </member>
    <member name="P:System.Diagnostics.CounterCreationData.CounterName">
      <summary>Возвращает или задает имя настраиваемого счетчика.</summary>
      <exception cref="T:System.ArgumentNullException">Указанное значение равно <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Длина указанного значения выходит за рамки диапазона от 1 до 80 символов или содержит двойные кавычки, управляющие символы либо начальные или концевые пробелы.</exception>
      <returns>Имя счетчика, которое должно быть уникальным в его категории.</returns>
    </member>
    <member name="P:System.Diagnostics.CounterCreationData.CounterType">
      <summary>Возвращает или задает тип настраиваемого счетчика производительности.</summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Указан тип, который не является элементом перечисления <see cref="T:System.Diagnostics.PerformanceCounterType" />.</exception>
      <returns>Перечисление <see cref="T:System.Diagnostics.PerformanceCounterType" />, определяющее поведение счетчика производительности.</returns>
    </member>
    <member name="T:System.Diagnostics.CounterCreationDataCollection">
      <summary>Предоставляет строго типизированную коллекцию объектов <see cref="T:System.Diagnostics.CounterCreationData" />.</summary>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> без связанных экземпляров <see cref="T:System.Diagnostics.CounterCreationData" />.</summary>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.#ctor(System.Diagnostics.CounterCreationData[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.CounterCreationDataCollection" />, используя указанный массив экземпляров <see cref="T:System.Diagnostics.CounterCreationData" />.</summary>
      <param name="value">Массив экземпляров <see cref="T:System.Diagnostics.CounterCreationData" />, с помощью которого инициализируется данная коллекция <see cref="T:System.Diagnostics.CounterCreationDataCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.#ctor(System.Diagnostics.CounterCreationDataCollection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.CounterCreationDataCollection" />, используя указанную коллекцию экземпляров <see cref="T:System.Diagnostics.CounterCreationData" />.</summary>
      <param name="value">Класс <see cref="T:System.Diagnostics.CounterCreationDataCollection" />, содержащий экземпляры <see cref="T:System.Diagnostics.CounterCreationData" />, с помощью которых инициализируется класс <see cref="T:System.Diagnostics.CounterCreationDataCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.Add(System.Diagnostics.CounterCreationData)">
      <summary>Добавляет в коллекцию экземпляр класса <see cref="T:System.Diagnostics.CounterCreationData" />.</summary>
      <param name="value">Объект <see cref="T:System.Diagnostics.CounterCreationData" />, добавляемый в конец существующей коллекции.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> не является объектом <see cref="T:System.Diagnostics.CounterCreationData" />.</exception>
      <returns>Индекс нового объекта <see cref="T:System.Diagnostics.CounterCreationData" />.</returns>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.AddRange(System.Diagnostics.CounterCreationData[])">
      <summary>Добавляет в коллекцию указанный массив экземпляров <see cref="T:System.Diagnostics.CounterCreationData" />.</summary>
      <param name="value">Массив экземпляров <see cref="T:System.Diagnostics.CounterCreationData" />, добавляемых в конец существующей коллекции.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.AddRange(System.Diagnostics.CounterCreationDataCollection)">
      <summary>Добавляет в коллекцию указанную коллекцию экземпляров <see cref="T:System.Diagnostics.CounterCreationData" />.</summary>
      <param name="value">Коллекция экземпляров <see cref="T:System.Diagnostics.CounterCreationData" />, добавляемая в конец существующей коллекции.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.Contains(System.Diagnostics.CounterCreationData)">
      <summary>Определяет существование экземпляра <see cref="T:System.Diagnostics.CounterCreationData" /> в коллекции.</summary>
      <param name="value">Объект <see cref="T:System.Diagnostics.CounterCreationData" />, который необходимо найти в коллекции.</param>
      <returns>Значение <see langword="true" />, если указанный объект <see cref="T:System.Diagnostics.CounterCreationData" /> присутствует в коллекции; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.CopyTo(System.Diagnostics.CounterCreationData[],System.Int32)">
      <summary>Копирует элементы объекта <see cref="T:System.Diagnostics.CounterCreationData" /> в массив, начиная с указанного индекса массива.</summary>
      <param name="array">Массив экземпляров <see cref="T:System.Diagnostics.CounterCreationData" />, добавляемый в коллекцию.</param>
      <param name="index">Расположение, в которое добавляются новые экземпляры.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра<paramref name="index" /> меньше 0.</exception>
      <exception cref="T:System.ArgumentException">Количество элементов в коллекции <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> превышает доступное пространство от индекса <paramref name="index" /> до конца массива назначения.</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.IndexOf(System.Diagnostics.CounterCreationData)">
      <summary>Возвращает индекс объекта <see cref="T:System.Diagnostics.CounterCreationData" /> в коллекции.</summary>
      <param name="value">Объект <see cref="T:System.Diagnostics.CounterCreationData" />, который требуется найти в коллекции.</param>
      <returns>Отсчитываемый от нуля индекс объекта <see cref="T:System.Diagnostics.CounterCreationData" />, если он найден в коллекции; в противном случае — значение, равное -1.</returns>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.Insert(System.Int32,System.Diagnostics.CounterCreationData)">
      <summary>Вставляет объект <see cref="T:System.Diagnostics.CounterCreationData" /> в коллекцию по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс места вставки объекта <see cref="T:System.Diagnostics.CounterCreationData" />.</param>
      <param name="value">Объект <see cref="T:System.Diagnostics.CounterCreationData" /> для вставки в коллекцию.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> не является объектом <see cref="T:System.Diagnostics.CounterCreationData" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра<paramref name="index" /> меньше 0.  
  
-или- 
 Значение параметра <paramref name="index" />больше числа элементов в коллекции.</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.OnValidate(System.Object)">
      <summary>Проверяет указанный объект и определяет, принадлежит ли он к допустимому типу <see cref="T:System.Diagnostics.CounterCreationData" />.</summary>
      <param name="value">Тип объекта, подлежащего проверке.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> не является объектом <see cref="T:System.Diagnostics.CounterCreationData" />.</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.Remove(System.Diagnostics.CounterCreationData)">
      <summary>Удаляет объект <see cref="T:System.Diagnostics.CounterCreationData" /> из коллекции.</summary>
      <param name="value">Объект <see cref="T:System.Diagnostics.CounterCreationData" />, который требуется удалить из коллекции.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> не является объектом <see cref="T:System.Diagnostics.CounterCreationData" />.  
  
-или- 
 <paramref name="value" /> не существует в коллекции.</exception>
    </member>
    <member name="P:System.Diagnostics.CounterCreationDataCollection.Item(System.Int32)">
      <summary>Индексирует коллекцию <see cref="T:System.Diagnostics.CounterCreationData" />.</summary>
      <param name="index">Индекс в коллекции <see cref="T:System.Diagnostics.CounterCreationDataCollection" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра<paramref name="index" /> меньше 0.  
  
-или- 
 Значение параметра <paramref name="index" /> равно количеству элементов в коллекции или превышает это значение.</exception>
      <returns>Индекс коллекции, используемый для доступа к отдельным элементам коллекции.</returns>
    </member>
    <member name="T:System.Diagnostics.CounterSample">
      <summary>Определяет структуру, содержащую необработанные данные для счетчика производительности.</summary>
    </member>
    <member name="F:System.Diagnostics.CounterSample.Empty">
      <summary>Определяет пустой, неинициализированный образец счетчика производительности с типом <see langword="NumberOfItems32" />.</summary>
    </member>
    <member name="M:System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Diagnostics.CounterSample" /> и задает свойству <see cref="P:System.Diagnostics.CounterSample.CounterTimeStamp" /> значение 0 (ноль).</summary>
      <param name="rawValue">Числовое значение, связанное с образцом счетчика производительности.</param>
      <param name="baseValue">Дополнительное базовое начальное значение для счетчика, используемое, только если в основе образца лежат несколько счетчиков.</param>
      <param name="counterFrequency">Частота, с которой счетчик считывается.</param>
      <param name="systemFrequency">Частота, с которой данные счетчика считываются системой.</param>
      <param name="timeStamp">Начальный штамп времени.</param>
      <param name="timeStamp100nSec">Начальный штамп времени с высокой точностью.</param>
      <param name="counterType">Объект <see cref="T:System.Diagnostics.PerformanceCounterType" />, указывающий тип счетчика, для которого данный образец является снимком.</param>
    </member>
    <member name="M:System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType,System.Int64)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Diagnostics.CounterSample" /> и задает передаваемое значение свойству <see cref="P:System.Diagnostics.CounterSample.CounterTimeStamp" />.</summary>
      <param name="rawValue">Числовое значение, связанное с образцом счетчика производительности.</param>
      <param name="baseValue">Дополнительное базовое начальное значение для счетчика, используемое, только если в основе образца лежат несколько счетчиков.</param>
      <param name="counterFrequency">Частота, с которой счетчик считывается.</param>
      <param name="systemFrequency">Частота, с которой данные счетчика считываются системой.</param>
      <param name="timeStamp">Начальный штамп времени.</param>
      <param name="timeStamp100nSec">Начальный штамп времени с высокой точностью.</param>
      <param name="counterType">Объект <see cref="T:System.Diagnostics.PerformanceCounterType" />, указывающий тип счетчика, для которого данный образец является снимком.</param>
      <param name="counterTimeStamp">Время получения образца.</param>
    </member>
    <member name="M:System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample)">
      <summary>Вычисляет данные производительности счетчика, используя одну точку измерения. Этот метод обычно используется для типов счетчиков с нераcсчитанной производительностью.</summary>
      <param name="counterSample">Структура <see cref="T:System.Diagnostics.CounterSample" />, используемая в качестве базовой точки для расчета данных производительности.</param>
      <returns>Вычисляемое значение производительности.</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)">
      <summary>Вычисляет данные производительности счетчика, используя две точки измерения. Этот метод обычно используется для типов счетчиков с вычисляемой производительностью (например, средние значения).</summary>
      <param name="counterSample">Структура <see cref="T:System.Diagnostics.CounterSample" />, используемая в качестве базовой точки для расчета данных производительности.</param>
      <param name="nextCounterSample">Структура <see cref="T:System.Diagnostics.CounterSample" />, используемая в качестве конечной точки для расчета данных производительности.</param>
      <returns>Вычисляемое значение производительности.</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSample.Equals(System.Diagnostics.CounterSample)">
      <summary>Указывает, равна ли заданная структура <see cref="T:System.Diagnostics.CounterSample" /> текущей структуре <see cref="T:System.Diagnostics.CounterSample" />.</summary>
      <param name="sample">Структура <see cref="T:System.Diagnostics.CounterSample" />, которую необходимо сравнить с этим экземпляром.</param>
      <returns>Значение <see langword="true" />, если <paramref name="sample" /> равен текущему экземпляру; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSample.Equals(System.Object)">
      <summary>Указывает, является ли заданная структура структурой <see cref="T:System.Diagnostics.CounterSample" />, и идентична ли она текущей структуре <see cref="T:System.Diagnostics.CounterSample" />.</summary>
      <param name="o">Структура <see cref="T:System.Diagnostics.CounterSample" />, которую необходимо сравнить с текущей структурой.</param>
      <returns>Значение <see langword="true" />, если <paramref name="o" /> является структурой <see cref="T:System.Diagnostics.CounterSample" /> и идентична текущему экземпляру; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSample.GetHashCode">
      <summary>Возвращает хэш-код для текущего образца счетчика.</summary>
      <returns>Хэш-код для текущего образца счетчика.</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSample.op_Equality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)">
      <summary>Возвращает значение, указывающее, равны ли между собой две структуры <see cref="T:System.Diagnostics.CounterSample" />.</summary>
      <param name="a">Структура <see cref="T:System.Diagnostics.CounterSample" />.</param>
      <param name="b">Другая структура <see cref="T:System.Diagnostics.CounterSample" /> для сравнения со структурой, указанной параметром <paramref name="a" />.</param>
      <returns>Значение <see langword="true" />, если <paramref name="a" /> и <paramref name="b" /> равны; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSample.op_Inequality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)">
      <summary>Возвращает значение, указывающее о неравенстве двух структур <see cref="T:System.Diagnostics.CounterSample" />.</summary>
      <param name="a">Структура <see cref="T:System.Diagnostics.CounterSample" />.</param>
      <param name="b">Другая структура <see cref="T:System.Diagnostics.CounterSample" /> для сравнения со структурой, указанной параметром <paramref name="a" />.</param>
      <returns>Значение <see langword="true" />, если <paramref name="a" /> и <paramref name="b" /> не идентичны; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.BaseValue">
      <summary>Возвращает дополнительное базовое начальное значение для счетчика.</summary>
      <returns>Базовое начальное значение для счетчика, используемое, только если в основе образца лежат несколько счетчиков.</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.CounterFrequency">
      <summary>Возвращает начальную частоту счетчика.</summary>
      <returns>Частота, с которой счетчик считывается.</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.CounterTimeStamp">
      <summary>Возвращает штамп времени счетчика.</summary>
      <returns>Время получения образца.</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.CounterType">
      <summary>Возвращает тип счетчика производительности.</summary>
      <returns>Объект <see cref="T:System.Diagnostics.PerformanceCounterType" />, указывающий тип счетчика, для которого данный образец является снимком.</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.RawValue">
      <summary>Возвращает начальное значение счетчика.</summary>
      <returns>Числовое значение, связанное с образцом счетчика производительности.</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.SystemFrequency">
      <summary>Возвращает начальную частоту системы.</summary>
      <returns>Частота, с которой данные счетчика считываются системой.</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.TimeStamp">
      <summary>Возвращает начальный штамп времени.</summary>
      <returns>Штамп времени системы.</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.TimeStamp100nSec">
      <summary>Возвращает начальный штамп времени с высокой точностью.</summary>
      <returns>Штамп времени системы, представленный значением 0,1 миллисекунды.</returns>
    </member>
    <member name="T:System.Diagnostics.CounterSampleCalculator">
      <summary>Содержит набор служебных функций для обработки данных счетчика производительности.</summary>
    </member>
    <member name="M:System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample)">
      <summary>Вычисляет расчетное значение одного экземпляра необработанных данных счетчика.</summary>
      <param name="newSample">Структура <see cref="T:System.Diagnostics.CounterSample" />, указывающая на последний взятый системой экземпляр.</param>
      <returns>Представление расчетного значения счетчика производительности в виде значения с плавающей запятой.</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)">
      <summary>Вычисляет расчетное значение двух экземпляров необработанных данных счетчика.</summary>
      <param name="oldSample">Структура <see cref="T:System.Diagnostics.CounterSample" />, указывающая на предыдущий взятый системой экземпляр.</param>
      <param name="newSample">Структура <see cref="T:System.Diagnostics.CounterSample" />, указывающая на последний взятый системой экземпляр.</param>
      <exception cref="T:System.InvalidOperationException">Для параметра <paramref name="oldSample" /> используется тип счетчика, отличный от <paramref name="newSample" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Тип счетчика <paramref name="newSample" /> вызывает ошибку поддержки данных производительности (PDH). Дополнительные сведения см. в параграфе о проверке возвращаемых значений интерфейса PDH в разделах настоящей документации, посвященных разработке для Win32 и модели COM.</exception>
      <returns>Представление расчетного значения счетчика производительности в виде значения с плавающей запятой.</returns>
    </member>
    <member name="T:System.Diagnostics.ICollectData">
      <summary>Подготавливает данные о производительности для библиотеки производительности DLL, которая загружается системой при работе со счетчиками производительности.</summary>
    </member>
    <member name="M:System.Diagnostics.ICollectData.CloseData">
      <summary>Вызывается функцией закрытия данных о производительности библиотеки производительности DLL.</summary>
    </member>
    <member name="M:System.Diagnostics.ICollectData.CollectData(System.Int32,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr@)">
      <summary>Собирает данные о производительности для библиотеки производительности DLL.</summary>
      <param name="id">Индекс вызова.</param>
      <param name="valueName">Указатель на список строк в формате Юникод с запрашиваемыми идентификаторами объектов.</param>
      <param name="data">Указатель на буфер данных.</param>
      <param name="totalBytes">Указатель на число байтов.</param>
      <param name="res">Возвращаемые этим методом данные содержат в первом байте после данных структуру <see cref="T:System.IntPtr" /> (-1 для ошибки или -2, если требуется буфер большего размера). Этот параметр передается неинициализированным.</param>
    </member>
    <member name="T:System.Diagnostics.InstanceData">
      <summary>Содержит данные экземпляра, связанные с образцом счетчика производительности.</summary>
    </member>
    <member name="M:System.Diagnostics.InstanceData.#ctor(System.String,System.Diagnostics.CounterSample)">
      <summary>Инициализирует новый экземпляр класса InstanceData, используя указанный образец и экземпляр счетчика производительности.</summary>
      <param name="instanceName">Имя экземпляра, связанного со счетчиком производительности.</param>
      <param name="sample">Объект <see cref="T:System.Diagnostics.CounterSample" /> берется из экземпляра, заданного параметром <paramref name="instanceName" />.</param>
    </member>
    <member name="P:System.Diagnostics.InstanceData.InstanceName">
      <summary>Возвращает имя экземпляра, связанное с данными этого экземпляра.</summary>
      <returns>Имя экземпляра, связанного со счетчиком производительности.</returns>
    </member>
    <member name="P:System.Diagnostics.InstanceData.RawValue">
      <summary>Возвращает начальное значение данных, связанное с образцом счетчика производительности.</summary>
      <returns>Начальное значение, которое считывается образцом счетчика производительности, связанным со свойством <see cref="P:System.Diagnostics.InstanceData.Sample" />.</returns>
    </member>
    <member name="P:System.Diagnostics.InstanceData.Sample">
      <summary>Возвращает образец счетчика производительности, с помощью которого были созданы эти данные.</summary>
      <returns>Объект <see cref="T:System.Diagnostics.CounterSample" /> берется из экземпляра заданного свойством <see cref="P:System.Diagnostics.InstanceData.InstanceName" />.</returns>
    </member>
    <member name="T:System.Diagnostics.InstanceDataCollection">
      <summary>Предоставляет строго типизированную коллекцию объектов <see cref="T:System.Diagnostics.InstanceData" />.</summary>
    </member>
    <member name="M:System.Diagnostics.InstanceDataCollection.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.InstanceDataCollection" />, используя указанный счетчик производительности (который определяет экземпляр производительности).</summary>
      <param name="counterName">Имя счетчика, который часто описывает подсчитываемое количество.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="counterName" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.InstanceDataCollection.Contains(System.String)">
      <summary>Определяет наличие экземпляра производительности с указанным именем (определенное по одному из индексированных объектов <see cref="T:System.Diagnostics.InstanceData" />) в коллекции.</summary>
      <param name="instanceName">Имя экземпляра, который нужно найти в коллекции.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="instanceName" /> имеет значение <see langword="null" />.</exception>
      <returns>Значение <see langword="true" /> при наличии экземпляра в коллекции; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.InstanceDataCollection.CopyTo(System.Diagnostics.InstanceData[],System.Int32)">
      <summary>Копирует элементы коллекции в указанный одномерный массив по указанному индексу.</summary>
      <param name="instances">Одномерный объект <see cref="T:System.Array" />, являющийся целевым для значений, скопированных из коллекции.</param>
      <param name="index">Отсчитываемое от нуля значение индекса, по которому добавляются новые экземпляры.</param>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollection.CounterName">
      <summary>Возвращает имя счетчика производительности, данные экземпляра которого нужно получить.</summary>
      <returns>Имя счетчика производительности.</returns>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollection.Item(System.String)">
      <summary>Возвращает данные экземпляра, связанные с этим счетчиком. Как правило, это набор начальных значений счетчика.</summary>
      <param name="instanceName">Имя экземпляра категории счетчика производительности или пустая строка (""), если категория содержит единственный экземпляр.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="instanceName" /> имеет значение <see langword="null" />.</exception>
      <returns>Элемент <see cref="T:System.Diagnostics.InstanceData" />, по которому индексируется объект <see cref="T:System.Diagnostics.InstanceDataCollection" />.</returns>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollection.Keys">
      <summary>Возвращает объект и разделы реестра счетчика для объектов, связанных с данными экземпляра.</summary>
      <returns>Класс <see cref="T:System.Collections.ICollection" />, представляющий набор разделов реестра, связанных с объектами.</returns>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollection.Values">
      <summary>Возвращает начальные значения счетчика, которые содержат данные экземпляра для счетчика.</summary>
      <returns>Класс <see cref="T:System.Collections.ICollection" />, предоставляющий начальные значения счетчика.</returns>
    </member>
    <member name="T:System.Diagnostics.InstanceDataCollectionCollection">
      <summary>Предоставляет строго типизированную коллекцию объектов <see cref="T:System.Diagnostics.InstanceDataCollection" />.</summary>
    </member>
    <member name="M:System.Diagnostics.InstanceDataCollectionCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.InstanceDataCollectionCollection" />.</summary>
    </member>
    <member name="M:System.Diagnostics.InstanceDataCollectionCollection.Contains(System.String)">
      <summary>Определяет наличие коллекции данных экземпляра для указанного счетчика (определяется по одному из индексированных объектов <see cref="T:System.Diagnostics.InstanceDataCollection" />) в соответствующей коллекции.</summary>
      <param name="counterName">Имя счетчика производительности.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="counterName" /> имеет значение <see langword="null" />.</exception>
      <returns>Значение <see langword="true" />, если в коллекции присутствует коллекция данных экземпляра, содержащая указанный счетчик; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.InstanceDataCollectionCollection.CopyTo(System.Diagnostics.InstanceDataCollection[],System.Int32)">
      <summary>Копирует массив экземпляров <see cref="T:System.Diagnostics.InstanceDataCollection" /> в коллекцию по указанному индексу.</summary>
      <param name="counters">Добавляемый в коллекцию массив экземпляров <see cref="T:System.Diagnostics.InstanceDataCollection" /> (определяются по содержащимся в них счетчикам).</param>
      <param name="index">Расположение, в которое добавляются новые экземпляры.</param>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollectionCollection.Item(System.String)">
      <summary>Возвращает данные экземпляра для указанного счетчика.</summary>
      <param name="counterName">Имя счетчика производительности.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="counterName" /> имеет значение <see langword="null" />.</exception>
      <returns>Элемент <see cref="T:System.Diagnostics.InstanceDataCollection" />, по которому индексируется объект <see cref="T:System.Diagnostics.InstanceDataCollectionCollection" />.</returns>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollectionCollection.Keys">
      <summary>Возвращает объект и разделы реестра счетчика для объектов, связанных с этой коллекцией данных экземпляра.</summary>
      <returns>Класс <see cref="T:System.Collections.ICollection" />, представляющий набор разделов реестра, связанных с объектами.</returns>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollectionCollection.Values">
      <summary>Возвращает значения данных экземпляра, в которых содержится коллекция экземпляров счетчика.</summary>
      <returns>Объект <see cref="T:System.Collections.ICollection" />, предоставляющий экземпляры счетчика и связанные с ними значения данных.</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounter">
      <summary>Представляет компонент счетчика производительности Windows NT.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounter.DefaultFileMappingSize">
      <summary>Он указывает размер глобальной памяти в байтах, используемой счетчиками производительности. Размер по умолчанию равен 524,288 байт.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.#ctor">
      <summary>Выполняет инициализацию нового, доступного только для чтения экземпляра класса <see cref="T:System.Diagnostics.PerformanceCounter" />, не связывая этот экземпляр с каким-нибудь системным или определенным пользователем счетчиком производительности.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String)">
      <summary>Выполняет инициализацию нового, доступного только для чтения экземпляра класса <see cref="T:System.Diagnostics.PerformanceCounter" /> и связывает этот экземпляр с конкретным системным или определенным пользователем счетчиком производительности на локальном компьютере. Этот конструктор требует, чтобы категория имела единственный экземпляр.</summary>
      <param name="categoryName">Имя категории счетчика производительности (объект производительности), которому соответствует этот счетчик производительности.</param>
      <param name="counterName">Имя счетчика производительности.</param>
      <exception cref="T:System.InvalidOperationException">Параметр <paramref name="categoryName" /> является пустой строкой ("").  
  
-или- 
 Параметр <paramref name="counterName" /> является пустой строкой ("").  
  
-или- 
Указанная категория не существует.  
  
-или- 
Указанная категория помечена как многоэкземплярная и требует создания счетчика производительности с именем экземпляра.  
  
-или- 
 Параметры <paramref name="categoryName" /> и <paramref name="counterName" /> были локализованы на разных языках.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="categoryName" /> или <paramref name="counterName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Произошла ошибка при обращении к API-интерфейсу системы.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.Boolean)">
      <summary>Выполняет инициализацию нового, доступного только для чтения или для чтения и записи экземпляра класса <see cref="T:System.Diagnostics.PerformanceCounter" /> и связывает этот экземпляр с конкретным системным или определенным пользователем счетчиком производительности на локальном компьютере. Этот конструктор требует, чтобы категория содержала единственный экземпляр.</summary>
      <param name="categoryName">Имя категории счетчика производительности (объект производительности), которому соответствует этот счетчик производительности.</param>
      <param name="counterName">Имя счетчика производительности.</param>
      <param name="readOnly">Значение <see langword="true" /> для доступа к счетчику в режиме только для чтения (хотя сам счетчик может быть для чтения/записи); значение <see langword="false" /> для доступа к счетчику в режиме чтения/записи.</param>
      <exception cref="T:System.InvalidOperationException">Значением параметра <paramref name="categoryName" /> является пустая строка ("").  
  
-или- 
Значением параметра <paramref name="counterName" /> является пустая строка ("").  
  
-или- 
Указанная категория не существует. (если <paramref name="readOnly" /> равен <see langword="true" />).  
  
-или- 
Заданная категория не является определенной пользователем .NET Framework категорией (если <paramref name="readOnly" /> равен <see langword="false" />).  
  
-или- 
Указанная категория помечена как многоэкземплярная и требует создания счетчика производительности с именем экземпляра.  
  
-или- 
 Параметры <paramref name="categoryName" /> и <paramref name="counterName" /> были локализованы на разных языках.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="categoryName" /> или <paramref name="counterName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Произошла ошибка при обращении к API-интерфейсу системы.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String)">
      <summary>Выполняет инициализацию нового, доступного только для чтения экземпляра класса <see cref="T:System.Diagnostics.PerformanceCounter" /> и связывает этот экземпляр с конкретным системным или определенным пользователем счетчиком производительности и экземпляром категории на локальном компьютере.</summary>
      <param name="categoryName">Имя категории счетчика производительности (объект производительности), которому соответствует этот счетчик производительности.</param>
      <param name="counterName">Имя счетчика производительности.</param>
      <param name="instanceName">Имя экземпляра категории счетчика производительности или пустая строка (""), если категория содержит единственный экземпляр.</param>
      <exception cref="T:System.InvalidOperationException">Параметр <paramref name="categoryName" /> является пустой строкой ("").  
  
-или- 
 Параметр <paramref name="counterName" /> является пустой строкой ("").  
  
-или- 
Задана недопустимая категория.  
  
-или- 
Указанная категория помечена как многоэкземплярная и требует создания счетчика производительности с именем экземпляра.  
  
-или- 
 Длина параметра <paramref name="instanceName" /> превышает 127 символов.  
  
-или- 
 Параметры <paramref name="categoryName" /> и <paramref name="counterName" /> были локализованы на разных языках.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="categoryName" /> или <paramref name="counterName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Произошла ошибка при обращении к API-интерфейсу системы.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.Boolean)">
      <summary>Выполняет инициализацию нового, доступного только для чтения или для чтения и записи экземпляра класса <see cref="T:System.Diagnostics.PerformanceCounter" /> и связывает этот экземпляр с конкретным системным или определенным пользователем счетчиком производительности и экземпляром категории на локальном компьютере.</summary>
      <param name="categoryName">Имя категории счетчика производительности (объект производительности), которому соответствует этот счетчик производительности.</param>
      <param name="counterName">Имя счетчика производительности.</param>
      <param name="instanceName">Имя экземпляра категории счетчика производительности или пустая строка (""), если категория содержит единственный экземпляр.</param>
      <param name="readOnly">Значение <see langword="true" /> для доступа к счетчику в режиме только для чтения; значение <see langword="false" /> для доступа к счетчику в режиме чтения/записи.</param>
      <exception cref="T:System.InvalidOperationException">Параметр <paramref name="categoryName" /> является пустой строкой ("").  
  
-или- 
 Параметр <paramref name="counterName" /> является пустой строкой ("").  
  
-или- 
Запрошенное разрешение на чтение или запись недопустимо для этого счетчика.  
  
-или- 
Указанная категория не существует (если <paramref name="readOnly" /> равен <see langword="true" />).  
  
-или- 
Заданная категория не является определенной пользователем .NET Framework категорией (если <paramref name="readOnly" /> равен <see langword="false" />).  
  
-или- 
Указанная категория помечена как многоэкземплярная и требует создания счетчика производительности с именем экземпляра.  
  
-или- 
 Длина параметра <paramref name="instanceName" /> превышает 127 символов.  
  
-или- 
 Параметры <paramref name="categoryName" /> и <paramref name="counterName" /> были локализованы на разных языках.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="categoryName" /> или <paramref name="counterName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Произошла ошибка при обращении к API-интерфейсу системы.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Выполняет инициализацию нового, доступного только для чтения экземпляра класса <see cref="T:System.Diagnostics.PerformanceCounter" /> и связывает этот экземпляр с конкретным системным или определенным пользователем счетчиком производительности на указанном компьютере.</summary>
      <param name="categoryName">Имя категории счетчика производительности (объект производительности), которому соответствует этот счетчик производительности.</param>
      <param name="counterName">Имя счетчика производительности.</param>
      <param name="instanceName">Имя экземпляра категории счетчика производительности или пустая строка (""), если категория содержит единственный экземпляр.</param>
      <param name="machineName">Компьютер, на котором существуют счетчик производительности и связанная с ним категория.</param>
      <exception cref="T:System.InvalidOperationException">Параметр <paramref name="categoryName" /> является пустой строкой ("").  
  
-или- 
 Параметр <paramref name="counterName" /> является пустой строкой ("").  
  
-или- 
Запрошенное разрешение на чтение или запись недопустимо для этого счетчика.  
  
-или- 
Счетчика не существует на указанном компьютере.  
  
-или- 
Указанная категория помечена как многоэкземплярная и требует создания счетчика производительности с именем экземпляра.  
  
-или- 
 Длина параметра <paramref name="instanceName" /> превышает 127 символов.  
  
-или- 
 Параметры <paramref name="categoryName" /> и <paramref name="counterName" /> были локализованы на разных языках.</exception>
      <exception cref="T:System.ArgumentException">Недопустимый параметр <paramref name="machineName" />.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="categoryName" /> или <paramref name="counterName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Произошла ошибка при обращении к API-интерфейсу системы.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.BeginInit">
      <summary>Начинает инициализацию экземпляра <see cref="T:System.Diagnostics.PerformanceCounter" />, используемого в форме или другим компонентом. Инициализация происходит во время выполнения.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.Close">
      <summary>Закрывает счетчик производительности и высвобождает все ресурсы, распределенные под этот экземпляр счетчика производительности.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.CloseSharedResources">
      <summary>Высвобождает разделенное состояние библиотеки счетчика производительности, распределенное под счетчики.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.Decrement">
      <summary>Уменьшает значение связанного счетчика производительности на единицу через эффективные атомарные операции.</summary>
      <exception cref="T:System.InvalidOperationException">Счетчик доступен только для чтения, поэтому приложение не может уменьшить его значение.  
  
-или- 
Экземпляр класса, неправильно связанный со счетчиком производительности.  
  
-или- 
При использовании глобальной общей памяти свойству <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> присваивается значение <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Произошла ошибка при обращении к API-интерфейсу системы.</exception>
      <returns>Уменьшенное значение счетчика.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.EndInit">
      <summary>Завершает инициализацию экземпляра <see cref="T:System.Diagnostics.PerformanceCounter" />, используемого в форме или другим компонентом. Инициализация происходит во время выполнения.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.Increment">
      <summary>Увеличивает значение связанного счетчика производительности на единицу через эффективные атомарные операции.</summary>
      <exception cref="T:System.InvalidOperationException">Счетчик доступен только для чтения, поэтому приложение не может увеличить его значение.  
  
-или- 
Экземпляр класса, неправильно связанный со счетчиком производительности.  
  
-или- 
При использовании глобальной общей памяти свойству <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> присваивается значение <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Произошла ошибка при обращении к API-интерфейсу системы.</exception>
      <returns>Увеличенное значение счетчика.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.IncrementBy(System.Int64)">
      <summary>Увеличивает или уменьшает значение связанного счетчика производительности на заданное значение посредством эффективных атомарных операций.</summary>
      <param name="value">Увеличиваемое значение. (Отрицательное значение уменьшает счетчик.)</param>
      <exception cref="T:System.InvalidOperationException">Счетчик доступен только для чтения, поэтому приложение не может увеличить его значение.  
  
-или- 
Экземпляр класса, неправильно связанный со счетчиком производительности.  
  
-или- 
При использовании глобальной общей памяти свойству <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> присваивается значение <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Произошла ошибка при обращении к API-интерфейсу системы.</exception>
      <returns>Новое значение счетчика.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.NextSample">
      <summary>Получает образец счетчика и возвращает начальное или не рассчитанное значение для него.</summary>
      <exception cref="T:System.InvalidOperationException">Экземпляр класса, неправильно связанный со счетчиком производительности.  
  
-или- 
При использовании глобальной общей памяти свойству <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> присваивается значение <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Произошла ошибка при обращении к API-интерфейсу системы.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
      <returns>Тип <see cref="T:System.Diagnostics.CounterSample" />, представляющий следующее начальное значение, которое система получает для этого счетчика.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.NextValue">
      <summary>Получает образец счетчика и возвращает расчетное значение для него.</summary>
      <exception cref="T:System.InvalidOperationException">Экземпляр класса, неправильно связанный со счетчиком производительности.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Произошла ошибка при обращении к API-интерфейсу системы.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
      <returns>Следующее расчетное значение, получаемое системой для этого счетчика.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.RemoveInstance">
      <summary>Удаляет экземпляр категории, указанной объектом <see cref="T:System.Diagnostics.PerformanceCounter" /> свойства <see cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />.</summary>
      <exception cref="T:System.InvalidOperationException">Счетчик доступен только для чтения, поэтому любой экземпляр, связанный с данной категорией, не может быть удален.  
  
-или- 
Экземпляр класса, неправильно связанный со счетчиком производительности.  
  
-или- 
При использовании глобальной общей памяти свойству <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> присваивается значение <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Произошла ошибка при обращении к API-интерфейсу системы.</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.CategoryName">
      <summary>Получает или задает имя категории счетчика производительности для этого счетчика производительности.</summary>
      <exception cref="T:System.ArgumentNullException">Значение параметра <see cref="P:System.Diagnostics.PerformanceCounter.CategoryName" /> — <see langword="null" />.</exception>
      <returns>Имя категории счетчика производительности (объект производительности), которому соответствует этот счетчик производительности.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.CounterHelp">
      <summary>Получает описание для этого счетчика производительности.</summary>
      <exception cref="T:System.InvalidOperationException">Экземпляр класса <see cref="T:System.Diagnostics.PerformanceCounter" /> не связан со счетчиком производительности.  
  
-или- 
При использовании глобальной общей памяти свойству <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> присваивается значение <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" />.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
      <returns>Описание элемента или количества, которое измеряет этот счетчик производительности.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.CounterName">
      <summary>Получает или задает имя категории счетчика производительности, связанного с данным экземпляром <see cref="T:System.Diagnostics.PerformanceCounter" />.</summary>
      <exception cref="T:System.ArgumentNullException">Значение параметра <see cref="P:System.Diagnostics.PerformanceCounter.CounterName" /> — <see langword="null" />.</exception>
      <returns>Имя счетчика, который описывает подсчитываемое количество. Имя, отображаемое в списке счетчиков закладки диспетчера счетчиков производительности MMC в диалоговом окне "Добавить счетчики".</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.CounterType">
      <summary>Получает тип счетчика, с которым связан счетчик производительности.</summary>
      <exception cref="T:System.InvalidOperationException">Экземпляр класса, неправильно связанный со счетчиком производительности.  
  
-или- 
При использовании глобальной общей памяти свойству <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> присваивается значение <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" />.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
      <returns>Значение <see cref="T:System.Diagnostics.PerformanceCounterType" />, которое описывает, каким образом счетчик взаимодействует с отслеживающим приложением, и характер значений, которые он содержит (например, подсчитано или не подсчитано).</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.InstanceLifetime">
      <summary>Получает или задает время существования процесса.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Присвоенное значение не является членом перечисления <see cref="T:System.Diagnostics.PerformanceCounterInstanceLifetime" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> задается после инициализации <see cref="T:System.Diagnostics.PerformanceCounter" />.</exception>
      <returns>Одно из значений перечисления <see cref="T:System.Diagnostics.PerformanceCounterInstanceLifetime" />. Значение по умолчанию — <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Global" />.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.InstanceName">
      <summary>Получает или задает имя экземпляра для этого счетчика производительности.</summary>
      <returns>Имя экземпляра категории счетчика производительности или пустая строка (""), если счетчик является единственным экземпляром.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.MachineName">
      <summary>Возвращает или задает имя компьютера для этого счетчика производительности.</summary>
      <exception cref="T:System.ArgumentException">Недопустимый формат <see cref="P:System.Diagnostics.PerformanceCounter.MachineName" />.</exception>
      <returns>Сервер, на котором постоянно находятся счетчик производительности и связанная с ним категория.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.RawValue">
      <summary>Получает или задает начальное или не рассчитанное значение этого счетчика.</summary>
      <exception cref="T:System.InvalidOperationException">Попытка установить начальное значение счетчика, но счетчик доступен только для чтения.  
  
-или- 
Экземпляр класса, неправильно связанный со счетчиком производительности.  
  
-или- 
При использовании глобальной общей памяти свойству <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> присваивается значение <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Произошла ошибка при обращении к API-интерфейсу системы.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
      <returns>Начальное значение счетчика.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.ReadOnly">
      <summary>Получает или задает значение, определяющее, доступен ли экземпляр <see cref="T:System.Diagnostics.PerformanceCounter" /> только для чтения.</summary>
      <returns>Значение <see langword="true" />, если экземпляр <see cref="T:System.Diagnostics.PerformanceCounter" /> доступен только для чтения (даже если сам счетчик является определенным счетчиком .NET Framework); значение <see langword="false" />, если счетчик работает в режиме чтения/записи. Значение по умолчанию — значение, заданное конструктором.</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterCategory">
      <summary>Представляет объект производительности, который определяет категорию счетчиков производительности.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.PerformanceCounterCategory" />, оставляет пустым свойство <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> и задает в качестве значения свойства <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> локальный компьютер.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.PerformanceCounterCategory" />, задает для свойства <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> указанное значение, а в качестве значения свойства <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> устанавливает локальный компьютер.</summary>
      <param name="categoryName">Имя категории счетчиков производительности (объекта производительности), с которым связывается данный экземпляр <see cref="T:System.Diagnostics.PerformanceCounterCategory" />.</param>
      <exception cref="T:System.ArgumentException">Значением параметра <paramref name="categoryName" /> является пустая строка ("").</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="categoryName" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> и присваивает свойствам <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> и <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> указанные значения.</summary>
      <param name="categoryName">Имя категории счетчиков производительности (объекта производительности), с которым связывается данный экземпляр <see cref="T:System.Diagnostics.PerformanceCounterCategory" />.</param>
      <param name="machineName">Компьютер, на котором находятся счетчик производительности и связанная с ним категория.</param>
      <exception cref="T:System.ArgumentException">Значением параметра <paramref name="categoryName" /> является пустая строка ("").  
  
-или- 
Неправильный синтаксис параметра <paramref name="machineName" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="categoryName" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)">
      <summary>Определяет, является ли заданный счетчик зарегистрированным в категории, на которую указывают свойства <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> и <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />.</summary>
      <param name="counterName">Имя искомого счетчика производительности.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="counterName" /> — <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> не установлено.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
      <returns>Значение <see langword="true" />, если счетчик зарегистрирован в категории, определяемой свойствами <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> и <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String)">
      <summary>Определяет, зарегистрирован ли заданный счетчик в указанной категории на локальном компьютере.</summary>
      <param name="counterName">Имя искомого счетчика производительности.</param>
      <param name="categoryName">Имя категории счетчиков производительности (объекта производительности), с которым связан указанный счетчик производительности.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="categoryName" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="counterName" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Значением параметра <paramref name="categoryName" /> является пустая строка ("").</exception>
      <exception cref="T:System.InvalidOperationException">Имя категории не существует.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
      <returns>Значение <see langword="true" />, если счетчик зарегистрирован в указанной категории на локальном компьютере; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String,System.String)">
      <summary>Определяет, зарегистрирован ли заданный счетчик в указанной категории на удаленном компьютере.</summary>
      <param name="counterName">Имя искомого счетчика производительности.</param>
      <param name="categoryName">Имя категории счетчиков производительности (объекта производительности), с которым связан указанный счетчик производительности.</param>
      <param name="machineName">Имя компьютера, на котором находятся категория счетчиков производительности и связанный с ней счетчик.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="categoryName" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="counterName" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Значением параметра <paramref name="categoryName" /> является пустая строка ("").  
  
-или- 
<paramref name="machineName" /> не является допустимым.</exception>
      <exception cref="T:System.InvalidOperationException">Имя категории не существует.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
      <returns>Значение <see langword="true" />, если счетчик зарегистрирован в указанной категории на заданном компьютере; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.CounterCreationDataCollection)">
      <summary>Регистрирует пользовательскую категорию счетчиков производительности, содержащую указанные счетчики на локальном компьютере.</summary>
      <param name="categoryName">Имя пользовательской категории счетчиков производительности, которую нужно создать и зарегистрировать в системе.</param>
      <param name="categoryHelp">Описание пользовательской категории.</param>
      <param name="counterData">Коллекция <see cref="T:System.Diagnostics.CounterCreationDataCollection" />, в которой определяются счетчики, создаваемые в новой категории.</param>
      <exception cref="T:System.ArgumentException">Имя счетчика, указанное в коллекции <paramref name="counterData" />, — <see langword="null" /> или пустая строка ("").  
  
-или- 
Счетчик, указанный в коллекции <paramref name="counterData" />, уже существует.  
  
-или- 
Синтаксис параметра <paramref name="counterName" /> недопустим. Возможно, значение параметра содержит обратную косую черту ("\") или его длина превышает 80 символов.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="categoryName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Категория уже существует на локальном компьютере.  
  
-или- 
Структура коллекции <paramref name="counterData" /> является неверной для базовых счетчиков. Счетчики типа <see langword="AverageCount64" />, <see langword="AverageTimer32" />, <see langword="CounterMultiTimer" />, <see langword="CounterMultiTimerInverse" />, <see langword="CounterMultiTimer100Ns" />, <see langword="CounterMultiTimer100NsInverse" />, <see langword="RawFraction" />, <see langword="SampleFraction" /> или <see langword="SampleCounter" /> должны непосредственно предшествовать одному из типов базовых счетчиков (<see langword="AverageBase" />, <see langword="MultiBase" />, <see langword="RawBase" /> или <see langword="SampleBase" />).</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
      <returns>Категория <see cref="T:System.Diagnostics.PerformanceCounterCategory" />, связанная с новой пользовательской категорией, или объект производительности.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.Diagnostics.CounterCreationDataCollection)">
      <summary>Регистрирует пользовательскую категорию счетчиков производительности, содержащую указанные счетчики на локальном компьютере.</summary>
      <param name="categoryName">Имя пользовательской категории счетчиков производительности, которую нужно создать и зарегистрировать в системе.</param>
      <param name="categoryHelp">Описание пользовательской категории.</param>
      <param name="categoryType">Одно из значений перечисления <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" />.</param>
      <param name="counterData">Коллекция <see cref="T:System.Diagnostics.CounterCreationDataCollection" />, в которой определяются счетчики, создаваемые в новой категории.</param>
      <exception cref="T:System.ArgumentException">Имя счетчика, указанное в коллекции <paramref name="counterData" />, — <see langword="null" /> или пустая строка ("").  
  
-или- 
Счетчик, указанный в коллекции <paramref name="counterData" />, уже существует.  
  
-или- 
 Синтаксис параметра <paramref name="counterName" /> недопустим. Возможно, значение параметра содержит обратную косую черту ("\") или его длина превышает 80 символов.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> имеет значение <see langword="null" />.  
  
-или- 
 <paramref name="counterData" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="categoryType" /> выходит за рамки диапазона следующих значений: <see langword="MultiInstance" />, <see langword="SingleInstance" /><see langword="Unknown" />.</exception>
      <exception cref="T:System.InvalidOperationException">Категория уже существует на локальном компьютере.  
  
-или- 
Структура коллекции <paramref name="counterData" /> является неверной для базовых счетчиков. Счетчики типа <see langword="AverageCount64" />, <see langword="AverageTimer32" />, <see langword="CounterMultiTimer" />, <see langword="CounterMultiTimerInverse" />, <see langword="CounterMultiTimer100Ns" />, <see langword="CounterMultiTimer100NsInverse" />, <see langword="RawFraction" />, <see langword="SampleFraction" /> или <see langword="SampleCounter" /> должны непосредственно предшествовать одному из типов базовых счетчиков (<see langword="AverageBase" />, <see langword="MultiBase" />, <see langword="RawBase" /> или <see langword="SampleBase" />).</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
      <returns>Категория <see cref="T:System.Diagnostics.PerformanceCounterCategory" />, связанная с новой пользовательской категорией, или объект производительности.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.String,System.String)">
      <summary>Регистрирует пользовательскую категорию счетчиков производительности, содержащую на локальном компьютере один счетчик типа <see cref="F:System.Diagnostics.PerformanceCounterType.NumberOfItems32" />.</summary>
      <param name="categoryName">Имя пользовательской категории счетчиков производительности, которую нужно создать и зарегистрировать в системе.</param>
      <param name="categoryHelp">Описание пользовательской категории.</param>
      <param name="categoryType">Одно из значений <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" />, позволяющих определить тип категории: <see cref="F:System.Diagnostics.PerformanceCounterCategoryType.MultiInstance" />, <see cref="F:System.Diagnostics.PerformanceCounterCategoryType.SingleInstance" /> или <see cref="F:System.Diagnostics.PerformanceCounterCategoryType.Unknown" />.</param>
      <param name="counterName">Имя нового счетчика, создаваемого в новой категории.</param>
      <param name="counterHelp">Описание счетчика, связанного с новой пользовательской категорией.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="counterName" /> равен <see langword="null" /> или является пустой строкой ("").  
  
-или- 
Счетчик, указанный параметром <paramref name="counterName" />, уже существует.  
  
-или- 
 Синтаксис параметра <paramref name="counterName" /> недопустим. Возможно, значение параметра содержит обратную косую черту ("\") или его длина превышает 80 символов.</exception>
      <exception cref="T:System.InvalidOperationException">Категория уже существует на локальном компьютере.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> имеет значение <see langword="null" />.  
  
-или- 
 <paramref name="counterHelp" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
      <returns>Категория <see cref="T:System.Diagnostics.PerformanceCounterCategory" />, связанная с новой системной категорией, или объект производительности.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.String,System.String)">
      <summary>Регистрирует пользовательскую категорию счетчиков производительности, содержащую на локальном компьютере один счетчик типа <see langword="NumberOfItems32" />.</summary>
      <param name="categoryName">Имя пользовательской категории счетчиков производительности, которую нужно создать и зарегистрировать в системе.</param>
      <param name="categoryHelp">Описание пользовательской категории.</param>
      <param name="counterName">Имя нового счетчика типа <see langword="NumberOfItems32" />, создаваемого в новой категории.</param>
      <param name="counterHelp">Описание счетчика, связанного с новой пользовательской категорией.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="counterName" /> равен <see langword="null" /> или является пустой строкой ("").  
  
-или- 
Счетчик, указанный параметром <paramref name="counterName" />, уже существует.  
  
-или- 
 Синтаксис параметра <paramref name="counterName" /> недопустим. Возможно, значение параметра содержит обратную косую черту ("\") или его длина превышает 80 символов.</exception>
      <exception cref="T:System.InvalidOperationException">Категория уже существует на локальном компьютере.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> имеет значение <see langword="null" />.  
  
-или- 
 <paramref name="counterHelp" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
      <returns>Категория <see cref="T:System.Diagnostics.PerformanceCounterCategory" />, связанная с новой системной категорией, или объект производительности.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)">
      <summary>Удаляет категорию и связанные с ней счетчики с локального компьютера.</summary>
      <param name="categoryName">Имя удаляемой пользовательской категории счетчиков производительности.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="categoryName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Синтаксис параметра <paramref name="categoryName" /> недопустим. Возможно, значение параметра содержит обратную косую черту ("\") или его длина превышает 80 символов.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
      <exception cref="T:System.InvalidOperationException">Не удается удалить категорию, поскольку она не является пользовательской.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)">
      <summary>Определяет, зарегистрирована ли категория на локальном компьютере.</summary>
      <param name="categoryName">Имя искомой категории счетчиков производительности.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="categoryName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="categoryName" /> представляет собой пустую строку ("").</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
      <returns>Если категория зарегистрирована, значение <see langword="true" />, если нет, значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String,System.String)">
      <summary>Определяет, зарегистрирована ли категория на указанном компьютере.</summary>
      <param name="categoryName">Имя искомой категории счетчиков производительности.</param>
      <param name="machineName">Имя компьютера для проверки категории.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="categoryName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="categoryName" /> представляет собой пустую строку ("").  
  
-или- 
Параметр <paramref name="machineName" /> является недопустимым.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
      <exception cref="T:System.IO.IOException">Сетевой путь не найден.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.  
  
 -или-  
  
 Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
      <returns>Если категория зарегистрирована, значение <see langword="true" />, если нет, значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.GetCategories">
      <summary>Извлекает список категорий счетчиков производительности, зарегистрированных на локальном компьютере.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
      <returns>Массив объектов <see cref="T:System.Diagnostics.PerformanceCounterCategory" />, которыми определяются категории, зарегистрированные на локальном компьютере.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.GetCategories(System.String)">
      <summary>Извлекает список категорий счетчиков производительности, зарегистрированных на заданном компьютере.</summary>
      <param name="machineName">Компьютер, на котором будет производиться поиск.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="machineName" /> является недопустимым.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
      <returns>Массив объектов <see cref="T:System.Diagnostics.PerformanceCounterCategory" />, указывающих на категории, зарегистрированные на заданном компьютере.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.GetCounters">
      <summary>Извлекает список счетчиков в категории счетчиков производительности, содержащей только один экземпляр.</summary>
      <exception cref="T:System.ArgumentException">Категория не является категорией с единственным экземпляром.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
      <exception cref="T:System.InvalidOperationException">У категории нет связанного с ней экземпляра.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
      <returns>Массив объектов <see cref="T:System.Diagnostics.PerformanceCounter" />, обозначающих счетчики, связанные с категорией счетчиков производительности с единственным экземпляром.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.GetCounters(System.String)">
      <summary>Извлекает список счетчиков в категории счетчиков производительности, содержащей один или несколько экземпляров.</summary>
      <param name="instanceName">Экземпляр объекта производительности, для которого нужно извлечь список связанных с ним счетчиков.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="instanceName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> для данного экземпляра <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> не задано.  
  
-или- 
Категория не содержит экземпляр, заданный параметром <paramref name="instanceName" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
      <returns>Массив объектов <see cref="T:System.Diagnostics.PerformanceCounter" />, обозначающих счетчики, связанные с указанным экземпляром объекта этой категории счетчиков производительности.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.GetInstanceNames">
      <summary>Извлекает список экземпляров объекта производительности, связанных с данной категорией.</summary>
      <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> — <see langword="null" />. Возможно, свойство не задано.  
  
-или- 
У категории нет связанного с ней экземпляра.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
      <returns>Массив строк, представляющих имена экземпляров объекта производительности, связанных с этой категории или, если категория содержит только один экземпляр объекта производительности, одноэлементный массив, содержащий пустую строку ("").</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)">
      <summary>Определяет, существует ли указанный экземпляр объекта производительности в категории, определяемой свойством <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> объекта <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />.</summary>
      <param name="instanceName">Искомый экземпляр объекта производительности в данной категории счетчиков производительности.</param>
      <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> — <see langword="null" />. Возможно, свойство не задано.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="instanceName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
      <returns>Если категория содержит указанный экземпляр объекта производительности, значение <see langword="true" />, если нет, значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String)">
      <summary>Определяет, содержит ли указанная категория заданный экземпляр объекта производительности на локальном компьютере.</summary>
      <param name="instanceName">Искомый экземпляр объекта производительности.</param>
      <param name="categoryName">Искомая категория счетчиков производительности.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="instanceName" /> имеет значение <see langword="null" />.  
  
-или- 
Параметр <paramref name="categoryName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="categoryName" /> представляет собой пустую строку ("").</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
      <returns>Если категория содержит указанный экземпляр объекта производительности, значение <see langword="true" />, если нет, значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String,System.String)">
      <summary>Определяет, содержит ли указанная категория на заданном компьютере заданный экземпляр объекта производительности.</summary>
      <param name="instanceName">Искомый экземпляр объекта производительности.</param>
      <param name="categoryName">Искомая категория счетчиков производительности.</param>
      <param name="machineName">Имя компьютера, на котором будет производиться поиск экземпляра и соответствующей категории.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="instanceName" /> имеет значение <see langword="null" />.  
  
-или- 
Параметр <paramref name="categoryName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="categoryName" /> представляет собой пустую строку ("").  
  
-или- 
Параметр <paramref name="machineName" /> является недопустимым.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
      <returns>Если категория содержит указанный экземпляр объекта производительности, значение <see langword="true" />, если нет, значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.ReadCategory">
      <summary>Считывает все счетчики и данные экземпляра объекта производительности, связанные с этой категорией счетчиков производительности.</summary>
      <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> — <see langword="null" />. Возможно, свойство не задано.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
      <returns>Коллекция <see cref="T:System.Diagnostics.InstanceDataCollectionCollection" />, содержащая данные счетчика и экземпляра объекта производительности для данной категории.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterCategory.CategoryHelp">
      <summary>Возвращает текст справки для данной категории.</summary>
      <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> — <see langword="null" />. Перед извлечением справки для категории следует задать ее имя.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
      <returns>Описание объекта производительности, который измеряется этой категорией.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterCategory.CategoryName">
      <summary>Получает или задает имя объекта производительности, который определяет эту категорию.</summary>
      <exception cref="T:System.ArgumentException">Значением параметра <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> является пустая строка ("").</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> — <see langword="null" />.</exception>
      <returns>Имя категории счетчиков производительности (объекта производительности), с которым связывается данный экземпляр <see cref="T:System.Diagnostics.PerformanceCounterCategory" />.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterCategory.CategoryType">
      <summary>Возвращает тип категории счетчика производительности.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" />.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterCategory.MachineName">
      <summary>Получает или задает имя компьютера, на котором находится эта категория.</summary>
      <exception cref="T:System.ArgumentException">Неправильный синтаксис параметра <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />.</exception>
      <returns>Имя компьютера, на котором находятся категория счетчиков производительности и связанный с ней счетчик.</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterCategoryType">
      <summary>Указывает, может ли категория счетчиков производительности иметь несколько экземпляров.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterCategoryType.MultiInstance">
      <summary>Категория счетчиков производительности может обладать несколькими экземплярами.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterCategoryType.SingleInstance">
      <summary>Категория счетчиков производительности может обладать только одним экземпляром.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterCategoryType.Unknown">
      <summary>Возможности использования экземпляров для категории счетчика производительности неизвестны.</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterInstanceLifetime">
      <summary>Задает время существования экземпляра счетчика производительности.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Global">
      <summary>Удаляет экземпляр счетчика производительности, если категория процесса не использует ни одного счетчика.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process">
      <summary>Удаляет экземпляр счетчика производительности, если процесс закрыт.</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterManager">
      <summary>Подготавливает данные о производительности для библиотеки performance.dll, которая загружается системой при работе со счетчиками производительности.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterManager.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.PerformanceCounterManager" />.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterManager.System#Diagnostics#ICollectData#CloseData">
      <summary>Вызывается функцией закрытия данных о производительности библиотеки производительности DLL.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterManager.System#Diagnostics#ICollectData#CollectData(System.Int32,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr@)">
      <summary>Процедура сбора данных о производительности. Вызывается библиотекой производительности PerfCount.</summary>
      <param name="callIdx">Индекс вызова.</param>
      <param name="valueNamePtr">Указатель на список строк в формате Юникод с запрашиваемыми идентификаторами объектов.</param>
      <param name="dataPtr">Указатель на буфер данных.</param>
      <param name="totalBytes">Указатель на число байтов.</param>
      <param name="res">Возвращаемые этим методом данные содержат структуру <see cref="T:System.IntPtr" /> со значением -1.</param>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterType">
      <summary>Задает формулу для вычисления метода <see cref="M:System.Diagnostics.PerformanceCounter.NextValue" /> для экземпляра <see cref="T:System.Diagnostics.PerformanceCounter" />.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.AverageBase">
      <summary>Базовый счетчик, используемый в расчете времени или количества средних значений, например <see langword="AverageTimer32" /> и <see langword="AverageCount64" />. Хранит знаменатель для подсчета значения счетчика для представления времени, необходимого для совершения операции или количества за операцию.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.AverageCount64">
      <summary>Счетчик средних значений, показывающий, сколько элементов обработано в среднем за операцию. Счетчики этого типа отображают отношение обработанных элементов к числу завершенных операций. Отношение вычисляется соотношением числа обработанных элементов в течение последнего интервала времени к числу завершенных операций за этот же интервал. Счетчики этого типа включают физический диск \ среднее число байтов на диске/перемещение.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.AverageTimer32">
      <summary>Счетчик среднего значения, измеряющий время, которое он в среднем займет для завершения процесса или операции. Счетчики этого типа отображают отношение всего прошедшего интервала измерения к числу процессов или операций, завершенных за это время. Этот тип счетчика измеряет время в тактах системных часов. Счетчики этого типа включают физический диск \ среднее время обращения к нему с диска.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterDelta32">
      <summary>Счетчик разницы, показывающий изменение в измеряемом атрибуте между двумя последними интервалами измерения.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterDelta64">
      <summary>Счетчик разницы, показывающий изменение в измеряемом атрибуте между двумя последними интервалами измерения. Он аналогичен типу счетчика <see langword="CounterDelta32" />, за исключением того, что используются большие поля для размещения больших значений.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterMultiBase">
      <summary>Базовый счетчик, показывающий число измеренных элементов. Используется как знаменатель в вычислениях для получения среднего значения среди измеренных элементов при измерении времени нескольких, но однотипных элементов. Используется со счетчиками <see langword="CounterMultiTimer" />, <see langword="CounterMultiTimerInverse" />, <see langword="CounterMultiTimer100Ns" /> и <see langword="CounterMultiTimer100NsInverse" />.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer">
      <summary>Счетчик процентов, отображающий процент отношения активности одного или более компонентов ко всему интервалу измерения. Поскольку числитель записывает время активности работающих компонентов одновременно, результат может превышать 100%. Этот тип счетчика отличается от <see langword="CounterMultiTimer100Ns" />, в нем вычисляется время в тактах системного таймера производительности, а не в единицах измерения, равных 100 нс. Этот тип счетчика представляет собой мультитаймер.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns">
      <summary>Счетчик процентов, показывающий процент активного времени одного или более компонентов за весь интервал измерения. Вычисляет время в единицах времени, равных 100 нс. Этот тип счетчика представляет собой мультитаймер.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse">
      <summary>Счетчик процентов, показывающий процент активного времени одного или более компонентов за весь интервал измерения. Счетчики этого типа вычисляют время в единицах времени, равных 100 нс. Они получают активное время путем измерения времени, в котором компоненты не были активны, и вычитая результат из 100 процентов, умноженных на число исследуемых объектов. Этот тип счетчика представляет собой обратный мультитаймер.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse">
      <summary>Счетчик процентов, показывающий процент активного времени одного или более компонентов за весь интервал измерения. Он получает активное время путем измерения времени, в котором компоненты не были активны, и вычитая результат из 100 процентов, умноженных на число исследуемых объектов. Этот тип счетчика представляет собой обратный мультитаймер. Он отличается от CounterMultiTimer100NsInverse тем, что в нем вычисляется время в тактах системного таймера производительности, а не в единицах измерения, равных 100 нс.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterTimer">
      <summary>Счетчик процентов, показывающий среднее время как процент отношения времени активности компонента к полному времени измерения.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterTimerInverse">
      <summary>Счетчик процентов, который отображает средний процент наблюдавшегося активного времени за интервал измерения. Значение этих счетчиков вычисляется за счет измерения процента времени, в течение которого служба была неактивна, и затем вычитанием этого значения из 100%. Это обратный тип счетчика. Он отличается от CounterTimer100NsInv только тем, что в нем вычисляется время в тактах системного таймера производительности, а не в единицах измерения, равных 100 нс.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32">
      <summary>Счетчик среднего значения предназначен для исследования средней длины очереди к ресурсу за все время наблюдения. Он показывает разницу между длинами очередей, наблюдаемых в течение двух последних интервалов измерения, деленную на продолжительность интервала. Этот тип счетчика обычно используется для хранения числа элементов, ожидающих очереди.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64">
      <summary>Счетчик среднего значения, наблюдающий среднюю длину очереди к ресурсу за все время наблюдения. Счетчики этого типа отображают разницу между длинами очередей, наблюдаемых в течение двух последних интервалов измерения, деленную на продолжительность интервала. Этот тип счетчика такой же, что и <see langword="CountPerTimeInterval32" />, за тем исключением, что используются большие поля для размещения больших значений. Этот тип счетчика обычно используется для хранения очень большого числа элементов, ожидающих очереди.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.ElapsedTime">
      <summary>Таймер разницы, который показывает полное время между началом работы компонента или процесса и вычислением значения. Счетчики этого типа включают "Система\ Время работы системы".</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.NumberOfItems32">
      <summary>Счетчик мгновенного значения, показывающий последнее наблюдавшееся значение. Используется, например, для хранения числа элементов или операций. Счетчики этого типа включают "Память\Доступно байт".</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.NumberOfItems64">
      <summary>Счетчик мгновенного значения, показывающий последнее наблюдавшееся значение. Используется, например, для хранения очень большого числа элементов или операций. Такой же, что и тип <see langword="NumberOfItems32" />, за тем исключением, что используются большие поля для размещения больших значений.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32">
      <summary>Счетчик мгновенного значения, показывающий последнее наблюдавшееся значение в шестнадцатеричном формате. Используется, например, для хранения числа элементов или операций.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64">
      <summary>Счетчик мгновенного значения, показывающий последнее наблюдавшееся значение. Используется, например, для хранения очень большого числа элементов или операций. Такой же, что и тип <see langword="NumberOfItemsHEX32" />, за тем исключением, что используются большие поля для размещения больших значений.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32">
      <summary>Счетчик разницы, показывающий среднее число операций, завершенных в течение каждой секунды интервала измерения. Счетчики этого типа измеряют время в тактах системных часов. Счетчики этого типа включают "Система\ Операций чтения файлов/с".</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64">
      <summary>Счетчик разницы, показывающий среднее число операций, завершенных в течение каждой секунды интервала измерения. Счетчики этого типа измеряют время в тактах системных часов. Этот тип счетчика такой же, что и тип <see langword="RateOfCountsPerSecond32" />, но использует большие поля для размещения больших значений для хранения очень большого числа элементов или операций в секунду, например частоты передачи байтов. Счетчики этого типа включают "Система\ Байт чтения файлов/с".</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.RawBase">
      <summary>Базовый счетчик, который хранит знаменатель счетчика, представляющего обычную арифметическую дробь. Следует проверить, что это значение больше нуля до использования его в качестве знаменателя при расчете значения <see langword="RawFraction" />.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.RawFraction">
      <summary>Счетчик мгновенного значения в процентах, показывающий отношение подмножества к множеству в процентах. Например, он позволяет сравнить число байтов, используемых на диске, и общее число байтов на этом диске. Счетчики этого типа отображают только текущий процент, а не среднее значение за все время. Счетчики этого типа включают "Файл подкачки\% использования (пик)".</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.SampleBase">
      <summary>Базовый счетчик, который хранит число взятых выборочных прерываний и используется в качестве знаменателя дроби. Выборочная доля представляет собой число измерений, равных 1 (или <see langword="true" />), для выборочного прерывания. Следует проверить, что это значение больше нуля до использования его в качестве знаменателя при расчете значения <see langword="SampleFraction" />.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.SampleCounter">
      <summary>Счетчик среднего значения, который показывает среднее число операций, завершенных за одну секунду. Когда счетчик этого типа измеряет данные, каждое выборочное прерывание возвращает единицу или ноль. Данными счетчика является число измеренных единиц. Он измеряет время в тактах системного таймера производительности.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.SampleFraction">
      <summary>Счетчик процентов, показывающий среднее отношение обращений ко всем операциям за последние два интервала измерения. Счетчики этого типа включают "Кэш\ % попаданий фиксации при чтении".</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.Timer100Ns">
      <summary>Счетчик процентов, показывающий процент активного времени компонента за все прошедшее время интервала измерения. Вычисляет время в единицах времени, равных 100 нс. Счетчики этого типа предназначены для измерения активности компонента в течение какого-либо времени. Счетчики этого типа включают "Процессор\ % работы в пользовательском режиме".</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.Timer100NsInverse">
      <summary>Счетчик процентов, который показывает средний процент наблюдавшегося активного времени за интервал измерения. Это обратный счетчик. Счетчики этого типа включают "Процессор\ % загруженности процессора".</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterData">
      <summary>Содержит необработанные данные для счетчика.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterData.Decrement">
      <summary>Уменьшает значение счетчика на 1.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterData.Increment">
      <summary>Увеличивает значение счетчика на 1.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterData.IncrementBy(System.Int64)">
      <summary>Увеличивает значение счетчика на указанную величину.</summary>
      <param name="value">Величина, на которую увеличивается значение счетчика. Значение увеличения может быть положительным или отрицательным.</param>
    </member>
    <member name="P:System.Diagnostics.PerformanceData.CounterData.RawValue">
      <summary>Возвращает или задает необработанные данные счетчиков.</summary>
      <returns>Необработанные данные счетчиков.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceData.CounterData.Value">
      <summary>Возвращает или задает данные счетчиков.</summary>
      <returns>Данные счетчиков.</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterSet">
      <summary>Идентифицирует набор логических счетчиков.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.#ctor(System.Guid,System.Guid,System.Diagnostics.PerformanceData.CounterSetInstanceType)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.PerformanceData.CounterSet" />.</summary>
      <param name="providerGuid">Идентификатор GUID, который уникально идентифицирует поставщика данных счетчика. Используйте идентификатор GUID, указанный в манифесте.</param>
      <param name="counterSetGuid">Идентификатор GUID, который уникально идентифицирует набор счетчиков поставщика. Используйте идентификатор GUID, указанный в манифесте.</param>
      <param name="instanceType">Идентифицирует тип набора счетчиков, например, является ли набор счетчиков набором для одного или нескольких экземпляров.</param>
      <exception cref="T:System.InsufficientMemoryException">Недостаточно памяти для выполнения операции.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Не поддерживается в версиях, предшествующих Windows Vista.</exception>
      <exception cref="T:System.ArgumentException">Один из параметров имеет значение NULL или недопустимое значение.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Сбой вызова базовой функции Win32.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType)">
      <summary>Добавляет в набор счетчиков счетчик с указанным идентификатором и типом.</summary>
      <param name="counterId">Идентифицирует счетчик. Для идентификации счетчика используйте значение, указанное в манифесте.</param>
      <param name="counterType">Идентифицирует тип счетчика. Тип счетчика определяет способ вычисления, усреднения и отображения данных счетчиков.</param>
      <exception cref="T:System.ArgumentException">Идентификатор счетчика уже существует в наборе или имеет отрицательное значение, или тип счетчика имеет значение NULL или недопустимое значение.</exception>
      <exception cref="T:System.InvalidOperationException">После создания экземпляра набора счетчиков невозможно добавить счетчик в набор счетчиков.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType,System.String)">
      <summary>Добавляет в набор счетчиков счетчик с указанным идентификатором, типом и отображаемым именем.</summary>
      <param name="counterId">Идентифицирует счетчик. Для идентификации счетчика используйте значение, указанное в манифесте.</param>
      <param name="counterType">Идентифицирует тип счетчика. Тип счетчика определяет способ вычисления, усреднения и отображения данных счетчиков.</param>
      <param name="counterName">Имя счетчика. Это имя можно использовать для индексации счетчика в экземпляре набора счетчиков. (См. раздел <see cref="P:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item(System.String)" />.)</param>
      <exception cref="T:System.ArgumentException">Идентификатор счетчика уже существует в наборе или имеет отрицательное значение, или тип счетчика имеет значение NULL или недопустимое значение.</exception>
      <exception cref="T:System.InvalidOperationException">После создания экземпляра набора счетчиков невозможно добавить счетчик в набор счетчиков.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(System.String)">
      <summary>Создает экземпляр набора счетчиков.</summary>
      <param name="instanceName">Имя экземпляра. Имя должно быть уникальным.</param>
      <exception cref="T:System.ArgumentException">Имя экземпляра имеет значение NULL.</exception>
      <exception cref="T:System.InvalidOperationException">Добавлять счетчики в набор счетчиков следует перед созданием экземпляра набора счетчиков.</exception>
      <returns>Экземпляр набора счетчиков, в котором будут содержаться данные счетчиков.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.Dispose">
      <summary>Освобождает все неуправляемые ресурсы, используемые этим объектом.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.Dispose(System.Boolean)">
      <summary>Освобождает все неуправляемые ресурсы, используемые этим объектом, а при необходимости освобождает и управляемые ресурсы.</summary>
      <param name="disposing">Значение <see langword="True" />, если вызов был совершен из метода Dispose; значение <see langword="False" />, если вызов был совершен из метода завершения.</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.Finalize">
      <summary>Освобождает ресурсы, перед тем как объект будет уничтожен во время сборки мусора.</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterSetInstance">
      <summary>Создает экземпляр логических счетчиков, определенных в классе <see cref="T:System.Diagnostics.PerformanceData.CounterSet" />.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSetInstance.Dispose">
      <summary>Освобождает все неуправляемые ресурсы, используемые этим объектом.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSetInstance.Finalize">
      <summary>Освобождает неуправляемые ресурсы и выполняет другие операции очистки.</summary>
    </member>
    <member name="P:System.Diagnostics.PerformanceData.CounterSetInstance.Counters">
      <summary>Извлекает коллекцию данных счетчиков для экземпляра набора счетчиков.</summary>
      <returns>Коллекция данных счетчиков, содержащаяся в экземпляре набора счетчиков.</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet">
      <summary>Содержит набор значений счетчика.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Dispose">
      <summary>Освобождает все неуправляемые ресурсы, используемые этим объектом.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Finalize">
      <summary>Позволяет объекту попытаться освободить ресурсы и выполнить другие операции очистки, перед тем как он будет уничтожен во время сборки мусора.</summary>
    </member>
    <member name="P:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item(System.Int32)">
      <summary>Осуществляет доступ к значению счетчика в наборе с помощью указанного идентификатора счетчика.</summary>
      <param name="counterId">Идентификатор счетчика. Идентификатор счетчика, указанный при добавлении счетчика в набор счетчиков.</param>
      <returns>Данные счетчиков.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item(System.String)">
      <summary>Осуществляет доступ к значению счетчика в наборе с помощью указанного имени счетчика.</summary>
      <param name="counterName">Имя счетчика. Имя счетчика, указанное при добавлении счетчика в набор счетчиков.</param>
      <returns>Данные счетчиков.</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterSetInstanceType">
      <summary>Указывает, допустимо ли для набора счетчиков использование нескольких экземпляров, например, процессов или физических дисков, или одного экземпляра, например, памяти.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.GlobalAggregate">
      <summary>Набор счетчиков содержит счетчики с единственным экземпляром, статистические значения которых извлекаются из одного или более источников. Например, счетчик в наборе счетчиков данного типа может получать число операций чтения для каждого из трех жестких дисков компьютера и суммировать эти значения.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.GlobalAggregateWithHistory">
      <summary>Данный тип аналогичен <see cref="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.GlobalAggregate" /> за исключением того, что в наборе счетчиков данного типа хранятся все значения счетчиков за время существования клиентского приложения (значение счетчика хранится в кэше после завершения времени существования счетчика). Например, если в примере глобальной статистики перестает быть доступным один из жестких дисков, общее число байт, считанных с данного диска, будет доступно и может использоваться при вычислении статистического значения.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.InstanceAggregate">
      <summary>Данный тип аналогичен <see cref="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.MultipleAggregate" /> за исключением того, что вместо статистической обработки данных всех экземпляров в одном статистическом экземпляре (_Total) выполняется статистическая обработка данных счетчиков экземпляров для одного имени. Например, если несколько процессов поставщика содержат экземпляры с именем IExplore, элементы <see cref="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.Multiple" /> и <see cref="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.MultipleAggregate" /> CounterSet отобразят несколько экземпляров IExplore (IExplore, IExplore#1, IExplore#2 и так далее). Однако при использовании экземпляра типа <see cref="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.InstanceAggregate" /> опубликован будет только один экземпляр IExplore со статистическими данными счетчиков из всех экземпляров для имени IExplore.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.Multiple">
      <summary>Набор счетчиков содержит многоэкземплярные счетчики, например, счетчик для измерения среднего числа операций дискового ввода-вывода для процесса.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.MultipleAggregate">
      <summary>Набор счетчиков содержит многоэкземплярные счетчики, статистические значения которых извлекаются из всех экземпляров счетчика. Например, счетчик в наборе счетчиков данного типа может получать значения общего времени выполнения потока для всех потоков многопоточного приложения и суммировать эти значения.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.Single">
      <summary>Набор счетчиков содержит счетчики с единственным экземпляром, например, счетчик объема физической памяти.</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterType">
      <summary>Определяет возможные типы счетчика. Каждому счетчику присваивается тип. Тип счетчика определяет способ вычисления, усреднения и отображения данных счетчиков.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.AverageBase">
      <summary>Данный счетчик используется как базовые данные (знаменатель) при вычислении времени или усредненных значений счетчиков типа <see cref="F:System.Diagnostics.PerformanceData.CounterType.AverageCount64" /> и <see cref="F:System.Diagnostics.PerformanceData.CounterType.AverageTimer32" />. Счетчик данного типа хранит только последнее зафиксированное значение. (См. сведения о типе счетчика PERF_AVERAGE_BASE в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.AverageCount64">
      <summary>Счетчик данного типа показывает, сколько элементов обработано в среднем за операцию. Счетчики этого типа отображают отношение обработанных элементов (например, отправленных байтов) к числу завершенных операций. Отношение вычисляется соотношением числа обработанных элементов в течение последнего интервала времени к числу завершенных операций за этот же интервал. (См. сведения о типе счетчика PERF_AVERAGE_BULK в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.AverageTimer32">
      <summary>Счетчик данного типа измеряет время, которое в среднем займет завершение процесса или операции. Счетчики этого типа отображают отношение всего прошедшего интервала измерения к числу процессов или операций, завершенных за это время. Этот тип счетчика измеряет время в тактах системных часов. (См. сведения о типе счетчика PERF_AVERAGE_ TIMER в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.Delta32">
      <summary>Счетчик этого типа показывает изменение в измеряемом атрибуте между двумя последними интервалами измерения. (См. сведения о типе счетчика PERF_ COUNTER_DELTA в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.Delta64">
      <summary>Счетчик этого типа показывает изменение в измеряемом атрибуте между двумя последними интервалами измерения. Данный тип аналогичен типу счетчика <see cref="F:System.Diagnostics.PerformanceData.CounterType.Delta32" />, за исключением того, что используются большие поля для размещения больших значений. (См. сведения о типе счетчика PERF_COUNTER_LARGE_DELTA в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.ElapsedTime">
      <summary>Счетчик данного типа показывает полное время между началом работы компонента или процесса и вычислением значения. (См. сведения о типе счетчика PERF_ELAPSED_TIME в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.LargeQueueLength">
      <summary>Счетчик данного типа отслеживает среднюю длину очереди к ресурсу за все время наблюдения. Счетчики этого типа отображают разницу между длинами очередей, наблюдаемых в течение двух последних интервалов измерения, деленную на продолжительность интервала. Данный тип аналогичен типу счетчика <see cref="F:System.Diagnostics.PerformanceData.CounterType.QueueLength" />, за исключением того, что используются большие поля для размещения больших значений. (См. сведения о типе счетчика PERF_COUNTER_LARGE_QUEUELEN_TYPE в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerBase">
      <summary>Указывает количество измеренных элементов. Используется как знаменатель в вычислениях для получения среднего значения среди измеренных элементов при измерении времени нескольких, но однотипных элементов. Данный тип поддерживает следующие типы счетчиков: <see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive" />, <see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive" />, <see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive100Ns" /> и <see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive100Ns" />.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive">
      <summary>Этот тип счетчика представляет собой мультитаймер. Мультитаймеры записывают данные более одного экземпляра компонента, например процессора или диска. Счетчики данного типа отображают процент отношения времени активности одного или более компонентов ко всему интервалу измерения. Поскольку числитель записывает время активности работающих компонентов одновременно, результат может превышать 100%. Этот тип счетчика отличается от <see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive100Ns" />, в нем вычисляется время в тактах системного таймера производительности, а не в единицах измерения, равных 100 нс. (См. сведения о типе счетчика PERF_COUNTER_MULTI_TIMER в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive100Ns">
      <summary>Счетчики данного типа отображают процент отношения времени активности одного или более компонентов ко всему интервалу измерения. Время измеряется в интервалах времени, равных 100 нс. Этот тип счетчика представляет собой мультитаймер. Мультитаймеры предназначены для исследования нескольких экземпляров компонента, например процессора или диска. (См. сведения о типе счетчика PERF_100NSEC_MULTI_TIMER в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive">
      <summary>Счетчики данного типа отображают процент отношения времени активности одного или более компонентов ко всему интервалу измерения. Этот тип счетчика представляет собой обратный мультитаймер. Мультитаймеры исследуют более одного экземпляра компонента, например процессора или диска. Обратные счетчики измеряют время, в течение которого компонент не был активным, и таким образом получают значение времени активности. Этот счетчик отличается от <see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive100Ns" />, в нем вычисляется время в тактах системного таймера производительности, а не в единицах измерения, равных 100 нс. (См. сведения о типе счетчика PERF_COUNTER_MULTI_TIMER_INV в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive100Ns">
      <summary>Счетчики данного типа отображают процент отношения времени активности одного или более компонентов ко всему интервалу измерения. Такие счетчики вычисляют время в единицах времени, равных 100 нс. Этот тип счетчика представляет собой обратный мультитаймер. Мультитаймеры предназначены для исследования нескольких экземпляров компонента, например процессора или диска. Обратные счетчики измеряют время, в течение которого компонент не был активным, и таким образом вычисляется время активности компонента. (См. сведения о типе счетчика PERF_100NSEC_MULTI_TIMER_INV в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.ObjectSpecificTimer">
      <summary>Данный 64-разрядный тип счетчика представляет собой таймер для отображения единиц измерения определенного объекта. (См. сведения о типе счетчика PERF_OBJ_TIME_TIMER в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PercentageActive">
      <summary>Счетчик данного типа служит для отображения среднего времени как процента отношения времени активности компонента к полному времени измерения. (См. сведения о типе счетчика PERF_COUNTER_TIMER в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PercentageActive100Ns">
      <summary>Счетчик данного типа служит для отображения процента времени активности компонента за все прошедшее время интервала измерения. Время измеряется в интервалах времени, равных 100 нс. Счетчики этого типа предназначены для измерения активности компонента в течение какого-либо времени. (См. сведения о типе счетчика PERF_100NSEC_TIMER в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PercentageNotActive">
      <summary>Это обратный тип счетчика. Обратные счетчики измеряют время, в течение которого компонент не был активным, и таким образом получают значение времени активности. Счетчик данного типа служит для отображения среднего процента измеренного времени активности за интервал измерения. Значение этих счетчиков вычисляется за счет измерения процента времени, в течение которого служба была неактивна, и затем вычитанием этого значения из 100%. Этот тип счетчика аналогичен типу <see cref="F:System.Diagnostics.PerformanceData.CounterType.PercentageNotActive100Ns" />, за тем исключением, что в нем вычисляется время в тактах системного таймера производительности, а не в единицах измерения, равных 100 нс. (См. сведения о типе счетчика PERF_COUNTER_TIMER_INV в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PercentageNotActive100Ns">
      <summary>Счетчик данного типа служит для отображения среднего процента измеренного времени активности за интервал измерения. Это обратный счетчик. Значение этих счетчиков вычисляется за счет измерения процента времени, в течение которого служба была неактивна, и затем вычитанием этого значения из 100%. (См. сведения о типе счетчика PERF_100NSEC_TIMER_INV в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PrecisionObjectSpecificTimer">
      <summary>Счетчик данного типа служит для отображения значения, которое состоит из значений двух счетчиков: количества времени, прошедшего с начала отслеживания события, и частоты, указанной в поле PerfFreq заголовка объекта. Данный тип счетчика отличается от других таймеров тем, что значение счетчика тактируется с помощью системных часов, что исключает погрешность из-за задержки вызова функции. Точные типы счетчиков используются в случаях, когда стандартный системный таймер не обеспечивает необходимую точность значений. (См. сведения о типе счетчика PERF_PRECISION_OBJECT_TIMER в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PrecisionSystemTimer">
      <summary>Счетчик данного типа служит для отображения значения, которое состоит из значений двух счетчиков: количества времени, прошедшего с начала отслеживания события, и частоты системного таймера производительности. Данный тип счетчика отличается от других таймеров тем, что значение счетчика тактируется с помощью системных часов, что исключает погрешность из-за задержки вызова функции. Точные типы счетчиков используются в случаях, когда стандартный системный таймер не обеспечивает необходимую точность значений. (См. сведения о типе счетчика PERF_PRECISION_TIMER в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PrecisionTimer100Ns">
      <summary>Счетчик данного типа служит для отображения значения, которое состоит из значений двух счетчиков: количества времени, прошедшего с начала отслеживания события, и времени, измеренного частным таймером в тех же единицах измерения. Время измеряется в интервалах времени, равных 100 нс. Данный тип счетчика отличается от других таймеров тем, что значение счетчика тактируется с помощью системных часов, что исключает погрешность из-за задержки вызова функции. Точные типы счетчиков используются в случаях, когда стандартный системный таймер не обеспечивает необходимую точность значений. (См. сведения о типе счетчика PERF_PRECISION_100NS_TIMER в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.QueueLength">
      <summary>Счетчик данного типа предназначен для отслеживания средней длины очереди на доступ к ресурсу за все время наблюдения. Он показывает разницу между длинами очередей, наблюдаемых в течение двух последних интервалов измерения, деленную на продолжительность интервала. (См. сведения о типе счетчика PERF_COUNTER_QUEUELEN_TYPE в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.QueueLength100Ns">
      <summary>Счетчик данного типа вычисляет произведение пространства и времени для длины очереди на интервалах в 100 нс. (См. сведения о типе счетчика PERF_COUNTER_100NS_QUEUELEN_TYPE в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.QueueLengthObjectTime">
      <summary>Счетчик данного типа вычисляет произведение пространства и времени для длины очереди на интервалах времени, относящихся к определенному объекту. (См. сведения о типе счетчика PERF_COUNTER_OBJ_QUEUELEN_TYPE в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RateOfCountPerSecond32">
      <summary>Счетчик данного типа служит для отображения среднего числа операций, завершенных в течение каждой секунды интервала измерения. Счетчики этого типа измеряют время в тактах системных часов. (См. сведения о типе счетчика PERF_COUNTER_COUNTER в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RateOfCountPerSecond64">
      <summary>Счетчик данного типа служит для отображения среднего числа операций, завершенных в течение каждой секунды интервала измерения. Счетчики этого типа измеряют время в тактах системных часов. Данный тип аналогичен типу счетчика <see cref="F:System.Diagnostics.PerformanceData.CounterType.RateOfCountPerSecond32" />, за исключением того, что используются большие поля для размещения больших значений. (См. сведения о типе счетчика PERF_COUNTER_BULK_COUNT в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawBase32">
      <summary>Счетчик данного типа хранит только последнее зафиксированное значение. Это значение выступает в роли знаменателя значения счетчика, представляющего собой обычную арифметическую дробь. Для данного типа поддерживается тип счетчика <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawFraction32" />. (См. сведения о типе счетчика PERF_RAW_BASE в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawBase64">
      <summary>Счетчик данного типа хранит последнее зафиксированное значение. Он аналогичен типу счетчика <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawBase32" />, за исключением того, что используются большие поля для размещения больших значений. Для данного типа поддерживается тип счетчика <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawFraction64" />. (См. сведения о типе счетчика PERF_LARGE_RAW_BASE в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawData32">
      <summary>Счетчик данного типа служит для отображения только последнего зафиксированного значения. Он не отображает среднее значение. (См. сведения о типе счетчика PERF_COUNTER_RAWCOUNT в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawData64">
      <summary>Счетчик данного типа служит для отображения только последнего зафиксированного значения, а не среднего. Данный тип аналогичен типу счетчика <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawData32" />, за исключением того, что используются большие поля для размещения больших значений. (См. сведения о типе счетчика PERF_COUNTER_LARGE_RAWCOUNT в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawDataHex32">
      <summary>Счетчик данного типа служит для отображения последнего измеренного значения в шестнадцатеричном формате. Он не отображает среднее значение. (См. сведения о типе счетчика PERF_COUNTER_RAWCOUNT_HEX в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawDataHex64">
      <summary>Счетчик данного типа служит для отображения последнего измеренного значения в шестнадцатеричном формате. Данный тип аналогичен типу счетчика <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawDataHex32" />, за исключением того, что используются большие поля для размещения больших значений. (См. сведения о типе счетчика PERF_COUNTER_LARGE_RAWCOUNT_HEX в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawFraction32">
      <summary>Счетчик данного типа служит для отображения процентного соотношения подмножества и содержащего его множества. Например, он позволяет сравнить число байтов, используемых на диске, и общее число байтов на этом диске. Счетчики этого типа отображают только текущий процент, а не среднее значение за все время. (См. сведения о типе счетчика PERF_RAW_FRACTION в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawFraction64">
      <summary>Счетчик данного типа служит для отображения процентного соотношения подмножества и содержащего его множества. Например, он позволяет сравнить число байтов, используемых на диске, и общее число байтов на этом диске. Счетчики этого типа отображают только текущий процент, а не среднее значение за все время. Данный тип аналогичен типу счетчика <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawFraction32" />, за исключением того, что используются большие поля для размещения больших значений.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.SampleBase">
      <summary>Данный счетчик хранит количество выполненных прерываний для измерения и используется в качестве знаменателя дробного значения. Для данного типа поддерживается тип счетчика <see cref="F:System.Diagnostics.PerformanceData.CounterType.SampleFraction" />.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.SampleCounter">
      <summary>Счетчик данного типа служит для отображения среднего числа операций, завершенных за одну секунду. Он измеряет время в тактах системного таймера производительности. Переменная F означает количество тактов в одной секунде. Значение F добавляется в уравнение для того, чтобы результат отображался в секундах. (См. сведения о типе счетчика PERF_SAMPLE_COUNTER в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.SampleFraction">
      <summary>Счетчик данного типа служит для отображения среднего коэффициента обращения ко всем операциям за последние два интервала измерения. (См. сведения о типе счетчика PERF_SAMPLE_FRACTION в пакете развертывания).</summary>
    </member>
  </members>
</doc>