<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>WindowsBase</name>
  </assembly>
  <members>
    <member name="T:System.Collections.Specialized.CollectionChangedEventManager">
      <summary>Fornisce un'implementazione <see cref="T:System.Windows.WeakEventManager" /> per consentire di utilizzare il modello "listener di eventi deboli" per allegare listener per l'evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</summary>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.AddHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})">
      <summary>Aggiunge il gestore eventi specificato, che viene chiamato quando l'origine specificata genera l'evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</summary>
      <param name="source">Oggetto di sorgente che genera l'evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</param>
      <param name="handler">Delegato che gestisce l'evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.AddListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)">
      <summary>Aggiunge il listener specificato all'evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> dell'origine specificata.</summary>
      <param name="source">Oggetto con l'evento.</param>
      <param name="listener">Oggetto da aggiungere come listener.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.NewListenerList">
      <summary>Restituisce un nuovo oggetto per contenere i listener per l'evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</summary>
      <returns>Nuovo oggetto per contenere i listener per l'evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</returns>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.RemoveHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})">
      <summary>Rimuove il gestore eventi specificato dall'origine specificata.</summary>
      <param name="source">Oggetto di sorgente che genera l'evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</param>
      <param name="handler">Delegato che gestisce l'evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.RemoveListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)">
      <summary>Rimuove il listener specificato dall'evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> dell'origine specificata.</summary>
      <param name="source">Oggetto con l'evento.</param>
      <param name="listener">Il listener da rimuovere.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.StartListening(System.Object)">
      <summary>Avvia l'ascolto dell'evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> sull'origine specificata.</summary>
      <param name="source">Oggetto con l'evento.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.StopListening(System.Object)">
      <summary>Interrompe l'ascolto dell'evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> sull'origine specificata.</summary>
      <param name="source">Oggetto con l'evento.</param>
    </member>
    <member name="T:System.ComponentModel.CurrentChangedEventManager">
      <summary>Fornisce un'implementazione <see cref="T:System.Windows.WeakEventManager" /> per consentire di utilizzare il modello "listener di eventi deboli" per allegare listener per l'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.AddHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.EventArgs})">
      <summary>Aggiunge il gestore eventi specificato, che viene chiamato quando l'origine specificata genera l'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</summary>
      <param name="source">Oggetto di sorgente che genera l'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</param>
      <param name="handler">Oggetto di sorgente che genera l'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary>Aggiunge il listener specificato all'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> dell'origine specificata.</summary>
      <param name="source">Oggetto con l'evento.</param>
      <param name="listener">Oggetto da aggiungere come listener.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.NewListenerList">
      <summary>Restituisce un nuovo oggetto per contenere i listener per l'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</summary>
      <returns>Nuovo oggetto per contenere i listener per l'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.RemoveHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.EventArgs})">
      <summary>Rimuove il gestore eventi specificato dall'origine specificata.</summary>
      <param name="source">Oggetto di sorgente che genera l'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</param>
      <param name="handler">Delegato che gestisce l'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary>Rimuove il listener specificato dall'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> dell'origine specificata.</summary>
      <param name="source">Oggetto con l'evento.</param>
      <param name="listener">Il listener da rimuovere.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.StartListening(System.Object)">
      <summary>Avvia l'ascolto dell'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> sull'origine specificata.</summary>
      <param name="source">Oggetto con l'evento.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.StopListening(System.Object)">
      <summary>Interrompe l'ascolto dell'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> sull'origine specificata.</summary>
      <param name="source">Oggetto con l'evento.</param>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventArgs">
      <summary>Fornisce informazioni per l'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventArgs.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.CurrentChangingEventArgs" />.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventArgs.#ctor(System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.CurrentChangingEventArgs" /> con il valore <paramref name="isCancelable" /> specificato.</summary>
      <param name="isCancelable">Valore che indica se l'evento è annullabile.</param>
    </member>
    <member name="P:System.ComponentModel.CurrentChangingEventArgs.Cancel">
      <summary>Ottiene o imposta un valore che indica se annullare l'evento.</summary>
      <exception cref="T:System.InvalidOperationException">Se il valore di <see cref="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable" /> è <see langword="false" />.</exception>
      <returns>
        <see langword="true" /> se l'evento deve essere annullato. In caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable">
      <summary>Ottiene un valore che indica se l'evento è annullabile.</summary>
      <returns>
        <see langword="true" /> se l'evento è annullabile. In caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventHandler">
      <summary>Rappresenta il metodo che gestisce l'evento <see cref="E:System.Windows.Data.CollectionView.CurrentChanging" />.</summary>
      <param name="sender">Oggetto che ha generato l'evento.</param>
      <param name="e">Informazioni sull'evento.</param>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventManager">
      <summary>Fornisce un'implementazione <see cref="T:System.Windows.WeakEventManager" /> per consentire di utilizzare il modello "listener di eventi deboli" per allegare listener per l'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.AddHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.ComponentModel.CurrentChangingEventArgs})">
      <summary>Aggiunge il gestore eventi specificato, che viene chiamato quando l'origine specificata genera l'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</summary>
      <param name="source">Oggetto di sorgente che genera l'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</param>
      <param name="handler">Delegato che gestisce l'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary>Aggiunge il listener specificato all'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> dell'origine specificata.</summary>
      <param name="source">Oggetto con l'evento.</param>
      <param name="listener">Oggetto da aggiungere come listener.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.NewListenerList">
      <summary>Restituisce un nuovo oggetto per contenere i listener per l'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</summary>
      <returns>Nuovo oggetto per contenere i listener per l'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.RemoveHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.ComponentModel.CurrentChangingEventArgs})">
      <summary>Rimuove il gestore eventi specificato dall'origine specificata.</summary>
      <param name="source">Oggetto di sorgente che genera l'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</param>
      <param name="handler">Delegato che gestisce l'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary>Rimuove il listener specificato dall'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> dell'origine specificata.</summary>
      <param name="source">Oggetto con l'evento.</param>
      <param name="listener">Il listener da rimuovere.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.StartListening(System.Object)">
      <summary>Avvia l'ascolto dell'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> sull'origine specificata.</summary>
      <param name="source">Oggetto con l'evento.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.StopListening(System.Object)">
      <summary>Interrompe l'ascolto dell'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> sull'origine specificata.</summary>
      <param name="source">Oggetto con l'evento.</param>
    </member>
    <member name="T:System.ComponentModel.DependencyPropertyDescriptor">
      <summary>Fornisce un'estensione di <see cref="T:System.ComponentModel.PropertyDescriptor" /> che tiene conto delle caratteristiche delle proprietà aggiuntive di una proprietà di dipendenza.</summary>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
      <summary>Consente ad altri oggetti di ricevere una notifica quando la proprietà viene modificata.</summary>
      <param name="component">Componente per il quale aggiungere il gestore.</param>
      <param name="handler">Delegato da aggiungere come listener.</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)">
      <summary>Restituisce un valore che indica se la reimpostazione di un oggetto ne modifica il valore.</summary>
      <param name="component">Componente di cui eseguire il test di reimpostazione.</param>
      <returns>
        <see langword="true" /> se reimpostando il componente varia il relativo valore, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)">
      <summary>Verifica l'uguaglianza tra due istanze di <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</summary>
      <param name="obj">Oggetto <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> da confrontare con l'istanza corrente.</param>
      <returns>
        <see langword="true" /> se i valori sono equivalenti, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
      <summary>Restituisce un oggetto <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> per un nome di proprietà specificato.</summary>
      <param name="name">Nome registrato di una proprietà di dipendenza o di una proprietà associata.</param>
      <param name="ownerType">
        <see cref="T:System.Type" /> dell'oggetto che contiene la definizione di proprietà.</param>
      <param name="targetType">
        <see cref="T:System.Type" /> dell'oggetto per cui si vuole impostare la proprietà.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> richiesto.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
      <summary>Restituisce un oggetto <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> per un nome di proprietà specificato.</summary>
      <param name="name">Nome registrato di una proprietà di dipendenza o di una proprietà associata.</param>
      <param name="ownerType">
        <see cref="T:System.Type" /> dell'oggetto che contiene la definizione di proprietà.</param>
      <param name="targetType">
        <see cref="T:System.Type" /> dell'oggetto per cui si vuole impostare la proprietà.</param>
      <param name="ignorePropertyType">Specifica di ignorare il tipo di proprietà.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> richiesto.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)">
      <summary>Restituisce <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> per un oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> specificato.</summary>
      <param name="property">Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> da verificare.</param>
      <returns>Se la proprietà descritta da <paramref name="property" /> è una proprietà di dipendenza, restituisce un oggetto <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> valido. In caso contrario, restituisce <see langword="null" /><see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)">
      <summary>Restituisce un oggetto <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> per una proprietà di dipendenza e un tipo di destinazione specificati.</summary>
      <param name="dependencyProperty">Identificatore della proprietà di dipendenza.</param>
      <param name="targetType">Tipo di oggetto su cui viene impostata la proprietà.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> per la proprietà di dipendenza specificata.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
      <summary>Restituisce un valore <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</summary>
      <param name="instance">Componente per il quale ottenere le proprietà.</param>
      <param name="filter">Matrice di tipo <see cref="T:System.Attribute" /> da usare come filtro.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> con le proprietà che corrispondono agli attributi specificati per il componente specificato.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)">
      <summary>Ottiene un editor del tipo specificato.</summary>
      <param name="editorBaseType">Il tipo base di editor, utilizzato per distinguere i numerosi editor supportati da una proprietà.</param>
      <returns>Istanza del tipo di editor richiesto oppure <see langword="null" /> se non viene trovato un editor.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetHashCode">
      <summary>Restituisce il codice hash per questo oggetto <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</summary>
      <returns>Codice hash di un intero con segno a 32 bit.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)">
      <summary>Restituisce il valore corrente della proprietà per un componente.</summary>
      <param name="component">Istanza del componente.</param>
      <returns>Valore richiesto.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
      <summary>Consente ad altri oggetti di ricevere una notifica quando la proprietà viene modificata.</summary>
      <param name="component">Componente per il quale aggiungere il gestore.</param>
      <param name="handler">Delegato da aggiungere come listener.</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)">
      <summary>Reimposta il valore predefinito per questa proprietà del componente.</summary>
      <param name="component">Componente con il valore di proprietà da reimpostare sul valore predefinito.</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)">
      <summary>Imposta un valore diverso del componente.</summary>
      <param name="component">Componente con il valore di proprietà da impostare.</param>
      <param name="value">Nuovo valore.</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)">
      <summary>Indica se il valore della proprietà deve essere conservato dai processi di serializzazione.</summary>
      <param name="component">Componente con la proprietà di cui verificare la persistenza.</param>
      <returns>
        <see langword="true" /> se la proprietà deve essere conservata, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.ToString">
      <summary>Converte il valore dell'istanza corrente nell'equivalente rappresentazione di stringa.</summary>
      <returns>Restituisce il valore <see cref="P:System.ComponentModel.MemberDescriptor.Name" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Attributes">
      <summary>Ottiene l'insieme di attributi per questo membro.</summary>
      <returns>Insieme <see cref="T:System.ComponentModel.AttributeCollection" /> di attributi.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Category">
      <summary>Ottiene il nome della categoria alla quale appartiene il membro, come specificato in <see cref="T:System.ComponentModel.CategoryAttribute" />.</summary>
      <returns>Nome della categoria alla quale appartiene il membro. Se non esiste alcun attributo <see cref="T:System.ComponentModel.CategoryAttribute" />, il nome della categoria verrà impostato sulla categoria predefinita <see langword="Misc" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.ComponentType">
      <summary>Ottiene il tipo di componente a cui è associata la proprietà in questione.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> che rappresenta il tipo di componente a cui questa proprietà è associata. Quando vengono richiamati <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)" /> o <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />, l'oggetto specificato potrebbe essere un'istanza di questo tipo.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Converter">
      <summary>Ottiene il convertitore di tipi di questa proprietà.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.TypeConverter" /> che viene utilizzato per convertire l'oggetto <see cref="T:System.Type" /> della proprietà.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty">
      <summary>Restituisce l'identificatore di una proprietà di dipendenza.</summary>
      <returns>Identificatore della proprietà di dipendenza.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Description">
      <summary>Ottiene la descrizione del membro, come specificato in <see cref="T:System.ComponentModel.DescriptionAttribute" />.</summary>
      <returns>Descrizione del membro. Se non esiste alcun attributo <see cref="T:System.ComponentModel.DescriptionAttribute" />, il valore della proprietà viene impostato su quello predefinito, ovvero una stringa vuota ("").</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback">
      <summary>Ottiene o imposta un callback utilizzato nelle finestre di progettazione per modificare il valore effettivo di una proprietà di dipendenza, prima che tale valore venga memorizzato nel motore della proprietà.</summary>
      <returns>Callback utilizzato nelle finestre di progettazione per modificare il valore effettivo di una proprietà di dipendenza, prima che tale valore venga memorizzato nel motore della proprietà.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly">
      <summary>Indica se questo membro deve essere impostato soltanto in fase di progettazione, come specificato in <see cref="T:System.ComponentModel.DesignOnlyAttribute" />.</summary>
      <returns>
        <see langword="true" /> se il membro deve essere impostato soltanto in fase di progettazione, <see langword="false" /> se il membro può essere impostato in fase di esecuzione. Se non esiste alcun attributo <see cref="T:System.ComponentModel.DesignOnlyAttribute" />, il valore restituito sarà quello predefinito, ovvero <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DisplayName">
      <summary>Ottiene il nome che può essere visualizzato in una finestra, quale una finestra delle proprietà.</summary>
      <returns>Nome da visualizzare per la proprietà.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsAttached">
      <summary>Ottiene un valore che indica se la proprietà è registrata come una proprietà associata e viene usata tramite un utilizzo associato.</summary>
      <returns>
        <see langword="true" /> se la proprietà è una proprietà associata. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable">
      <summary>Ottiene un valore che indica il valore di <see cref="T:System.ComponentModel.BrowsableAttribute" /> sulla proprietà.</summary>
      <returns>
        <see langword="true" /> se <see cref="T:System.ComponentModel.BrowsableAttribute" /> è stato specificato sulla proprietà; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable">
      <summary>Ottiene un valore che indica se la proprietà deve essere localizzata, come specificato in <see cref="T:System.ComponentModel.LocalizableAttribute" />.</summary>
      <returns>
        <see langword="true" /> se il membro è contrassegnato con il costruttore <see cref="T:System.ComponentModel.LocalizableAttribute" /> del valore true; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly">
      <summary>Ottiene un valore che indica se questa proprietà è di sola lettura.</summary>
      <returns>
        <see langword="true" /> se la proprietà è di sola lettura; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Metadata">
      <summary>Ottiene i metadati associati alla proprietà di dipendenza.</summary>
      <returns>Metadati della proprietà di dipendenza.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.PropertyType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> rappresentato della proprietà di dipendenza.</summary>
      <returns>
        <see cref="T:System.Type" /> della proprietà di dipendenza.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents">
      <summary>Indica se le notifiche delle modifiche dei valori per questa proprietà possono avere origine all'esterno del descrittore della proprietà, ad esempio nel componente stesso, oppure se le notifiche avranno origine solo da chiamate dirette a <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />.</summary>
      <returns>
        <see langword="true" /> se le notifiche per questa proprietà possono avere origine all'esterno del descrittore della proprietà, ad esempio nel componente stesso. <see langword="false" /> se le notifiche avranno origine solo da chiamate dirette a <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />.</returns>
    </member>
    <member name="T:System.ComponentModel.ErrorsChangedEventManager">
      <summary>Fornisce un'implementazione <see cref="T:System.Windows.WeakEventManager" /> per consentire di utilizzare il modello listener di eventi deboli per allegare listener per l'evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.AddHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})">
      <summary>Aggiunge il gestore eventi specificato, che viene chiamato quando l'origine specificata genera l'evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</summary>
      <param name="source">Oggetto di sorgente che genera l'evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
      <param name="handler">Delegato che gestisce l'evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.NewListenerList">
      <summary>Restituisce un nuovo oggetto per contenere i listener per l'evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</summary>
      <returns>Nuovo oggetto per contenere i listener per l'evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.RemoveHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})">
      <summary>Rimuove il gestore eventi specificato dall'origine specificata.</summary>
      <param name="source">Oggetto di sorgente che genera l'evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
      <param name="handler">Delegato che gestisce l'evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.StartListening(System.Object)">
      <summary>Avvia l'ascolto dell'evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> sull'origine specificata.</summary>
      <param name="source">Oggetto di sorgente che genera l'evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.StopListening(System.Object)">
      <summary>Interrompe l'ascolto dell'evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> sull'origine specificata.</summary>
      <param name="source">Oggetto di sorgente che genera l'evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
    </member>
    <member name="T:System.ComponentModel.GroupDescription">
      <summary>Fornisce una classe base astratta per i tipi che descrivono come dividere gli elementi di una raccolta in gruppi.</summary>
    </member>
    <member name="E:System.ComponentModel.GroupDescription.PropertyChanged">
      <summary>Generato quando il valore di una proprietà cambia.</summary>
    </member>
    <member name="E:System.ComponentModel.GroupDescription.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>Generato quando il valore di una proprietà cambia.</summary>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.GroupDescription" />.</summary>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)">
      <summary>Restituisce i nomi del gruppo per l'elemento specificato.</summary>
      <param name="item">Elemento per cui restituire i nomi del gruppo.</param>
      <param name="level">Livello di raggruppamento.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> da fornire al convertitore.</param>
      <returns>Nomi del gruppo per l'elemento specificato.</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.NamesMatch(System.Object,System.Object)">
      <summary>Restituisce un valore che indica se il nome del gruppo e il nome dell'elemento corrispondono e quindi l'elemento appartiene al gruppo.</summary>
      <param name="groupName">Nome del gruppo da controllare.</param>
      <param name="itemName">Nome dell'elemento da controllare.</param>
      <returns>
        <see langword="true" /> se i nomi corrispondono e l'elemento appartiene al gruppo. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Genera l'evento <see cref="E:System.ComponentModel.GroupDescription.PropertyChanged" />.</summary>
      <param name="e">Argomenti dell'evento da generare.</param>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.ShouldSerializeGroupNames">
      <summary>Restituisce un valore che indica se i processi di serializzazione devono serializzare il valore effettivo della proprietà <see cref="P:System.ComponentModel.GroupDescription.GroupNames" /> in istanze di questa classe.</summary>
      <returns>
        <see langword="true" /> se il valore della proprietà <see cref="P:System.ComponentModel.GroupDescription.GroupNames" /> deve essere serializzato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.ShouldSerializeSortDescriptions">
      <summary>Restituisce un valore che indica se i processi di serializzazione devono serializzare il valore effettivo della proprietà <see cref="P:System.ComponentModel.GroupDescription.SortDescriptions" /> in istanze di questa classe.</summary>
      <returns>
        <see langword="true" /> se il valore della proprietà <see cref="P:System.ComponentModel.GroupDescription.SortDescriptions" /> deve essere serializzato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.CustomSort">
      <summary>Ottiene o imposta un operatore di confronto personalizzato che ordina i gruppi usando un oggetto che implementa <see cref="T:System.Collections.IComparer" />.</summary>
      <returns>Operatore di confronto personalizzato che ordina i gruppi usando un oggetto che implementa <see cref="T:System.Collections.IComparer" />.</returns>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.GroupNames">
      <summary>Ottiene la raccolta di nomi che vengono usati per inizializzare un gruppo con un set di sottogruppi con i nomi specificati.</summary>
      <returns>Raccolta di nomi che vengono usati per inizializzare un gruppo con un set di sottogruppi con i nomi specificati.</returns>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.SortDescriptions">
      <summary>Ottiene la raccolta dei criteri di ordinamento in base ai quali ordinare i gruppi.</summary>
      <returns>Raccolta dei criteri di ordinamento in base ai quali ordinare i gruppi.</returns>
    </member>
    <member name="T:System.ComponentModel.ICollectionView">
      <summary>Consente alle raccolte di disporre delle funzionalità di gestione, ordinamento personalizzato, filtro e raggruppamento dei record correnti.</summary>
    </member>
    <member name="E:System.ComponentModel.ICollectionView.CurrentChanged">
      <summary>Nell'implementazione di questa interfaccia, generare l'evento dopo la modifica dell'elemento corrente.</summary>
    </member>
    <member name="E:System.ComponentModel.ICollectionView.CurrentChanging">
      <summary>Nell'implementazione di questa interfaccia, generare l'evento prima della modifica dell'elemento corrente. Il gestore eventi può annullare questo evento.</summary>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.Contains(System.Object)">
      <summary>Restituisce un valore che indica se un elemento specificato appartiene a questa visualizzazione della raccolta.</summary>
      <param name="item">Oggetto da controllare.</param>
      <returns>
        <see langword="true" /> se l'elemento appartiene a questa visualizzazione della raccolta. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.DeferRefresh">
      <summary>Immette un ciclo di rinvio che è possibile utilizzare per unire le modifiche alla visualizzazione e ritardare l'aggiornamento automatico.</summary>
      <returns>Oggetto <see cref="T:System.IDisposable" /> che è possibile usare per l'eliminazione dell'oggetto chiamante.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentTo(System.Object)">
      <summary>Imposta l'elemento specificato in modo che diventi l'oggetto <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> nella visualizzazione.</summary>
      <param name="item">Elemento da impostare come <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</param>
      <returns>
        <see langword="true" /> se <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> risultante è all'interno della visualizzazione; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToFirst">
      <summary>Imposta il primo elemento nella visualizzazione come <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> risultante è un elemento all'interno della visualizzazione; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToLast">
      <summary>Imposta l’ultimo elemento nella visualizzazione come <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> risultante è un elemento all'interno della visualizzazione; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToNext">
      <summary>Imposta l'elemento successivo a <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> nella visualizzazione come <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> risultante è un elemento all'interno della visualizzazione; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToPosition(System.Int32)">
      <summary>Imposta l'elemento in corrispondenza dell'indice specificato come primo oggetto <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> nella visualizzazione.</summary>
      <param name="position">Indice in corrispondenza del quale impostare l'oggetto <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> risultante è un elemento all'interno della visualizzazione; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToPrevious">
      <summary>Imposta l’elemento precedente a <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> nella visualizzazione come <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> risultante è un elemento all'interno della visualizzazione; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.Refresh">
      <summary>Ricrea la visualizzazione.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanFilter">
      <summary>Ottiene un valore che indica se questa visualizzazione supporta l'applicazione di filtri tramite la proprietà <see cref="P:System.ComponentModel.ICollectionView.Filter" />.</summary>
      <returns>
        <see langword="true" /> se la visualizzazione supporta l'applicazione di filtri. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanGroup">
      <summary>Ottiene un valore che indica se questa visualizzazione supporta il raggruppamento tramite la proprietà <see cref="P:System.ComponentModel.ICollectionView.GroupDescriptions" />.</summary>
      <returns>
        <see langword="true" /> se la visualizzazione supporta il raggruppamento. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanSort">
      <summary>Ottiene un valore che indica se questa visualizzazione supporta l'ordinamento tramite la proprietà <see cref="P:System.ComponentModel.ICollectionView.SortDescriptions" />.</summary>
      <returns>
        <see langword="true" /> se la visualizzazione supporta l'ordinamento. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Culture">
      <summary>Ottiene o imposta info culturali per qualsiasi operazione della visualizzazione che può differire dalle impostazioni cultura, ad esempio l'ordinamento.</summary>
      <returns>Impostazioni cultura da usare durante l'ordinamento.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CurrentItem">
      <summary>Ottiene l'elemento corrente della visualizzazione.</summary>
      <returns>Elemento corrente della visualizzazione o <see langword="null" /> se non sono presenti elementi correnti.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CurrentPosition">
      <summary>Ottiene la posizione ordinale di <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> nella visualizzazione.</summary>
      <returns>Posizione ordinale di <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> nella visualizzazione.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Filter">
      <summary>Ottiene o imposta un callback utilizzato da determinare se un elemento è adatto per essere incluso nella visualizzazione.</summary>
      <returns>Metodo usato per stabilire se un elemento è appropriato per l'inclusione nella visualizzazione.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.GroupDescriptions">
      <summary>Ottiene una raccolta di oggetti <see cref="T:System.ComponentModel.GroupDescription" /> che descrive la modalità di raggruppamento degli elementi nella visualizzazione.</summary>
      <returns>Raccolta di oggetti <see cref="T:System.ComponentModel.GroupDescription" /> che descrivono la modalità di raggruppamento degli elementi nella visualizzazione.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Groups">
      <summary>Ottiene i gruppi di livello superiore.</summary>
      <returns>Raccolta di sola lettura dei gruppi di livello superiore o <see langword="null" /> se non sono presenti gruppi.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsCurrentAfterLast">
      <summary>Ottiene un valore che indica se l'oggetto <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> della visualizzazione è oltre la fine della raccolta.</summary>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> della visualizzazione è oltre la fine della raccolta. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsCurrentBeforeFirst">
      <summary>Ottiene un valore che indica se l'oggetto <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> della visualizzazione è oltre l'inizio della raccolta.</summary>
      <returns>
        <see langword="true" /> Se l'oggetto <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> della visualizzazione è oltre l'inizio della raccolta; in caso contrario, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsEmpty">
      <summary>Restituisce un valore che indica se la visualizzazione risultante è vuota.</summary>
      <returns>
        <see langword="true" /> se la visualizzazione risultante è vuota. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.SortDescriptions">
      <summary>Ottiene una raccolta di oggetti <see cref="T:System.ComponentModel.SortDescription" /> che descrive la modalità di ordinamento degli elementi nella visualizzazione.</summary>
      <returns>Raccolta di oggetti <see cref="T:System.ComponentModel.SortDescription" /> che descrive la modalità di ordinamento degli elementi nella visualizzazione.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.SourceCollection">
      <summary>Restituisce la raccolta sottostante.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerable" /> che è la raccolta sottostante.</returns>
    </member>
    <member name="T:System.ComponentModel.ICollectionViewFactory">
      <summary>Interfaccia che consente l'implementazione di insiemi per creare una visualizzazione dei relativi dati. In genere, il codice utente non chiama metodi su questa interfaccia.</summary>
    </member>
    <member name="M:System.ComponentModel.ICollectionViewFactory.CreateView">
      <summary>Crea una nuova visualizzazione sull'insieme che implementa questa interfaccia. In genere, il codice utente non chiama questo metodo.</summary>
      <returns>Visualizzazione appena creata.</returns>
    </member>
    <member name="T:System.ComponentModel.ICollectionViewLiveShaping">
      <summary>Definisce le proprietà che consentono l'ordinamento, il raggruppamento e l'applicazione di filtri su <see cref="T:System.Windows.Data.CollectionView" /> in tempo reale.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveFiltering">
      <summary>Ottiene un valore che indica se la visualizzazione della raccolta supporta l'attivazione o disattivazione del filtraggio dei dati in tempo reale.</summary>
      <returns>
        <see langword="true" /> se la visualizzazione della raccolta supporta l'attivazione o la disattivazione del filtraggio in tempo reale. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveGrouping">
      <summary>Ottiene un valore che indica se la visualizzazione della raccolta supporta l'attivazione o la disattivazione del raggruppamento dei dati in tempo reale.</summary>
      <returns>
        <see langword="true" /> se la visualizzazione di raccolta supporta l'attivazione o la disattivazione del raggruppamento in tempo reale; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveSorting">
      <summary>Ottiene un valore che indica se la visualizzazione della raccolta supporta l'attivazione o la disattivazione dell'ordinamento dei dati in tempo reale.</summary>
      <returns>
        <see langword="true" /> se la visualizzazione di raccolta supporta l'attivazione o la disattivazione dell'ordinamento in tempo reale; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveFiltering">
      <summary>Ottiene o imposta un valore che indica se il filtraggio di dati in tempo reale è attivato.</summary>
      <returns>
        <see langword="true" /> se è abilitato il filtraggio dei dati in tempo reale; <see langword="false" /> se il filtraggio non è abilitato; <see langword="null" /> se non è possibile determinare se la visualizzazione di raccolta implementa il filtraggio in tempo reale.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveGrouping">
      <summary>Ottiene o imposta un valore che indica se il raggruppamento di dati in tempo reale è attivato.</summary>
      <returns>
        <see langword="true" /> se è abilitato il raggruppamento dei dati in tempo reale; <see langword="false" /> se il raggruppamento in tempo reale non è abilitato; <see langword="null" /> se non è possibile determinare se la visualizzazione di raccolta implementa il raggruppamento in tempo reale.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveSorting">
      <summary>Ottiene o imposta un valore che indica se l'ordinamento in tempo reale è attivato.</summary>
      <returns>
        <see langword="true" /> se è abilitato l'ordinamento dei dati in tempo reale; <see langword="false" /> se l'ordinamento in tempo reale non è abilitato; <see langword="null" /> se non è possibile determinare se la visualizzazione di raccolta implementa l'ordinamento in tempo reale.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.LiveFilteringProperties">
      <summary>Ottiene una raccolta di stringhe che specificano le proprietà che fanno parte del filtraggio di dati in tempo reale.</summary>
      <returns>Una raccolta di stringhe che specificano le proprietà che fanno parte del filtraggio di dati in tempo reale.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.LiveGroupingProperties">
      <summary>Ottiene una raccolta di stringhe che specificano le proprietà che fanno parte del raggruppamento dei dati in tempo reale.</summary>
      <returns>Una raccolta di stringhe che specificano le proprietà che fanno parte del raggruppamento di dati in tempo reale.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.LiveSortingProperties">
      <summary>Ottiene una raccolta di stringhe che specificano le proprietà che fanno parte dell'ordinamento di dati in tempo reale.</summary>
      <returns>Una raccolta di stringhe che specificano le proprietà che fanno parte dell'ordinamento di dati in tempo reale.</returns>
    </member>
    <member name="T:System.ComponentModel.IEditableCollectionView">
      <summary>Definisce metodi e proprietà implementate da un oggetto <see cref="T:System.Windows.Data.CollectionView" /> per fornire funzionalità di modifica a una raccolta.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.AddNew">
      <summary>Aggiunge un nuovo elemento alla raccolta.</summary>
      <returns>Nuovo elemento aggiunto alla raccolta.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CancelEdit">
      <summary>Termina la transazione di modifica e, se possibile, ripristina il valore originale dell'elemento.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CancelNew">
      <summary>Termina la transazione di aggiunta ed elimina il nuovo elemento in sospeso.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CommitEdit">
      <summary>Termina la transazione di modifica e salva le modifiche in sospeso.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CommitNew">
      <summary>Termina la transazione di aggiunta e salva il nuovo elemento in sospeso.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)">
      <summary>Avvia una transazione di modifica dell'elemento specificato.</summary>
      <param name="item">Elemento da modificare.</param>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)">
      <summary>Rimuove l'elemento specificato dalla raccolta.</summary>
      <param name="item">Elemento da rimuovere.</param>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)">
      <summary>Rimuove dalla raccolta l'elemento in corrispondenza della posizione specificata.</summary>
      <param name="index">Posizione dell'elemento da rimuovere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero o maggiore del numero di elementi contenuti nella visualizzazione raccolta.</exception>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanAddNew">
      <summary>Ottiene un valore che indica se è possibile aggiungere un nuovo elemento alla raccolta.</summary>
      <returns>
        <see langword="true" /> se è possibile aggiungere un nuovo elemento alla raccolta. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanCancelEdit">
      <summary>Ottiene un valore che indica se la visualizzazione raccolta può annullare le modifiche in sospeso e ripristinare i valori originali di un oggetto modificato.</summary>
      <returns>
        <see langword="true" /> se la visualizzazione raccolta può annullare le modifiche in sospeso e ripristinare i valori originali di un oggetto modificato. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanRemove">
      <summary>Ottiene un valore che indica se è possibile rimuovere un elemento dalla raccolta.</summary>
      <returns>
        <see langword="true" /> se è possibile rimuovere un elemento dalla raccolta. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CurrentAddItem">
      <summary>Ottiene l'elemento che viene aggiunto durante la transazione di aggiunta corrente.</summary>
      <returns>Elemento aggiunto se <see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" /> è <see langword="true" />. In caso contrario, <see langword="null" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CurrentEditItem">
      <summary>Ottiene l'elemento della raccolta che viene modificato.</summary>
      <returns>Elemento della raccolta che viene modificato se <see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" /> è <see langword="true" />. In caso contrario, <see langword="null" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.IsAddingNew">
      <summary>Ottiene un valore che indica se è in corso una transazione di aggiunta.</summary>
      <returns>
        <see langword="true" /> se è in corso una transazione di aggiunta. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.IsEditingItem">
      <summary>Ottiene un valore che indica se è in corso una transazione di modifica.</summary>
      <returns>
        <see langword="true" /> se è in corso una transazione di modifica. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition">
      <summary>Ottiene o imposta la posizione del segnaposto del nuovo elemento nella visualizzazione raccolta.</summary>
      <returns>Uno dei valori di enumerazione che specifica la posizione del segnaposto del nuovo elemento nella visualizzazione raccolta.</returns>
    </member>
    <member name="T:System.ComponentModel.IEditableCollectionViewAddNewItem">
      <summary>Definisce metodi e proprietà implementati da un oggetto <see cref="T:System.Windows.Data.CollectionView" /> per consentire di specificare l'aggiunta di elementi di un tipo specifico.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionViewAddNewItem.AddNewItem(System.Object)">
      <summary>Aggiunge alla raccolta l'oggetto specificato.</summary>
      <param name="newItem">Oggetto da aggiungere alla raccolta.</param>
      <returns>Oggetto aggiunto all'insieme.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionViewAddNewItem.CanAddNewItem">
      <summary>Ottiene un valore che indica se è possibile aggiungere un oggetto specificato all'insieme.</summary>
      <returns>
        <see langword="true" /> se è possibile aggiungere un oggetto specificato all'insieme; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.IItemProperties">
      <summary>Definisce una proprietà che fornisce informazioni sulle proprietà di un oggetto.</summary>
    </member>
    <member name="P:System.ComponentModel.IItemProperties.ItemProperties">
      <summary>Ottiene un insieme contenente informazioni sulle proprietà disponibili per gli elementi di un insieme.</summary>
      <returns>Insieme contenente informazioni sulle proprietà disponibili per gli elementi di un insieme.</returns>
    </member>
    <member name="T:System.ComponentModel.ItemPropertyInfo">
      <summary>Contiene informazioni su una proprietà.</summary>
    </member>
    <member name="M:System.ComponentModel.ItemPropertyInfo.#ctor(System.String,System.Type,System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.ItemPropertyInfo" />.</summary>
      <param name="name">Nome della proprietà.</param>
      <param name="type">Tipo della proprietà.</param>
      <param name="descriptor">Oggetto contenente informazioni aggiuntive sulla proprietà.</param>
    </member>
    <member name="P:System.ComponentModel.ItemPropertyInfo.Descriptor">
      <summary>Ottiene un oggetto contenente informazioni aggiuntive sulla proprietà.</summary>
      <returns>Oggetto contenente informazioni aggiuntive sulla proprietà.</returns>
    </member>
    <member name="P:System.ComponentModel.ItemPropertyInfo.Name">
      <summary>Ottiene il nome della proprietà.</summary>
      <returns>Nome della proprietà.</returns>
    </member>
    <member name="P:System.ComponentModel.ItemPropertyInfo.PropertyType">
      <summary>Ottiene il tipo della proprietà.</summary>
      <returns>Tipo della proprietà.</returns>
    </member>
    <member name="T:System.ComponentModel.NewItemPlaceholderPosition">
      <summary>Specifica il punto della raccolta in cui compare il segnaposto di un nuovo elemento.</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.AtBeginning">
      <summary>Il segnaposto di un nuovo elemento viene visualizzato all'inizio della raccolta.  I nuovi elementi si trovano all'inizio della raccolta, dopo il rispettivo segnaposto.</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.AtEnd">
      <summary>Il segnaposto di un nuovo elemento viene visualizzato alla fine della raccolta. I nuovi elementi vengono aggiunti alla fine della raccolta, prima del rispettivo segnaposto.</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.None">
      <summary>La raccolta non usa un segnaposto per i nuovi elementi. La posizione degli elementi aggiunti dipende dalla raccolta sottostante.  Normalmente vengono aggiunti alla fine della raccolta.</summary>
    </member>
    <member name="T:System.ComponentModel.PropertyChangedEventManager">
      <summary>Fornisce un'implementazione <see cref="T:System.Windows.WeakEventManager" /> per consentire di utilizzare il modello "listener di eventi deboli" per allegare listener per l'evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.AddHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
      <summary>Aggiunge il gestore eventi specificato, che viene chiamato quando l'origine specificata genera l'evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> per la proprietà specificata.</summary>
      <param name="source">Oggetto di sorgente che genera l'evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
      <param name="handler">Delegato che gestisce l'evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
      <param name="propertyName">Nome della proprietà che esiste in <paramref name="source" /> su cui ascoltare le modifiche. Impostare su <see cref="F:System.String.Empty" /> per indicare "qualsiasi proprietà".</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Più di un metodo è associato a <paramref name="handler" />.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.AddListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
      <summary>Aggiunge il listener specificato all'elenco dei listener sull'origine specificata.</summary>
      <param name="source">Oggetto con l'evento.</param>
      <param name="listener">Oggetto da aggiungere come listener.</param>
      <param name="propertyName">Nome della proprietà che esiste in <paramref name="source" /> su cui ascoltare le modifiche. Impostare su <see cref="F:System.String.Empty" /> per indicare "qualsiasi proprietà".</param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.NewListenerList">
      <summary>Restituisce un nuovo oggetto per contenere i listener per l'evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</summary>
      <returns>Nuovo oggetto per contenere i listener per l'evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.Purge(System.Object,System.Object,System.Boolean)">
      <summary>Rimuove i listener che non sono più attivi dai dati per l'origine fornita.</summary>
      <param name="source">Oggetto di origine dal quale rimuovere tutti i listener.</param>
      <param name="data">Dati da cancellare. È previsto che sia un oggetto <see cref="T:System.Collections.Specialized.HybridDictionary" />.</param>
      <param name="purgeAll">Impostare su <see langword="true" /> per interrompere l'ascolto e rimuovere completamente tutti i dati.</param>
      <returns>
        <see langword="true" /> se alcune voci sono state rimosse, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.RemoveHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
      <summary>Rimuove il gestore eventi specificato dall'origine specificata.</summary>
      <param name="source">Oggetto di sorgente che genera l'evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
      <param name="handler">Delegato che gestisce l'evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
      <param name="propertyName">Nome della proprietà che esiste in <paramref name="source" /> su cui interrompere l'ascolto delle modifiche. Impostare su <see cref="F:System.String.Empty" /> per indicare "qualsiasi proprietà".</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Più di un metodo è associato a <paramref name="handler" />.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.RemoveListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
      <summary>Rimuove il listener specificato dall'elenco di listener sull'origine fornita.</summary>
      <param name="source">Oggetto da cui rimuovere il listener.</param>
      <param name="listener">Il listener da rimuovere.</param>
      <param name="propertyName">Nome della proprietà che esiste in <paramref name="source" /> su cui interrompere l'ascolto delle modifiche. Impostare su <see cref="F:System.String.Empty" /> per indicare "qualsiasi proprietà".</param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.StartListening(System.Object)">
      <summary>Avvia l'ascolto dell'evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> sull'origine fornita.</summary>
      <param name="source">Oggetto sul quale avviare l'ascolto dell'evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.StopListening(System.Object)">
      <summary>Interrompe l'ascolto dell'evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> sull'origine fornita.</summary>
      <param name="source">Oggetto di origine sul quale interrompere l'ascolto di <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
    </member>
    <member name="T:System.ComponentModel.PropertyFilterAttribute">
      <summary>Specifica le proprietà che devono essere riportate dai descrittori di tipo, in particolare il metodo <see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" />.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterAttribute.Default">
      <summary>Questo membro supporta l'infrastruttura .NET Framework e non è possibile usarlo direttamente dal codice.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.#ctor(System.ComponentModel.PropertyFilterOptions)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.PropertyFilterAttribute" />.</summary>
      <param name="filter">Opzioni che descrivono questo filtro di proprietà.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.Equals(System.Object)">
      <summary>Restituisce un valore che indica se l' <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> attributo .NET Framework oggetto corrente è uguale a un oggetto specificato.</summary>
      <param name="value">Oggetto da confrontare con la classe <see cref="T:System.ComponentModel.PropertyFilterAttribute" />.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> specificato è uguale all'oggetto <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.GetHashCode">
      <summary>Restituisce il codice hash per l'oggetto <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> attributo .NET Framework corrente.</summary>
      <returns>Valore intero a 32 bit con segno.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.Match(System.Object)">
      <summary>Restituisce un valore che indica se le opzioni del filtro di proprietà dell' <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> attributo .NET Framework oggetto corrente corrispondono alle opzioni del filtro di proprietà dell'oggetto fornito.</summary>
      <param name="value">Oggetto da confrontare. È previsto che l'oggetto sia <see cref="T:System.ComponentModel.PropertyFilterAttribute" />.</param>
      <returns>
        <see langword="true" /> se esiste una corrispondenza; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyFilterAttribute.Filter">
      <summary>Ottiene le opzioni di filtro per questo oggetto <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> attributo .NET Framework .</summary>
      <returns>Opzioni di filtro delle proprietà.</returns>
    </member>
    <member name="T:System.ComponentModel.PropertyFilterOptions">
      <summary>Specifica le proprietà che devono essere riportate dai descrittori di tipo, in particolare il metodo <see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" />. Questa enumerazione viene usata per specificare il valore della proprietà <see cref="P:System.ComponentModel.PropertyFilterAttribute.Filter" />.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.All">
      <summary>Restituire tutte le proprietà.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.Invalid">
      <summary>Restituire solo le proprietà che non sono valide in base al contesto corrente dell'oggetto.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.None">
      <summary>Non restituire alcuna proprietà.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.SetValues">
      <summary>Restituire solo le proprietà con valori locali impostati.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.UnsetValues">
      <summary>Restituire solo le proprietà con valori locali non impostati o senza proprietà impostate in un archivio di espressioni esterno (ad esempio, associazione o risorsa posticipata).</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.Valid">
      <summary>Restituire qualsiasi proprietà valida per l'oggetto nell'ambito corrente.</summary>
    </member>
    <member name="T:System.ComponentModel.SortDescription">
      <summary>Definisce la direzione e il nome della proprietà da usare come criteri per l'ordinamento di una raccolta.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescription.#ctor(System.String,System.ComponentModel.ListSortDirection)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.ComponentModel.SortDescription" />.</summary>
      <param name="propertyName">Nome della proprietà in base alla quale ordinare l'elenco.</param>
      <param name="direction">Ordinamento.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Il parametro <paramref name="direction" /> non specifica un valore valido.</exception>
    </member>
    <member name="M:System.ComponentModel.SortDescription.Equals(System.Object)">
      <summary>Confronta l'istanza specificata e l'istanza corrente di <see cref="T:System.ComponentModel.SortDescription" /> per determinarne l'uguaglianza.</summary>
      <param name="obj">Istanza di <see cref="T:System.ComponentModel.SortDescription" /> da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="obj" /> e questa istanza di <see cref="T:System.ComponentModel.SortDescription" /> hanno gli stessi valori.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza di <see cref="T:System.ComponentModel.SortDescription" />.</summary>
      <returns>Codice hash per l'istanza di <see cref="T:System.ComponentModel.SortDescription" />.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.op_Equality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)">
      <summary>Confronta due oggetti <see cref="T:System.ComponentModel.SortDescription" /> per verificare l'uguaglianza dei valori.</summary>
      <param name="sd1">Prima istanza da confrontare.</param>
      <param name="sd2">Seconda istanza da confrontare.</param>
      <returns>
        <see langword="true" /> se i due oggetti sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.op_Inequality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)">
      <summary>Confronta due oggetti <see cref="T:System.ComponentModel.SortDescription" /> per verificare la disuguaglianza dei valori.</summary>
      <param name="sd1">Prima istanza da confrontare.</param>
      <param name="sd2">Seconda istanza da confrontare.</param>
      <returns>
        <see langword="true" /> se i valori non sono uguali. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.SortDescription.Direction">
      <summary>Ottiene o imposta un valore che indica se applicare l'ordinamento crescente o decrescente.</summary>
      <returns>Valore <see cref="T:System.ComponentModel.ListSortDirection" /> che indica se applicare l'ordinamento crescente o decrescente.</returns>
    </member>
    <member name="P:System.ComponentModel.SortDescription.IsSealed">
      <summary>Ottiene un valore che indica se l'oggetto è in uno stato non modificabile.</summary>
      <returns>
        <see langword="true" /> se l'oggetto è in uso. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.SortDescription.PropertyName">
      <summary>Ottiene o imposta il nome della proprietà usato come criterio di ordinamento.</summary>
      <returns>Il valore predefinito è null.</returns>
    </member>
    <member name="T:System.ComponentModel.SortDescriptionCollection">
      <summary>Rappresenta una raccolta di oggetti <see cref="T:System.ComponentModel.SortDescription" />.</summary>
    </member>
    <member name="E:System.ComponentModel.SortDescriptionCollection.CollectionChanged">
      <summary>Si verifica in seguito all'aggiunta o alla rimozione di un elemento.</summary>
    </member>
    <member name="E:System.ComponentModel.SortDescriptionCollection.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <summary>Si verifica in seguito all'aggiunta o alla rimozione di un elemento.</summary>
    </member>
    <member name="F:System.ComponentModel.SortDescriptionCollection.Empty">
      <summary>Ottiene un'istanza vuota e non modificabile di <see cref="T:System.ComponentModel.SortDescriptionCollection" />.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.SortDescriptionCollection" />.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.ClearItems">
      <summary>Rimuove tutti gli elementi dalla raccolta.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.InsertItem(System.Int32,System.ComponentModel.SortDescription)">
      <summary>Inserisce un elemento nella raccolta in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero in corrispondenza del quale viene inserito <paramref name="item" />.</param>
      <param name="item">Oggetto da inserire.</param>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.RemoveItem(System.Int32)">
      <summary>Rimuove l'elemento in corrispondenza dell'indice specificato della raccolta.</summary>
      <param name="index">Indice in base zero dell'elemento da rimuovere.</param>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.SetItem(System.Int32,System.ComponentModel.SortDescription)">
      <summary>Sostituisce l'elemento in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero dell'elemento da sostituire.</param>
      <param name="item">Nuovo valore dell'elemento in corrispondenza dell'indice specificato.</param>
    </member>
    <member name="T:System.Diagnostics.PresentationTraceLevel">
      <summary>Descrive il livello di dettaglio per tracciare un particolare oggetto.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.High">
      <summary>Traccia tutte le informazioni aggiuntive.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.Low">
      <summary>Traccia alcune informazioni aggiuntive.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.Medium">
      <summary>Traccia un quantità media di informazioni aggiuntive.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.None">
      <summary>Non traccia alcuna informazione aggiuntiva disponibile.</summary>
    </member>
    <member name="T:System.Diagnostics.PresentationTraceSources">
      <summary>Fornisce supporto per la traccia di debug destinato specificamente alle applicazioni Windows Presentation Foundation (WPF).</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceSources.TraceLevelProperty">
      <summary>Identifica la proprietà associata <see cref="P:System.Diagnostics.PresentationTraceSources.TraceLevel" />.</summary>
    </member>
    <member name="M:System.Diagnostics.PresentationTraceSources.GetTraceLevel(System.Object)">
      <summary>Ottiene il valore della proprietà associata <see cref="P:System.Diagnostics.PresentationTraceSources.TraceLevel" /> per un elemento specificato.</summary>
      <param name="element">Elemento da cui viene letto il valore della proprietà.</param>
      <returns>Valore della proprietà <see cref="P:System.Diagnostics.PresentationTraceSources.TraceLevel" /> dell'elemento.</returns>
    </member>
    <member name="M:System.Diagnostics.PresentationTraceSources.Refresh">
      <summary>Aggiorna le origini di traccia, imponendo che il file app.config sia riletto.</summary>
    </member>
    <member name="M:System.Diagnostics.PresentationTraceSources.SetTraceLevel(System.Object,System.Diagnostics.PresentationTraceLevel)">
      <summary>Imposta il valore della proprietà associata <see cref="P:System.Diagnostics.PresentationTraceSources.TraceLevel" /> su un elemento specificato.</summary>
      <param name="element">Elemento in cui viene scritta la proprietà associata.</param>
      <param name="traceLevel">Valore <see cref="T:System.Diagnostics.PresentationTraceLevel" /> necessario.</param>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.AnimationSource">
      <summary>Ottiene un'origine di traccia dell'animazione.</summary>
      <returns>Un'origine di traccia dell'animazione.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.DataBindingSource">
      <summary>Ottiene un'origine di traccia dell'associazione dati.</summary>
      <returns>Un'origine di traccia dell'associazione dati.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.DependencyPropertySource">
      <summary>Ottiene un'origine di traccia della proprietà di dipendenza.</summary>
      <returns>Origine di traccia della proprietà di dipendenza.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.DocumentsSource">
      <summary>Ottiene un'origine di traccia del documento.</summary>
      <returns>Un'origine di traccia del documento.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.FreezableSource">
      <summary>Ottiene un'origine di traccia Freezable.</summary>
      <returns>Un'origine di traccia Freezable.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.HwndHostSource">
      <summary>Ottiene un'origine di traccia dell'host hwnd.</summary>
      <returns>Origine di traccia dell'host hwnd.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.MarkupSource">
      <summary>Ottiene un'origine di traccia di markup.</summary>
      <returns>Un'origine di traccia di markup.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.NameScopeSource">
      <summary>Ottiene un'origine di traccia dell'ambito del nome.</summary>
      <returns>Un'origine di traccia dell'ambito del nome.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.ResourceDictionarySource">
      <summary>Ottiene un'origine di traccia del dizionario risorse.</summary>
      <returns>Un'origine di traccia del dizionario risorse.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.RoutedEventSource">
      <summary>Ottiene un'origine di traccia dell'evento indirizzato.</summary>
      <returns>Origine di traccia dell'evento indirizzato.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.ShellSource">
      <summary>Ottiene un'origine di traccia della shell.</summary>
      <returns>Origine di traccia della shell.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.TraceLevel" />
    <member name="T:System.IO.Packaging.CertificateEmbeddingOption">
      <summary>Specifica la posizione in cui è archiviato il certificato X.509 usato nella firma.</summary>
    </member>
    <member name="F:System.IO.Packaging.CertificateEmbeddingOption.InCertificatePart">
      <summary>Il certificato è incorporato nel relativo oggetto <see cref="T:System.IO.Packaging.PackagePart" />.</summary>
    </member>
    <member name="F:System.IO.Packaging.CertificateEmbeddingOption.InSignaturePart">
      <summary>Il certificato è incorporato nell'oggetto <see cref="P:System.IO.Packaging.PackageDigitalSignature.SignaturePart" /> creato per la firma aggiunta.</summary>
    </member>
    <member name="F:System.IO.Packaging.CertificateEmbeddingOption.NotEmbedded">
      <summary>Il certificato non è incorporato nel pacchetto.</summary>
    </member>
    <member name="T:System.IO.Packaging.EncryptedPackageEnvelope">
      <summary>Rappresenta un file composto OLE che contiene un package crittografato.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Close">
      <summary>Chiude il package crittografato e il file composto OLE che lo contiene.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary>Creare e restituisce un oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> sul flusso specificato.</summary>
      <param name="envelopeStream">Flusso su cui creare il file.</param>
      <param name="publishLicense">Licenza di pubblicazione incorporata nel file composto.</param>
      <param name="cryptoProvider">Oggetto che determina le operazioni che l'utente corrente è autorizzato a eseguire sul contenuto crittografato.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="envelopeStream" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="envelopeStream" /> non fornisce accesso in lettura/scrittura.</exception>
      <returns>Oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> appena creato.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary>Crea e restituisce un oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> e gli fornisce il nome file specificato.</summary>
      <param name="envelopeFileName">Nome del file composto OLE.</param>
      <param name="publishLicense">Licenza di pubblicazione incorporata nel file composto.</param>
      <param name="cryptoProvider">Oggetto che determina le operazioni che l'utente corrente è autorizzato a eseguire sul contenuto crittografato.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="envelopeFileName" /> è <see langword="null" />.</exception>
      <returns>Oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> appena creato.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary>Crea e restituisce un oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> (sul flusso specificato) che utilizza il package non crittografato specificato come proprio contenuto.</summary>
      <param name="envelopeStream">Flusso su cui creare il file.</param>
      <param name="packageStream">Il flusso che rappresenta il package non crittografato esistente.</param>
      <param name="publishLicense">Licenza di pubblicazione incorporata nel file composto.</param>
      <param name="cryptoProvider">Oggetto che determina le operazioni che l'utente corrente è autorizzato a eseguire sul contenuto crittografato.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="envelopeStream" /> o <paramref name="packageStream" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="envelopeStream" /> non fornisce accesso in lettura/scrittura.</exception>
      <returns>Oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> appena creato.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary>Crea e restituisce un oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> che utilizza il package non crittografato specificato come proprio contenuto e gli attribuisce il nome file specificato.</summary>
      <param name="envelopeFileName">Nome del file composto OLE.</param>
      <param name="packageStream">Il flusso che rappresenta il package non crittografato esistente.</param>
      <param name="publishLicense">Licenza di pubblicazione incorporata nel file composto.</param>
      <param name="cryptoProvider">Oggetto che determina le operazioni che l'utente corrente è autorizzato a eseguire sul contenuto crittografato.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="envelopeFileName" /> o <paramref name="packageStream" /> è <see langword="null" />.</exception>
      <returns>Oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> appena creato.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
      <summary>Rilascia tutte le risorse usate da <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate da <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> e, facoltativamente, le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Flush">
      <summary>Cancellare il flusso sia per l'oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> che per il contenuto del relativo package.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.GetPackage">
      <summary>Ottiene il package crittografato all'interno dell'oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> all'interno della busta.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)">
      <summary>Ottiene un valore che specifica se il flusso specificato è un file composto OLE con un flusso del package crittografato</summary>
      <param name="stream">Flusso sottoposto a test.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> è <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se il flusso specificato è un file composto OLE con un flusso del package crittografato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)">
      <summary>Ottiene un valore che specifica se il file specificato è un file composto OLE con un flusso del package crittografato</summary>
      <param name="fileName">File sottoposto a test.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> è <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se il file specificato è un file composto OLE con un flusso del package crittografato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)">
      <summary>Apre il package crittografato nel flusso specificato.</summary>
      <param name="envelopeStream">Flusso che contiene il package crittografato.</param>
      <returns>Oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> aperto.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)">
      <summary>Apre il package crittografato nel file specificato come in sola lettura e non condiviso.</summary>
      <param name="envelopeFileName">File che contiene il package crittografato.</param>
      <returns>Oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> aperto.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
      <summary>Apre il package crittografato nel file specificato come in sola lettura e con l'accesso specificato.</summary>
      <param name="envelopeFileName">File che contiene il package crittografato.</param>
      <param name="access">Tipo di accesso.</param>
      <returns>Oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> aperto.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
      <summary>Apre il package crittografato nel file specificato e gli fornisce l'accesso e la condivisione specificati.</summary>
      <param name="envelopeFileName">File che contiene il package crittografato.</param>
      <param name="access">Tipo di accesso.</param>
      <param name="sharing">Tipo di condivisione.</param>
      <returns>Oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> aperto.</returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess">
      <summary>Ottiene un valore che specifica se il file è stato aperto con accesso in lettura, scrittura o entrambe.</summary>
      <returns>Il valore <see cref="T:System.IO.FileAccess" /> utilizzato per aprire il file.</returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties">
      <summary>Ottiene le proprietà principali del package (ad esempio Titolo e Oggetto) del documento di Rights Management.</summary>
      <returns>
        <see cref="T:System.IO.Packaging.PackageProperties" /> del package.</returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation">
      <summary>Ottiene le informazioni di Rights Management archiviate nell'oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />. Nello specifico, l'oggetto <see cref="T:System.Security.RightsManagement.PublishLicense" /> e l'oggetto <see cref="T:System.Security.RightsManagement.UseLicense" /> archiviati nel file composto OLE che rappresenta il pacchetto protetto da Rights Management.</summary>
      <returns>
        <see cref="T:System.IO.Packaging.RightsManagementInformation" /> del package.</returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo">
      <summary>Ottiene un oggetto che fornisce accesso ai flussi del file composto all'esterno del package crittografato.</summary>
      <returns>
        <see cref="T:System.IO.Packaging.StorageInfo" /> che rappresenta flussi nel file composto OLE che sono all'esterno del package crittografato.</returns>
    </member>
    <member name="T:System.IO.Packaging.InvalidSignatureEventHandler">
      <summary>Rappresenta il metodo che gestisce <see cref="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent" /> generato quando <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" /> rileva una firma non valida.</summary>
      <param name="sender">L'origine non valida <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> dell'evento.</param>
      <param name="e">Dati dell'evento.</param>
    </member>
    <member name="T:System.IO.Packaging.PackageDigitalSignature">
      <summary>Rappresenta una firma digitale applicata a un set di parti e relazioni di un pacchetto.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignature.GetPartTransformList(System.Uri)">
      <summary>Restituisce un elenco ordinato delle operazioni <see cref="T:System.Security.Cryptography.Xml.Transform" /> applicato a una parte specificata.</summary>
      <param name="partName">L'<see cref="T:System.Uri" /> di <see cref="T:System.IO.Packaging.PackagePart" /> per il quale restituire l'elenco di trasformazioni.</param>
      <exception cref="T:System.InvalidOperationException">La firma digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> è stata eliminata.</exception>
      <returns>Un elenco ordinato di stringhe URI, ad esempio <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl" /> o <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl" />, che rappresenta le trasformazioni XML tipiche applicate alla parte con l'URI <paramref name="partName" /> specificato.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignature.Verify">
      <summary>Verifica la firma digitale in base a un certificato X.509.</summary>
      <exception cref="T:System.InvalidOperationException">La firma digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> è stata eliminata.</exception>
      <returns>
        <see cref="F:System.IO.Packaging.VerifyResult.Success" /> se la verifica ha esito positivo. In caso contrario, uno dei valori <see cref="T:System.IO.Packaging.VerifyResult" /> che identifica un problema.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignature.Verify(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Verifica la firma digitale rispetto a un certificato X.509.</summary>
      <param name="signingCertificate">Certificato X.509 del firmatario rispetto cui verificare la firma digitale.</param>
      <exception cref="T:System.InvalidOperationException">La firma digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> è stata eliminata.</exception>
      <returns>
        <see cref="F:System.IO.Packaging.VerifyResult.Success" /> se la verifica ha esito positivo. In caso contrario, uno dei valori <see cref="T:System.IO.Packaging.VerifyResult" /> che identifica un problema.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption">
      <summary>Ottiene l'opzione per l'incorporamento del certificato X.509.</summary>
      <exception cref="T:System.InvalidOperationException">La firma digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> è stata eliminata.</exception>
      <returns>Uno dei valori <see cref="T:System.IO.Packaging.CertificateEmbeddingOption" /> che specifica l'opzione per la firma digitale.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.Signature">
      <summary>Ottiene o imposta la firma digitale XML.</summary>
      <exception cref="T:System.InvalidOperationException">La firma digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> è stata eliminata.</exception>
      <returns>La firma digitale XML.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignaturePart">
      <summary>Ottiene la <see cref="T:System.IO.Packaging.PackagePart" /> che contiene la firma.</summary>
      <exception cref="T:System.InvalidOperationException">La firma digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> è stata eliminata.</exception>
      <returns>La parte del pacchetto che contiene la firma.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignatureType">
      <summary>Ottiene la stringa URI che identifica il tipo di firma.</summary>
      <exception cref="T:System.InvalidOperationException">La firma digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> è stata eliminata.</exception>
      <returns>Stringa URI che identifica il tipo di firma. Il valore predefinito è <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignatureValue">
      <summary>Ottiene il valore hash crittografato della <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" />.</summary>
      <exception cref="T:System.InvalidOperationException">La firma digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> è stata eliminata.</exception>
      <returns>Una matrice di byte che contiene il valore hash crittografato della <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignedParts">
      <summary>Ottiene un insieme di tutti gli oggetti <see cref="T:System.IO.Packaging.PackagePart" /> firmati con questa firma.</summary>
      <exception cref="T:System.InvalidOperationException">La firma digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> è stata eliminata.</exception>
      <returns>Un insieme che contiene tutte le parti del pacchetto firmate con questa firma.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors">
      <summary>Ottiene l'elenco delle parti <see cref="T:System.IO.Packaging.PackageRelationship" /> firmate.</summary>
      <exception cref="T:System.InvalidOperationException">La firma digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> è stata eliminata.</exception>
      <returns>L'elenco delle parti <see cref="T:System.IO.Packaging.PackageRelationship" /> firmate.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.Signer">
      <summary>Ottiene il certificato X.509 del firmatario.</summary>
      <exception cref="T:System.InvalidOperationException">La firma digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> è stata eliminata.</exception>
      <returns>Certificato digitale del firmatario oppure <see langword="null" /> se il certificato non è archiviato in <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SigningTime">
      <summary>Ottiene la data e l'ora di creazione della firma.</summary>
      <exception cref="T:System.InvalidOperationException">La firma digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> è stata eliminata.</exception>
      <returns>La data e l'ora di creazione della firma.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.TimeFormat">
      <summary>Ottiene il formato della data e dell'ora restituito dalla proprietà <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />.</summary>
      <exception cref="T:System.InvalidOperationException">La firma digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> è stata eliminata.</exception>
      <returns>Ottiene il formato della data e dell'ora restituito dalla proprietà <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageDigitalSignatureManager">
      <summary>Fornisce una classe di utilità per la creazione e la verifica di firme digitali in <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent">
      <summary>Si verifica quando <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" /> rileva una firma non valida.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.#ctor(System.IO.Packaging.Package)">
      <summary>Initializza una nuova istanza della classe <see cref="T:System.IO.Packaging.PackageDigitalSignatureManager" /> per l'utilizzo con un oggetto <see cref="T:System.IO.Packaging.Package" /> specificato.</summary>
      <param name="package">Il package associato a questo amministratore della firma.</param>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign">
      <summary>Controfirma tutte le firme nel pacchetto con il certificato X.509 selezionato dall'utente.</summary>
      <returns>La firma aggiunta come controfirma o <see langword="null" /> se non è stato individuato alcun certificato o l'utente ha annullato la finestra di dialogo per la selezione del certificato.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Controfirma tutte le firme nel pacchetto con un certificato X.509 specificato.</summary>
      <param name="certificate">Certificato X.509 da aggiungere come controfirma.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> è <see langword="null" /></exception>
      <returns>Firma aggiunta come controfirma.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.Uri})">
      <summary>Controfirma un elenco di firme con un certificato X.509 specificato.</summary>
      <param name="certificate">Certificato X.509 da usare per controfirmare ogni oggetto <paramref name="signatures" /> specificato.</param>
      <param name="signatures">Elenco di firme da controfirmare.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="certificate" /> o <paramref name="signatures" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Il pacchetto non contiene oggetti <see cref="T:System.IO.Packaging.PackagePart" /> firmati.</exception>
      <exception cref="T:System.ArgumentException">Il pacchetto non contiene parti <see cref="T:System.IO.Packaging.PackageDigitalSignature" />.</exception>
      <returns>Firma digitale usata per controfirmare ogni oggetto <paramref name="signatures" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(System.Uri)">
      <summary>Restituisce la firma digitale per un URI (Uniform Resource Identifier) della firma specificato.</summary>
      <param name="signatureUri">URI della firma digitale da restituire.</param>
      <returns>La firma digitale per l'<paramref name="signatureUri" /> specificato o <see langword="null" /> se non è possibile trovare una firma per l'<paramref name="signatureUri" /> specificato.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures">
      <summary>Rimuove tutte le firme digitali dal pacchetto.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)">
      <summary>Rimuove la firma digitale con un URI (Uniform Resource Identifier) della firma specificato.</summary>
      <param name="signatureUri">URI dell'oggetto <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> da rimuovere.</param>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})">
      <summary>Chiede all'utente un certificato X.509, che viene quindi usato per firmare digitalmente un elenco specificato di parti di pacchetto.</summary>
      <param name="parts">Elenco di URI (Uniform Resource Identifier) per gli elementi <see cref="T:System.IO.Packaging.PackagePart" /> da firmare.</param>
      <returns>Firma digitale usata per firmare l'elenco di <paramref name="parts" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Firma un elenco di parti di pacchetto con un certificato X.509 specificato.</summary>
      <param name="parts">Elenco di URI (Uniform Resource Identifier) per gli elementi <see cref="T:System.IO.Packaging.PackagePart" /> da firmare.</param>
      <param name="certificate">Certificato X.509 da usare per firmare digitalmente ogni oggetto <paramref name="parts" /> specificato.</param>
      <returns>Firma digitale usata per firmare l'elenco specificato di <paramref name="parts" /> o <see langword="null" /> se è non stato trovato alcun certificato o se l'utente ha fatto clic su "Annulla" nella finestra di dialogo di selezione del certificato.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})">
      <summary>Firma un elenco di parti e di relazioni di pacchetto con un certificato X.509 specificato.</summary>
      <param name="parts">Elenco di URI (Uniform Resource Identifier) per gli oggetti <see cref="T:System.IO.Packaging.PackagePart" /> da firmare.</param>
      <param name="certificate">Certificato X.509 da usare per firmare digitalmente ognuna delle parti e delle relazioni specificate.</param>
      <param name="relationshipSelectors">Elenco di oggetti <see cref="T:System.IO.Packaging.PackageRelationship" /> da firmare.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="parts" /> e <paramref name="relationshipSelectors" /> non specificano oggetti da firmare.</exception>
      <returns>Firma digitale usata per firmare gli elementi specificati negli elenchi <paramref name="parts" /> e <paramref name="relationshipSelectors" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String)">
      <summary>Firma un elenco di parti e di relazioni del pacchetto con un certificato X.509 e un elemento identificatore (ID) specificati.</summary>
      <param name="parts">Elenco di URI (Uniform Resource Identifier) per gli oggetti <see cref="T:System.IO.Packaging.PackagePart" /> da firmare.</param>
      <param name="certificate">Certificato X.509 da usare per firmare digitalmente ognuna delle parti e delle relazioni specificate.</param>
      <param name="relationshipSelectors">Elenco di oggetti <see cref="T:System.IO.Packaging.PackageRelationship" /> da firmare.</param>
      <param name="signatureId">Stringa di identificazione da associare alla firma.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="parts" /> e <paramref name="relationshipSelectors" /> non specificano elementi da firmare.</exception>
      <returns>Firma digitale usata per firmare gli elementi specificati negli elenchi <paramref name="parts" /> e <paramref name="relationshipSelectors" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})">
      <summary>Firma un elenco di parti del pacchetto, relazioni del pacchetto o oggetti personalizzati con un certificato X.509 specificato e l'elemento identificatore (ID) della firma.</summary>
      <param name="parts">Elenco di URI (Uniform Resource Identifier) per gli oggetti <see cref="T:System.IO.Packaging.PackagePart" /> da firmare.</param>
      <param name="certificate">Certificato X.509 da usare per firmare digitalmente ognuna delle parti e delle relazioni specificate.</param>
      <param name="relationshipSelectors">Elenco di oggetti <see cref="T:System.IO.Packaging.PackageRelationship" /> da firmare.</param>
      <param name="signatureId">Stringa di identificazione da associare alla firma.</param>
      <param name="signatureObjects">Elenco di oggetti dati personalizzati da firmare.</param>
      <param name="objectReferences">Elenco di riferimenti agli oggetti personalizzati da firmare.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="parts" />, <paramref name="relationshipSelectors" />, <paramref name="signatureObjects" /> e <paramref name="objectReferences" /> non specificano elementi da firmare.</exception>
      <exception cref="T:System.InvalidOperationException">Un oggetto <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> di una parte a cui viene apposta una firma fa riferimento a un oggetto <see cref="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping" /> vuoto, <see langword="null" /> o non definito.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="signatureId" /> non è <see langword="null" /> e non è un ID dello schema XML valido (ad esempio, inizia con una cifra numerica).</exception>
      <returns>Firma digitale usata per firmare gli elementi specificati negli elenchi <paramref name="parts" /> e <paramref name="relationshipSelectors" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Verifica un certificato X.509 specificato.</summary>
      <param name="certificate">Certificato X.509 da verificare.</param>
      <returns>
        <see cref="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NoError" /> (valore 0) se la verifica del certificato ha avuto esito positivo, In caso contrario, un'enumerazione bit per bit di flag dell'errore</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)">
      <summary>Verifica le firme su tutte le parti firmate all'interno del pacchetto.</summary>
      <param name="exitOnFailure">
        <see langword="true" /> per uscire al primo errore. In caso contrario, <see langword="false" /> per continuare e controllare tutte le firme.</param>
      <returns>
        <see cref="F:System.IO.Packaging.VerifyResult.Success" /> (valore 0) se tutte le firme sono state verificate correttamente. In caso contrario, un'enumerazione che identifica l'errore.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption">
      <summary>Ottiene o imposta l'opzione per l'incorporamento del certificato X.509 usata dal metodo <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})" /> per la firma digitale di parti del pacchetto.</summary>
      <returns>Uno dei valori di <see cref="T:System.IO.Packaging.CertificateEmbeddingOption" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm">
      <summary>Ottiene una stringa URI che identifica l'algoritmo hash predefinito usato per creare e verificare le firme.</summary>
      <returns>Stringa URI che identifica l'algoritmo hash predefinito utilizzato per creare e verificare le firme.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm">
      <summary>Ottiene o imposta l'identificatore URI per l'istanza di <see cref="T:System.Security.Cryptography.HashAlgorithm" /> usata per creare e verificare le firme.</summary>
      <exception cref="T:System.ArgumentNullException">La stringa per l'URI da impostare è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La stringa per l'URI da impostare è vuota.</exception>
      <returns>
        <see cref="T:System.Security.Cryptography.Xml.SignedXml" />Identificatore URI per l' <see cref="T:System.Security.Cryptography.HashAlgorithm" /> istanza di utilizzata per creare e verificare le firme.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned">
      <summary>Ottiene un valore che indica se il controllo del package contiene eventuali firme.</summary>
      <returns>
        <see langword="true" /> se nel package sono presenti firme; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow">
      <summary>Ottiene o imposta un handle sulla finestra padre per la visualizzazione di una finestra di dialogo per la selezione del certificato.</summary>
      <returns>L'handle della finestra padre da utilizzare per visualizzare la finestra di dialogo per la selezione del certificato.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin">
      <summary>Ottiene l'URI (Uniform Resource Identifier) della parte dell'origine della firma.</summary>
      <returns>URI della parte di origine della firma.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType">
      <summary>Ottiene il tipo di relazione di origine della firma predefinita.</summary>
      <returns>Il tipo di relazione di origine della firma predefinita.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.Signatures">
      <summary>Ottiene un insieme di tutte le firme contenute nel package.</summary>
      <returns>Un insieme di tutti gli oggetti di <see cref="T:System.IO.Packaging.PackageDigitalSignature" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat">
      <summary>Ottiene o imposta il formato di data/ora utilizzato per creare un firma di <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />.</summary>
      <returns>Il formato data/ora utilizzato per creare una firma di <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping">
      <summary>Ottiene un dizionario che contiene ogni elemento <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> definito e l'elemento XML <see cref="T:System.Security.Cryptography.Xml.Transform" />.<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" /> associato.</summary>
      <returns>Dizionario che contiene ogni definito <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> e il relativo oggetto associato XML <see cref="T:System.Security.Cryptography.Xml.Transform" /> .<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" /> associato.</returns>
    </member>
    <member name="T:System.IO.Packaging.RightsManagementInformation">
      <summary>Rappresenta le informazioni Digital Rights Management (DRM) archiviate in <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.DeleteUseLicense(System.Security.RightsManagement.ContentUser)">
      <summary>Elimina l'oggetto <see cref="T:System.Security.RightsManagement.UseLicense" /> per un utente specificato dal flusso di dati crittografati di Rights Management.</summary>
      <param name="userKey">Utente dell'oggetto <see cref="T:System.Security.RightsManagement.UseLicense" /> da eliminare.</param>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses">
      <summary>Restituisce un insieme di dizionari di utenti e coppie chiave/valore di <see cref="T:System.Security.RightsManagement.UseLicense" /> dal flusso di dati crittografati di Rights Management.</summary>
      <returns>Un insieme di utente e coppie chiave/valore di <see cref="T:System.Security.RightsManagement.UseLicense" /> contenuto nel package protetto da Rights Management.</returns>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.LoadPublishLicense">
      <summary>Restituisce l'oggetto incorporato <see cref="T:System.Security.RightsManagement.PublishLicense" /> dal flusso di dati crittografati di Rights Management.</summary>
      <exception cref="T:System.IO.FileFormatException">La versione corrente della classe non è in grado di leggere le informazioni di Rights Management contenute nel package.</exception>
      <returns>L'oggetto <see cref="T:System.Security.RightsManagement.PublishLicense" /> incorporato; oppure <see langword="null" />, se il package non contiene un oggetto <see cref="T:System.Security.RightsManagement.PublishLicense" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.LoadUseLicense(System.Security.RightsManagement.ContentUser)">
      <summary>Restituisce un oggetto incorporato <see cref="T:System.Security.RightsManagement.UseLicense" /> di un utente specificato dal flusso di dati crittografati di Rights Management.</summary>
      <param name="userKey">L'utente o il gruppo di utenti per cui restituire l'oggetto <see cref="T:System.Security.RightsManagement.UseLicense" />.</param>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="userKey" /> è <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileFormatException">La versione corrente della classe non è in grado di leggere le informazioni di Rights Management contenute nel package.</exception>
      <returns>
        <see cref="T:System.Security.RightsManagement.UseLicense" /> per l'utente specificato; o <see langword="null" />, se il package non contiene un oggetto <see cref="T:System.Security.RightsManagement.UseLicense" /> che corrisponde all'oggetto <paramref name="userKey" /> specificato.</returns>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.SavePublishLicense(System.Security.RightsManagement.PublishLicense)">
      <summary>Salva un oggetto <see cref="T:System.Security.RightsManagement.PublishLicense" /> predefinito nel flusso di dati crittografati di Rights Management.</summary>
      <param name="publishLicense">La licenza di pubblicazione per archiviare e incorporare nel package.</param>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="publishLicense" /> è <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileFormatException">La versione corrente della classe non è in grado di leggere le informazioni di Rights Management contenute nel package.</exception>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.SaveUseLicense(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense)">
      <summary>Salva un oggetto <see cref="T:System.Security.RightsManagement.UseLicense" /> predefinito per un utente specificato sul flusso di dati crittografati di Rights Management.</summary>
      <param name="userKey">Utente dell'oggetto <see cref="T:System.Security.RightsManagement.UseLicense" />.</param>
      <param name="useLicense">La licenza per archiviare e incorporare nel package.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="userKey" /> o <paramref name="useLicense" /> è <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileFormatException">La versione corrente della classe non è in grado di leggere le informazioni di Rights Management contenute nel package.</exception>
    </member>
    <member name="P:System.IO.Packaging.RightsManagementInformation.CryptoProvider">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.Security.RightsManagement.CryptoProvider" /> per accedere al flusso di dati crittografati di Rights Management del package.</summary>
      <returns>
        <see cref="T:System.Security.RightsManagement.CryptoProvider" /> per accedere all'informazioni di Rights Management.</returns>
    </member>
    <member name="T:System.IO.Packaging.SignatureVerificationEventArgs">
      <summary>Specifica gli argomenti dell'evento fornito a <see cref="T:System.IO.Packaging.InvalidSignatureEventHandler" />.</summary>
    </member>
    <member name="P:System.IO.Packaging.SignatureVerificationEventArgs.Signature">
      <summary>Ottiene la firma digitale da verificare.</summary>
      <returns>Firma digitale da verificare.</returns>
    </member>
    <member name="P:System.IO.Packaging.SignatureVerificationEventArgs.VerifyResult">
      <summary>Ottiene l'errore di verifica della firma.</summary>
      <returns>Errore di verifica della firma.</returns>
    </member>
    <member name="T:System.IO.Packaging.StorageInfo">
      <summary>Fornisce accesso e le informazioni per modificare archivi dati in un oggetto <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.CreateStream(System.String)">
      <summary>Crea un nuovo flusso con un nome specificato.</summary>
      <param name="name">Nome del nuovo flusso.</param>
      <returns>Nuovo flusso con il <paramref name="name" /> specificato.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.CreateStream(System.String,System.IO.Packaging.CompressionOption,System.IO.Packaging.EncryptionOption)">
      <summary>Crea un nuovo flusso con un nome specificato, <see cref="T:System.IO.Packaging.CompressionOption" />e <see cref="T:System.IO.Packaging.EncryptionOption" />.</summary>
      <param name="name">Nome del nuovo flusso.</param>
      <param name="compressionOption">L'opzione di compressione per il flusso di dati.</param>
      <param name="encryptionOption">Le opzioni di crittografia per il nuovo flusso di dati.</param>
      <returns>Nuovo flusso con il <paramref name="name" /> specificato, <paramref name="compressionOption" /> e <paramref name="encryptionOption" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.CreateSubStorage(System.String)">
      <summary>Crea un nuovo <see cref="T:System.IO.Packaging.StorageInfo" /> figlio con questo <see cref="T:System.IO.Packaging.StorageInfo" /> come elemento padre.</summary>
      <param name="name">Nome del nuovo archivio dati figlio.</param>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="name" /> è <see langword="null" />.</exception>
      <returns>Nuovo archivio dati figlio.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.DeleteStream(System.String)">
      <summary>Elimina il flusso con un nome specificato.</summary>
      <param name="name">Nome <see cref="T:System.IO.Packaging.StreamInfo" /> del flusso da eliminare.</param>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="name" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.DeleteSubStorage(System.String)">
      <summary>Elimina un archivio secondario specificato.</summary>
      <param name="name">Nome dell'archivio secondario da eliminare.</param>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="name" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetStreamInfo(System.String)">
      <summary>Restituisce l'istanza <see cref="T:System.IO.Packaging.StreamInfo" /> con il nome specificato.</summary>
      <param name="name">Nome dell'istanza <see cref="T:System.IO.Packaging.StreamInfo" /> da restituire.</param>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="name" /> è <see langword="null" />.</exception>
      <returns>Flusso con <paramref name="name" /> specificato.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetStreams">
      <summary>Restituisce una matrice delle istanze <see cref="T:System.IO.Packaging.StreamInfo" /> che sono attualmente contenute in questo archivio.</summary>
      <returns>Matrice degli oggetti <see cref="T:System.IO.Packaging.StreamInfo" />, ognuno dei quali fa riferimento a un flusso I/O definito all'interno di questo archivio.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetSubStorageInfo(System.String)">
      <summary>Restituisce l'archivio secondario figlio con un nome specificato.</summary>
      <param name="name">Nome dell'archivio secondario da restituire.</param>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="name" /> è <see langword="null" />.</exception>
      <returns>Archivio secondario figlio con l'oggetto <paramref name="name" /> specificato.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetSubStorages">
      <summary>Restituisce una matrice degli archivi secondari figlio attualmente contenuti in questo archivio.</summary>
      <returns>Matrice di oggetti <see cref="T:System.IO.Packaging.StorageInfo" />, ognuno dei quali fa riferimento a un archivio secondario definito all'interno di questo archivio.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.StreamExists(System.String)">
      <summary>Restituisce un valore che indica se un flusso specificato esiste.</summary>
      <param name="name">Il valore del parametro <see cref="T:System.IO.Packaging.StreamInfo" /> figlio da controllare.</param>
      <returns>
        <see langword="true" /> se un flusso con <paramref name="name" /> specificato è presente nell'insieme; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.SubStorageExists(System.String)">
      <summary>Restituisce un valore che indica se un archivio secondario figlio specifico esiste.</summary>
      <param name="name">Nome dell'oggetto <see cref="T:System.IO.Packaging.StorageInfo" /> figlio da controllare.</param>
      <returns>
        <see langword="true" /> se esiste un archivio secondario figlio con l'oggetto <paramref name="name" /> specificato. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.StorageInfo.Name">
      <summary>Ottiene il nome dell'archivio.</summary>
      <returns>Nome di questo archivio.</returns>
    </member>
    <member name="T:System.IO.Packaging.StreamInfo">
      <summary>Fornisce l'accesso e le informazioni per modificare i flussi I/O in un oggetto <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.StreamInfo.GetStream">
      <summary>Restituisce un flusso aperto in un predefinito <see cref="T:System.IO.FileMode" /> e <see cref="T:System.IO.FileAccess" />.</summary>
      <returns>Flusso I/O aperto nella radice predefinita <see cref="T:System.IO.Packaging.Package" /><see cref="T:System.IO.FileMode" /> e <see cref="T:System.IO.FileAccess" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.StreamInfo.GetStream(System.IO.FileMode)">
      <summary>Restituisce un flusso I/O aperto in un oggetto <see cref="T:System.IO.FileMode" /> specificato.</summary>
      <param name="mode">La modalità file nella quale aprire il flusso.</param>
      <returns>Il flusso aperto nel file <paramref name="mode" /> specificato.</returns>
    </member>
    <member name="M:System.IO.Packaging.StreamInfo.GetStream(System.IO.FileMode,System.IO.FileAccess)">
      <summary>Restituisce un flusso I/O aperto in un oggetto <see cref="T:System.IO.FileMode" /> specificato e con <see cref="T:System.IO.FileAccess" /> specificato.</summary>
      <param name="mode">La modalità file nella quale aprire il flusso.</param>
      <param name="access">Modalità accesso file nella quale leggere o scrivere nel flusso.</param>
      <returns>Flusso I/O aperto nell'oggetto <see cref="T:System.IO.FileMode" /> specificato e con <see cref="T:System.IO.FileAccess" /> specificato.</returns>
    </member>
    <member name="P:System.IO.Packaging.StreamInfo.CompressionOption">
      <summary>Ottiene l'impostazione dell'oggetto <see cref="T:System.IO.Packaging.CompressionOption" /> per il flusso.</summary>
      <returns>Impostazione dell'opzione di compressione per il flusso del package.</returns>
    </member>
    <member name="P:System.IO.Packaging.StreamInfo.EncryptionOption">
      <summary>Ottiene l'impostazione dell'oggetto <see cref="T:System.IO.Packaging.EncryptionOption" /> per il flusso.</summary>
      <returns>Impostazione delle opzioni di crittografia per il flusso del package.</returns>
    </member>
    <member name="P:System.IO.Packaging.StreamInfo.Name">
      <summary>Ottiene il nome del flusso.</summary>
      <returns>Nome di questo flusso.</returns>
    </member>
    <member name="T:System.IO.Packaging.VerifyResult">
      <summary>Specifica il risultato della verifica di un certificato o di una firma.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.CertificateRequired">
      <summary>Il certificato X.509 non è disponibile per verificare la firma.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.InvalidCertificate">
      <summary>Il certificato X.509 non è valido.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.InvalidSignature">
      <summary>La firma non è valida.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.NotSigned">
      <summary>Il pacchetto o la parte specificati non hanno firma.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.ReferenceNotFound">
      <summary>Una relazione del riferimento alla firma non è stata trovata.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.Success">
      <summary>La verifica ha avuto esito positivo.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.AuthenticationType">
      <summary>Specifica il metodo di autenticazione Rights Management.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.Internal">
      <summary>Autenticazione implicita per qualsiasi utente richiedente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.Passport">
      <summary>Autenticazione Windows Live ID.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.Windows">
      <summary>Autenticazione Windows in un ambiente di dominio aziendale.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.WindowsPassport">
      <summary>Autenticazione di Windows o Windows Live ID.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.ContentGrant">
      <summary>Rappresenta un diritto concesso a un utente per accedere alle informazioni in un documento protetto da Rights Management.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.RightsManagement.ContentGrant" /> che concede un oggetto <see cref="T:System.Security.RightsManagement.ContentUser" /> specificato a un oggetto <see cref="T:System.Security.RightsManagement.ContentRight" /> specificato.</summary>
      <param name="user">Utente a cui viene concessa l'autorizzazione di accesso.</param>
      <param name="right">Autorizzazione di accesso concessa.</param>
    </member>
    <member name="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight,System.DateTime,System.DateTime)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.RightsManagement.ContentGrant" /> che concede un oggetto <see cref="T:System.Security.RightsManagement.ContentUser" /> specificato a un oggetto <see cref="T:System.Security.RightsManagement.ContentRight" /> specificato per un intervallo di tempo <see cref="T:System.DateTime" /> specificato.</summary>
      <param name="user">Utente a cui viene concessa l'autorizzazione di accesso.</param>
      <param name="right">Autorizzazione di accesso concessa.</param>
      <param name="validFrom">Data e ora di inizio validità dell'autorizzazione.</param>
      <param name="validUntil">Data e ora di fine validità dell'autorizzazione.</param>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.Right">
      <summary>Ottiene l'oggetto <see cref="T:System.Security.RightsManagement.ContentRight" /> concesso.</summary>
      <returns>Autorizzazione di accesso concessa all'oggetto <see cref="P:System.Security.RightsManagement.ContentGrant.User" />, come specificato al costruttore <see cref="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.User">
      <summary>Ottiene l'utente a cui viene concesso l'oggetto <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> di accesso.</summary>
      <returns>Utente a cui viene concesso l'oggetto <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> di accesso, come specificato al costruttore <see cref="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.ValidFrom">
      <summary>Ottiene data e ora di inizio validità dell'oggetto <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> concesso.</summary>
      <returns>Data e ora di inizio dell'oggetto concesso <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> o <see cref="T:System.DateTime" /> .<see cref="F:System.DateTime.MinValue" /> Se non è presente alcuna limitazione iniziale.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.ValidUntil">
      <summary>Ottiene data e ora di fine validità dell'oggetto <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> concesso.</summary>
      <returns>Data e ora di scadenza dell'oggetto concesso <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> o <see cref="T:System.DateTime" /> .<see cref="F:System.DateTime.MaxValue" /> Se non esiste alcuna limitazione finale.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.ContentRight">
      <summary>Specifica i diritti che è possibile concedere agli utenti per accedere al contenuto di un documento protetto da Rights Management.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.DocumentEdit">
      <summary>L'utente può modificare il documento che contiene il contenuto protetto.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Edit">
      <summary>L'utente può modificare e crittografare il contenuto protetto.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Export">
      <summary>L'utente può esportare il contenuto protetto.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Extract">
      <summary>L'utente può estrarre (copiare e incollare) il contenuto protetto.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Forward">
      <summary>L'utente può inoltrare il contenuto protetto a un altro utente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.ObjectModel">
      <summary>L'utente può controllare l'accesso programmato al contenuto protetto.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Owner">
      <summary>L'utente è proprietario del contenuto.  Il proprietario può modificare e crittografare i contenuti protetti e decrittografare la classe <see cref="T:System.Security.RightsManagement.PublishLicense" /> firmata.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Print">
      <summary>L'utente può stampare il contenuto protetto.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Reply">
      <summary>L'utente può rispondere al mittente del contenuto protetto.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.ReplyAll">
      <summary>L'utente può rispondere a tutti i destinatari del contenuto protetto.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Sign">
      <summary>L'utente può firmare digitalmente il contenuto protetto.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.View">
      <summary>L'utente può visualizzare il contenuto protetto.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.ViewRightsData">
      <summary>L'utente può decrittografare e visualizzare i diritti specificati nella classe <see cref="T:System.Security.RightsManagement.PublishLicense" /> firmata.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.ContentUser">
      <summary>Rappresenta un utente o gruppo di utenti a cui concedere l'accesso al contenuto protetto da Rights Management.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.RightsManagement.ContentUser" />.</summary>
      <param name="name">Nome utente o del gruppo.</param>
      <param name="authenticationType">Metodo di autenticazione.</param>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.Equals(System.Object)">
      <summary>Restituisce un valore che indica se questo oggetto <see cref="T:System.Security.RightsManagement.ContentUser" /> è equivalente a un'altra istanza specificata.</summary>
      <param name="obj">Istanza utente da confrontare per l'uguaglianza.</param>
      <returns>
        <see langword="true" /> se <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> e <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" /> sono identici per questo utente e l'utente specificato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.GetHashCode">
      <summary>Restituisce un codice hash calcolato in base ai parametri <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> e <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" /> dell'utente.</summary>
      <returns>Codice hash calcolato in base ai parametri <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> e <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" /> dell'utente.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.IsAuthenticated">
      <summary>Restituisce un valore che indica se l'utente è attualmente autenticato.</summary>
      <returns>
        <see langword="true" /> se l'utente è attualmente autenticato; in caso contrario, <see langword="false" />.  L'impostazione predefinita è <see langword="false" /> fino all'avvenuta autenticazione.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.AnyoneUser">
      <summary>Ottiene un'istanza dell'utente tipo <see cref="T:System.Security.RightsManagement.ContentUser" /> "Tutti".</summary>
      <returns>Istanza dell'utente tipo <see cref="T:System.Security.RightsManagement.ContentUser" /> "Tutti".</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.AuthenticationType">
      <summary>Ottiene l'oggetto <see cref="T:System.Security.RightsManagement.AuthenticationType" /> specificato al costruttore <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />.</summary>
      <returns>Oggetto <see cref="T:System.Security.RightsManagement.AuthenticationType" /> specificato per il costruttore <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" /> .</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.Name">
      <summary>Ottiene il nome utente o del gruppo specificato per il costruttore <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />.</summary>
      <returns>Nome utente o del gruppo specificato per il costruttore <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.OwnerUser">
      <summary>Ottiene un'istanza dell'utente tipo <see cref="T:System.Security.RightsManagement.ContentUser" /> "Proprietario".</summary>
      <returns>Istanza dell'utente tipo <see cref="T:System.Security.RightsManagement.ContentUser" /> "Proprietario".</returns>
    </member>
    <member name="T:System.Security.RightsManagement.CryptoProvider">
      <summary>Fornisce servizi di gestione dei diritti digitali per crittografare e decrittografare il contenuto protetto.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])">
      <summary>Consente di decrittografare un testo crittografato.</summary>
      <param name="cryptoText">Testo crittografato da decrittografare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cipherText" /> è null.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException">Diritto di decrittografia non concesso.</exception>
      <returns>Testo decrittografato di <paramref name="cryptoText" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Dispose">
      <summary>Rilascia tutte le risorse usate da <see cref="T:System.Security.RightsManagement.CryptoProvider" />.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate da <see cref="T:System.Security.RightsManagement.CryptoProvider" /> e, facoltativamente, le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])">
      <summary>Crittografa testo non crittografato creando testo crittografato.</summary>
      <param name="clearText">Contenuto in testo non crittografato da crittografare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="clearText" /> è null.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException">La crittografia non è consentita.</exception>
      <returns>Testo crittografato dell'oggetto <paramref name="clearText" /> specifico.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Finalize">
      <summary>Rilascia risorse ed esegue operazioni di pulizia interna prima che l'istanza venga recuperata tramite Garbage Collection.</summary>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.BlockSize">
      <summary>Ottiene la dimensione del blocco crittografato, in byte.</summary>
      <returns>Dimensione del blocco crittografato, in byte.  La dimensione predefinita del blocco per Advanced Encryption Standard (AES) è 8.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.BoundGrants">
      <summary>Ottiene un insieme che elenca i diritti sottoposti a verifica e concessi all'utente.</summary>
      <returns>Insieme che enumera i diritti sottoposti a verifica e concessi all'utente.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt">
      <summary>Ottiene un valore che indica se l'utente possiede i diritti per decrittografare.</summary>
      <returns>
        <see langword="true" /> Se l'oggetto <see cref="T:System.Security.RightsManagement.UseLicense" /> concede i diritti utente per la decrittografia; in caso contrario, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt">
      <summary>Ottiene un valore che indica se l'utente possiede i diritti per crittografare.</summary>
      <returns>
        <see langword="true" /> Se <see cref="T:System.Security.RightsManagement.UseLicense" /> concede i diritti utente per la crittografia; in caso contrario, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks">
      <summary>Ottiene un valore che indica se <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> e <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> possono accettare buffer con una lunghezza dei blocchi diversa.</summary>
      <returns>
        <see langword="true" /> Se il buffer passato a <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> può avere una lunghezza diversa dal buffer passato a <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> ; in caso contrario, <see langword="false" /> se i buffer passati a <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> e <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> devono avere esattamente la stessa lunghezza.  Per AES il valore predefinito è <see langword="true" /> .</returns>
    </member>
    <member name="T:System.Security.RightsManagement.LocalizedNameDescriptionPair">
      <summary>Rappresenta una coppia non modificabile (di sola lettura) di stringhe "Nome" e "Descrizione".</summary>
    </member>
    <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.RightsManagement.LocalizedNameDescriptionPair" />.</summary>
      <param name="name">Valore della proprietà <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> delle impostazioni locali.</param>
      <param name="description">Valore della proprietà <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> delle impostazioni locali.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="name" /> o <paramref name="description" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.Equals(System.Object)">
      <summary>Indica se le proprietà <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> e <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> di un oggetto specificato corrispondono a quelle di questo oggetto <see cref="T:System.Security.RightsManagement.LocalizedNameDescriptionPair" />.</summary>
      <param name="obj">Oggetto del quale confrontare le proprietà <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> e <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" />.</param>
      <returns>
        <see langword="true" /> se le proprietà <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> e <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> dell'oggetto specificato corrispondono a quelle di questa istanza; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.GetHashCode">
      <summary>Ottiene un codice hash calcolato in base alle proprietà <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> e <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" />.</summary>
      <returns>Codice hash calcolato in base alle proprietà <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> e <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> di <see cref="T:System.Security.RightsManagement.LocalizedNameDescriptionPair" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description">
      <summary>Ottiene la descrizione delle impostazioni locali.</summary>
      <returns>Descrizione delle impostazioni locali.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name">
      <summary>Ottiene il nome delle impostazioni locali.</summary>
      <returns>Nome delle impostazioni locali.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.PublishLicense">
      <summary>Rappresenta una licenza di pubblicazione protetta da Rights Management.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.RightsManagement.PublishLicense" /> da un oggetto <see cref="T:System.Security.RightsManagement.PublishLicense" /> specifico, serializzato e firmato.</summary>
      <param name="signedPublishLicense">Oggetto licenza di pubblicazione firmato e serializzato.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="signedPublishLicense" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException">La licenza non è valida.</exception>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)">
      <summary>Tenta di acquisire un oggetto <see cref="T:System.Security.RightsManagement.UseLicense" /> per un utente o un gruppo di utenti in un oggetto <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> specificato.</summary>
      <param name="secureEnvironment">Ambiente protetto per l'attivazione e l'associazione di licenze.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="secureEnvironment" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException">L'autenticazione non è riuscita.</exception>
      <returns>
        <see cref="T:System.Security.RightsManagement.UseLicense" /> per un utente o un gruppo di utenti nell'oggetto <paramref name="secureEnvironment" />specificato.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI(System.Security.RightsManagement.SecureEnvironment)">
      <summary>Tenta di acquisire un oggetto <see cref="T:System.Security.RightsManagement.UseLicense" /> per un utente o un gruppo di utenti in un oggetto <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> specificato.</summary>
      <param name="secureEnvironment">Ambiente protetto per l'attivazione e l'associazione di licenze.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="secureEnvironment" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException">L'autenticazione non è riuscita.</exception>
      <returns>
        <see cref="T:System.Security.RightsManagement.UseLicense" /> per un utente o un gruppo di utenti nell'oggetto <paramref name="secureEnvironment" />specificato.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense(System.Security.RightsManagement.CryptoProvider)">
      <summary>Restituisce una versione <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" /> decrittografata dell'oggetto <see cref="T:System.Security.RightsManagement.PublishLicense" />firmato.</summary>
      <param name="cryptoProvider">Servizio Rights Management da utilizzare per decrittografare la licenza.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cryptoProvider" /> è <see langword="null" />.</exception>
      <returns>Versione decrittografata non firmata della licenza.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.ToString">
      <summary>Restituisce la stringa XrML serializzata usata per creare questa licenza.</summary>
      <returns>Stringa Extensible Rights Markup Language (XrML) serializzata usata per creare questa licenza.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.ContentId">
      <summary>Ottiene l'identificatore di contenuto creato dall'autore.</summary>
      <returns>Identificatore di contenuto creato dall'autore.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.ReferralInfoName">
      <summary>Ottiene il nome di contatto del creatore o autore del contenuto.</summary>
      <returns>Nome di contatto del creatore o autore del contenuto.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.ReferralInfoUri">
      <summary>Ottiene l'URI di contatto del creatore o autore del contenuto.</summary>
      <returns>URI (Uniform Resource Identifier) del contatto per l'autore o il server di pubblicazione del contenuto.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl">
      <summary>Ottiene l'URI da usare per l'acquisizione di un oggetto <see cref="T:System.Security.RightsManagement.UseLicense" />.</summary>
      <returns>URI da utilizzare per l'acquisizione di un oggetto <see cref="T:System.Security.RightsManagement.UseLicense" /> .</returns>
    </member>
    <member name="T:System.Security.RightsManagement.RightsManagementException">
      <summary>Rappresenta una condizione di errore nel caso in cui un'operazione Rights Management non può essere completata correttamente.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.RightsManagement.RightsManagementException" />.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.RightsManagement.RightsManagementException" /> e imposta l'archivio <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con le informazioni sull'eccezione.</summary>
      <param name="info">Oggetto contenente i dati serializzati.</param>
      <param name="context">Informazioni contestuali sull'origine o sulla destinazione.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.RightsManagement.RightsManagementException" /> con un oggetto <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> specificato.</summary>
      <param name="failureCode">Codice di errore per l'errore.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.RightsManagement.RightsManagementException" /> con un oggetto <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> e un oggetto <see cref="P:System.Exception.InnerException" /> specificati.</summary>
      <param name="failureCode">Codice di errore per l'errore.</param>
      <param name="innerException">Istanza di eccezione che ha causato l'errore.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.RightsManagement.RightsManagementException" /> con un oggetto <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> e un oggetto <see cref="P:System.Exception.Message" /> specificati.</summary>
      <param name="failureCode">Codice di errore per l'errore.</param>
      <param name="message">Messaggio in cui viene descritto l'errore,</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.RightsManagement.RightsManagementException" /> con un oggetto <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" />, un oggetto <see cref="P:System.Exception.Message" /> e un oggetto <see cref="P:System.Exception.InnerException" /> specificati.</summary>
      <param name="failureCode">Codice di errore per l'errore.</param>
      <param name="message">Messaggio in cui viene descritto l'errore,</param>
      <param name="innerException">Istanza di eccezione che ha causato l'errore.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.RightsManagement.RightsManagementException" /> con un messaggio specificato.</summary>
      <param name="message">Messaggio in cui viene descritto l'errore,</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.RightsManagement.RightsManagementException" /> con un oggetto <see cref="P:System.Exception.Message" /> e un oggetto <see cref="P:System.Exception.InnerException" /> specificati.</summary>
      <param name="message">Messaggio in cui viene descritto l'errore,</param>
      <param name="innerException">Istanza di eccezione che ha causato questa eccezione.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Imposta l'archivio <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con il nome del parametro e le informazioni sull'eccezione.</summary>
      <param name="info">Oggetto contenente i dati serializzati.</param>
      <param name="context">Informazioni contestuali sull'origine o sulla destinazione.</param>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.RightsManagementException.FailureCode">
      <summary>Ottiene <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> per l'errore.</summary>
      <returns>Codice di errore per l'errore.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.RightsManagementFailureCode">
      <summary>Specifica le condizioni di errore che possono verificarsi quando si esegue un'operazione Rights Management.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.Aborted">
      <summary>L'operazione asincrona è stata annullata o si è verificato un errore irreversibile.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ActivationFailed">
      <summary>La licenza non è stata attivata. Rights Management Services non è configurato correttamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.AdEntryNotFound">
      <summary>L'utente corrente non è stato trovato in Active Directory (AD) per la certificazione nell'autenticazione di Windows.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.AlreadyInProgress">
      <summary>L'operazione richiesta è già in corso.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.AuthenticationFailed">
      <summary>È stato restituito un possibile errore di autenticazione (errore HTTP 401) da una richiesta Internet. In alternativa, l'utente corrente non dispone di credenziali di dominio valide in un tentativo di attivazione invisibile all'utente. In alternativa, il server di certificazione nell'attivazione invisibile all'utente non si trova nell'intranet locale o nell'area siti attendibili.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BadGetInfoQuery">
      <summary>È stata passata una costante non valida.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindAccessPrincipalNotEnabling">
      <summary>La condizione di accesso non ha corrispondenza con l'entità di abilitazione passata nell'associazione.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindAccessUnsatisfied">
      <summary>L'utente corrente non soddisfa le condizioni definite nel contratto di licenza con l'utente finale.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindContentNotInEndUseLicense">
      <summary>La risorsa specificata non è inclusa in alcun nodo WORK della licenza.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindIndicatedPrincipalMissing">
      <summary>L'entità di abilitazione non corrisponde all'entità rilasciata del contratto di licenza con l'utente finale.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindIntervalTimeViolated">
      <summary>Il periodo di tempo definito per il contenuto protetto è scaduto. L'accesso non è più consentito.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindMachineNotFoundInGroupIdentity">
      <summary>Il computer corrente non è definito all'interno dell'identità di gruppo protetta da Rights Management.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindNoApplicableRevocationList">
      <summary>L'utente corrente non dispone dei diritti di accesso al contenuto protetto.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindNoSatisfiedRightsGroup">
      <summary>Il gruppo di diritti specificato non è incluso nel contratto di licenza con l'utente finale.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindPolicyViolation">
      <summary>L'utente corrente non dispone dei diritti di accesso al contenuto protetto.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevocationListStale">
      <summary>La licenza richiede l'acquisizione di un nuovo elenco di revoche.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedIssuer">
      <summary>L'utente corrente non dispone dei diritti di accesso al contenuto protetto.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedLicense">
      <summary>L'utente corrente non dispone dei diritti di accesso al contenuto protetto.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedModule">
      <summary>Rights Management Services non è configurato correttamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedPrincipal">
      <summary>L'utente corrente non dispone dei diritti di accesso al contenuto protetto.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedResource">
      <summary>L'utente corrente non dispone dei diritti di accesso al contenuto protetto.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindSpecifiedWorkMissing">
      <summary>Il contratto di licenza con l'utente finale non contiene alcun nodo WORK.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindValidityTimeViolated">
      <summary>Il periodo di tempo definito per il contenuto protetto è scaduto. L'accesso non è più consentito.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BrokenCertChain">
      <summary>La catena di certificati di Rights Management è interrotta.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ClockRollbackDetected">
      <summary>È stato rilevato il rollback dell'orologio. Non è possibile accedere al contenuto protetto.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.CryptoOperationUnsupported">
      <summary>Un'operazione di crittografia richiesta non è supportata. Un esempio è l'operazione per passare un oggetto di crittografia RMS per scopi di decrittografia.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.DebuggerDetected">
      <summary>Non è possibile aprire o pubblicare contenuto con autorizzazioni limitate perché è stato rilevato un debugger.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EmailNotVerified">
      <summary>Non è possibile verificare l'indirizzo di posta elettronica dell'utente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EnablingPrincipalFailure">
      <summary>L'entità di sicurezza specificata non può essere abilitata.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EncryptionNotPermitted">
      <summary>La crittografia non è consentita.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EnvironmentCannotLoad">
      <summary>Non è possibile caricare l'oggetto <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EnvironmentNotLoaded">
      <summary>Non è possibile caricare l'oggetto <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ExpiredOfficialIssuanceLicenseTemplate">
      <summary>Il periodo di autorizzazione definito nel modello di licenza di pubblicazione è scaduto. L'accesso non è più consentito.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.GlobalOptionAlreadySet">
      <summary>L'opzione specificata è già stata impostata.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.GroupIdentityNotSet">
      <summary>Non è stato specificato un nome utente per la sessione client.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.HidCorrupted">
      <summary>Il formato dell'ID hardware usato in un tentativo di attivazione di computer non è corretto. Rights Management Services non è configurato correttamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.HidInvalid">
      <summary>L'ID hardware usato in un tentativo di attivazione di computer non è valido. Rights Management Services non è configurato correttamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.IdMismatch">
      <summary>L'ID contenuto della licenza non corrisponde all'ID contenuto della sessione di archiviazione della licenza.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.IncompatibleObjects">
      <summary>Un tipo di oggetto passato è incompatibile con questa operazione.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InfoNotInLicense">
      <summary>Durante la creazione di una licenza associata è stata specificata una licenza di pubblicazione, non un contratto di licenza con l'utente finale.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InfoNotPresent">
      <summary>Alcune informazioni non sono presenti.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InstallationFailed">
      <summary>Un'operazione di installazione non è riuscita.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidAlgorithmType">
      <summary>Il tipo di algoritmo specificato non è valido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidClientLicensorCertificate">
      <summary>Rights Management Services non è configurato correttamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidEmail">
      <summary>La verifica dell'indirizzo di posta elettronica del server RMS non è riuscita.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidEncodingType">
      <summary>Il tipo di codifica specificato non è valido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidHandle">
      <summary>L'handle dell'ambiente o quello dell'entità di abilitazione non è valido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidIssuanceLicenseTemplate">
      <summary>Il modello di Rights Management Services contiene uno o più errori.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidKeyLength">
      <summary>La lunghezza della chiave specificata in una coppia chiave/valore non è valida.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLicense">
      <summary>La struttura della licenza in uno dei certificati non è valida.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLicenseSignature">
      <summary>Non è possibile convalidare un certificato digitale firmato mediante Rights Management. Il certificato firmato può essere stato manomesso.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLockboxPath">
      <summary>Rights Management Services non è configurato correttamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLockboxType">
      <summary>Rights Management Services non è configurato correttamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidNumericalValue">
      <summary>Il valore numerico specificato non è valido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidRegistryPath">
      <summary>Il percorso del Registro di sistema specificato non è valido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidServerResponse">
      <summary>Rights Management Services non è configurato correttamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidTimeInfo">
      <summary>Le informazioni di tempo specificate non sono valide.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidVersion">
      <summary>La versione di Rights Management non è corretta.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.KeyTypeUnsupported">
      <summary>Il tipo di chiave specificato in una coppia chiave/valore non è supportato.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LibraryFail">
      <summary>Un'operazione su libreria non è riuscita.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LibraryUnsupportedPlugIn">
      <summary>Il plug-in di libreria specificato non è supportato.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LicenseAcquisitionFailed">
      <summary>Non è stato possibile acquisire un contratto di licenza con l'utente finale dal server Rights Management.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LicenseBindingToWindowsIdentityFailed">
      <summary>Le credenziali dell'utente corrente non sono valide per l'acquisizione di una licenza.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ManifestPolicyViolation">
      <summary>Un'operazione viola i criteri del manifesto di Rights Management.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.MetadataNotSet">
      <summary>Non è stato possibile impostare i metadati specificati.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NeedsGroupIdentityActivation">
      <summary>L'utente non è attivato oppure non è stato inviato alcun certificato per account con diritti e nell'archivio licenze non è stato trovato alcun certificato corrispondente alla licenza associata a questa sessione.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NeedsMachineActivation">
      <summary>Il computer deve essere attivato prima di poter attivare l'utente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoAesCryptoProvider">
      <summary>Rights Management Services non è configurato correttamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoConnect">
      <summary>Rights Management non è in grado di collegarsi all'URI specificato per il server licenze.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoDistributionPointUrlFound">
      <summary>Il contenuto protetto è danneggiato.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoLicense">
      <summary>Non è disponibile una licenza necessaria.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoMoreData">
      <summary>In corrispondenza dell'indice specificato non esistono né licenze né certificati.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NotAChain">
      <summary>Il contenuto protetto da Rights Management è danneggiato.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NotSet">
      <summary>L'elemento di cui è stata richiesta l'eliminazione non esiste.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.OutdatedModule">
      <summary>Rights Management Services non è configurato correttamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.OutOfQuota">
      <summary>Nel server licenze è stata raggiunta la quota massima di contratti di licenza per l'utente finale.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.OwnerLicenseNotFound">
      <summary>Il documento non contiene una licenza come proprietario.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.QueryReportsNoResults">
      <summary>Non esiste alcuna istanza dell'attributo richiesto.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RecordNotFound">
      <summary>La licenza specificata non è stata trovata.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RequestDenied">
      <summary>Il server Rights Management non consente la certificazione temporanea dell'utente corrente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RevocationInfoNotSet">
      <summary>Le informazioni di revoca del certificato o della licenza non sono state impostate.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RightNotGranted">
      <summary>L'utente corrente non dispone dei diritti di accesso al contenuto protetto.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RightNotSet">
      <summary>Il diritto richiesto non è stato specificato al momento della pubblicazione del contenuto con Rights Management.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServerError">
      <summary>Rights Management Services non è configurato correttamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServerNotFound">
      <summary>Rights Management Services non è configurato correttamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServiceGone">
      <summary>Rights Management Services non è configurato correttamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServiceMoved">
      <summary>Rights Management Services non è configurato correttamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServiceNotFound">
      <summary>Rights Management Services non è configurato correttamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.Success">
      <summary>L'operazione è stata eseguita.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.TooManyCertificates">
      <summary>Il numero di certificati ha superato il valore massimo consentito.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.TooManyLoadedEnvironments">
      <summary>Sono state create troppe istanze di <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.UnexpectedException">
      <summary>Si è verificato un errore non specificato.  Viene generato anche quando un'applicazione viene eseguita in modalità debug.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.UseDefault">
      <summary>Se viene effettuata una richiesta per l'attivazione di computer o per un certificato per account con diritti, la ricezione della funzione <see cref="F:System.Security.RightsManagement.RightsManagementFailureCode.UseDefault" /> indica che l'applicazione deve passare <see langword="null" /> nel parametro ActServInfo.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ValidityTimeViolation">
      <summary>Il periodo di tempo definito per il contenuto protetto è scaduto. L'accesso non è più consentito.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.SecureEnvironment">
      <summary>Rappresenta una sessione client sicura per l'attivazione utente, l'associazione delle licenze e altre operazioni Rights Management.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.AuthenticationType,System.Security.RightsManagement.UserActivationMode)">
      <summary>Crea una sessione client sicura dati un manifesto di diritti dell'applicazione, un oggetto <see cref="T:System.Security.RightsManagement.AuthenticationType" /> e un oggetto <see cref="T:System.Security.RightsManagement.UserActivationMode" />.</summary>
      <param name="applicationManifest">Manifesto di diritti dell'applicazione.</param>
      <param name="authentication">Metodo di autenticazione.</param>
      <param name="userActivationMode">Tipo di certificato dell'account con diritti utente.</param>
      <returns>Sessione client sicura per l'attivazione, l'associazione delle licenze e altre operazioni Rights Management.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)">
      <summary>Crea una sessione client protetta per un utente specificato con un manifesto di diritti specificato.</summary>
      <param name="applicationManifest">Manifesto di diritti dell'applicazione.</param>
      <param name="user">Utente o gruppo di utenti a cui concedere l'accesso a contenuto protetto da Rights Management.</param>
      <returns>Sessione client sicura per l'attivazione, l'associazione delle licenze e altre operazioni Rights Management.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Dispose">
      <summary>Rilascia tutte le risorse usate da <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate da <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> e, facoltativamente, le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers">
      <summary>Restituisce un elenco degli utenti attivati.</summary>
      <returns>Elenco degli utenti attualmente attivati.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.IsUserActivated(System.Security.RightsManagement.ContentUser)">
      <summary>Indica se un determinato utente è stato attivato per l'accesso a contenuto protetto da Rights Management.</summary>
      <param name="user">Utente o gruppo di utenti a cui concedere l'accesso a contenuto protetto da Rights Management.</param>
      <returns>
        <see langword="true" /> se l'elemento <paramref name="user" /> specifico è stato attivato per l'accesso a contenuto protetto da Rights Management; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser(System.Security.RightsManagement.ContentUser)">
      <summary>Rimuove l'attivazione delle licenze per un utente specificato.</summary>
      <param name="user">Utente per il quale rimuovere l'attivazione delle licenze.</param>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="user" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore del parametro <paramref name="user" /> specificato non viene autenticato mediante l'autenticazione di Windows o l'autenticazione Passport.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest">
      <summary>Ottiene l'oggetto <see cref="P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest" /> specificato al momento della creazione di <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
      <returns>Manifesto dell'applicazione specificato nel metodo <see cref="Overload:System.Security.RightsManagement.SecureEnvironment.Create" /> al momento della creazione di <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.SecureEnvironment.User">
      <summary>Ottiene l'utente o il gruppo di utenti specificato al momento della creazione di <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
      <returns>Utente o gruppo di utenti specificato nel metodo <see cref="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)" /> al momento della creazione di <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.UnsignedPublishLicense">
      <summary>Rappresenta un oggetto <see cref="T:System.Security.RightsManagement.PublishLicense" /> protetto da Rights Management non firmato o un modello <see cref="T:System.Security.RightsManagement.PublishLicense" /> non firmato.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" /> da un modello di licenza di pubblicazione XrML specificato.</summary>
      <param name="publishLicenseTemplate">Modello di licenza di pubblicazione Extensible Rights Markup Language (XrML) da usare per creare questa licenza.</param>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)">
      <summary>Crea un oggetto <see cref="T:System.Security.RightsManagement.PublishLicense" /> firmato e restituisce un oggetto <see cref="T:System.Security.RightsManagement.UseLicense" /> per l'autore del documento.</summary>
      <param name="secureEnvironment">Ambiente protetto per l'attivazione e l'associazione di licenze.</param>
      <param name="authorUseLicense">Oggetto <see cref="T:System.Security.RightsManagement.UseLicense" /> restituito per l'autore del documento.</param>
      <returns>Oggetto <see cref="T:System.Security.RightsManagement.PublishLicense" /> firmato creato tramite la firma di <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.ToString">
      <summary>Restituisce un modello serializzato creato dall'oggetto XrML di <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />.</summary>
      <returns>Modello serializzato creato dall'oggetto XrML di <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ContentId">
      <summary>Ottiene o imposta l'identificatore di contenuto protetto creato dall'editore.</summary>
      <returns>Identificatore di contenuto protetto creato dall'editore.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.Grants">
      <summary>Ottiene un insieme di diritti utente assegnati.</summary>
      <returns>Insieme di diritti utente assegnati forniti dalla licenza.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary">
      <summary>Ottiene un insieme di coppie di nomi e descrizioni.</summary>
      <returns>Insieme di coppie di nomi e descrizioni.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.Owner">
      <summary>Ottiene o imposta il proprietario del contenuto.</summary>
      <returns>Utente proprietario del contenuto pubblicato.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName">
      <summary>Ottiene o imposta il nome di contatto del creatore o autore del contenuto.</summary>
      <returns>Nome di contatto del creatore o autore del contenuto.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri">
      <summary>Ottiene o imposta l'URI di contatto del creatore o autore del contenuto.</summary>
      <returns>URI (Uniform Resource Identifier) del contatto per l'autore o il server di pubblicazione del contenuto.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.UseLicense">
      <summary>Rappresenta una licenza che consente l'accesso a contenuto protetto.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.RightsManagement.UseLicense" />.</summary>
      <param name="useLicense">Contratto di licenza con l'utente finale nel modulo Extensible Rights Markup Language (XrML) serializzato.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="useLicense" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException">
        <paramref name="useLicense" /> non è valido.</exception>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)">
      <summary>Associa la licenza a un oggetto <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> specificato.</summary>
      <param name="secureEnvironment">Ambiente a cui associare la licenza.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="secureEnvironment" /> è <see langword="null" />.</exception>
      <returns>Istanza di <see cref="T:System.Security.RightsManagement.CryptoProvider" /> se l'associazione della licenza riesce. In caso contrario, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.Equals(System.Object)">
      <summary>Indica se questa licenza è equivalente a un'altra licenza specificata.</summary>
      <param name="x">Licenza da confrontare.</param>
      <returns>
        <see langword="true" /> se le due licenze sono equivalenti; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.GetHashCode">
      <summary>Restituisce il codice hash associato a questa licenza.</summary>
      <returns>Codice hash per la licenza.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.ToString">
      <summary>Restituisce la stringa XrML serializzata utilizzata per creare questa licenza.</summary>
      <returns>Stringa Extensible Rights Markup Language (XrML) serializzata originariamente passata al costruttore <see cref="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UseLicense.ApplicationData">
      <summary>Ottiene il dizionario dei dati dell'applicazione contenente le coppie chiave/valore passate dall'applicazione di pubblicazione all'applicazione di utilizzo.</summary>
      <returns>Dizionario dei dati dell'applicazione contenente le coppie chiave/valore passate dall'applicazione di pubblicazione all'applicazione di utilizzo.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UseLicense.ContentId">
      <summary>Ottiene l'identificatore di contenuto creato dal server di pubblicazione.</summary>
      <returns>Identificatore di contenuto creato dal server di pubblicazione.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UseLicense.Owner">
      <summary>Ottiene il proprietario della licenza.</summary>
      <returns>Proprietario della licenza.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.UserActivationMode">
      <summary>Specifica il tipo di certificato per account con diritti (RAC, Rights Account Certificate) utente da richiedere per l'attivazione di Rights Management.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.UserActivationMode.Permanent">
      <summary>Certificato per account con diritti permanente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.UserActivationMode.Temporary">
      <summary>Certificato per account con diritti temporaneo.</summary>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableAttribute">
      <summary>Fornisce una classe base per gli attributi di .NET Framework che indicano l'ambito d'uso delle proprietà associate.</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.AttachedPropertyBrowsableAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute">
      <summary>Specifica che una proprietà associata è esplorabile solo per gli elementi che derivano da un tipo specificato.</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.#ctor(System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> utilizzando le classi fornite <paramref name="targetType" />.</summary>
      <param name="targetType">Tipo desiderato che definisce l'ambito dell'uso della proprietà associata a cui si applica attributo .NET Framework.</param>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.Equals(System.Object)">
      <summary>Determina se l' <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> attributo .NET Framework oggetto corrente è uguale a un oggetto specificato.</summary>
      <param name="obj">L'oggetto <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> da confrontare con l'oggetto <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> corrente.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> specificato è uguale all'oggetto <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.GetHashCode">
      <summary>Restituisce il codice hash per questo oggetto <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> attributo .NET Framework.</summary>
      <returns>Valore intero senza segno a 32 bit.</returns>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableForTypeAttribute.TargetType">
      <summary>Ottiene il tipo di base che definisce l'ambito dell'uso della proprietà associata in cui si applica questo attributo .NET Framework.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> richiesto.</returns>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableForTypeAttribute.TypeId">
      <summary>Ottiene un identificatore di tipo univoco per l'oggetto <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> attributo .NET Framework .</summary>
      <returns>Un oggetto che rappresenta l'identificatore univoco di <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> .</returns>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute">
      <summary>Specifica che una proprietà associata è esplorabile solo per un elemento che ha anche un altro attributo di .NET Framework specifico applicato alla definizione della classe corrispondente.</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.#ctor(System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" />.</summary>
      <param name="attributeType">
        <see cref="T:System.Type" /> dell'attributo .NET Framework che deve essere applicato anche in una classe perché la proprietà associata sia esplorabile nella classe in cui <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> viene applicato.</param>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.Equals(System.Object)">
      <summary>Determina se l' <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> attributo .NET Framework oggetto corrente è uguale a un oggetto specificato.</summary>
      <param name="obj">L'oggetto <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> da confrontare con l'oggetto <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> corrente.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> specificato è uguale all'oggetto <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.GetHashCode">
      <summary>Restituisce il codice hash per questo oggetto <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> attributo .NET Framework.</summary>
      <returns>Valore intero senza segno a 32 bit.</returns>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.AttributeType">
      <summary>Ottiene il tipo di attributo .NET Framework che deve anche essere applicato in una classe.</summary>
      <returns>attributo .NET FrameworkTipo.</returns>
    </member>
    <member name="T:System.Windows.BaseCompatibilityPreferences">
      <summary>Contiene proprietà che specificano come un'applicazione deve comportarsi in relazione alle nuove funzionalità WPF presenti nell'assembly WindowsBase.</summary>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.FlowDispatcherSynchronizationContextPriority">
      <summary>Ottiene o imposta un valore che indica le informazioni su <see cref="P:System.Windows.Threading.DispatcherOperation.Priority" /> vengono salvate in <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />.</summary>
      <returns>
        <see langword="true" /> se le informazioni su <see cref="P:System.Windows.Threading.DispatcherOperation.Priority" /> vengono salvate in <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailure">
      <summary>Definisce le reazioni del dispatcher agli errori riscontrati quando richiede l'elaborazione.</summary>
      <returns>Valore che definisce come il dispatcher reagisce agli errori.</returns>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.InlineDispatcherSynchronizationContextSend">
      <summary>Ottiene o imposta un valore che indica se il metodo <see cref="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" /> inserisce i delegati nella coda del dispatcher o se il delegato viene richiamato direttamente.</summary>
      <returns>
        <see langword="true" /> se il metodo <see cref="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" /> inserisce i delegati nella coda del dispatcher o se il delegato viene richiamato direttamente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.ReuseDispatcherSynchronizationContextInstance">
      <summary>Ottiene o imposta un valore che indica se un'unico oggetto <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> viene utilizzato per più operazioni del dispatcher.</summary>
      <returns>true se viene utilizzato un oggetto <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> singolo per più operazioni del dispatcher; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions">
      <summary>Specifica un insieme di valori che descrive come il dispatcher risponde agli errori che si verificano durante l'elaborazione delle richieste.</summary>
    </member>
    <member name="F:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions.Continue">
      <summary>Continuare dopo l'errore.  
  
 Rappresenta il valore predefinito. Definisce il comportamento del dispatcher di Windows Presentation Foundation precedente a .NET Framework 4.7.1. Quando questa opzione è selezionata, il dispatcher potrebbe non rispondere.</summary>
    </member>
    <member name="F:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions.Reset">
      <summary>Reimpostare lo stato del dispatcher per una nuova richiesta, quando sarà necessaria.  
  
 Anche se questa opzione può risolvere il problema della mancata risposta, non consente di rispettare i tempi di elaborazione consueti, aspetto che può rivelarsi cruciale. Se si seleziona questa opzione potrebbero verificarsi comportamenti imprevisti.</summary>
    </member>
    <member name="F:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions.Throw">
      <summary>Generazione di un'eccezione.  
  
 Questa opzione porta immediatamente il problema all'attenzione dello sviluppatore dell'applicazione.</summary>
    </member>
    <member name="T:System.Windows.CoerceValueCallback">
      <summary>Fornisce un modello per un metodo chiamato ogni volta che un valore della proprietà di dipendenza viene rivalutato o se è specificamente richiesta la coercizione.</summary>
      <param name="d">Oggetto nel quale esiste la proprietà. Quando viene richiamato il callback, il sistema di proprietà passa questo valore.</param>
      <param name="baseValue">Nuovo valore della proprietà prima dei tentativi di coercizione.</param>
      <returns>Valore assegnato tramite coercizione (del tipo appropriato).</returns>
    </member>
    <member name="T:System.Windows.Converters.Int32RectValueSerializer">
      <summary>Converte istanze dell'oggetto <see cref="T:System.String" /> in istanze dell'oggetto <see cref="T:System.Windows.Int32Rect" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Converters.Int32RectValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determina se l'oggetto <see cref="T:System.String" /> specificato può essere convertito in un'istanza di <see cref="T:System.Windows.Int32Rect" />.</summary>
      <param name="value">Stringa da valutare per la conversione.</param>
      <param name="context">Informazioni di contesto utilizzate per la conversione.</param>
      <returns>Restituisce sempre <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determina se l'oggetto <see cref="T:System.Windows.Int32Rect" /> specificato può essere convertito in un <see cref="T:System.String" />.</summary>
      <param name="value">Oggetto di cui valutare la conversione.</param>
      <param name="context">Informazioni di contesto utilizzate per la conversione.</param>
      <returns>
        <see langword="true" /> se l'oggetto <paramref name="value" /> può essere convertito in un oggetto <see cref="T:System.String" />. In caso contrario, <see langword="false" /></returns>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converte <see cref="T:System.String" /> in <see cref="T:System.Windows.Int32Rect" />.</summary>
      <param name="value">Stringa da convertire.</param>
      <param name="context">Informazioni di contesto utilizzate per la conversione.</param>
      <returns>Nuova istanza di <see cref="T:System.Windows.Int32Rect" /> basata sull'oggetto <paramref name="value" /> specificato.</returns>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converte un'istanza di <see cref="T:System.Windows.Int32Rect" /> in <see cref="T:System.String" />.</summary>
      <param name="value">Oggetto da convertire in una stringa.</param>
      <param name="context">Informazioni di contesto utilizzate per la conversione.</param>
      <returns>Rappresentazione di stringa dell'elemento <see cref="T:System.Windows.Int32Rect" /> specificato.</returns>
    </member>
    <member name="T:System.Windows.Converters.PointValueSerializer">
      <summary>Converte istanze dell'oggetto <see cref="T:System.String" /> in istanze dell'oggetto <see cref="T:System.Windows.Point" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Converters.PointValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determina se l'oggetto <see cref="T:System.String" /> specificato può essere convertito in un'istanza di <see cref="T:System.Windows.Point" />.</summary>
      <param name="value">Stringa da valutare per la conversione.</param>
      <param name="context">Informazioni di contesto utilizzate per la conversione.</param>
      <returns>Restituisce sempre <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determina se l'oggetto <see cref="T:System.Windows.Point" /> specificato può essere convertito in un <see cref="T:System.String" />.</summary>
      <param name="value">Oggetto di cui valutare la conversione.</param>
      <param name="context">Informazioni di contesto utilizzate per la conversione.</param>
      <returns>
        <see langword="true" /> se l'oggetto <paramref name="value" /> può essere convertito in un oggetto <see cref="T:System.String" />. In caso contrario, <see langword="false" /></returns>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converte <see cref="T:System.String" /> in <see cref="T:System.Windows.Point" />.</summary>
      <param name="value">Stringa da convertire.</param>
      <param name="context">Informazioni di contesto utilizzate per la conversione.</param>
      <returns>Nuova istanza di <see cref="T:System.Windows.Point" /> basata sull'oggetto <paramref name="value" /> specificato.</returns>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converte un'istanza di <see cref="T:System.Windows.Point" /> in <see cref="T:System.String" />.</summary>
      <param name="value">Oggetto da convertire in una stringa.</param>
      <param name="context">Informazioni di contesto utilizzate per la conversione.</param>
      <returns>Rappresentazione di stringa dell'elemento <see cref="T:System.Windows.Point" /> specificato.</returns>
    </member>
    <member name="T:System.Windows.Converters.RectValueSerializer">
      <summary>Converte istanze dell'oggetto <see cref="T:System.String" /> in istanze dell'oggetto <see cref="T:System.Windows.Rect" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Converters.RectValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determina se l'oggetto <see cref="T:System.String" /> specificato può essere convertito in un'istanza di <see cref="T:System.Windows.Rect" />.</summary>
      <param name="value">Stringa da valutare per la conversione.</param>
      <param name="context">Informazioni di contesto utilizzate per la conversione.</param>
      <returns>Restituisce sempre <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determina se l'oggetto <see cref="T:System.Windows.Rect" /> specificato può essere convertito in un <see cref="T:System.String" />.</summary>
      <param name="value">Oggetto di cui valutare la conversione.</param>
      <param name="context">Informazioni di contesto utilizzate per la conversione.</param>
      <returns>
        <see langword="true" /> se l'oggetto <paramref name="value" /> può essere convertito in un oggetto <see cref="T:System.String" />. In caso contrario, <see langword="false" /></returns>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converte <see cref="T:System.String" /> in <see cref="T:System.Windows.Rect" />.</summary>
      <param name="value">Stringa da convertire.</param>
      <param name="context">Informazioni di contesto utilizzate per la conversione.</param>
      <returns>Nuova istanza di <see cref="T:System.Windows.Rect" /> basata sull'oggetto <paramref name="value" /> specificato.</returns>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converte un'istanza di <see cref="T:System.Windows.Rect" /> in <see cref="T:System.String" />.</summary>
      <param name="value">Oggetto da convertire in una stringa.</param>
      <param name="context">Informazioni di contesto utilizzate per la conversione.</param>
      <returns>Rappresentazione di stringa dell'elemento <see cref="T:System.Windows.Rect" /> specificato.</returns>
    </member>
    <member name="T:System.Windows.Converters.SizeValueSerializer">
      <summary>Converte istanze dell'oggetto <see cref="T:System.String" /> in istanze dell'oggetto <see cref="T:System.Windows.Size" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Converters.SizeValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determina se l'oggetto <see cref="T:System.String" /> specificato può essere convertito in un'istanza di <see cref="T:System.Windows.Size" />.</summary>
      <param name="value">Stringa da valutare per la conversione.</param>
      <param name="context">Informazioni di contesto utilizzate per la conversione.</param>
      <returns>Restituisce sempre <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determina se l'oggetto <see cref="T:System.Windows.Size" /> specificato può essere convertito in un <see cref="T:System.String" />.</summary>
      <param name="value">Oggetto di cui valutare la conversione.</param>
      <param name="context">Informazioni di contesto utilizzate per la conversione.</param>
      <returns>
        <see langword="true" /> se l'oggetto <paramref name="value" /> può essere convertito in un oggetto <see cref="T:System.String" />. In caso contrario, <see langword="false" /></returns>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converte <see cref="T:System.String" /> in <see cref="T:System.Windows.Size" />.</summary>
      <param name="value">Stringa da convertire.</param>
      <param name="context">Informazioni di contesto utilizzate per la conversione.</param>
      <returns>Nuova istanza di <see cref="T:System.Windows.Size" /> basata sull'oggetto <paramref name="value" /> specificato.</returns>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converte un'istanza di <see cref="T:System.Windows.Size" /> in <see cref="T:System.String" />.</summary>
      <param name="value">Oggetto da convertire in una stringa.</param>
      <param name="context">Informazioni di contesto utilizzate per la conversione.</param>
      <returns>Rappresentazione di stringa dell'elemento <see cref="T:System.Windows.Size" /> specificato.</returns>
    </member>
    <member name="T:System.Windows.Converters.VectorValueSerializer">
      <summary>Converte istanze dell'oggetto <see cref="T:System.String" /> in istanze dell'oggetto <see cref="T:System.Windows.Vector" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Converters.VectorValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determina se l'oggetto <see cref="T:System.String" /> specificato può essere convertito in un'istanza di <see cref="T:System.Windows.Vector" />.</summary>
      <param name="value">Stringa da valutare per la conversione.</param>
      <param name="context">Informazioni di contesto utilizzate per la conversione.</param>
      <returns>Restituisce sempre <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determina se l'oggetto <see cref="T:System.Windows.Vector" /> specificato può essere convertito in un <see cref="T:System.String" />.</summary>
      <param name="value">Oggetto di cui valutare la conversione.</param>
      <param name="context">Informazioni di contesto utilizzate per la conversione.</param>
      <returns>
        <see langword="true" /> se l'oggetto <paramref name="value" /> può essere convertito in un oggetto <see cref="T:System.String" />. In caso contrario, <see langword="false" /></returns>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converte <see cref="T:System.String" /> in <see cref="T:System.Windows.Vector" />.</summary>
      <param name="value">Stringa da convertire.</param>
      <param name="context">Informazioni di contesto utilizzate per la conversione.</param>
      <returns>Nuova istanza di <see cref="T:System.Windows.Vector" /> basata sull'oggetto <paramref name="value" /> specificato.</returns>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converte un'istanza di <see cref="T:System.Windows.Vector" /> in <see cref="T:System.String" />.</summary>
      <param name="value">Oggetto da convertire in una stringa.</param>
      <param name="context">Informazioni di contesto utilizzate per la conversione.</param>
      <returns>Rappresentazione di stringa dell'elemento <see cref="T:System.Windows.Vector" /> specificato.</returns>
    </member>
    <member name="T:System.Windows.Data.DataSourceProvider">
      <summary>Classe base comune e contratto per gli oggetti <see cref="T:System.Windows.Data.DataSourceProvider" />, ovvero factory che eseguono alcune query per produrre un singolo oggetto o un elenco di oggetti che è possibile usare come oggetti di associazione di origine.</summary>
    </member>
    <member name="E:System.Windows.Data.DataSourceProvider.DataChanged">
      <summary>Si verifica quando la proprietà <see cref="P:System.Windows.Data.DataSourceProvider.Data" /> dispone di un nuovo valore.</summary>
    </member>
    <member name="E:System.Windows.Data.DataSourceProvider.PropertyChanged">
      <summary>Generato quando il valore di una proprietà cambia.</summary>
    </member>
    <member name="E:System.Windows.Data.DataSourceProvider.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>Generato quando il valore di una proprietà cambia.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Data.DataSourceProvider" />. Rappresenta un costruttore protetto.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.BeginInit">
      <summary>Indica che sta per essere avviata l’inizializzazione dell'oggetto. L'oggetto <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> implicito si verifica solo se viene chiamato il metodo <see cref="M:System.Windows.Data.DataSourceProvider.EndInit" /> corrispondente.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.BeginQuery">
      <summary>Se ignorato in una classe derivata, la classe di base chiama questo metodo dopo la chiamata di <see cref="M:System.Windows.Data.DataSourceProvider.InitialLoad" /> o <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" />. La classe di base rimanda la chiamata se l'aggiornamento viene rinviato o il caricamento iniziale viene disabilitato.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.DeferRefresh">
      <summary>Immette un ciclo di rinvio che è possibile utilizzare per modificare le proprietà del provider e rinviare l'aggiornamento automatico.</summary>
      <returns>Oggetto <see cref="T:System.IDisposable" /> che è possibile usare per l'eliminazione dell'oggetto chiamante.</returns>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.EndInit">
      <summary>Indica che l'inizializzazione di questo elemento è stata completata e provoca <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> se nessun altro oggetto <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> è in sospeso.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.InitialLoad">
      <summary>Avvia la query iniziale nel modello di dati sottostante. Il risultato viene restituito nella proprietà <see cref="P:System.Windows.Data.DataSourceProvider.Data" />.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Genera l'evento <see cref="E:System.Windows.Data.DataSourceProvider.PropertyChanged" /> con gli argomenti specificati.</summary>
      <param name="e">Argomenti dell'evento da generare.</param>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object)">
      <summary>Le classi derivate chiamano questo metodo per indicare che una query è completata.</summary>
      <param name="newData">Dati che rappresentano il risultato della query.</param>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)">
      <summary>Le classi derivate chiamano questo metodo per indicare che una query è completata.</summary>
      <param name="newData">Dati che rappresentano il risultato della query.</param>
      <param name="error">Errore che si verifica durante l'esecuzione della query. Questo valore è <see langword="null" /> in assenza di errori.</param>
      <param name="completionWork">Delegato facoltativo utilizzato per eseguire l’operazione di completamento sul thread Interfaccia utente, ad esempio per impostare proprietà aggiuntive.</param>
      <param name="callbackArguments">Argomenti facoltativi da inviare come un parametro con il delegato <paramref name="completionWork" />.</param>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.Refresh">
      <summary>Avvia un'operazione di aggiornamento nel modello dati sottostante. Il risultato viene restituito nella proprietà <see cref="P:System.Windows.Data.DataSourceProvider.Data" />.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>Questo membro supporta l'infrastruttura di Windows Presentation Foundation (WPF) e non deve essere usato direttamente dal codice.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>Questo membro supporta l'infrastruttura di Windows Presentation Foundation (WPF) e non deve essere usato direttamente dal codice.</summary>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.Data">
      <summary>Ottiene l'oggetto dati sottostante.</summary>
      <returns>Valore di tipo <see cref="T:System.Object" /> che corrisponde all'oggetto dati sottostante.</returns>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.Dispatcher">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.Windows.Threading.Dispatcher" /> corrente sul thread Interfaccia utente da utilizzare.</summary>
      <returns>Oggetto corrente <see cref="T:System.Windows.Threading.Dispatcher" /> al Interfaccia utente thread da utilizzare. Per impostazione predefinita, questo è l'oggetto <see cref="T:System.Windows.Threading.Dispatcher" /> associato al thread nel quale è stata creata questa istanza.</returns>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.Error">
      <summary>Ottiene l'errore dell'ultima operazione di query.</summary>
      <returns>Valore di tipo <see cref="T:System.Exception" /> che corrisponde all'errore dell'ultima operazione della query, o <see langword="null" /> in caso di nessun errore.</returns>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled">
      <summary>Ottiene o imposta un valore che indica se impedire o ritardare il caricamento automatico dei dati.</summary>
      <returns>
        <see langword="false" /> per impedire o rimandare il caricamento automatico di dati; in caso contrario <see langword="true" />. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.IsRefreshDeferred">
      <summary>Ottiene un valore che indica se è in uso l'oggetto <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> in sospeso.</summary>
      <returns>
        <see langword="true" /> se è in uso l'oggetto <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> in sospeso; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.DependencyObject">
      <summary>Rappresenta un oggetto che fa parte del sistema di proprietà di dipendenza.</summary>
    </member>
    <member name="M:System.Windows.DependencyObject.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.DependencyObject" />.</summary>
    </member>
    <member name="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)">
      <summary>Cancella il valore locale di una proprietà. La proprietà da cancellare è specificata da un identificatore <see cref="T:System.Windows.DependencyProperty" />.</summary>
      <param name="dp">Proprietà di dipendenza da cancellare, identificata da un riferimento a un oggetto <see cref="T:System.Windows.DependencyProperty" />.</param>
      <exception cref="T:System.InvalidOperationException">Si è tentato di chiamare <see cref="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" /> in un oggetto <see cref="T:System.Windows.DependencyObject" /> sealed.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)">
      <summary>Cancella il valore locale di una proprietà di sola lettura. La proprietà da cancellare è specificata da un oggetto <see cref="T:System.Windows.DependencyPropertyKey" />.</summary>
      <param name="key">Chiave per la proprietà di dipendenza da cancellare.</param>
      <exception cref="T:System.InvalidOperationException">Si è tentato di chiamare <see cref="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" /> in un oggetto <see cref="T:System.Windows.DependencyObject" /> sealed.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)">
      <summary>Assegna forzatamente il valore della proprietà di dipendenza specificata. Questa operazione viene eseguita richiamando qualsiasi funzione <see cref="T:System.Windows.CoerceValueCallback" /> specificata nei metadati della proprietà di dipendenza esistente nell'oggetto <see cref="T:System.Windows.DependencyObject" /> chiamante.</summary>
      <param name="dp">Identificatore della proprietà di dipendenza da assegnare forzatamente.</param>
      <exception cref="T:System.InvalidOperationException">Il parametro <paramref name="dp" /> specificato o il relativo valore non è valido o non esiste.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.Equals(System.Object)">
      <summary>Determina se l'oggetto <see cref="T:System.Windows.DependencyObject" /> specificato equivale all'oggetto <see cref="T:System.Windows.DependencyObject" /> corrente.</summary>
      <param name="obj">Oggetto <see cref="T:System.Windows.DependencyObject" /> da confrontare con l'istanza corrente.</param>
      <returns>
        <see langword="true" /> se le due istanze sono uguali. In caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetHashCode">
      <summary>Ottiene un codice hash per l'oggetto <see cref="T:System.Windows.DependencyObject" />.</summary>
      <returns>Codice hash di valori interi a 32 bit con segno.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetLocalValueEnumerator">
      <summary>Crea un enumeratore specializzato per determinare le proprietà di dipendenza che presentano valori impostati localmente nell'oggetto <see cref="T:System.Windows.DependencyObject" />.</summary>
      <returns>Enumeratore specializzato dei valori locali.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)">
      <summary>Restituisce il valore effettivo corrente di una proprietà di dipendenza in questa istanza di <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="dp">Identificatore <see cref="T:System.Windows.DependencyProperty" /> della proprietà di cui recuperare il valore.</param>
      <exception cref="T:System.InvalidOperationException">L'oggetto <paramref name="dp" /> specificato o il relativo valore non è valido oppure l'oggetto <paramref name="dp" /> specificato non esiste.</exception>
      <returns>Restituisce il valore effettivo corrente.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)">
      <summary>Valuta di nuovo il valore effettivo della proprietà di dipendenza specificata.</summary>
      <param name="dp">L’identificatore <see cref="T:System.Windows.DependencyProperty" /> della proprietà di dipendenza da invalidare.</param>
    </member>
    <member name="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Richiamato ogni volta che viene aggiornato il valore effettivo di qualsiasi proprietà di dipendenza in <see cref="T:System.Windows.DependencyObject" />. La proprietà di dipendenza specifica modificata viene indicata nei dati dell'evento.</summary>
      <param name="e">Dati dell'evento che conterranno l'identificatore della proprietà di dipendenza di interesse, i metadati della proprietà per il tipo e i valori precedenti e nuovi.</param>
    </member>
    <member name="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)">
      <summary>Restituisce il valore locale di una proprietà di dipendenza, se esistente.</summary>
      <param name="dp">Identificatore <see cref="T:System.Windows.DependencyProperty" /> della proprietà di cui recuperare il valore.</param>
      <returns>Restituisce il valore locale oppure il valore sentinel <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> se non è impostato alcun valore locale.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)">
      <summary>Imposta il valore di una proprietà di dipendenza senza modificare l'origine del valore.</summary>
      <param name="dp">Identificatore della proprietà di dipendenza da impostare.</param>
      <param name="value">Nuovo valore locale.</param>
      <exception cref="T:System.InvalidOperationException">Si è tentato di modificare una proprietà di dipendenza di sola lettura o una proprietà in un oggetto <see cref="T:System.Windows.DependencyObject" /> sealed.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> non è il tipo corretto registrato per la proprietà <paramref name="dp" />.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)">
      <summary>Imposta il valore locale di una proprietà di dipendenza, specificato dal relativo identificatore della proprietà di dipendenza.</summary>
      <param name="dp">Identificatore della proprietà di dipendenza da impostare.</param>
      <param name="value">Nuovo valore locale.</param>
      <exception cref="T:System.InvalidOperationException">Si è tentato di modificare una proprietà di dipendenza di sola lettura o una proprietà in un oggetto <see cref="T:System.Windows.DependencyObject" /> sealed.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> non è il tipo corretto registrato per la proprietà <paramref name="dp" />.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)">
      <summary>Imposta il valore locale di una proprietà di dipendenza di sola lettura, specificato dall'identificatore <see cref="T:System.Windows.DependencyPropertyKey" /> della proprietà di dipendenza.</summary>
      <param name="key">Identificatore <see cref="T:System.Windows.DependencyPropertyKey" /> della proprietà da impostare.</param>
      <param name="value">Nuovo valore locale.</param>
    </member>
    <member name="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)">
      <summary>Restituisce un valore che indica se i processi di serializzazione devono serializzare il valore della proprietà di dipendenza specificata.</summary>
      <param name="dp">Identificatore della proprietà di dipendenza da serializzare.</param>
      <returns>
        <see langword="true" /> se per la proprietà di dipendenza fornita deve essere eseguita la serializzazione del valore. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.DependencyObject.DependencyObjectType">
      <summary>Ottiene la classe <see cref="T:System.Windows.DependencyObjectType" /> che include il tipo CLR di questa istanza.</summary>
      <returns>Classe <see cref="T:System.Windows.DependencyObjectType" /> che include il tipo CLR di questa istanza.</returns>
    </member>
    <member name="P:System.Windows.DependencyObject.IsSealed">
      <summary>Ottiene un valore che indica se l'istanza è attualmente sealed (di sola lettura).</summary>
      <returns>
        <see langword="true" /> se l'istanza è sealed. In caso contrario <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.DependencyObjectType">
      <summary>Implementa una cache del tipo sottostante per tutti i tipi derivati <see cref="T:System.Windows.DependencyObject" />.</summary>
    </member>
    <member name="M:System.Windows.DependencyObjectType.FromSystemType(System.Type)">
      <summary>Restituisce un oggetto <see cref="T:System.Windows.DependencyObjectType" /> che rappresenta un tipo (CLR) di sistema specifico.</summary>
      <param name="systemType">Tipo (CLR) di sistema da convertire.</param>
      <returns>Oggetto <see cref="T:System.Windows.DependencyObjectType" /> che rappresenta il tipo (CLR) di sistema.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.GetHashCode">
      <summary>Restituisce il codice hash per questo oggetto <see cref="T:System.Windows.DependencyObjectType" />.</summary>
      <returns>Codice hash di un intero con segno a 32 bit.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.IsInstanceOfType(System.Windows.DependencyObject)">
      <summary>Determina se l'oggetto specificato è un'istanza dell'oggetto <see cref="T:System.Windows.DependencyObjectType" /> corrente.</summary>
      <param name="dependencyObject">Oggetto da confrontare con l'oggetto <see cref="T:System.Windows.DependencyObjectType" /> corrente.</param>
      <returns>
        <see langword="true" /> se la classe rappresentata dall'oggetto <see cref="T:System.Windows.DependencyObjectType" /> corrente è nella gerarchia di ereditarietà di <see cref="T:System.Windows.DependencyObject" /> passata come <paramref name="d" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.IsSubclassOf(System.Windows.DependencyObjectType)">
      <summary>Determina se l'oggetto <see cref="T:System.Windows.DependencyObjectType" /> corrente deriva dall'oggetto <see cref="T:System.Windows.DependencyObjectType" /> specificato.</summary>
      <param name="dependencyObjectType">Oggetto <see cref="T:System.Windows.DependencyObjectType" /> da confrontare.</param>
      <returns>
        <see langword="true" /> se il parametro <paramref name="dependencyObjectType" /> e l'oggetto <see cref="T:System.Windows.DependencyObjectType" /> corrente rappresentano tipi di classi e la classe rappresentata dall'oggetto <see cref="T:System.Windows.DependencyObjectType" /> corrente deriva da quella rappresentata da <paramref name="dependencyObjectType" />. In caso contrario, <see langword="false" />. Questo metodo restituisce anche <see langword="false" /> se <paramref name="dependencyObjectType" /> e il <see cref="T:System.Windows.DependencyObjectType" /> corrente rappresentano la stessa classe.</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.BaseType">
      <summary>Ottiene l'oggetto <see cref="T:System.Windows.DependencyObjectType" /> della classe di base immediata dell'oggetto <see cref="T:System.Windows.DependencyObjectType" /> corrente.</summary>
      <returns>Tipo della classe di base.</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.Id">
      <summary>Ottiene un identificatore univoco in base zero per le operazioni di ricerca nella matrice di tempo costante.</summary>
      <returns>Identificatore interno.</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.Name">
      <summary>Ottiene il nome del tipo di sistema Common Language Runtime (CLR) rappresentato.</summary>
      <returns>Nome del tipo di sistema CLR rappresentato.</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.SystemType">
      <summary>Ottiene il tipo di sistema Common Language Runtime (CLR) rappresentato dall'oggetto <see cref="T:System.Windows.DependencyObjectType" />.</summary>
      <returns>Tipo di sistema CLR rappresentato dall'oggetto <see cref="T:System.Windows.DependencyObjectType" />.</returns>
    </member>
    <member name="T:System.Windows.DependencyProperty">
      <summary>Rappresenta una proprietà che può essere impostata tramite metodi, ad esempio stile, data binding, animazione ed ereditarietà.</summary>
    </member>
    <member name="F:System.Windows.DependencyProperty.UnsetValue">
      <summary>Specifica un valore statico utilizzato dal sistema della proprietà WPF piuttosto che <see langword="null" /> per indicare che la proprietà esiste, ma non ha il valore impostato dal sistema della proprietà.</summary>
    </member>
    <member name="M:System.Windows.DependencyProperty.AddOwner(System.Type)">
      <summary>Aggiunge un altro tipo come proprietario di una proprietà di dipendenza che è già stata registrata.</summary>
      <param name="ownerType">Tipo da aggiungere come proprietario della proprietà di dipendenza.</param>
      <returns>Riferimento all'identificatore <see cref="T:System.Windows.DependencyProperty" /> originale che identifica la proprietà di dipendenza. Questo identificatore deve essere esposto dalla classe di aggiunta come campo <see langword="public static readonly" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.AddOwner(System.Type,System.Windows.PropertyMetadata)">
      <summary>Aggiunge un altro tipo come proprietario di una proprietà di dipendenza già registrata, fornendo i metadati della proprietà di dipendenza nello stato attuale per il tipo di proprietario specificato.</summary>
      <param name="ownerType">Tipo da aggiungere come proprietario della proprietà di dipendenza.</param>
      <param name="typeMetadata">Metadati che qualificano la proprietà di dipendenza nello stato attuale per il tipo specificato.</param>
      <returns>Riferimento all'identificatore <see cref="T:System.Windows.DependencyProperty" /> originale che identifica la proprietà di dipendenza. Questo identificatore deve essere esposto dalla classe di aggiunta come campo <see langword="public static readonly" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetHashCode">
      <summary>Ottiene un codice hash per l'oggetto <see cref="T:System.Windows.DependencyProperty" />.</summary>
      <returns>Codice hash per <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Type)">
      <summary>Restituisce i metadati per questa proprietà di dipendenza nello stato attuale per un tipo esistente specificato.</summary>
      <param name="forType">Tipo specifico da cui recuperare i metadati della proprietà di dipendenza.</param>
      <returns>Oggetto metadati della proprietà.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Windows.DependencyObject)">
      <summary>Restituisce i metadati per questa proprietà di dipendenza nello stato attuale per l'istanza dell'oggetto specificato.</summary>
      <param name="dependencyObject">Oggetto dipendenza di cui viene verificato il tipo, per determinare da quale versione specifica del tipo della proprietà di dipendenza devono provenire i metadati.</param>
      <returns>Oggetto metadati della proprietà.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Windows.DependencyObjectType)">
      <summary>Restituisce i metadati per questa proprietà di dipendenza nello stato attuale per un tipo specificato.</summary>
      <param name="dependencyObjectType">n oggetto specifico che registra il tipo di oggetto dipendenza dal quale sono desiderati i metadati della proprietà di dipendenza.</param>
      <returns>Oggetto metadati della proprietà.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.IsValidType(System.Object)">
      <summary>Determina se un valore specificato è accettabile per questo tipo di proprietà di dipendenza, come controllato per il tipo di proprietà fornito nella registrazione originale della proprietà di dipendenza.</summary>
      <param name="value">Valore da controllare.</param>
      <returns>
        <see langword="true" /> se il valore specificato è il tipo di proprietà registrato o un tipo derivato accettabile; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.IsValidValue(System.Object)">
      <summary>Determina se il valore fornito è accettato per il tipo di proprietà tramite il controllo del tipo di base e anche, potenzialmente, se è all'interno dell'intervallo consentito dei valori per quel tipo.</summary>
      <param name="value">Valore da controllare.</param>
      <returns>
        <see langword="true" /> se il valore è accettabile ed è del tipo corretto o di un tipo derivato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)">
      <summary>Specifica i metadati alternativi per questa proprietà di dipendenza quando è presente nelle istanze di un tipo specificato, eseguendo l'override dei metadati esistenti per la proprietà di dipendenza quando è stata ereditata dai tipi di base.</summary>
      <param name="forType">Tipo in cui questa proprietà di dipendenza viene ereditata e in cui verranno applicati i metadati alternativi.</param>
      <param name="typeMetadata">Metadati da applicare alla proprietà di dipendenza nel tipo che esegue l'override.</param>
      <exception cref="T:System.InvalidOperationException">Si è tentato di eseguire l'override dei metadati in una proprietà di dipendenza di sola lettura. Tale operazione non può essere eseguita usando questa firma.</exception>
      <exception cref="T:System.ArgumentException">I metadati sono già stati stabiliti per la proprietà di dipendenza nello stato attuale per il tipo specificato.</exception>
    </member>
    <member name="M:System.Windows.DependencyProperty.OverrideMetadata(System.Type,System.Windows.PropertyMetadata,System.Windows.DependencyPropertyKey)">
      <summary>Specifica i metadati alternativi per una proprietà di dipendenza di sola lettura quando è presente nelle istanze di un tipo specificato, in sostituzione dei metadati specificati nella registrazione della proprietà di dipendenza iniziale. È necessario passare <see cref="T:System.Windows.DependencyPropertyKey" /> per la proprietà di dipendenza di sola lettura per evitare la generazione di un'eccezione.</summary>
      <param name="forType">Tipo in cui questa proprietà di dipendenza viene ereditata e in cui verranno applicati i metadati alternativi.</param>
      <param name="typeMetadata">Metadati da applicare alla proprietà di dipendenza nel tipo che esegue l'override.</param>
      <param name="key">Chiave di accesso per una proprietà di dipendenza di sola lettura.</param>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type)">
      <summary>Registra una proprietà di dipendenza con il nome di proprietà, il tipo di proprietà e il tipo di proprietario specificati.</summary>
      <param name="name">Nome della proprietà di dipendenza da registrare. Il nome deve essere univoco all'interno dello spazio dei nomi di registrazione del tipo di proprietario.</param>
      <param name="propertyType">Tipo della proprietà.</param>
      <param name="ownerType">Tipo di proprietario che registra la proprietà di dipendenza.</param>
      <returns>Identificatore della proprietà di dipendenza da usare per impostare il valore di un campo <see langword="public static readonly" /> nella classe. Tale identificatore viene quindi usato per fare riferimento in un secondo momento alla proprietà di dipendenza, per operazioni come l'impostazione del valore a livello di codice o per ottenere i metadati.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary>Registra una proprietà di dipendenza con il nome, il tipo e i metadati della proprietà e il tipo di proprietario specificati.</summary>
      <param name="name">Nome della proprietà di dipendenza da registrare.</param>
      <param name="propertyType">Tipo della proprietà.</param>
      <param name="ownerType">Tipo di proprietario che registra la proprietà di dipendenza.</param>
      <param name="typeMetadata">Metadati della proprietà per la proprietà di dipendenza.</param>
      <returns>Identificatore della proprietà di dipendenza da usare per impostare il valore di un campo <see langword="public static readonly" /> nella classe. Tale identificatore viene quindi usato per fare riferimento in un secondo momento alla proprietà di dipendenza, per operazioni come l'impostazione del valore a livello di codice o per ottenere i metadati.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary>Registra una proprietà di dipendenza con il nome di proprietà, il tipo di proprietà, il tipo di proprietario, i metadati della proprietà e un callback di convalida del valore della proprietà specificati.</summary>
      <param name="name">Nome della proprietà di dipendenza da registrare.</param>
      <param name="propertyType">Tipo della proprietà.</param>
      <param name="ownerType">Tipo di proprietario che registra la proprietà di dipendenza.</param>
      <param name="typeMetadata">Metadati della proprietà per la proprietà di dipendenza.</param>
      <param name="validateValueCallback">Riferimento a un callback che deve eseguire qualsiasi convalida personalizzata del valore della proprietà di dipendenza oltre la normale convalida del tipo.</param>
      <returns>Identificatore della proprietà di dipendenza da usare per impostare il valore di un campo <see langword="public static readonly" /> nella classe. Tale identificatore viene quindi usato per fare riferimento in un secondo momento alla proprietà di dipendenza, per operazioni come l'impostazione del valore a livello di codice o per ottenere i metadati.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type)">
      <summary>Registra una proprietà associata con il nome di proprietà, il tipo di proprietà e il tipo di proprietario specificati.</summary>
      <param name="name">Nome della proprietà di dipendenza da registrare.</param>
      <param name="propertyType">Tipo della proprietà.</param>
      <param name="ownerType">Tipo di proprietario che registra la proprietà di dipendenza.</param>
      <returns>Identificatore della proprietà di dipendenza da usare per impostare il valore di un campo <see langword="public static readonly" /> nella classe. Tale identificatore viene quindi usato per fare riferimento in un secondo momento alla proprietà di dipendenza, per operazioni come l'impostazione del valore a livello di codice o per ottenere i metadati.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary>Registra una proprietà associata al nome, al tipo e ai metadati della proprietà e al tipo di proprietario specificati.</summary>
      <param name="name">Nome della proprietà di dipendenza da registrare.</param>
      <param name="propertyType">Tipo della proprietà.</param>
      <param name="ownerType">Tipo di proprietario che registra la proprietà di dipendenza.</param>
      <param name="defaultMetadata">Metadati della proprietà per la proprietà di dipendenza. Può essere incluso il valore predefinito così come altre caratteristiche.</param>
      <returns>Identificatore della proprietà di dipendenza da usare per impostare il valore di un campo <see langword="public static readonly" /> nella classe. Tale identificatore viene quindi usato per fare riferimento in un secondo momento alla proprietà di dipendenza, per operazioni come l'impostazione del valore a livello di codice o per ottenere i metadati.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary>Registra una proprietà associata con il tipo della proprietà, il tipo del proprietario, i metadati della proprietà e un callback di convalida del valore per la proprietà specificati.</summary>
      <param name="name">Nome della proprietà di dipendenza da registrare.</param>
      <param name="propertyType">Tipo della proprietà.</param>
      <param name="ownerType">Tipo di proprietario che registra la proprietà di dipendenza.</param>
      <param name="defaultMetadata">Metadati della proprietà per la proprietà di dipendenza. Può essere incluso il valore predefinito così come altre caratteristiche.</param>
      <param name="validateValueCallback">Riferimento a un callback che deve eseguire qualsiasi convalida personalizzata del valore della proprietà di dipendenza oltre la normale convalida del tipo.</param>
      <returns>Identificatore della proprietà di dipendenza da usare per impostare il valore di un campo <see langword="public static readonly" /> nella classe. Tale identificatore viene quindi usato per fare riferimento in un secondo momento alla proprietà di dipendenza, per operazioni come l'impostazione del valore a livello di codice o per ottenere i metadati.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttachedReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary>Registra una proprietà associata di sola lettura con il tipo e i metadati della proprietà e il tipo di proprietario specificati.</summary>
      <param name="name">Nome della proprietà di dipendenza da registrare.</param>
      <param name="propertyType">Tipo della proprietà.</param>
      <param name="ownerType">Tipo di proprietario che registra la proprietà di dipendenza.</param>
      <param name="defaultMetadata">Metadati della proprietà per la proprietà di dipendenza.</param>
      <returns>Chiave della proprietà di dipendenza che deve essere usata per impostare il valore di un campo statico di sola lettura nella classe, che viene quindi usata per fare riferimento alla proprietà di dipendenza in un secondo momento.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttachedReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary>Registra una proprietà associata di sola lettura, con il tipo della proprietà, il tipo del proprietario, i metadati della proprietà e un callback di convalida specificati.</summary>
      <param name="name">Nome della proprietà di dipendenza da registrare.</param>
      <param name="propertyType">Tipo della proprietà.</param>
      <param name="ownerType">Tipo di proprietario che registra la proprietà di dipendenza.</param>
      <param name="defaultMetadata">Metadati della proprietà per la proprietà di dipendenza.</param>
      <param name="validateValueCallback">Riferimento a un callback creato dall'utente che deve eseguire qualsiasi convalida personalizzata del valore della proprietà di dipendenza oltre la normale convalida del tipo.</param>
      <returns>Chiave della proprietà di dipendenza che deve essere usata per impostare il valore di un campo statico di sola lettura nella classe, che viene quindi usata per fare riferimento alla proprietà di dipendenza.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary>Registra una proprietà di dipendenza di sola lettura con il tipo e i metadati della proprietà e il tipo di proprietario specificati.</summary>
      <param name="name">Nome della proprietà di dipendenza da registrare.</param>
      <param name="propertyType">Tipo della proprietà.</param>
      <param name="ownerType">Tipo di proprietario che registra la proprietà di dipendenza.</param>
      <param name="typeMetadata">Metadati della proprietà per la proprietà di dipendenza.</param>
      <returns>Chiave della proprietà di dipendenza che deve essere usata per impostare il valore di un campo statico di sola lettura nella classe, che viene quindi usata per fare riferimento alla proprietà di dipendenza.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary>Registra una proprietà di dipendenza di sola lettura, con il tipo di proprietà, il tipo di proprietario, i metadati della proprietà e un callback di convalida specificati.</summary>
      <param name="name">Nome della proprietà di dipendenza da registrare.</param>
      <param name="propertyType">Tipo della proprietà.</param>
      <param name="ownerType">Tipo di proprietario che registra la proprietà di dipendenza.</param>
      <param name="typeMetadata">Metadati della proprietà per la proprietà di dipendenza.</param>
      <param name="validateValueCallback">Riferimento a un callback creato dall'utente che deve eseguire qualsiasi convalida personalizzata del valore della proprietà di dipendenza oltre la normale convalida del tipo.</param>
      <returns>Chiave della proprietà di dipendenza che deve essere usata per impostare il valore di un campo statico di sola lettura nella classe, che viene quindi usata per fare riferimento alla proprietà di dipendenza in un secondo momento.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.ToString">
      <summary>Restituisce la rappresentazione di stringa della proprietà di dipendenza.</summary>
      <returns>Rappresentazione di stringa della proprietà di dipendenza.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.DefaultMetadata">
      <summary>Ottiene i metadati predefiniti della proprietà di dipendenza.</summary>
      <returns>Metadati predefiniti della proprietà di dipendenza.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.GlobalIndex">
      <summary>Ottiene un valore generato internamente che identifica in modo univoco la proprietà di dipendenza.</summary>
      <returns>Identificatore numerico univoco.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.Name">
      <summary>Ottiene il nome della proprietà di dipendenza.</summary>
      <returns>Nome della proprietà.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.OwnerType">
      <summary>Ottiene il tipo dell'oggetto che ha registrato la proprietà di dipendenza nel sistema di proprietà o che si è aggiunto come proprietario della proprietà.</summary>
      <returns>Tipo dell'oggetto che ha registrato la proprietà o che si è aggiunto come proprietario della proprietà.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.PropertyType">
      <summary>Ottiene il tipo che la proprietà di dipendenza utilizza per il valore.</summary>
      <returns>
        <see cref="T:System.Type" /> del valore della proprietà.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.ReadOnly">
      <summary>Ottiene un valore che indica se la proprietà di dipendenza identificata da questa istanza <see cref="T:System.Windows.DependencyProperty" /> è una proprietà di dipendenza di sola lettura.</summary>
      <returns>
        <see langword="true" /> se la proprietà di dipendenza è di sola lettura, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.ValidateValueCallback">
      <summary>Ottiene il callback di convalida del valore per la proprietà di dipendenza.</summary>
      <returns>Callback di convalida del valore per questa proprietà di dipendenza, come fornito per il parametro <paramref name="validateValueCallback" /> nella registrazione della proprietà di dipendenza originale.</returns>
    </member>
    <member name="T:System.Windows.DependencyPropertyChangedEventArgs">
      <summary>Fornisce i dati per diversi eventi di modifica delle proprietà. Questi eventi segnalano in genere effettive modifiche del valore di una proprietà di dipendenza di sola lettura. Un altro utilizzo è come parte di un'implementazione <see cref="T:System.Windows.PropertyChangedCallback" />.</summary>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.#ctor(System.Windows.DependencyProperty,System.Object,System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</summary>
      <param name="property">Identificatore per la proprietà di dipendenza modificata.</param>
      <param name="oldValue">Valore della proprietà prima della modifica segnalata dall'evento o dalla modifica di stato pertinente.</param>
      <param name="newValue">Valore della proprietà prima della modifica segnalata dall'evento o dalla modifica di stato pertinente.</param>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato equivale all'oggetto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> corrente.</summary>
      <param name="obj">L'oggetto da confrontare al <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> corrente.</param>
      <returns>
        <see langword="true" /> se l'oggetto specificato equivale all'oggetto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Determina se l'oggetto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> specificato equivale all'oggetto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> corrente.</summary>
      <param name="args">Oggetto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> da confrontare con l'oggetto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> corrente.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> specificato equivale all'oggetto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.GetHashCode">
      <summary>Ottiene un codice hash per l'oggetto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</summary>
      <returns>Codice hash di valori interi a 32 bit con segno.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.op_Equality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Determina se due oggetti <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> specificati hanno lo stesso valore.</summary>
      <param name="left">Primo oggetto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> da confrontare.</param>
      <param name="right">Secondo oggetto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> da confrontare.</param>
      <returns>
        <see langword="true" /> se le due istanze di <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> sono equivalenti; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Determina se due oggetti <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> specificati sono diversi.</summary>
      <param name="left">Primo oggetto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> da confrontare.</param>
      <param name="right">Secondo oggetto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> da confrontare.</param>
      <returns>
        <see langword="true" /> se le due istanze di <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> sono diverse; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.NewValue">
      <summary>Ottiene il valore della proprietà dopo la modifica.</summary>
      <returns>Valore della proprietà dopo la modifica.</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.OldValue">
      <summary>Ottiene il valore della proprietà prima della modifica.</summary>
      <returns>Valore della proprietà prima della modifica.</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.Property">
      <summary>Ottiene l'identificatore per la proprietà di dipendenza in cui si è verificata la modifica del valore.</summary>
      <returns>Campo dell'identificatore della proprietà di dipendenza in cui si è verificata la modifica del valore.</returns>
    </member>
    <member name="T:System.Windows.DependencyPropertyChangedEventHandler">
      <summary>Rappresenta il metodo che gestirà gli eventi generati quando in caso di modifica di <see cref="T:System.Windows.DependencyProperty" /> in una particolare implementazione di <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="sender">Origine dell'evento.</param>
      <param name="e">Dati dell'evento.</param>
    </member>
    <member name="T:System.Windows.DependencyPropertyKey">
      <summary>Fornisce l'identificatore di una proprietà di dipendenza per accesso in scrittura limitato a una proprietà di dipendenza di sola lettura.</summary>
    </member>
    <member name="M:System.Windows.DependencyPropertyKey.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)">
      <summary>Esegue l'override dei metadati di una proprietà di dipendenza di sola lettura rappresentata da questo identificatore di proprietà.</summary>
      <param name="forType">Tipo della proprietà di dipendenza e in cui deve essere eseguito l'override dei metadati.</param>
      <param name="typeMetadata">Metadati forniti per il tipo.</param>
      <exception cref="T:System.InvalidOperationException">Tentativo di override dei metadati in una proprietà di dipendenza di sola lettura, che non può essere eseguito utilizzando questa firma.</exception>
      <exception cref="T:System.ArgumentException">I metadati sono già stati definiti per la proprietà, in quanto la proprietà è disponibile nel tipo specificato.</exception>
    </member>
    <member name="P:System.Windows.DependencyPropertyKey.DependencyProperty">
      <summary>Ottiene l'identificatore della proprietà di dipendenza associato all'identificatore della proprietà di dipendenza di sola lettura specializzato.</summary>
      <returns>Identificatore della proprietà di dipendenza pertinente.</returns>
    </member>
    <member name="T:System.Windows.Expression">
      <summary>Questo tipo supporta l'infrastruttura Windows Presentation Foundation (WPF) e non deve essere usato direttamente dal codice.</summary>
    </member>
    <member name="T:System.Windows.ExpressionConverter">
      <summary>Converte istanze di <see cref="T:System.Windows.Expression" /> in e da altri tipi.</summary>
    </member>
    <member name="M:System.Windows.ExpressionConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.ExpressionConverter" />.</summary>
    </member>
    <member name="M:System.Windows.ExpressionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Comunica se questo convertitore può convertire da un oggetto di origine in un oggetto <see cref="T:System.Windows.Expression" />.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="sourceType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo dal quale si desidera effettuare la conversione.</param>
      <returns>Sempre <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.ExpressionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Comunica se questo convertitore è in grado di convertire un oggetto <see cref="T:System.Windows.Expression" /> in un tipo di destinazione specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="destinationType">Tipo <see cref="T:System.Type" /> che rappresenta il tipo di destinazione della conversione.</param>
      <returns>Sempre <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.ExpressionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte il valore fornito nel tipo <see cref="T:System.Windows.Expression" />.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> da utilizzare come impostazioni cultura correnti.</param>
      <param name="value">Oggetto da convertire.</param>
      <returns>Genera sempre un'eccezione e ritorna <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.ExpressionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte l'oggetto <see cref="T:System.Windows.Expression" /> fornito nel tipo specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> da utilizzare come impostazioni cultura correnti.</param>
      <param name="value">Oggetto da convertire.</param>
      <param name="destinationType">Tipo <see cref="T:System.Type" /> che rappresenta il tipo di destinazione della conversione.</param>
      <returns>Genera sempre un'eccezione e ritorna <see langword="null" />.</returns>
    </member>
    <member name="T:System.Windows.Freezable">
      <summary>Definisce un oggetto che ha uno stato modificabile e uno stato di sola lettura (bloccato). Le classi che derivano da <see cref="T:System.Windows.Freezable" /> forniscono una notifica dettagliata delle modifiche, possono essere rese non modificabili e possono clonare se stesse.</summary>
    </member>
    <member name="E:System.Windows.Freezable.Changed">
      <summary>Si verifica quando <see cref="T:System.Windows.Freezable" /> o un oggetto che contiene è modificato.</summary>
    </member>
    <member name="M:System.Windows.Freezable.#ctor">
      <summary>Inizializza una nuova istanza di una classe derivata <see cref="T:System.Windows.Freezable" />.</summary>
    </member>
    <member name="M:System.Windows.Freezable.Clone">
      <summary>Crea un clone modificabile dell'oggetto <see cref="T:System.Windows.Freezable" />, eseguendo copie complete dei valori dell'oggetto. Durante la copia delle proprietà di dipendenza di questo oggetto, questo metodo copia le espressioni (che potrebbero non essere più risolte), ma non le animazioni né i relativi valori correnti.</summary>
      <returns>Clone modificabile dell'oggetto corrente. La proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> dell'oggetto duplicato restituisce il valore <see langword="false" /> anche se il valore della proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> dell'oggetto di origine è <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)">
      <summary>Rende l'istanza un clone (copia completa) dell'oggetto <see cref="T:System.Windows.Freezable" /> specificato usando i valori di proprietà di base (non animati).</summary>
      <param name="sourceFreezable">Oggetto da clonare.</param>
    </member>
    <member name="M:System.Windows.Freezable.CloneCurrentValue">
      <summary>Crea un clone modificabile (copia completa) di <see cref="T:System.Windows.Freezable" /> utilizzando i valori correnti.</summary>
      <returns>Clone modificabile dell'oggetto corrente. La proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> dell'oggetto duplicato restituisce il valore <see langword="false" /> anche se il valore della proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> dell'oggetto di origine è <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Rende l'istanza un clone (copia completa) modificabile dell'oggetto <see cref="T:System.Windows.Freezable" /> specificato usando i valori di proprietà correnti.</summary>
      <param name="sourceFreezable">Costruttore <see cref="T:System.Windows.Freezable" /> da duplicare.</param>
    </member>
    <member name="M:System.Windows.Freezable.CreateInstance">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Freezable" />.</summary>
      <returns>Nuova istanza.</returns>
    </member>
    <member name="M:System.Windows.Freezable.CreateInstanceCore">
      <summary>Quando è implementato in una classe derivata, crea una nuova istanza della classe derivata <see cref="T:System.Windows.Freezable" />.</summary>
      <returns>Nuova istanza.</returns>
    </member>
    <member name="M:System.Windows.Freezable.Freeze">
      <summary>Rende non modificabile l'oggetto corrente e ne imposta la proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> su <see langword="true" />.</summary>
      <exception cref="T:System.InvalidOperationException">L'oggetto <see cref="T:System.Windows.Freezable" /> non può essere reso non modificabile.</exception>
    </member>
    <member name="M:System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)">
      <summary>Se il parametro <paramref name="isChecking" /> è <see langword="true" />, questo metodo indica se è possibile rendere immodificabile <see cref="T:System.Windows.Freezable" /> specificato. Se il parametro <paramref name="isChecking" /> è <see langword="false" />, questo metodo tenta di rendere immodificabile il <see cref="T:System.Windows.Freezable" /> specificato e indica se l'operazione è riuscita.</summary>
      <param name="freezable">Oggetto da controllare o da rendere immodificabile. Se <paramref name="isChecking" /> è <see langword="true" />, l'oggetto è controllato per determinare se può essere reso immodificabile. Se <paramref name="isChecking" /> è <see langword="false" />, l'oggetto è reso immodificabile, se possibile.</param>
      <param name="isChecking">
        <see langword="true" /> da cui restituire un'indicazione che dichiari se l'oggetto può essere bloccato (senza bloccarlo davvero); <see langword="false" /> per bloccare davvero l'oggetto.</param>
      <exception cref="T:System.InvalidOperationException">Quando <paramref name="isChecking" /> è <see langword="false" />, il tentativo di rendere immodificabile <paramref name="freezable" /> non è stato completato correttamente; l'oggetto ora è in uno stato sconosciuto (potrebbe essere parzialmente bloccato).</exception>
      <returns>Se <paramref name="isChecking" /> è <see langword="true" />, questo metodo restituisce <see langword="true" /> se <see cref="T:System.Windows.Freezable" /> specificato può essere reso immodificabile, o <see langword="false" /> se non può essere reso immodificabile. Se <paramref name="isChecking" /> è <see langword="false" />, questo metodo restituisce <see langword="true" /> se <see cref="T:System.Windows.Freezable" /> specificato è ora immodificabile, oppure <see langword="false" /> se non può essere reso immodificabile.</returns>
    </member>
    <member name="M:System.Windows.Freezable.FreezeCore(System.Boolean)">
      <summary>Rende immodificabile l'oggetto <see cref="T:System.Windows.Freezable" /> o verifica se può essere reso immodificabile.</summary>
      <param name="isChecking">
        <see langword="true" /> da cui restituire un'indicazione che dichiari se l'oggetto può essere bloccato (senza bloccarlo davvero); <see langword="false" /> per bloccare davvero l'oggetto.</param>
      <returns>Se <paramref name="isChecking" /> è <see langword="true" />, questo metodo restituisce <see langword="true" /> se <see cref="T:System.Windows.Freezable" /> può essere reso immodificabile, o <see langword="false" /> se non può essere reso immodificabile. Se <paramref name="isChecking" /> è <see langword="false" />, questo metodo restituisce <see langword="true" /> se <see cref="T:System.Windows.Freezable" /> specificato è ora immodificabile, oppure <see langword="false" /> se non può essere reso immodificabile.</returns>
    </member>
    <member name="M:System.Windows.Freezable.GetAsFrozen">
      <summary>Crea una copia bloccata di <see cref="T:System.Windows.Freezable" />, utilizzando valori delle proprietà di base (non-animati). Dato che la copia è bloccata, gli oggetti secondari bloccati sono copiati dal riferimento.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Freezable" /> non può essere bloccato perché contiene espressioni o proprietà animate.</exception>
      <returns>Una copia bloccata di <see cref="T:System.Windows.Freezable" />. La proprietà della copia <see cref="P:System.Windows.Freezable.IsFrozen" /> è impostata su <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Rende l'istanza un clone bloccato dell'oggetto <see cref="T:System.Windows.Freezable" /> specificato usando i valori di proprietà di base (non animati).</summary>
      <param name="sourceFreezable">Istanza da copiare.</param>
    </member>
    <member name="M:System.Windows.Freezable.GetCurrentValueAsFrozen">
      <summary>Crea una copia bloccata di <see cref="T:System.Windows.Freezable" /> utilizzando valori della proprietà correnti. Dato che la copia è bloccata, gli oggetti secondari bloccati sono copiati dal riferimento.</summary>
      <returns>Una copia bloccata di <see cref="T:System.Windows.Freezable" />. La proprietà della copia <see cref="P:System.Windows.Freezable.IsFrozen" /> è impostata su <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Rende l'istanza corrente un clone bloccato dell'oggetto <see cref="T:System.Windows.Freezable" /> specificato. Se l'oggetto ha proprietà di dipendenza animate, i valori animati correnti vengono copiati.</summary>
      <param name="sourceFreezable">Oggetto <see cref="T:System.Windows.Freezable" /> da copiare e bloccare.</param>
    </member>
    <member name="M:System.Windows.Freezable.OnChanged">
      <summary>Chiamato quando viene modificato l'oggetto <see cref="T:System.Windows.Freezable" /> corrente.</summary>
    </member>
    <member name="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>Assicura che adatti puntatori del contesto siano stabiliti per un membro dati <see cref="T:System.Windows.DependencyObjectType" /> che è appena stato impostato.</summary>
      <param name="oldValue">Precedente valore del membro dati.</param>
      <param name="newValue">Valore corrente del membro dati.</param>
    </member>
    <member name="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>Questo membro supporta l'infrastruttura di Windows Presentation Foundation (WPF) e non deve essere usato direttamente dal codice.</summary>
      <param name="oldValue">Precedente valore del membro dati.</param>
      <param name="newValue">Valore corrente del membro dati.</param>
      <param name="property">Proprietà modificata.</param>
    </member>
    <member name="M:System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Esegue l'override dell'implementazione di <see cref="T:System.Windows.DependencyObject" /> di <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" /> per richiamare anche eventuali gestori <see cref="E:System.Windows.Freezable.Changed" /> in risposta alla modifica di una proprietà di dipendenza di tipo <see cref="T:System.Windows.Freezable" />.</summary>
      <param name="e">Dati dell'evento con le informazioni sulla proprietà modificata e i valori precedente e corrente corrispondenti.</param>
    </member>
    <member name="M:System.Windows.Freezable.ReadPreamble">
      <summary>Assicura che l’accesso di <see cref="T:System.Windows.Freezable" /> sia stato eseguito da un thread valido. Gli eredi di <see cref="T:System.Windows.Freezable" /> devono chiamare questo metodo all'inizio di qualsiasi API che legge i membri dei dati che non sono proprietà della dipendenza.</summary>
    </member>
    <member name="M:System.Windows.Freezable.WritePostscript">
      <summary>Genera l'evento <see cref="E:System.Windows.Freezable.Changed" /> per <see cref="T:System.Windows.Freezable" /> e richiama il metodo <see cref="M:System.Windows.Freezable.OnChanged" />. Le classi che derivano da <see cref="T:System.Windows.Freezable" /> devono chiamare questo metodo alla fine di qualsiasi API che modifica i membri di classe che non sono archiviati come proprietà di dipendenza.</summary>
    </member>
    <member name="M:System.Windows.Freezable.WritePreamble">
      <summary>Verifica che l'oggetto <see cref="T:System.Windows.Freezable" /> non sia bloccato e che l'accesso sia eseguito da un contesto di threading valido. Gli eredi di <see cref="T:System.Windows.Freezable" /> devono chiamare questo metodo all'inizio di qualsiasi API che scrive sui membri dei dati che non sono proprietà della dipendenza.</summary>
      <exception cref="T:System.InvalidOperationException">L'istanza <see cref="T:System.Windows.Freezable" /> è bloccata e non è possibile scrivere nei suoi membri.</exception>
    </member>
    <member name="P:System.Windows.Freezable.CanFreeze">
      <summary>Ottiene un valore che indica se l'oggetto può essere impostato come non modificabile.</summary>
      <returns>
        <see langword="true" /> se l'oggetto corrente può essere impostato come non modificabile o è già non modificabile. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Freezable.IsFrozen">
      <summary>Ottiene un valore che indica se l'oggetto è attualmente modificabile.</summary>
      <returns>
        <see langword="true" /> se l'oggetto è bloccato e non può essere modificato. <see langword="false" /> se l'oggetto può essere modificato.</returns>
    </member>
    <member name="T:System.Windows.Input.FocusNavigationDirection">
      <summary>Specifica la direzione nell'interfaccia utente nella quale viene tentata la richiesta di modifica di stato attivo. La direzione viene stabilita in base all’ordine di tabulazione o alla direzione relativa nel layout.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Down">
      <summary>Sposta lo stato attivo a un altro elemento attivabile e verso il basso rispetto all’elemento correntemente attivo.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.First">
      <summary>Sposta lo stato attivo al primo elemento attivabile in ordine di tabulazione. Non supportato per la classe <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Last">
      <summary>Sposta lo stato attivo all’ultimo elemento attivabile in ordine di tabulazione. Non supportato per la classe <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Left">
      <summary>Sposta lo stato attivo a un altro elemento attivabile e a sinistra dell’elemento correntemente attivo.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Next">
      <summary>Sposta lo stato attivo al successivo elemento attivabile in ordine di tabulazione. Non supportato per la classe <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Previous">
      <summary>Sposta lo stato attivo al precedente elemento attivabile in ordine di tabulazione. Non supportato per la classe <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Right">
      <summary>Sposta lo stato attivo a un altro elemento attivabile e a destra dell’elemento correntemente attivo.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Up">
      <summary>Sposta lo stato attivo a un altro elemento attivabile e verso l’alto rispetto all’elemento correntemente attivo.</summary>
    </member>
    <member name="T:System.Windows.Input.Key">
      <summary>Specifica i possibili valori dei tasti su una tastiera.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.A">
      <summary>Tasto A.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.AbntC1">
      <summary>Tasto ABNT_C1 (brasiliano).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.AbntC2">
      <summary>Tasto ABNT_C2 (brasiliano).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Add">
      <summary>Tasto di somma.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Apps">
      <summary>Tasto dell'applicazione (Microsoft Natural Keyboard). Noto anche come tasto Menu perché visualizza un menu di scelta rapida specifico dell'applicazione.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Attn">
      <summary>Tasto ATTN.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.B">
      <summary>Tasto B.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Back">
      <summary>Tasto BACKSPACE.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserBack">
      <summary>Tasto Indietro del browser.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserFavorites">
      <summary>Tasto Preferiti del browser.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserForward">
      <summary>Tasto Avanti del browser.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserHome">
      <summary>Tasto Home del browser.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserRefresh">
      <summary>Tasto di aggiornamento del browser.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserSearch">
      <summary>Tasto di ricerca nel browser.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserStop">
      <summary>Tasto di arresto del browser.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.C">
      <summary>Tasto C.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Cancel">
      <summary>Tasto ANNULLA.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Capital">
      <summary>Tasto BLOC MAIUSC.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.CapsLock">
      <summary>Tasto BLOC MAIUSC.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Clear">
      <summary>Tasto CANCELLA.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.CrSel">
      <summary>Tasto CRSEL (SELEZIONE CURSORE).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D">
      <summary>Tasto D.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D0">
      <summary>Tasto 0 (zero).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D1">
      <summary>Tasto 1 (uno).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D2">
      <summary>Tasto 2.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D3">
      <summary>Tasto 3.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D4">
      <summary>Tasto 4.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D5">
      <summary>Tasto 5.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D6">
      <summary>Tasto 6.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D7">
      <summary>Tasto 7.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D8">
      <summary>Tasto 8.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D9">
      <summary>Tasto 9.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeAlphanumeric">
      <summary>Tasto DBE_ALPHANUMERIC.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeCodeInput">
      <summary>Tasto DBE_CODEINPUT.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeDbcsChar">
      <summary>Tasto DBE_DBCSCHAR.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeDetermineString">
      <summary>Tasto DBE_DETERMINESTRING.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeEnterDialogConversionMode">
      <summary>Tasto DBE_ENTERDLGCONVERSIONMODE.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeEnterImeConfigureMode">
      <summary>Tasto DBE_ENTERIMECONFIGMODE.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeEnterWordRegisterMode">
      <summary>Tasto DBE_ENTERWORDREGISTERMODE.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeFlushString">
      <summary>Tasto DBE_FLUSHSTRING.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeHiragana">
      <summary>Tasto DBE_HIRAGANA.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeKatakana">
      <summary>Tasto DBE_KATAKANA.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeNoCodeInput">
      <summary>Tasto DBE_NOCODEINPUT.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeNoRoman">
      <summary>Tasto DBE_NOROMAN.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeRoman">
      <summary>Tasto DBE_ROMAN.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeSbcsChar">
      <summary>Tasto DBE_SBCSCHAR.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DeadCharProcessed">
      <summary>Il tasto viene usato con un altro tasto per creare un unico carattere combinato.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Decimal">
      <summary>Tasto separatore decimale.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Delete">
      <summary>Tasto CANC.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Divide">
      <summary>Tasto di divisione.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Down">
      <summary>Tasto freccia GIÙ.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.E">
      <summary>Tasto E.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.End">
      <summary>Tasto FINE.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Enter">
      <summary>Tasto INVIO.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.EraseEof">
      <summary>Tasto di cancellazione EOF.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Escape">
      <summary>Tasto ESC.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Execute">
      <summary>Tasto EXECUTE.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ExSel">
      <summary>Tasto EXSEL (estensione selezione).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F">
      <summary>Tasto F.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F1">
      <summary>Tasto F1.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F10">
      <summary>Tasto F10.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F11">
      <summary>Tasto F11.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F12">
      <summary>Tasto F12.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F13">
      <summary>Tasto F13.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F14">
      <summary>Tasto F14.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F15">
      <summary>Tasto F15.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F16">
      <summary>Tasto F16.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F17">
      <summary>Tasto F17.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F18">
      <summary>Tasto F18.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F19">
      <summary>Tasto F19.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F2">
      <summary>Tasto F2.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F20">
      <summary>Tasto F20.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F21">
      <summary>Tasto F21.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F22">
      <summary>Tasto F22.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F23">
      <summary>Tasto F23.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F24">
      <summary>Tasto F24.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F3">
      <summary>Tasto F3.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F4">
      <summary>Tasto F4.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F5">
      <summary>Tasto F5.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F6">
      <summary>Tasto F6.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F7">
      <summary>Tasto F7.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F8">
      <summary>Tasto F8.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F9">
      <summary>Tasto F9.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.FinalMode">
      <summary>Tasto modalità Final IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.G">
      <summary>Tasto G.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.H">
      <summary>Tasto H.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.HangulMode">
      <summary>Tasto modalità Hangul IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.HanjaMode">
      <summary>Tasto modalità Hanja IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Help">
      <summary>Tasto HELP.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Home">
      <summary>Tasto HOME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.I">
      <summary>Tasto I.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeAccept">
      <summary>Tasto di conferma IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeConvert">
      <summary>Tasto di conversione IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeModeChange">
      <summary>Richiesta di modifica della modalità IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeNonConvert">
      <summary>Tasto di annullamento conversione IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeProcessed">
      <summary>Tasto speciale che maschera il tasto effettivo elaborato da uno strumento IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Insert">
      <summary>Tasto INS.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.J">
      <summary>Tasto J.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.JunjaMode">
      <summary>Tasto modalità Junja IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.K">
      <summary>Tasto K.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.KanaMode">
      <summary>Tasto modalità Kana IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.KanjiMode">
      <summary>Tasto modalità Kanji IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.L">
      <summary>Tasto L.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LaunchApplication1">
      <summary>Tasto di avvio applicazione 1.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LaunchApplication2">
      <summary>Tasto di avvio applicazione 2.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LaunchMail">
      <summary>Tasto di avvio della posta.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Left">
      <summary>Tasto freccia SINISTRA.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LeftAlt">
      <summary>Tasto ALT sinistro.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LeftCtrl">
      <summary>Tasto CTRL sinistro.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LeftShift">
      <summary>Tasto MAIUSC sinistro.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LineFeed">
      <summary>Tasto di avanzamento riga.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LWin">
      <summary>Tasto WINDOWS sinistro (Microsoft Natural Keyboard).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.M">
      <summary>Tasto M.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaNextTrack">
      <summary>Tasto del brano successivo.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaPlayPause">
      <summary>Tasto di sospensione della riproduzione di contenuti multimediali.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaPreviousTrack">
      <summary>Tasto del brano precedente.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaStop">
      <summary>Tasto di arresto della riproduzione.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Multiply">
      <summary>Tasto di moltiplicazione.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.N">
      <summary>Tasto N.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Next">
      <summary>Tasto PGGIÙ.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NoName">
      <summary>Costante riservata per l'uso futuro.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.None">
      <summary>Nessun tasto premuto.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumLock">
      <summary>Tasto BLOC NUM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad0">
      <summary>Tasto 0 del tastierino numerico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad1">
      <summary>Tasto 1 del tastierino numerico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad2">
      <summary>Tasto 2 del tastierino numerico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad3">
      <summary>Tasto 3 del tastierino numerico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad4">
      <summary>Tasto 4 del tastierino numerico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad5">
      <summary>Tasto 5 del tastierino numerico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad6">
      <summary>Tasto 6 del tastierino numerico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad7">
      <summary>Tasto 7 del tastierino numerico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad8">
      <summary>Tasto 8 del tastierino numerico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad9">
      <summary>Tasto 9 del tastierino numerico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.O">
      <summary>Tasto O.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem1">
      <summary>Tasto 1 OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem102">
      <summary>Tasto 102 OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem2">
      <summary>Tasto 2 OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem3">
      <summary>Tasto 3 OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem4">
      <summary>Tasto 4 OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem5">
      <summary>Tasto 5 OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem6">
      <summary>Tasto 6 OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem7">
      <summary>Tasto 7 OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem8">
      <summary>Tasto 8 OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemAttn">
      <summary>Tasto ATTN OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemAuto">
      <summary>Tasto AUTO OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemBackslash">
      <summary>Tasto barra rovesciata OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemBackTab">
      <summary>Tasto BACKTAB OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemClear">
      <summary>Tasto CANCELLA OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemCloseBrackets">
      <summary>Tasto parentesi chiusa OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemComma">
      <summary>Tasto virgola OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemCopy">
      <summary>Tasto di copia OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemEnlw">
      <summary>Tasto ENLW OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemFinish">
      <summary>Tasto di fine OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemMinus">
      <summary>Tasto meno OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemOpenBrackets">
      <summary>Tasto parentesi aperta OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemPeriod">
      <summary>Tasto punto OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemPipe">
      <summary>Tasto barra verticale OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemPlus">
      <summary>Tasto di somma OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemQuestion">
      <summary>Tasto ? OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemQuotes">
      <summary>Tasto virgolette OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemSemicolon">
      <summary>Tasto punto e virgola OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemTilde">
      <summary>Tasto tilde OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.P">
      <summary>Tasto P.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Pa1">
      <summary>Tasto PA1.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.PageDown">
      <summary>Tasto PGGIÙ.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.PageUp">
      <summary>Tasto PGSU.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Pause">
      <summary>Tasto PAUSA.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Play">
      <summary>Tasto PLAY.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Print">
      <summary>Tasto STAMPA.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.PrintScreen">
      <summary>Tasto STAMP.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Prior">
      <summary>Tasto PGSU.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Q">
      <summary>Tasto Q.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.R">
      <summary>Tasto R.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Return">
      <summary>Tasto INVIO.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Right">
      <summary>Tasto freccia DESTRA.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RightAlt">
      <summary>Tasto ALT destro.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RightCtrl">
      <summary>Tasto CTRL destro.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RightShift">
      <summary>Tasto MAIUSC destro.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RWin">
      <summary>Tasto WINDOWS destro (Microsoft Natural Keyboard).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.S">
      <summary>Tasto S.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Scroll">
      <summary>Tasto BLOC SCORR.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Select">
      <summary>Tasto SELECT.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.SelectMedia">
      <summary>Tasto di selezione supporto multimediale.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Separator">
      <summary>Tasto separatore.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Sleep">
      <summary>Tasto di sospensione del computer.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Snapshot">
      <summary>Tasto STAMP.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Space">
      <summary>Tasto BARRA SPAZIATRICE.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Subtract">
      <summary>Tasto di sottrazione.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.System">
      <summary>Tasto speciale che maschera il tasto effettivo elaborato da un tasto di sistema.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.T">
      <summary>Tasto T.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Tab">
      <summary>Tasto TAB.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.U">
      <summary>Tasto U.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Up">
      <summary>Tasto freccia SU.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.V">
      <summary>Tasto V.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.VolumeDown">
      <summary>Tasto di riduzione del volume.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.VolumeMute">
      <summary>Tasto di disattivazione del volume.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.VolumeUp">
      <summary>Tasto di aumento del volume.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.W">
      <summary>Tasto W.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.X">
      <summary>Tasto X.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Y">
      <summary>Tasto Y.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Z">
      <summary>Tasto Z.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Zoom">
      <summary>Tasto ZOOM.</summary>
    </member>
    <member name="T:System.Windows.Input.KeyConverter">
      <summary>Converte un oggetto <see cref="T:System.Windows.Input.Key" /> in e da altri tipi.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Input.Key" />.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determina se per un oggetto del tipo specificato è possibile o meno eseguire la conversione in un'istanza di <see cref="T:System.Windows.Input.Key" /> utilizzando il contesto specificato.</summary>
      <param name="context">Contesto del formato che fornisce informazioni sull'ambiente dal quale viene richiamato il convertitore.</param>
      <param name="sourceType">Tipo di cui viene valutata la conversione.</param>
      <returns>
        <see langword="true" /> se <paramref name="sourceType" /> è di tipo <see cref="T:System.String" /> ; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determina se un'istanza di <see cref="T:System.Windows.Input.Key" /> può essere convertita nel tipo specificato utilizzando il contesto specificato.</summary>
      <param name="context">Contesto del formato che fornisce informazioni sull'ambiente dal quale viene richiamato il convertitore.</param>
      <param name="destinationType">Tipo di cui viene valutata la conversione.</param>
      <returns>
        <see langword="true" /> se <paramref name="destinationType" /> è di tipo <see cref="T:System.String" /> ; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Tenta di convertire l'oggetto specificato in <see cref="T:System.Windows.Input.Key" /> utilizzando il contesto specificato.</summary>
      <param name="context">Contesto del formato che fornisce informazioni sull'ambiente dal quale viene richiamato il convertitore.</param>
      <param name="culture">Informazioni specifiche delle impostazioni cultura.</param>
      <param name="source">Oggetto da convertire.</param>
      <exception cref="T:System.NotSupportedException">L'oggetto <paramref name="source" /> non può essere convertito.</exception>
      <returns>Oggetto convertito.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Tenta di convertire <see cref="T:System.Windows.Input.Key" /> nel tipo specificato utilizzando il contesto specificato.</summary>
      <param name="context">Contesto del formato che fornisce informazioni sull'ambiente dal quale viene richiamato il convertitore.</param>
      <param name="culture">Informazioni specifiche delle impostazioni cultura.</param>
      <param name="value">Oggetto da convertire.</param>
      <param name="destinationType">Tipo in cui convertire l'oggetto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> non può essere convertito in <paramref name="destinationType" />.</exception>
      <returns>Oggetto convertito.</returns>
    </member>
    <member name="T:System.Windows.Input.KeyInterop">
      <summary>Offre metodi statici per la conversione tra tasti virtuali Win32 e l'enumerazione <see cref="T:System.Windows.Input.Key" /> di WPF.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyInterop.KeyFromVirtualKey(System.Int32)">
      <summary>Converte un tasto virtuale di Win32in <see cref="T:System.Windows.Input.Key" /> di WPF.</summary>
      <param name="virtualKey">La chiave virtuale da convertire.</param>
      <returns>Tasto di WPF.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyInterop.VirtualKeyFromKey(System.Windows.Input.Key)">
      <summary>Converte <see cref="T:System.Windows.Input.Key" /> di WPF in un tasto virtuale di Win32.</summary>
      <param name="key">Oggetto WPF da convertire.</param>
      <returns>Tasto virtuale di Win32.</returns>
    </member>
    <member name="T:System.Windows.Input.KeyValueSerializer">
      <summary>Converte istanze dell'oggetto <see cref="T:System.String" /> in istanze dell'oggetto <see cref="T:System.Windows.Input.Key" />.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Input.KeyValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determina se l'oggetto <see cref="T:System.String" /> specificato può essere convertito in un'istanza di <see cref="T:System.Windows.Input.Key" />.</summary>
      <param name="value">Stringa da valutare per la conversione.</param>
      <param name="context">Informazioni di contesto utilizzate per la conversione.</param>
      <returns>Restituisce sempre <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determina se l'oggetto <see cref="T:System.Windows.Input.Key" /> specificato può essere convertito in <see cref="T:System.String" />.</summary>
      <param name="value">Chiave di cui valutare la conversione.</param>
      <param name="context">Informazioni di contesto utilizzate per la conversione.</param>
      <returns>
        <see langword="true" /> se l'oggetto <paramref name="value" /> può essere convertito in un oggetto <see cref="T:System.String" />. In caso contrario, <see langword="false" /></returns>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converte <see cref="T:System.String" /> in <see cref="T:System.Windows.Input.Key" />.</summary>
      <param name="value">Stringa da convertire in <see cref="T:System.Windows.Input.Key" />.</param>
      <param name="context">Informazioni di contesto utilizzate per la conversione.</param>
      <returns>Nuova istanza di <see cref="T:System.Windows.Input.Key" /> basata sull'oggetto <paramref name="value" /> specificato.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converte un'istanza di <see cref="T:System.Windows.Input.Key" /> in <see cref="T:System.String" />.</summary>
      <param name="value">Chiave da convertire in una stringa.</param>
      <param name="context">Informazioni di contesto utilizzate per la conversione.</param>
      <returns>Rappresentazione di stringa invariante dell'oggetto <see cref="T:System.Windows.Input.Key" /> specificato.</returns>
    </member>
    <member name="T:System.Windows.Input.ModifierKeys">
      <summary>Specifica l'insieme di tasti di modifica.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Alt">
      <summary>Rappresenta il tasto ALT.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Control">
      <summary>Rappresenta il tasto CTRL.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.None">
      <summary>Non viene premuto alcun modificatore.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Shift">
      <summary>Rappresenta il tasto MAIUSC.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Windows">
      <summary>Tasto logo Windows.</summary>
    </member>
    <member name="T:System.Windows.Input.ModifierKeysConverter">
      <summary>Converte un oggetto <see cref="T:System.Windows.Input.ModifierKeys" /> in e da altri tipi.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Input.ModifierKeysConverter" />.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determina se per un oggetto del tipo specificato è possibile o meno eseguire la conversione in un'istanza di <see cref="T:System.Windows.Input.ModifierKeys" /> utilizzando il contesto specificato.</summary>
      <param name="context">Contesto del formato che fornisce informazioni sull'ambiente dal quale viene richiamato il convertitore.</param>
      <param name="sourceType">Tipo di cui viene valutata la conversione.</param>
      <returns>
        <see langword="true" /> se <paramref name="sourceType" /> è di tipo <see cref="T:System.String" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determina se un'istanza di <see cref="T:System.Windows.Input.ModifierKeys" /> può essere convertita nel tipo specificato utilizzando il contesto specificato.</summary>
      <param name="context">Contesto del formato che fornisce informazioni sull'ambiente dal quale viene richiamato il convertitore.</param>
      <param name="destinationType">Tipo di cui viene valutata la conversione.</param>
      <returns>
        <see langword="true" /> se <paramref name="destinationType" /> è di tipo <see cref="T:System.String" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Tenta di convertire l'oggetto specificato in <see cref="T:System.Windows.Input.ModifierKeys" /> utilizzando il contesto specificato.</summary>
      <param name="context">Contesto del formato che fornisce informazioni sull'ambiente dal quale viene richiamato il convertitore.</param>
      <param name="culture">Informazioni specifiche delle impostazioni cultura.</param>
      <param name="source">Oggetto da convertire.</param>
      <exception cref="T:System.NotSupportedException">L'oggetto <paramref name="source" /> non può essere convertito.</exception>
      <returns>Oggetto convertito.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Tenta di convertire <see cref="T:System.Windows.Input.ModifierKeys" /> nel tipo specificato utilizzando il contesto specificato.</summary>
      <param name="context">Contesto del formato che fornisce informazioni sull'ambiente dal quale viene richiamato il convertitore.</param>
      <param name="culture">Informazioni specifiche delle impostazioni cultura.</param>
      <param name="value">Oggetto da convertire.</param>
      <param name="destinationType">Tipo in cui convertire l'oggetto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="value" /> non esegue il mapping a un valido <see cref="T:System.Windows.Input.ModifierKeys" />.</exception>
      <exception cref="T:System.NotSupportedException">L'oggetto <paramref name="value" /> non può essere convertito.</exception>
      <returns>Oggetto convertito.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.IsDefinedModifierKeys(System.Windows.Input.ModifierKeys)">
      <summary>Indica se il valore specificato è un valore <see cref="T:System.Windows.Input.ModifierKeys" /> valido.</summary>
      <param name="modifierKeys">Valore di cui controllare la validità.</param>
      <returns>
        <see langword="true" /> se l'input è un valore <see cref="T:System.Windows.Input.ModifierKeys" /> valido. In caso contrario <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Input.ModifierKeysValueSerializer">
      <summary>Converte istanze dell'oggetto <see cref="T:System.String" /> in istanze dell'oggetto <see cref="T:System.Windows.Input.ModifierKeys" />.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Input.ModifierKeysValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determina se l'oggetto <see cref="T:System.String" /> specificato può essere convertito in un'istanza di <see cref="T:System.Windows.Input.ModifierKeys" />.</summary>
      <param name="value">Stringa da valutare per la conversione.</param>
      <param name="context">Informazioni di contesto utilizzate per la conversione.</param>
      <returns>Restituisce sempre <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determina se l'oggetto <see cref="T:System.Windows.Input.ModifierKeys" /> specificato può essere convertito in <see cref="T:System.String" />.</summary>
      <param name="value">I tasti di modifica da valutare per la conversione.</param>
      <param name="context">Informazioni di contesto utilizzate per la conversione.</param>
      <returns>
        <see langword="true" /> se l'oggetto <paramref name="value" /> può essere convertito in un oggetto <see cref="T:System.String" />. In caso contrario, <see langword="false" /></returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converte un oggetto <see cref="T:System.String" /> in un valore <see cref="T:System.Windows.Input.ModifierKeys" />.</summary>
      <param name="value">Stringa da convertire in <see cref="T:System.Windows.Input.ModifierKeys" />.</param>
      <param name="context">Informazioni di contesto utilizzate per la conversione.</param>
      <returns>Nuova istanza di <see cref="T:System.Windows.Input.ModifierKeys" /> basata sull'oggetto <paramref name="value" /> specificato.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converte un'istanza di <see cref="T:System.Windows.Input.ModifierKeys" /> in <see cref="T:System.String" />.</summary>
      <param name="value">Chiave da convertire in una stringa.</param>
      <param name="context">Informazioni di contesto utilizzate per la conversione.</param>
      <returns>Rappresentazione di stringa invariante del valore <see cref="T:System.Windows.Input.ModifierKeys" /> specificato.</returns>
    </member>
    <member name="T:System.Windows.Input.TraversalRequest">
      <summary>Rappresenta una richiesta per spostare lo stato attivo a un altro controllo.</summary>
    </member>
    <member name="M:System.Windows.Input.TraversalRequest.#ctor(System.Windows.Input.FocusNavigationDirection)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Input.TraversalRequest" />.</summary>
      <param name="focusNavigationDirection">Direzione desiderata dell'attraversamento dello stato attivo, come un valore dell'enumerazione.</param>
    </member>
    <member name="P:System.Windows.Input.TraversalRequest.FocusNavigationDirection">
      <summary>Ottiene la direzione di attraversamento.</summary>
      <returns>Uno dei valori di enumerazione della direzione di attraversamento.</returns>
    </member>
    <member name="P:System.Windows.Input.TraversalRequest.Wrapped">
      <summary>Ottiene o imposta un valore che indica se l'attraversamento dello stato attivo è o meno arrivato alla fine degli elementi figlio che possono avere lo stato attivo.</summary>
      <returns>
        <see langword="true" /> se questo attraversamento è arrivato alla fine degli elementi figlio che possono avere lo stato attivo; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Int32Rect">
      <summary>Descrive larghezza, altezza e posizione di un rettangolo Integer.</summary>
    </member>
    <member name="M:System.Windows.Int32Rect.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Inizializza una nuova istanza di <see cref="T:System.Windows.Int32Rect" /> con le coordinate <see cref="P:System.Windows.Int32Rect.X" /> e <see cref="P:System.Windows.Int32Rect.Y" /> specificate, nonché <see cref="P:System.Windows.Int32Rect.Width" /> e <see cref="P:System.Windows.Int32Rect.Height" /> specificati.</summary>
      <param name="x">
        <see cref="P:System.Windows.Int32Rect.X" /> della nuova istanza di <see cref="T:System.Windows.Int32Rect" /> che specifica la coordinata x dell'angolo superiore sinistro del rettangolo.</param>
      <param name="y">
        <see cref="P:System.Windows.Int32Rect.Y" /> della nuova istanza di <see cref="T:System.Windows.Int32Rect" /> che specifica la coordinata y dell'angolo superiore sinistro del rettangolo.</param>
      <param name="width">
        <see cref="P:System.Windows.Int32Rect.Width" /> della nuova istanza di <see cref="T:System.Windows.Int32Rect" /> che specifica la larghezza del rettangolo.</param>
      <param name="height">
        <see cref="P:System.Windows.Int32Rect.Height" /> della nuova istanza di <see cref="T:System.Windows.Int32Rect" /> che specifica l'altezza del rettangolo.</param>
    </member>
    <member name="M:System.Windows.Int32Rect.Equals(System.Object)">
      <summary>Determina se il rettangolo specificato è uguale a questo.</summary>
      <param name="o">Oggetto da confrontare con il rettangolo corrente.</param>
      <returns>
        <see langword="true" /> se <paramref name="o" /> è <see cref="T:System.Windows.Int32Rect" /> e ha gli stessi valori <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> e <see cref="P:System.Windows.Int32Rect.Height" /> di questo rettangolo. In caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Equals(System.Windows.Int32Rect)">
      <summary>Determina se il rettangolo specificato è uguale a questo.</summary>
      <param name="value">Rettangolo da confrontare con il rettangolo corrente.</param>
      <returns>
        <see langword="true" /> se <paramref name="value" /> ha gli stessi valori <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> e <see cref="P:System.Windows.Int32Rect.Height" /> di questo rettangolo. In caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Equals(System.Windows.Int32Rect,System.Windows.Int32Rect)">
      <summary>Determina se i rettangoli specificati sono uguali.</summary>
      <param name="int32Rect1">Primo rettangolo da confrontare.</param>
      <param name="int32Rect2">Secondo rettangolo da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="int32Rect1" /> e <paramref name="int32Rect2" /> hanno gli stessi valori <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> e <see cref="P:System.Windows.Int32Rect.Height" />. In caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.GetHashCode">
      <summary>Crea un codice hash dai valori <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> e <see cref="P:System.Windows.Int32Rect.Height" /> di questo rettangolo.</summary>
      <returns>Codice hash di questo rettangolo.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.op_Equality(System.Windows.Int32Rect,System.Windows.Int32Rect)">
      <summary>Confronta due rettangoli per verificarne l’esatta uguaglianza.</summary>
      <param name="int32Rect1">Primo rettangolo da confrontare.</param>
      <param name="int32Rect2">Secondo rettangolo da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="int32Rect1" /> e <paramref name="int32Rect2" /> hanno gli stessi valori <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> e <see cref="P:System.Windows.Int32Rect.Height" />. In caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.op_Inequality(System.Windows.Int32Rect,System.Windows.Int32Rect)">
      <summary>Confronta due rettangoli per verificarne la disuguaglianza.</summary>
      <param name="int32Rect1">Primo rettangolo da confrontare.</param>
      <param name="int32Rect2">Secondo rettangolo da confrontare.</param>
      <returns>
        <see langword="false" /> se <paramref name="int32Rect1" /> e <paramref name="int32Rect2" /> hanno gli stessi valori <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" />,e <see cref="P:System.Windows.Int32Rect.Height" />. In caso contrario, se tutti questi valori sono uguali, <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Parse(System.String)">
      <summary>Crea una struttura <see cref="T:System.Windows.Int32Rect" /> dalla rappresentazione di <see cref="T:System.String" /> specificata.</summary>
      <param name="source">Rappresentazione in forma di stringa di <see cref="T:System.Windows.Int32Rect" />.</param>
      <returns>Struttura <see cref="T:System.Windows.Int32Rect" /> equivalente.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>Formatta il valore dell'istanza corrente usando il formato specificato.</summary>
      <param name="format">Formato da usare.</param>
      <param name="provider">Provider da utilizzare per formattare il valore.</param>
      <returns>Valore dell'istanza corrente nel formato specificato.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.ToString">
      <summary>Crea una rappresentazione in forma di stringa di <see cref="T:System.Windows.Int32Rect" />.</summary>
      <returns>Stringa contenente gli stessi valori <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> e <see cref="P:System.Windows.Int32Rect.Height" /> di questa struttura <see cref="T:System.Windows.Int32Rect" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.ToString(System.IFormatProvider)">
      <summary>Crea una rappresentazione di <see cref="T:System.Windows.Int32Rect" /> in base all'oggetto <see cref="T:System.IFormatProvider" /> fornito.</summary>
      <param name="provider">Provider di formato da utilizzare. Se il provider è <see langword="null" />, vengono utilizzate le impostazioni cultura correnti.</param>
      <returns>Rappresentazione in forma di stringa di questa istanza di <see cref="T:System.Windows.Int32Rect" />.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Empty">
      <summary>Ottiene il rettangolo vuoto, un valore speciale che rappresenta un rettangolo senza posizione o area.</summary>
      <returns>Rettangolo vuoto senza posizione o area.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.HasArea">
      <summary>Ottiene un valore che indica se le proprietà <see cref="P:System.Windows.Int32Rect.Width" /> e <see cref="P:System.Windows.Int32Rect.Height" /> di <see cref="T:System.Windows.Int32Rect" /> sono maggiori di 0.</summary>
      <returns>
        <see langword="true" /> Se le <see cref="P:System.Windows.Int32Rect.Width" /><see cref="P:System.Windows.Int32Rect.Height" /> proprietà e di <see cref="T:System.Windows.Int32Rect" /> sono maggiori di 0; in caso contrario, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Height">
      <summary>Ottiene o imposta l'altezza del rettangolo.</summary>
      <returns>Altezza del rettangolo. Il valore predefinito è <c>0</c>.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.IsEmpty">
      <summary>Ottiene un valore che indica se il rettangolo è vuoto.</summary>
      <returns>
        <see langword="true" /> Se il rettangolo è vuoto; in caso contrario, <see langword="false" /> . Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Width">
      <summary>Ottiene o imposta la larghezza del rettangolo.</summary>
      <returns>Larghezza del rettangolo. Il valore predefinito è <c>0</c>.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.X">
      <summary>Ottiene o imposta la coordinata x dell'angolo superiore sinistro del rettangolo.</summary>
      <returns>Coordinata x dell'angolo superiore sinistro del rettangolo. Il valore predefinito è <c>0</c>.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Y">
      <summary>Ottiene o imposta la coordinata Y dell'angolo superiore sinistro del rettangolo.</summary>
      <returns>Coordinata Y dell'angolo superiore sinistro del rettangolo. Il valore predefinito è <c>0</c>.</returns>
    </member>
    <member name="T:System.Windows.Int32RectConverter">
      <summary>Converte istanze di altri tipi in e da un oggetto <see cref="T:System.Windows.Int32Rect" />.</summary>
    </member>
    <member name="M:System.Windows.Int32RectConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Int32RectConverter" />.</summary>
    </member>
    <member name="M:System.Windows.Int32RectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determina se un oggetto può essere convertito da un tipo specifico in un'istanza di un oggetto <see cref="T:System.Windows.Int32Rect" />.</summary>
      <param name="context">Descrive le informazioni di contesto di un tipo.</param>
      <param name="sourceType">Tipo dell'oggetto di origine valutato per la conversione.</param>
      <returns>
        <see langword="true" /> se il tipo può essere convertito in un oggetto <see cref="T:System.Windows.Int32Rect" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32RectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determina se un'istanza di un oggetto <see cref="T:System.Windows.Int32Rect" /> può essere convertita in un tipo diverso.</summary>
      <param name="context">Descrive le informazioni di contesto di un tipo.</param>
      <param name="destinationType">Tipo desiderato per cui questo oggetto <see cref="T:System.Windows.Int32Rect" /> viene valutato per la conversione.</param>
      <returns>
        <see langword="true" /> se <see cref="T:System.Windows.Int32Rect" /> può essere convertito in <paramref name="destinationType" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32RectConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Tenta di convertire il tipo specificato in un oggetto <see cref="T:System.Windows.Int32Rect" />.</summary>
      <param name="context">Fornisce informazioni sul contesto necessarie per la conversione.</param>
      <param name="culture">Informazioni relative alle impostazioni cultura da rispettare durante la conversione.</param>
      <param name="value">Oggetto da convertire.</param>
      <exception cref="T:System.NotSupportedException">Eccezione generata se l'oggetto specificato è NULL o un tipo che non può essere convertito in <see cref="T:System.Windows.Int32Rect" />.</exception>
      <returns>
        <see cref="T:System.Windows.Int32Rect" /> creato tramite la conversione di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Windows.Int32RectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Tenta di convertire un oggetto <see cref="T:System.Windows.Int32Rect" /> in un tipo specificato.</summary>
      <param name="context">Fornisce informazioni sul contesto necessarie per la conversione.</param>
      <param name="culture">Informazioni relative alle impostazioni cultura da rispettare durante la conversione.</param>
      <param name="value">Oggetto <see cref="T:System.Windows.Int32Rect" /> da convertire.</param>
      <param name="destinationType">Tipo in cui convertire l'oggetto <see cref="T:System.Windows.Int32Rect" /> corrente.</param>
      <exception cref="T:System.NotSupportedException">Eccezione generata se <paramref name="value" /> è <see langword="null" /> o non è un oggetto <see cref="T:System.Windows.Int32Rect" /> oppure se <paramref name="destinationType" /> non è uno dei tipi validi per la conversione.</exception>
      <returns>Oggetto creato tramite la conversione di <see cref="T:System.Windows.Int32Rect" />.</returns>
    </member>
    <member name="T:System.Windows.Interop.ComponentDispatcher">
      <summary>Abilita il controllo condiviso del message pump tra Win32 e WPF negli scenari di interoperatività.</summary>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.EnterThreadModal">
      <summary>Si verifica quando un thread diventa modale.</summary>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.LeaveThreadModal">
      <summary>Si verifica quando un thread modale diventa non modale.</summary>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage">
      <summary>Si verifica quando il message pump riceve un messaggio della tastiera.</summary>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.ThreadIdle">
      <summary>Si verifica quando il thread è inattivo.</summary>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage">
      <summary>Si verifica quando il message pump riceve un messaggio della tastiera.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.PopModal">
      <summary>Viene chiamato per indicare che un thread modale non è più modale.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.PushModal">
      <summary>Viene chiamato per indicare che il thread è modale.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.RaiseIdle">
      <summary>Viene chiamato per indicare che un thread è inattivo.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)">
      <summary>Indica che un messaggio nuovo è disponibile per la possibile gestione.</summary>
      <param name="msg">Messaggio e dati ad esso associati.</param>
      <returns>
        <see langword="true" />, se uno dei moduli che ascoltano il ciclo di messaggi ha elaborato il messaggio. Il proprietario del ciclo di messaggi dovrebbe ignorare il messaggio. <see langword="false" /> se il messaggio non è stato elaborato. In questo caso, il proprietario del message pump deve chiamare la funzione Win32 TranslateMessage seguita da DispatchMessage.</returns>
    </member>
    <member name="P:System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage">
      <summary>Ottiene l'ultimo messaggio generato.</summary>
      <returns>Ultimo messaggio.</returns>
    </member>
    <member name="P:System.Windows.Interop.ComponentDispatcher.IsThreadModal">
      <summary>Ottiene un valore che indica se il thread è modale.</summary>
      <returns>
        <see langword="true" /> se il thread è modale; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Interop.IKeyboardInputSink">
      <summary>Fornisce un sink della tastiera per i componenti che gestisce la tabulazione, gli acceleratori e i tasti di scelta rapida attraverso limiti di interoperatività e tra oggetti HWND. L'interfaccia implementa la gestione dei messaggi dalla tastiera negli scenari di interoperatività WPF-Win32.</summary>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin">
      <summary>Ottiene un valore che indica se il sink o uno dei componenti contenuti ha lo stato attivo.</summary>
      <returns>
        <see langword="true" /> se il sink o uno dei componenti contenuti ha lo stato attivo; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>Chiamato quando viene richiamato uno dei tasti di scelta rapida (tasti di scelta) per questo sink.</summary>
      <param name="msg">Il messaggio per i tasti di scelta rapida e i dati associati. Non modificare questa struttura del messaggio. Viene passata in base al riferimento per soli motivi di prestazione.</param>
      <param name="modifiers">Tasti di modifica.</param>
      <returns>
        <see langword="true" /> se il messaggio è stato gestito. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
      <summary>Registra l'interfaccia <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> di un componente contenuto.</summary>
      <param name="sink">Sink <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> del componente contenuto.</param>
      <returns>Il sito <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> del componente contenuto.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)">
      <summary>Imposta lo stato attivo sulla prima tabulazione o l'ultima tabulazione del sink.</summary>
      <param name="request">Specifica se lo stato attivo deve essere impostato sulla prima o l'ultima tabulazione.</param>
      <returns>
        <see langword="true" /> se lo stato attivo è stato impostato come richiesto; <see langword="false" />, se non ci sono tabulazioni.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>Elabora input dalla tastiera al livello del messaggio Keydown.</summary>
      <param name="msg">Messaggio e dati associati. Non modificare questa struttura. Viene passata in base al riferimento per soli motivi di prestazione.</param>
      <param name="modifiers">Tasti di modifica.</param>
      <returns>
        <see langword="true" /> se il messaggio è stato gestito dall'implementazione del metodo; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>Elabora i messaggi di input WM_CHAR, WM_SYSCHAR, WM_DEADCHAR e WM_SYSDEADCHAR prima che <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> venga chiamato.</summary>
      <param name="msg">Messaggio e dati associati. Non modificare questa struttura. Viene passata in base al riferimento per soli motivi di prestazione.</param>
      <param name="modifiers">Tasti di modifica.</param>
      <returns>
        <see langword="true" /> se il messaggio è stato elaborato e <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> non deve essere chiamato; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite">
      <summary>Ottiene o imposta un riferimento all'interfaccia <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> del contenitore del componente.</summary>
      <returns>Riferimento all'interfaccia <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> del contenitore.</returns>
    </member>
    <member name="T:System.Windows.Interop.IKeyboardInputSite">
      <summary>Gestisce lo stato attivo all'interno del contenitore.  L'interfaccia implementa la gestione dei messaggi dalla tastiera negli scenari di interoperatività WPF-Win32.</summary>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops(System.Windows.Input.TraversalRequest)">
      <summary>Chiamato da un componente contenuto quando ha raggiunto l'ultima tabulazione e non dispone di ulteriori elementi a cui accedere.</summary>
      <param name="request">Specifica se lo stato attivo deve essere impostato sulla prima o l'ultima tabulazione.</param>
      <returns>Se questo metodo restituisce <see langword="true" />, il sito ha spostato lo stato attivo su un altro componente. Se il metodo restituisce <see langword="false" />, lo stato attivo è ancora presente nel componente chiamante. Il componente deve "eseguire il wrapping" e impostare lo stato attivo alla prima tabulazione contenuta.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSite.Unregister">
      <summary>Annulla la registrazione un sink dell'input da tastiera figlio da questo sito.</summary>
    </member>
    <member name="P:System.Windows.Interop.IKeyboardInputSite.Sink">
      <summary>Ottiene il sink della tastiera associato a questo sito.</summary>
      <returns>L'interfaccia <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> del sito corrente.</returns>
    </member>
    <member name="T:System.Windows.Interop.MSG">
      <summary>Contiene informazioni sul messaggio dalla coda di messaggi di un thread.</summary>
    </member>
    <member name="P:System.Windows.Interop.MSG.hwnd">
      <summary>Ottiene o imposta l'handle della finestra (HWND) per la finestra la cui routine riceve il messaggio.</summary>
      <returns>Handle della finestra (HWND).</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.lParam">
      <summary>Ottiene o imposta il valore <paramref name="lParam" /> che specifica informazioni aggiuntive sul messaggio. Il significato esatto dipende dal valore del membro <see cref="P:System.Windows.Interop.MSG.message" />.</summary>
      <returns>Valore <paramref name="lParam" /> per il messaggio.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.message">
      <summary>Ottiene o imposta l'identificatore del messaggio.</summary>
      <returns>Identificatore del messaggio.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.pt_x">
      <summary>Ottiene o imposta la coordinata x della posizione del cursore sullo schermo, quando il messaggio è stato inserito.</summary>
      <returns>Coordinata x della posizione del cursore.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.pt_y">
      <summary>Ottiene o imposta la coordinata y della posizione del cursore sullo schermo, quando il messaggio è stato inserito.</summary>
      <returns>Coordinata y della posizione del cursore.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.time">
      <summary>Ottiene o imposta l'ora in cui è stato inserito il messaggio.</summary>
      <returns>L'ora in cui il messaggio è stato inserito.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.wParam">
      <summary>Ottiene o imposta il valore <paramref name="wParam" /> per il messaggio, che specifica informazioni aggiuntive sul messaggio. Il significato esatto dipende dal valore del messaggio.</summary>
      <returns>Valore <paramref name="wParam" /> per il messaggio.</returns>
    </member>
    <member name="T:System.Windows.Interop.ThreadMessageEventHandler">
      <summary>Rappresenta il metodo che gestisce gli eventi <see cref="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage" /> e <see cref="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage" />.</summary>
      <param name="msg">Struttura con i dati del messaggio.</param>
      <param name="handled">
        <see langword="true" /> se il messaggio è stato gestito. In caso contrario, <see langword="false" />.</param>
    </member>
    <member name="T:System.Windows.IWeakEventListener">
      <summary>Fornisce supporto per l'ascolto di eventi alle classi in attesa di ricevere eventi tramite il modello WeakEvent e <see cref="T:System.Windows.WeakEventManager" />.</summary>
    </member>
    <member name="M:System.Windows.IWeakEventListener.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>Riceve gli eventi dal gestore degli eventi centralizzato.</summary>
      <param name="managerType">Il tipo di <see cref="T:System.Windows.WeakEventManager" /> che chiama questo metodo.</param>
      <param name="sender">Oggetto che ha originato l'evento.</param>
      <param name="e">Dati dell'evento.</param>
      <returns>
        <see langword="true" /> se il listener ha gestito l'evento. È considerato errore se l'oggetto <see cref="T:System.Windows.WeakEventManager" /> responsabile della gestione in WPF registra un listener per un evento che non viene gestito dal listener stesso. In ogni caso, il metodo deve restituire <see langword="false" /> se riceve un evento che non riconosce o gestisce.</returns>
    </member>
    <member name="T:System.Windows.LocalValueEntry">
      <summary>Rappresenta un identificatore di proprietà e il valore della proprietà per una proprietà di dipendenza impostata in locale.</summary>
    </member>
    <member name="M:System.Windows.LocalValueEntry.Equals(System.Object)">
      <summary>Determina se due istanze di <see cref="T:System.Windows.LocalValueEntry" /> sono uguali.</summary>
      <param name="obj">Oggetto <see cref="T:System.Windows.LocalValueEntry" /> da confrontare con l'oggetto <see cref="T:System.Windows.LocalValueEntry" /> corrente.</param>
      <returns>Questa implementazione <see cref="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)" /> confronta i valori di <see cref="P:System.Windows.LocalValueEntry.Property" /> ed eventualmente i valori di <see cref="P:System.Windows.LocalValueEntry.Value" />. Poiché il componente <see cref="P:System.Windows.LocalValueEntry.Property" /> di un oggetto <see cref="T:System.Windows.LocalValueEntry" /> è un tipo di valore, il confronto sarà sempre di tipo bit per bit. Per il componente <see cref="P:System.Windows.LocalValueEntry.Value" />, questa implementazione utilizza un confronto bit per bit se il componente è un tipo di valore. Per proprietà impostate localmente che hanno tipi di riferimento, il comportamento viene rinviato ai meccanismi di determinazione di uguaglianza del tipo, in quanto utilizza internamente l'operatore == sui due valori. Per impostazione predefinita, si tratterebbe di un'uguaglianza di riferimenti dei valori e pertanto l'uguaglianza dell'intero oggetto <see cref="T:System.Windows.LocalValueEntry" /> diverrebbe un'uguaglianza di riferimenti.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEntry.GetHashCode">
      <summary>Restituisce il codice hash per questo oggetto <see cref="T:System.Windows.LocalValueEntry" />.</summary>
      <returns>Valore intero a 32 bit con segno.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
      <summary>Confronta le istanze di <see cref="T:System.Windows.LocalValueEntry" /> specificate per determinare se sono identiche.</summary>
      <param name="obj1">Prima istanza da confrontare.</param>
      <param name="obj2">Seconda istanza da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="obj1" /><see cref="T:System.Windows.LocalValueEntry" /> è uguale a <paramref name="obj2" /><see cref="T:System.Windows.LocalValueEntry" />. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEntry.op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
      <summary>Confronta le istanze di <see cref="T:System.Windows.LocalValueEnumerator" /> specificate per determinare se sono diverse.</summary>
      <param name="obj1">Prima istanza da confrontare.</param>
      <param name="obj2">Seconda istanza da confrontare.</param>
      <returns>Questa implementazione confronta i valori dei componenti <see cref="P:System.Windows.LocalValueEntry.Property" /> e <see cref="P:System.Windows.LocalValueEntry.Value" /> di  un oggetto <see cref="T:System.Windows.LocalValueEntry" />. Poiché il componente <see cref="P:System.Windows.LocalValueEntry.Property" /> di un oggetto <see cref="T:System.Windows.LocalValueEntry" /> è sempre un tipo di valore, il confronto dei valori sarà sempre di tipo bit per bit. Per il componente <see cref="P:System.Windows.LocalValueEntry.Value" />, questa implementazione utilizza un confronto bit per bit se il componente è un tipo di valore.  
  
Per le proprietà impostate localmente che hanno tipi di riferimento, il comportamento viene rinviato ai meccanismi di determinazione di uguaglianza del tipo, in quanto utilizza internamente l'operatore <see langword="==" /> sui due valori. Per impostazione predefinita, si tratta di un'uguaglianza di riferimento dei valori.</returns>
    </member>
    <member name="P:System.Windows.LocalValueEntry.Property">
      <summary>Ottiene l'identificatore per la proprietà di dipendenza impostata localmente rappresentata da questa voce.</summary>
      <returns>Identificatore della proprietà di dipendenza impostata localmente.</returns>
    </member>
    <member name="P:System.Windows.LocalValueEntry.Value">
      <summary>Ottiene il valore della proprietà di dipendenza impostata localmente.</summary>
      <returns>Valore della proprietà di dipendenza impostata localmente come oggetto.</returns>
    </member>
    <member name="T:System.Windows.LocalValueEnumerator">
      <summary>Fornisce il supporto di enumerazione per i valori locali di qualsiasi proprietà di dipendenza presente in un oggetto <see cref="T:System.Windows.DependencyObject" />.</summary>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.Equals(System.Object)">
      <summary>Determina se l'oggetto <see cref="T:System.Windows.LocalValueEnumerator" /> fornito equivale a questo oggetto <see cref="T:System.Windows.LocalValueEnumerator" />.</summary>
      <param name="obj">Oggetto <see cref="T:System.Windows.LocalValueEnumerator" /> da confrontare con l'oggetto <see cref="T:System.Windows.LocalValueEnumerator" /> corrente.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Windows.LocalValueEnumerator" /> specificato è uguale all'oggetto <see cref="T:System.Windows.LocalValueEnumerator" /> corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.GetHashCode">
      <summary>Restituisce un codice hash per l'oggetto <see cref="T:System.Windows.LocalValueEnumerator" /> corrente.</summary>
      <returns>Codice hash di valori interi a 32 bit.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.MoveNext">
      <summary>Sposta l'enumeratore all'elemento successivo della raccolta.</summary>
      <returns>
        <see langword="true" /> se l'enumeratore è stato spostato correttamente in avanti in corrispondenza dell'elemento successivo, <see langword="false" /> se l'enumeratore ha superato la fine della raccolta.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)">
      <summary>Confronta due oggetti <see cref="T:System.Windows.LocalValueEnumerator" /> specificati per verificare se sono uguali.</summary>
      <param name="obj1">Primo oggetto da confrontare.</param>
      <param name="obj2">Secondo oggetto da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="obj1" /><see cref="T:System.Windows.LocalValueEnumerator" /> è uguale a <paramref name="obj2" /><see cref="T:System.Windows.LocalValueEnumerator" />. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)">
      <summary>Confronta due oggetti <see cref="T:System.Windows.LocalValueEnumerator" /> specificati per determinare se sono diversi.</summary>
      <param name="obj1">Primo oggetto da confrontare.</param>
      <param name="obj2">Secondo oggetto da confrontare.</param>
      <returns>
        <see langword="true" /> se le istanze non sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.Reset">
      <summary>Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nella raccolta.</summary>
    </member>
    <member name="P:System.Windows.LocalValueEnumerator.Count">
      <summary>Ottiene il numero di elementi rappresentati nell'insieme.</summary>
      <returns>Numero di elementi nella raccolta.</returns>
    </member>
    <member name="P:System.Windows.LocalValueEnumerator.Current">
      <summary>Ottiene l'elemento corrente della raccolta.</summary>
      <returns>
        <see cref="T:System.Windows.LocalValueEntry" /> corrente presente nell'insieme.</returns>
    </member>
    <member name="P:System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current">
      <summary>Per una descrizione di questo membro, vedere <see cref="P:System.Collections.IEnumerator.Current" />.</summary>
      <returns>Elemento corrente nella raccolta.</returns>
    </member>
    <member name="T:System.Windows.Markup.DesignerSerializationOptions">
      <summary>Specifica come una proprietà deve essere serializzata.</summary>
    </member>
    <member name="F:System.Windows.Markup.DesignerSerializationOptions.SerializeAsAttribute">
      <summary>La proprietà deve essere serializzata come un attributo.</summary>
    </member>
    <member name="T:System.Windows.Markup.DesignerSerializationOptionsAttribute">
      <summary>Specifica i flag della serializzazione per una proprietà.</summary>
    </member>
    <member name="M:System.Windows.Markup.DesignerSerializationOptionsAttribute.#ctor(System.Windows.Markup.DesignerSerializationOptions)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.DesignerSerializationOptionsAttribute" />.</summary>
      <param name="designerSerializationOptions">Specifica come deve essere serializzata la proprietà.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="designerSerializationOptions" /> non è un valore valido di <see cref="T:System.Windows.Markup.DesignerSerializationOptions" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.DesignerSerializationOptionsAttribute.DesignerSerializationOptions">
      <summary>Ottiene <see cref="T:System.Windows.Markup.DesignerSerializationOptions" /> impostato sull'attributo.</summary>
      <returns>Opzione di serializzazione, come un valore dell'enumerazione.</returns>
    </member>
    <member name="T:System.Windows.Markup.InternalTypeHelper">
      <summary>Classe astratta utilizzata internamente dal compilatore XAML WPF per supportare l'utilizzo di tipi interni.</summary>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.InternalTypeHelper" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
      <summary>Quando è sottoposto a override in una classe derivata (generata), viene associato un delegato del gestore eventi a un evento interno.</summary>
      <param name="eventInfo">Informazioni sull'evento per l'evento (informazioni sulla reflection CLR).</param>
      <param name="target">Destinazione a cui è associato il gestore.</param>
      <param name="handler">Gestore eventi.</param>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
      <summary>Quando è sottoposto a override in una classe derivata (generata), viene creato un delegato di evento che fa riferimento a un metodo del gestore non pubblico.</summary>
      <param name="delegateType">
        <see cref="T:System.Type" /> del delegato.</param>
      <param name="target">Destinazione a cui è associato il gestore.</param>
      <param name="handler">Nome dell'implementazione del gestore.</param>
      <returns>Riferimento del delegato.</returns>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
      <summary>Quando è sottoposto a override in una classe derivata (generata), crea un'istanza di un tipo interno.</summary>
      <param name="type">Oggetto <see cref="T:System.Type" /> da creare.</param>
      <param name="culture">Informazioni specifiche delle impostazioni cultura.</param>
      <returns>Istanza creata.</returns>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
      <summary>Quando è sottoposto a override in una classe derivata (generata), ottiene il valore di una proprietà interna dell'oggetto di destinazione.</summary>
      <param name="propertyInfo">Informazioni sulla proprietà per la proprietà da ottenere.</param>
      <param name="target">Oggetto che contiene il valore della proprietà desiderato.</param>
      <param name="culture">Informazioni specifiche delle impostazioni cultura.</param>
      <returns>Valore della proprietà.</returns>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
      <summary>Quando è sottoposto a override in una classe derivata (generata), imposta il valore su una proprietà interna dell'oggetto di destinazione.</summary>
      <param name="propertyInfo">Informazioni sulla proprietà per la proprietà da impostare.</param>
      <param name="target">Oggetto che contiene il valore della proprietà desiderato.</param>
      <param name="value">Il valore da impostare.</param>
      <param name="culture">Informazioni specifiche delle impostazioni cultura.</param>
    </member>
    <member name="T:System.Windows.Markup.IReceiveMarkupExtension">
      <summary>Fornisce un meccanismo in base al quale i tipi possono dichiarare di poter ricevere un'espressione (o un'altra classe) da un'estensione di markup, in cui l'output è un tipo di proprietà diverso dalla proprietà di destinazione. Non usare per le implementazioni di .NET Framework 4.</summary>
    </member>
    <member name="M:System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension(System.String,System.Windows.Markup.MarkupExtension,System.IServiceProvider)">
      <summary>Rende disponibile la gestione per le estensioni di markup che forniscono i valori delle proprietà. Non usare per le implementazioni di .NET Framework 4; vedere <see cref="T:System.Windows.Markup.IReceiveMarkupExtension" />.</summary>
      <param name="property">Nome della proprietà di destinazione.</param>
      <param name="markupExtension">Istanza dell'estensione di markup dei dati in ingresso.</param>
      <param name="serviceProvider">Può fornire servizi aggiuntivi che devono essere eseguiti durante l'elaborazione dei dati dell'estensione di markup per il valore di una proprietà.</param>
    </member>
    <member name="T:System.Windows.Markup.Primitives.MarkupObject">
      <summary>Classe astratta che rappresenta un oggetto che può essere utilizzato per spostarsi nella struttura ad albero di oggetti.</summary>
    </member>
    <member name="M:System.Windows.Markup.Primitives.MarkupObject.AssignRootContext(System.Windows.Markup.IValueSerializerContext)">
      <summary>Se sottoposto a override in una classe derivata, attribuisce un contesto di primo livello per le classi <see cref="T:System.Windows.Markup.ValueSerializer" />.</summary>
      <param name="context">
        <see cref="T:System.Windows.Markup.IValueSerializerContext" /> per il quale attribuire un contesto di primo livello.</param>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.Attributes">
      <summary>Quando viene sottoposto a override in una classe derivata, ottiene gli attributi associati a questo oggetto <see cref="T:System.Windows.Markup.Primitives.MarkupObject" />.</summary>
      <returns>Raccolta di attributi.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.Instance">
      <summary>Se sottoposta a override in una classe derivata, ottiene l'istanza dell'oggetto rappresentato da questo oggetto <see cref="T:System.Windows.Markup.Primitives.MarkupObject" />.</summary>
      <returns>Istanza dell'oggetto.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.ObjectType">
      <summary>Se sottoposta a override in una classe derivata, ottiene il tipo dell'istanza di <see cref="T:System.Windows.Markup.Primitives.MarkupObject" />.</summary>
      <returns>Tipo dell'oggetto.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.Properties">
      <summary>Se sottoposta a override in una classe derivata, ottiene le proprietà dell'istanza di <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> che deve essere scritta in XAML.</summary>
      <returns>Proprietà.</returns>
    </member>
    <member name="T:System.Windows.Markup.Primitives.MarkupProperty">
      <summary>Classe astratta che fornisce una descrizione della proprietà da utilizzare durante la scrittura in un markup che incapsula l'accesso a proprietà e i valori.</summary>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Attributes">
      <summary>Quando viene sottoposto a override in una classe derivata, ottiene gli attributi associati a questo oggetto <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</summary>
      <returns>Raccolta di attributi.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty">
      <summary>Quando viene sottoposto a override in una classe derivata, ottiene l'identificatore <see cref="T:System.Windows.DependencyProperty" /> per la proprietà del markup se la proprietà è implementata come proprietà di dipendenza.</summary>
      <returns>Identificatore della proprietà di dipendenza.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsAttached">
      <summary>Quando viene sottoposto a override in una classe derivata, indica se <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> è un <see cref="T:System.Windows.DependencyProperty" /> associato.</summary>
      <returns>
        <see langword="true" /> se la proprietà è un oggetto <see cref="T:System.Windows.DependencyProperty" /> associato; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsComposite">
      <summary>Quando viene sottoposto a override in una classe derivata, indica se <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> è una proprietà composta.</summary>
      <returns>
        <see langword="true" /> se questa proprietà è una proprietà composta, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument">
      <summary>Quando viene sottoposto a override in una classe derivata, indica se <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> rappresenta un argomento del costruttore.</summary>
      <returns>
        <see langword="true" /> se la proprietà rappresenta un argomento del costruttore. In caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsContent">
      <summary>Quando viene sottoposto a override in una classe derivata, indica se <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> rappresenta il contenuto diretto di un insieme.</summary>
      <returns>
        <see langword="true" /> se la proprietà rappresenta il contenuto diretto, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsKey">
      <summary>Se sottoposta a override in una classe derivata, indica se <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> rappresenta la chiave utilizzata da <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> per archiviare l'elemento in un dizionario.</summary>
      <returns>
        <see langword="true" /> se la proprietà rappresenta una chiave; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString">
      <summary>Se sottoposta a override in una classe derivata, indica se <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> rappresenta testo passato a un convertitore di tipi per creare un'istanza della proprietà o se deve essere utilizzato un costruttore.</summary>
      <returns>
        <see langword="true" />, se <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> rappresenta una stringa; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Items">
      <summary>Se sottoposta a override in una classe derivata, ottiene gli elementi che compongono il valore di questa proprietà.</summary>
      <returns>Gli elementi che compongono il valore di questa proprietà.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Name">
      <summary>Quando viene sottoposto a override in una classe derivata, ottiene un nome utilizzato per la diagnostica e la segnalazione errori.</summary>
      <returns>Nome della proprietà dell'identificatore.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor">
      <summary>Quando viene sottoposta a override in una classe derivata, ottiene <see cref="T:System.ComponentModel.PropertyDescriptor" /> per la proprietà del markup.</summary>
      <returns>Descrittore della proprietà.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyType">
      <summary>Quando è sottoposto a override in una classe derivata, ottiene il tipo CLR della proprietà.</summary>
      <returns>Tipo CLR.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.StringValue">
      <summary>Quando viene sottoposto a override in una classe derivata, ottiene il valore stringa dell'oggetto <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</summary>
      <returns>Valore stringa.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.TypeReferences">
      <summary>Se sottoposto a override in una classe derivata, ottiene il set di tipi a cui <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> farà riferimento quando serializza il valore come stringa.</summary>
      <returns>Set di tipi.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Value">
      <summary>Quando viene sottoposto a override in una classe derivata ottiene il valore corrente dell'oggetto <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</summary>
      <returns>Valore corrente.</returns>
    </member>
    <member name="T:System.Windows.Markup.ServiceProviders">
      <summary>Fornisce un'implementazione per l'interfaccia <see cref="T:System.IServiceProvider" /> con metodi che consentono l’aggiunta di servizi.</summary>
    </member>
    <member name="M:System.Windows.Markup.ServiceProviders.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.ServiceProviders" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.ServiceProviders.AddService(System.Type,System.Object)">
      <summary>Consente di aggiungere un servizio all'elenco.</summary>
      <param name="serviceType">Tipo del nuovo servizio.</param>
      <param name="service">Classe di implementazione del servizio.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> o <paramref name="service" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Si è tentato di aggiungere un servizio già presente nel dizionario.</exception>
    </member>
    <member name="M:System.Windows.Markup.ServiceProviders.GetService(System.Type)">
      <summary>Ottiene l'oggetto servizio del tipo specificato.</summary>
      <param name="serviceType">Tipo di servizio da ottenere.</param>
      <returns>Implementazione del servizio per il tipo <paramref name="serviceType" />. Può essere <see langword="null" /> se non è stato memorizzato alcun servizio per il tipo <paramref name="serviceType" />.</returns>
    </member>
    <member name="T:System.Windows.Media.Converters.MatrixValueSerializer">
      <summary>Converte istanze dell'oggetto <see cref="T:System.String" /> in istanze dell'oggetto <see cref="T:System.Windows.Media.Matrix" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Media.Converters.MatrixValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determina se la conversione da un oggetto <see cref="T:System.String" /> specificato a un'istanza di <see cref="T:System.Windows.Media.Matrix" /> sia possibile.</summary>
      <param name="value">Stringa da valutare per la conversione.</param>
      <param name="context">Informazioni di contesto utilizzate per la conversione.</param>
      <returns>
        <see langword="true" /> se il valore può essere convertito. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determina se un'istanza di <see cref="T:System.Windows.Media.Matrix" /> può essere convertita in <see cref="T:System.String" />.</summary>
      <param name="value">Istanza di <see cref="T:System.Windows.Media.Matrix" /> da valutare per la conversione.</param>
      <param name="context">Informazioni di contesto utilizzate per la conversione.</param>
      <exception cref="T:System.ArgumentException">Si verifica quando <paramref name="value" /> non è un oggetto <see cref="T:System.Windows.Media.Int32Collection" />.</exception>
      <returns>
        <see langword="true" /> se l'oggetto <paramref name="value" /> può essere convertito in un oggetto <see cref="T:System.String" />. In caso contrario, <see langword="false" /></returns>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converte <see cref="T:System.String" /> in <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="value">Valore <see cref="T:System.String" /> da convertire in <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="context">Informazioni di contesto utilizzate per la conversione.</param>
      <returns>Nuova istanza di <see cref="T:System.Windows.Media.Matrix" /> basata sull'oggetto <paramref name="value" /> specificato.</returns>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converte un'istanza di <see cref="T:System.Windows.Media.Matrix" /> in <see cref="T:System.String" />.</summary>
      <param name="value">Istanza di <see cref="T:System.Windows.Media.Matrix" /> da valutare per la conversione.</param>
      <param name="context">Informazioni di contesto utilizzate per la conversione.</param>
      <returns>Rappresentazione <see cref="T:System.String" /> dell'oggetto <see cref="T:System.Windows.Media.Matrix" /> specificato.</returns>
    </member>
    <member name="T:System.Windows.Media.DisableDpiAwarenessAttribute">
      <summary>Consente alle applicazioni WPF di disabilitare la compatibilità con i valori DPI (dots per inch, punti per pollice) per tutti gli elementi dell'interfaccia utente.</summary>
    </member>
    <member name="M:System.Windows.Media.DisableDpiAwarenessAttribute.#ctor">
      <summary>Inizializza una nuova istanza di <see cref="T:System.Windows.Media.DisableDpiAwarenessAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.Media.Matrix">
      <summary>Rappresenta una matrice di trasformazione affine 3x3 usata per le trasformazioni nello spazio 2D.</summary>
    </member>
    <member name="M:System.Windows.Media.Matrix.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="m11">Coefficiente <see cref="P:System.Windows.Media.Matrix.M11" /> della nuova struttura <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="m12">Coefficiente <see cref="P:System.Windows.Media.Matrix.M12" /> della nuova struttura <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="m21">Coefficiente <see cref="P:System.Windows.Media.Matrix.M21" /> della nuova struttura <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="m22">Coefficiente <see cref="P:System.Windows.Media.Matrix.M22" /> della nuova struttura <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="offsetX">Coefficiente <see cref="P:System.Windows.Media.Matrix.OffsetX" /> della nuova struttura <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="offsetY">Coefficiente <see cref="P:System.Windows.Media.Matrix.OffsetY" /> della nuova struttura <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)">
      <summary>Accoda la struttura <see cref="T:System.Windows.Media.Matrix" /> specificata alla struttura <see cref="T:System.Windows.Media.Matrix" /> corrente.</summary>
      <param name="matrix">Struttura <see cref="T:System.Windows.Media.Matrix" /> da accodare alla struttura <see cref="T:System.Windows.Media.Matrix" /> corrente.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Object)">
      <summary>Determina se l'oggetto <see cref="T:System.Object" /> specificato è o meno una struttura <see cref="T:System.Windows.Media.Matrix" /> identica alla struttura <see cref="T:System.Windows.Media.Matrix" /> corrente.</summary>
      <param name="o">Oggetto <see cref="T:System.Object" /> da confrontare.</param>
      <returns>
        <see langword="true" /> se l'oggetto <paramref name="o" /> è una struttura <see cref="T:System.Windows.Media.Matrix" /> identica a questa struttura <see cref="T:System.Windows.Media.Matrix" />, altrimenti <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix)">
      <summary>Determina se la struttura <see cref="T:System.Windows.Media.Matrix" /> specificata è uguale o meno a questa istanza.</summary>
      <param name="value">Istanza della struttura <see cref="T:System.Windows.Media.Matrix" /> da confrontare con questa istanza.</param>
      <returns>
        <see langword="true" /> se le istanze sono uguali, altrimenti <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary>Determina se le due strutture <see cref="T:System.Windows.Media.Matrix" /> specificate sono identiche.</summary>
      <param name="matrix1">Prima struttura <see cref="T:System.Windows.Media.Matrix" /> da confrontare.</param>
      <param name="matrix2">Seconda struttura <see cref="T:System.Windows.Media.Matrix" /> da confrontare.</param>
      <returns>
        <see langword="true" /> se le matrici <paramref name="matrix1" /> e <paramref name="matrix2" /> sono identiche, altrimenti <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.GetHashCode">
      <summary>Restituisce il codice hash di questa struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns>Codice hash per l'istanza.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Invert">
      <summary>Inverte la struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <exception cref="T:System.InvalidOperationException">La struttura <see cref="T:System.Windows.Media.Matrix" /> non è invertibile.</exception>
    </member>
    <member name="M:System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary>Moltiplica una struttura <see cref="T:System.Windows.Media.Matrix" /> per un'altra struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="trans1">Prima struttura <see cref="T:System.Windows.Media.Matrix" /> da moltiplicare.</param>
      <param name="trans2">Seconda struttura <see cref="T:System.Windows.Media.Matrix" /> da moltiplicare.</param>
      <returns>Risultato della moltiplicazione di <paramref name="trans1" /> per <paramref name="trans2" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary>Determina se le due strutture <see cref="T:System.Windows.Media.Matrix" /> specificate sono identiche.</summary>
      <param name="matrix1">Prima struttura <see cref="T:System.Windows.Media.Matrix" /> da confrontare.</param>
      <param name="matrix2">Seconda struttura <see cref="T:System.Windows.Media.Matrix" /> da confrontare.</param>
      <returns>
        <see langword="true" /> se le matrici <paramref name="matrix1" /> e <paramref name="matrix2" /> sono identiche, altrimenti <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Inequality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary>Determina se le due strutture <see cref="T:System.Windows.Media.Matrix" /> specificate non sono identiche.</summary>
      <param name="matrix1">Prima struttura <see cref="T:System.Windows.Media.Matrix" /> da confrontare.</param>
      <param name="matrix2">Seconda struttura <see cref="T:System.Windows.Media.Matrix" /> da confrontare.</param>
      <returns>
        <see langword="true" /> se le matrici <paramref name="matrix1" /> e <paramref name="matrix2" /> non sono identiche, altrimenti <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary>Moltiplica una struttura <see cref="T:System.Windows.Media.Matrix" /> per un'altra struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="trans1">Prima struttura <see cref="T:System.Windows.Media.Matrix" /> da moltiplicare.</param>
      <param name="trans2">Seconda struttura <see cref="T:System.Windows.Media.Matrix" /> da moltiplicare.</param>
      <returns>Risultato della moltiplicazione di <paramref name="trans1" /> per <paramref name="trans2" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Parse(System.String)">
      <summary>Converte una rappresentazione <see cref="T:System.String" /> di una matrice nella struttura <see cref="T:System.Windows.Media.Matrix" /> equivalente.</summary>
      <param name="source">Rappresentazione <see cref="T:System.String" /> della matrice.</param>
      <returns>Struttura <see cref="T:System.Windows.Media.Matrix" /> equivalente.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)">
      <summary>Antepone la struttura <see cref="T:System.Windows.Media.Matrix" /> specificata alla struttura <see cref="T:System.Windows.Media.Matrix" /> corrente.</summary>
      <param name="matrix">Struttura <see cref="T:System.Windows.Media.Matrix" /> da anteporre alla struttura <see cref="T:System.Windows.Media.Matrix" /> corrente.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Rotate(System.Double)">
      <summary>Applica una rotazione dell'angolo specificato intorno all'origine della struttura <see cref="T:System.Windows.Media.Matrix" /> .</summary>
      <param name="angle">Angolo di rotazione.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)">
      <summary>Ruota la matrice intorno al punto specificato.</summary>
      <param name="angle">Angolo, espresso in gradi, in base al quale ruotare la matrice.</param>
      <param name="centerX">Coordinata x del punto intorno al quale ruotare la matrice.</param>
      <param name="centerY">Coordinata y del punto intorno al quale ruotare la matrice.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)">
      <summary>Antepone alla struttura <see cref="T:System.Windows.Media.Matrix" /> una rotazione dell'angolo specificato intorno al punto definito.</summary>
      <param name="angle">Angolo di rotazione espresso in gradi.</param>
      <param name="centerX">Coordinata x del centro di rotazione.</param>
      <param name="centerY">Coordinata y del centro di rotazione.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.RotatePrepend(System.Double)">
      <summary>Antepone alla struttura <see cref="T:System.Windows.Media.Matrix" /> una rotazione dell'angolo specificato.</summary>
      <param name="angle">Angolo di rotazione da anteporre.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Scale(System.Double,System.Double)">
      <summary>Accoda il vettore di ridimensionamento specificato alla struttura <see cref="T:System.Windows.Media.Matrix" /> corrente.</summary>
      <param name="scaleX">Valore in base al quale ridimensionare la struttura <see cref="T:System.Windows.Media.Matrix" /> lungo l'asse x.</param>
      <param name="scaleY">Valore in base al quale ridimensionare la struttura <see cref="T:System.Windows.Media.Matrix" /> lungo l'asse y.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)">
      <summary>Ridimensiona la struttura <see cref="T:System.Windows.Media.Matrix" /> rispetto al punto specificato in base al valore definito.</summary>
      <param name="scaleX">Valore in base al quale ridimensionare la struttura <see cref="T:System.Windows.Media.Matrix" /> lungo l'asse x.</param>
      <param name="scaleY">Valore in base al quale ridimensionare la struttura <see cref="T:System.Windows.Media.Matrix" /> lungo l'asse y.</param>
      <param name="centerX">Coordinata x del punto centrale dell'operazione di ridimensionamento.</param>
      <param name="centerY">Coordinata y del punto centrale dell'operazione di ridimensionamento.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)">
      <summary>Antepone il ridimensionamento specificato rispetto al punto definito di questa struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="scaleX">Fattore di scala dell'asse x.</param>
      <param name="scaleY">Fattore di scala dell'asse y.</param>
      <param name="centerX">Coordinata x del punto rispetto al quale viene eseguita l'operazione di ridimensionamento.</param>
      <param name="centerY">Coordinata y del punto rispetto al quale viene eseguita l'operazione di ridimensionamento.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ScalePrepend(System.Double,System.Double)">
      <summary>Antepone il vettore di ridimensionamento specificato alla struttura <see cref="T:System.Windows.Media.Matrix" /> corrente.</summary>
      <param name="scaleX">Valore in base al quale ridimensionare la struttura <see cref="T:System.Windows.Media.Matrix" /> lungo l'asse x.</param>
      <param name="scaleY">Valore in base al quale ridimensionare la struttura <see cref="T:System.Windows.Media.Matrix" /> lungo l'asse y.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.SetIdentity">
      <summary>Cambia la struttura <see cref="T:System.Windows.Media.Matrix" /> in una matrice di identità.</summary>
    </member>
    <member name="M:System.Windows.Media.Matrix.Skew(System.Double,System.Double)">
      <summary>Accoda alla struttura <see cref="T:System.Windows.Media.Matrix" /> un'inclinazione di gradi specificati nelle dimensioni x e y.</summary>
      <param name="skewX">Angolo nella dimensione x in base al quale inclinare la struttura <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="skewY">Angolo nella dimensione y in base al quale inclinare la struttura <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.SkewPrepend(System.Double,System.Double)">
      <summary>Antepone alla struttura <see cref="T:System.Windows.Media.Matrix" /> un'inclinazione di gradi specificati nelle dimensioni x e y.</summary>
      <param name="skewX">Angolo nella dimensione x in base al quale inclinare la struttura <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="skewY">Angolo nella dimensione y in base al quale inclinare la struttura <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>Formatta il valore dell'istanza corrente usando il formato specificato.</summary>
      <param name="format">Formato da usare.  
  
-oppure- 
Riferimento null (<see langword="Nothing" /> in Visual Basic) per usare il formato predefinito per il tipo dell'implementazione di <see cref="T:System.IFormattable" />.</param>
      <param name="provider">Provider da utilizzare per formattare il valore.  
  
-oppure- 
Riferimento null (<see langword="Nothing" /> in Visual Basic) per ottenere le informazioni sul formato numerico dalle impostazioni locali correnti del sistema operativo.</param>
      <returns>Valore dell'istanza corrente nel formato specificato.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.ToString">
      <summary>Crea una rappresentazione <see cref="T:System.String" /> di questa struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns>Oggetto <see cref="T:System.String" /> contenente i membri <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" /> e <see cref="P:System.Windows.Media.Matrix.OffsetX" /> nonché i valori <see cref="P:System.Windows.Media.Matrix.OffsetY" /> della struttura <see cref="T:System.Windows.Media.Matrix" /> corrente.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.ToString(System.IFormatProvider)">
      <summary>Crea una rappresentazione <see cref="T:System.String" /> della struttura <see cref="T:System.Windows.Media.Matrix" /> con le informazioni di formattazione specifiche delle impostazioni cultura.</summary>
      <param name="provider">Informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Oggetto <see cref="T:System.String" /> contenente i membri <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" /> e <see cref="P:System.Windows.Media.Matrix.OffsetX" /> nonché i valori <see cref="P:System.Windows.Media.Matrix.OffsetY" /> della struttura <see cref="T:System.Windows.Media.Matrix" /> corrente.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Point)">
      <summary>Trasforma il punto specificato mediante la struttura <see cref="T:System.Windows.Media.Matrix" /> e restituisce il risultato.</summary>
      <param name="point">Il punto da trasformare.</param>
      <returns>Risultato della trasformazione di <paramref name="point" /> mediante la struttura <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Point[])">
      <summary>Trasforma i punti specificati mediante la struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="points">Punti da trasformare. I punti originali nella matrice vengono sostituiti dai valori trasformati.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Vector)">
      <summary>Trasforma il vettore specificato mediante la struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="vector">Vettore da trasformare.</param>
      <returns>Risultato della trasformazione di <paramref name="vector" /> mediante la struttura <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Vector[])">
      <summary>Trasforma i vettori specificati mediante la struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="vectors">Vettori da trasformare. I vettori originali nella matrice vengono sostituiti dai valori trasformati.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Translate(System.Double,System.Double)">
      <summary>Accoda alla struttura <see cref="T:System.Windows.Media.Matrix" /> una traslazione degli offset specificati.</summary>
      <param name="offsetX">Valore di offset della struttura <see cref="T:System.Windows.Media.Matrix" /> lungo l'asse x.</param>
      <param name="offsetY">Valore di offset della struttura <see cref="T:System.Windows.Media.Matrix" /> lungo l'asse y.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.TranslatePrepend(System.Double,System.Double)">
      <summary>Antepone alla struttura <see cref="T:System.Windows.Media.Matrix" /> una traslazione degli offset specificati.</summary>
      <param name="offsetX">Valore di offset della struttura <see cref="T:System.Windows.Media.Matrix" /> lungo l'asse x.</param>
      <param name="offsetY">Valore di offset della struttura <see cref="T:System.Windows.Media.Matrix" /> lungo l'asse y.</param>
    </member>
    <member name="P:System.Windows.Media.Matrix.Determinant">
      <summary>Ottiene il determinante della struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns>Determinante della struttura <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.HasInverse">
      <summary>Ottiene un valore che indica se questa struttura <see cref="T:System.Windows.Media.Matrix" /> è invertibile o meno.</summary>
      <returns>
        <see langword="true" /> se la struttura <see cref="T:System.Windows.Media.Matrix" /> dispone di un inverso, altrimenti <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.Identity">
      <summary>Ottiene una struttura <see cref="T:System.Windows.Media.Matrix" /> di identità.</summary>
      <returns>Matrice di identità.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.IsIdentity">
      <summary>Ottiene un valore che indica se la struttura <see cref="T:System.Windows.Media.Matrix" /> è una matrice di identità o meno.</summary>
      <returns>
        <see langword="true" /> se la struttura <see cref="T:System.Windows.Media.Matrix" /> è una matrice di identità, altrimenti <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M11">
      <summary>Ottiene o imposta il valore della prima riga e della prima colonna della struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns>Valore della prima riga e della prima colonna di questa struttura <see cref="T:System.Windows.Media.Matrix" />. Il valore predefinito è 1.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M12">
      <summary>Ottiene o imposta il valore della prima riga e della seconda colonna della struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns>Valore della prima riga e della seconda colonna della struttura <see cref="T:System.Windows.Media.Matrix" />. Il valore predefinito è 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M21">
      <summary>Ottiene o imposta il valore della seconda riga e della prima colonna della struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns>Valore della prima seconda riga e della prima colonna della struttura <see cref="T:System.Windows.Media.Matrix" />. Il valore predefinito è 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M22">
      <summary>Ottiene o imposta il valore della seconda riga e della seconda colonna della struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns>Valore della seconda riga e della seconda colonna della struttura <see cref="T:System.Windows.Media.Matrix" />. Il valore predefinito è 1.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.OffsetX">
      <summary>Ottiene o imposta il valore della terza riga e della prima colonna della struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns>Valore della terza riga e della prima colonna della struttura <see cref="T:System.Windows.Media.Matrix" />. Il valore predefinito è 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.OffsetY">
      <summary>Ottiene o imposta il valore della terza riga e della seconda colonna della struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns>Valore della terza riga e della seconda colonna della struttura <see cref="T:System.Windows.Media.Matrix" />. Il valore predefinito è 0.</returns>
    </member>
    <member name="T:System.Windows.Media.MatrixConverter">
      <summary>Converte istanze di altri tipi in e da un oggetto <see cref="T:System.Windows.Media.Matrix" />.</summary>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.#ctor">
      <summary>Inizializza una nuova istanza di <see cref="T:System.Windows.Media.MatrixConverter" />.</summary>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determina se per un oggetto è possibile o meno eseguire la conversione da un tipo specifico a un'istanza di una struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="context">Informazioni di contesto relative a un tipo.</param>
      <param name="sourceType">Tipo dell'oggetto di origine valutato per la conversione.</param>
      <returns>
        <see langword="true" /> se il tipo specificato può essere convertito in un oggetto <see cref="T:System.Windows.Media.Matrix" />, altrimenti <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determina se un'istanza di un oggetto <see cref="T:System.Windows.Media.Matrix" /> può essere convertita in un tipo diverso.</summary>
      <param name="context">Informazioni di contesto relative a un tipo.</param>
      <param name="destinationType">Tipo desiderato per cui questo oggetto <see cref="T:System.Windows.Media.Matrix" /> viene valutato per la conversione.</param>
      <returns>
        <see langword="true" /> se <see cref="T:System.Windows.Media.Matrix" /> può essere convertito in <paramref name="destinationType" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Tenta di convertire l'oggetto specificato in <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="context">Informazioni di contesto relative a un tipo.</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> del tipo da convertire.</param>
      <param name="value">Oggetto da convertire.</param>
      <exception cref="T:System.NotSupportedException">L'oggetto specificato presenta valore null oppure rappresenta un tipo che non può essere convertito in una struttura <see cref="T:System.Windows.Media.Matrix" />.</exception>
      <returns>
        <see cref="T:System.Windows.Media.Matrix" /> creato tramite la conversione di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Tenta di convertire un oggetto <see cref="T:System.Windows.Media.Matrix" /> in un tipo specificato.</summary>
      <param name="context">Informazioni di contesto relative a un tipo.</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> del tipo da convertire.</param>
      <param name="value">Oggetto <see cref="T:System.Windows.Media.Matrix" /> da convertire.</param>
      <param name="destinationType">Tipo in cui convertire l'oggetto <see cref="T:System.Windows.Media.Matrix" /> corrente.</param>
      <exception cref="T:System.NotSupportedException">Il parametro <paramref name="value" /> è impostato su null, non indica una struttura <see cref="T:System.Windows.Media.Matrix" /> oppure il parametro <paramref name="destinationType" /> non rappresenta un tipo di conversione valido.</exception>
      <returns>Oggetto creato tramite la conversione di <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="T:System.Windows.Media.TextFormattingMode">
      <summary>Definisce i metodi di formattazione supportati dalla classe <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" />.</summary>
    </member>
    <member name="F:System.Windows.Media.TextFormattingMode.Display">
      <summary>Indica che l'oggetto <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> dispone il testo utilizzando le metriche dei tipi di carattere compatibili con GDI.</summary>
    </member>
    <member name="F:System.Windows.Media.TextFormattingMode.Ideal">
      <summary>Indica che l'oggetto <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> dispone il testo utilizzando le metriche dei tipi di carattere ideali.</summary>
    </member>
    <member name="T:System.Windows.NameScope">
      <summary>Implementa il supporto WPF di base dei metodi <see cref="T:System.Windows.Markup.INameScope" /> che memorizzano o recuperano i mapping nome-oggetto in un particolare ambito dei nomi XAML. Aggiunge il supporto della proprietà associata per rendere più semplice ottenere o impostare in modo dinamico i nomi degli ambiti dei nomi XAML a livello di elemento.</summary>
    </member>
    <member name="F:System.Windows.NameScope.NameScopeProperty">
      <summary>Identifica la proprietà associata <see cref="P:System.Windows.NameScope.NameScope" />.</summary>
    </member>
    <member name="M:System.Windows.NameScope.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.NameScope" />.</summary>
    </member>
    <member name="M:System.Windows.NameScope.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Aggiunge un elemento alla raccolta.</summary>
      <param name="item">Oggetto <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (la chiave è <see cref="T:System.String" />, il valore è <see cref="T:System.Object" />) che rappresenta il mapping del nome da aggiungere al NameScope XAML.</param>
      <exception cref="T:System.ArgumentException">Uno o entrambi i componenti di <paramref name="item" /> sono <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.Add(System.String,System.Object)">
      <summary>Aggiunge un elemento alla raccolta.</summary>
      <param name="key">Stringa chiave che rappresenta il nome del mapping NameScope XAML da aggiungere.</param>
      <param name="value">Valore dell'oggetto, che è il riferimento dell'oggetto del mapping NameScope XAML da aggiungere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> o <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.Clear">
      <summary>Rimuove tutti gli elementi dalla raccolta.</summary>
    </member>
    <member name="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Determina se l'insieme contiene un elemento specificato.</summary>
      <param name="item">Elemento da trovare nella raccolta, specificato come un oggetto <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (la chiave è <see cref="T:System.String" />, il valore è <see cref="T:System.Object" />).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Collections.Generic.KeyValuePair`2" /> specificato identifica un mapping esistente all'interno di <see cref="T:System.Windows.NameScope" />. <see langword="false" /> se l'oggetto <see cref="T:System.Collections.Generic.KeyValuePair`2" /> specificato non esiste nell'oggetto <see cref="T:System.Windows.NameScope" /> corrente.</returns>
    </member>
    <member name="M:System.Windows.NameScope.ContainsKey(System.String)">
      <summary>Comunica se un nome fornito sia già esistente all'interno della struttura <see cref="T:System.Windows.NameScope" />.</summary>
      <param name="key">Stringa chiave da trovare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se l'oggetto <paramref name="key" /> specificato identifica un nome per un mapping esistente all'interno di <see cref="T:System.Windows.NameScope" />. <see langword="false" /> se l'oggetto <paramref name="key" /> specificato non esiste nell'oggetto <see cref="T:System.Windows.NameScope" /> corrente.</returns>
    </member>
    <member name="M:System.Windows.NameScope.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Copia gli elementi della raccolta in una matrice, a partire da un indice della matrice specifico.</summary>
      <param name="array">Matrice unidimensionale che rappresenta la destinazione degli elementi copiati dall'insieme; la matrice deve avere un indice in base zero.</param>
      <param name="arrayIndex">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
    </member>
    <member name="M:System.Windows.NameScope.FindName(System.String)">
      <summary>Restituisce l'oggetto corrispondente nell'ambito dei nomi XAML mantenuto da <see cref="T:System.Windows.NameScope" />, in base a un nome di stringa fornito.</summary>
      <param name="name">Parte del nome di un mapping esistente per cui recuperare la parte dell'oggetto.</param>
      <returns>Oggetto richiesto mappato mediante <paramref name="name" />. Può restituire <see langword="null" /> se <paramref name="name" /> è stato specificato come <see langword="null" /> o una stringa vuota o se non è stato trovato alcun oggetto corrispondente.</returns>
    </member>
    <member name="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)">
      <summary>Fornisce la funzione di accesso get per la proprietà associata <see cref="P:System.Windows.NameScope.NameScope" />.</summary>
      <param name="dependencyObject">Oggetto da cui ottenere l'ambito dei nomi XAML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> è <see langword="null" />.</exception>
      <returns>Ambito dei nomi XAML, come istanza di <see cref="T:System.Windows.Markup.INameScope" />.</returns>
    </member>
    <member name="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
      <summary>Registra una nuova coppia nome-oggetto nell'ambito dei nomi XAML corrente.</summary>
      <param name="name">Nome da usare per il mapping dell'oggetto specificato.</param>
      <param name="scopedElement">Oggetto di cui eseguire il mapping con il nome fornito.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> o <paramref name="scopedElement" /> specificato come <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> specificato come stringa vuota 
-oppure- 
 Il parametro <paramref name="name" /> specificato è stato rifiutato dal parser, perché contiene caratteri non validi per un nome XAML 
-oppure- 
 Il parametro <paramref name="name" /> specificato comporterebbe la registrazione di un nome duplicato.</exception>
    </member>
    <member name="M:System.Windows.NameScope.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Rimuove l'oggetto specifico dall'insieme.</summary>
      <param name="item">Oggetto da rimuovere dalla raccolta, specificato come <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (la chiave è <see cref="T:System.String" />, il valore è <see cref="T:System.Object" />).</param>
      <returns>
        <see langword="true" /> se l'elemento è stato rimosso correttamente dall'insieme, in caso contrario, <see langword="false" />. Restituisce anche <see langword="false" /> se l'oggetto  non è stato trovato nell'insieme.</returns>
    </member>
    <member name="M:System.Windows.NameScope.Remove(System.String)">
      <summary>Rimuove un mapping dall'insieme per un nome specificato.</summary>
      <param name="key">Stringa chiave che rappresenta il nome del mapping NameScope XAML da rimuovere.</param>
      <returns>
        <see langword="true" /> se l'elemento è stato rimosso correttamente dall'insieme, in caso contrario, <see langword="false" />. Restituisce anche <see langword="false" /> se l'oggetto  non è stato trovato nell'insieme.</returns>
    </member>
    <member name="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)">
      <summary>Fornisce la funzione di accesso set per la proprietà associata <see cref="P:System.Windows.NameScope.NameScope" />.</summary>
      <param name="dependencyObject">Oggetto per cui modificare l'ambito dei nomi XAML.</param>
      <param name="value">Nuovo ambito dei nomi XAML, usando un cast di interfaccia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns>Un enumeratore che scorre una raccolta.</returns>
    </member>
    <member name="M:System.Windows.NameScope.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns>Un enumeratore che scorre una raccolta.</returns>
    </member>
    <member name="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)">
      <summary>Ottiene il valore associato alla chiave specificata.</summary>
      <param name="key">Chiave del valore da ottenere.</param>
      <param name="value">Quando termina, questo metodo contiene il valore associato alla chiave specificata nel caso in cui la chiave venga trovata; in caso contrario, oggetto null. Questo parametro viene passato non inizializzato.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Windows.NameScope" /> contiene un mapping per il nome fornito come <paramref name="key" />. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.NameScope.UnregisterName(System.String)">
      <summary>Rimuove un mapping nome-oggetto dall'ambito dei nomi XAML.</summary>
      <param name="name">Nome del mapping da rimuovere.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> specificato come stringa vuota.  
  
-oppure- 
 <paramref name="name" /> specificato non registrato.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.NameScope.Count">
      <summary>Restituisce il numero di oggetti nell'insieme di nomi mappati  in <see cref="T:System.Windows.NameScope" />.</summary>
      <returns>Numero di elementi nella raccolta.</returns>
    </member>
    <member name="P:System.Windows.NameScope.IsReadOnly">
      <summary>Ottiene un valore che indica se la raccolta è di sola lettura.</summary>
      <returns>Restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.NameScope.Item(System.String)">
      <summary>Ottiene o imposta l'elemento con la chiave specificata.</summary>
      <param name="key">Il nome della stringa per il mapping XAML da ottenere o impostare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> viene fornito come <see langword="null" />.  
  
-oppure- 
 <paramref name="value" /> viene fornito come <see langword="null" /> per un'operazione di impostazione.</exception>
      <returns>Il valore dell'oggetto mappato dal XAML fornito come <paramref name="key" />.</returns>
    </member>
    <member name="P:System.Windows.NameScope.Keys">
      <summary>Ottiene un insieme di tutte le chiavi nel dizionario <see cref="T:System.Windows.NameScope" />.</summary>
      <returns>Insieme di tutte le chiavi nel dizionario <see cref="T:System.Windows.NameScope" />.</returns>
    </member>
    <member name="P:System.Windows.NameScope.NameScope">
      <summary>Ottiene o imposta dinamicamente istanze <see cref="T:System.Windows.NameScope" /> collegate.</summary>
    </member>
    <member name="P:System.Windows.NameScope.Values">
      <summary>Ottiene un insieme di tutti i valori nel dizionario <see cref="T:System.Windows.NameScope" />.</summary>
      <returns>Insieme di tutti i valori nel dizionario <see cref="T:System.Windows.NameScope" />.</returns>
    </member>
    <member name="T:System.Windows.Point">
      <summary>Rappresenta una coppia di coordinate x e y nello spazio bidimensionale.</summary>
    </member>
    <member name="M:System.Windows.Point.#ctor(System.Double,System.Double)">
      <summary>Crea una nuova struttura <see cref="T:System.Windows.Point" /> contenente le coordinate specificate.</summary>
      <param name="x">Coordinata x della nuova struttura <see cref="T:System.Windows.Point" />.</param>
      <param name="y">Coordinata y della nuova struttura <see cref="T:System.Windows.Point" />.</param>
    </member>
    <member name="M:System.Windows.Point.Add(System.Windows.Point,System.Windows.Vector)">
      <summary>Somma una struttura <see cref="T:System.Windows.Vector" /> e una struttura <see cref="T:System.Windows.Point" /> e restituisce il risultato come struttura <see cref="T:System.Windows.Point" />.</summary>
      <param name="point">Struttura <see cref="T:System.Windows.Point" /> da sommare.</param>
      <param name="vector">Struttura <see cref="T:System.Windows.Vector" /> da sommare.</param>
      <returns>Restituisce la somma di <paramref name="point" /> e <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Object)">
      <summary>Determina se l'oggetto <see cref="T:System.Object" /> specificato è una struttura <see cref="T:System.Windows.Point" /> e se include le stesse coordinate dell'oggetto <see cref="T:System.Windows.Point" />.</summary>
      <param name="o">Oggetto <see cref="T:System.Object" /> da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="o" /> è una struttura <see cref="T:System.Windows.Point" /> e contiene gli stessi valori <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" /> della struttura <see cref="T:System.Windows.Point" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Windows.Point)">
      <summary>Confronta due strutture <see cref="T:System.Windows.Point" /> per determinare se sono uguali.</summary>
      <param name="value">Punto da confrontare con questa istanza.</param>
      <returns>
        <see langword="true" /> se entrambe le strutture <see cref="T:System.Windows.Point" /> contengono gli stessi valori <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Windows.Point,System.Windows.Point)">
      <summary>Confronta due strutture <see cref="T:System.Windows.Point" /> per determinare se sono uguali.</summary>
      <param name="point1">Primo punto da confrontare.</param>
      <param name="point2">Secondo punto da confrontare.</param>
      <returns>
        <see langword="true" /> se gli oggetti <paramref name="point1" /> e <paramref name="point2" /> contengono gli stessi valori <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Point.GetHashCode">
      <summary>Restituisce il codice hash per questo oggetto <see cref="T:System.Windows.Point" />.</summary>
      <returns>Codice hash per la struttura <see cref="T:System.Windows.Point" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Multiply(System.Windows.Point,System.Windows.Media.Matrix)">
      <summary>Trasforma la struttura <see cref="T:System.Windows.Point" /> specificata in base alla struttura <see cref="T:System.Windows.Media.Matrix" /> definita.</summary>
      <param name="point">Il punto da trasformare.</param>
      <param name="matrix">Matrice di trasformazione.</param>
      <returns>Punto trasformato.</returns>
    </member>
    <member name="M:System.Windows.Point.Offset(System.Double,System.Double)">
      <summary>Sottopone a offset le coordinate <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" /> di un punto in base ai valori specificati.</summary>
      <param name="offsetX">Valore di offset della coordinata <see cref="P:System.Windows.Point.X" /> del punto.</param>
      <param name="offsetY">Valore di offset della coordinata <see cref="P:System.Windows.Point.Y" /> del punto.</param>
    </member>
    <member name="M:System.Windows.Point.op_Addition(System.Windows.Point,System.Windows.Vector)">
      <summary>Trasla la struttura <see cref="T:System.Windows.Point" /> in base alla struttura specificata <see cref="T:System.Windows.Vector" /> e restituisce il risultato.</summary>
      <param name="point">Punto da convertire.</param>
      <param name="vector">Valore in base al quale traslare <paramref name="point" />.</param>
      <returns>Risultato della traslazione del punto specificato in base al vettore specificato.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)">
      <summary>Confronta due strutture <see cref="T:System.Windows.Point" /> per determinare se sono uguali.</summary>
      <param name="point1">Prima struttura <see cref="T:System.Windows.Point" /> da confrontare.</param>
      <param name="point2">Seconda struttura <see cref="T:System.Windows.Point" /> da confrontare.</param>
      <returns>
        <see langword="true" /> se le coordinate <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" /> di <paramref name="point1" /> e <paramref name="point2" /> sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Size">
      <summary>Crea una struttura <see cref="T:System.Windows.Size" /> con un valore <see cref="P:System.Windows.Size.Width" /> uguale al valore <see cref="P:System.Windows.Point.X" /> di questo punto e con un valore <see cref="P:System.Windows.Size.Height" /> uguale al valore <see cref="P:System.Windows.Point.Y" /> di questo punto.</summary>
      <param name="point">Punto da convertire.</param>
      <returns>Struttura <see cref="T:System.Windows.Size" /> con un valore <see cref="P:System.Windows.Size.Width" /> uguale al valore <see cref="P:System.Windows.Point.X" /> di questo punto e con un valore <see cref="P:System.Windows.Size.Height" /> uguale al valore <see cref="P:System.Windows.Point.Y" /> di questo punto.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Vector">
      <summary>Crea una struttura <see cref="T:System.Windows.Vector" /> con un valore <see cref="P:System.Windows.Vector.X" /> uguale al valore <see cref="P:System.Windows.Point.X" /> del punto e con un valore <see cref="P:System.Windows.Vector.Y" /> uguale al valore <see cref="P:System.Windows.Point.Y" /> del punto.</summary>
      <param name="point">Punto da convertire.</param>
      <returns>Vettore con un valore <see cref="P:System.Windows.Vector.X" /> uguale al valore <see cref="P:System.Windows.Point.X" /> del punto e con un valore <see cref="P:System.Windows.Vector.Y" /> uguale al valore <see cref="P:System.Windows.Point.Y" /> del punto.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Inequality(System.Windows.Point,System.Windows.Point)">
      <summary>Confronta le due strutture <see cref="T:System.Windows.Point" /> per stabilirne la disuguaglianza.</summary>
      <param name="point1">Primo punto da confrontare.</param>
      <param name="point2">Secondo punto da confrontare.</param>
      <returns>
        <see langword="true" /> se gli oggetti <paramref name="point1" /> e <paramref name="point2" /> presentano coordinate <see cref="P:System.Windows.Point.X" /> o <see cref="P:System.Windows.Point.Y" /> diverse. <see langword="false" /> se gli oggetti <paramref name="point1" /> e <paramref name="point2" /> presentano le stesse coordinate <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" />.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Multiply(System.Windows.Point,System.Windows.Media.Matrix)">
      <summary>Trasforma l'oggetto <see cref="T:System.Windows.Point" /> specificato in base all'oggetto <see cref="T:System.Windows.Media.Matrix" /> indicato.</summary>
      <param name="point">Il punto da trasformare.</param>
      <param name="matrix">Matrice di trasformazione.</param>
      <returns>Risultato della trasformazione del punto specificato utilizzando la matrice specificata.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Point)">
      <summary>Sottrae l'oggetto <see cref="T:System.Windows.Point" /> specificato da un altro oggetto <see cref="T:System.Windows.Point" /> specificato e restituisce la differenza come oggetto <see cref="T:System.Windows.Vector" />.</summary>
      <param name="point1">Punto dal quale viene sottratto l'oggetto <paramref name="point2" />.</param>
      <param name="point2">Punto da cui sottrarre l'oggetto <paramref name="point1" />.</param>
      <returns>Differenza tra <paramref name="point1" /> e <paramref name="point2" />.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Vector)">
      <summary>Sottrae l'oggetto <see cref="T:System.Windows.Vector" /> specificato dall'oggetto <see cref="T:System.Windows.Point" /> indicato e restituisce l'oggetto <see cref="T:System.Windows.Point" /> che ne risulta.</summary>
      <param name="point">Punto dal quale viene sottratto l'oggetto <paramref name="vector" />.</param>
      <param name="vector">Vettore da cui sottrarre l'oggetto <paramref name="point1" />.</param>
      <returns>Differenza tra <paramref name="point" /> e <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Parse(System.String)">
      <summary>Costruisce un oggetto <see cref="T:System.Windows.Point" /> dall'oggetto <see cref="T:System.String" /> specificato.</summary>
      <param name="source">Rappresentazione in forma di stringa di un punto.</param>
      <exception cref="T:System.FormatException">Il parametro <paramref name="source" /> non è composto da due valori double separati da virgola o da spazio.</exception>
      <exception cref="T:System.InvalidOperationException">Il parametro <paramref name="source" /> non contiene due numeri.  
  
-oppure- 
 Il parametro <paramref name="source" /> contiene troppi delimitatori.</exception>
      <returns>Struttura <see cref="T:System.Windows.Point" /> equivalente.</returns>
    </member>
    <member name="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Point)">
      <summary>Sottrae l'oggetto <see cref="T:System.Windows.Point" /> specificato da un altro oggetto <see cref="T:System.Windows.Point" /> specificato e restituisce la differenza come oggetto <see cref="T:System.Windows.Vector" />.</summary>
      <param name="point1">Punto dal quale viene sottratto l'oggetto <paramref name="point2" />.</param>
      <param name="point2">Punto da cui sottrarre l'oggetto <paramref name="point1" />.</param>
      <returns>Differenza tra <paramref name="point1" /> e <paramref name="point2" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Vector)">
      <summary>Sottrae l'oggetto <see cref="T:System.Windows.Vector" /> specificato dall'oggetto <see cref="T:System.Windows.Point" /> indicato e restituisce l'oggetto <see cref="T:System.Windows.Point" /> che ne risulta.</summary>
      <param name="point">Punto dal quale viene sottratto l'oggetto <paramref name="vector" />.</param>
      <param name="vector">Oggetto <paramref name="vector" /> da sottrarre dall'oggetto <paramref name="point" />.</param>
      <returns>Differenza tra <paramref name="point" /> e <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Point.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>Questo membro supporta l'infrastruttura di Windows Presentation Foundation (WPF) e non deve essere usato direttamente dal codice. Per una descrizione di questo membro, vedere <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <param name="format">Stringa che specifica il formato da utilizzare.  
  
-oppure- 
 <see langword="null" /> per utilizzare il formato predefinito per il tipo di implementazione dell'interfaccia <see cref="T:System.IFormattable" />.</param>
      <param name="provider">Interfaccia <see langword="IFormatProvider" /> da utilizzare per formattare il valore.  
  
-oppure- 
 <see langword="null" /> per ottenere le informazioni sul formato numerico dalle impostazioni locali correnti del sistema operativo.</param>
      <returns>Stringa contenente il valore dell'istanza corrente nel formato specificato.</returns>
    </member>
    <member name="M:System.Windows.Point.ToString">
      <summary>Crea una rappresentazione <see cref="T:System.String" /> di <see cref="T:System.Windows.Point" />.</summary>
      <returns>Oggetto <see cref="T:System.String" /> contenente i valori <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" /> di questa struttura <see cref="T:System.Windows.Point" />.</returns>
    </member>
    <member name="M:System.Windows.Point.ToString(System.IFormatProvider)">
      <summary>Crea una rappresentazione <see cref="T:System.String" /> di <see cref="T:System.Windows.Point" />.</summary>
      <param name="provider">Informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Oggetto <see cref="T:System.String" /> contenente i valori <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" /> di questa struttura <see cref="T:System.Windows.Point" />.</returns>
    </member>
    <member name="P:System.Windows.Point.X">
      <summary>Ottiene o imposta il valore della coordinata <see cref="P:System.Windows.Point.X" /> di questa struttura <see cref="T:System.Windows.Point" />.</summary>
      <returns>Valore della coordinata <see cref="P:System.Windows.Point.X" /> di questa struttura <see cref="T:System.Windows.Point" />.  Il valore predefinito è <c>0</c>.</returns>
    </member>
    <member name="P:System.Windows.Point.Y">
      <summary>Ottiene o imposta il valore della coordinata <see cref="P:System.Windows.Point.Y" /> di questa struttura <see cref="T:System.Windows.Point" />.</summary>
      <returns>Valore della coordinata <see cref="P:System.Windows.Point.Y" /> di questa struttura <see cref="T:System.Windows.Point" />.  Il valore predefinito è <c>0</c>.</returns>
    </member>
    <member name="T:System.Windows.PointConverter">
      <summary>Converte istanze di altri tipi in e da un oggetto <see cref="T:System.Windows.Point" />.</summary>
    </member>
    <member name="M:System.Windows.PointConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.PointConverter" />.</summary>
    </member>
    <member name="M:System.Windows.PointConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determina se un oggetto può essere convertito da un tipo specificato in un'istanza di un oggetto <see cref="T:System.Windows.Point" />.</summary>
      <param name="context">Descrive le informazioni di contesto di un tipo.</param>
      <param name="sourceType">Tipo dell'oggetto di origine valutato per la conversione.</param>
      <returns>
        <see langword="true" /> se il tipo specificato può essere convertito in un oggetto <see cref="T:System.Windows.Point" />, altrimenti <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.PointConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determina se un'istanza di un oggetto <see cref="T:System.Windows.Point" /> può essere convertita in un tipo diverso.</summary>
      <param name="context">Descrive le informazioni di contesto di un tipo.</param>
      <param name="destinationType">Tipo desiderato per cui questo oggetto <see cref="T:System.Windows.Point" /> viene valutato per la conversione.</param>
      <returns>
        <see langword="true" /> se <see cref="T:System.Windows.Point" /> può essere convertito in <paramref name="destinationType" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.PointConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Tenta di convertire l'oggetto specificato in <see cref="T:System.Windows.Point" />.</summary>
      <param name="context">Fornisce informazioni sul contesto necessarie per la conversione.</param>
      <param name="culture">Informazioni relative alle impostazioni cultura da rispettare durante la conversione.</param>
      <param name="value">Oggetto da convertire.</param>
      <exception cref="T:System.NotSupportedException">Eccezione generata se l'oggetto specificato è NULL o un tipo che non può essere convertito in <see cref="T:System.Windows.Point" />.</exception>
      <returns>
        <see cref="T:System.Windows.Point" /> creato tramite la conversione di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Windows.PointConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Tenta di convertire un oggetto <see cref="T:System.Windows.Point" /> in un tipo specificato.</summary>
      <param name="context">Fornisce informazioni sul contesto necessarie per la conversione.</param>
      <param name="culture">Informazioni relative alle impostazioni cultura da rispettare durante la conversione.</param>
      <param name="value">Oggetto <see cref="T:System.Windows.Point" /> da convertire.</param>
      <param name="destinationType">Tipo in cui convertire l'oggetto <see cref="T:System.Windows.Point" /> corrente.</param>
      <exception cref="T:System.NotSupportedException">Eccezione generata se <paramref name="value" /> è <see langword="null" /> o non è un oggetto <see cref="T:System.Windows.Point" /> oppure se <paramref name="destinationType" /> non è uno dei tipi validi per la conversione.</exception>
      <returns>Oggetto creato tramite la conversione di <see cref="T:System.Windows.Point" />.</returns>
    </member>
    <member name="T:System.Windows.PropertyChangedCallback">
      <summary>Rappresenta il callback che viene richiamato quando cambia il valore effettivo di una proprietà di dipendenza.</summary>
      <param name="d">Oggetto <see cref="T:System.Windows.DependencyObject" /> per la cui proprietà è stato modificato il valore.</param>
      <param name="e">Dati dell'evento emessi da qualsiasi evento che tiene traccia delle modifiche al valore effettivo di questa proprietà.</param>
    </member>
    <member name="T:System.Windows.PropertyMetadata">
      <summary>Definisce determinati aspetti del comportamento di una proprietà di dipendenza applicata a un tipo specifico, incluse le condizioni con cui è stata registrata.</summary>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.PropertyMetadata" />.</summary>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.PropertyMetadata" /> con un valore predefinito specificato per la proprietà di dipendenza a cui verranno applicati i metadati.</summary>
      <param name="defaultValue">Valore predefinito da specificare per una proprietà di dipendenza, in genere fornito come valore di un tipo specifico.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> non può essere impostato sul valore <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)">
      <summary>Inizializza una nuova istanza della classe  <see cref="T:System.Windows.PropertyMetadata" /> con il valore predefinito e il riferimento all'implementazione di <see cref="T:System.Windows.PropertyChangedCallback" /> specificati.</summary>
      <param name="defaultValue">Valore predefinito della proprietà di dipendenza, in genere fornito come valore di un tipo specifico.</param>
      <param name="propertyChangedCallback">Riferimento a un'implementazione del gestore che il sistema di proprietà chiamerà a ogni modifica del valore effettivo della proprietà.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> non può essere impostato sul valore <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.PropertyMetadata" />, con il valore predefinito e i callback specificati.</summary>
      <param name="defaultValue">Valore predefinito della proprietà di dipendenza, in genere fornito come valore di un tipo specifico.</param>
      <param name="propertyChangedCallback">Riferimento a un'implementazione del gestore che il sistema di proprietà chiamerà a ogni modifica del valore effettivo della proprietà.</param>
      <param name="coerceValueCallback">Riferimento a un'implementazione del gestore che verrà chiamata ogni volta che il sistema di proprietà chiama <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> per la proprietà.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> non può essere impostato sul valore <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)">
      <summary>Inizializza una nuova istanza della classe  <see cref="T:System.Windows.PropertyMetadata" /> con il riferimento all'implementazione di <see cref="T:System.Windows.PropertyChangedCallback" /> specificato.</summary>
      <param name="propertyChangedCallback">Riferimento a un'implementazione del gestore che il sistema di proprietà chiamerà a ogni modifica del valore effettivo della proprietà.</param>
    </member>
    <member name="M:System.Windows.PropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)">
      <summary>Unisce i metadati con i metadati di base.</summary>
      <param name="baseMetadata">Metadati di base da unire con i valori dell'istanza.</param>
      <param name="dp">Proprietà di dipendenza alla quale vengono applicati i metadati.</param>
    </member>
    <member name="M:System.Windows.PropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)">
      <summary>Chiamata effettuata quando questi metadati sono stati applicati ad una proprietà che indica che i metadati sono sealed.</summary>
      <param name="dp">Proprietà di dipendenza alla quale sono stati applicati i metadati.</param>
      <param name="targetType">Il tipo associato a questi metadati se questi sono metadati di tipo specifico. Se si tratta di metadati predefiniti, il valore è un riferimento null.</param>
    </member>
    <member name="P:System.Windows.PropertyMetadata.CoerceValueCallback">
      <summary>Ottiene o imposta un riferimento a un'implementazione di <see cref="T:System.Windows.CoerceValueCallback" /> specificata nei metadati.</summary>
      <exception cref="T:System.InvalidOperationException">Impossibile impostare una proprietà dei metadati dopo averla applicata a un'operazione relativa alla proprietà di dipendenza.</exception>
      <returns>Riferimento all'implementazione di <see cref="T:System.Windows.CoerceValueCallback" />.</returns>
    </member>
    <member name="P:System.Windows.PropertyMetadata.DefaultValue">
      <summary>Ottiene o imposta il valore predefinito della proprietà di dipendenza.</summary>
      <exception cref="T:System.ArgumentException">Non possono essere impostati sul valore <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> successivamente alla creazione.</exception>
      <exception cref="T:System.InvalidOperationException">Impossibile impostare una proprietà dei metadati dopo averla applicata a un'operazione relativa alla proprietà di dipendenza.</exception>
      <returns>Valore predefinito della proprietà. Il valore predefinito in un' <see cref="T:System.Windows.PropertyMetadata" /> istanza di creata con il costruttore senza parametri sarà <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> .</returns>
    </member>
    <member name="P:System.Windows.PropertyMetadata.IsSealed">
      <summary>Ottiene un valore che determina se i metadati sono stati applicati a una proprietà in qualche modo e di conseguenza lo stato dell'istanza di metadati è diventato non modificabile.</summary>
      <returns>
        <see langword="true" /> se l'istanza di metadati non è modificabile; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.PropertyMetadata.PropertyChangedCallback">
      <summary>Ottiene o imposta un riferimento a un'implementazione di <see cref="T:System.Windows.PropertyChangedCallback" /> specificata nei metadati.</summary>
      <exception cref="T:System.InvalidOperationException">Impossibile impostare una proprietà dei metadati dopo averla applicata a un'operazione relativa alla proprietà di dipendenza.</exception>
      <returns>Riferimento all'implementazione di <see cref="T:System.Windows.PropertyChangedCallback" />.</returns>
    </member>
    <member name="T:System.Windows.Rect">
      <summary>Descrive larghezza, altezza e posizione di un rettangolo.</summary>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.Windows.Rect" /> che ha le coordinate x e y, la larghezza e l’altezza specificate.</summary>
      <param name="x">Coordinata x dell'angolo superiore sinistro del rettangolo.</param>
      <param name="y">Coordinata Y dell'angolo superiore sinistro del rettangolo.</param>
      <param name="width">Larghezza del rettangolo.</param>
      <param name="height">Altezza del rettangolo.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="width" /> è un valore negativo.  
  
-oppure- 
 <paramref name="height" /> è un valore negativo.</exception>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.Windows.Rect" /> che è abbastanza grande per contenere i due punti specificati.</summary>
      <param name="point1">Il primo punto che il nuovo rettangolo deve contenere.</param>
      <param name="point2">Il secondo punto che il nuovo rettangolo deve contenere.</param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.Windows.Rect" /> che possiede il percorso specificato dell'angolo superiore sinistro e la larghezza e l’altezza specificate.</summary>
      <param name="location">Un punto che specifica il percorso dell'angolo superiore sinistro del rettangolo.</param>
      <param name="size">Struttura <see cref="T:System.Windows.Size" /> che specifica la larghezza e l'altezza del rettangolo.</param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.Windows.Rect" /> che è abbastanza grande per contenere il punto specificato e la somma del punto specificato e del vettore specificato.</summary>
      <param name="point">Il primo punto che il rettangolo deve contenere.</param>
      <param name="vector">Quantità di cui eseguire l’offset del punto specificato. Il rettangolo risultante sarà abbastanza grande per contenere entrambi i punti.</param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Size)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.Windows.Rect" /> che è della dimensione specificata ed è individuata a (0,0).</summary>
      <param name="size">Struttura <see cref="T:System.Windows.Size" /> che specifica la larghezza e l'altezza del rettangolo.</param>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Double,System.Double)">
      <summary>Indica se il rettangolo contiene le coordinate specificate x e y.</summary>
      <param name="x">Coordinata x del punto da controllare.</param>
      <param name="y">Coordinata y del punto da controllare.</param>
      <returns>
        <see langword="true" /> se (<paramref name="x" />, <paramref name="y" />) è contenuto dal rettangolo; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Windows.Point)">
      <summary>Indica se il rettangolo contiene il punto specificato.</summary>
      <param name="point">Punto da controllare.</param>
      <returns>
        <see langword="true" /> se il rettangolo contiene il punto specificato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Windows.Rect)">
      <summary>Indica se il rettangolo contiene il rettangolo specificato.</summary>
      <param name="rect">Rettangolo da controllare.</param>
      <returns>
        <see langword="true" /> se <paramref name="rect" /> è completamente contenuto dal rettangolo; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Object)">
      <summary>Indica se l’oggetto specificato è uguale al rettangolo corrente.</summary>
      <param name="o">Oggetto da confrontare con il rettangolo corrente.</param>
      <returns>
        <see langword="true" /> se <paramref name="o" /> è un oggetto <see cref="T:System.Windows.Rect" /> e ha gli stessi valori <see cref="P:System.Windows.Rect.Location" /> e <see cref="P:System.Windows.Rect.Size" /> del rettangolo corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Windows.Rect)">
      <summary>Indica se il rettangolo specificato è uguale al rettangolo corrente.</summary>
      <param name="value">Rettangolo da confrontare con il rettangolo corrente.</param>
      <returns>
        <see langword="true" /> se il rettangolo specificato ha gli stessi valori <see cref="P:System.Windows.Rect.Location" /> e <see cref="P:System.Windows.Rect.Size" /> del rettangolo corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
      <summary>Indica se i rettangoli specificati sono uguali.</summary>
      <param name="rect1">Primo rettangolo da confrontare.</param>
      <param name="rect2">Secondo rettangolo da confrontare.</param>
      <returns>
        <see langword="true" /> se i rettangoli hanno gli stessi valori <see cref="P:System.Windows.Rect.Location" /> e <see cref="P:System.Windows.Rect.Size" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.GetHashCode">
      <summary>Crea un codice hash per il rettangolo.</summary>
      <returns>Codice hash per la struttura <see cref="T:System.Windows.Rect" /> corrente.</returns>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Double,System.Double)">
      <summary>Espande o riduce il rettangolo utilizzando i valori della larghezza e dell’altezza specificati, in tutte le direzioni.</summary>
      <param name="width">Valore del quale espandere o ridurre il lato sinistro e destro del rettangolo.</param>
      <param name="height">Valore del quale espandere o ridurre il lato inferiore e superiore del rettangolo.</param>
      <exception cref="T:System.InvalidOperationException">Questo metodo viene chiamato sul rettangolo <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
      <summary>Crea un rettangolo risultante dell'espansione o dalla riduzione del rettangolo specificato rispetto al valore della larghezza e dell’altezza specificato, in tutte le direzioni.</summary>
      <param name="rect">Struttura <see cref="T:System.Windows.Rect" /> da modificare.</param>
      <param name="width">Valore del quale espandere o ridurre il lato sinistro e destro del rettangolo.</param>
      <param name="height">Valore del quale espandere o ridurre il lato inferiore e superiore del rettangolo.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="rect" /> è un rettangolo <see cref="P:System.Windows.Rect.Empty" />.</exception>
      <returns>Rettangolo risultante.</returns>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
      <summary>Restituisce il rettangolo risultante dell'espansione del rettangolo specificato da <see cref="T:System.Windows.Size" />specificato, in tutte le direzioni.</summary>
      <param name="rect">Struttura <see cref="T:System.Windows.Rect" /> da modificare.</param>
      <param name="size">Specifica di quanto il rettangolo deve essere espanso. La proprietà <see cref="T:System.Windows.Size" /> della struttura <see cref="P:System.Windows.Size.Width" /> specifica di quanto le proprietà del rettangolo <see cref="P:System.Windows.Rect.Left" /> e <see cref="P:System.Windows.Rect.Right" /> devono essere aumentate. La proprietà <see cref="T:System.Windows.Size" /> della struttura <see cref="P:System.Windows.Size.Height" /> specifica di quanto le proprietà del rettangolo <see cref="P:System.Windows.Rect.Top" /> e <see cref="P:System.Windows.Rect.Bottom" /> devono essere aumentate.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="rect" /> è un rettangolo <see cref="P:System.Windows.Rect.Empty" />.</exception>
      <returns>Rettangolo risultante.</returns>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Windows.Size)">
      <summary>Espande il rettangolo utilizzando <see cref="T:System.Windows.Size" />specificato, in tutte le direzioni.</summary>
      <param name="size">Specifica di quanto il rettangolo deve essere espanso. La proprietà <see cref="T:System.Windows.Size" /> della struttura <see cref="P:System.Windows.Size.Width" /> specifica di quanto le proprietà del rettangolo <see cref="P:System.Windows.Rect.Left" /> e <see cref="P:System.Windows.Rect.Right" /> devono essere aumentate. La proprietà <see cref="T:System.Windows.Size" /> della struttura <see cref="P:System.Windows.Size.Height" /> specifica di quanto le proprietà del rettangolo <see cref="P:System.Windows.Rect.Top" /> e <see cref="P:System.Windows.Rect.Bottom" /> devono essere aumentate.</param>
      <exception cref="T:System.InvalidOperationException">Questo metodo viene chiamato sul rettangolo <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Intersect(System.Windows.Rect)">
      <summary>Trova l'intersezione del rettangolo corrente e del rettangolo specificato e archivia il risultato come rettangolo corrente.</summary>
      <param name="rect">Il rettangolo con cui intersecare il corrente rettangolo.</param>
    </member>
    <member name="M:System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)">
      <summary>Restituisce l'intersezione dei rettangoli specificati.</summary>
      <param name="rect1">Primo rettangolo da confrontare.</param>
      <param name="rect2">Secondo rettangolo da confrontare.</param>
      <returns>L'intersezione dei due rettangoli, oppure <see cref="P:System.Windows.Rect.Empty" /> se non esiste alcuna intersezione.</returns>
    </member>
    <member name="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)">
      <summary>Indica se il rettangolo specificato si interseca con il rettangolo corrente.</summary>
      <param name="rect">Rettangolo da controllare.</param>
      <returns>
        <see langword="true" /> se il rettangolo specificato si interseca con il rettangolo corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Double,System.Double)">
      <summary>Sposta il rettangolo dei valori orizzontale e verticale specificati.</summary>
      <param name="offsetX">Il valore di cui spostare orizzontalmente il rettangolo.</param>
      <param name="offsetY">Il valore di cui spostare verticalmente il rettangolo.</param>
      <exception cref="T:System.InvalidOperationException">Questo metodo viene chiamato sul rettangolo <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)">
      <summary>Restituisce un rettangolo offset dal rettangolo specificato utilizzando i valori orizzontali e verticali specificati.</summary>
      <param name="rect">Rettangolo da spostare.</param>
      <param name="offsetX">Offset orizzontale per il nuovo rettangolo.</param>
      <param name="offsetY">Offset verticale per il nuovo rettangolo.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="rect" /> è <see cref="P:System.Windows.Rect.Empty" />.</exception>
      <returns>Rettangolo risultante.</returns>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)">
      <summary>Restituisce un rettangolo offset dal rettangolo specificato utilizzando il vettore specificato.</summary>
      <param name="rect">Il rettangolo originale.</param>
      <param name="offsetVector">Un vettore che specifica gli offset orizzontali e verticali per il nuovo rettangolo.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="rect" /> è <see cref="P:System.Windows.Rect.Empty" />.</exception>
      <returns>Rettangolo risultante.</returns>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Windows.Vector)">
      <summary>Sposta il rettangolo dal vettore specificato.</summary>
      <param name="offsetVector">Un vettore che specifica i valori orizzontali e verticali per spostare il rettangolo.</param>
      <exception cref="T:System.InvalidOperationException">Questo metodo viene chiamato sul rettangolo <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
      <summary>Confronta due rettangoli per verificarne l’esatta uguaglianza.</summary>
      <param name="rect1">Primo rettangolo da confrontare.</param>
      <param name="rect2">Secondo rettangolo da confrontare.</param>
      <returns>
        <see langword="true" /> se i rettangoli hanno gli stessi valori <see cref="P:System.Windows.Rect.Location" /> e <see cref="P:System.Windows.Rect.Size" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
      <summary>Confronta due rettangoli per verificarne la disuguaglianza.</summary>
      <param name="rect1">Primo rettangolo da confrontare.</param>
      <param name="rect2">Secondo rettangolo da confrontare.</param>
      <returns>
        <see langword="true" /> se i rettangoli non hanno gli stessi valori <see cref="P:System.Windows.Rect.Location" /> e <see cref="P:System.Windows.Rect.Size" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Parse(System.String)">
      <summary>Crea un nuovo rettangolo dalla rappresentazione della stringa specificata.</summary>
      <param name="source">Rappresentazione della stringa del rettangolo, nel modulo "x, y, larghezza, altezza."</param>
      <returns>Rettangolo risultante.</returns>
    </member>
    <member name="M:System.Windows.Rect.Scale(System.Double,System.Double)">
      <summary>Moltiplica la dimensione del rettangolo corrente per i valori x e y specificati.</summary>
      <param name="scaleX">Fattore di scala nella direzione x.</param>
      <param name="scaleY">Fattore di scala nella direzione y.</param>
    </member>
    <member name="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>Formatta il valore dell'istanza corrente usando il formato specificato.</summary>
      <param name="format">Formato da usare.  
  
-oppure- 
Riferimento null (<see langword="Nothing" /> in Visual Basic) per usare il formato predefinito per il tipo dell'implementazione di <see cref="T:System.IFormattable" />.</param>
      <param name="provider">Provider da utilizzare per formattare il valore.  
  
-oppure- 
Riferimento null (<see langword="Nothing" /> in Visual Basic) per ottenere le informazioni sul formato numerico dalle impostazioni locali correnti del sistema operativo.</param>
      <returns>Rappresentazione in forma di stringa del rettangolo.</returns>
    </member>
    <member name="M:System.Windows.Rect.ToString">
      <summary>Restituisce una rappresentazione in forma di stringa del rettangolo corrente.</summary>
      <returns>Rappresentazione in forma di stringa del rettangolo  corrente. La stringa presenta il formato seguente: "<see cref="P:System.Windows.Rect.X" />,<see cref="P:System.Windows.Rect.Y" />,<see cref="P:System.Windows.Rect.Width" />,<see cref="P:System.Windows.Rect.Height" />".</returns>
    </member>
    <member name="M:System.Windows.Rect.ToString(System.IFormatProvider)">
      <summary>Restituisce una rappresentazione in forma di stringa del rettangolo utilizzando il provider del formato specificato.</summary>
      <param name="provider">Informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Una rappresentazione in forma di stringa del rettangolo corrente determinata dal provider del formato specificato.</returns>
    </member>
    <member name="M:System.Windows.Rect.Transform(System.Windows.Media.Matrix)">
      <summary>Trasforma il rettangolo applicando la matrice specificata.</summary>
      <param name="matrix">Matrice che specifica la trasformazione da applicare.</param>
    </member>
    <member name="M:System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)">
      <summary>Restituisce il rettangolo risultante dall'applicazione della matrice specificata al rettangolo specificato.</summary>
      <param name="rect">Rettangolo che è la base per la trasformazione.</param>
      <param name="matrix">Matrice che specifica la trasformazione da applicare.</param>
      <returns>Rettangolo risultante dall'operazione.</returns>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Point)">
      <summary>Espande il rettangolo corrente abbastanza da poter contenere il punto specificato.</summary>
      <param name="point">Punto da includere.</param>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect)">
      <summary>Espande il rettangolo corrente abbastanza per contenere il rettangolo specificato.</summary>
      <param name="rect">Rettangolo da includere.</param>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)">
      <summary>Crea un rettangolo grande abbastanza da poter includere il rettangolo specificato ed il punto specificato.</summary>
      <param name="rect">Rettangolo da includere.</param>
      <param name="point">Punto da includere.</param>
      <returns>Rettangolo grande abbastanza da poter contenere il rettangolo specificato ed il punto specificato.</returns>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)">
      <summary>Crea un rettangolo grande abbastanza da poter contenere i due rettangoli specificati.</summary>
      <param name="rect1">Il primo rettangolo da includere.</param>
      <param name="rect2">Secondo rettangolo da includere.</param>
      <returns>Rettangolo risultante.</returns>
    </member>
    <member name="P:System.Windows.Rect.Bottom">
      <summary>Ottiene il valore dell'asse y del lato inferiore del rettangolo.</summary>
      <returns>Valore dell'asse y del lato inferiore del rettangolo. Se il rettangolo è vuoto, il valore è <see cref="F:System.Double.NegativeInfinity" />.</returns>
    </member>
    <member name="P:System.Windows.Rect.BottomLeft">
      <summary>Ottiene la posizione dell'angolo sinistro inferiore del rettangolo.</summary>
      <returns>Posizione dell'angolo sinistro inferiore del rettangolo.</returns>
    </member>
    <member name="P:System.Windows.Rect.BottomRight">
      <summary>Ottiene la posizione dell'angolo destro inferiore del rettangolo.</summary>
      <returns>Posizione dell'angolo destro inferiore del rettangolo.</returns>
    </member>
    <member name="P:System.Windows.Rect.Empty">
      <summary>Ottiene un valore speciale che rappresenta un rettangolo senza posizione o area.</summary>
      <returns>Il rettangolo vuoto che ha i valori della proprietà <see cref="P:System.Windows.Rect.X" /> e  <see cref="P:System.Windows.Rect.Y" /> di <see cref="F:System.Double.PositiveInfinity" />e ha i valori della proprietà <see cref="P:System.Windows.Rect.Width" /> e  <see cref="P:System.Windows.Rect.Height" /> di <see cref="F:System.Double.NegativeInfinity" />.</returns>
    </member>
    <member name="P:System.Windows.Rect.Height">
      <summary>Ottiene o imposta l'altezza del rettangolo.</summary>
      <exception cref="T:System.ArgumentException">Il controllo <see cref="P:System.Windows.Rect.Height" /> è impostato su un valore negativo.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Rect.Height" /> viene impostato su un rettangolo <see cref="P:System.Windows.Rect.Empty" />.</exception>
      <returns>Numero positivo che rappresenta l'altezza del rettangolo. Il valore predefinito è 0.</returns>
    </member>
    <member name="P:System.Windows.Rect.IsEmpty">
      <summary>Ottiene un valore che indica se il rettangolo è <see cref="P:System.Windows.Rect.Empty" />.</summary>
      <returns>
        <see langword="true" /> se il rettangolo corrisponde a <see cref="P:System.Windows.Rect.Empty" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Rect.Left">
      <summary>Ottiene il valore dell'asse x del lato sinistro del rettangolo.</summary>
      <returns>Valore dell'asse x del lato sinistro del rettangolo.</returns>
    </member>
    <member name="P:System.Windows.Rect.Location">
      <summary>Ottiene o imposta la posizione dell'angolo superiore sinistro del rettangolo.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Rect.Location" /> viene impostato su un rettangolo <see cref="P:System.Windows.Rect.Empty" />.</exception>
      <returns>Posizione dell'angolo superiore sinistro del rettangolo. Il valore predefinito è (0, 0).</returns>
    </member>
    <member name="P:System.Windows.Rect.Right">
      <summary>Ottiene il valore dell'asse x del lato destro del rettangolo.</summary>
      <returns>Valore dell'asse x del lato destro del rettangolo.</returns>
    </member>
    <member name="P:System.Windows.Rect.Size">
      <summary>Ottiene o imposta la larghezza e l'altezza del rettangolo.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Rect.Size" /> viene impostato su un rettangolo <see cref="P:System.Windows.Rect.Empty" />.</exception>
      <returns>Struttura <see cref="T:System.Windows.Size" /> che specifica la larghezza e l'altezza del rettangolo.</returns>
    </member>
    <member name="P:System.Windows.Rect.Top">
      <summary>Ottiene la posizione dell'asse y del lato superiore del rettangolo.</summary>
      <returns>Posizione dell'asse y del lato superiore del rettangolo.</returns>
    </member>
    <member name="P:System.Windows.Rect.TopLeft">
      <summary>Ottiene la posizione dell'angolo superiore sinistro del rettangolo.</summary>
      <returns>Posizione dell'angolo superiore sinistro del rettangolo.</returns>
    </member>
    <member name="P:System.Windows.Rect.TopRight">
      <summary>Ottiene la posizione dell'angolo superiore destro del rettangolo.</summary>
      <returns>Posizione dell'angolo superiore destro del rettangolo.</returns>
    </member>
    <member name="P:System.Windows.Rect.Width">
      <summary>Ottiene o imposta la larghezza del rettangolo.</summary>
      <exception cref="T:System.ArgumentException">Il controllo <see cref="P:System.Windows.Rect.Width" /> è impostato su un valore negativo.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Rect.Width" /> viene impostato su un rettangolo <see cref="P:System.Windows.Rect.Empty" />.</exception>
      <returns>Numero positivo che rappresenta la larghezza del rettangolo. Il valore predefinito è 0.</returns>
    </member>
    <member name="P:System.Windows.Rect.X">
      <summary>Ottiene o imposta il valore dell'asse x del lato sinistro del rettangolo.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Rect.X" /> viene impostato su un rettangolo <see cref="P:System.Windows.Rect.Empty" />.</exception>
      <returns>Valore dell'asse x del lato sinistro del rettangolo.</returns>
    </member>
    <member name="P:System.Windows.Rect.Y">
      <summary>Ottiene o imposta il valore dell'asse y del lato superiore del rettangolo.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Rect.Y" /> viene impostato su un rettangolo <see cref="P:System.Windows.Rect.Empty" />.</exception>
      <returns>Valore dell'asse y del lato superiore del rettangolo.</returns>
    </member>
    <member name="T:System.Windows.RectConverter">
      <summary>Converte istanze di altri tipi in e da istanze di <see cref="T:System.Windows.Rect" />.</summary>
    </member>
    <member name="M:System.Windows.RectConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.RectConverter" />.</summary>
    </member>
    <member name="M:System.Windows.RectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determina se un oggetto può essere convertito da un tipo specifico in un'istanza di <see cref="T:System.Windows.Rect" />.</summary>
      <param name="context">Fornisce informazioni sul contesto necessarie per la conversione.</param>
      <param name="sourceType">Tipo dell'oggetto di origine valutato per la conversione.</param>
      <returns>
        <see langword="true" /> se il tipo specificato può essere convertito in un oggetto <see cref="T:System.Windows.Rect" />, altrimenti <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.RectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determina se un oggetto <see cref="T:System.Windows.Rect" /> può essere convertito nel tipo specificato.</summary>
      <param name="context">Fornisce informazioni sul contesto necessarie per la conversione.</param>
      <param name="destinationType">Tipo desiderato per cui questo oggetto <see cref="T:System.Windows.Rect" /> viene valutato per la conversione.</param>
      <returns>
        <see langword="true" /> se un oggetto <see cref="T:System.Windows.Rect" /> può essere convertito in <paramref name="destinationType" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.RectConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Tenta di convertire l'oggetto specificato in <see cref="T:System.Windows.Rect" />.</summary>
      <param name="context">Fornisce informazioni sul contesto necessarie per la conversione.</param>
      <param name="culture">Informazioni relative alle impostazioni cultura rispettate durante la conversione.</param>
      <param name="value">Oggetto da convertire.</param>
      <exception cref="T:System.NotSupportedException">Eccezione generata se l'oggetto specificato è NULL o un tipo che non può essere convertito in <see cref="T:System.Windows.Rect" />.</exception>
      <returns>
        <see cref="T:System.Windows.Rect" /> creato tramite la conversione di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Windows.RectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Tenta di convertire un oggetto <see cref="T:System.Windows.Rect" /> nel tipo specificato.</summary>
      <param name="context">Fornisce informazioni sul contesto necessarie per la conversione.</param>
      <param name="culture">Informazioni relative alle impostazioni cultura rispettate durante la conversione.</param>
      <param name="value">Oggetto <see cref="T:System.Windows.Rect" /> da convertire.</param>
      <param name="destinationType">Tipo in cui convertire l'oggetto <see cref="T:System.Windows.Rect" /> corrente.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> è <see langword="null" />.  
  
-oppure- 
 <paramref name="value" /> non è un oggetto <see cref="T:System.Windows.Rect" />.  
  
-oppure- 
<paramref name="destinationType" /> non è uno dei tipi validi per la conversione.</exception>
      <returns>Oggetto creato tramite la conversione di <see cref="T:System.Windows.Rect" />.</returns>
    </member>
    <member name="T:System.Windows.Size">
      <summary>Implementa una struttura che viene usata per descrivere il valore <see cref="T:System.Windows.Size" /> di un oggetto.</summary>
    </member>
    <member name="M:System.Windows.Size.#ctor(System.Double,System.Double)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.Windows.Size" /> e le assegna <paramref name="width" /> e <paramref name="height" /> iniziali.</summary>
      <param name="width">Larghezza iniziale dell'istanza di <see cref="T:System.Windows.Size" /> .</param>
      <param name="height">Altezza iniziale dell'istanza di <see cref="T:System.Windows.Size" />.</param>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Object)">
      <summary>Confronta un oggetto con un'istanza dell'oggetto <see cref="T:System.Windows.Size" /> per determinarne l'uguaglianza.</summary>
      <param name="o">Oggetto <see cref="T:System.Object" /> da confrontare.</param>
      <returns>
        <see langword="true" /> se le dimensioni sono uguali, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Windows.Size)">
      <summary>Confronta un valore con un'istanza di <see cref="T:System.Windows.Size" /> per determinare se siano uguali.</summary>
      <param name="value">Dimensione con cui confrontare l'istanza corrente di <see cref="T:System.Windows.Size" />.</param>
      <returns>
        <see langword="true" /> se le istanze di <see cref="T:System.Windows.Size" /> sono uguali; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Windows.Size,System.Windows.Size)">
      <summary>Confronta due istanze di <see cref="T:System.Windows.Size" /> per determinare se siano uguali.</summary>
      <param name="size1">Prima istanza dell'oggetto <see cref="T:System.Windows.Size" /> da confrontare.</param>
      <param name="size2">Seconda istanza dell'oggetto <see cref="T:System.Windows.Size" /> da confrontare.</param>
      <returns>
        <see langword="true" /> se le istanze di <see cref="T:System.Windows.Size" /> sono uguali; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.GetHashCode">
      <summary>Ottiene il codice hash per l'istanza di <see cref="T:System.Windows.Size" />.</summary>
      <returns>Codice hash per l'istanza di <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Equality(System.Windows.Size,System.Windows.Size)">
      <summary>Confronta due istanze di <see cref="T:System.Windows.Size" /> per determinare se siano uguali.</summary>
      <param name="size1">Prima istanza dell'oggetto <see cref="T:System.Windows.Size" /> da confrontare.</param>
      <param name="size2">Seconda istanza dell'oggetto <see cref="T:System.Windows.Size" /> da confrontare.</param>
      <returns>
        <see langword="true" /> se le due istanze di <see cref="T:System.Windows.Size" /> sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Explicit(System.Windows.Size)~System.Windows.Point">
      <summary>Converte esplicitamente un'istanza di <see cref="T:System.Windows.Size" /> in un'istanza di <see cref="T:System.Windows.Point" />.</summary>
      <param name="size">Valore <see cref="T:System.Windows.Size" /> da convertire.</param>
      <returns>Oggetto <see cref="T:System.Windows.Point" /> uguale per valore a questa istanza di <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Explicit(System.Windows.Size)~System.Windows.Vector">
      <summary>Converte esplicitamente un'istanza di <see cref="T:System.Windows.Size" /> in un'istanza di <see cref="T:System.Windows.Vector" />.</summary>
      <param name="size">Valore <see cref="T:System.Windows.Size" /> da convertire.</param>
      <returns>Oggetto <see cref="T:System.Windows.Vector" /> uguale per valore a questa istanza di <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Inequality(System.Windows.Size,System.Windows.Size)">
      <summary>Confronta due istanze di <see cref="T:System.Windows.Size" /> per determinarne la disuguaglianza.</summary>
      <param name="size1">Prima istanza dell'oggetto <see cref="T:System.Windows.Size" /> da confrontare.</param>
      <param name="size2">Seconda istanza dell'oggetto <see cref="T:System.Windows.Size" /> da confrontare.</param>
      <returns>
        <see langword="true" /> se le istanze di <see cref="T:System.Windows.Size" /> non sono uguali, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.Parse(System.String)">
      <summary>Restituisce un'istanza di <see cref="T:System.Windows.Size" /> da un oggetto <see cref="T:System.String" /> convertito.</summary>
      <param name="source">Valore <see cref="T:System.String" /> da analizzare in relazione a un valore <see cref="T:System.Windows.Size" />.</param>
      <returns>Istanza di <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="M:System.Windows.Size.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>Questo tipo o membro supporta l'infrastruttura Windows Presentation Foundation (WPF) e non deve essere usato direttamente dal codice.</summary>
      <param name="format">Formato da usare.</param>
      <param name="provider">Provider da utilizzare per formattare il valore.</param>
      <returns>Valore dell'istanza corrente nel formato specificato.</returns>
    </member>
    <member name="M:System.Windows.Size.ToString">
      <summary>Restituisce <see cref="T:System.String" /> che rappresenta questo oggetto <see cref="T:System.Windows.Size" />.</summary>
      <returns>Oggetto <see cref="T:System.String" /> che specifica la larghezza seguita dall'altezza.</returns>
    </member>
    <member name="M:System.Windows.Size.ToString(System.IFormatProvider)">
      <summary>Restituisce un oggetto <see cref="T:System.String" /> che rappresenta questa istanza di <see cref="T:System.Windows.Size" />.</summary>
      <param name="provider">Oggetto che fornisce una modalità per controllare la formattazione.</param>
      <returns>
        <see cref="T:System.String" /> che rappresenta questo oggetto <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="P:System.Windows.Size.Empty">
      <summary>Ottiene un valore che rappresenta un oggetto <see cref="T:System.Windows.Size" /> vuoto statico.</summary>
      <returns>Istanza vuota di <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="P:System.Windows.Size.Height">
      <summary>Ottiene o imposta <see cref="P:System.Windows.Size.Height" /> di questa istanza di <see cref="T:System.Windows.Size" />.</summary>
      <returns>Oggetto <see cref="P:System.Windows.Size.Height" /> di questa istanza di <see cref="T:System.Windows.Size" />. Il valore predefinito è 0. Il valore non può essere negativo.</returns>
    </member>
    <member name="P:System.Windows.Size.IsEmpty">
      <summary>Ottiene un valore che indica se questa istanza di <see cref="T:System.Windows.Size" /> è <see cref="P:System.Windows.Size.Empty" />.</summary>
      <returns>
        <see langword="true" /> se questa istanza della dimensione è <see cref="P:System.Windows.Size.Empty" />, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Size.Width">
      <summary>Ottiene o imposta <see cref="P:System.Windows.Size.Width" /> di questa istanza di <see cref="T:System.Windows.Size" />.</summary>
      <returns>Oggetto <see cref="P:System.Windows.Size.Width" /> di questa istanza di <see cref="T:System.Windows.Size" />. Il valore predefinito è <c>0</c>. Il valore non può essere negativo.</returns>
    </member>
    <member name="T:System.Windows.SizeConverter">
      <summary>Converte istanze di altri tipi verso e da istanze della classe <see cref="T:System.Windows.Size" />.</summary>
    </member>
    <member name="M:System.Windows.SizeConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.SizeConverter" />.</summary>
    </member>
    <member name="M:System.Windows.SizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determina se una classe può essere convertita da un tipo specificato in un'istanza di <see cref="T:System.Windows.Size" />.</summary>
      <param name="context">Fornisce informazioni contestuali su un componente.</param>
      <param name="sourceType">Identifica il tipo di dati da valutare per la conversione.</param>
      <returns>
        <see langword="true" /> se i <paramref name="sourceType" /> possono essere convertiti in un'istanza di <see cref="T:System.Windows.Size" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.SizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determina se un'istanza di <see cref="T:System.Windows.Size" /> può essere convertita in un tipo diverso.</summary>
      <param name="context">Fornisce informazioni contestuali su un componente.</param>
      <param name="destinationType">Identifica il tipo di dati da valutare per la conversione.</param>
      <returns>
        <see langword="true" /> se questa istanza di <see cref="T:System.Windows.Size" /> può essere convertita in <paramref name="destinationType" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.SizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Tenta di convertire un oggetto specificato in un'istanza di <see cref="T:System.Windows.Size" />.</summary>
      <param name="context">Fornisce informazioni contestuali su un componente.</param>
      <param name="culture">Informazioni specifiche di impostazioni cultura che devono essere rispettate durante la conversione.</param>
      <param name="value">Oggetto di origine che si sta convertendo.</param>
      <returns>Istanza di <see cref="T:System.Windows.Size" /> creata dall'oggetto <paramref name="source" /> convertito.</returns>
    </member>
    <member name="M:System.Windows.SizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Tenta di convertire un'istanza di <see cref="T:System.Windows.Size" /> in un tipo specificato.</summary>
      <param name="context">Fornisce informazioni contestuali su un componente.</param>
      <param name="culture">Informazioni specifiche di impostazioni cultura che devono essere rispettate durante la conversione.</param>
      <param name="value">L'istanza di <see cref="T:System.Windows.Size" /> da convertire.</param>
      <param name="destinationType">Tipo in cui viene convertita questa istanza di <see cref="T:System.Windows.Size" />.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> è <see langword="null" /> oppure non è un'istanza di <see cref="T:System.Windows.Size" />, oppure se <paramref name="destinationType" /> non è uno dei  tipi validi di destinazione.</exception>
      <returns>Oggetto che viene creato dall'istanza convertita di <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="T:System.Windows.SplashScreen">
      <summary>Fornisce una schermata iniziale per un'applicazione Windows Presentation Foundation (WPF).</summary>
    </member>
    <member name="M:System.Windows.SplashScreen.#ctor(System.Reflection.Assembly,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.SplashScreen" /> con l'assembly di risorse specificato.</summary>
      <param name="resourceAssembly">Assembly che contiene la risorsa incorporata.</param>
      <param name="resourceName">Nome della risorsa incorporata.</param>
    </member>
    <member name="M:System.Windows.SplashScreen.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.SplashScreen" /> con la risorsa specificata.</summary>
      <param name="resourceName">Nome della risorsa incorporata.</param>
    </member>
    <member name="M:System.Windows.SplashScreen.Close(System.TimeSpan)">
      <summary>Chiude la schermata iniziale.</summary>
      <param name="fadeoutDuration">Oggetto <see cref="T:System.TimeSpan" /> che specifica il tempo richiesto per la dissolvenza della schermata iniziale dopo l'avvio dell'operazione di chiusura.</param>
    </member>
    <member name="M:System.Windows.SplashScreen.Show(System.Boolean)">
      <summary>Visualizza la schermata iniziale.</summary>
      <param name="autoClose">
        <see langword="true" /> per chiudere automaticamente la schermata iniziale; <see langword="false" /> per chiuderla manualmente.</param>
      <exception cref="T:System.IO.IOException">La risorsa specificata nel costruttore non è stata trovata.</exception>
    </member>
    <member name="M:System.Windows.SplashScreen.Show(System.Boolean,System.Boolean)">
      <summary>Visualizza la schermata iniziale.</summary>
      <param name="autoClose">
        <see langword="true" /> per chiudere automaticamente la schermata iniziale; <see langword="false" /> per chiuderla manualmente.</param>
      <param name="topMost">
        <see langword="true" /> se la finestra della schermata iniziale deve utilizzare lo stile WS_EX_TOPMOST; in caso contrario <see langword="false" />.</param>
    </member>
    <member name="T:System.Windows.Threading.Dispatcher">
      <summary>Fornisce i servizi per la gestione della coda di elementi di lavoro per un thread.</summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.ShutdownFinished">
      <summary>Si verifica quando <see cref="T:System.Windows.Threading.Dispatcher" /> termina l'arresto.</summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.ShutdownStarted">
      <summary>Si verifica quando <see cref="T:System.Windows.Threading.Dispatcher" /> inizia l'arresto.</summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.UnhandledException">
      <summary>Si verifica quando viene generata un'eccezione del thread non intercettata durante l'esecuzione di un delegato mediante <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> o <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />.</summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter">
      <summary>Si verifica quando viene generata un'eccezione del thread non intercettata durante l'esecuzione di un delegato mediante <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> o <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> in fase di filtro.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Object[])">
      <summary>Esegue in modo asincrono il delegato specificato con gli argomenti specificati sul thread in cui è stato creato l'oggetto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="method">Delegato a un metodo che accetta i parametri specificati in <paramref name="args" />, inserito nella coda di eventi <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="args">Matrice di oggetti da passare come argomenti al metodo specificato. Può essere <see langword="null" />.</param>
      <returns>Oggetto, restituito immediatamente dopo la chiamata a <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />, utilizzabile per l'interazione con il delegato mentre è in attesa di esecuzione nella coda degli eventi.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])">
      <summary>Esegue in modo asincrono il delegato specificato con gli argomenti specificati, con la priorità specificata, sul thread in cui è stato creato l'oggetto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="method">Delegato a un metodo che accetta i parametri specificati in <paramref name="args" />, inserito nella coda di eventi <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="priority">Priorità, relativa alle altre operazioni in sospeso nella <see cref="T:System.Windows.Threading.Dispatcher" /> coda degli eventi, con cui viene richiamato il metodo specificato.</param>
      <param name="args">Matrice di oggetti da passare come argomenti al metodo specificato. Può essere <see langword="null" />.</param>
      <returns>Oggetto, restituito immediatamente dopo la chiamata a <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />, utilizzabile per l'interazione con il delegato mentre è in attesa di esecuzione nella coda degli eventi.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)">
      <summary>Esegue in modo asincrono il delegato specificato con la priorità specificata sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="priority">Priorità, relativa alle altre operazioni in sospeso nella <see cref="T:System.Windows.Threading.Dispatcher" /> coda degli eventi, con cui viene richiamato il metodo specificato.</param>
      <param name="method">Delegato a un metodo che non accetta argomenti, inserito nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="priority" /> non è un oggetto <see cref="T:System.Windows.Threading.DispatcherPriority" /> valido.</exception>
      <returns>Oggetto, restituito immediatamente dopo la chiamata a <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />, utilizzabile per l'interazione con il delegato mentre è in attesa di esecuzione nella coda degli eventi.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)">
      <summary>Esegue in modo asincrono il delegato specificato con la priorità e l'argomento specificati sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="priority">Priorità, relativa alle altre operazioni in sospeso nella <see cref="T:System.Windows.Threading.Dispatcher" /> coda degli eventi, con cui viene richiamato il metodo specificato.</param>
      <param name="method">Delegato a un metodo che accetta un argomento, inserito nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg">Oggetto da passare come argomento al metodo specificato.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="priority" /> non è un oggetto <see cref="T:System.Windows.Threading.DispatcherPriority" /> valido.</exception>
      <returns>Oggetto, restituito immediatamente dopo la chiamata a <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />, utilizzabile per l'interazione con il delegato mentre è in attesa di esecuzione nella coda degli eventi.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])">
      <summary>Esegue in modo asincrono il delegato specificato con la priorità e la matrice di argomenti specificati sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="priority">Priorità, relativa alle altre operazioni in sospeso nella <see cref="T:System.Windows.Threading.Dispatcher" /> coda degli eventi, con cui viene richiamato il metodo specificato.</param>
      <param name="method">Delegato a un metodo che accetta più argomenti, inserito nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg">Oggetto da passare come argomento al metodo specificato.</param>
      <param name="args">Matrice di oggetti da passare come argomenti al metodo specificato.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <see cref="T:System.Windows.Threading.DispatcherPriority" /> non è una priorità valida.</exception>
      <returns>Oggetto, restituito immediatamente dopo la chiamata a <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />, utilizzabile per l'interazione con il delegato mentre è in attesa di esecuzione nella coda di <see cref="T:System.Windows.Threading.Dispatcher" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvokeShutdown(System.Windows.Threading.DispatcherPriority)">
      <summary>Inizia in modo asincrono l'arresto di <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="priority">Priorità con la quale iniziare ad arrestare il dispatcher.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.CheckAccess">
      <summary>Determina se il thread chiamante è il thread associato a questo oggetto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns>
        <see langword="true" /> se il thread chiamante è il thread associato a <see cref="T:System.Windows.Threading.Dispatcher" />, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.DisableProcessing">
      <summary>Disabilita l'elaborazione della coda di <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns>Struttura utilizzata per attivare nuovamente l'elaborazione del dispatcher.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.ExitAllFrames">
      <summary>Richiede l'uscita di tutti i frame, inclusi i frame annidati.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.FromThread(System.Threading.Thread)">
      <summary>Ottiene <see cref="T:System.Windows.Threading.Dispatcher" /> per il thread specificato.</summary>
      <param name="thread">Thread dal quale ottenere <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <returns>Dispatcher per <paramref name="thread" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action)">
      <summary>Esegue in modo sincrono il <see cref="T:System.Action" /> specificato sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="callback">Un delegato da richiamare tramite il dispatcher.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority)">
      <summary>Esegue in modo sincrono il <see cref="T:System.Action" /> specificato con la priorità specificata sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="callback">Un delegato da richiamare tramite il dispatcher.</param>
      <param name="priority">Priorità che determina l'ordine in cui viene richiamato il callback specificato rispetto alle altre operazioni in sospeso in <see cref="T:System.Windows.Threading.Dispatcher" /> .</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary>Esegue in modo sincrono il <see cref="T:System.Action" /> specificato con la priorità specificata sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="callback">Un delegato da richiamare tramite il dispatcher.</param>
      <param name="priority">Priorità che determina l'ordine in cui viene richiamato il callback specificato rispetto alle altre operazioni in sospeso in <see cref="T:System.Windows.Threading.Dispatcher" /> .</param>
      <param name="cancellationToken">Oggetto che indica se annullare l'azione.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)">
      <summary>Esegue in modo sincrono il <see cref="T:System.Action" /> specificato con la priorità specificata sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="callback">Delegato dell'azione da richiamare tramite il dispatcher.</param>
      <param name="priority">Priorità che determina l'ordine in cui viene richiamato il callback specificato rispetto alle altre operazioni in sospeso in <see cref="T:System.Windows.Threading.Dispatcher" /> .</param>
      <param name="cancellationToken">Oggetto che indica se annullare l'azione.</param>
      <param name="timeout">Tempo massimo di attesa per l'avvio dell'operazione. Una volta avviata, l'operazione verrà completata prima che questo metodo venga restituito. Per specificare un'attesa infinita, usare un valore pari a-1. In una chiamata allo stesso thread, qualsiasi altro valore negativo viene convertito in-1, ottenendo un'attesa infinita. In una chiamata cross-thread, qualsiasi altro valore negativo genera un'eccezione <see cref="T:System.ArgumentOutOfRangeException" /> .</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callback" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> è un numero negativo diverso da-1 e questo metodo è stato richiamato tra thread.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="priority" /> non è una priorità valida.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Object[])">
      <summary>Esegue in modo asincrono il delegato specificato con gli argomenti specificati sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="method">Delegato a un metodo che accetta i parametri specificati in <paramref name="args" />, inserito nella coda di eventi <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="args">Matrice di oggetti da passare come argomenti al metodo specificato. Può essere <see langword="null" />.</param>
      <returns>Valore restituito dal delegato richiamato oppure <see langword="null" /> se il delegato non restituisce alcun valore.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Object[])">
      <summary>Esegue in modo sincrono il delegato specificato entro l'intervallo di tempo designato con la priorità e gli argomenti specificati sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="method">Delegato a un metodo che accetta i parametri specificati in <paramref name="args" />, inserito nella coda di eventi <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="timeout">Tempo massimo di attesa per l'avvio dell'operazione. Tuttavia, una volta avviata, l'operazione verrà completata prima che questo metodo venga restituito. Per specificare un'attesa infinita, usare un valore pari a-1. In una chiamata allo stesso thread, qualsiasi altro valore negativo viene convertito in-1, ottenendo un'attesa infinita. In una chiamata cross-thread, qualsiasi altro valore negativo genera un'eccezione <see cref="T:System.ArgumentOutOfRangeException" /> .</param>
      <param name="args">Matrice di oggetti da passare come argomenti al metodo specificato. Può essere <see langword="null" /> se non è necessario alcun argomento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> è un numero negativo diverso da-1 e si sta richiamando tra thread.</exception>
      <returns>Valore restituito dal delegato richiamato oppure <see langword="null" /> se il delegato non restituisce alcun valore.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.Object[])">
      <summary>Esegue in modo sincrono il delegato specificato entro l'intervallo di tempo designato con la priorità e gli argomenti specificati sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="method">Delegato a un metodo che accetta i parametri specificati in <paramref name="args" />, inserito nella coda di eventi <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="timeout">Tempo massimo di attesa per l'avvio dell'operazione. Una volta avviata, l'operazione verrà completata prima che questo metodo venga restituito. Per specificare un'attesa infinita, usare un valore pari a-1. In una chiamata allo stesso thread, qualsiasi altro valore negativo viene convertito in-1, ottenendo un'attesa infinita. In una chiamata cross-thread, qualsiasi altro valore negativo genera un'eccezione <see cref="T:System.ArgumentOutOfRangeException" /> .</param>
      <param name="priority">Priorità, relativa alle altre operazioni in sospeso nella <see cref="T:System.Windows.Threading.Dispatcher" /> coda degli eventi, con cui viene richiamato il metodo specificato.</param>
      <param name="args">Matrice di oggetti da passare come argomenti al metodo specificato. Può essere <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> è un numero negativo diverso da-1 e questo metodo è stato richiamato tra thread.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="priority" /> è uguale a <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="priority" /> non è una priorità valida.</exception>
      <returns>Valore restituito dal delegato richiamato oppure <see langword="null" /> se il delegato non restituisce alcun valore.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])">
      <summary>Esegue in modo sincrono il delegato specificato con la priorità e gli argomenti specificati sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="method">Delegato a un metodo che accetta i parametri specificati in <paramref name="args" />, inserito nella coda di eventi <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="priority">Priorità con cui viene richiamato il metodo specificato rispetto alle altre operazioni in sospeso nella <see cref="T:System.Windows.Threading.Dispatcher" /> coda degli eventi.</param>
      <param name="args">Matrice di oggetti da passare come argomenti al metodo specificato. Può essere <see langword="null" />.</param>
      <returns>Valore restituito dal delegato richiamato oppure <see langword="null" /> se il delegato non restituisce alcun valore.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)">
      <summary>Esegue in modo sincrono il delegato specificato con la priorità specificata sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="priority">Priorità con cui viene richiamato il metodo specificato rispetto alle altre operazioni in sospeso nella <see cref="T:System.Windows.Threading.Dispatcher" /> coda degli eventi.</param>
      <param name="method">Delegato a un metodo che non accetta argomenti, inserito nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="priority" /> è uguale a <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="priority" /> non è una priorità valida.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> è <see langword="null" />.</exception>
      <returns>Valore restituito dal delegato richiamato oppure <see langword="null" /> se il delegato non restituisce alcun valore.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)">
      <summary>Esegue in modo sincrono il delegato specificato con la priorità e l'argomento specificati sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="priority">Priorità, relativa alle altre operazioni in sospeso nella <see cref="T:System.Windows.Threading.Dispatcher" /> coda degli eventi, con cui viene richiamato il metodo specificato.</param>
      <param name="method">Delegato a un metodo che accetta un argomento, inserito nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg">Oggetto da passare come argomento al metodo specificato.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="priority" /> è uguale a <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="priority" /> non è una priorità valida.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> è <see langword="null" />.</exception>
      <returns>Valore restituito dal delegato richiamato oppure <see langword="null" /> se il delegato non restituisce alcun valore.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])">
      <summary>Esegue in modo sincrono il delegato specificato con la priorità e gli argomenti specificati sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="priority">Priorità, relativa alle altre operazioni in sospeso nella <see cref="T:System.Windows.Threading.Dispatcher" /> coda degli eventi, con cui viene richiamato il metodo specificato.</param>
      <param name="method">Delegato a un metodo che accetta più argomenti, inserito nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg">Oggetto da passare come argomento al metodo specificato.</param>
      <param name="args">Matrice di oggetti da passare come argomenti al metodo specificato.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="priority" /> è uguale a <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="priority" /> non è una priorità valida.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> è <see langword="null" />.</exception>
      <returns>Valore restituito dal delegato richiamato oppure <see langword="null" /> se il delegato non restituisce alcun valore.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate)">
      <summary>Esegue in modo sincrono il delegato specificato con la priorità e il valore di timeout specificati sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="priority">Priorità, relativa alle altre operazioni in sospeso nella <see cref="T:System.Windows.Threading.Dispatcher" /> coda degli eventi, con cui viene richiamato il metodo specificato.</param>
      <param name="timeout">Tempo massimo di attesa per l'avvio dell'operazione. Una volta avviata, l'operazione verrà completata prima che questo metodo venga restituito. Per specificare un'attesa infinita, usare un valore pari a-1. In una chiamata allo stesso thread, qualsiasi altro valore negativo viene convertito in-1, ottenendo un'attesa infinita. In una chiamata cross-thread, qualsiasi altro valore negativo genera un'eccezione <see cref="T:System.ArgumentOutOfRangeException" /> .</param>
      <param name="method">Delegato a un metodo che non accetta argomenti, inserito nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> è un numero negativo diverso da-1 e questo metodo è stato richiamato tra thread.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="priority" /> è uguale a <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="priority" /> non è una priorità valida.</exception>
      <returns>Valore restituito dal delegato richiamato oppure <see langword="null" /> se il delegato non restituisce alcun valore.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object)">
      <summary>Esegue in modo sincrono il delegato specificato con la priorità e l'argomento specificati sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="priority">Priorità, relativa alle altre operazioni in sospeso nella <see cref="T:System.Windows.Threading.Dispatcher" /> coda degli eventi, con cui viene richiamato il metodo specificato.</param>
      <param name="timeout">Tempo massimo di attesa per l'avvio dell'operazione. Una volta avviata, l'operazione verrà completata prima che questo metodo venga restituito. Per specificare un'attesa infinita, usare un valore pari a-1. In una chiamata allo stesso thread, qualsiasi altro valore negativo viene convertito in-1, ottenendo un'attesa infinita. In una chiamata cross-thread, qualsiasi altro valore negativo genera un'eccezione <see cref="T:System.ArgumentOutOfRangeException" /> .</param>
      <param name="method">Delegato a un metodo che accetta più argomenti, inserito nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg">Oggetto da passare come argomento al metodo specificato. Se non sono richiesti argomenti, può corrispondere a <see langword="null" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="priority" /> è uguale a <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="priority" /> non è una priorità valida.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> è <see langword="null" />.</exception>
      <returns>Valore restituito dal delegato richiamato oppure <see langword="null" /> se il delegato non restituisce alcun valore.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object,System.Object[])">
      <summary>Esegue in modo sincrono il delegato specificato con la priorità e gli argomenti specificati sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="priority">Priorità, relativa alle altre operazioni in sospeso nella <see cref="T:System.Windows.Threading.Dispatcher" /> coda degli eventi, con cui viene richiamato il metodo specificato.</param>
      <param name="timeout">Tempo massimo di attesa per l'avvio dell'operazione. Una volta avviata, l'operazione verrà completata prima che questo metodo venga restituito. Per specificare un'attesa infinita, usare un valore pari a-1. In una chiamata allo stesso thread, qualsiasi altro valore negativo viene convertito in-1, ottenendo un'attesa infinita. In una chiamata cross-thread, qualsiasi altro valore negativo genera un'eccezione <see cref="T:System.ArgumentOutOfRangeException" /> .</param>
      <param name="method">Delegato a un metodo che accetta più argomenti, inserito nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg">Oggetto da passare come argomento al metodo specificato.</param>
      <param name="args">Matrice di oggetti da passare come argomenti al metodo specificato.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="priority" /> è uguale a <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="priority" /> non è un oggetto <see cref="T:System.Windows.Threading.DispatcherPriority" /> valido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> è un numero negativo diverso da-1 e questo metodo è stato richiamato tra thread.</exception>
      <returns>Valore restituito dal delegato richiamato oppure <see langword="null" /> se il delegato non restituisce alcun valore.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0})">
      <summary>Esegue in modo sincrono il <see cref="T:System.Func`1" /> specificato sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="callback">Un delegato da richiamare tramite il dispatcher.</param>
      <typeparam name="TResult">Il tipo del valore restituito del delegato specificato.</typeparam>
      <returns>Valore restituito da <paramref name="callback" /> .</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)">
      <summary>Esegue in modo sincrono il <see cref="T:System.Func`1" /> specificato con la priorità specificata sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="callback">Un delegato da richiamare tramite il dispatcher.</param>
      <param name="priority">Priorità che determina l'ordine in cui viene richiamato il callback specificato rispetto alle altre operazioni in sospeso in <see cref="T:System.Windows.Threading.Dispatcher" /> .</param>
      <typeparam name="TResult">Il tipo del valore restituito del delegato specificato.</typeparam>
      <returns>Valore restituito da <paramref name="callback" /> .</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary>Esegue in modo sincrono il <see cref="T:System.Func`1" /> specificato con la priorità specificata sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="callback">Un delegato da richiamare tramite il dispatcher.</param>
      <param name="priority">Priorità che determina l'ordine in cui viene richiamato il callback specificato rispetto alle altre operazioni in sospeso in <see cref="T:System.Windows.Threading.Dispatcher" /> .</param>
      <param name="cancellationToken">Oggetto che indica se annullare l'operazione.</param>
      <typeparam name="TResult">Il tipo del valore restituito del delegato specificato.</typeparam>
      <returns>Valore restituito da <paramref name="callback" /> .</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)">
      <summary>Esegue in modo sincrono il <see cref="T:System.Func`1" /> specificato con la priorità specificata sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="callback">Un delegato da richiamare tramite il dispatcher.</param>
      <param name="priority">Priorità che determina l'ordine in cui viene richiamato il callback specificato rispetto alle altre operazioni in sospeso in <see cref="T:System.Windows.Threading.Dispatcher" /> .</param>
      <param name="cancellationToken">Oggetto che indica se annullare l'operazione.</param>
      <param name="timeout">Tempo massimo di attesa per l'avvio dell'operazione. Una volta avviata, l'operazione verrà completata prima che questo metodo venga restituito. Per specificare un'attesa infinita, usare un valore pari a-1. In una chiamata allo stesso thread, qualsiasi altro valore negativo viene convertito in-1, ottenendo un'attesa infinita. In una chiamata cross-thread, qualsiasi altro valore negativo genera un'eccezione <see cref="T:System.ArgumentOutOfRangeException" /> .</param>
      <typeparam name="TResult">Il tipo del valore restituito del delegato specificato.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callback" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> è un numero negativo diverso da-1 e il metodo è stato richiamato tra thread.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="priority" /> non è una priorità valida.</exception>
      <returns>Valore restituito da <paramref name="callback" /> .</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)">
      <summary>Esegue in modo asincrono il <see cref="T:System.Action" /> specificato sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="callback">Un delegato da richiamare tramite il dispatcher.</param>
      <returns>Oggetto, restituito immediatamente dopo la chiamata a <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)" />, utilizzabile per l'interazione con il delegato mentre è in attesa di esecuzione nella coda degli eventi.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)">
      <summary>Esegue in modo asincrono il <see cref="T:System.Action" /> specificato con la priorità specificata sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="callback">Un delegato da richiamare tramite il dispatcher.</param>
      <param name="priority">Priorità che determina l'ordine in cui viene richiamato il callback specificato rispetto alle altre operazioni in sospeso in <see cref="T:System.Windows.Threading.Dispatcher" /> .</param>
      <returns>Oggetto, restituito immediatamente dopo la chiamata a <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)" />, utilizzabile per l'interazione con il delegato mentre è in attesa di esecuzione nella coda degli eventi.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary>Esegue in modo asincrono il <see cref="T:System.Action" /> specificato con la priorità specificata sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="callback">Un delegato da richiamare tramite il dispatcher.</param>
      <param name="priority">Priorità che determina l'ordine in cui viene richiamato il callback specificato rispetto alle altre operazioni in sospeso in <see cref="T:System.Windows.Threading.Dispatcher" /> .</param>
      <param name="cancellationToken">Oggetto che indica se annullare l'azione.</param>
      <returns>Oggetto, restituito immediatamente dopo la chiamata a <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />, utilizzabile per l'interazione con il delegato mentre è in attesa di esecuzione nella coda degli eventi.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})">
      <summary>Esegue in modo asincrono il <see cref="T:System.Func`1" /> specificato sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="callback">Un delegato da richiamare tramite il dispatcher.</param>
      <typeparam name="TResult">Il tipo del valore restituito del delegato specificato.</typeparam>
      <returns>Oggetto, restituito immediatamente dopo la chiamata a <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})" />, utilizzabile per l'interazione con il delegato mentre è in attesa di esecuzione nella coda degli eventi.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)">
      <summary>Esegue in modo asincrono il <see cref="T:System.Func`1" /> specificato con la priorità specificata sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="callback">Un delegato da richiamare tramite il dispatcher.</param>
      <param name="priority">Priorità che determina l'ordine in cui viene richiamato il callback specificato rispetto alle altre operazioni in sospeso in <see cref="T:System.Windows.Threading.Dispatcher" /> .</param>
      <typeparam name="TResult">Il tipo del valore restituito del delegato specificato.</typeparam>
      <returns>Oggetto, restituito immediatamente dopo la chiamata a <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" />, utilizzabile per l'interazione con il delegato mentre è in attesa di esecuzione nella coda degli eventi.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary>Esegue in modo asincrono il <see cref="T:System.Func`1" /> specificato con la priorità specificata sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="callback">Un delegato da richiamare tramite il dispatcher.</param>
      <param name="priority">Priorità che determina l'ordine in cui viene richiamato il callback specificato rispetto alle altre operazioni in sospeso in <see cref="T:System.Windows.Threading.Dispatcher" /> .</param>
      <param name="cancellationToken">Oggetto che indica se annullare l'operazione.</param>
      <typeparam name="TResult">Il tipo del valore restituito del delegato specificato.</typeparam>
      <returns>Oggetto, restituito immediatamente dopo la chiamata a <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />, utilizzabile per l'interazione con il delegato mentre è in attesa di esecuzione nella coda degli eventi.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeShutdown">
      <summary>Inizia il processo di arresto di <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.PushFrame(System.Windows.Threading.DispatcherFrame)">
      <summary>Immette un ciclo di esecuzione.</summary>
      <param name="frame">Frame per il dispatcher da elaborare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="frame" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" /> è <see langword="true" />  
  
-oppure- 
 <paramref name="frame" /> è in esecuzione su un oggetto <see cref="T:System.Windows.Threading.Dispatcher" /> diverso.  
  
-oppure- 
L'elaborazione del dispatcher è stata disabilitata.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Run">
      <summary>Inserisce il frame di esecuzione principale nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.ValidatePriority(System.Windows.Threading.DispatcherPriority,System.String)">
      <summary>Determina se la priorità stabilita dall'oggetto <see cref="T:System.Windows.Threading.DispatcherPriority" /> specificato sia valida.</summary>
      <param name="priority">Priorità da controllare.</param>
      <param name="parameterName">Stringa che verrà restituita dall'eccezione che si verifica se la priorità non è valida.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="priority" /> non è un oggetto <see cref="T:System.Windows.Threading.DispatcherPriority" /> valido.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.VerifyAccess">
      <summary>Determina se il thread chiamante ha accesso a <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <exception cref="T:System.InvalidOperationException">Il thread chiamante non ha accesso a <see cref="T:System.Windows.Threading.Dispatcher" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Yield">
      <summary>Crea un oggetto awaitable che restituisce in modo asincrono il controllo al dispatcher corrente e offre al dispatcher la possibilità di elaborare altri eventi.</summary>
      <returns>Oggetto awaitable che restituisce in modo asincrono il controllo al dispatcher corrente e consente a quest'ultimo di elaborare altri eventi.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Yield(System.Windows.Threading.DispatcherPriority)">
      <summary>Crea un oggetto awaitable che restituisce in modo asincrono il controllo al dispatcher corrente e offre al dispatcher la possibilità di elaborare altri eventi.  Il lavoro che si verifica quando il controllo ritorna al codice in attesa del risultato di questo metodo viene pianificato in base alla priorità specificata.</summary>
      <param name="priority">Priorità con cui pianificare la continuazione.</param>
      <returns>Oggetto awaitable che restituisce in modo asincrono il controllo al dispatcher corrente e consente a quest'ultimo di elaborare altri eventi.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.CurrentDispatcher">
      <summary>Ottiene <see cref="T:System.Windows.Threading.Dispatcher" /> per il thread attualmente in esecuzione e crea un nuovo <see cref="T:System.Windows.Threading.Dispatcher" /> se al thread non ne è già associato uno.</summary>
      <returns>Dispatcher associato al thread corrente.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.HasShutdownFinished">
      <summary>Determina se <see cref="T:System.Windows.Threading.Dispatcher" /> ha terminato l'arresto.</summary>
      <returns>
        <see langword="true" /> se il dispatcher ha concluso l'arresto, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.HasShutdownStarted">
      <summary>Determina se <see cref="T:System.Windows.Threading.Dispatcher" /> si stia arrestando.</summary>
      <returns>
        <see langword="true" /> se <see cref="T:System.Windows.Threading.Dispatcher" /> ha iniziato l'arresto, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.Hooks">
      <summary>Ottiene l'insieme di hook che forniscono informazioni aggiuntive sull'evento relativamente a <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns>Hook associato a <see cref="T:System.Windows.Threading.Dispatcher" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.Thread">
      <summary>Ottiene il thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <returns>Thread.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherEventArgs">
      <summary>Fornisce i dati per gli eventi <see cref="T:System.Windows.Threading.Dispatcher" /> correlati.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherEventArgs.Dispatcher">
      <summary>Oggetto <see cref="T:System.Windows.Threading.Dispatcher" /> associato all'evento corrente.</summary>
      <returns>Dispatcher.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherFrame">
      <summary>Rappresenta un ciclo di esecuzione nell'oggetto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherFrame.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Threading.DispatcherFrame" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherFrame.#ctor(System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Threading.DispatcherFrame" /> utilizzando il flag di richiesta di uscita specificata.</summary>
      <param name="exitWhenRequested">Indica se questo frame terminerà quando a tutti i frame viene richiesto di uscire.</param>
    </member>
    <member name="P:System.Windows.Threading.DispatcherFrame.Continue">
      <summary>Ottiene o imposta un valore che indica se <see cref="T:System.Windows.Threading.DispatcherFrame" /> deve continuare.</summary>
      <returns>
        <see langword="true" /> se il frame deve continuare; in caso contrario, <see langword="false" />.  Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherHookEventArgs">
      <summary>Fornisce i dati per gli eventi <see cref="T:System.Windows.Threading.DispatcherHooks" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherHookEventArgs.#ctor(System.Windows.Threading.DispatcherOperation)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Threading.DispatcherHookEventArgs" />.</summary>
      <param name="operation">Operazione associata all'evento.</param>
    </member>
    <member name="P:System.Windows.Threading.DispatcherHookEventArgs.Dispatcher">
      <summary>Ottiene <see cref="T:System.Windows.Threading.Dispatcher" /> associato all'evento.</summary>
      <returns>Oggetto <see cref="T:System.Windows.Threading.Dispatcher" /> associato all'evento corrente.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherHookEventArgs.Operation">
      <summary>Ottiene <see cref="T:System.Windows.Threading.DispatcherOperation" /> associato all'evento.</summary>
      <returns>Operazione.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherHookEventHandler">
      <summary>Rappresenta il metodo in base al quale verranno gestiti gli eventi <see cref="T:System.Windows.Threading.DispatcherHooks" /> correlati.</summary>
      <param name="sender">Origine dell'evento.</param>
      <param name="e">Dati dell'evento.</param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherHooks">
      <summary>Fornisce informazioni aggiuntive sugli eventi per l'elaborazione di <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.DispatcherInactive">
      <summary>Si verifica quando il dispatcher non include più operazioni da elaborare.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationAborted">
      <summary>Si verifica quando un'operazione viene interrotta.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationCompleted">
      <summary>Si verifica quando un'operazione viene completata.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationPosted">
      <summary>Si verifica quando un'operazione viene inviata al dispatcher.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationPriorityChanged">
      <summary>Si verifica quando la priorità di un'operazione viene modificata.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationStarted">
      <summary>Si verifica quando viene richiamata un'operazione.</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherObject">
      <summary>Rappresenta un oggetto associato a un oggetto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherObject.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Threading.DispatcherObject" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherObject.CheckAccess">
      <summary>Determina se il thread chiamante ha accesso a <see cref="T:System.Windows.Threading.DispatcherObject" />.</summary>
      <returns>
        <see langword="true" /> se il thread chiamate ha accesso a questo oggetto; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherObject.VerifyAccess">
      <summary>Impone che il thread chiamante abbia accesso a <see cref="T:System.Windows.Threading.DispatcherObject" />.</summary>
      <exception cref="T:System.InvalidOperationException">Il thread chiamante non ha accesso a <see cref="T:System.Windows.Threading.DispatcherObject" />.</exception>
    </member>
    <member name="P:System.Windows.Threading.DispatcherObject.Dispatcher">
      <summary>Ottiene l'oggetto <see cref="T:System.Windows.Threading.Dispatcher" /> associato a <see cref="T:System.Windows.Threading.DispatcherObject" />.</summary>
      <returns>Dispatcher.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperation">
      <summary>Rappresenta un oggetto utilizzato per interagire con un'operazione inviata alla coda di <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherOperation.Aborted">
      <summary>Si verifica quando l'operazione viene interrotta.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherOperation.Completed">
      <summary>Si verifica al termine dell'operazione.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.Abort">
      <summary>Interrompe l'operazione.</summary>
      <returns>
        <see langword="true" /> se l'operazione è stata interrotta; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.GetAwaiter">
      <summary>Restituisce un oggetto che riceve una notifica al termine dell'operazione asincrona.</summary>
      <returns>Oggetto che riceve una notifica al termine dell'operazione asincrona.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.InvokeDelegateCore">
      <summary>Avvia l'operazione associata a <see cref="T:System.Windows.Threading.DispatcherOperation" />.</summary>
      <returns>
        <see langword="null" /> in tutti i casi.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.Wait">
      <summary>Attende il completamento dell'operazione.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Threading.DispatcherOperation.Status" /> è uguale a <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" />.  Può verificarsi durante l'attesa di un'operazione già in esecuzione sullo stesso thread.</exception>
      <returns>Stato dell'operazione.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.Wait(System.TimeSpan)">
      <summary>Attende il completamento dell'operazione nel periodo di tempo specificato.</summary>
      <param name="timeout">Periodo massimo di tempo di attesa.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Threading.DispatcherOperation.Status" /> è uguale a <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" />.  Può verificarsi durante l'attesa di un'operazione già in esecuzione sullo stesso thread.</exception>
      <returns>Stato dell'operazione.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Dispatcher">
      <summary>Ottiene l'oggetto <see cref="T:System.Windows.Threading.Dispatcher" /> a cui è stata inviata l'operazione.</summary>
      <returns>Dispatcher.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Priority">
      <summary>Ottiene o imposta la priorità dell'operazione nella coda di <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns>Priorità del delegato nella coda.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Result">
      <summary>Ottiene il risultato dell'operazione dopo il completamento.</summary>
      <returns>Risultato dell'operazione oppure <see langword="null" /> se l'operazione non è stata completata.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Status">
      <summary>Ottiene lo stato corrente dell'operazione.</summary>
      <returns>Stato dell'operazione.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Task">
      <summary>Ottiene un oggetto <see cref="T:System.Threading.Tasks.Task`1" /> che rappresenta l'operazione corrente.</summary>
      <returns>Oggetto che rappresenta l'operazione corrente.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperation`1">
      <summary>Rappresenta un oggetto utilizzato per interagire con un'operazione inviata alla coda di <see cref="T:System.Windows.Threading.Dispatcher" /> e che contiene un <see cref="T:System.Threading.Tasks.Task`1" />.</summary>
      <typeparam name="TResult">Tipo restituito dalla funzione <see cref="T:System.Threading.Tasks.Task`1" />.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation`1.GetAwaiter">
      <summary>Restituisce un oggetto che attende un'operazione asincrona che restituisce un risultato.</summary>
      <returns>Oggetto che attende il risultato di un'operazione asincrona che restituisce un risultato.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation`1.InvokeDelegateCore">
      <summary>Avvia l'operazione associata a <see cref="T:System.Windows.Threading.DispatcherOperation" />.</summary>
      <returns>Risultato dell'operazione.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation`1.Result">
      <summary>Ottiene il risultato dell'operazione dopo il completamento.</summary>
      <returns>Risultato dell'operazione.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation`1.Task">
      <summary>Ottiene un oggetto <see cref="T:System.Threading.Tasks.Task`1" /> che rappresenta l'operazione corrente.</summary>
      <returns>Oggetto che rappresenta l'operazione corrente.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperationCallback">
      <summary>Rappresenta un delegato da usare per le operazioni del dispatcher.</summary>
      <param name="arg">Argomento passato al callback.</param>
      <returns>Oggetto restituito dal callback.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperationStatus">
      <summary>Descrive i valori possibili per lo stato di <see cref="T:System.Windows.Threading.DispatcherOperation" />.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Aborted">
      <summary>L'operazione è stata interrotta.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Completed">
      <summary>L'operazione è stata completata.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Executing">
      <summary>L'esecuzione dell'operazione è stata avviata ma non è stata completata.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Pending">
      <summary>L'operazione è in sospeso ed è ancora nella coda di <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherPriority">
      <summary>Descrive le priorità in base alle quali è possibile richiamare le operazioni tramite <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.ApplicationIdle">
      <summary>Il valore di enumerazione è 2. Le operazioni vengono elaborate quando l'applicazione è inattiva.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Background">
      <summary>Il valore di enumerazione è 4. Le operazioni vengono elaborate dopo il completamento di tutte le altre operazioni non inattive.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.ContextIdle">
      <summary>Il valore di enumerazione è 3. Le operazioni vengono elaborate dopo il completamento delle operazioni in background.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.DataBind">
      <summary>Il valore di enumerazione è 8. Le operazioni vengono elaborate con lo stesso livello di priorità dell'associazione dati.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Inactive">
      <summary>Il valore di enumerazione è 0. Le operazioni non vengono elaborate.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Input">
      <summary>Il valore di enumerazione è 5. Le operazioni vengono elaborate con lo stesso livello di priorità dell'input.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Invalid">
      <summary>Il valore di enumerazione è -1. Si tratta di una priorità non valida.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Loaded">
      <summary>Il valore di enumerazione è 6. Le operazioni vengono elaborate al termine delle attività di layout e rendering ma immediatamente prima della gestione degli elementi con priorità di input. In particolare, questo valore viene utilizzato quando viene generato l'evento Loaded.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Normal">
      <summary>Il valore di enumerazione è 9. Le operazioni vengono elaborate con priorità normale. Si tratta della priorità tipica dell'applicazione.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Render">
      <summary>Il valore di enumerazione è 7. Le operazioni vengono elaborate con lo stesso livello di priorità del rendering.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Send">
      <summary>Il valore di enumerazione è 10. Le operazioni vengono elaborate prima di altre operazioni asincrone. Si tratta della priorità più elevata.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.SystemIdle">
      <summary>Il valore di enumerazione è 1. Le operazioni vengono elaborate quando il sistema è inattivo.</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherPriorityAwaitable">
      <summary>Rappresenta un oggetto awaitable che restituisce in modo asincrono il controllo al dispatcher corrente e offre al dispatcher la possibilità di elaborare altri eventi.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherPriorityAwaitable.GetAwaiter">
      <summary>Restituisce un oggetto che attende il completamento di un'attività asincrona.</summary>
      <returns>Oggetto che attende il completamento di un'attività asincrona.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherPriorityAwaiter">
      <summary>Rappresenta un oggetto che attende il completamento di un'attività asincrona.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherPriorityAwaiter.GetResult">
      <summary>Termina l'attesa del completamento dell'attività asincrona.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherPriorityAwaiter.OnCompleted(System.Action)">
      <summary>Imposta l'azione da eseguire quando l'oggetto <see cref="T:System.Windows.Threading.DispatcherPriorityAwaiter" /> non è più in attesa del completamento dell'attività asincrona.</summary>
      <param name="continuation">Azione da eseguire al completamento dell'operazione di attesa.</param>
    </member>
    <member name="P:System.Windows.Threading.DispatcherPriorityAwaiter.IsCompleted">
      <summary>Ottiene un valore che indica l'eventuale completamento dell'attività asincrona.</summary>
      <returns>
        <see langword="false" /> in tutti i casi.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherProcessingDisabled">
      <summary>Rappresenta il dispatcher in uno stato disabilitato e offre la possibilità di riattivarne l'elaborazione.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.Dispose">
      <summary>Riattiva l'elaborazione del dispatcher.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.Equals(System.Object)">
      <summary>Determina se l'oggetto <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> specificato è uguale all'oggetto <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" />.</summary>
      <param name="obj">Oggetto da valutare per l'uguaglianza.</param>
      <returns>
        <see langword="true" /> se l'oggetto specificato è uguale all'oggetto <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.GetHashCode">
      <summary>Ottiene un codice hash per questa istanza.</summary>
      <returns>Codice hash di valori interi a 32 bit con segno.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.op_Equality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)">
      <summary>Determina se due oggetti <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> sono uguali.</summary>
      <param name="left">Primo oggetto da confrontare.</param>
      <param name="right">Secondo oggetto da confrontare.</param>
      <returns>
        <see langword="true" /> se gli oggetti <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.op_Inequality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)">
      <summary>Determina se due oggetti <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> non sono uguali.</summary>
      <param name="left">Primo oggetto da confrontare.</param>
      <param name="right">Secondo oggetto da confrontare.</param>
      <returns>
        <see langword="true" /> se gli oggetti <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> non sono uguali. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherSynchronizationContext">
      <summary>Offre un contesto di sincronizzazione per Windows Presentation Foundation (WPF).</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> utilizzando l'oggetto <see cref="T:System.Windows.Threading.Dispatcher" /> corrente.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> mediante l'elemento <see cref="T:System.Windows.Threading.Dispatcher" /> specificato.</summary>
      <param name="dispatcher">
        <see cref="T:System.Windows.Threading.Dispatcher" /> da associare a <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dispatcher" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher,System.Windows.Threading.DispatcherPriority)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> mediante l'elemento <see cref="T:System.Windows.Threading.Dispatcher" /> specificato.</summary>
      <param name="dispatcher">
        <see cref="T:System.Windows.Threading.Dispatcher" /> da associare a <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />.</param>
      <param name="priority">Priorità utilizzata per inviare i metodi di callback.</param>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.CreateCopy">
      <summary>Crea una copia dell'oggetto <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />.</summary>
      <returns>Copia del contesto di sincronizzazione.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)">
      <summary>Richiama in modo asincrono il callback nel contesto di sincronizzazione.</summary>
      <param name="d">Delegato da chiamare.</param>
      <param name="state">Oggetto passato al delegato.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)">
      <summary>Richiama in modo sincrono il callback nel contesto di sincronizzazione.</summary>
      <param name="d">Delegato da chiamare.</param>
      <param name="state">Oggetto passato al delegato.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)">
      <summary>Attende che uno qualsiasi o tutti gli elementi della matrice specificata ricevano un segnale.</summary>
      <param name="waitHandles">Matrice contenente gli handle nativi del sistema operativo.</param>
      <param name="waitAll">
        <see langword="true" /> per attendere tutti gli handle; <see langword="false" /> per attendere un handle qualsiasi.</param>
      <param name="millisecondsTimeout">Numero di millisecondi di attesa oppure <see cref="F:System.Threading.Timeout.Infinite" /> (-1) per un'attesa indefinita.</param>
      <returns>Indice della matrice dell'oggetto che ha soddisfatto l'attesa.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherTimer">
      <summary>Timer integrato nella coda <see cref="T:System.Windows.Threading.Dispatcher" /> che viene elaborato in un intervallo di tempo specificato e con una priorità specificata.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherTimer.Tick">
      <summary>Si verifica al termine dell'intervallo del timer.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Threading.DispatcherTimer" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Threading.DispatcherTimer" /> che utilizza l'intervallo di tempo, la priorità, il gestore eventi e l'oggetto <see cref="T:System.Windows.Threading.Dispatcher" /> specificati.</summary>
      <param name="interval">Periodo tra unità di tempo.</param>
      <param name="priority">Priorità con cui richiamare il timer.</param>
      <param name="callback">Gestore eventi da chiamare quando si verifica l'evento <see cref="E:System.Windows.Threading.DispatcherTimer.Tick" />.</param>
      <param name="dispatcher">Dispatcher cui è associato il timer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callback" /> è <see langword="null" />.

-oppure-

<paramref name="dispatcher" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="interval" /> è minore di 0 o maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Threading.DispatcherTimer" /> che elabora gli eventi del timer con la priorità specificata.</summary>
      <param name="priority">Priorità con cui richiamare il timer.</param>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Threading.DispatcherTimer" /> che viene eseguita sull'oggetto <see cref="T:System.Windows.Threading.Dispatcher" /> specificato con la priorità indicata.</summary>
      <param name="priority">Priorità con cui richiamare il timer.</param>
      <param name="dispatcher">Dispatcher cui è associato il timer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dispatcher" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.Start">
      <summary>Avvia <see cref="T:System.Windows.Threading.DispatcherTimer" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.Stop">
      <summary>Arresta <see cref="T:System.Windows.Threading.DispatcherTimer" />.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Dispatcher">
      <summary>Ottiene l'oggetto <see cref="T:System.Windows.Threading.Dispatcher" /> associato a questo oggetto <see cref="T:System.Windows.Threading.DispatcherTimer" />.</summary>
      <returns>Dispatcher.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Interval">
      <summary>Ottiene o imposta il periodo tra unità di tempo del timer.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="interval" /> è minore di 0 o maggiore di <see cref="F:System.Int32.MaxValue" /> millisecondi.</exception>
      <returns>Periodo tra unità di tempo. Il valore predefinito è 00:00:00.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.IsEnabled">
      <summary>Ottiene o imposta un valore che indica se il timer è in esecuzione.</summary>
      <returns>
        <see langword="true" /> se il timer è abilitato; in caso contrario, <see langword="false" />.  Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Tag">
      <summary>Ottiene o imposta un oggetto dati definiti dall'utente.</summary>
      <returns>Dati definiti dall'utente.  Il valore predefinito è <see langword="null" />.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs">
      <summary>Fornisce i dati per l'evento <see cref="T:System.Windows.Threading.Dispatcher" /><see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" />.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Exception">
      <summary>Genera l'eccezione generata quando il codice è stato eseguito tramite il dispatcher.</summary>
      <returns>Eccezione.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled">
      <summary>Ottiene o imposta se l'evento dell'eccezione è stato gestito.</summary>
      <returns>
        <see langword="true" /> se l'eccezione è stata gestita; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionEventHandler">
      <summary>Rappresenta il metodo che gestirà l'evento <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" />.</summary>
      <param name="sender">Origine dell'evento.</param>
      <param name="e">Dati dell'evento.</param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs">
      <summary>Fornisce i dati per l'evento <see cref="T:System.Windows.Threading.Dispatcher" /><see cref="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" />.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception">
      <summary>Genera l'eccezione generata quando il codice è stato eseguito tramite il dispatcher.</summary>
      <returns>Eccezione.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch">
      <summary>Ottiene o imposta se l'eccezione deve essere rilevata e i gestori eventi devono essere chiamati.</summary>
      <returns>
        <see langword="true" /> se gli eventi <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> devono essere generati; in caso contrario, <see langword="false" />.  Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler">
      <summary>Rappresenta il metodo che gestirà l'evento <see cref="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" />.</summary>
      <param name="sender">Origine dell'evento.</param>
      <param name="e">Dati dell'evento.</param>
    </member>
    <member name="T:System.Windows.ValidateValueCallback">
      <summary>Rappresenta un metodo usato come callback che convalida il valore effettivo di una proprietà di dipendenza.</summary>
      <param name="value">Valore da convalidare.</param>
      <returns>
        <see langword="true" /> se il valore è stato convalidato. <see langword="false" /> se il valore inviato non è valido.</returns>
    </member>
    <member name="T:System.Windows.Vector">
      <summary>Rappresenta uno spostamento nello spazio 2D.</summary>
    </member>
    <member name="M:System.Windows.Vector.#ctor(System.Double,System.Double)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.Windows.Vector" />.</summary>
      <param name="x">Offset <see cref="P:System.Windows.Vector.X" />del nuovo <see cref="T:System.Windows.Vector" />.</param>
      <param name="y">Offset <see cref="P:System.Windows.Vector.Y" />del nuovo <see cref="T:System.Windows.Vector" />.</param>
    </member>
    <member name="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Point)">
      <summary>Converte il punto specificato dal vettore specificato e restituisce il punto risultante.</summary>
      <param name="vector">Quantità per convertire il punto specificato.</param>
      <param name="point">Punto da convertire.</param>
      <returns>Risultato della traslazione di <paramref name="point" /> in base a <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Vector)">
      <summary>Somma due vettori e restituisce il risultato sotto forma di struttura <see cref="T:System.Windows.Vector" /> .</summary>
      <param name="vector1">Primo vettore da sommare.</param>
      <param name="vector2">Secondo vettore da sommare.</param>
      <returns>Somma di <paramref name="vector1" /> e <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.AngleBetween(System.Windows.Vector,System.Windows.Vector)">
      <summary>Recupera l'angolo, espresso in gradi, tra i due vettori specificati.</summary>
      <param name="vector1">Primo vettore da valutare.</param>
      <param name="vector2">Secondo vettore da valutare.</param>
      <returns>Angolo, in gradi, tra <paramref name="vector1" /> e <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.CrossProduct(System.Windows.Vector,System.Windows.Vector)">
      <summary>Calcola il prodotto incrociato di due vettori.</summary>
      <param name="vector1">Primo vettore da valutare.</param>
      <param name="vector2">Secondo vettore da valutare.</param>
      <returns>Prodotto incrociato di <paramref name="vector1" /> e <paramref name="vector2" />. La formula seguente è utilizzata per calcolare il prodotto incrociato: 
 <c>(Vector1.X * Vector2.Y) - (Vector1.Y * Vector2.X)</c></returns>
    </member>
    <member name="M:System.Windows.Vector.Determinant(System.Windows.Vector,System.Windows.Vector)">
      <summary>Calcola il determinante di due vettori.</summary>
      <param name="vector1">Primo vettore da valutare.</param>
      <param name="vector2">Secondo vettore da valutare.</param>
      <returns>Il determinante di <paramref name="vector1" /> e <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Divide(System.Windows.Vector,System.Double)">
      <summary>Divide il vettore specificato dallo scalare specificato e restituisce il risultato come <see cref="T:System.Windows.Vector" />.</summary>
      <param name="vector">Struttura del vettore da dividere.</param>
      <param name="scalar">Quantità dalla quale è diviso <paramref name="vector" />.</param>
      <returns>Risultato della divisione di <paramref name="vector" /> in base a <paramref name="scalar" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Equals(System.Object)">
      <summary>Determina se <see cref="T:System.Object" /> specificato è una struttura <see cref="T:System.Windows.Vector" /> e, se così, se ha gli stessi valori <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> di questo vettore.</summary>
      <param name="o">Vettore da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="o" /> è una struttura <see cref="T:System.Windows.Vector" /> ed ha gli stessi valori <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> di questo vettore; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Equals(System.Windows.Vector)">
      <summary>Confronta due vettori per stabilirne l'uguaglianza.</summary>
      <param name="value">Vettore da confrontare con questo vettore.</param>
      <returns>
        <see langword="true" /> se <paramref name="value" /> ha gli stessi valori <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> di questo vettore; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Equals(System.Windows.Vector,System.Windows.Vector)">
      <summary>Confronta i due vettori specificati per stabilirne l’uguaglianza.</summary>
      <param name="vector1">Primo vettore da confrontare.</param>
      <param name="vector2">Secondo vettore da confrontare.</param>
      <returns>
        <see langword="true" /> se i componenti <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> di <paramref name="vector1" /> e <paramref name="vector2" /> sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.GetHashCode">
      <summary>Restituisce il codice hash per questo vettore.</summary>
      <returns>Codice hash per l'istanza.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Double,System.Windows.Vector)">
      <summary>Moltiplica lo scalare specificato per il vettore specificato restituisce <see cref="T:System.Windows.Vector" />risultante.</summary>
      <param name="scalar">Scalare da moltiplicare.</param>
      <param name="vector">Vettore da moltiplicare.</param>
      <returns>Risultato della moltiplicazione tra <paramref name="scalar" /> e <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Double)">
      <summary>Moltiplica il vettore specificato per lo scalare specificato e restituisce <see cref="T:System.Windows.Vector" />risultante.</summary>
      <param name="vector">Vettore da moltiplicare.</param>
      <param name="scalar">Scalare da moltiplicare.</param>
      <returns>Risultato della moltiplicazione tra <paramref name="vector" /> e <paramref name="scalar" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
      <summary>Trasforma lo spazio delle coordinate del vettore specificato utilizzando la struttura specificata <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="vector">Struttura del vettore da trasformare.</param>
      <param name="matrix">Trasformazione da applicare a <paramref name="vector" />.</param>
      <returns>Risultato della trasformazione di <paramref name="vector" /> da <paramref name="matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Vector)">
      <summary>Calcola il prodotto del punto dei due vettori specificati e restituisce il risultato come <see cref="T:System.Double" />.</summary>
      <param name="vector1">Primo vettore da moltiplicare</param>
      <param name="vector2">Struttura del secondo vettore  da moltiplicare.</param>
      <returns>
        <see cref="T:System.Double" /> che contiene il prodotto del punto scalare di <paramref name="vector1" /> e <paramref name="vector2" />calcolato utilizzando la formula seguente: 
 <c>(vector1.X * vector2.X) + (vector1.Y * vector2.Y)</c></returns>
    </member>
    <member name="M:System.Windows.Vector.Negate">
      <summary>Nega questo vettore. La grandezza del vettore rimane invariata, ma la direzione diventa opposta.</summary>
    </member>
    <member name="M:System.Windows.Vector.Normalize">
      <summary>Normalizza questo vettore.</summary>
    </member>
    <member name="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Point)">
      <summary>Converte un punto dal vettore specificato e restituisce il punto risultante.</summary>
      <param name="vector">Vettore utilizzato per convertire <paramref name="point" />.</param>
      <param name="point">Punto da convertire.</param>
      <returns>Risultato della traslazione di <paramref name="point" /> in base a <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Vector)">
      <summary>Aggiunge due vettori e restituisce il risultato come vettore.</summary>
      <param name="vector1">Primo vettore da sommare.</param>
      <param name="vector2">Secondo vettore da sommare.</param>
      <returns>Somma di <paramref name="vector1" /> e <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Division(System.Windows.Vector,System.Double)">
      <summary>Divide il vettore specificato per lo scalare specificato e restituisce il vettore risultante.</summary>
      <param name="vector">Vettore da dividere.</param>
      <param name="scalar">Scalare dal quale saranno divisi <paramref name="vector" />.</param>
      <returns>Risultato della divisione di <paramref name="vector" /> in base a <paramref name="scalar" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Equality(System.Windows.Vector,System.Windows.Vector)">
      <summary>Confronta due vettori per stabilirne l'uguaglianza.</summary>
      <param name="vector1">Primo vettore da confrontare.</param>
      <param name="vector2">Secondo vettore da confrontare.</param>
      <returns>
        <see langword="true" /> se i componenti <paramref name="vector1" /> e <paramref name="vector2" /> di <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Point">
      <summary>Crea <see cref="T:System.Windows.Point" /> con i valori <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> di questo vettore.</summary>
      <param name="vector">Vettore da convertire.</param>
      <returns>Un punto con <see cref="P:System.Windows.Point.X" />- e <see cref="P:System.Windows.Point.Y" /> uguali ai valori coordinati <see cref="P:System.Windows.Vector.X" /> e ai valori offset <see cref="P:System.Windows.Vector.Y" /> di <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Size">
      <summary>Crea <see cref="T:System.Windows.Size" /> dagli offset di questo vettore.</summary>
      <param name="vector">Vettore da convertire.</param>
      <returns>
        <see cref="T:System.Windows.Size" /> con <see cref="P:System.Windows.Size.Width" /> uguale al valore assoluto della proprietà di questo vettore <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Size.Height" /> uguale al valore assoluto della proprietà di questo vettore <see cref="P:System.Windows.Vector.Y" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Inequality(System.Windows.Vector,System.Windows.Vector)">
      <summary>Confronta due vettori per stabilirne la disuguaglianza.</summary>
      <param name="vector1">Primo vettore da confrontare.</param>
      <param name="vector2">Secondo vettore da confrontare.</param>
      <returns>
        <see langword="true" /> se i componenti <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> di <paramref name="vector1" /> e <paramref name="vector2" /> sono diversi; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Double,System.Windows.Vector)">
      <summary>Moltiplica lo scalare specificato per  il vettore specificato e restituisce il vettore risultante.</summary>
      <param name="scalar">Scalare da moltiplicare.</param>
      <param name="vector">Vettore da moltiplicare.</param>
      <returns>Risultato della moltiplicazione tra <paramref name="scalar" /> e <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Double)">
      <summary>Moltiplica il vettore specificato per lo scalare specificato e restituisce il vettore risultante.</summary>
      <param name="vector">Vettore da moltiplicare.</param>
      <param name="scalar">Scalare da moltiplicare.</param>
      <returns>Risultato della moltiplicazione tra <paramref name="vector" /> e <paramref name="scalar" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
      <summary>Trasforma lo spazio delle coordinate del vettore specificato utilizzando la struttura specificata <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="vector">Vettore da trasformare.</param>
      <param name="matrix">Trasformazione da applicare a <paramref name="vector" />.</param>
      <returns>Risultato della trasformazione di <paramref name="vector" /> da <paramref name="matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Vector)">
      <summary>Calcola il prodotto del punto delle strutture dei due vettori specificati e restituisce il risultato come <see cref="T:System.Double" />.</summary>
      <param name="vector1">Primo vettore da moltiplicare</param>
      <param name="vector2">Secondo vettore da moltiplicare.</param>
      <returns>Restituisce <see cref="T:System.Double" /> che contiene il prodotto del punto scalare di <paramref name="vector1" /> e <paramref name="vector2" />calcolato utilizzando la formula seguente: 
 <c>vector1. X * Vector2. X + vector1. Y * Vector2. Y</c></returns>
    </member>
    <member name="M:System.Windows.Vector.op_Subtraction(System.Windows.Vector,System.Windows.Vector)">
      <summary>Consente di sottrarre un vettore specificato da un altro.</summary>
      <param name="vector1">Il vettore dal quale è sottratto <paramref name="vector2" />.</param>
      <param name="vector2">Vettore da cui sottrarre <paramref name="vector1" />.</param>
      <returns>Differenza tra <paramref name="vector1" /> e <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_UnaryNegation(System.Windows.Vector)">
      <summary>Nega il vettore specificato.</summary>
      <param name="vector">Vettore da negare.</param>
      <returns>Vettore con valori <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> contrari ai valori <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> di <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Parse(System.String)">
      <summary>Converte la rappresentazione di una stringa di un vettore nella struttura equivalente <see cref="T:System.Windows.Vector" /> .</summary>
      <param name="source">Rappresentazione della stringa del vettore.</param>
      <returns>Struttura <see cref="T:System.Windows.Vector" /> equivalente.</returns>
    </member>
    <member name="M:System.Windows.Vector.Subtract(System.Windows.Vector,System.Windows.Vector)">
      <summary>Consente di sottrarre il vettore specificato da un altro vettore specificato.</summary>
      <param name="vector1">Il vettore dal quale è sottratto <paramref name="vector2" />.</param>
      <param name="vector2">Vettore da cui sottrarre <paramref name="vector1" />.</param>
      <returns>Differenza tra <paramref name="vector1" /> e <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>Questo membro supporta l'infrastruttura di Windows Presentation Foundation (WPF) e non deve essere usato direttamente dal codice. Per una descrizione di questo membro, vedere <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <param name="format">Stringa che specifica il formato da utilizzare.  
  
-oppure- 
 <see langword="null" /> per utilizzare il formato predefinito per il tipo di implementazione dell'interfaccia <see cref="T:System.IFormattable" />.</param>
      <param name="provider">Interfaccia <see langword="IFormatProvider" /> da utilizzare per formattare il valore.  
  
-oppure- 
 <see langword="null" /> per ottenere le informazioni sul formato numerico dalle impostazioni locali correnti del sistema operativo.</param>
      <returns>Stringa contenente il valore dell'istanza corrente nel formato specificato.</returns>
    </member>
    <member name="M:System.Windows.Vector.ToString">
      <summary>Restituisce la stringa di rappresentazione di questa struttura <see cref="T:System.Windows.Vector" />.</summary>
      <returns>Stringa che rappresenta i valori <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> di questo <see cref="T:System.Windows.Vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.ToString(System.IFormatProvider)">
      <summary>Restituisce la rappresentazione di stringa di questa struttura <see cref="T:System.Windows.Vector" /> con le informazioni di formattazione specificate.</summary>
      <param name="provider">Informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Stringa che rappresenta i valori <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> di questo <see cref="T:System.Windows.Vector" />.</returns>
    </member>
    <member name="P:System.Windows.Vector.Length">
      <summary>Ottiene la lunghezza di questo vettore.</summary>
      <returns>Lunghezza di questo vettore.</returns>
    </member>
    <member name="P:System.Windows.Vector.LengthSquared">
      <summary>Ottiene il quadrato della lunghezza di questo vettore.</summary>
      <returns>Il quadrato di <see cref="P:System.Windows.Vector.Length" /> di questo vettore.</returns>
    </member>
    <member name="P:System.Windows.Vector.X">
      <summary>Ottiene o imposta il componente di questo vettore <see cref="P:System.Windows.Vector.X" />.</summary>
      <returns>Componente<see cref="P:System.Windows.Vector.X" /> di questo vettore. Il valore predefinito è 0.</returns>
    </member>
    <member name="P:System.Windows.Vector.Y">
      <summary>Ottiene o imposta il componente di questo vettore <see cref="P:System.Windows.Vector.Y" />.</summary>
      <returns>Componente<see cref="P:System.Windows.Vector.Y" /> di questo vettore. Il valore predefinito è 0.</returns>
    </member>
    <member name="T:System.Windows.VectorConverter">
      <summary>Converte istanze di altri tipi in e da un oggetto <see cref="T:System.Windows.Vector" />.</summary>
    </member>
    <member name="M:System.Windows.VectorConverter.#ctor">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.Windows.Vector" />.</summary>
    </member>
    <member name="M:System.Windows.VectorConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Indica se un oggetto può essere convertito da un tipo specifico in un'istanza di un oggetto <see cref="T:System.Windows.Vector" />.</summary>
      <param name="context">Descrive le informazioni di contesto di un tipo.</param>
      <param name="sourceType">Oggetto <see cref="T:System.Type" /> di origine sottoposto a query per verificare se la conversione è supportata.</param>
      <returns>
        <see langword="true" /> se oggetti del tipo specificato possono essere convertiti in <see cref="T:System.Windows.Vector" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.VectorConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determina se le istanze di <see cref="T:System.Windows.Vector" /> possono essere convertite nel tipo specificato.</summary>
      <param name="context">Descrive le informazioni di contesto di un tipo.</param>
      <param name="destinationType">Tipo desiderato per cui questo oggetto <see cref="T:System.Windows.Vector" /> viene valutato per la conversione.</param>
      <returns>
        <see langword="true" /> se le istanze di <see cref="T:System.Windows.Vector" /> possono essere convertite in <paramref name="destinationType" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.VectorConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte l'oggetto specificato in un oggetto <see cref="T:System.Windows.Vector" />.</summary>
      <param name="context">Descrive le informazioni di contesto di un tipo.</param>
      <param name="culture">Descrive l'oggetto <see cref="T:System.Globalization.CultureInfo" /> del tipo convertito.</param>
      <param name="value">Oggetto da convertire.</param>
      <returns>
        <see cref="T:System.Windows.Vector" /> creato tramite la conversione di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Windows.VectorConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte l'oggetto <see cref="T:System.Windows.Vector" /> indicato nel tipo specificato.</summary>
      <param name="context">Descrive le informazioni di contesto di un tipo.</param>
      <param name="culture">Descrive l'oggetto <see cref="T:System.Globalization.CultureInfo" /> del tipo convertito.</param>
      <param name="value">Oggetto <see cref="T:System.Windows.Vector" /> da convertire.</param>
      <param name="destinationType">Tipo in cui convertire l'oggetto <see cref="T:System.Windows.Vector" /> corrente.</param>
      <returns>Oggetto creato tramite la conversione di <see cref="T:System.Windows.Vector" />.</returns>
    </member>
    <member name="T:System.Windows.WeakEventManager">
      <summary>Fornisce una classe base per la gestione degli eventi usata nel modello di eventi deboli. Il gestore aggiunge e rimuove listener per eventi (o callback) che utilizzano il modello.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.#ctor">
      <summary>Inizializza i valori della classe di base quando viene utilizzato come inizializzatore dal costruttore di una classe derivata.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)">
      <summary>Recapita l'evento gestito a ogni listener.</summary>
      <param name="sender">Oggetto nel quale è gestito l'evento.</param>
      <param name="args">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento da recapitare.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)">
      <summary>Recapita l'evento gestito a ogni listener contenuto nell'elenco fornito.</summary>
      <param name="sender">Oggetto nel quale è gestito l'evento.</param>
      <param name="args">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
      <param name="list">Oggetto <see cref="T:System.Windows.WeakEventManager.ListenerList" /> fornito.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.GetCurrentManager(System.Type)">
      <summary>Restituisce l'implementazione di <see cref="T:System.Windows.WeakEventManager" /> utilizzata per il tipo fornito.</summary>
      <param name="managerType">Tipo per il quale ottenere <see cref="T:System.Windows.WeakEventManager" />.</param>
      <returns>Implementazione di <see cref="T:System.Windows.WeakEventManager" /> corrispondente.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.NewListenerList">
      <summary>Restituisce un nuovo oggetto per contenere i listener per un evento.</summary>
      <returns>Nuovo oggetto per contenere i listener a un evento.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)">
      <summary>Aggiunge il delegato specificato come gestore eventi dell'origine specificata.</summary>
      <param name="source">Oggetto di origine cui il delegato del gestore esegue la sottoscrizione.</param>
      <param name="handler">Il delegato che gestisce l'evento generato da <paramref name="source" />.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)">
      <summary>Aggiunge il listener fornito all'origine fornita per l'evento gestito.</summary>
      <param name="source">Origine alla quale associare il listener.</param>
      <param name="listener">Classe in ascolto (che deve implementare <see cref="T:System.Windows.IWeakEventListener" />).</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)">
      <summary>Rimuove il gestore aggiunto in precedenza dall'origine specificata.</summary>
      <param name="source">Origine da cui rimuovere il gestore.</param>
      <param name="handler">Delegato da rimuovere da <paramref name="source" />.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)">
      <summary>Rimuove un listener precedentemente aggiunto dall'origine fornita.</summary>
      <param name="source">Origine da cui rimuovere i listener.</param>
      <param name="listener">Classe in ascolto (che deve implementare <see cref="T:System.Windows.IWeakEventListener" />).</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.Purge(System.Object,System.Object,System.Boolean)">
      <summary>Rimuove voci di listener inattivi dall'elenco di dati per l'origine fornita. Restituisce <see langword="true" /> se alcune voci sono state effettivamente rimosse dall'elenco.</summary>
      <param name="source">Origine per gli eventi attesi.</param>
      <param name="data">Dati da controllare. Si presume che questo oggetto sia un'implementazione di <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</param>
      <param name="purgeAll">Impostare su <see langword="true" /> per interrompere l'ascolto di <paramref name="source" /> e rimuovere completamente tutte le voci da <paramref name="data" />.</param>
      <returns>
        <see langword="true" /> se alcune voci sono state effettivamente rimosse, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.Remove(System.Object)">
      <summary>Rimuove tutti i listener per l'origine specificata.</summary>
      <param name="source">Origine per la quale rimuovere le informazioni del listener.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ScheduleCleanup">
      <summary>Richiede l'esecuzione, in un thread con priorità inferiore, della cancellazione di voci inutilizzate contenute nell'elenco di listener sottostante.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.SetCurrentManager(System.Type,System.Windows.WeakEventManager)">
      <summary>Imposta la gestione corrente per il tipo di gestione specificata.</summary>
      <param name="managerType">Tipo su cui impostare la gestione degli eventi.</param>
      <param name="manager">Nuovo gestore degli eventi.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.StartListening(System.Object)">
      <summary>Quando è sottoposto a override in una classe derivata, avvia l'attesa dell'evento gestito. Dopo la prima chiamata al metodo <see cref="M:System.Windows.WeakEventManager.StartListening(System.Object)" />, la gestione deve restare nello stato di chiamata a <see cref="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)" /> o a <see cref="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)" /> ogni volta che viene gestito l'evento pertinente proveniente dall'origine fornita.</summary>
      <param name="source">Origine in cui avviare l'attesa.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.StopListening(System.Object)">
      <summary>Quando è sottoposto a override in una classe derivata, interrompe l'attesa dell'evento gestito nell'origine fornita.</summary>
      <param name="source">Origine in cui arrestare l'attesa.</param>
    </member>
    <member name="P:System.Windows.WeakEventManager.Item(System.Object)">
      <summary>Ottiene o imposta i dati archiviati per l'origine specificata.</summary>
      <param name="source">Indice in base zero dell'origine richiesta.</param>
      <returns>Dati archiviati dal gestore per questa origine.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ReadLock">
      <summary>Imposta un blocco di lettura nella tabella di dati sottostanti e restituisce <see cref="T:System.IDisposable" />.</summary>
      <returns>Oggetto che può essere utilizzato per impostare un blocco sui membri della tabella di dati ed essere rimosso all'occorrenza, mediante un costrutto <see langword="using" />.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.WriteLock">
      <summary>Imposta un blocco di scrittura nella tabella di dati sottostanti e restituisce <see cref="T:System.IDisposable" />.</summary>
      <returns>Oggetto che può essere utilizzato per impostare un blocco sui membri della tabella di dati ed essere rimosso all'occorrenza, mediante un costrutto <see langword="using" />.</returns>
    </member>
    <member name="T:System.Windows.WeakEventManager.ListenerList">
      <summary>Fornisce un elenco di insiemi incorporati per l'archiviazione dei listener per <see cref="T:System.Windows.WeakEventManager" />.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.#ctor(System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.WeakEventManager.ListenerList" /> con la capacità iniziale specificata.</summary>
      <param name="capacity">Numero di elementi che devono essere allocati nell'elenco iniziale.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Add(System.Windows.IWeakEventListener)">
      <summary>Aggiunge un oggetto <see cref="T:System.Windows.IWeakEventListener" /> a <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="listener">Elemento listener da aggiungere all'oggetto <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.AddHandler(System.Delegate)">
      <summary>Aggiunge un gestore eventi all'oggetto <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="handler">Gestore eventi da aggiungere a <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.BeginUse">
      <summary>Dichiara che l'elenco è in uso. In questo modo si impediscono modifiche dirette all'elenco durante le iterazioni degli elementi dell'elenco.</summary>
      <returns>
        <see langword="true" /> se l'elenco è stato già dichiarato in uso; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Clone">
      <summary>Crea un duplicato modificabile di <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <returns>Clone modificabile dell'oggetto corrente.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.CopyTo(System.Windows.WeakEventManager.ListenerList)">
      <summary>Copia l'oggetto corrente <see cref="T:System.Windows.WeakEventManager.ListenerList" /> nell'oggetto <see cref="T:System.Windows.WeakEventManager.ListenerList" /> specificato</summary>
      <param name="newList">Oggetto in cui copiare.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.DeliverEvent(System.Object,System.EventArgs,System.Type)">
      <summary>Recapita l'evento gestito a ogni listener in <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="sender">Oggetto che ha generato l'evento.</param>
      <param name="args">Oggetto che contiene i dati dell'evento.</param>
      <param name="managerType">Il tipo di <see cref="T:System.Windows.WeakEventManager" /> che chiama questo metodo.</param>
      <returns>
        <see langword="true" /> se uno dei listener in <see cref="T:System.Windows.WeakEventManager.ListenerList" /> fa riferimento a un oggetto che è stato sottoposto a procedure di Garbage Collection; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.EndUse">
      <summary>Annulla lo stato di blocco iniziato da <see cref="M:System.Windows.WeakEventManager.ListenerList.BeginUse" />.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.PrepareForWriting(System.Windows.WeakEventManager.ListenerList@)">
      <summary>Controlla se l'elenco fornito è in uso e, in caso affermativo, imposta un parametro di riferimento dell'elenco su una copia di quell'elenco anziché sull'originale.</summary>
      <param name="list">Elenco di cui verificare lo stato di utilizzo ed eventualmente da copiare.</param>
      <returns>
        <see langword="true" /> se l'elenco fornito era in uso al momento della chiamata e quindi il riferimento al parametro <paramref name="list" /> è stato reimpostato come copia. <see langword="false" /> se l'elenco fornito non era in uso. In tale caso il riferimento al parametro <paramref name="list" /> rimane inalterato.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Purge">
      <summary>Rimuove tutte le voci dall'elenco in cui la destinazione di riferimento sottostante sia un riferimento null.</summary>
      <returns>Restituisce <see langword="true" /> in caso di cancellazione di qualsiasi voce; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Remove(System.Windows.IWeakEventListener)">
      <summary>Rimuove la prima occorrenza di un elemento listener da <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="listener">Elemento da rimuovere.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.RemoveHandler(System.Delegate)">
      <summary>Rimuove un gestore eventi da <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="handler">Gestore eventi da rimuovere da <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</param>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.Count">
      <summary>Ottiene il numero di elementi contenuti nella classe <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <returns>Numero di elementi contenuti in <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.Empty">
      <summary>Ottiene un valore che rappresenta un elenco vuoto per eseguire confronti.</summary>
      <returns>Rappresentazione dell'elenco vuoto.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.IsEmpty">
      <summary>Ottiene un valore che dichiara se questo oggetto <see cref="T:System.Windows.WeakEventManager.ListenerList" /> è vuoto.</summary>
      <returns>
        <see langword="true" /> se l'elenco è vuoto; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.Item(System.Int32)">
      <summary>Ottiene o imposta un elemento listener specifico in <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="index">Indice a base zero del listener in elenco.</param>
      <returns>Elemento in corrispondenza di tale indice o un riferimento null nel caso non siano presenti elementi all'indice specificato.</returns>
    </member>
    <member name="T:System.Windows.WeakEventManager.ListenerList`1">
      <summary>Fornisce un elenco di raccolte indipendente dai tipi per l'archiviazione dei listener per <see cref="T:System.Windows.WeakEventManager" />. Questa classe definisce un parametro di tipo per i dati degli eventi utilizzati.</summary>
      <typeparam name="TEventArgs">Tipo che contiene i dati dell'evento.</typeparam>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.WeakEventManager.ListenerList`1" />.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.#ctor(System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.WeakEventManager.ListenerList`1" /> con la capacità iniziale specificata.</summary>
      <param name="capacity">Numero di elementi che devono essere allocati nell'elenco iniziale.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.Clone">
      <summary>Crea un duplicato modificabile dell'oggetto <see cref="T:System.Windows.WeakEventManager.ListenerList" />, eseguendo copie complete dei valori.</summary>
      <returns>Clone modificabile dell'oggetto corrente. La proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> dell'oggetto clonato sarà <see langword="false" />, anche se la proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> dell'oggetto di origine è <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.DeliverEvent(System.Object,System.EventArgs,System.Type)">
      <summary>Recapita l'evento gestito a ogni listener in <see cref="T:System.Windows.WeakEventManager.ListenerList`1" />.</summary>
      <param name="sender">Oggetto che ha generato l'evento.</param>
      <param name="e">Oggetto che contiene i dati dell'evento.</param>
      <param name="managerType">Il tipo di <see cref="T:System.Windows.WeakEventManager" /> che chiama questo metodo.</param>
      <returns>
        <see langword="true" /> se uno dei listener in <see cref="T:System.Windows.WeakEventManager.ListenerList`1" /> fa riferimento a un oggetto che è stato sottoposto a procedure di Garbage Collection; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.WeakEventManager`2">
      <summary>Fornisce un oggetto <see cref="T:System.Windows.WeakEventManager" /> che consente di specificare il gestore di eventi da utilizzare per il modello "listener di eventi deboli". Questa classe definisce un parametro di tipo per l'origine dell'evento e un parametro di tipo per i dati degli eventi utilizzati.</summary>
      <typeparam name="TEventSource">Tipo che genera l'evento.</typeparam>
      <typeparam name="TEventArgs">Tipo che contiene i dati dell'evento.</typeparam>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.AddHandler(`0,System.String,System.EventHandler{`1})">
      <summary>Aggiunge il gestore eventi specificato all'evento specificato.</summary>
      <param name="source">Oggetto di origine che genera l'evento specificato.</param>
      <param name="eventName">Nome dell'evento da sottoscrivere.</param>
      <param name="handler">Delegato che gestisce l'evento.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.NewListenerList">
      <summary>Restituisce un nuovo oggetto per contenere i listener per un evento.</summary>
      <returns>Nuovo oggetto per contenere i listener a un evento.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.RemoveHandler(`0,System.String,System.EventHandler{`1})">
      <summary>Rimuove il gestore eventi specificato dall'evento specificato.</summary>
      <param name="source">Oggetto di origine che genera l'evento specificato.</param>
      <param name="eventName">Nome dell'evento da cui rimuovere il gestore.</param>
      <param name="handler">Delegato da rimuovere</param>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.StartListening(System.Object)">
      <summary>Avvia l'ascolto dell'evento sull'oggetto specificato.</summary>
      <param name="source">Oggetto che genera l'evento.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.StopListening(System.Object)">
      <summary>Arresta l'ascolto dell'evento sull'oggetto specificato.</summary>
      <param name="source">Oggetto che genera l'evento.</param>
    </member>
  </members>
</doc>