<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Security.Permissions</name>
  </assembly>
  <members>
    <member name="T:System.ApplicationIdentity">
      <summary>Permite identificar de manera única una aplicación activada por manifiesto. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.ApplicationIdentity.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ApplicationIdentity" />.</summary>
      <param name="applicationIdentityFullName">Nombre completo de la aplicación.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="applicationIdentityFullName" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ApplicationIdentity.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Rellena un objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con los datos necesarios para serializar el objeto de destino.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se rellena con datos.</param>
      <param name="context">Estructura <see cref="T:System.Runtime.Serialization.StreamingContext" /> para la serialización.</param>
    </member>
    <member name="M:System.ApplicationIdentity.ToString">
      <summary>Devuelve el nombre completo de la aplicación activada por manifiesto.</summary>
      <returns>Nombre completo de la aplicación activada por manifiesto.</returns>
    </member>
    <member name="P:System.ApplicationIdentity.CodeBase">
      <summary>Obtiene la ubicación del manifiesto de implementación como dirección URL.</summary>
      <returns>La URL del manifiesto de implementación.</returns>
    </member>
    <member name="P:System.ApplicationIdentity.FullName">
      <summary>Obtiene el nombre completo de la aplicación.</summary>
      <returns>Nombre completo de la aplicación, que también se conoce como el nombre para mostrar.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationPermission">
      <summary>Proporciona una estructura de permisos que permite que los métodos o clases obtengan acceso a los archivos de configuración.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConfigurationPermission" />.</summary>
      <param name="state">Nivel de permiso que se va a conceder.</param>
      <exception cref="T:System.ArgumentException">El valor de <paramref name="state" /> no es <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> ni <see cref="F:System.Security.Permissions.PermissionState.None" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.Copy">
      <summary>Devuelve un nuevo objeto <see cref="T:System.Configuration.ConfigurationPermission" /> con el mismo nivel de permiso.</summary>
      <returns>Nuevo objeto <see cref="T:System.Configuration.ConfigurationPermission" /> con el mismo nivel de permiso.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.FromXml(System.Security.SecurityElement)">
      <summary>Lee el valor del estado del permiso del código XML.</summary>
      <param name="securityElement">Elemento de configuración del que se lee el estado del permiso.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El atributo <see langword="unrestricted" /> para el parámetro <paramref name="securityElement" /> dado no es <see langword="true" /> ni <see langword="false" />.

o bien

La propiedad <see cref="P:System.Security.SecurityElement.Tag" /> para el parámetro <paramref name="securityElement" /> dado no es "IPermission".

o bien

El atributo <see langword="class" /> del elemento <paramref name="securityElement " /> dado es <see langword="null" /> o no es el nombre de tipo para <see cref="T:System.Configuration.ConfigurationPermission" />.

o bien

El atributo <see langword="version" /> para el parámetro <paramref name="securityElement" /> dado no es igual a 1.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.Intersect(System.Security.IPermission)">
      <summary>Devuelve la intersección lógica entre el objeto <see cref="T:System.Configuration.ConfigurationPermission" /> y un objeto dado que implementa la interfaz <see cref="T:System.Security.IPermission" />.</summary>
      <param name="target">Objeto que contiene los permisos con el que se va a realizar la intersección.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> no es del tipo <see cref="T:System.Configuration.ConfigurationPermission" />.</exception>
      <returns>Intersección lógica entre <see cref="T:System.Configuration.ConfigurationPermission" /> y un objeto dado que implementa <see cref="T:System.Security.IPermission" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Compara el objeto <see cref="T:System.Configuration.ConfigurationPermission" /> con un objeto que implementa la interfaz <see cref="T:System.Security.IPermission" />.</summary>
      <param name="target">Objeto con el que se va a comparar.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> no es del tipo <see cref="T:System.Configuration.ConfigurationPermission" />.</exception>
      <returns>
        <see langword="true" /> si el estado del permiso es igual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.IsUnrestricted">
      <summary>Indica si el estado del permiso para el objeto <see cref="T:System.Configuration.ConfigurationPermission" /> es el valor <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> de la enumeración <see cref="T:System.Security.Permissions.PermissionState" />.</summary>
      <returns>
        <see langword="true" /> si el estado del permiso para <see cref="T:System.Configuration.ConfigurationPermission" /> es el valor <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> de <see cref="T:System.Security.Permissions.PermissionState" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.ToXml">
      <summary>Devuelve un objeto <see cref="T:System.Security.SecurityElement" /> con valores de atributo basados en el objeto <see cref="T:System.Configuration.ConfigurationPermission" /> actual.</summary>
      <returns>
        <see cref="T:System.Security.SecurityElement" /> con valores de atributo basados en el objeto <see cref="T:System.Configuration.ConfigurationPermission" /> actual.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.Union(System.Security.IPermission)">
      <summary>Devuelve la unión lógica del objeto <see cref="T:System.Configuration.ConfigurationPermission" /> y un objeto que implementa la interfaz <see cref="T:System.Security.IPermission" />.</summary>
      <param name="target">Objeto con el que se va a realizar la unión.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> no es del tipo <see cref="T:System.Configuration.ConfigurationPermission" />.</exception>
      <returns>Unión lógica de <see cref="T:System.Configuration.ConfigurationPermission" /> y un objeto que implementa <see cref="T:System.Security.IPermission" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationPermissionAttribute">
      <summary>Crea un objeto <see cref="T:System.Configuration.ConfigurationPermission" /> que concede o deniega el permiso de destino marcado para obtener acceso a las secciones de los archivos de configuración.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConfigurationPermissionAttribute" />.</summary>
      <param name="action">Acción de seguridad representada por un miembro de enumeración de <see cref="T:System.Security.Permissions.SecurityAction" />. Determina el estado de permiso del atributo.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationPermissionAttribute.CreatePermission">
      <summary>Crea y devuelve un objeto que implementa la interfaz <see cref="T:System.Security.IPermission" />.</summary>
      <returns>Un objeto que implementa <see cref="T:System.Security.IPermission" />.</returns>
    </member>
    <member name="T:System.Data.Common.DBDataPermission">
      <summary>Permite que un proveedor de datos de .NET Framework garantice a un usuario un nivel de seguridad adecuado para el acceso a los datos.</summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor">
      <summary>Inicializa una nueva instancia de una clase <see langword="DBDataPermission" />.</summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermission)">
      <summary>Inicializa una nueva instancia de la clase <see langword="DBDataPermission" /> utilizando un objeto <see langword="DBDataPermission" /> ya existente.</summary>
      <param name="permission">
        <see langword="DBDataPermission" /> existente utilizado para crear un nuevo objeto <see langword="DBDataPermission" />.</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermissionAttribute)">
      <summary>Inicializa una nueva instancia de la clase <see langword="DBDataPermission" /> con el atributo <see langword="DBDataPermissionAttribute" /> especificado.</summary>
      <param name="permissionAttribute">Acción de seguridad asociada a un atributo de seguridad personalizado.</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see langword="DBDataPermission" /> con el valor de <see cref="T:System.Security.Permissions.PermissionState" /> especificado.</summary>
      <param name="state">Uno de los valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see langword="DBDataPermission" /> con el valor de <see cref="T:System.Security.Permissions.PermissionState" /> especificado y un valor que indica si se permite una contraseña en blanco.</summary>
      <param name="state">Uno de los valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <param name="allowBlankPassword">
        <see langword="true" /> para indicar si se aceptan las contraseñas en blanco; en caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
      <summary>Agrega el acceso para la cadena de conexión especificada al estado existente del objeto <see langword="DBDataPermission" />.</summary>
      <param name="connectionString">Cadena de conexión permitida.</param>
      <param name="restrictions">Cadena que identifica parámetros de cadena de conexión permitidos o no.</param>
      <param name="behavior">Una de las propiedades de <see cref="T:System.Data.KeyRestrictionBehavior" />.</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Clear">
      <summary>Quita todos los permisos anteriormente agregados con el método <see cref="M:System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)" />.</summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Copy">
      <summary>Crea y devuelve una copia idéntica del objeto de permiso actual.</summary>
      <returns>Copia del objeto de permiso actual.</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.CreateInstance">
      <summary>Crea una nueva instancia de la clase <see langword="DBDataPermission" />.</summary>
      <returns>Un nuevo objeto <see langword="DBDataPermission" />.</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un objeto de seguridad con un estado especificado a partir de codificación XML.</summary>
      <param name="securityElement">Codificación XML que se usará para reconstruir el objeto de seguridad.</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Intersect(System.Security.IPermission)">
      <summary>Devuelve un nuevo objeto de permiso que representa la intersección del objeto de permiso actual y el objeto de permiso especificado.</summary>
      <param name="target">Objeto de permiso que va a formar una intersección con el objeto de permiso actual. Debe ser del mismo tipo que el objeto de permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es una referencia nula (<see langword="Nothing" /> en Visual Basic) y no es una instancia de la misma clase que el objeto de permiso actual.</exception>
      <returns>Nuevo objeto de permiso que representa la intersección del objeto de permiso actual y el objeto de permiso especificado. Este nuevo objeto de permiso es una referencia nula (<see langword="Nothing" /> en Visual Basic) si la intersección está vacía.</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Devuelve un valor que indica si el objeto de permiso actual es un subconjunto del objeto de permiso especificado.</summary>
      <param name="target">Objeto de permiso que se va a comprobar para determinar la relación del subconjunto. Este objeto debe ser del mismo tipo que el objeto de permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> es un objeto que no es del mismo tipo que el objeto de permiso actual.</exception>
      <returns>
        <see langword="true" /> si el objeto de permiso actual es un subconjunto del objeto de permiso especificado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.IsUnrestricted">
      <summary>Devuelve un valor que indica si el permiso puede representarse como permiso no restringido sin conocimientos sobre la semántica de permisos.</summary>
      <returns>
        <see langword="true" /> si el permiso puede representarse como permiso no restringido.</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.ToXml">
      <summary>Crea una codificación XML del objeto de seguridad y su estado actual.</summary>
      <returns>Codificación XML del objeto de seguridad, incluida cualquier información de estado.</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Union(System.Security.IPermission)">
      <summary>Devuelve un nuevo objeto de permiso que representa la unión del objeto de permiso actual y el objeto de permiso especificado.</summary>
      <param name="target">Objeto de permiso que va a formar una combinación con el objeto de permiso actual. Debe ser del mismo tipo que el objeto de permiso actual.</param>
      <exception cref="T:System.ArgumentException">El objeto <paramref name="target" /> no es del mismo tipo que el objeto de permiso actual.</exception>
      <returns>Nuevo objeto de permiso que representa la unión del objeto de permiso actual y del objeto de permiso especificado.</returns>
    </member>
    <member name="P:System.Data.Common.DBDataPermission.AllowBlankPassword">
      <summary>Obtiene un valor que indica si se acepta una contraseña en blanco.</summary>
      <returns>
        <see langword="true" /> si se acepta una contraseña en blanco; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Data.Common.DBDataPermissionAttribute">
      <summary>Asocia una acción de seguridad a un atributo de seguridad personalizado.</summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de <see cref="T:System.Data.Common.DBDataPermissionAttribute" />.</summary>
      <param name="action">Uno de los valores de acción de seguridad que representa una acción que se puede realizar mediante seguridad declarativa.</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermissionAttribute.ShouldSerializeConnectionString">
      <summary>Identifica si el atributo debería serializar la cadena de conexión.</summary>
      <returns>
        <see langword="true" /> si el atributo debería serializar la cadena de conexión; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermissionAttribute.ShouldSerializeKeyRestrictions">
      <summary>Identifica si el atributo debería serializar el conjunto de restricciones de clave.</summary>
      <returns>
        <see langword="true" /> si el atributo debe serializar el conjunto de restricciones de clave; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DBDataPermissionAttribute.AllowBlankPassword">
      <summary>Obtiene o establece un valor que indica si se acepta una contraseña en blanco.</summary>
      <returns>
        <see langword="true" /> si se acepta una contraseña en blanco; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DBDataPermissionAttribute.ConnectionString">
      <summary>Obtiene o establece una cadena de conexión permitida.</summary>
      <returns>Cadena de conexión permitida.</returns>
    </member>
    <member name="P:System.Data.Common.DBDataPermissionAttribute.KeyRestrictionBehavior">
      <summary>Identifica si la lista de los parámetros de cadena de conexión especificados por la propiedad <see cref="P:System.Data.Common.DBDataPermissionAttribute.KeyRestrictions" /> son los únicos parámetros de cadena de conexión permitidos.</summary>
      <returns>Uno de los valores de <see cref="T:System.Data.KeyRestrictionBehavior" />.</returns>
    </member>
    <member name="P:System.Data.Common.DBDataPermissionAttribute.KeyRestrictions">
      <summary>Obtiene o establece los parámetros de cadena de conexión permitidos o no permitidos.</summary>
      <returns>Uno o varios parámetros de cadena de conexión permitidos o no permitidos.</returns>
    </member>
    <member name="T:System.Data.Odbc.OdbcPermission">
      <summary>Permite al proveedor de datos de .NET Framework para ODBC garantizar a un usuario un nivel de seguridad suficiente para obtener acceso a un origen de datos ODBC. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.Odbc.OdbcPermission" />.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.Odbc.OdbcPermission" /> con uno de los valores de <see cref="T:System.Security.Permissions.PermissionState" />.</summary>
      <param name="state">Uno de los valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.Odbc.OdbcPermission" />.</summary>
      <param name="state">Uno de los valores de <see langword="System.Security.Permissions.PermissionState" />.</param>
      <param name="allowBlankPassword">Indica si se permite una contraseña en blanco.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
      <summary>Agrega el acceso de la cadena de conexión especificada al estado de permiso existente.</summary>
      <param name="connectionString">Cadena de conexión permitida.</param>
      <param name="restrictions">Cadena que identifica parámetros de cadena de conexión permitidos o no.</param>
      <param name="behavior">Uno de los valores de <see cref="T:System.Data.KeyRestrictionBehavior" />.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.Copy">
      <summary>Devuelve <see cref="T:System.Data.Odbc.OdbcPermission" /> como <see cref="T:System.Security.IPermission" />.</summary>
      <returns>Copia del objeto de permiso actual.</returns>
    </member>
    <member name="T:System.Data.Odbc.OdbcPermissionAttribute">
      <summary>Asocia una acción de seguridad a un atributo de seguridad personalizado.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.Odbc.OdbcPermissionAttribute" /> con uno de los valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</summary>
      <param name="action">Uno de los valores <see cref="T:System.Security.Permissions.SecurityAction" /> que representa una acción que se puede realizar mediante seguridad declarativa.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermissionAttribute.CreatePermission">
      <summary>Devuelve un objeto <see cref="T:System.Data.Odbc.OdbcPermission" /> configurado según las propiedades del atributo.</summary>
      <returns>Un objeto <see cref="T:System.Data.Odbc.OdbcPermission" />.</returns>
    </member>
    <member name="T:System.Data.OleDb.OleDbPermission">
      <summary>Permite que el proveedor de datos de .NET Framework para OLE DB ayude a asegurar que un usuario tenga un nivel de seguridad suficiente para obtener acceso a un origen de datos OLE DB.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.OleDb.OleDbPermission" />.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.OleDb.OleDbPermission" />.</summary>
      <param name="state">Uno de los valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.OleDb.OleDbPermission" />.</summary>
      <param name="state">Uno de los valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <param name="allowBlankPassword">Indica si se permite una contraseña en blanco.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.Copy">
      <summary>Devuelve <see cref="T:System.Data.OleDb.OleDbPermission" /> como <see cref="T:System.Security.IPermission" />.</summary>
      <returns>Copia del objeto de permiso actual.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbPermission.Provider">
      <summary>Esta propiedad ha sido marcada como obsoleta. Establecer el valor de esta propiedad no tendrá ningún efecto.</summary>
      <returns>Esta propiedad ha sido marcada como obsoleta. Establecer el valor de esta propiedad no tendrá ningún efecto.</returns>
    </member>
    <member name="T:System.Data.OleDb.OleDbPermissionAttribute">
      <summary>Asocia una acción de seguridad a un atributo de seguridad personalizado.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.OleDb.OleDbPermissionAttribute" />.</summary>
      <param name="action">Uno de los valores <see cref="T:System.Security.Permissions.SecurityAction" /> que representa una acción que se puede realizar mediante seguridad declarativa.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermissionAttribute.CreatePermission">
      <summary>Devuelve un objeto <see cref="T:System.Data.OleDb.OleDbPermission" /> configurado según las propiedades del atributo.</summary>
      <returns>Un objeto <see cref="T:System.Data.OleDb.OleDbPermission" />.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbPermissionAttribute.Provider">
      <summary>Obtiene o establece una cadena separada por comas con una lista de proveedores admitidos.</summary>
      <returns>Lista separada por comas de proveedores que permite la directiva de seguridad.</returns>
    </member>
    <member name="T:System.Data.OracleClient.OraclePermission">
      <summary>Permite que el proveedor de datos de .NET Framework para Oracle garantice a un usuario un nivel de seguridad adecuado para obtener acceso a una base de datos de Oracle.</summary>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.OracleClient.OraclePermission" /> con uno de los valores de <see cref="T:System.Security.Permissions.PermissionState" />.</summary>
      <param name="state">Uno de los valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
      <summary>Crea un nuevo conjunto de permisos.</summary>
      <param name="connectionString">La cadena de conexión.</param>
      <param name="restrictions">Restricciones clave.</param>
      <param name="behavior">Una de las enumeraciones <see cref="T:System.Data.KeyRestrictionBehavior" />.</param>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Copy">
      <summary>Cuando se implementa mediante una clase derivada, crea y devuelve una copia idéntica del objeto de permiso actual.</summary>
      <returns>Copia del objeto de permiso actual.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.FromXml(System.Security.SecurityElement)">
      <summary>Cuando se invalida en una clase derivada, reconstruye un objeto de seguridad con un estado especificado a partir de codificación XML.</summary>
      <param name="securityElement">Una expresión <see cref="T:System.Security.SecurityElement" />.</param>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Intersect(System.Security.IPermission)">
      <summary>Cuando se implementa mediante una clase derivada, se crea y se devuelve un permiso que es la intersección del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para formar intersección con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <returns>Nuevo permiso que representa la intersección del permiso actual y del permiso especificado. Este nuevo permiso es <see langword="null" /> si la intersección está vacía.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Cuando se implementa mediante una clase derivada, determina si el permiso actual es un subconjunto del permiso especificado.</summary>
      <param name="target">Permiso que se va a probar para la relación de subconjunto. Este permiso debe ser del mismo tipo que el permiso actual.</param>
      <returns>
        <see langword="true" /> si el permiso actual es un subconjunto del permiso especificado; si no, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.IsUnrestricted">
      <summary>Devuelve un valor que indica si el permiso puede representarse como permiso no restringido sin conocimientos sobre la semántica de permisos.</summary>
      <returns>
        <see langword="true" /> si el permiso puede representarse como permiso no restringido.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.ToXml">
      <summary>Crea una codificación XML del objeto de seguridad y su estado actual.</summary>
      <returns>Codificación XML del objeto de seguridad, incluida cualquier información de estado.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Union(System.Security.IPermission)">
      <summary>Crea un permiso que es la unión del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para combinar con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <returns>Nuevo permiso que representa la unión del permiso actual y el permiso especificado.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermission.AllowBlankPassword">
      <summary>Obtiene un valor que indica si se acepta una contraseña en blanco.</summary>
      <returns>
        <see langword="true" /> si se aceptan las contraseñas en blanco; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Data.OracleClient.OraclePermissionAttribute">
      <summary>Asocia una acción de seguridad a un atributo de seguridad personalizado.</summary>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.OracleClient.OraclePermissionAttribute" />.</summary>
      <param name="action">Uno de los valores <see cref="T:System.Security.Permissions.SecurityAction" /> que representa una acción que se puede realizar mediante seguridad declarativa.</param>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.CreatePermission">
      <summary>Devuelve un objeto <see cref="T:System.Data.OracleClient.OraclePermission" /> configurado según las propiedades del atributo.</summary>
      <returns>Un objeto <see cref="T:System.Data.OracleClient.OraclePermission" />.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.ShouldSerializeConnectionString">
      <summary>Identifica si el atributo debería serializar la cadena de conexión.</summary>
      <returns>
        <see langword="true" /> si el atributo debería serializar la cadena de conexión; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.ShouldSerializeKeyRestrictions">
      <summary>Identifica si el atributo debería serializar el conjunto de restricciones de clave.</summary>
      <returns>
        <see langword="true" /> si el atributo debe serializar el conjunto de restricciones de clave; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.AllowBlankPassword">
      <summary>Obtiene o establece un valor que indica si se acepta una contraseña en blanco.</summary>
      <returns>
        <see langword="true" /> si se aceptan las contraseñas en blanco; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.ConnectionString">
      <summary>Obtiene o establece una cadena de conexión permitida.</summary>
      <returns>Cadena de conexión permitida.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictionBehavior">
      <summary>Identifica si la lista de los parámetros de cadena de conexión especificados por la propiedad <see cref="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictions" /> son los únicos parámetros de cadena de conexión permitidos.</summary>
      <returns>Uno de los valores de <see cref="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictionBehavior" />.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictions">
      <summary>Obtiene o establece los parámetros de cadena de conexión permitidos o no permitidos.</summary>
      <returns>Uno o varios parámetros de cadena de conexión permitidos o no permitidos.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlClientPermission">
      <summary>Permite que el proveedor de datos de .NET Framework para servidor SQL Server se asegure de que un usuario dispone de un nivel de seguridad suficiente para obtener acceso a un origen de datos.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlClient.SqlClientPermission" />.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlClient.SqlClientPermission" />.</summary>
      <param name="state">Uno de los valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlClient.SqlClientPermission" />.</summary>
      <param name="state">Uno de los valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <param name="allowBlankPassword">Indica si se permite una contraseña en blanco.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
      <summary>Agrega una nueva cadena de conexión y un conjunto de palabras clave restringidas al objeto <see cref="T:System.Data.SqlClient.SqlClientPermission" />.</summary>
      <param name="connectionString">La cadena de conexión.</param>
      <param name="restrictions">Restricciones clave.</param>
      <param name="behavior">Una de las enumeraciones <see cref="T:System.Data.KeyRestrictionBehavior" />.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.Copy">
      <summary>Devuelve <see cref="T:System.Data.SqlClient.SqlClientPermission" /> como <see cref="T:System.Security.IPermission" />.</summary>
      <returns>Copia del objeto de permiso actual.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlClientPermissionAttribute">
      <summary>Asocia una acción de seguridad a un atributo de seguridad personalizado.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlClient.SqlClientPermissionAttribute" />.</summary>
      <param name="action">Uno de los valores <see cref="T:System.Security.Permissions.SecurityAction" /> que representa una acción que se puede realizar mediante seguridad declarativa.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermissionAttribute.CreatePermission">
      <summary>Devuelve un objeto <see cref="T:System.Data.SqlClient.SqlClientPermission" /> que se configura en función de las propiedades del atributo.</summary>
      <returns>Un objeto <see cref="T:System.Data.SqlClient.SqlClientPermission" />.</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogPermission">
      <summary>Controla los permisos de acceso al código para el registro de eventos.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermission.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.EventLogPermission" />.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionAccess,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.EventLogPermission" /> con los niveles de acceso especificados y el nombre del equipo que se va a utilizar.</summary>
      <param name="permissionAccess">Uno de los valores de la enumeración que especifica un nivel de acceso.</param>
      <param name="machineName">Nombre del equipo en el que se van a leer o escribir los eventos.</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionEntry[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.EventLogPermission" /> con las entradas de permisos especificadas.</summary>
      <param name="permissionAccessEntries">Matriz de objetos que representan entradas de permiso. La propiedad <see cref="P:System.Diagnostics.EventLogPermission.PermissionEntries" /> se establece en este valor.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="permissionAccessEntries" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.EventLogPermission" /> con el estado de permiso especificado.</summary>
      <param name="state">Uno de los valores de enumeración que especifica el estado del permiso (acceso completo a recursos o sin acceso).</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="state" /> no es un valor válido de <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="P:System.Diagnostics.EventLogPermission.PermissionEntries">
      <summary>Obtiene la colección de entradas de permiso para esta solicitud de permisos.</summary>
      <returns>Colección que contiene las entradas de permiso para esta solicitud de permisos.</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogPermissionAccess">
      <summary>Define los niveles de acceso utilizados por las clases de permiso <see cref="T:System.Diagnostics.EventLog" />.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.Administer">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" /> puede crear un origen de eventos, leer los registros existentes, eliminar orígenes o registros de eventos, responder a entradas, borrar un registro de eventos, escuchar eventos y obtener acceso a una colección de todos los registros de eventos.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.Audit">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" /> puede leer los registros existentes, eliminar orígenes o registros de eventos, responder a entradas, borrar un registro de eventos, escuchar eventos y obtener acceso a una colección de todos los registros de eventos. <see langword="Note" /> Este miembro está ahora obsoleto, use <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" />.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.Browse">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" /> puede leer los registros existentes. <see langword="Note" /> Este miembro está ahora obsoleto, use <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" />.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.Instrument">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" /> puede leer los registros existentes o escribir en los mismos y crear orígenes y registros de eventos. <see langword="Note" /> Este miembro está ahora obsoleto, use <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" />.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.None">
      <summary>El objeto <see cref="T:System.Diagnostics.EventLog" /> no tiene permisos.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.Write">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" /> puede escribir en los registros existentes y crear orígenes y registros de eventos.</summary>
    </member>
    <member name="T:System.Diagnostics.EventLogPermissionAttribute">
      <summary>Permite realizar comprobaciones declarativas de permisos para registros de eventos.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.EventLogPermissionAttribute" />.</summary>
      <param name="action">Uno de los valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionAttribute.CreatePermission">
      <summary>Crea el permiso basándose en la propiedad <see cref="P:System.Diagnostics.EventLogPermissionAttribute.MachineName" /> y en los niveles de acceso solicitados, que se establecen a través de la propiedad <see cref="P:System.Diagnostics.EventLogPermissionAttribute.PermissionAccess" /> en el atributo.</summary>
      <returns>Una interfaz <see cref="T:System.Security.IPermission" /> que representa el permiso creado.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogPermissionAttribute.MachineName">
      <summary>Obtiene o establece el nombre del equipo en el que se pueden leer eventos.</summary>
      <exception cref="T:System.ArgumentException">El nombre de equipo no es válido.</exception>
      <returns>El nombre del equipo en el que se pueden leer eventos. El valor predeterminado es ".".</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogPermissionAttribute.PermissionAccess">
      <summary>Obtiene o establece los niveles de acceso utilizados en la solicitud de permisos.</summary>
      <returns>Combinación bit a bit de los valores de <see cref="T:System.Diagnostics.EventLogPermissionAccess" />. De manera predeterminada, es <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" />.</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogPermissionEntry">
      <summary>Define la unidad más pequeña de un permiso de seguridad de acceso del código que se establece para <see cref="T:System.Diagnostics.EventLog" />.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntry.#ctor(System.Diagnostics.EventLogPermissionAccess,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.EventLogPermissionEntry" />.</summary>
      <param name="permissionAccess">Combinación bit a bit de los valores de <see cref="T:System.Diagnostics.EventLogPermissionAccess" />. La propiedad <see cref="P:System.Diagnostics.EventLogPermissionEntry.PermissionAccess" /> se establece en este valor.</param>
      <param name="machineName">Nombre del equipo en el que se van a leer o escribir los eventos. La propiedad <see cref="P:System.Diagnostics.EventLogPermissionEntry.MachineName" /> se establece en este valor.</param>
      <exception cref="T:System.ArgumentException">El nombre de equipo no es válido.</exception>
    </member>
    <member name="P:System.Diagnostics.EventLogPermissionEntry.MachineName">
      <summary>Obtiene el nombre del equipo en el que se van a leer o escribir los eventos.</summary>
      <returns>Nombre del equipo en el que se van a leer o escribir los eventos.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogPermissionEntry.PermissionAccess">
      <summary>Obtiene los niveles de acceso de permiso utilizados en la solicitud de permisos.</summary>
      <returns>Combinación bit a bit de los valores de <see cref="T:System.Diagnostics.EventLogPermissionAccess" />.</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogPermissionEntryCollection">
      <summary>Contiene una colección fuertemente tipada de objetos <see cref="T:System.Diagnostics.EventLogPermissionEntry" />.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.Add(System.Diagnostics.EventLogPermissionEntry)">
      <summary>Agrega un objeto <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> especificado a esta colección.</summary>
      <param name="value">
        <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> que se va a agregar.</param>
      <returns>El índice de base cero del objeto <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> que se ha agregado.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.AddRange(System.Diagnostics.EventLogPermissionEntry[])">
      <summary>Agrega a esta colección un conjunto de entradas de permiso especificadas.</summary>
      <param name="value">Matriz de objetos de tipo <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> que contiene las entradas de permisos que se van a agregar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.AddRange(System.Diagnostics.EventLogPermissionEntryCollection)">
      <summary>Agrega a esta colección un conjunto de entradas de permiso especificadas.</summary>
      <param name="value">
        <see cref="T:System.Diagnostics.EventLogPermissionEntryCollection" /> que contiene las entradas de permisos que se van a agregar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.Contains(System.Diagnostics.EventLogPermissionEntry)">
      <summary>Determina si esta colección contiene un objeto <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> que se haya especificado.</summary>
      <param name="value">
        <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> que se va a buscar.</param>
      <returns>Es <see langword="true" /> si <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> que se ha especificado pertenece a esta colección; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.CopyTo(System.Diagnostics.EventLogPermissionEntry[],System.Int32)">
      <summary>Copia las entradas de permiso de esta colección en una matriz, comenzando en un índice determinado de la matriz.</summary>
      <param name="array">Matriz de tipo <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> que recibe las entradas de permisos de la colección.</param>
      <param name="index">Índice de base cero en el que se comienzan a copiar las entradas de permiso.</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.IndexOf(System.Diagnostics.EventLogPermissionEntry)">
      <summary>Determina el índice de una entrada de permiso especificada en esta colección.</summary>
      <param name="value">Entrada de permiso que se va a buscar.</param>
      <returns>Índice de base cero de la entrada de permiso especificada, o -1 si la entrada de permiso no se ha encontrado en la colección.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.Insert(System.Int32,System.Diagnostics.EventLogPermissionEntry)">
      <summary>Inserta una entrada de permiso en esta colección, en el índice especificado.</summary>
      <param name="index">Índice de base cero de la colección en el que se va a insertar la entrada de permiso.</param>
      <param name="value">Entrada de permiso que se va a insertar en esta colección.</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.OnClear">
      <summary>Realiza procesos personalizados adicionales después de borrar el contenido de la colección.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.OnInsert(System.Int32,System.Object)">
      <summary>Realiza procesos personalizados adicionales antes de que se inserte una nueva entrada del permiso en la colección.</summary>
      <param name="index">Índice de base cero en el que se va a insertar <paramref name="value" />.</param>
      <param name="value">Nuevo valor de la entrada de permiso en <paramref name="index" />.</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.OnRemove(System.Int32,System.Object)">
      <summary>Realiza procesos personalizados adicionales cuando se quita una entrada de permiso nueva de la colección.</summary>
      <param name="index">Índice de base cero en el que se puede encontrar <paramref name="value" />.</param>
      <param name="value">Entrada de permiso que se quita de <paramref name="index" />.</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>Realiza procesos personalizados adicionales antes de establecer un valor en la colección.</summary>
      <param name="index">Índice de base cero en el que se puede encontrar <paramref name="oldValue" />.</param>
      <param name="oldValue">Valor que se va a reemplazar por <paramref name="newValue" />.</param>
      <param name="newValue">Nuevo valor de la entrada de permiso en <paramref name="index" />.</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.Remove(System.Diagnostics.EventLogPermissionEntry)">
      <summary>Quita una entrada de permiso especificada de esta colección.</summary>
      <param name="value">Entrada de permiso que se va a quitar.</param>
    </member>
    <member name="P:System.Diagnostics.EventLogPermissionEntryCollection.Item(System.Int32)">
      <summary>Obtiene o establece el objeto en un índice especificado.</summary>
      <param name="index">Índice de base cero de la colección.</param>
      <returns>
        <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> que existe en el índice especificado.</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterPermission">
      <summary>Permite controlar los permisos de acceso al código para <see cref="T:System.Diagnostics.PerformanceCounter" />.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermission.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.PerformanceCounterPermission" />.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Diagnostics.PerformanceCounterPermissionAccess,System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.PerformanceCounterPermission" /> con los niveles de acceso especificados, el nombre del equipo que se debe usar y la categoría asociada al contador de rendimiento.</summary>
      <param name="permissionAccess">Uno de los valores de <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" />.</param>
      <param name="machineName">Servidor en el que residen el contador de rendimiento y su categoría asociada.</param>
      <param name="categoryName">Nombre de la categoría de contador de rendimiento (objeto de rendimiento) a la que está asociado el contador de rendimiento.</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Diagnostics.PerformanceCounterPermissionEntry[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.PerformanceCounterPermission" /> con las entradas de nivel de acceso de permiso especificadas.</summary>
      <param name="permissionAccessEntries">Matriz de objetos <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" />. La propiedad <see cref="P:System.Diagnostics.PerformanceCounterPermission.PermissionEntries" /> se establece en este valor.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="permissionAccessEntries" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.PerformanceCounterPermission" /> con el estado de permiso especificado.</summary>
      <param name="state">Uno de los valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="state" /> no es un valor válido de <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermission.PermissionEntries">
      <summary>Obtiene la colección de entradas de permiso para esta solicitud de permisos.</summary>
      <returns>
        <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection" /> que contiene las entradas de permisos para esta solicitud de permisos.</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterPermissionAccess">
      <summary>Define los niveles de acceso utilizados por las clases de permiso <see cref="T:System.Diagnostics.PerformanceCounter" />.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" /> puede leer, escribir y crear categorías.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Browse">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" /> puede leer categorías.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Instrument">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" /> puede leer y escribir categorías.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.None">
      <summary>El objeto <see cref="T:System.Diagnostics.PerformanceCounter" /> no tiene permisos.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" /> puede leer categorías.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" /> puede escribir categorías.</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterPermissionAttribute">
      <summary>Permite comprobaciones declarativas de permiso de contador de rendimiento.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.PerformanceCounterPermissionAttribute" />.</summary>
      <param name="action">Uno de los valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionAttribute.CreatePermission">
      <summary>Crea el permiso basándose en los niveles de acceso solicitados que se establecen mediante la propiedad <see cref="P:System.Diagnostics.PerformanceCounterPermissionAttribute.PermissionAccess" /> del atributo.</summary>
      <returns>Una interfaz <see cref="T:System.Security.IPermission" /> que representa el permiso creado.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionAttribute.CategoryName">
      <summary>Obtiene o establece el nombre de la categoría de contador de rendimiento.</summary>
      <exception cref="T:System.ArgumentNullException">El valor es <see langword="null" />.</exception>
      <returns>Nombre de la categoría de contador de rendimiento (objeto de rendimiento).</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionAttribute.MachineName">
      <summary>Obtiene o establece el nombre de equipo para el contador de rendimiento</summary>
      <exception cref="T:System.ArgumentException">El formato de <see cref="P:System.Diagnostics.PerformanceCounterPermissionAttribute.MachineName" /> no es válido.</exception>
      <returns>Servidor en que reside la categoría del contador de rendimiento.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionAttribute.PermissionAccess">
      <summary>Obtiene o establece los niveles de acceso utilizados en la solicitud de permisos.</summary>
      <returns>Combinación bit a bit de los valores de <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" />. De manera predeterminada, es <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" />.</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterPermissionEntry">
      <summary>Define la unidad más pequeña de un permiso de seguridad de acceso del código que se establece para <see cref="T:System.Diagnostics.PerformanceCounter" />.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntry.#ctor(System.Diagnostics.PerformanceCounterPermissionAccess,System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" />.</summary>
      <param name="permissionAccess">Combinación bit a bit de los valores de <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" />. La propiedad <see cref="P:System.Diagnostics.PerformanceCounterPermissionEntry.PermissionAccess" /> se establece en este valor.</param>
      <param name="machineName">Servidor en que reside la categoría del contador de rendimiento.</param>
      <param name="categoryName">Nombre de la categoría de contador de rendimiento (objeto de rendimiento) a la que está asociado este contador de rendimiento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> es <see langword="null" />.  
  
o bien 
 <paramref name="machineName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="permissionAccess" /> no es un valor <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" /> válido.  
  
o bien 
 <paramref name="machineName" /> no es un nombre de equipo válido.</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionEntry.CategoryName">
      <summary>Obtiene el nombre de la categoría de contador de rendimiento (objeto de rendimiento).</summary>
      <returns>Nombre de la categoría de contador de rendimiento (objeto de rendimiento).</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionEntry.MachineName">
      <summary>Obtiene el nombre del servidor en que reside la categoría del contador de rendimiento.</summary>
      <returns>Nombre del servidor en el que reside la categoría.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionEntry.PermissionAccess">
      <summary>Obtiene el nivel de acceso de permiso de la entrada.</summary>
      <returns>Combinación bit a bit de los valores de <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" />.</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection">
      <summary>Contiene una colección fuertemente tipada de objetos <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" />.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Add(System.Diagnostics.PerformanceCounterPermissionEntry)">
      <summary>Agrega un objeto <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> especificado a esta colección.</summary>
      <param name="value">Objeto <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> que se agrega.</param>
      <returns>Índice de base cero del objeto <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> agregado.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.AddRange(System.Diagnostics.PerformanceCounterPermissionEntry[])">
      <summary>Agrega a esta colección un conjunto de entradas de permiso especificadas.</summary>
      <param name="value">Matriz de objetos de tipo <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> que contiene las entradas de permisos que se van a agregar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.AddRange(System.Diagnostics.PerformanceCounterPermissionEntryCollection)">
      <summary>Agrega a esta colección un conjunto de entradas de permiso especificadas.</summary>
      <param name="value">
        <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection" /> que contiene las entradas de permisos que se van a agregar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Contains(System.Diagnostics.PerformanceCounterPermissionEntry)">
      <summary>Determina si la colección contiene un objeto <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> especificado.</summary>
      <param name="value">Objeto <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> que se va a buscar.</param>
      <returns>Es <see langword="true" /> si el objeto <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> especificado pertenece a esta colección; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.CopyTo(System.Diagnostics.PerformanceCounterPermissionEntry[],System.Int32)">
      <summary>Copia las entradas de permiso de esta colección en una matriz, comenzando en un índice determinado de la matriz.</summary>
      <param name="array">Matriz de tipo <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> que recibe las entradas de permisos de la colección.</param>
      <param name="index">Índice de base cero en el que se comienzan a copiar las entradas de permiso.</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.IndexOf(System.Diagnostics.PerformanceCounterPermissionEntry)">
      <summary>Determina el índice de una entrada de permiso especificada en esta colección.</summary>
      <param name="value">Entrada de permiso que se va a buscar.</param>
      <returns>Índice de base cero de la entrada de permiso especificada, o -1 si la entrada de permiso no se ha encontrado en la colección.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Insert(System.Int32,System.Diagnostics.PerformanceCounterPermissionEntry)">
      <summary>Inserta una entrada de permiso en esta colección, en el índice especificado.</summary>
      <param name="index">Índice de base cero de la colección en el que se va a insertar la entrada de permiso.</param>
      <param name="value">Entrada de permiso que se va a insertar en esta colección.</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnClear">
      <summary>Realiza procesos personalizados adicionales después de borrar el contenido de la colección.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnInsert(System.Int32,System.Object)">
      <summary>Realiza procesos personalizados adicionales antes de que se inserte una nueva entrada del permiso en la colección.</summary>
      <param name="index">Índice de base cero en el que se va a insertar <paramref name="value" />.</param>
      <param name="value">Nuevo valor de la entrada de permiso en <paramref name="index" />.</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnRemove(System.Int32,System.Object)">
      <summary>Realiza procesos personalizados adicionales cuando se quita una entrada de permiso nueva de la colección.</summary>
      <param name="index">Índice de base cero en el que se puede encontrar <paramref name="value" />.</param>
      <param name="value">Entrada de permiso que se quita de <paramref name="index" />.</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>Realiza procesos personalizados adicionales antes de establecer un valor en la colección.</summary>
      <param name="index">Índice de base cero en el que se puede encontrar <paramref name="oldValue" />.</param>
      <param name="oldValue">Valor que se va a reemplazar por <paramref name="newValue" />.</param>
      <param name="newValue">Nuevo valor de la entrada de permiso en <paramref name="index" />.</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Remove(System.Diagnostics.PerformanceCounterPermissionEntry)">
      <summary>Quita una entrada de permiso especificada de esta colección.</summary>
      <param name="value">Entrada de permiso que se va a quitar.</param>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Item(System.Int32)">
      <summary>Obtiene o establece el objeto en un índice especificado.</summary>
      <param name="index">Índice de base cero de la colección.</param>
      <returns>Objeto <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> que existe en el índice especificado.</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintingPermission">
      <summary>Controla el acceso a impresoras. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.#ctor(System.Drawing.Printing.PrintingPermissionLevel)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Printing.PrintingPermission" /> con el acceso de nivel de impresión especificado.</summary>
      <param name="printingLevel">Uno de los valores de <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" />.</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Printing.PrintingPermission" /> con acceso totalmente restringido o sin restricción, tal como se especifica.</summary>
      <param name="state">Uno de los valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> no es un <see cref="T:System.Security.Permissions.PermissionState" /> válido.</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.Copy">
      <summary>Crea y devuelve una copia idéntica del objeto de permiso actual.</summary>
      <returns>Copia del objeto de permiso actual.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un objeto de seguridad con un estado especificado a partir de codificación XML.</summary>
      <param name="element">Codificación XML que se usará para reconstruir el objeto de seguridad.</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.Intersect(System.Security.IPermission)">
      <summary>Crea y devuelve un permiso que es la intersección entre el objeto de permiso actual y un objeto de permiso de destino.</summary>
      <param name="target">Objeto de permiso del mismo tipo que el objeto de permiso actual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> es un objeto que no es del mismo tipo que el objeto de permiso actual.</exception>
      <returns>Nuevo objeto de permiso que representa la intersección entre el objeto actual y el destino especificado. Este objeto es <see langword="null" /> si la intersección está vacía.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina si el objeto de permiso actual es un subconjunto del permiso especificado.</summary>
      <param name="target">Objeto de permiso que se va a comprobar para determinar la relación del subconjunto. Este objeto debe ser del mismo tipo que el objeto de permiso actual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> es un objeto que no es del mismo tipo que el objeto de permiso actual.</exception>
      <returns>Es <see langword="true" /> si el objeto de permiso actual es un subconjunto de <paramref name="target" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.IsUnrestricted">
      <summary>Obtiene un valor que indica si el permiso no tiene restricciones.</summary>
      <returns>Es <see langword="true" /> si el permiso es no restringido; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.ToXml">
      <summary>Crea una codificación XML del objeto de seguridad y su estado actual.</summary>
      <returns>Codificación XML del objeto de seguridad, incluida cualquier información de estado.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.Union(System.Security.IPermission)">
      <summary>Crea un permiso que combina el objeto de permiso y el objeto de permiso de destino.</summary>
      <param name="target">Objeto de permiso del mismo tipo que el objeto de permiso actual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> es un objeto que no es del mismo tipo que el objeto de permiso actual.</exception>
      <returns>Nuevo objeto de permiso que representa la unión del objeto de permiso actual y del objeto de permiso especificado.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintingPermission.Level">
      <summary>Obtiene o establece el acceso de nivel de impresión del código.</summary>
      <returns>Uno de los valores de <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" />.</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintingPermissionAttribute">
      <summary>Permite comprobaciones declarativas de permiso de impresión.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Printing.PrintingPermissionAttribute" />.</summary>
      <param name="action">Uno de los valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermissionAttribute.CreatePermission">
      <summary>Crea el permiso basándose en los niveles de acceso solicitados, que se establecen a través de la propiedad <see cref="P:System.Drawing.Printing.PrintingPermissionAttribute.Level" /> en el atributo.</summary>
      <returns>Una interfaz <see cref="T:System.Security.IPermission" /> que representa el permiso creado.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintingPermissionAttribute.Level">
      <summary>Obtiene o establece el tipo de impresión permitido.</summary>
      <exception cref="T:System.ArgumentException">El valor no es uno de los valores de <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" />.</exception>
      <returns>Uno de los valores de <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" />.</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintingPermissionLevel">
      <summary>Especifica el tipo de impresión permitido para el código.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting">
      <summary>Proporciona acceso completo a todas las impresoras.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting">
      <summary>Proporciona impresión mediante programación a la impresora predeterminada, además de una impresión segura a través de un cuadro de diálogo menos restringido. <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /> es un subconjunto de <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" />.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.NoPrinting">
      <summary>Impide el acceso a las impresoras. <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.NoPrinting" /> es un subconjunto de <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" />.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting">
      <summary>Proporciona impresión únicamente desde un cuadro de diálogo restringido. <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /> es un subconjunto de <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" />.</summary>
    </member>
    <member name="T:System.Net.DnsPermission">
      <summary>Controla los derechos de acceso a los servidores del sistema de nombres de dominio (Domain Name System, DNS) en la red.</summary>
    </member>
    <member name="M:System.Net.DnsPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.Net.DnsPermission" /> que permite acceso DNS no restringido o lo deniega.</summary>
      <param name="state">Uno de los valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> no es un valor <see cref="T:System.Security.Permissions.PermissionState" /> válido.</exception>
    </member>
    <member name="M:System.Net.DnsPermission.Copy">
      <summary>Crea una copia idéntica de la instancia de permiso actual.</summary>
      <returns>Nueva instancia de la clase <see cref="T:System.Net.DnsPermission" /> que es una copia idéntica de la instancia actual.</returns>
    </member>
    <member name="M:System.Net.DnsPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye una instancia de <see cref="T:System.Net.DnsPermission" /> a partir de codificación XML.</summary>
      <param name="securityElement">Codificación XML que se va a usar para reconstruir la instancia de <see cref="T:System.Net.DnsPermission" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> no es un elemento de <see cref="T:System.Net.DnsPermission" />.</exception>
    </member>
    <member name="M:System.Net.DnsPermission.Intersect(System.Security.IPermission)">
      <summary>Crea una instancia de permiso que es la intersección entre la instancia de permiso actual y la instancia de permiso especificada.</summary>
      <param name="target">Instancia de <see cref="T:System.Net.DnsPermission" /> que forma una intersección con la instancia actual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> no es <see cref="T:System.Net.DnsPermission" /> ni <see langword="null" />.</exception>
      <returns>Instancia de <see cref="T:System.Net.DnsPermission" /> que representa la intersección entre la instancia de <see cref="T:System.Net.DnsPermission" /> actual y la instancia de <see cref="T:System.Net.DnsPermission" /> especificada, o <see langword="null" /> si la intersección está vacía. Si tanto la instancia actual como <paramref name="target" /> no tienen restricciones, este método devuelve una nueva instancia de <see cref="T:System.Net.DnsPermission" /> sin restricciones; en caso contrario, devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Net.DnsPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina si la instancia de permiso actual es un subconjunto de la instancia de permiso especificada.</summary>
      <param name="target">Segunda instancia de <see cref="T:System.Net.DnsPermission" /> que se va a comprobar para la relación del subconjunto.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> no es <see cref="T:System.Net.DnsPermission" /> ni <see langword="null" />.</exception>
      <returns>Es <see langword="false" /> si la instancia actual no está restringida y <paramref name="target" /> es <see langword="null" /> o no está restringido; en caso contrario, es <see langword="true" />.</returns>
    </member>
    <member name="M:System.Net.DnsPermission.IsUnrestricted">
      <summary>Comprueba el estado de permiso global del objeto.</summary>
      <returns>Es <see langword="true" /> si la instancia de <see cref="T:System.Net.DnsPermission" /> se creó con <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.DnsPermission.ToXml">
      <summary>Crea una codificación XML de una instancia de <see cref="T:System.Net.DnsPermission" /> y su estado actual.</summary>
      <returns>Instancia de <see cref="T:System.Security.SecurityElement" /> que contiene una representación en código XML del objeto de seguridad, incluida la información de estado.</returns>
    </member>
    <member name="M:System.Net.DnsPermission.Union(System.Security.IPermission)">
      <summary>Crea una instancia de permiso que es la unión de la instancia de permiso actual y la instancia de permiso especificada.</summary>
      <param name="target">Instancia de <see cref="T:System.Net.DnsPermission" /> que se va a combinar con la instancia actual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> no es <see cref="T:System.Net.DnsPermission" /> ni <see langword="null" />.</exception>
      <returns>Instancia de <see cref="T:System.Net.DnsPermission" /> que representa la unión de la instancia de <see cref="T:System.Net.DnsPermission" /> actual y la instancia de <see cref="T:System.Net.DnsPermission" /> especificada. Si <paramref name="target" /> es <see langword="null" />, este método devuelve una copia de la instancia actual. Si la instancia actual o <paramref name="target" /> no tienen restricciones, este método devuelve una instancia de <see cref="T:System.Net.DnsPermission" /> sin restricciones; en caso contrario, devuelve una instancia de <see cref="T:System.Net.DnsPermission" /> con restricciones.</returns>
    </member>
    <member name="T:System.Net.DnsPermissionAttribute">
      <summary>Especifica los permisos para solicitar información a servidores de nombre de servicio (Domain Name Server, DNS).</summary>
    </member>
    <member name="M:System.Net.DnsPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.DnsPermissionAttribute" /> con el valor <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Uno de los valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="action" /> no es un valor <see cref="T:System.Security.Permissions.SecurityAction" /> válido.</exception>
    </member>
    <member name="M:System.Net.DnsPermissionAttribute.CreatePermission">
      <summary>Crea y devuelve una nueva instancia de la clase <see cref="T:System.Net.DnsPermission" />.</summary>
      <returns>
        <see cref="T:System.Net.DnsPermission" /> correspondiente a la declaración de seguridad.</returns>
    </member>
    <member name="T:System.Net.EndpointPermission">
      <summary>Define un extremo autorizado por una instancia de <see cref="T:System.Net.SocketPermission" />.</summary>
    </member>
    <member name="M:System.Net.EndpointPermission.Equals(System.Object)">
      <summary>Determina si el objeto <see langword="Object" /> especificado es igual al objeto <see langword="Object" /> actual.</summary>
      <param name="obj">Objeto <see cref="T:System.Object" /> que se va a comparar con el objeto <see langword="Object" /> actual.</param>
      <returns>
        <see langword="true" /> si el objeto <see langword="Object" /> especificado es igual al objeto <see langword="Object" /> actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.EndpointPermission.GetHashCode">
      <summary>Sirve como función de hash para un tipo concreto.</summary>
      <returns>Código hash para el objeto <see cref="T:System.Object" /> actual.</returns>
    </member>
    <member name="P:System.Net.EndpointPermission.Hostname">
      <summary>Obtiene el nombre de host DNS o la dirección IP del servidor asociado a este extremo.</summary>
      <returns>Cadena que contiene el nombre de host DNS (Sistema de nombre de dominio) o dirección IP del servidor.</returns>
    </member>
    <member name="P:System.Net.EndpointPermission.Port">
      <summary>Obtiene el número de puerto de red asociado a este extremo.</summary>
      <returns>Número de puerto de red asociado a esta solicitud o a <see cref="F:System.Net.SocketPermission.AllPorts" />.</returns>
    </member>
    <member name="P:System.Net.EndpointPermission.Transport">
      <summary>Obtiene el tipo de transporte asociado a este extremo.</summary>
      <returns>Uno de los valores de <see cref="T:System.Net.TransportType" />.</returns>
    </member>
    <member name="T:System.Net.Mail.SmtpAccess">
      <summary>Especifica el nivel de acceso permitido a un servidor SMTP (Protocolo simple de transferencia de correo).</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpAccess.Connect">
      <summary>Conexión a un host de SMTP en el puerto predeterminado (puerto 25).</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpAccess.ConnectToUnrestrictedPort">
      <summary>Conexión a un host de SMTP en cualquier puerto.</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpAccess.None">
      <summary>Sin acceso a un host SMTP.</summary>
    </member>
    <member name="T:System.Net.Mail.SmtpPermission">
      <summary>Controla el acceso a los servidores SMTP (Protocolo simple de transferencia de correo).</summary>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.#ctor(System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Mail.SmtpPermission" /> con el estado especificado.</summary>
      <param name="unrestricted">Es <see langword="true" /> si el nuevo permiso no está restringido; en caso contrario, es <see langword="false" />.</param>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.#ctor(System.Net.Mail.SmtpAccess)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Mail.SmtpPermission" /> utilizando el nivel de acceso especificado.</summary>
      <param name="access">Uno de los valores de <see cref="T:System.Net.Mail.SmtpAccess" />.</param>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Mail.SmtpPermission" /> utilizando el valor de estado de permiso especificado.</summary>
      <param name="state">Uno de los valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.AddPermission(System.Net.Mail.SmtpAccess)">
      <summary>Agrega el valor de nivel de acceso especificado al permiso.</summary>
      <param name="access">Uno de los valores de <see cref="T:System.Net.Mail.SmtpAccess" />.</param>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.Copy">
      <summary>Crea y devuelve una copia idéntica del permiso actual.</summary>
      <returns>Objeto <see cref="T:System.Net.Mail.SmtpPermission" /> que es idéntico al permiso actual.</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.FromXml(System.Security.SecurityElement)">
      <summary>Establece el estado del permiso utilizando la codificación XML especificada.</summary>
      <param name="securityElement">Codificación XML que se va a utilizar para establecer el estado del permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="securityElement" /> no describe un objeto <see cref="T:System.Net.Mail.SmtpPermission" />.  
  
o bien 
 El parámetro <paramref name="securityElement" /> no contiene la información de estado necesaria para reconstruir el permiso.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.Intersect(System.Security.IPermission)">
      <summary>Crea y devuelve un permiso que es la intersección del permiso actual y el permiso especificado.</summary>
      <param name="target">Interfaz <see cref="T:System.Security.IPermission" /> que va a formar una intersección con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> no es <see cref="T:System.Net.Mail.SmtpPermission" />.</exception>
      <returns>
        <see cref="T:System.Net.Mail.SmtpPermission" /> que representa la intersección entre el permiso actual y el permiso especificado. Devuelve <see langword="null" /> si la intersección está vacía o si el parámetro <paramref name="target" /> es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Devuelve un valor que indica si el permiso actual es un subconjunto del permiso especificado.</summary>
      <param name="target">Interfaz <see cref="T:System.Security.IPermission" /> que se va a comprobar para determinar la relación del subconjunto. Este permiso debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> no es <see cref="T:System.Net.Mail.SmtpPermission" />.</exception>
      <returns>
        <see langword="true" /> si el permiso actual es un subconjunto del permiso especificado; si no, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.IsUnrestricted">
      <summary>Devuelve un valor que indica si el permiso actual no está restringido.</summary>
      <returns>
        <see langword="true" /> si el permiso actual no está restringido; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.ToXml">
      <summary>Crea una codificación XML del estado del permiso.</summary>
      <returns>Objeto <see cref="T:System.Security.SecurityElement" /> que contiene una codificación XML del permiso actual.</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.Union(System.Security.IPermission)">
      <summary>Crea un permiso que es la unión del permiso actual y el permiso especificado.</summary>
      <param name="target">Interfaz <see cref="T:System.Security.IPermission" /> que va a combinarse con el permiso actual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> no es <see cref="T:System.Net.Mail.SmtpPermission" />.</exception>
      <returns>Nuevo permiso <see cref="T:System.Net.Mail.SmtpPermission" /> que representa la unión entre el permiso actual y el permiso especificado.</returns>
    </member>
    <member name="P:System.Net.Mail.SmtpPermission.Access">
      <summary>Obtiene el nivel de acceso a los servidores SMTP controlados por el permiso.</summary>
      <returns>Uno de los valores de <see cref="T:System.Net.Mail.SmtpAccess" />.</returns>
    </member>
    <member name="T:System.Net.Mail.SmtpPermissionAttribute">
      <summary>Controla el acceso a los servidores SMTP (Protocolo simple de transferencia de correo).</summary>
    </member>
    <member name="M:System.Net.Mail.SmtpPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Mail.SmtpPermissionAttribute" />.</summary>
      <param name="action">Uno de los valores de <see cref="T:System.Security.Permissions.SecurityAction" /> que especifica el comportamiento del permiso.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" /> no es un <see cref="T:System.Security.Permissions.SecurityAction" /> válido.</exception>
    </member>
    <member name="M:System.Net.Mail.SmtpPermissionAttribute.CreatePermission">
      <summary>Crea un objeto de permiso que puede almacenarse con el objeto <see cref="T:System.Security.Permissions.SecurityAction" /> en los metadatos de un ensamblado.</summary>
      <returns>Instancia de <see cref="T:System.Net.Mail.SmtpPermission" />.</returns>
    </member>
    <member name="P:System.Net.Mail.SmtpPermissionAttribute.Access">
      <summary>Obtiene o establece el nivel de acceso a los servidores SMTP controlados por el atributo.</summary>
      <returns>Valor <see cref="T:System.String" />. Los valores válidos son "Connect" y "None".</returns>
    </member>
    <member name="T:System.Net.NetworkAccess">
      <summary>Especifica los permisos de acceso a la red.</summary>
    </member>
    <member name="F:System.Net.NetworkAccess.Accept">
      <summary>Indica que la aplicación puede aceptar conexiones de Internet en un recurso local. Observe que se trata de una protección para el host local que utiliza Accept para conceder acceso a un recurso local (dirección/puerto). En el momento en que un socket intenta enlazar a este recurso local, se realiza una comprobación de permiso para averiguar si existe Accept en dicho recurso.</summary>
    </member>
    <member name="F:System.Net.NetworkAccess.Connect">
      <summary>Indica que la aplicación puede conectarse a recursos de Internet específicos. Observe que, en el caso de un recurso de host remoto, no se realiza ninguna comprobación para ver si existen permisos de tipo Connect. Esto es debido a que se desconoce el puerto de un host remoto que se conecta y no se pueden crear con antelación los permisos adecuados. Corresponde a la aplicación comprobar los permisos del host remoto que intenta conectar con un socket de escucha.</summary>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkInformationAccess">
      <summary>Especifica el permiso de acceso a información sobre interfaces de red y estadísticas de tráfico.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInformationAccess.None">
      <summary>Sin acceso a la información de red.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping">
      <summary>Acceso de comando ping a la información de red.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInformationAccess.Read">
      <summary>Acceso de lectura a la información de red.</summary>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkInformationPermission">
      <summary>Controla el acceso a la información de red y a las estadísticas de tráfico del equipo local. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.#ctor(System.Net.NetworkInformation.NetworkInformationAccess)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> usando el valor de <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" /> especificado.</summary>
      <param name="access">Uno de los valores de <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" />.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> con el objeto <see cref="T:System.Security.Permissions.PermissionState" /> especificado.</summary>
      <param name="state">Uno de los valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.AddPermission(System.Net.NetworkInformation.NetworkInformationAccess)">
      <summary>Agrega el valor especificado a este permiso.</summary>
      <param name="access">Uno de los valores de <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" />.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.Copy">
      <summary>Crea y devuelve una copia idéntica de este permiso.</summary>
      <returns>Objeto <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> que es idéntico al permiso actual.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.FromXml(System.Security.SecurityElement)">
      <summary>Establece el estado de este permiso utilizando la codificación XML especificada.</summary>
      <param name="securityElement">Objeto <see cref="T:System.Security.SecurityElement" /> que contiene la codificación XML que se va a utilizar para establecer el estado del permiso actual</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="securityElement" /> no es una codificación del permiso.  
  
o bien 
 El parámetro <paramref name="securityElement" /> no es una codificación de un objeto <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" />.  
  
o bien 
 El parámetro <paramref name="securityElement" /> tiene valores de <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" /> que no son válidos.</exception>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.Intersect(System.Security.IPermission)">
      <summary>Crea y devuelve un permiso que es la intersección del permiso actual y el permiso especificado.</summary>
      <param name="target">Interfaz <see cref="T:System.Security.IPermission" /> que va a formar una intersección con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> no es un <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" />.</exception>
      <returns>Objeto <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> que representa la intersección entre el permiso actual y el permiso especificado. Este nuevo permiso es <see langword="null" /> si la intersección está vacía o si el parámetro<paramref name="target" /> es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina si el permiso actual es un subconjunto del permiso especificado.</summary>
      <param name="target">Interfaz <see cref="T:System.Security.IPermission" /> que se va a comprobar para determinar la relación del subconjunto. Este permiso debe ser del mismo tipo que el permiso actual.</param>
      <returns>
        <see langword="true" /> si el permiso actual es un subconjunto del permiso especificado; si no, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.IsUnrestricted">
      <summary>Devuelve un valor que indica si el permiso actual no está restringido.</summary>
      <returns>
        <see langword="true" /> si el permiso actual no está restringido; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.ToXml">
      <summary>Crea una codificación XML del estado de este permiso.</summary>
      <returns>Objeto <see cref="T:System.Security.SecurityElement" /> que contiene la codificación XML del permiso actual.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.Union(System.Security.IPermission)">
      <summary>Crea un permiso que consiste en la unión de este permiso y el permiso especificado.</summary>
      <param name="target">Permiso <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> que se va a combinar con el permiso actual.</param>
      <returns>Nuevo permiso que representa la unión del permiso actual y el permiso especificado.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.NetworkInformationPermission.Access">
      <summary>Obtiene el nivel de acceso a la información de red controlada por este permiso.</summary>
      <returns>Uno de los valores de <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" />.</returns>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkInformationPermissionAttribute">
      <summary>Permite acciones de seguridad de <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> para que se apliquen al código mediante seguridad declarativa.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.NetworkInformation.NetworkInformationPermissionAttribute" />.</summary>
      <param name="action">Valor de <see cref="T:System.Security.Permissions.SecurityAction" /> que especifica el comportamiento del permiso.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermissionAttribute.CreatePermission">
      <summary>Crea y devuelve un nuevo objeto <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" />.</summary>
      <returns>
        <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> que se corresponde con este atributo.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.NetworkInformationPermissionAttribute.Access">
      <summary>Obtiene o establece el nivel de acceso a la información de red.</summary>
      <returns>Una cadena que especifica el nivel de acceso.</returns>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission">
      <summary>Especifica los valores que definen los permisos del objeto <see cref="N:System.Net.PeerToPeer.Collaboration" /> o se usan en ellos.</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />. La inicial <see cref="T:System.Security.Permissions.PermissionState" /> para esta instancia se pasa cuando se llama al constructor.</summary>
      <param name="state">Uno de los valores de la enumeración <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy">
      <summary>Crea y devuelve una copia del objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> actual.</summary>
      <returns>
        <see cref="T:System.Object" /> que contiene una copia de la instancia actual de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />.</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)">
      <summary>Representa el modelo de objetos XML para codificar objetos de seguridad.</summary>
      <param name="e">Codificación XML que se usa para reconstruir el permiso.</param>
      <exception cref="T:System.ArgumentException">El parámetro no es un elemento de permiso válido.

o bien

El parámetro no contiene un tipo o clase válidos.

o bien

No se admite el número de la versión del parámetro.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro es una referencia <see langword="null" /> (<see langword="Nothing" /> en Visual Basic).</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)">
      <summary>Crea y devuelve un permiso que es la intersección entre el objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> actual y el permiso <paramref name="target" /> especificado.</summary>
      <param name="target">Permiso para <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)" /> con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro de destino no es una referencia <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) y no es una instancia de la misma clase que el permiso actual.</exception>
      <returns>Nuevo permiso que representa la intersección entre el objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> actual y el permiso <paramref name="target" /> especificado. Este nuevo permiso es una referencia <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) si la intersección está vacía.</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina si el objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> actual es un subconjunto del permiso <paramref name="target" /> especificado.</summary>
      <param name="target">Permiso que se va a probar para la relación de subconjunto. Este permiso debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro es una referencia <see langword="null" /> (<see langword="Nothing" /> en Visual Basic).</exception>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> actual es un subconjunto del permiso especificado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted">
      <summary>Devuelve un valor que especifica si el objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> actual no tiene restricciones.</summary>
      <returns>
        <see langword="true" /> si el permiso actual no está restringido; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.ToXml">
      <summary>Crea una codificación XML de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> y de su estado actual.</summary>
      <returns>Codificación XML del permiso, incluida cualquier información de estado.</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)">
      <summary>Crea un permiso que consiste en la unión del objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> actual y del permiso <paramref name="target" /> especificado.</summary>
      <param name="target">Permiso para combinar con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro es una referencia <see langword="null" /> (<see langword="Nothing" /> en Visual Basic).</exception>
      <returns>Nuevo permiso que representa el método <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)" /> del objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> actual y del permiso especificado.</returns>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute">
      <summary>Permite acciones de seguridad de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> para que se apliquen al código mediante seguridad declarativa. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" /> con el objeto <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Especifica un valor de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.CreatePermission">
      <summary>Crea y devuelve un nuevo objeto <see cref="T:System.Security.IPermission" />.</summary>
      <returns>Un nuevo objeto <see cref="T:System.Security.IPermission" />.</returns>
    </member>
    <member name="T:System.Net.PeerToPeer.PnrpPermission">
      <summary>Especifica los valores que se usan en los permisos del objeto <see cref="N:System.Net.PeerToPeer" />.</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> con el estado de permiso inicial suministrado.</summary>
      <param name="state">Uno de los valores de la enumeración <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.Copy">
      <summary>Crea y devuelve una copia idéntica del objeto <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> actual.</summary>
      <exception cref="T:System.ArgumentException">El parámetro no es un elemento <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> válido.

o bien

No se admite el número de la versión del parámetro.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro es una referencia <see langword="null" /> (<see langword="Nothing" /> en Visual Basic).</exception>
      <returns>Objeto con una interfaz IPermission cuya instancia contiene una copia de la instancia actual de <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un objeto de seguridad con un estado especificado a partir de codificación XML.</summary>
      <param name="e">Codificación XML que se usa para reconstruir el permiso.</param>
      <exception cref="T:System.ArgumentException">El parámetro no es un elemento <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> válido.

o bien

No se admite el número de la versión del parámetro.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro es una referencia <see langword="null" /> (<see langword="Nothing" /> en Visual Basic).</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)">
      <summary>Crea y devuelve un permiso que es la intersección entre el objeto <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> actual y el permiso especificado.</summary>
      <param name="target">Permiso para el método <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" /> con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro de destino no es una referencia <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) y no es una instancia de la misma clase que el permiso actual.</exception>
      <returns>Nuevo permiso que representa la intersección entre el objeto <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> actual y el permiso especificado. Este nuevo permiso es una referencia <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) si la intersección está vacía.</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina si el objeto <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> actual es un subconjunto del permiso especificado.</summary>
      <param name="target">Permiso que se va a probar para la relación de subconjunto. Este permiso debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro de destino no es una referencia <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) y no es una instancia de la misma clase que el permiso actual.</exception>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> actual es un subconjunto del permiso especificado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted">
      <summary>Devuelve un valor que especifica si el objeto <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> actual no tiene restricciones.</summary>
      <returns>
        <see langword="true" /> si el permiso actual no está restringido; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.ToXml">
      <summary>Crea una codificación XML de <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> y de su estado actual.</summary>
      <returns>Objeto <see cref="T:System.Security.SecurityElement" /> que contiene una codificación XML del permiso, incluida la información de estado.</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)">
      <summary>Crea un permiso que consiste en la unión del objeto <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> actual y del permiso especificado.</summary>
      <param name="target">Permiso para combinar con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es válido.</exception>
      <returns>Nuevo permiso que representa el método <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /> del objeto <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> actual y del permiso especificado.</returns>
    </member>
    <member name="T:System.Net.PeerToPeer.PnrpPermissionAttribute">
      <summary>Permite acciones de seguridad de <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> para que se apliquen al código mediante seguridad declarativa.</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" /> con el objeto <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Uno de los valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermissionAttribute.CreatePermission">
      <summary>Crea y devuelve un nuevo objeto <see cref="T:System.Security.IPermission" />.</summary>
      <returns>Un nuevo objeto <see cref="T:System.Security.IPermission" />.</returns>
    </member>
    <member name="T:System.Net.PeerToPeer.PnrpScope">
      <summary>Especifica los ámbitos diferentes de una nube PNRP.</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.All">
      <summary>Todas las direcciones IP se pueden registrar con el PNRP <see cref="T:System.Net.PeerToPeer.Cloud" />. No hay ninguna diferencia entre cualquier ámbito y todos los ámbitos.</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.Global">
      <summary>El ámbito es global; todas las direcciones IP válidas se pueden registrar con el PNRP <see cref="T:System.Net.PeerToPeer.Cloud" />.</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.LinkLocal">
      <summary>El ámbito es local de vínculo; sólo las direcciones IP definidas para la subred del área local se pueden registrar con el PNRP <see cref="T:System.Net.PeerToPeer.Cloud" />.</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.SiteLocal">
      <summary>El ámbito es local de sitio; sólo las direcciones IP definidas para el sitio se puede registrar con el PNRP.</summary>
    </member>
    <member name="T:System.Net.SocketPermission">
      <summary>Controla los derechos para realizar o aceptar conexiones en una dirección de transporte.</summary>
    </member>
    <member name="F:System.Net.SocketPermission.AllPorts">
      <summary>Define una constante que representa todos los puertos.</summary>
    </member>
    <member name="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.SocketPermission" /> para la dirección de transporte dada con el permiso especificado.</summary>
      <param name="access">Uno de los valores de <see cref="T:System.Net.NetworkAccess" />.</param>
      <param name="transport">Uno de los valores de <see cref="T:System.Net.TransportType" />.</param>
      <param name="hostName">Nombre de host para la dirección de transporte.</param>
      <param name="portNumber">Número de puerto para la dirección de transporte.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostName" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.SocketPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.SocketPermission" /> que permite acceso DNS no restringido a <see cref="T:System.Net.Sockets.Socket" /> o lo deniega a <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <param name="state">Uno de los valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
      <summary>Agrega un permiso al conjunto de permisos para una dirección de transporte.</summary>
      <param name="access">Uno de los valores de <see cref="T:System.Net.NetworkAccess" />.</param>
      <param name="transport">Uno de los valores de <see cref="T:System.Net.TransportType" />.</param>
      <param name="hostName">Nombre de host para la dirección de transporte.</param>
      <param name="portNumber">Número de puerto para la dirección de transporte.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostName" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.SocketPermission.Copy">
      <summary>Crea una copia de una instancia de <see cref="T:System.Net.SocketPermission" />.</summary>
      <returns>Nueva instancia de la clase <see cref="T:System.Net.SocketPermission" /> que es una copia de la instancia actual.</returns>
    </member>
    <member name="M:System.Net.SocketPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye una instancia de <see cref="T:System.Net.SocketPermission" /> para una codificación XML.</summary>
      <param name="securityElement">Codificación XML utilizada para reconstruir la instancia de <see cref="T:System.Net.SocketPermission" />.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="securityElement" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> no es un elemento de permiso para este tipo.</exception>
    </member>
    <member name="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
      <summary>Devuelve la intersección lógica entre dos instancias de <see cref="T:System.Net.SocketPermission" />.</summary>
      <param name="target">Instancia de <see cref="T:System.Net.SocketPermission" /> que forma una intersección con la instancia actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es un atributo <see cref="T:System.Net.SocketPermission" />.</exception>
      <exception cref="T:System.Security.SecurityException">No se concede <see cref="T:System.Net.DnsPermission" /> al llamador del método.</exception>
      <returns>Instancia de <see cref="T:System.Net.SocketPermission" /> que representa la intersección de dos instancias de <see cref="T:System.Net.SocketPermission" />. Si la intersección está vacía, el método devuelve una referencia <see langword="null" />. Si el parámetro <paramref name="target" /> es una referencia nula, el método devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina si el permiso actual es un subconjunto del permiso especificado.</summary>
      <param name="target">
        <see cref="T:System.Net.SocketPermission" /> que se va a probar para la relación del subconjunto.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> no es un <see cref="T:System.Net.Sockets.SocketException" />.</exception>
      <exception cref="T:System.Security.SecurityException">No se concede <see cref="T:System.Net.DnsPermission" /> al llamador del método.</exception>
      <returns>Si <paramref name="target" /> es <see langword="null" />, este método devuelve <see langword="true" /> cuando la instancia actual no define permisos; en caso contrario, devuelve <see langword="false" />. Si <paramref name="target" /> no es <see langword="null" />, este método devuelve <see langword="true" /> cuando la instancia actual define un subconjunto de permisos <paramref name="target" /> ; en caso contrario, devuelve <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.SocketPermission.IsUnrestricted">
      <summary>Comprueba el estado de permiso global del objeto.</summary>
      <returns>Es <see langword="true" /> si la instancia de <see cref="T:System.Net.SocketPermission" /> se creó con el valor <see langword="Unrestricted" /> de <see cref="T:System.Security.Permissions.PermissionState" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.SocketPermission.ToXml">
      <summary>Crea una codificación XML de una instancia de <see cref="T:System.Net.SocketPermission" /> y su estado actual.</summary>
      <returns>Una instancia de <see cref="T:System.Security.SecurityElement" /> que contiene una representación en código XML de la instancia de <see cref="T:System.Net.SocketPermission" />, incluida la información de estado.</returns>
    </member>
    <member name="M:System.Net.SocketPermission.Union(System.Security.IPermission)">
      <summary>Devuelve la unión lógica entre dos instancias de <see cref="T:System.Net.SocketPermission" />.</summary>
      <param name="target">Instancia de <see cref="T:System.Net.SocketPermission" /> que se va a combinar con la instancia actual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> no es un <see cref="T:System.Net.SocketPermission" />.</exception>
      <returns>Instancia de <see cref="T:System.Net.SocketPermission" /> que representa la unión de dos instancias de <see cref="T:System.Net.SocketPermission" />. Si el parámetro <paramref name="target" /> es <see langword="null" />, devuelve una copia de la instancia actual.</returns>
    </member>
    <member name="P:System.Net.SocketPermission.AcceptList">
      <summary>Obtiene una lista de instancias de <see cref="T:System.Net.EndpointPermission" /> que identifican los extremos que se pueden aceptar bajo esta instancia de permiso.</summary>
      <returns>Una instancia que implementa la interfaz <see cref="T:System.Collections.IEnumerator" /> que contiene las instancias de <see cref="T:System.Net.EndpointPermission" />.</returns>
    </member>
    <member name="P:System.Net.SocketPermission.ConnectList">
      <summary>Obtiene una lista de instancias de <see cref="T:System.Net.EndpointPermission" /> que identifican los extremos con los que se puede establecer una conexión bajo esta instancia de permiso.</summary>
      <returns>Una instancia que implementa la interfaz <see cref="T:System.Collections.IEnumerator" /> que contiene las instancias de <see cref="T:System.Net.EndpointPermission" />.</returns>
    </member>
    <member name="T:System.Net.SocketPermissionAttribute">
      <summary>Especifica acciones de seguridad para controlar conexiones <see cref="T:System.Net.Sockets.Socket" />. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Net.SocketPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.SocketPermissionAttribute" /> con el valor <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Uno de los valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" /> no es un valor <see cref="T:System.Security.Permissions.SecurityAction" /> válido.</exception>
    </member>
    <member name="M:System.Net.SocketPermissionAttribute.CreatePermission">
      <summary>Crea y devuelve una nueva instancia de la clase <see cref="T:System.Net.SocketPermission" />.</summary>
      <exception cref="T:System.ArgumentException">Una o varias de las propiedades <see cref="P:System.Net.SocketPermissionAttribute.Access" />, <see cref="P:System.Net.SocketPermissionAttribute.Host" />, <see cref="P:System.Net.SocketPermissionAttribute.Transport" /> o <see cref="P:System.Net.SocketPermissionAttribute.Port" /> de la instancia actual es <see langword="null" />.</exception>
      <returns>Instancia de la clase <see cref="T:System.Net.SocketPermission" /> correspondiente a la declaración de seguridad.</returns>
    </member>
    <member name="P:System.Net.SocketPermissionAttribute.Access">
      <summary>Obtiene o establece el método de acceso a la red que permite este <see cref="T:System.Net.SocketPermissionAttribute" />.</summary>
      <exception cref="T:System.ArgumentException">La propiedad <see cref="P:System.Net.SocketPermissionAttribute.Access" /> no es <see langword="null" /> cuando se intenta establecer el valor. Para especificar más de un método Access, utilice una instrucción de declaración de atributo adicional.</exception>
      <returns>Cadena que contiene el método de acceso a la red que permite esta instancia de <see cref="T:System.Net.SocketPermissionAttribute" />. Los valores válidos son "Accept" y "Connect."</returns>
    </member>
    <member name="P:System.Net.SocketPermissionAttribute.Host">
      <summary>Obtiene o establece el nombre de host DNS o la dirección IP especificada por este <see cref="T:System.Net.SocketPermissionAttribute" />.</summary>
      <exception cref="T:System.ArgumentException">El valor de la propiedad <see cref="P:System.Net.SocketPermissionAttribute.Host" /> no es <see langword="null" /> cuando se intenta establecer. Para especificar más de un host, utilice una instrucción de declaración de atributo adicional.</exception>
      <returns>Cadena que contiene el nombre de host DNS o dirección IP asociada con esta instancia de <see cref="T:System.Net.SocketPermissionAttribute" />.</returns>
    </member>
    <member name="P:System.Net.SocketPermissionAttribute.Port">
      <summary>Obtiene o establece el número de puerto asociado con este <see cref="T:System.Net.SocketPermissionAttribute" />.</summary>
      <exception cref="T:System.ArgumentException">La propiedad <see cref="P:System.Net.SocketPermissionAttribute.Port" /> es <see langword="null" /> cuando se intenta establecer el valor. Para especificar más de un puerto, utilice una instrucción de declaración de atributo adicional.</exception>
      <returns>Cadena que contiene el número de puerto asociado con esta instancia de <see cref="T:System.Net.SocketPermissionAttribute" />.</returns>
    </member>
    <member name="P:System.Net.SocketPermissionAttribute.Transport">
      <summary>Obtiene o establece el objeto <see cref="T:System.Net.TransportType" /> especificado por este <see cref="T:System.Net.SocketPermissionAttribute" />.</summary>
      <exception cref="T:System.ArgumentException">El valor de la propiedad <see cref="P:System.Net.SocketPermissionAttribute.Transport" /> no es <see langword="null" /> cuando se intenta establecer. Para especificar más de un tipo de transporte, utilice una instrucción de declaración de atributo adicional.</exception>
      <returns>Cadena que contiene el <see cref="T:System.Net.TransportType" /> asociado con este <see cref="T:System.Net.SocketPermissionAttribute" />.</returns>
    </member>
    <member name="T:System.Net.TransportType">
      <summary>Define tipos de transporte para las clases <see cref="T:System.Net.SocketPermission" /> y <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.TransportType.All">
      <summary>Todos los tipos de transporte.</summary>
    </member>
    <member name="F:System.Net.TransportType.Connectionless">
      <summary>El tipo de transporte es un tipo sin conexión, como UDP. La especificación de este valor tiene el mismo efecto que la especificación de <see cref="F:System.Net.TransportType.Udp" />.</summary>
    </member>
    <member name="F:System.Net.TransportType.ConnectionOriented">
      <summary>El transporte está orientado a conexiones, como TCP. La especificación de este valor tiene el mismo efecto que la especificación de <see cref="F:System.Net.TransportType.Tcp" />.</summary>
    </member>
    <member name="F:System.Net.TransportType.Tcp">
      <summary>Transporte TCP.</summary>
    </member>
    <member name="F:System.Net.TransportType.Udp">
      <summary>Transporte UDP.</summary>
    </member>
    <member name="T:System.Net.WebPermission">
      <summary>Controla los derechos de acceso a los recursos HTTP de Internet.</summary>
    </member>
    <member name="M:System.Net.WebPermission.#ctor">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.Net.WebPermission" />.</summary>
    </member>
    <member name="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.WebPermission" /> con los derechos de acceso especificados para el URI indicado.</summary>
      <param name="access">Valor de NetworkAccess que indica el tipo de acceso que se debe conceder al URI especificado. <see cref="F:System.Net.NetworkAccess.Accept" /> indica que la aplicación puede aceptar conexiones de Internet en un recurso local. <see cref="F:System.Net.NetworkAccess.Connect" /> indica que la aplicación puede conectarse a recursos de Internet específicos.</param>
      <param name="uriString">Cadena URI a la que se conceden derechos de acceso.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriString" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.WebPermission" /> con los derechos de acceso especificados para la expresión regular URI indicada.</summary>
      <param name="access">Valor de <see cref="T:System.Net.NetworkAccess" /> que indica el tipo de acceso que se debe conceder al URI especificado. <see cref="F:System.Net.NetworkAccess.Accept" /> indica que la aplicación puede aceptar conexiones de Internet en un recurso local. <see cref="F:System.Net.NetworkAccess.Connect" /> indica que la aplicación puede conectarse a recursos de Internet específicos.</param>
      <param name="uriRegex">Una expresión regular que describe el URI al que se concede acceso.</param>
    </member>
    <member name="M:System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.Net.WebPermission" /> que aprueba todas las solicitudes o las desaprueba.</summary>
      <param name="state">Valor <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)">
      <summary>Agrega la cadena URI especificada con los derechos de acceso indicados al <see cref="T:System.Net.WebPermission" /> actual.</summary>
      <param name="access">
        <see cref="T:System.Net.NetworkAccess" /> que especifica los derechos de acceso que se conceden al URI.</param>
      <param name="uriString">Cadena que describe el URI al que se conceden derechos de acceso.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriString" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
      <summary>Agrega el URI especificado con los derechos de acceso indicados al <see cref="T:System.Net.WebPermission" /> actual.</summary>
      <param name="access">NetworkAccess que especifica los derechos de acceso que se conceden al URI.</param>
      <param name="uriRegex">Expresión regular que describe el conjunto de identificadores URI a los que se va a conceder derechos de acceso.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="uriRegex" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.WebPermission.Copy">
      <summary>Crea una copia de un objeto <see cref="T:System.Net.WebPermission" />.</summary>
      <returns>Una nueva instancia de la clase <see cref="T:System.Net.WebPermission" /> con los mismos valores que la original.</returns>
    </member>
    <member name="M:System.Net.WebPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un <see cref="T:System.Net.WebPermission" /> a partir de codificación XML.</summary>
      <param name="securityElement">Codificación XML desde la cual se reconstruye el <see cref="T:System.Net.WebPermission" />.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="securityElement" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> no es un elemento de permiso para este tipo.</exception>
    </member>
    <member name="M:System.Net.WebPermission.Intersect(System.Security.IPermission)">
      <summary>Devuelve la intersección lógica entre dos instancias de <see cref="T:System.Net.WebPermission" />.</summary>
      <param name="target">Objeto <see cref="T:System.Net.WebPermission" /> que se va a comparar con la instancia actual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> no es <see langword="null" />, o bien no es de tipo <see cref="T:System.Net.WebPermission" />.</exception>
      <returns>Nuevo <see cref="T:System.Net.WebPermission" /> que representa la intersección de la instancia actual y el parámetro <paramref name="target" />. Si la intersección está vacía, el método devuelve una referencia <see langword="null" />.</returns>
    </member>
    <member name="M:System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina si el <see cref="T:System.Net.WebPermission" /> actual es un subconjunto del objeto especificado.</summary>
      <param name="target">
        <see cref="T:System.Net.WebPermission" /> que se va a comparar con el <see cref="T:System.Net.WebPermission" /> actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro de destino no es una instancia de <see cref="T:System.Net.WebPermission" />.</exception>
      <exception cref="T:System.NotSupportedException">La instancia actual contiene un derecho con codificación Regex y no se encuentra exactamente el mismo derecho de la instancia de destino.</exception>
      <returns>Es <see langword="true" /> si la instancia actual es un subconjunto del parámetro <paramref name="target" />; en caso contrario, es <see langword="false" />. Si el destino es <see langword="null" />, el método devuelve <see langword="true" /> para un permiso actual vacío que no esté restringido; en caso contrario, devuelve <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.WebPermission.IsUnrestricted">
      <summary>Comprueba el estado de permiso global del <see cref="T:System.Net.WebPermission" />.</summary>
      <returns>Es <see langword="true" /> si <see cref="T:System.Net.WebPermission" /> se ha creado con <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /><see cref="T:System.Security.Permissions.PermissionState" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.WebPermission.ToXml">
      <summary>Crea una codificación XML de un <see cref="T:System.Net.WebPermission" /> y su estado actual.</summary>
      <returns>
        <see cref="T:System.Security.SecurityElement" /> que contiene una representación en código XML del <see cref="T:System.Net.WebPermission" />, incluida la información de estado.</returns>
    </member>
    <member name="M:System.Net.WebPermission.Union(System.Security.IPermission)">
      <summary>Devuelve la unión lógica entre dos instancias de la clase <see cref="T:System.Net.WebPermission" />.</summary>
      <param name="target">
        <see cref="T:System.Net.WebPermission" /> que se va a combinar con el <see cref="T:System.Net.WebPermission" /> actual.</param>
      <exception cref="T:System.ArgumentException">El destino no es <see langword="null" />, o bien no es de tipo <see cref="T:System.Net.WebPermission" />.</exception>
      <returns>Un <see cref="T:System.Net.WebPermission" /> que representa la unión de la instancia actual y el parámetro <paramref name="target" />. Si uno de los <see langword="WebPermission" /> es <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />, el método devuelve un <see cref="T:System.Net.WebPermission" /> que es <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Si el destino es <see langword="null" />, devuelve una copia del <see cref="T:System.Net.WebPermission" /> actual.</returns>
    </member>
    <member name="P:System.Net.WebPermission.AcceptList">
      <summary>Esta propiedad devuelve una enumeración de los permisos de aceptación única que ostenta este <see cref="T:System.Net.WebPermission" />. Los tipos de objeto posibles que contiene la enumeración que se devuelve son <see cref="T:System.String" /> y <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <returns>Interfaz <see cref="T:System.Collections.IEnumerator" /> que contiene permisos de aceptación.</returns>
    </member>
    <member name="P:System.Net.WebPermission.ConnectList">
      <summary>Esta propiedad devuelve una enumeración de los permisos de conexión única que ostenta este <see cref="T:System.Net.WebPermission" />. Los tipos de objeto posibles que contiene la enumeración que se devuelve son <see cref="T:System.String" /> y <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <returns>Interfaz <see cref="T:System.Collections.IEnumerator" /> que contiene permisos de conexión.</returns>
    </member>
    <member name="T:System.Net.WebPermissionAttribute">
      <summary>Especifica permisos de acceso para recursos de Internet. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Net.WebPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.WebPermissionAttribute" /> con un valor que especifica las acciones de seguridad que pueden ejecutarse sobre esta clase.</summary>
      <param name="action">Uno de los valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" /> no es un valor <see cref="T:System.Security.Permissions.SecurityAction" /> válido.</exception>
    </member>
    <member name="M:System.Net.WebPermissionAttribute.CreatePermission">
      <summary>Crea y devuelve una nueva instancia de la clase <see cref="T:System.Net.WebPermission" />.</summary>
      <returns>Un <see cref="T:System.Net.WebPermission" /> correspondiente a la declaración de seguridad.</returns>
    </member>
    <member name="P:System.Net.WebPermissionAttribute.Accept">
      <summary>Obtiene o establece la cadena URI aceptada por el <see cref="T:System.Net.WebPermissionAttribute" /> actual.</summary>
      <exception cref="T:System.ArgumentException">El valor de la propiedad <see cref="P:System.Net.WebPermissionAttribute.Accept" /> no es <see langword="null" /> cuando se intenta establecer. Si desea especificar que se acepte más de un URI, utilice una instrucción de declaración de atributo adicional.</exception>
      <returns>Una cadena que contiene el URI aceptado por el <see cref="T:System.Net.WebPermissionAttribute" /> actual.</returns>
    </member>
    <member name="P:System.Net.WebPermissionAttribute.AcceptPattern">
      <summary>Obtiene o establece un modelo de expresiones regulares que describe el URI aceptado por el <see cref="T:System.Net.WebPermissionAttribute" /> actual.</summary>
      <exception cref="T:System.ArgumentException">El valor de la propiedad <see cref="P:System.Net.WebPermissionAttribute.AcceptPattern" /> no es <see langword="null" /> cuando se intenta establecer. Si desea especificar que se acepte más de un URI, utilice una instrucción de declaración de atributo adicional.</exception>
      <returns>Cadena que contiene un modelo de expresiones regulares que describe el URI aceptado por el <see cref="T:System.Net.WebPermissionAttribute" /> actual. Esta cadena debe establecerse como secuencia de escape de acuerdo con las reglas para codificar una cadena constructora <see cref="T:System.Text.RegularExpressions.Regex" />.</returns>
    </member>
    <member name="P:System.Net.WebPermissionAttribute.Connect">
      <summary>Obtiene o establece la cadena de conexión URI controlada por el <see cref="T:System.Net.WebPermissionAttribute" /> actual.</summary>
      <exception cref="T:System.ArgumentException">El valor de la propiedad <see cref="P:System.Net.WebPermissionAttribute.Connect" /> no es <see langword="null" /> cuando se intenta establecer. Si desea especificar más de un URI de conexión, utilice una instrucción de declaración de atributo adicional.</exception>
      <returns>Una cadena que contiene la conexión URI controlada por el <see cref="T:System.Net.WebPermissionAttribute" /> actual.</returns>
    </member>
    <member name="P:System.Net.WebPermissionAttribute.ConnectPattern">
      <summary>Obtiene o establece un modelo de expresiones regulares que describe la conexión URI controlada por el <see cref="T:System.Net.WebPermissionAttribute" /> actual.</summary>
      <exception cref="T:System.ArgumentException">El valor de la propiedad <see cref="P:System.Net.WebPermissionAttribute.ConnectPattern" /> no es <see langword="null" /> cuando se intenta establecer. Si desea especificar más de un URI de conexión, utilice una instrucción de declaración de atributo adicional.</exception>
      <returns>Una cadena que contiene un modelo de expresiones regulares que describe la conexión URI controlada por este <see cref="T:System.Net.WebPermissionAttribute" />.</returns>
    </member>
    <member name="T:System.Security.CodeAccessPermission">
      <summary>Define la estructura subyacente de todos los permisos de acceso del código.</summary>
    </member>
    <member name="M:System.Security.CodeAccessPermission.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.CodeAccessPermission" />.</summary>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Assert">
      <summary>Declara que el código de llamada puede tener acceso al recurso protegido por una demanda de permiso a través del código que llama a este método, incluso si los autores de la llamada situados en una posición más alta de la pila no tienen permiso para tener acceso al recurso. El uso de <see cref="M:System.Security.CodeAccessPermission.Assert" /> puede crear problemas de seguridad.</summary>
      <exception cref="T:System.Security.SecurityException">El código de llamada no tiene <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" />.  
  
O bien 
Ya hay una <see cref="M:System.Security.CodeAccessPermission.Assert" /> activa para el marco actual.</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Copy">
      <summary>Cuando se implementa mediante una clase derivada, crea y devuelve una copia idéntica del objeto de permiso actual.</summary>
      <returns>Copia del objeto de permiso actual.</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Demand">
      <summary>Fuerza a un <see cref="T:System.Security.SecurityException" /> en tiempo de ejecución si todos los autores de llamada situados en la parte superior de la pila de llamadas no disponen del permiso especificado por la instancia actual.</summary>
      <exception cref="T:System.Security.SecurityException">Un autor de llamada situado más arriba en la pila de llamadas no tiene el permiso especificado por la instancia actual.  
  
O bien 
Un autor de llamada situado más arriba en la pila de llamadas ha llamado a <see cref="M:System.Security.CodeAccessPermission.Deny" /> en el objeto de permiso actual.</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Deny">
      <summary>Impide que los autores de la llamada situados en la posición más alta de la pila de llamadas usen el código que llama a este método para tener acceso al recurso especificado por la instancia actual.</summary>
      <exception cref="T:System.Security.SecurityException">Ya hay una <see cref="M:System.Security.CodeAccessPermission.Deny" /> activa para el marco actual.</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Equals(System.Object)">
      <summary>Determina si el objeto <see cref="T:System.Security.CodeAccessPermission" /> especificado es igual al objeto <see cref="T:System.Security.CodeAccessPermission" /> actual.</summary>
      <param name="obj">Objeto <see cref="T:System.Security.CodeAccessPermission" /> que se va a comparar con el objeto <see cref="T:System.Security.CodeAccessPermission" /> actual.</param>
      <returns>Es <see langword="true" /> si el objeto <see cref="T:System.Security.CodeAccessPermission" /> especificado es igual al objeto <see cref="T:System.Security.CodeAccessPermission" /> actual; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.FromXml(System.Security.SecurityElement)">
      <summary>Cuando se invalida en una clase derivada, reconstruye un objeto de seguridad con un estado especificado a partir de codificación XML.</summary>
      <param name="elem">Codificación XML que se usará para reconstruir el objeto de seguridad.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="elem" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="elem" /> no contiene la codificación XML para una instancia del mismo tipo que la instancia actual.  
  
O bien 
No se admite el número de la versión del parámetro <paramref name="elem" />.</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.GetHashCode">
      <summary>Obtiene un código hash para el objeto <see cref="T:System.Security.CodeAccessPermission" /> que es adecuado para su uso en algoritmos hash y estructuras de datos como una tabla hash.</summary>
      <returns>Código hash para el objeto <see cref="T:System.Security.CodeAccessPermission" /> actual.</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Intersect(System.Security.IPermission)">
      <summary>Cuando se implementa mediante una clase derivada, se crea y se devuelve un permiso que es la intersección del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para formar intersección con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es una instancia de la misma clase que el permiso actual.</exception>
      <returns>Nuevo permiso que representa la intersección del permiso actual y del permiso especificado. Este nuevo permiso es <see langword="null" /> si la intersección está vacía.</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Cuando se implementa mediante una clase derivada, determina si el permiso actual es un subconjunto del permiso especificado.</summary>
      <param name="target">Permiso que se va a probar para la relación de subconjunto. Este permiso debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</exception>
      <returns>
        <see langword="true" /> si el permiso actual es un subconjunto del permiso especificado; si no, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.PermitOnly">
      <summary>Impide que los llamadores situados más arriba en la pila de llamadas usen el código que llama a este método para tener acceso a todos los recursos excepto al recurso especificado por la instancia actual.</summary>
      <exception cref="T:System.Security.SecurityException">Ya hay una <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> activa para el marco actual.</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.RevertAll">
      <summary>Provoca que se eliminen todos los reemplazos anteriores del marco actual y que ya no estén en vigor.</summary>
      <exception cref="T:System.InvalidOperationException">No hay ningún <see cref="M:System.Security.CodeAccessPermission.Assert" />, <see cref="M:System.Security.CodeAccessPermission.Deny" /> o <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> anterior para el marco actual.</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.RevertAssert">
      <summary>Provoca que se elimine y deje de tener efecto cualquier <see cref="M:System.Security.CodeAccessPermission.Assert" /> anterior para el fotograma actual.</summary>
      <exception cref="T:System.InvalidOperationException">No hay ningún <see cref="M:System.Security.CodeAccessPermission.Assert" /> anterior para el marco actual.</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.RevertDeny">
      <summary>Provoca que se elimine y deje de tener efecto cualquier <see cref="M:System.Security.CodeAccessPermission.Deny" /> anterior para el fotograma actual.</summary>
      <exception cref="T:System.InvalidOperationException">No hay ningún <see cref="M:System.Security.CodeAccessPermission.Deny" /> anterior para el marco actual.</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.RevertPermitOnly">
      <summary>Provoca que se elimine y deje de tener efecto cualquier <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> anterior para el fotograma actual.</summary>
      <exception cref="T:System.InvalidOperationException">No hay ningún <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> anterior para el marco actual.</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.ToString">
      <summary>Crea y devuelve una representación de cadena del objeto de permiso actual.</summary>
      <returns>Representación de cadena del objeto de permiso actual.</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.ToXml">
      <summary>Cuando se invalida en una clase derivada, crea una codificación XML del objeto de seguridad y su estado actual.</summary>
      <returns>Codificación XML del objeto de seguridad, incluida cualquier información de estado.</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Union(System.Security.IPermission)">
      <summary>Cuando se invalida en una clase derivada, crea un permiso que es la unión del permiso actual y el permiso especificado.</summary>
      <param name="other">Permiso para combinar con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.NotSupportedException">El parámetro <paramref name="other" /> no es un objeto <see langword="null" />. Este método solo se admite en este nivel cuando se pasa <see langword="null" />.</exception>
      <returns>Nuevo permiso que representa la unión del permiso actual y el permiso especificado.</returns>
    </member>
    <member name="T:System.Security.HostProtectionException">
      <summary>Excepción que se produce cuando se detecta un error de host denegado.</summary>
    </member>
    <member name="M:System.Security.HostProtectionException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.HostProtectionException" /> con valores predeterminados.</summary>
    </member>
    <member name="M:System.Security.HostProtectionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.HostProtectionException" /> con la información de serialización y el contexto de secuencia especificados.</summary>
      <param name="info">Objeto que contiene los datos del objeto serializados.</param>
      <param name="context">Información contextual acerca del origen o del destino.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.HostProtectionException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.HostProtectionException" /> con el mensaje de error especificado.</summary>
      <param name="message">Mensaje que describe el error.</param>
    </member>
    <member name="M:System.Security.HostProtectionException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.HostProtectionException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message">Mensaje de error que explica el motivo de la excepción.</param>
      <param name="e">Excepción que es la causa de la excepción actual. Si el parámetro <c>innerException</c> no es <see langword="null" />, se genera la excepción actual en un bloque <see langword="catch" /> que controla la excepción interna.</param>
    </member>
    <member name="M:System.Security.HostProtectionException.#ctor(System.String,System.Security.Permissions.HostProtectionResource,System.Security.Permissions.HostProtectionResource)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.HostProtectionException" /> con un mensaje de error especificado, los recursos del host protegido y los recursos del host que causaron la excepción que se va a producir.</summary>
      <param name="message">Mensaje de error que explica el motivo de la excepción.</param>
      <param name="protectedResources">Combinación bit a bit de los valores de enumeración que especifican los recursos del host que son inaccesibles al código de confianza parcial.</param>
      <param name="demandedResources">Combinación bit a bit de los valores de enumeración que especifican los recursos del host demandados.</param>
    </member>
    <member name="M:System.Security.HostProtectionException.ToString">
      <summary>Devuelve una representación de cadena de la excepción de protección de host actual.</summary>
      <returns>Representación en forma de cadena de la <see cref="T:System.Security.HostProtectionException" /> actual.</returns>
    </member>
    <member name="P:System.Security.HostProtectionException.DemandedResources">
      <summary>Obtiene o establece los recursos de protección de host solicitados que produjeron la excepción que se va a producir.</summary>
      <returns>Combinación bit a bit de los valores <see cref="T:System.Security.Permissions.HostProtectionResource" /> que identifican los recursos de protección que producen la excepción que se va a producir. De manera predeterminada, es <see cref="F:System.Security.Permissions.HostProtectionResource.None" />.</returns>
    </member>
    <member name="P:System.Security.HostProtectionException.ProtectedResources">
      <summary>Obtiene o establece los recursos de protección de host que son inaccesibles al código de confianza parcial.</summary>
      <returns>Combinación bit a bit de los valores <see cref="T:System.Security.Permissions.HostProtectionResource" /> que identifican las categorías de protección de host inaccesibles. De manera predeterminada, es <see cref="F:System.Security.Permissions.HostProtectionResource.None" />.</returns>
    </member>
    <member name="T:System.Security.HostSecurityManager">
      <summary>Permite el control y la personalización del comportamiento de la seguridad para los dominios de aplicaciones.</summary>
    </member>
    <member name="M:System.Security.HostSecurityManager.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.HostSecurityManager" />.</summary>
    </member>
    <member name="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
      <summary>Determina si se debe ejecutar una aplicación.</summary>
      <param name="applicationEvidence">Evidencia para la aplicación que se va a activar.</param>
      <param name="activatorEvidence">Opcionalmente, evidencia para el dominio de aplicación que realiza la activación.</param>
      <param name="context">Contexto de confianza.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="applicationEvidence" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">No se pudo encontrar un objeto <see cref="T:System.Runtime.Hosting.ActivationArguments" /> en la evidencia de la aplicación.  
  
o bien 
La propiedad <see cref="P:System.Runtime.Hosting.ActivationArguments.ActivationContext" /> de los argumentos de activación es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">El conjunto de permisos <see cref="T:System.Security.Policy.ApplicationTrust" /> concedido no contiene el conjunto de solicitudes mínimo especificado por <see cref="T:System.ActivationContext" />.</exception>
      <returns>Objeto que contiene información de confianza sobre la aplicación.</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
      <summary>Solicita un tipo de evidencia concreto para el dominio de aplicación.</summary>
      <param name="evidenceType">Tipo de evidencia.</param>
      <returns>Evidencia del dominio de aplicación solicitada.</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
      <summary>Solicita un tipo de evidencia concreto para el ensamblado.</summary>
      <param name="evidenceType">Tipo de evidencia.</param>
      <param name="assembly">Ensamblado de destino.</param>
      <returns>Evidencia de ensamblado solicitada.</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes">
      <summary>Determina qué tipos de evidencia puede proporcionar el host para el dominio de aplicación, si se solicita.</summary>
      <returns>Matriz de tipos de evidencia.</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)">
      <summary>Determina qué tipos de evidencia puede proporcionar el host para el ensamblado, si se solicita.</summary>
      <param name="assembly">Ensamblado de destino.</param>
      <returns>Matriz de tipos de evidencia.</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)">
      <summary>Proporciona la evidencia del dominio de aplicación para un ensamblado que se está cargando.</summary>
      <param name="inputEvidence">Evidencia adicional que se va a agregar a la evidencia <see cref="T:System.AppDomain" />.</param>
      <returns>Evidencia que se va a usar para <see cref="T:System.AppDomain" />.</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
      <summary>Proporciona la evidencia de ensamblado para un ensamblado que se está cargado.</summary>
      <param name="loadedAssembly">Ensamblado cargado.</param>
      <param name="inputEvidence">Evidencia adicional que se va a agregar a la evidencia de ensamblado.</param>
      <returns>Evidencia que se va a usar para el ensamblado.</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)">
      <summary>Determina qué permisos se conceden al código según la evidencia especificada.</summary>
      <param name="evidence">Conjunto de evidencias utilizado para evaluar la directiva.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> es <see langword="null" />.</exception>
      <returns>Conjunto de permisos que puede conceder el sistema de seguridad.</returns>
    </member>
    <member name="P:System.Security.HostSecurityManager.DomainPolicy">
      <summary>Si se reemplaza en una clase derivada, obtiene la directiva de seguridad para el dominio de aplicación actual.</summary>
      <exception cref="T:System.NotSupportedException">Este método utiliza la directiva de seguridad de acceso del código (CAS), que está obsoleta en .NET Framework 4. Para habilitar la directiva CAS para compatibilidad con versiones anteriores de .NET Framework, use el elemento &lt;legacyCasPolicy&gt;.</exception>
      <returns>Directiva de seguridad para el dominio de aplicación actual. De manera predeterminada, es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Security.HostSecurityManager.Flags">
      <summary>Obtiene el marcador que representa los componentes de directiva de seguridad de interés para el host.</summary>
      <returns>Uno de los valores de enumeración que especifica componentes de la directiva de seguridad. De manera predeterminada, es <see cref="F:System.Security.HostSecurityManagerOptions.AllFlags" />.</returns>
    </member>
    <member name="T:System.Security.HostSecurityManagerOptions">
      <summary>Especifica los componentes de las directivas de seguridad que va utilizar el administrador de seguridad del host.</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.AllFlags">
      <summary>Utiliza todos los componentes de las directivas de seguridad.</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.HostAppDomainEvidence">
      <summary>Utiliza la prueba del dominio de la aplicación.</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.HostAssemblyEvidence">
      <summary>Utiliza la prueba del ensamblado.</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.HostDetermineApplicationTrust">
      <summary>La ruta llama primero al método <see cref="M:System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)" /> y al método <see cref="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)" />.</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.HostPolicyLevel">
      <summary>Utiliza el nivel de directiva especificado en la propiedad <see cref="P:System.Security.HostSecurityManager.DomainPolicy" />.</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.HostResolvePolicy">
      <summary>Utiliza el método <see cref="M:System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)" /> para resolver la prueba de la aplicación.</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.None">
      <summary>No utiliza ninguno de los componentes de las directivas de seguridad.</summary>
    </member>
    <member name="T:System.Security.IEvidenceFactory">
      <summary>Obtiene <see cref="T:System.Security.Policy.Evidence" /> de un objeto.</summary>
    </member>
    <member name="P:System.Security.IEvidenceFactory.Evidence">
      <summary>Obtiene un objeto <see cref="T:System.Security.Policy.Evidence" /> que comprueba la identidad del objeto actual.</summary>
      <returns>Objeto <see cref="T:System.Security.Policy.Evidence" /> que prueba la identidad del objeto actual.</returns>
    </member>
    <member name="T:System.Security.ISecurityPolicyEncodable">
      <summary>Admite los métodos que convierten el estado del objeto de permiso en y de una representación de elemento XML.</summary>
    </member>
    <member name="M:System.Security.ISecurityPolicyEncodable.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Reconstruye un objeto de seguridad con un estado especificado a partir de codificación XML.</summary>
      <param name="e">Codificación XML que se usará para reconstruir el objeto de seguridad.</param>
      <param name="level">Contexto de nivel de directiva para resolver las referencias a los conjuntos de permisos con nombre.</param>
    </member>
    <member name="M:System.Security.ISecurityPolicyEncodable.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>Crea una codificación XML del objeto de seguridad y su estado actual.</summary>
      <param name="level">Contexto de nivel de directiva para resolver las referencias a los conjuntos de permisos con nombre.</param>
      <returns>Elemento raíz de la representación XML del objeto de directiva.</returns>
    </member>
    <member name="T:System.Security.NamedPermissionSet">
      <summary>Define un conjunto de permisos que tiene un nombre y una descripción asociada. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.NamedPermissionSet.#ctor(System.Security.NamedPermissionSet)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.NamedPermissionSet" /> a partir de otro conjunto de permisos con nombre.</summary>
      <param name="permSet">Conjunto de permisos con nombre a partir del cual se crea la nueva instancia.</param>
    </member>
    <member name="M:System.Security.NamedPermissionSet.#ctor(System.String)">
      <summary>Inicializa una instancia nueva y vacía de la clase <see cref="T:System.Security.NamedPermissionSet" /> con el nombre especificado.</summary>
      <param name="name">Nombre del nuevo conjunto de permisos con nombre.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="name" /> es <see langword="null" /> o una cadena vacía ("").</exception>
    </member>
    <member name="M:System.Security.NamedPermissionSet.#ctor(System.String,System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.NamedPermissionSet" /> con el nombre especificado en un estado no restringido o completamente restringido.</summary>
      <param name="name">Nombre del nuevo conjunto de permisos con nombre.</param>
      <param name="state">Uno de los valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="name" /> es <see langword="null" /> o una cadena vacía ("").</exception>
    </member>
    <member name="M:System.Security.NamedPermissionSet.#ctor(System.String,System.Security.PermissionSet)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.NamedPermissionSet" /> con el nombre especificado a partir de un conjunto de permisos.</summary>
      <param name="name">Nombre del conjunto de permisos con nombre.</param>
      <param name="permSet">Conjunto de permisos del cual se tomará el valor del nuevo conjunto de permisos con nombre.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="name" /> es <see langword="null" /> o una cadena vacía ("").</exception>
    </member>
    <member name="M:System.Security.NamedPermissionSet.Copy">
      <summary>Crea una copia de un conjunto de permisos con nombre.</summary>
      <returns>Conjunto de permisos que es una copia del conjunto de permisos con nombre.</returns>
    </member>
    <member name="M:System.Security.NamedPermissionSet.Copy(System.String)">
      <summary>Crea una copia del conjunto de permisos con nombre, con un nombre diferente pero con los mismos permisos.</summary>
      <param name="name">Nombre del nuevo conjunto de permisos con nombre.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="name" /> es <see langword="null" /> o una cadena vacía ("").</exception>
      <returns>Copia del conjunto de permisos con nombre que tiene el nuevo nombre.</returns>
    </member>
    <member name="M:System.Security.NamedPermissionSet.Equals(System.Object)">
      <summary>Determina si el objeto <see cref="T:System.Security.NamedPermissionSet" /> especificado es igual al objeto <see cref="T:System.Security.NamedPermissionSet" /> actual.</summary>
      <param name="o">Objeto <see cref="T:System.Security.NamedPermissionSet" /> que se va a comparar con el objeto <see cref="T:System.Security.NamedPermissionSet" /> actual.</param>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Security.NamedPermissionSet" /> especificado es igual al objeto <see cref="T:System.Security.NamedPermissionSet" /> actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.NamedPermissionSet.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un conjunto de permisos con nombre con un estado especificado a partir de codificación XML.</summary>
      <param name="et">Elemento de seguridad que contiene la representación XML del conjunto de permisos con nombre.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="et" /> no es una representación válida del conjunto de permisos con nombre.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="et" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.NamedPermissionSet.GetHashCode">
      <summary>Obtiene un código hash para el objeto <see cref="T:System.Security.NamedPermissionSet" /> que es adecuado para su uso en algoritmos hash y estructuras de datos como una tabla hash.</summary>
      <returns>Código hash para el objeto <see cref="T:System.Security.NamedPermissionSet" /> actual.</returns>
    </member>
    <member name="M:System.Security.NamedPermissionSet.ToXml">
      <summary>Crea una descripción de elemento XML del conjunto de permisos con nombre.</summary>
      <returns>Representación XML del conjunto de permisos con nombre.</returns>
    </member>
    <member name="P:System.Security.NamedPermissionSet.Description">
      <summary>Obtiene o establece la descripción del conjunto de permisos con nombre actual.</summary>
      <returns>Descripción del conjunto de permisos con nombre.</returns>
    </member>
    <member name="P:System.Security.NamedPermissionSet.Name">
      <summary>Obtiene o establece el nombre del conjunto de permisos con nombre actual.</summary>
      <exception cref="T:System.ArgumentException">El nombre es <see langword="null" /> o es una cadena vacía ("").</exception>
      <returns>Nombre del conjunto de permisos con nombre.</returns>
    </member>
    <member name="T:System.Security.Permissions.DataProtectionPermission">
      <summary>Controla la capacidad para tener acceso a la memoria y a los datos cifrados. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.DataProtectionPermissionFlags)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.DataProtectionPermission" /> con los indicadores de permiso especificado.</summary>
      <param name="flag">Combinación bit a bit de los valores de <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" /> no es una combinación válida de los valores de <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.DataProtectionPermission" /> con el estado de permiso especificado.</summary>
      <param name="state">Uno de los valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> no es un valor <see cref="T:System.Security.Permissions.PermissionState" /> válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.Copy">
      <summary>Crea y devuelve una copia idéntica del permiso actual.</summary>
      <returns>Copia del permiso actual.</returns>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un permiso con un estado específico a partir de una codificación XML.</summary>
      <param name="securityElement">
        <see cref="T:System.Security.SecurityElement" /> que contiene la codificación XML utilizada para reconstruir el permiso.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> no es un elemento de permiso válido.  
  
o bien 
El número de versión de <paramref name="securityElement" /> no se admite.</exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.Intersect(System.Security.IPermission)">
      <summary>Crea y devuelve un permiso que es la intersección del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para formar intersección con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> no es <see langword="null" /> y no especifica un permiso del mismo tipo que el permiso actual.</exception>
      <returns>Nuevo permiso que representa la intersección del permiso actual y del permiso especificado. Este nuevo permiso es <see langword="null" /> si la intersección está vacía.</returns>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina si el permiso actual es un subconjunto del permiso especificado.</summary>
      <param name="target">Permiso para probar la relación del subconjunto. Este permiso debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> no es <see langword="null" /> y no especifica un permiso del mismo tipo que el permiso actual.</exception>
      <returns>
        <see langword="true" /> si el permiso actual es un subconjunto del permiso especificado; si no, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.IsUnrestricted">
      <summary>Devuelve un valor que indica si el permiso actual no está restringido.</summary>
      <returns>
        <see langword="true" /> si el permiso actual no está restringido; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.ToXml">
      <summary>Crea una codificación XML del permiso y su estado actual.</summary>
      <returns>Codificación XML del permiso, incluida la información de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.Union(System.Security.IPermission)">
      <summary>Crea un permiso que es la unión del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para combinar con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> no es <see langword="null" /> y no especifica un permiso del mismo tipo que el permiso actual.</exception>
      <returns>Nuevo permiso que representa la unión del permiso actual y el permiso especificado.</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermission.Flags">
      <summary>Obtiene o establece los datos y los indicadores de protección de la memoria.</summary>
      <exception cref="T:System.ArgumentException">El valor especificado no es una combinación válida de los valores de <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" />.</exception>
      <returns>Combinación bit a bit de los valores de <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.DataProtectionPermissionAttribute">
      <summary>Permite acciones de seguridad de <see cref="T:System.Security.Permissions.DataProtectionPermission" /> para que se apliquen al código mediante seguridad declarativa. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.DataProtectionPermissionAttribute" /> con el objeto <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Uno de los valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermissionAttribute.CreatePermission">
      <summary>Crea y devuelve un nuevo objeto <see cref="T:System.Security.Permissions.DataProtectionPermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.DataProtectionPermission" /> que corresponde a este atributo.</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.Flags">
      <summary>Obtiene o establece los permisos de protección de datos.</summary>
      <returns>Combinación bit a bit de los valores de <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" />. De manera predeterminada, es <see cref="F:System.Security.Permissions.DataProtectionPermissionFlags.NoFlags" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.ProtectData">
      <summary>Obtiene o establece un valor que indica si los datos se pueden cifrar utilizando la clase <see cref="T:System.Security.Cryptography.ProtectedData" />.</summary>
      <returns>Es <see langword="true" /> si los datos se pueden cifrar; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.ProtectMemory">
      <summary>Obtiene o establece un valor que indica si la memoria se puede cifrar utilizando la clase <see cref="T:System.Security.Cryptography.ProtectedMemory" />.</summary>
      <returns>Es <see langword="true" /> si la memoria se puede cifrar; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectData">
      <summary>Obtiene o establece un valor que indica si los datos se pueden descifrar utilizando la clase <see cref="T:System.Security.Cryptography.ProtectedData" />.</summary>
      <returns>Es <see langword="true" /> si los datos se pueden descifrar; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectMemory">
      <summary>Obtiene o establece un valor que indica si la memoria se puede descifrar utilizando la clase <see cref="T:System.Security.Cryptography.ProtectedMemory" />.</summary>
      <returns>Es <see langword="true" /> si la memoria se puede descifrar; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.DataProtectionPermissionFlags">
      <summary>Especifica los permisos de acceso para el cifrado de datos y la memoria.</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.AllFlags">
      <summary>Capacidad de cifrar los datos, cifrar la memoria, descifrar los datos y descifrar la memoria.</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.NoFlags">
      <summary>Ninguna capacidad de protección.</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.ProtectData">
      <summary>Capacidad de cifrar los datos.</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.ProtectMemory">
      <summary>Capacidad de cifrar la memoria.</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.UnprotectData">
      <summary>Capacidad de descifrar los datos.</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.UnprotectMemory">
      <summary>Capacidad de descifrar la memoria.</summary>
    </member>
    <member name="T:System.Security.Permissions.EnvironmentPermission">
      <summary>Controla el acceso a las variables de entorno del sistema y del usuario. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.#ctor(System.Security.Permissions.EnvironmentPermissionAccess,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.EnvironmentPermission" /> con el acceso especificado a las variables de entorno especificadas.</summary>
      <param name="flag">Uno de los valores de <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" />.</param>
      <param name="pathList">Lista de variables de entorno (separadas por punto y coma) a las que se concede acceso.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="pathList" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="flag" /> no es un valor válido de <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.EnvironmentPermission" /> con permiso restringido o sin restricción tal como se especifica.</summary>
      <param name="state">Uno de los valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="state" /> no es un valor válido de <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.AddPathList(System.Security.Permissions.EnvironmentPermissionAccess,System.String)">
      <summary>Agrega el acceso para las variables de entorno especificadas al estado existente del permiso.</summary>
      <param name="flag">Uno de los valores de <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" />.</param>
      <param name="pathList">Una lista de variables de entorno (separadas por punto y coma).</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="pathList" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="flag" /> no es un valor válido de <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.Copy">
      <summary>Crea y devuelve una copia idéntica del permiso actual.</summary>
      <returns>Copia del permiso actual.</returns>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un permiso con un estado especificado a partir de una codificación XML.</summary>
      <param name="esd">Codificación XML que se usa para reconstruir el permiso.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="esd" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="esd" /> no es un elemento de permiso válido.  
  
o bien 
El número de la versión del parámetro <paramref name="esd" /> no es válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.GetPathList(System.Security.Permissions.EnvironmentPermissionAccess)">
      <summary>Obtiene todas las variables de entorno con el elemento <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> especificado.</summary>
      <param name="flag">Uno de los valores de <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> que representa un tipo único de acceso a variables de entorno.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" /> no es un valor válido de <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" />.  
  
o bien 
 <paramref name="flag" /> es <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess" />, que representa más de un tipo de acceso a variables de entorno; o <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.NoAccess" />, que no representa ningún tipo de acceso a variable de entorno.</exception>
      <returns>Una lista de variables de entorno (separadas por punto y coma) para la marca seleccionada.</returns>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.Intersect(System.Security.IPermission)">
      <summary>Crea y devuelve un permiso que es la intersección del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para formar intersección con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</exception>
      <returns>Nuevo permiso que representa la intersección del permiso actual y del permiso especificado. Este nuevo permiso es <see langword="null" /> si la intersección está vacía.</returns>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina si el permiso actual es un subconjunto del permiso especificado.</summary>
      <param name="target">Permiso que se va a probar para la relación de subconjunto. Este permiso debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</exception>
      <returns>
        <see langword="true" /> si el permiso actual es un subconjunto del permiso especificado; si no, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.IsUnrestricted">
      <summary>Devuelve un valor que indica si el permiso actual no está restringido.</summary>
      <returns>
        <see langword="true" /> si el permiso actual no está restringido; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.SetPathList(System.Security.Permissions.EnvironmentPermissionAccess,System.String)">
      <summary>Establece el acceso especificado a las variables de entorno especificadas al estado existente del permiso.</summary>
      <param name="flag">Uno de los valores de <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" />.</param>
      <param name="pathList">Una lista de variables de entorno (separadas por punto y coma).</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="pathList" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="flag" /> no es un valor válido de <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.ToXml">
      <summary>Crea una codificación XML del permiso y su estado actual.</summary>
      <returns>Codificación XML del permiso, incluida cualquier información de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.Union(System.Security.IPermission)">
      <summary>Crea un permiso que es la unión del permiso actual y el permiso especificado.</summary>
      <param name="other">Permiso para combinar con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="other" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</exception>
      <returns>Nuevo permiso que representa la unión del permiso actual y el permiso especificado.</returns>
    </member>
    <member name="T:System.Security.Permissions.EnvironmentPermissionAccess">
      <summary>Especifica el acceso a las variables de entorno.</summary>
    </member>
    <member name="F:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess">
      <summary>Acceso <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /> y <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Write" /> a las variables de entorno. <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess" /> representa varios valores de <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> y produce una excepción <see cref="T:System.ArgumentException" /> cuando se usa como parámetro <paramref name="flag" /> para el método <see cref="M:System.Security.Permissions.EnvironmentPermission.GetPathList(System.Security.Permissions.EnvironmentPermissionAccess)" />, que espera un valor único.</summary>
    </member>
    <member name="F:System.Security.Permissions.EnvironmentPermissionAccess.NoAccess">
      <summary>No hay acceso a las variables de entorno. <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.NoAccess" /> representa valores de <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> no válidos y produce una excepción <see cref="T:System.ArgumentException" /> cuando se usa como parámetro para el método <see cref="M:System.Security.Permissions.EnvironmentPermission.GetPathList(System.Security.Permissions.EnvironmentPermissionAccess)" />, que espera un valor único.</summary>
    </member>
    <member name="F:System.Security.Permissions.EnvironmentPermissionAccess.Read">
      <summary>Sólo se especifica el acceso de lectura a las variables de entorno. Cambiar, eliminar y crear variables de entorno no se incluye en este nivel de acceso.</summary>
    </member>
    <member name="F:System.Security.Permissions.EnvironmentPermissionAccess.Write">
      <summary>Sólo se especifica el acceso de escritura a las variables de entorno. El acceso de escritura incluye crear y eliminar variables de entorno, así como cambiar valores existentes. Leer variables de entorno no se incluye en este nivel de acceso.</summary>
    </member>
    <member name="T:System.Security.Permissions.EnvironmentPermissionAttribute">
      <summary>Permite acciones de seguridad de <see cref="T:System.Security.Permissions.EnvironmentPermission" /> para que se apliquen al código mediante seguridad declarativa. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.EnvironmentPermissionAttribute" /> con el objeto <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Uno de los valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="action" /> no es un valor válido de <see cref="T:System.Security.Permissions.SecurityAction" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermissionAttribute.CreatePermission">
      <summary>Crea y devuelve un nuevo objeto <see cref="T:System.Security.Permissions.EnvironmentPermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.EnvironmentPermission" /> que corresponde a este atributo.</returns>
    </member>
    <member name="P:System.Security.Permissions.EnvironmentPermissionAttribute.All">
      <summary>Establece acceso completo para las variables de entorno especificadas por el valor de cadena.</summary>
      <exception cref="T:System.NotSupportedException">No se admite el método get para esta propiedad.</exception>
      <returns>Lista de variables de entorno de acceso completo.</returns>
    </member>
    <member name="P:System.Security.Permissions.EnvironmentPermissionAttribute.Read">
      <summary>Obtiene o establece acceso de lectura para las variables de entorno especificadas por el valor de cadena.</summary>
      <returns>Lista de variables de entorno de acceso de lectura.</returns>
    </member>
    <member name="P:System.Security.Permissions.EnvironmentPermissionAttribute.Write">
      <summary>Obtiene o establece acceso de escritura para las variables de entorno especificadas por el valor de cadena.</summary>
      <returns>Lista de variables de entorno de acceso de escritura.</returns>
    </member>
    <member name="T:System.Security.Permissions.FileDialogPermission">
      <summary>Controla la capacidad para tener acceso a archivos o carpetas a través de un cuadro de diálogo Archivo. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.FileDialogPermissionAccess)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.FileDialogPermission" /> con el acceso especificado.</summary>
      <param name="access">Combinación bit a bit de los valores de <see cref="T:System.Security.Permissions.FileDialogPermissionAccess" />.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="access" /> no es una combinación válida de los valores de <see cref="T:System.Security.Permissions.FileDialogPermissionAccess" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.FileDialogPermission" /> con permiso restringido o sin restricción tal como se especifica.</summary>
      <param name="state">Uno de los valores de <see cref="T:System.Security.Permissions.PermissionState" /> (<see langword="Unrestricted" /> o <see langword="None" />).</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="state" /> no es un valor válido de <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.Copy">
      <summary>Crea y devuelve una copia idéntica del permiso actual.</summary>
      <returns>Copia del permiso actual.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un permiso con un estado especificado a partir de una codificación XML.</summary>
      <param name="esd">Codificación XML que se usa para reconstruir el permiso.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="esd" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="esd" /> no es un elemento de permiso válido.  
  
o bien 
No se admite el número de la versión del parámetro <paramref name="esd" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.Intersect(System.Security.IPermission)">
      <summary>Crea y devuelve un permiso que es la intersección del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para formar intersección con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</exception>
      <returns>Nuevo permiso que representa la intersección del permiso actual y del permiso especificado. Este nuevo permiso es <see langword="null" /> si la intersección está vacía.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina si el permiso actual es un subconjunto del permiso especificado.</summary>
      <param name="target">Permiso que se va a probar para la relación de subconjunto. Este permiso debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</exception>
      <returns>
        <see langword="true" /> si el permiso actual es un subconjunto del permiso especificado; si no, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.IsUnrestricted">
      <summary>Devuelve un valor que indica si el permiso actual no está restringido.</summary>
      <returns>
        <see langword="true" /> si el permiso actual no está restringido; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.ToXml">
      <summary>Crea una codificación XML del permiso y su estado actual.</summary>
      <returns>Codificación XML del permiso, incluida la información de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.Union(System.Security.IPermission)">
      <summary>Crea un permiso que es la unión del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para combinar con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</exception>
      <returns>Nuevo permiso que representa la unión del permiso actual y el permiso especificado.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileDialogPermission.Access">
      <summary>Obtiene o establece el acceso permitido a los archivos.</summary>
      <exception cref="T:System.ArgumentException">Se realiza un intento para establecer el parámetro <paramref name="access" /> en un valor que no es una combinación válida de los valores <see cref="T:System.Security.Permissions.FileDialogPermissionAccess" />.</exception>
      <returns>El acceso permitido a los archivos.</returns>
    </member>
    <member name="T:System.Security.Permissions.FileDialogPermissionAccess">
      <summary>Especifica el tipo de acceso a archivos permitido a través de los cuadros de diálogo Archivo.</summary>
    </member>
    <member name="F:System.Security.Permissions.FileDialogPermissionAccess.None">
      <summary>Sin acceso a archivos a través de los cuadros de diálogo Archivo.</summary>
    </member>
    <member name="F:System.Security.Permissions.FileDialogPermissionAccess.Open">
      <summary>Capacidad de abrir archivos a través de los cuadros de diálogo Archivo.</summary>
    </member>
    <member name="F:System.Security.Permissions.FileDialogPermissionAccess.OpenSave">
      <summary>Capacidad de abrir y guardar archivos a través de los cuadros de diálogo Archivo.</summary>
    </member>
    <member name="F:System.Security.Permissions.FileDialogPermissionAccess.Save">
      <summary>Capacidad de guardar archivos a través de los cuadros de diálogo Archivo.</summary>
    </member>
    <member name="T:System.Security.Permissions.FileDialogPermissionAttribute">
      <summary>Permite acciones de seguridad de <see cref="T:System.Security.Permissions.FileDialogPermission" /> para que se apliquen al código mediante seguridad declarativa. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.FileDialogPermissionAttribute" /> con el objeto <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Uno de los valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermissionAttribute.CreatePermission">
      <summary>Crea y devuelve un nuevo objeto <see cref="T:System.Security.Permissions.FileDialogPermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.FileDialogPermission" /> que se corresponde con este atributo.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileDialogPermissionAttribute.Open">
      <summary>Obtiene o establece un valor que indica si se ha declarado el permiso para abrir archivos a través del cuadro de diálogo de archivo.</summary>
      <returns>Es <see langword="true" /> si se ha declarado el permiso para abrir archivos a través del cuadro de diálogo de archivo; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileDialogPermissionAttribute.Save">
      <summary>Obtiene o establece un valor que indica si se ha declarado el permiso para guardar archivos a través del cuadro de diálogo de archivo.</summary>
      <returns>Es <see langword="true" /> si se ha declarado el permiso para guardar archivos a través del cuadro de diálogo de archivo; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.FileIOPermission">
      <summary>Controla la capacidad para tener acceso a archivos y carpetas. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.FileIOPermission" /> con el acceso especificado al archivo o directorio designado y los derechos de acceso especificados para la información de control de archivos.</summary>
      <param name="access">Una combinación bit a bit de los valores de la enumeración <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.</param>
      <param name="actions">Una combinación bit a bit de los valores de la enumeración <see cref="T:System.Security.AccessControl.AccessControlActions" />.</param>
      <param name="path">La ruta de acceso absoluta del directorio o el archivo.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="access" /> no es un valor válido de <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.  
  
o bien 
El parámetro <paramref name="path" /> no es una cadena válida.  
  
o bien 
El parámetro <paramref name="path" /> no especifica la ruta de acceso absoluta al archivo o directorio.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.FileIOPermission" /> con el acceso especificado a los archivos y directorios designados y los derechos de acceso especificados para la información de control de archivos.</summary>
      <param name="access">Una combinación bit a bit de los valores de la enumeración <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.</param>
      <param name="actions">Una combinación bit a bit de los valores de la enumeración <see cref="T:System.Security.AccessControl.AccessControlActions" />.</param>
      <param name="pathList">Matriz que contiene las rutas de acceso absolutas de los archivos y directorios.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="access" /> no es un valor válido de <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.  
  
o bien 
Una entrada en la matriz <paramref name="pathList" /> no es una cadena válida.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.FileIOPermission" /> con el acceso especificado a los archivos o directorios designados.</summary>
      <param name="access">Una combinación bit a bit de los valores de la enumeración <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.</param>
      <param name="path">La ruta de acceso absoluta del directorio o el archivo.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="access" /> no es un valor válido de <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.  
  
o bien 
El parámetro <paramref name="path" /> no es una cadena válida.  
  
o bien 
El parámetro <paramref name="path" /> no especifica la ruta de acceso absoluta al archivo o directorio.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.String[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.FileIOPermission" /> con el acceso especificado a los archivos y directorios designados.</summary>
      <param name="access">Una combinación bit a bit de los valores de la enumeración <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.</param>
      <param name="pathList">Matriz que contiene las rutas de acceso absolutas de los archivos y directorios.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="access" /> no es un valor válido de <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.  
  
o bien 
Una entrada en la matriz <paramref name="pathList" /> no es una cadena válida.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.FileIOPermission" /> con permisos totalmente limitados o ilimitados, según se haya especificado.</summary>
      <param name="state">Uno de los valores de enumeración de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="state" /> no es un valor válido de <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.AddPathList(System.Security.Permissions.FileIOPermissionAccess,System.String)">
      <summary>Agrega acceso para el archivo o directorio especificado en el estado existente del permiso.</summary>
      <param name="access">Combinación bit a bit de los valores de <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.</param>
      <param name="path">Ruta de acceso absoluta de un archivo o directorio.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="access" /> no es un valor válido de <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.  
  
o bien 
El parámetro <paramref name="path" /> no es una cadena válida.  
  
o bien 
El parámetro <paramref name="path" /> no especificó la ruta de acceso absoluta al archivo o directorio.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="path" /> es <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">El parámetro <paramref name="path" /> tiene un formato no válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.AddPathList(System.Security.Permissions.FileIOPermissionAccess,System.String[])">
      <summary>Agrega acceso para los archivos y directorios especificados en el estado existente del permiso.</summary>
      <param name="access">Combinación bit a bit de los valores de <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.</param>
      <param name="pathList">Matriz que contiene las rutas de acceso absolutas de los archivos y directorios.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="access" /> no es un valor válido de <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.  
  
o bien 
Una entrada en la matriz <paramref name="pathList" /> no es válida.</exception>
      <exception cref="T:System.NotSupportedException">Entrada en la matriz <paramref name="pathList" /> no tiene un formato válido.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="pathList" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.Copy">
      <summary>Crea y devuelve una copia idéntica del permiso actual.</summary>
      <returns>Copia del permiso actual.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.Equals(System.Object)">
      <summary>Determina si el objeto <see cref="T:System.Security.Permissions.FileIOPermission" /> especificado es igual al objeto <see cref="T:System.Security.Permissions.FileIOPermission" /> actual.</summary>
      <param name="o">Objeto <see cref="T:System.Security.Permissions.FileIOPermission" /> que se va a comparar con el objeto <see cref="T:System.Security.Permissions.FileIOPermission" /> actual.</param>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Security.Permissions.FileIOPermission" /> especificado es igual al objeto <see cref="T:System.Security.Permissions.FileIOPermission" /> actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un permiso con un estado especificado a partir de una codificación XML.</summary>
      <param name="esd">Codificación XML que se usa para reconstruir el permiso.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="esd" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="esd" /> no es un elemento de permiso válido.  
  
o bien 
El número de la versión del parámetro <paramref name="esd" /> no es compatible.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.GetHashCode">
      <summary>Obtiene un código hash para el objeto <see cref="T:System.Security.Permissions.FileIOPermission" /> que es adecuado para su uso en algoritmos hash y estructuras de datos como una tabla hash.</summary>
      <returns>Código hash para el objeto <see cref="T:System.Security.Permissions.FileIOPermission" /> actual.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)">
      <summary>Obtiene todos los archivos y directorios con el <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> especificado.</summary>
      <param name="access">Uno de los valores <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> que representa un tipo único de acceso a archivos.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> no es un valor válido de <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.  
  
o bien 
 <paramref name="access" /> es <see cref="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess" />, que representa más de un tipo de acceso a archivos o <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, que no representa ningún tipo de acceso a archivos.</exception>
      <returns>Una matriz que contiene las rutas de acceso de los archivos y directorios a los que se concede el acceso especificado por el parámetro <paramref name="access" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.Intersect(System.Security.IPermission)">
      <summary>Crea y devuelve un permiso que es la intersección del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para formar intersección con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</exception>
      <returns>Nuevo permiso que representa la intersección del permiso actual y del permiso especificado. Este nuevo permiso es <see langword="null" /> si la intersección está vacía.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina si el permiso actual es un subconjunto del permiso especificado.</summary>
      <param name="target">Permiso que se va a probar para la relación de subconjunto. Este permiso debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</exception>
      <returns>
        <see langword="true" /> si el permiso actual es un subconjunto del permiso especificado; si no, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.IsUnrestricted">
      <summary>Devuelve un valor que indica si el permiso actual no está restringido.</summary>
      <returns>
        <see langword="true" /> si el permiso actual no está restringido; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.SetPathList(System.Security.Permissions.FileIOPermissionAccess,System.String)">
      <summary>Establece el acceso especificado al archivo o directorio especificado, reemplazando el estado existente del permiso.</summary>
      <param name="access">Combinación bit a bit de los valores de <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.</param>
      <param name="path">La ruta de acceso absoluta del directorio o el archivo.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="access" /> no es un valor válido de <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.  
  
o bien 
El parámetro <paramref name="path" /> no es una cadena válida.  
  
o bien 
El parámetro <paramref name="path" /> no especificó la ruta de acceso absoluta al archivo o directorio.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.SetPathList(System.Security.Permissions.FileIOPermissionAccess,System.String[])">
      <summary>Establece el acceso especificado a los archivos y directorios especificados, reemplazando el estado actual para el acceso especificado con el nuevo conjunto de rutas de acceso.</summary>
      <param name="access">Combinación bit a bit de los valores de <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.</param>
      <param name="pathList">Matriz que contiene las rutas de acceso absolutas de los archivos y directorios.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="access" /> no es un valor válido de <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.  
  
o bien 
Una entrada del parámetro <paramref name="pathList" /> no es una cadena válida.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.ToXml">
      <summary>Crea una codificación XML del permiso y su estado actual.</summary>
      <returns>Codificación XML del permiso, incluida cualquier información de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.Union(System.Security.IPermission)">
      <summary>Crea un permiso que es la unión del permiso actual y el permiso especificado.</summary>
      <param name="other">Permiso para combinar con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="other" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</exception>
      <returns>Nuevo permiso que representa la unión del permiso actual y el permiso especificado.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermission.AllFiles">
      <summary>Obtiene o establece el acceso permitido a todos los archivos.</summary>
      <returns>Conjunto de marcas de E/S de archivo de todos los archivos.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermission.AllLocalFiles">
      <summary>Obtiene o establece el acceso permitido a todos los archivos locales.</summary>
      <returns>Conjunto de marcas de E/S de archivo de todos los archivos locales.</returns>
    </member>
    <member name="T:System.Security.Permissions.FileIOPermissionAccess">
      <summary>Especifica el tipo de acceso a archivos solicitado.</summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess">
      <summary>Acceso <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> y <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> a un archivo o un directorio. <see cref="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess" /> representa varios valores de <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> y produce una excepción <see cref="T:System.ArgumentException" /> cuando se usa como parámetro <paramref name="access" /> para el método <see cref="M:System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)" />, que espera un valor único.</summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.Append">
      <summary>Acceso para anexar material a un archivo o un directorio. El acceso <see langword="FileIOPermissionAccess.Append" /> proporciona capacidad para crear nuevos archivos o directorios. Para crear archivos, el código también debe tener acceso tanto a <see langword="Append" /> como a <see langword="Write" /> o <see langword="Read" />.</summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess">
      <summary>No hay acceso a un archivo o un directorio. <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /> representa valores de <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> no válidos y produce una excepción <see cref="T:System.ArgumentException" /> cuando se usa como parámetro para el método <see cref="M:System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)" />, que espera un valor único.</summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery">
      <summary>
        <para>Acceso a la información de la propia ruta. De esta forma, se ayuda a proteger la información confidencial de la ruta de acceso, como los nombres de usuario, así como la información sobre la estructura de directorios que aparece en la ruta. Este valor no concede acceso a los archivos o las carpetas que representa la ruta de acceso.</para>
        <para>Por razones de rendimiento, <see langword="PathDiscovery" /> solo debe concederse a los directorios, no a los ficheros. Por ejemplo, el permiso <see langword="PathDiscovery" /> debería concederse a rutas de acceso como C:\test y C:\test\, no a C:\test\example.txt.</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.Read">
      <summary>Acceso para leer de un archivo o directorio.</summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.Write">
      <summary>Acceso para escribir en un archivo o un directorio, o para eliminarlo. El acceso <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> proporciona capacidad para eliminar y sobrescribir archivos o directorios.</summary>
    </member>
    <member name="T:System.Security.Permissions.FileIOPermissionAttribute">
      <summary>Permite acciones de seguridad de <see cref="T:System.Security.Permissions.FileIOPermission" /> para que se apliquen al código mediante seguridad declarativa. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.FileIOPermissionAttribute" /> con el objeto <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Uno de los valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="action" /> no es un valor <see cref="T:System.Security.Permissions.SecurityAction" /> válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermissionAttribute.CreatePermission">
      <summary>Crea y devuelve un nuevo objeto <see cref="T:System.Security.Permissions.FileIOPermission" />.</summary>
      <exception cref="T:System.ArgumentException">La información de ruta de acceso de un archivo o directorio cuyo acceso tiene que estar protegido, contiene caracteres no válidos o especificadores comodín.</exception>
      <returns>
        <see cref="T:System.Security.Permissions.FileIOPermission" /> que se corresponde con este atributo.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.All">
      <summary>Obtiene o establece acceso completo para el archivo o directorio que especifica el valor de la cadena.</summary>
      <exception cref="T:System.NotSupportedException">No se admite el método get para esta propiedad.</exception>
      <returns>Ruta de acceso absoluta del directorio o el archivo para el acceso completo.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.AllFiles">
      <summary>Obtiene o establece el acceso permitido a todos los archivos.</summary>
      <returns>Una combinación bit a bit de los valores de <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> que representa los permisos para todos los archivos. De manera predeterminada, es <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.AllLocalFiles">
      <summary>Obtiene o establece el acceso permitido a todos los archivos locales.</summary>
      <returns>Una combinación bit a bit de los valores de <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> que representa los permisos para todos los archivos locales. De manera predeterminada, es <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.Append">
      <summary>Obtiene o establece acceso de anexión para el archivo o directorio que especifica el valor de la cadena.</summary>
      <returns>Ruta de acceso absoluta del directorio o el archivo para el acceso de anexión.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.ChangeAccessControl">
      <summary>Obtiene o establece el archivo o directorio en el que se puede cambiar la información de control de acceso.</summary>
      <returns>Ruta de acceso absoluta al archivo o directorio en el que se puede cambiar la información de control de acceso.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery">
      <summary>Obtiene o establece el archivo o directorio al que se concede permiso de descubrimiento de ruta.</summary>
      <returns>La ruta de acceso absoluta del directorio o el archivo.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.Read">
      <summary>Obtiene o establece acceso de lectura para el archivo o directorio especificado por el valor de cadena.</summary>
      <returns>Ruta de acceso absoluta del directorio o el archivo para el acceso de lectura.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.ViewAccessControl">
      <summary>Obtiene o establece el archivo o directorio en el que se puede ver la información de control de acceso.</summary>
      <returns>Ruta de acceso absoluta al archivo o directorio en el que se puede ver la información de control de acceso.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.ViewAndModify">
      <summary>Obtiene o establece el archivo o directorio en el que se pueden ver y modificar datos de archivo.</summary>
      <exception cref="T:System.NotSupportedException">Se llama al descriptor de acceso <see langword="get" />. El descriptor de acceso sólo se proporciona por compatibilidad con el compilador de C#.</exception>
      <returns>La ruta de acceso absoluta al archivo o directorio en el que se pueden ver y modificar datos de archivo.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.Write">
      <summary>Obtiene o establece acceso de escritura para el archivo o directorio especificado por el valor de cadena.</summary>
      <returns>Ruta de acceso absoluta del directorio o el archivo para el acceso de escritura.</returns>
    </member>
    <member name="T:System.Security.Permissions.GacIdentityPermission">
      <summary>Define el permiso de identidad para archivos que se originan en la caché global de ensamblados. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.GacIdentityPermission" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.GacIdentityPermission" /> con la enumeración <see cref="T:System.Security.Permissions.PermissionState" /> totalmente restringida.</summary>
      <param name="state">Uno de los valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> no es un valor <see cref="T:System.Security.Permissions.PermissionState" /> válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.Copy">
      <summary>Crea y devuelve una copia idéntica del permiso actual.</summary>
      <returns>Copia del permiso actual.</returns>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary>Crea un permiso a partir de codificación XML.</summary>
      <param name="securityElement">
        <see cref="T:System.Security.SecurityElement" /> que contiene la codificación XML que hay que utilizar para crear el permiso.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> no es un elemento de permiso válido.  
  
o bien 
El número de versión de <paramref name="securityElement" /> no es válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.Intersect(System.Security.IPermission)">
      <summary>Crea y devuelve un permiso que es la intersección del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para formar intersección con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</exception>
      <returns>Nuevo permiso que representa la intersección del permiso actual y del permiso especificado. El nuevo permiso es <see langword="null" /> si la intersección está vacía.</returns>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Indica si el permiso actual es un subconjunto del permiso especificado.</summary>
      <param name="target">Objeto de permiso cuya relación del subconjunto se va a probar. El permiso debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</exception>
      <returns>
        <see langword="true" /> si el permiso actual es un subconjunto del permiso especificado; si no, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.ToXml">
      <summary>Crea una codificación XML del permiso y su estado actual.</summary>
      <returns>Una clase <see cref="T:System.Security.SecurityElement" /> que representa la codificación XML del permiso, incluida cualquier información de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.Union(System.Security.IPermission)">
      <summary>Crea y devuelve un permiso que es la unión entre el permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para combinar con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</exception>
      <returns>Nuevo permiso que representa la unión del permiso actual y el permiso especificado.</returns>
    </member>
    <member name="T:System.Security.Permissions.GacIdentityPermissionAttribute">
      <summary>Permite acciones de seguridad de <see cref="T:System.Security.Permissions.GacIdentityPermission" /> para que se apliquen al código mediante seguridad declarativa. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.GacIdentityPermissionAttribute" /> con el valor <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Uno de los valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="action" /> no es un valor de <see cref="T:System.Security.Permissions.SecurityAction" /> válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermissionAttribute.CreatePermission">
      <summary>Crea un nuevo objeto <see cref="T:System.Security.Permissions.GacIdentityPermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.GacIdentityPermission" /> que se corresponde con este atributo.</returns>
    </member>
    <member name="T:System.Security.Permissions.HostProtectionAttribute">
      <summary>Permite al uso de acciones de seguridad declarativa para determinar los requisitos de protección del host. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Permissions.HostProtectionAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.HostProtectionAttribute" /> con valores predeterminados.</summary>
    </member>
    <member name="M:System.Security.Permissions.HostProtectionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.HostProtectionAttribute" /> con el valor <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Uno de los valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" /> no es <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.HostProtectionAttribute.CreatePermission">
      <summary>Crea y devuelve un nuevo permiso de protección de host.</summary>
      <returns>
        <see cref="T:System.Security.IPermission" /> que corresponde a este atributo.</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt">
      <summary>Obtiene o establece un valor que indica si la administración de procesos externos está expuesta.</summary>
      <returns>
        <see langword="true" /> si la administración de procesos externos está expuesta; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.ExternalThreading">
      <summary>Obtiene o establece un valor que indica si el subproceso externo está expuesto.</summary>
      <returns>Es <see langword="true" /> si el subprocesamiento externo está expuesto a un riesgo; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort">
      <summary>Obtiene o establece un valor que indica si los recursos podrían perder memoria en caso de finalizarse la operación.</summary>
      <returns>
        <see langword="true" /> si los recursos podrían perder memoria al finalizar; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.Resources">
      <summary>Obtiene o establece marcadores que especifican categorías de funcionalidad que son potencialmente dañinas para el host.</summary>
      <returns>Combinación bit a bit de los valores de <see cref="T:System.Security.Permissions.HostProtectionResource" />. De manera predeterminada, es <see cref="F:System.Security.Permissions.HostProtectionResource.None" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure">
      <summary>Obtiene o establece un valor que indica si la infraestructura de seguridad está expuesta.</summary>
      <returns>
        <see langword="true" /> si la infraestructura de seguridad está expuesta; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt">
      <summary>Obtiene o establece un valor que indica si la administración de procesos con efecto sobre sí mismos está expuesta.</summary>
      <returns>Es <see langword="true" /> si la administración de procesos con efecto sobre sí mismos está expuesta a un riesgo; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading">
      <summary>Obtiene o establece un valor que indica si el subproceso con efecto sobre sí mismo está expuesto.</summary>
      <returns>Es <see langword="true" /> si el subprocesamiento con efecto sobre sí mismo está expuesto a un riesgo; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.SharedState">
      <summary>Obtiene o establece un valor que indica si el estado compartido está expuesto.</summary>
      <returns>Es <see langword="true" /> si el estado compartido está expuesto a un riesgo; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.Synchronization">
      <summary>Obtiene o establece un valor que indica si la sincronización está expuesta.</summary>
      <returns>
        <see langword="true" /> si la sincronización está expuesta; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.UI">
      <summary>Obtiene o establece un valor que indica si la interfaz de usuario está expuesta.</summary>
      <returns>Es <see langword="true" /> si la interfaz de usuario está expuesta a un riesgo; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.HostProtectionResource">
      <summary>Especifica categorías de funcionalidad potencialmente dañina para el host si lo invoca un método o una clase.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.All">
      <summary>Expone todos los recursos del host.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.ExternalProcessMgmt">
      <summary>Podría crear o destruir otros procesos.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.ExternalThreading">
      <summary>Crea o manipula los subprocesos distintos de los suyos propios, lo que podría ser dañino para el host.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.MayLeakOnAbort">
      <summary>Si no está protegido por un controlador seguro o algún otro medio para garantizar la liberación de recursos, se podría producir una pérdida de recursos al finalizar.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.None">
      <summary>No expone ningún recurso del host.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.SecurityInfrastructure">
      <summary>Expone la infraestructura de seguridad.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.SelfAffectingProcessMgmt">
      <summary>Podría salir del proceso actual, finalizando el servidor.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.SelfAffectingThreading">
      <summary>Manipula los subprocesos de un modo que sólo afecta al código del usuario.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.SharedState">
      <summary>Expone el estado que se podría compartir entre los subprocesos.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.Synchronization">
      <summary>Expone la sincronización.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.UI">
      <summary>Expone la interfaz de usuario.</summary>
    </member>
    <member name="T:System.Security.Permissions.IsolatedStorageContainment">
      <summary>Especifica el uso permitido para el almacenamiento aislado.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.AdministerIsolatedStorageByUser">
      <summary>Posibilidad de administración limitada para el almacén de usuario. Permite explorar y eliminar de todo el almacén de usuario, pero no concede acceso de lectura a otra identidad que no sea la propia identidad del dominio/ensamblado del usuario.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.ApplicationIsolationByMachine">
      <summary>El almacenamiento está aislado primero por el equipo y a continuación por la aplicación. Esto proporciona un almacén de datos para la aplicación accesible en cualquier contexto de dominio. El compartimiento de datos por aplicación requiere una confianza adicional ya que abre un posible "túnel" entre aplicaciones que podría comprometer el aislamiento de datos en determinados sitios Web.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.ApplicationIsolationByRoamingUser">
      <summary>El almacenamiento está aislado primero por el usuario y a continuación por la prueba de la aplicación. El almacenamiento se moverá si está habilitada la movilidad de datos de usuario de Windows. Esto proporciona un almacén de datos para la aplicación accesible en cualquier contexto de dominio. El compartimiento de datos por aplicación requiere una confianza adicional ya que abre un posible "túnel" entre aplicaciones que podría comprometer el aislamiento de datos en determinados sitios Web.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.ApplicationIsolationByUser">
      <summary>El almacenamiento está aislado primero por el usuario y a continuación por la aplicación. El equipo también aísla el almacenamiento. Esto proporciona un almacén de datos para la aplicación accesible en cualquier contexto de dominio. El compartimiento de datos por aplicación requiere una confianza adicional ya que abre un posible "túnel" entre aplicaciones que podría comprometer el aislamiento de datos en determinados sitios Web.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByMachine">
      <summary>El almacenamiento está aislado primero por el equipo y a continuación por el ensamblado de código Esto proporciona un almacén de datos para el ensamblado accesible en cualquier contexto de dominio. El compartimiento de datos por ensamblado requiere confianza adicional debido a que potencialmente proporciona un "túnel" entre aplicaciones que puede comprometer el aislamiento de datos de aplicaciones en sitios Web determinados.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByRoamingUser">
      <summary>Primero, el usuario aísla el almacenamiento y, a continuación, lo aísla la prueba del ensamblado. El almacenamiento se moverá si está habilitada la movilidad de datos de usuario de Windows. Esto proporciona un almacén de datos para el ensamblado accesible en cualquier contexto de dominio. El compartimiento de datos por ensamblado requiere confianza adicional debido a que potencialmente proporciona un "túnel" entre aplicaciones que puede comprometer el aislamiento de datos de aplicaciones en sitios Web determinados.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByUser">
      <summary>Primero, el usuario aísla el almacenamiento y, a continuación, lo aísla el ensamblado de código. El equipo también aísla el almacenamiento. Esto proporciona un almacén de datos para el ensamblado accesible en cualquier contexto de dominio. El compartimiento de datos por ensamblado requiere confianza adicional debido a que potencialmente proporciona un "túnel" entre aplicaciones que puede comprometer el aislamiento de datos de aplicaciones en sitios Web determinados.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByMachine">
      <summary>El almacenamiento está aislado primero por el equipo y a continuación por dominio y ensamblado. Solamente se puede obtener acceso a los datos dentro del contexto de la misma aplicación y únicamente cuando se ejecuta en el mismo equipo. Esto es útil cuando un ensamblado de terceros desea mantener un almacén de datos privado.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByRoamingUser">
      <summary>Primero, el usuario aísla el almacenamiento y, a continuación, lo aíslan el dominio y el ensamblado. El almacenamiento se moverá si está habilitada la movilidad de datos de usuario de Windows. Solamente se puede obtener acceso a los datos dentro del contexto de la misma aplicación y únicamente cuando la ejecuta el mismo usuario. Esto es útil cuando un ensamblado de terceros desea mantener un almacén de datos privado.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByUser">
      <summary>Primero, el usuario aísla el almacenamiento y, a continuación, lo aíslan el dominio y el ensamblado. El equipo también aísla el almacenamiento. Solamente se puede obtener acceso a los datos dentro del contexto de la misma aplicación y únicamente cuando la ejecuta el mismo usuario. Esto es útil cuando un ensamblado de terceros desea mantener un almacén de datos privado.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.None">
      <summary>No se permite el uso del almacenamiento aislado.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.UnrestrictedIsolatedStorage">
      <summary>Se permite el uso del almacenamiento aislado sin restricciones. El código tiene acceso completo a cualquier parte del almacén de usuario, independientemente de la identidad del dominio o del ensamblado. Este uso del almacenamiento aislado incluye la posibilidad de enumerar el contenido del almacén de datos de almacenamiento aislado.</summary>
    </member>
    <member name="T:System.Security.Permissions.IsolatedStorageFilePermission">
      <summary>Especifica el permiso para utilizar un sistema de archivos virtual privado. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.IsolatedStorageFilePermission" /> con permiso totalmente restringido o sin restricción tal como se especifica.</summary>
      <param name="state">Uno de los valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="state" /> no es un valor válido de <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.Copy">
      <summary>Crea y devuelve una copia idéntica del permiso actual.</summary>
      <returns>Copia del permiso actual.</returns>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.Intersect(System.Security.IPermission)">
      <summary>Crea y devuelve un permiso que es la intersección del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para formar intersección con el objeto de permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</exception>
      <returns>Nuevo permiso que representa la intersección del permiso actual y del permiso especificado. Este nuevo permiso es <see langword="null" /> si la intersección está vacía.</returns>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina si el permiso actual es un subconjunto del permiso especificado.</summary>
      <param name="target">Permiso que se va a probar para la relación de subconjunto. Este permiso debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</exception>
      <returns>
        <see langword="true" /> si el permiso actual es un subconjunto del permiso especificado; si no, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.ToXml">
      <summary>Crea una codificación XML del permiso y su estado actual.</summary>
      <returns>Codificación XML del permiso, incluida cualquier información de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.Union(System.Security.IPermission)">
      <summary>Crea un permiso que es la unión del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para combinar con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</exception>
      <returns>Nuevo permiso que representa la unión del permiso actual y el permiso especificado.</returns>
    </member>
    <member name="T:System.Security.Permissions.IsolatedStorageFilePermissionAttribute">
      <summary>Permite acciones de seguridad de <see cref="T:System.Security.Permissions.IsolatedStorageFilePermission" /> para que se apliquen al código mediante seguridad declarativa. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.IsolatedStorageFilePermissionAttribute" /> con el objeto <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Uno de los valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermissionAttribute.CreatePermission">
      <summary>Crea y devuelve un nuevo objeto <see cref="T:System.Security.Permissions.IsolatedStorageFilePermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.IsolatedStorageFilePermission" /> que corresponde a este atributo.</returns>
    </member>
    <member name="T:System.Security.Permissions.IsolatedStoragePermission">
      <summary>Representa el acceso a las funciones genéricas de almacenamiento aislado.</summary>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStoragePermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.IsolatedStoragePermission" /> con permiso restringido o sin restricción tal como se especifica.</summary>
      <param name="state">Uno de los valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="state" /> no es un valor válido de <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStoragePermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un permiso con un estado especificado a partir de una codificación XML.</summary>
      <param name="esd">Codificación XML que se usa para reconstruir el permiso.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="esd" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="esd" /> no es un elemento de permiso válido.  
  
o bien 
El número de la versión del parámetro <paramref name="esd" /> no es válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStoragePermission.IsUnrestricted">
      <summary>Devuelve un valor que indica si el permiso actual no está restringido.</summary>
      <returns>
        <see langword="true" /> si el permiso actual no está restringido; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStoragePermission.ToXml">
      <summary>Crea una codificación XML del permiso y su estado actual.</summary>
      <returns>Codificación XML del permiso, incluida cualquier información de estado.</returns>
    </member>
    <member name="P:System.Security.Permissions.IsolatedStoragePermission.UsageAllowed">
      <summary>Obtiene o establece el tipo de contención de almacenamiento aislado permitido.</summary>
      <returns>Uno de los valores de <see cref="T:System.Security.Permissions.IsolatedStorageContainment" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.IsolatedStoragePermission.UserQuota">
      <summary>Obtiene o establece la cuota en el tamaño total del almacenamiento total de cada usuario.</summary>
      <returns>Tamaño, en bytes, del recurso asignado al usuario.</returns>
    </member>
    <member name="T:System.Security.Permissions.IsolatedStoragePermissionAttribute">
      <summary>Permite acciones de seguridad de <see cref="T:System.Security.Permissions.IsolatedStoragePermission" /> para que se apliquen al código mediante seguridad declarativa.</summary>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStoragePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.IsolatedStoragePermissionAttribute" /> con el objeto <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Uno de los valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="P:System.Security.Permissions.IsolatedStoragePermissionAttribute.UsageAllowed">
      <summary>Obtiene o establece el nivel de almacenamiento aislado que debe declararse.</summary>
      <returns>Uno de los valores de <see cref="T:System.Security.Permissions.IsolatedStorageContainment" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.IsolatedStoragePermissionAttribute.UserQuota">
      <summary>Obtiene o establece el tamaño máximo de la cuota de almacenamiento del usuario.</summary>
      <returns>Tamaño máximo de la cuota de almacenamiento del usuario en bytes.</returns>
    </member>
    <member name="T:System.Security.Permissions.IUnrestrictedPermission">
      <summary>Permite que un permiso exponga un estado no restringido.</summary>
    </member>
    <member name="M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted">
      <summary>Devuelve un valor que indica si se permite el acceso sin restricciones al recurso protegido por el permiso.</summary>
      <returns>
        <see langword="true" /> si se permite el uso no restringido del recurso protegido por el permiso; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermission">
      <summary>Controla la capacidad para tener acceso a contenedores de claves. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.KeyContainerPermission" /> con el acceso especificado.</summary>
      <param name="flags">Combinación bit a bit de los valores de <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flags" /> no es una combinación válida de los valores de <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags,System.Security.Permissions.KeyContainerPermissionAccessEntry[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.KeyContainerPermission" /> con el acceso global especificado y derechos de acceso de contenedor de claves específico.</summary>
      <param name="flags">Combinación bit a bit de los valores de <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" />.</param>
      <param name="accessList">Una matriz de <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> objetos identifica los derechos de acceso de contenedor de claves específico.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flags" /> no es una combinación válida de los valores de <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="accessList" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.KeyContainerPermission" /> con permiso restringido o sin restricción.</summary>
      <param name="state">Uno de los valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> no es un valor <see cref="T:System.Security.Permissions.PermissionState" /> válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.Copy">
      <summary>Crea y devuelve una copia idéntica del permiso actual.</summary>
      <returns>Copia del permiso actual.</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un permiso con un estado especificado a partir de una codificación XML.</summary>
      <param name="securityElement">
        <see cref="T:System.Security.SecurityElement" /> que contiene la codificación XML utilizada para reconstruir el permiso.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> no es un elemento de permiso válido.  
  
o bien 
El número de versión de <paramref name="securityElement" /> no se admite.</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.Intersect(System.Security.IPermission)">
      <summary>Crea y devuelve un permiso que es la intersección del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para formar intersección con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> no es <see langword="null" /> y no especifica un permiso del mismo tipo que el permiso actual.</exception>
      <returns>Nuevo permiso que representa la intersección del permiso actual y del permiso especificado. Este nuevo permiso es <see langword="null" /> si la intersección está vacía.</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina si el permiso actual es un subconjunto del permiso especificado.</summary>
      <param name="target">Permiso para probar la relación del subconjunto. Este permiso debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> no es <see langword="null" /> y no especifica un permiso del mismo tipo que el permiso actual.</exception>
      <returns>
        <see langword="true" /> si el permiso actual es un subconjunto del permiso especificado; si no, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.IsUnrestricted">
      <summary>Determina si el permiso actual no está restringido.</summary>
      <returns>
        <see langword="true" /> si el permiso actual no está restringido; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.ToXml">
      <summary>Crea una codificación XML del permiso y su estado actual.</summary>
      <returns>Un <see cref="T:System.Security.SecurityElement" /> que contiene una codificación XML del permiso, incluida información de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.Union(System.Security.IPermission)">
      <summary>Crea un permiso que es la unión del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para combinar con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> no es <see langword="null" /> y no especifica un permiso del mismo tipo que el permiso actual.</exception>
      <returns>Nuevo permiso que representa la unión del permiso actual y el permiso especificado.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermission.AccessEntries">
      <summary>Obtiene la colección de objetos <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> asociada al permiso actual.</summary>
      <returns>Un elemento <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection" /> que contiene los objetos <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> para este elemento <see cref="T:System.Security.Permissions.KeyContainerPermission" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermission.Flags">
      <summary>Obtiene las marcas de permiso del contenedor de claves que se aplicarán a todos los contenedores de claves asociados al permiso.</summary>
      <returns>Combinación bit a bit de los valores de <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermissionAccessEntry">
      <summary>Especifica los derechos de acceso para determinados contenedores de claves. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.Security.Cryptography.CspParameters,System.Security.Permissions.KeyContainerPermissionFlags)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" />, utilizando los permisos de acceso y los parámetros especificados del proveedor de servicios criptográficos (CSP).</summary>
      <param name="parameters">Objeto <see cref="T:System.Security.Cryptography.CspParameters" /> que contiene los parámetros de proveedor de servicios criptográficos (CSP).</param>
      <param name="flags">Combinación bit a bit de los valores de <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" />.</param>
      <exception cref="T:System.ArgumentException">La entrada resultante tendría acceso sin restricciones.</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.Security.Permissions.KeyContainerPermissionFlags)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" />, utilizando el nombre y los permisos de acceso especificados del contenedor de claves.</summary>
      <param name="keyContainerName">Nombre del contenedor de claves.</param>
      <param name="flags">Combinación bit a bit de los valores de <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" />.</param>
      <exception cref="T:System.ArgumentException">La entrada resultante tendría acceso sin restricciones.</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.String,System.Int32,System.String,System.Int32,System.Security.Permissions.KeyContainerPermissionFlags)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> con los valores de propiedades especificados.</summary>
      <param name="keyStore">Nombre del almacén de claves.</param>
      <param name="providerName">Nombre del proveedor.</param>
      <param name="providerType">Código de tipo del proveedor. Vea la propiedad <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType" /> para obtener los valores posibles.</param>
      <param name="keyContainerName">Nombre del contenedor de claves.</param>
      <param name="keySpec">Especificación de la clave. Vea la propiedad <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec" /> para obtener los valores posibles.</param>
      <param name="flags">Combinación bit a bit de los valores de <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" />.</param>
      <exception cref="T:System.ArgumentException">La entrada resultante tendría acceso sin restricciones.</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals(System.Object)">
      <summary>Determina si el objeto <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> especificado es igual a la instancia actual.</summary>
      <param name="o">Objeto <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> que se va a comparar con la instancia actual.</param>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> especificado es igual al objeto <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode">
      <summary>Obtiene un código hash para la instancia actual que es compatible con los algoritmos hash y estructuras de datos tales como las tablas hash.</summary>
      <returns>Código hash para el objeto <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> actual.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags">
      <summary>Obtiene o establece los permisos del contenedor de claves.</summary>
      <returns>Combinación bit a bit de los valores de <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" />. De manera predeterminada, es <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.NoFlags" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName">
      <summary>Obtiene o establece el nombre del contenedor de claves.</summary>
      <exception cref="T:System.ArgumentException">La entrada resultante tendría acceso sin restricciones.</exception>
      <returns>Nombre del contenedor de claves.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec">
      <summary>Obtiene o establece la especificación de clave.</summary>
      <exception cref="T:System.ArgumentException">La entrada resultante tendría acceso sin restricciones.</exception>
      <returns>Uno de los valores AT_ definido en el archivo de encabezado Wincrypt.h.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore">
      <summary>Obtiene o establece el nombre del almacén de claves.</summary>
      <exception cref="T:System.ArgumentException">La entrada resultante tendría acceso sin restricciones.</exception>
      <returns>Nombre del almacén de claves.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName">
      <summary>Obtiene o establece el nombre del proveedor.</summary>
      <exception cref="T:System.ArgumentException">La entrada resultante tendría acceso sin restricciones.</exception>
      <returns>Nombre del proveedor.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType">
      <summary>Obtiene o establece el tipo de proveedor.</summary>
      <exception cref="T:System.ArgumentException">La entrada resultante tendría acceso sin restricciones.</exception>
      <returns>Uno de los valores PROV_ definido en el archivo de encabezado Wincrypt.h.</returns>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">
      <summary>Representa una colección de objetos <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" />. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.#ctor" />
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Add(System.Security.Permissions.KeyContainerPermissionAccessEntry)">
      <summary>Agrega un objeto <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> a la colección.</summary>
      <param name="accessEntry">Objeto <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> que se agrega.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="accessEntry" /> es <see langword="null" />.</exception>
      <returns>Índice donde se insertó el nuevo elemento.</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Clear">
      <summary>Quita todos los objetos <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> de la colección.</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copia los elementos de <see cref="T:System.Collections.ICollection" /> en <see cref="T:System.Array" />, empezando por un índice determinado de <see cref="T:System.Array" />.</summary>
      <param name="array">Matriz unidimensional como destino de los elementos copiados de <see cref="T:System.Collections.ICollection" />. La matriz debe tener una indización de base cero.</param>
      <param name="index">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</param>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.CopyTo(System.Security.Permissions.KeyContainerPermissionAccessEntry[],System.Int32)">
      <summary>Copia los elementos de la colección en una matriz unidimensional compatible, empezando en el índice especificado de la matriz de destino.</summary>
      <param name="array">Matriz de <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> unidimensional que constituye el destino de los elementos copiados desde la colección actual.</param>
      <param name="index">Índice de <paramref name="array" /> en el que se inicia la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> es menor que el límite inferior de <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> es multidimensional.  
  
o bien 
El número de elementos de la colección es mayor que el espacio disponible desde <paramref name="index" /> hasta el final del <paramref name="array" /> de destino.</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.GetEnumerator">
      <summary>Devuelve un objeto <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator" /> que se puede utilizar para recorrer en iteración los objetos de la colección.</summary>
      <returns>Objeto <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator" /> que se puede utilizar para recorrer en iteración la colección.</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IndexOf(System.Security.Permissions.KeyContainerPermissionAccessEntry)">
      <summary>Obtiene el índice que ocupa en la colección el objeto <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> especificado, si existe en la colección.</summary>
      <param name="accessEntry">Objeto <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> que se va a buscar.</param>
      <returns>Índice del objeto <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> especificado de la colección, o -1 si no se encuentra ninguna coincidencia.</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Remove(System.Security.Permissions.KeyContainerPermissionAccessEntry)">
      <summary>Quita el objeto <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> especificado de la colección.</summary>
      <param name="accessEntry">Objeto <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> que se quita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="accessEntry" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Devuelve un objeto <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator" /> que se puede utilizar para recorrer en iteración los objetos de la colección.</summary>
      <returns>Objeto <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator" /> que se puede utilizar para recorrer en iteración la colección.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Count">
      <summary>Obtiene el número de elementos de la colección.</summary>
      <returns>El número de objetos <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> de la colección.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IsSynchronized">
      <summary>Obtiene un valor que indica si la colección está sincronizada (es segura para la ejecución de subprocesos).</summary>
      <returns>
        <see langword="false" /> en todos los casos.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Item(System.Int32)">
      <summary>Obtiene el elemento en el índice especificado de la colección.</summary>
      <param name="index">Índice de base cero del elemento al que se obtendrá acceso.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> es mayor o igual al recuento de la colección.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="index" /> es negativo.</exception>
      <returns>Objeto <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> del índice especificado de la colección .</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.SyncRoot">
      <summary>Obtiene un objeto que se puede utilizar para sincronizar el acceso a la colección.</summary>
      <returns>Objeto que se puede usar para sincronizar el acceso a la colección.</returns>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
      <summary>Representa el enumerador de los objetos <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> en un elemento <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.#ctor" />
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext">
      <summary>Se desplaza al siguiente elemento de la colección.</summary>
      <returns>Es <see langword="true" /> si el enumerador avanzó con éxito hasta el siguiente elemento; es <see langword="false" /> si el enumerador alcanzó el final de la colección.</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset">
      <summary>Restablece el enumerador al principio de la colección.</summary>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current">
      <summary>Obtiene la entrada actual de la colección.</summary>
      <exception cref="T:System.InvalidOperationException">Se tiene acceso a la propiedad <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /> antes de llamar por primera vez al método <see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" />. El cursor se encuentra ubicado delante del primer objeto de la colección.  
  
o bien 
Se tiene acceso a la propiedad <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /> después de que una llamada al método <see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /> devuelva <see langword="false" />, lo que indica que el cursor se encuentra después del último objeto de la colección.</exception>
      <returns>El objeto actual <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> en la colección.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current">
      <summary>Obtiene el objeto actual de la colección.</summary>
      <returns>Objeto actual en la colección.</returns>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermissionAttribute">
      <summary>Permite acciones de seguridad de <see cref="T:System.Security.Permissions.KeyContainerPermission" /> para que se apliquen al código mediante seguridad declarativa. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.KeyContainerPermissionAttribute" /> con la acción de seguridad especificada.</summary>
      <param name="action">Uno de los valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAttribute.CreatePermission">
      <summary>Crea y devuelve un nuevo objeto <see cref="T:System.Security.Permissions.KeyContainerPermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.KeyContainerPermission" /> que corresponde a este atributo.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.Flags">
      <summary>Obtiene o establece los permisos del contenedor de claves.</summary>
      <returns>Combinación bit a bit de los valores de <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" />. De manera predeterminada, es <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.NoFlags" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerName">
      <summary>Obtiene o establece el nombre del contenedor de claves.</summary>
      <returns>Nombre del contenedor de claves.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.KeySpec">
      <summary>Obtiene o establece la especificación de clave.</summary>
      <returns>Uno de los valores AT_ definido en el archivo de encabezado Wincrypt.h.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.KeyStore">
      <summary>Obtiene o establece el nombre del almacén de claves.</summary>
      <returns>Nombre del almacén de claves. El valor predeterminado es "*".</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.ProviderName">
      <summary>Obtiene o establece el nombre del proveedor.</summary>
      <returns>Nombre del proveedor.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.ProviderType">
      <summary>Obtiene o establece el tipo de proveedor.</summary>
      <returns>Uno de los valores PROV_ definido en el archivo de encabezado Wincrypt.h.</returns>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermissionFlags">
      <summary>Especifica el tipo de acceso al contenedor de claves permitido.</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.AllFlags">
      <summary>Cree, descifre, elimine y abra un contenedor de claves; exporte e importe una clave; firme archivos utilizando una clave; y vea y cambie la lista de control de acceso para un contenedor de claves.</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.ChangeAcl">
      <summary>Cambie la lista de control de acceso (ACL) para un contenedor de claves.</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Create">
      <summary>
        <para>Cree un contenedor de claves.</para>
        <para>La creación de un contenedor de claves también crea un archivo en el disco. Es muy importante que cualquier contenedor de claves que se cree se quite cuando ya no se utilice.</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Decrypt">
      <summary>
        <para>Descifre un contenedor de claves.</para>
        <para>El descifrado es una operación privilegiada porque utiliza la clave privada.</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Delete">
      <summary>
        <para>Elimine un contenedor de claves.</para>
        <para>La eliminación de un contenedor de claves puede constituir un ataque por denegación de servicio porque impide el uso de archivos cifrados o firmados con la clave. Por lo tanto, la eliminación es una operación privilegiada.</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Export">
      <summary>
        <para>Exporte una clave de un contenedor de claves.</para>
        <para>La capacidad de exportar una clave es potencialmente dañina porque quita la exclusividad de la clave.</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Import">
      <summary>
        <para>Importe una clave en un contenedor de claves.</para>La capacidad de importar una clave puede ser tan dañina como la capacidad de eliminar un contenedor, ya que la importación de una clave en un contenedor de claves con nombre reemplaza la clave existente.<para></para></summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.NoFlags">
      <summary>Sin acceso a un contenedor de claves.</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Open">
      <summary>
        <para>Abra un contenedor de claves y utilice la clave pública.</para>
        <para>
          <see langword="Open" /> no da permiso para firmar o descifrar archivos mediante la clave privada, pero permite al usuario comprobar las firmas de los archivos y cifrarlos. Solo el propietario de la clave puede descifrar estos archivos mediante la clave privada.</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign">
      <summary>
        <para>Firme un archivo mediante una clave.</para>
        <para>La capacidad de firmar un archivo es potencialmente dañina porque puede permitir que un usuario firme un archivo mediante la clave de otro usuario.</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.ViewAcl">
      <summary>Vea la lista de control de acceso (ACL) para un contenedor de claves.</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermission">
      <summary>
        <see cref="T:System.Security.Permissions.MediaPermission" /> describe un conjunto de permisos de seguridad que controla la capacidad de contenido multimedia de audio, imagen y vídeo para trabajar en una aplicación Windows Presentation Foundation (WPF) de confianza parcial.</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.MediaPermission" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.MediaPermission" /> especificando el nivel de permiso de audio.</summary>
      <param name="permissionAudio">Valor enumerado de <see cref="T:System.Security.Permissions.MediaPermissionAudio" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio,System.Security.Permissions.MediaPermissionVideo,System.Security.Permissions.MediaPermissionImage)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.MediaPermission" /> especificando el audio, el vídeo y los niveles de permiso de imagen.</summary>
      <param name="permissionAudio">Valor enumerado de <see cref="T:System.Security.Permissions.MediaPermissionAudio" />.</param>
      <param name="permissionVideo">Valor enumerado de <see cref="T:System.Security.Permissions.MediaPermissionVideo" />.</param>
      <param name="permissionImage">Valor enumerado de <see cref="T:System.Security.Permissions.MediaPermissionImage" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionImage)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.MediaPermission" /> mediante la especificación del nivel de permiso de imagen.</summary>
      <param name="permissionImage">Valor enumerado de <see cref="T:System.Security.Permissions.MediaPermissionImage" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionVideo)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.MediaPermission" /> especificando el nivel de permiso de vídeo.</summary>
      <param name="permissionVideo">Valor enumerado de <see cref="T:System.Security.Permissions.MediaPermissionVideo" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.MediaPermission" /> especificando un estado de permiso.</summary>
      <param name="state">Valor enumerado de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Copy">
      <summary>Crea y devuelve una copia idéntica del permiso actual.</summary>
      <returns>Copia del permiso actual.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un permiso con un estado especificado a partir de una codificación XML.</summary>
      <param name="securityElement">Codificación XML que se usa para reconstruir el permiso.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Intersect(System.Security.IPermission)">
      <summary>Crea y devuelve un permiso que es la intersección del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para formar intersección con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <returns>La intersección de dos permisos es un permiso que describe el estado que ambos describen en común. Solo será válida para el permiso intersectado una petición que pase ambos permisos originales.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina si el permiso actual es un subconjunto del permiso especificado.</summary>
      <param name="target">Permiso que se va a probar para la relación de subconjunto. Este permiso debe ser del mismo tipo que el permiso actual.</param>
      <returns>
        <see langword="true" /> si el permiso actual es un subconjunto del permiso especificado; si no, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.IsUnrestricted">
      <summary>Devuelve un valor que indica si el permiso actual no está restringido.</summary>
      <returns>
        <see langword="true" /> si los permisos de audio, imagen y vídeo son todos no restringidos; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.ToXml">
      <summary>Crea una codificación XML del permiso y su estado actual.</summary>
      <returns>Codificación XML del permiso, incluida cualquier información de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Union(System.Security.IPermission)">
      <summary>Crea un permiso que es la unión del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para combinar con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <returns>Nuevo permiso que representa la unión del permiso actual y el permiso especificado.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Audio">
      <summary>Obtiene el valor actual del nivel de permiso de audio.</summary>
      <returns>Nivel de permiso de audio.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Image">
      <summary>Obtiene el valor actual del nivel de permiso de imagen.</summary>
      <returns>Nivel de permiso de imagen.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Video">
      <summary>Obtiene el valor actual del nivel de permiso de vídeo.</summary>
      <returns>Nivel de permiso multimedia.</returns>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionAttribute">
      <summary>Permite acciones de seguridad de <see cref="T:System.Security.Permissions.MediaPermission" /> para que se apliquen al código mediante seguridad declarativa.</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
      <param name="action">Uno de los valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermissionAttribute.CreatePermission">
      <summary>Crea y devuelve un nuevo objeto <see cref="T:System.Security.Permissions.MediaPermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.MediaPermission" /> que se corresponde con este atributo.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Audio">
      <summary>Obtiene o establece el nivel de permisos de audio del elemento <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
      <returns>El estado de la <see cref="T:System.Security.Permissions.MediaPermissionAudio" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Image">
      <summary>Obtiene o establece el nivel de permisos para el <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
      <returns>El estado de la <see cref="T:System.Security.Permissions.MediaPermissionImage" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Video">
      <summary>Obtiene o establece el nivel de permisos de vídeo del elemento <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
      <returns>El estado de la <see cref="T:System.Security.Permissions.MediaPermissionVideo" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionAudio">
      <summary>Especifica el nivel de permiso del audio.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.AllAudio">
      <summary>Permiso que permite la reproducción de audio sin restricciones.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.NoAudio">
      <summary>Permiso que deniega toda reproducción de audio.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.SafeAudio">
      <summary>Permiso que permite la reproducción segura y limitada de audio, incluida la denegación del acceso de secuencias al archivo de imágenes.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.SiteOfOriginAudio">
      <summary>Permiso que sólo permite la reproducción de audio de los archivos ubicados en el sitio de origen de la aplicación.</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionImage">
      <summary>Especifica el nivel de permiso de las imágenes.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.AllImage">
      <summary>Permiso que permite la presentación de imágenes sin restricciones.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.NoImage">
      <summary>Permiso que deniega la presentación de todas las imágenes.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.SafeImage">
      <summary>Permiso que permite la presentación segura y limitada de imágenes, incluida la denegación del acceso de secuencias al archivo de imágenes.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.SiteOfOriginImage">
      <summary>Permiso que sólo permite la presentación de imágenes ubicadas en el sitio de origen de la aplicación.</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionVideo">
      <summary>Especifica el nivel de permiso del vídeo.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.AllVideo">
      <summary>Permiso que permite la reproducción de vídeo sin restricciones.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.NoVideo">
      <summary>Permiso que deniega toda reproducción de vídeo.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.SafeVideo">
      <summary>Permiso que permite la reproducción segura y limitada de vídeo, incluida la denegación del acceso de secuencias al archivo de imágenes.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.SiteOfOriginVideo">
      <summary>Permiso que sólo permite la reproducción de vídeo de los archivos ubicados en el sitio de origen de la aplicación.</summary>
    </member>
    <member name="T:System.Security.Permissions.PermissionSetAttribute">
      <summary>Permite aplicar acciones de seguridad para <see cref="T:System.Security.PermissionSet" /> en el código mediante el uso de la seguridad declarativa. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Permissions.PermissionSetAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.PermissionSetAttribute" /> con la acción de seguridad especificada.</summary>
      <param name="action">Uno de los valores de enumeración que especifica una acción de seguridad.</param>
    </member>
    <member name="M:System.Security.Permissions.PermissionSetAttribute.CreatePermission">
      <summary>Este método no se utiliza.</summary>
      <returns>Una referencia nula (<see langword="nothing" /> en Visual Basic) en todos los casos.</returns>
    </member>
    <member name="M:System.Security.Permissions.PermissionSetAttribute.CreatePermissionSet">
      <summary>Crea y devuelve un nuevo conjunto de permisos basándose en este objeto de atributo del conjunto de permisos.</summary>
      <returns>Nuevo conjunto de permisos.</returns>
    </member>
    <member name="P:System.Security.Permissions.PermissionSetAttribute.File">
      <summary>Obtiene o establece un archivo que contiene la representación XML de un conjunto de permisos personalizado que va a declararse.</summary>
      <returns>La ruta de acceso física al archivo que contiene la representación XML del conjunto de permisos.</returns>
    </member>
    <member name="P:System.Security.Permissions.PermissionSetAttribute.Hex">
      <summary>Obtiene o establece la representación hexadecimal del conjunto de permisos en código XML.</summary>
      <returns>Representación hexadecimal del conjunto de permisos en código XML.</returns>
    </member>
    <member name="P:System.Security.Permissions.PermissionSetAttribute.Name">
      <summary>Obtiene o establece el nombre del conjunto de permisos.</summary>
      <returns>Nombre de un objeto <see cref="T:System.Security.NamedPermissionSet" /> inmutable (uno de varios conjuntos de permisos contenidos en la directiva predeterminada y que no pueden modificarse).</returns>
    </member>
    <member name="P:System.Security.Permissions.PermissionSetAttribute.UnicodeEncoded">
      <summary>Obtiene o establece un valor que indica si el archivo especificado por <see cref="P:System.Security.Permissions.PermissionSetAttribute.File" /> está codificado en Unicode o en ASCII.</summary>
      <returns>
        <see langword="true" /> si el archivo está codificado en Unicode; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.PermissionSetAttribute.XML">
      <summary>Obtiene o establece la representación XML de un conjunto de permisos.</summary>
      <returns>Representación XML de un conjunto de permisos.</returns>
    </member>
    <member name="T:System.Security.Permissions.PrincipalPermission">
      <summary>Permite comprobar frente a la entidad de seguridad activa (vea <see cref="T:System.Security.Principal.IPrincipal" />) con las construcciones de lenguaje definidas tanto para la acción de seguridad declarativa como la imperativa. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.PrincipalPermission" /> con el objeto <see cref="T:System.Security.Permissions.PermissionState" /> especificado.</summary>
      <param name="state">Uno de los valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="state" /> no es un valor <see cref="T:System.Security.Permissions.PermissionState" /> válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.PrincipalPermission" /> para el objeto <paramref name="name" /> y <paramref name="role" /> especificado.</summary>
      <param name="name">Nombre del usuario del objeto <see cref="T:System.Security.Principal.IPrincipal" />.</param>
      <param name="role">El rol del usuario del objeto <see cref="T:System.Security.Principal.IPrincipal" /> (por ejemplo, Administrador).</param>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.#ctor(System.String,System.String,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.PrincipalPermission" /> para los <paramref name="name" />, <paramref name="role" /> especificados y un estado de autenticación.</summary>
      <param name="name">Nombre del usuario del objeto <see cref="T:System.Security.Principal.IPrincipal" />.</param>
      <param name="role">El rol del usuario del objeto <see cref="T:System.Security.Principal.IPrincipal" /> (por ejemplo, Administrador).</param>
      <param name="isAuthenticated">
        <see langword="true" /> para indicar que el usuario está autenticado; en caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.Copy">
      <summary>Crea y devuelve una copia idéntica del permiso actual.</summary>
      <returns>Copia del permiso actual.</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.Demand">
      <summary>Determina en tiempo de ejecución si el elemento principal actual coincide con la entidad de seguridad especificada por el permiso actual.</summary>
      <exception cref="T:System.Security.SecurityException">La entidad de seguridad actual no pasa la comprobación de seguridad para la entidad de seguridad especificada por el permiso actual.  
  
o bien 
El <see cref="T:System.Security.Principal.IPrincipal" /> actual es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.Equals(System.Object)">
      <summary>Determina si el objeto <see cref="T:System.Security.Permissions.PrincipalPermission" /> especificado es igual al objeto <see cref="T:System.Security.Permissions.PrincipalPermission" /> actual.</summary>
      <param name="o">Objeto <see cref="T:System.Security.Permissions.PrincipalPermission" /> que se va a comparar con el objeto <see cref="T:System.Security.Permissions.PrincipalPermission" /> actual.</param>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Security.Permissions.PrincipalPermission" /> especificado es igual al objeto <see cref="T:System.Security.Permissions.PrincipalPermission" /> actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un permiso con un estado especificado a partir de una codificación XML.</summary>
      <param name="elem">Codificación XML que se usa para reconstruir el permiso.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="elem" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="elem" /> no es un elemento de permiso válido.  
  
o bien 
El número de la versión del parámetro <paramref name="elem" /> no es válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.GetHashCode">
      <summary>Obtiene un código hash para el objeto <see cref="T:System.Security.Permissions.PrincipalPermission" /> que es adecuado para su uso en algoritmos hash y estructuras de datos como una tabla hash.</summary>
      <returns>Código hash para el objeto <see cref="T:System.Security.Permissions.PrincipalPermission" /> actual.</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.Intersect(System.Security.IPermission)">
      <summary>Crea y devuelve un permiso que es la intersección del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para formar intersección con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es una instancia de la misma clase que el permiso actual.</exception>
      <returns>Nuevo permiso que representa la intersección del permiso actual y del permiso especificado. Este nuevo permiso será <see langword="null" /> si la intersección está vacía.</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina si el permiso actual es un subconjunto del permiso especificado.</summary>
      <param name="target">Permiso que se va a probar para la relación de subconjunto. Este permiso debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> es un objeto que no es del mismo tipo que el permiso actual.</exception>
      <returns>
        <see langword="true" /> si el permiso actual es un subconjunto del permiso especificado; si no, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.IsUnrestricted">
      <summary>Devuelve un valor que indica si el permiso actual no está restringido.</summary>
      <returns>
        <see langword="true" /> si el permiso actual no está restringido; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.ToString">
      <summary>Crea y devuelve una cadena que representa el permiso actual.</summary>
      <returns>Representación del permiso actual.</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.ToXml">
      <summary>Crea una codificación XML del permiso y su estado actual.</summary>
      <returns>Codificación XML del permiso, incluida cualquier información de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.Union(System.Security.IPermission)">
      <summary>Crea un permiso que es la unión del permiso actual y el permiso especificado.</summary>
      <param name="other">Permiso para combinar con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="other" /> es un objeto que no es del mismo tipo que el permiso actual.</exception>
      <returns>Nuevo permiso que representa la unión del permiso actual y el permiso especificado.</returns>
    </member>
    <member name="T:System.Security.Permissions.PrincipalPermissionAttribute">
      <summary>Permite acciones de seguridad de <see cref="T:System.Security.Permissions.PrincipalPermission" /> para que se apliquen al código mediante seguridad declarativa. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" /> con el objeto <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Uno de los valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermissionAttribute.CreatePermission">
      <summary>Crea y devuelve un nuevo objeto <see cref="T:System.Security.Permissions.PrincipalPermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.PrincipalPermission" /> que se corresponde con este atributo.</returns>
    </member>
    <member name="P:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated">
      <summary>Obtiene o establece un valor que indica si la entidad de seguridad actual se ha autenticado por el proveedor subyacente de seguridad basada en roles.</summary>
      <returns>
        <see langword="true" /> si se ha autenticado la entidad de seguridad actual; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.PrincipalPermissionAttribute.Name">
      <summary>Obtiene o establece el nombre de la identidad asociado a la entidad de seguridad principal.</summary>
      <returns>Nombre que se hará coincidir con el proporcionado por el proveedor de seguridad basada en roles subyacente.</returns>
    </member>
    <member name="P:System.Security.Permissions.PrincipalPermissionAttribute.Role">
      <summary>Obtiene o establece la pertenencia a un rol de seguridad especificado.</summary>
      <returns>Nombre de un rol del proveedor de seguridad basada en roles subyacente.</returns>
    </member>
    <member name="T:System.Security.Permissions.PublisherIdentityPermission">
      <summary>Representa la identidad de un editor de software. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.PublisherIdentityPermission" /> con el certificado de Authenticode X.509v3 especificado.</summary>
      <param name="certificate">Un certificado X.509 que representa la identidad del editor de software.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="certificate" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="certificate" /> no es un certificado válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.PublisherIdentityPermission" /> con el objeto <see cref="T:System.Security.Permissions.PermissionState" /> especificado.</summary>
      <param name="state">Uno de los valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="state" /> no es un valor válido de <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.Copy">
      <summary>Crea y devuelve una copia idéntica del permiso actual.</summary>
      <returns>Copia del permiso actual.</returns>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un permiso con un estado especificado a partir de una codificación XML.</summary>
      <param name="esd">Codificación XML que se usa para reconstruir el permiso.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="esd" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="esd" /> no es un elemento de permiso válido.  
  
o bien 
El número de la versión del parámetro <paramref name="esd" /> no es válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.Intersect(System.Security.IPermission)">
      <summary>Crea y devuelve un permiso que es la intersección del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para formar intersección con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</exception>
      <returns>Nuevo permiso que representa la intersección del permiso actual y del permiso especificado. Este nuevo permiso es <see langword="null" /> si la intersección está vacía.</returns>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina si el permiso actual es un subconjunto del permiso especificado.</summary>
      <param name="target">Permiso que se va a probar para la relación de subconjunto. Este permiso debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</exception>
      <returns>
        <see langword="true" /> si el permiso actual es un subconjunto del permiso especificado; si no, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.ToXml">
      <summary>Crea una codificación XML del permiso y su estado actual.</summary>
      <returns>Codificación XML del permiso, incluida cualquier información de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.Union(System.Security.IPermission)">
      <summary>Crea un permiso que es la unión del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para combinar con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.  
  
o bien 
Los dos permisos no son iguales.</exception>
      <returns>Nuevo permiso que representa la unión del permiso actual y el permiso especificado.</returns>
    </member>
    <member name="P:System.Security.Permissions.PublisherIdentityPermission.Certificate">
      <summary>Obtiene o establece un certificado Authenticode X.509v3 que representa la identidad del editor del software.</summary>
      <exception cref="T:System.ArgumentNullException">El valor de <see cref="P:System.Security.Permissions.PublisherIdentityPermission.Certificate" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Permissions.PublisherIdentityPermission.Certificate" /> no es un certificado válido.</exception>
      <exception cref="T:System.NotSupportedException">No se puede establecer la propiedad porque la identidad es ambigua.</exception>
      <returns>Un certificado X.509 que representa la identidad del editor de software.</returns>
    </member>
    <member name="T:System.Security.Permissions.PublisherIdentityPermissionAttribute">
      <summary>Permite acciones de seguridad de <see cref="T:System.Security.Permissions.PublisherIdentityPermission" /> para que se apliquen al código mediante seguridad declarativa. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.PublisherIdentityPermissionAttribute" /> con el objeto <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Uno de los valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermissionAttribute.CreatePermission">
      <summary>Crea y devuelve una nueva instancia de <see cref="T:System.Security.Permissions.PublisherIdentityPermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.PublisherIdentityPermission" /> que se corresponde con este atributo.</returns>
    </member>
    <member name="P:System.Security.Permissions.PublisherIdentityPermissionAttribute.CertFile">
      <summary>Obtiene o establece un archivo de certificación que contiene un certificado Authenticode X.509v3.</summary>
      <returns>Ruta de acceso a un archivo de certificación X.509 (normalmente con la extensión .cer).</returns>
    </member>
    <member name="P:System.Security.Permissions.PublisherIdentityPermissionAttribute.SignedFile">
      <summary>Obtiene o establece un archivo firmado del que se puede extraer un certificado Authenticode X.509v3.</summary>
      <returns>La ruta de acceso de un archivo firmado con la firma Authenticode.</returns>
    </member>
    <member name="P:System.Security.Permissions.PublisherIdentityPermissionAttribute.X509Certificate">
      <summary>Obtiene o establece un certificado Authenticode X.509v3 que identifica al publicador del código de llamada.</summary>
      <returns>Representación hexadecimal del certificado X.509.</returns>
    </member>
    <member name="T:System.Security.Permissions.ReflectionPermission">
      <summary>Controla el acceso a tipos no públicos y miembros a través de las API de <see cref="N:System.Reflection" />. Controla algunas características de las API de <see cref="N:System.Reflection.Emit" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.ReflectionPermission" /> con permiso totalmente restringido o sin restricción tal como se especifica.</summary>
      <param name="state">Uno de los valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="state" /> no es un valor válido de <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.#ctor(System.Security.Permissions.ReflectionPermissionFlag)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.ReflectionPermission" /> con el acceso especificado.</summary>
      <param name="flag">Uno de los valores de <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" />.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="flag" /> no es un valor válido de <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.Copy">
      <summary>Crea y devuelve una copia idéntica del permiso actual.</summary>
      <returns>Copia del permiso actual.</returns>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un permiso con un estado especificado a partir de una codificación XML.</summary>
      <param name="esd">Codificación XML que se usa para reconstruir el permiso.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="esd" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="esd" /> no es un elemento de permiso válido.  
  
o bien 
El número de la versión del parámetro <paramref name="esd" /> no es válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.Intersect(System.Security.IPermission)">
      <summary>Crea y devuelve un permiso que es la intersección del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para formar intersección con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</exception>
      <returns>Nuevo permiso que representa la intersección del permiso actual y del permiso especificado. Este nuevo permiso es <see langword="null" /> si la intersección está vacía.</returns>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina si el permiso actual es un subconjunto del permiso especificado.</summary>
      <param name="target">Permiso que se va a probar para la relación de subconjunto. Este permiso debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</exception>
      <returns>
        <see langword="true" /> si el permiso actual es un subconjunto del permiso especificado; si no, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.IsUnrestricted">
      <summary>Devuelve un valor que indica si el permiso actual no está restringido.</summary>
      <returns>
        <see langword="true" /> si el permiso actual no está restringido; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.ToXml">
      <summary>Crea una codificación XML del permiso y su estado actual.</summary>
      <returns>Codificación XML del permiso, incluida cualquier información de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.Union(System.Security.IPermission)">
      <summary>Crea un permiso que es la unión del permiso actual y el permiso especificado.</summary>
      <param name="other">Permiso para combinar con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="other" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</exception>
      <returns>Nuevo permiso que representa la unión del permiso actual y el permiso especificado.</returns>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermission.Flags">
      <summary>Obtiene o establece el tipo de reflexión permitido para el permiso actual.</summary>
      <exception cref="T:System.ArgumentException">Se realiza un intento para establecer esta propiedad en un valor no válido. Consulte <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> para obtener los valores válidos.</exception>
      <returns>Marcadores establecidos para el permiso actual.</returns>
    </member>
    <member name="T:System.Security.Permissions.ReflectionPermissionAttribute">
      <summary>Permite acciones de seguridad de <see cref="T:System.Security.Permissions.ReflectionPermission" /> para que se apliquen al código mediante seguridad declarativa.</summary>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.ReflectionPermissionAttribute" /> con el objeto <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Uno de los valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermissionAttribute.CreatePermission">
      <summary>Crea y devuelve un nuevo objeto <see cref="T:System.Security.Permissions.ReflectionPermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.ReflectionPermission" /> que se corresponde con este atributo.</returns>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.Flags">
      <summary>Obtiene o establece los usos actualmente permitidos de la reflexión.</summary>
      <exception cref="T:System.ArgumentException">Se realiza un intento para establecer esta propiedad en un valor no válido. Consulte <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> para obtener los valores válidos.</exception>
      <returns>Uno o varios de los valores <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> combinados mediante una operación OR bit a bit.</returns>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.MemberAccess">
      <summary>Obtiene o establece un valor que indica si se pueden invocar operaciones sobre miembros no públicos.</summary>
      <returns>
        <see langword="true" /> si se permite la invocación de operaciones en miembros no públicos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.ReflectionEmit">
      <summary>Obtiene o establece un valor que indica si se permite el uso de ciertas características en <see cref="N:System.Reflection.Emit" />, como emitir los símbolos de depuración.</summary>
      <returns>
        <see langword="true" /> si se permite el uso de las características afectadas; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.RestrictedMemberAccess">
      <summary>Obtiene o establece un valor que indica si se permite la invocación restringida de miembros no públicos. La invocación restringida significa que el conjunto de permisos del ensamblado que contiene el miembro no público que se invoca debe ser igual o debe ser un subconjunto del conjunto de permisos del ensamblado que realiza la invocación.</summary>
      <returns>
        <see langword="true" /> si se permite la invocación restringida de miembros no públicos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.TypeInformation">
      <summary>Obtiene o establece un valor que indica si se permite la reflexión en miembros que no se encuentran visibles.</summary>
      <returns>
        <see langword="true" /> si se permite la reflexión en miembros que no se encuentran visibles; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.ReflectionPermissionFlag">
      <summary>Especifica el uso permitido de los espacios de nombres <see cref="N:System.Reflection" /> y <see cref="N:System.Reflection.Emit" />.</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags">
      <summary>Se establece <see langword="TypeInformation" />, <see langword="MemberAccess" /> y <see langword="ReflectionEmit" />. <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags" /> no incluye <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess" />.</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess">
      <summary>Se permiten las operaciones de invocación en todos los miembros, sin tener en cuenta el conjunto de permisos concedidos. Si no se establece este marcador, sólo se permiten las operaciones de invocación en miembros visibles.</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags">
      <summary>Se permite la enumeración de tipos y miembros. Las operaciones de invocación se permiten en los tipos y miembros visibles.</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit">
      <summary>Se permite emitir símbolos de depuración. A partir de .NET Framework 2.0 Service Pack 1, este marcador no es necesario para emitir código.</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess">
      <summary>El acceso de miembro restringido se proporciona para el código de confianza parcial. El código de confianza parcial puede tener acceso a los tipos y miembros no públicos, pero sólo si el conjunto de permisos concedidos del código de confianza parcial incluye todos los permisos del conjunto de permisos del ensamblado que contiene los tipos y miembros no públicos a los que se obtiene acceso. Este marcador es nuevo en .NET Framework 2.0 SP1.</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.TypeInformation">
      <summary>Este marcador está obsoleto. No es necesario ningún marcador para enumerar tipos y miembros y examinar sus metadatos. Utilice <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags" /> en su lugar.</summary>
    </member>
    <member name="T:System.Security.Permissions.RegistryPermission">
      <summary>Controla la capacidad para tener acceso a las variables del registro. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.RegistryPermission" /> con permiso totalmente restringido o sin restricción tal como se especifica.</summary>
      <param name="state">Uno de los valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="state" /> no es un valor válido de <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.RegistryPermission" /> con el acceso especificado a las variables del registro especificadas y los derechos de acceso especificados a la información de control del registro.</summary>
      <param name="access">Uno de los valores de <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.</param>
      <param name="control">Combinación bit a bit de los valores de <see cref="T:System.Security.AccessControl.AccessControlActions" />.</param>
      <param name="pathList">Lista de variables de registro (separadas por punto y coma) a las que se concede acceso.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="access" /> no es un valor válido de <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.  
  
o bien 
El parámetro <paramref name="pathList" /> no es una cadena válida.</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.RegistryPermission" /> con el acceso especificado a las variables de registro especificadas.</summary>
      <param name="access">Uno de los valores de <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.</param>
      <param name="pathList">Lista de variables de registro (separadas por punto y coma) a las que se concede acceso.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="access" /> no es un valor válido de <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.  
  
o bien 
El parámetro <paramref name="pathList" /> no es una cadena válida.</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)">
      <summary>Agrega el acceso para las variables del Registro especificadas al estado existente del permiso, especificando acciones de control de acceso y acceso de permisos al Registro.</summary>
      <param name="access">Uno de los valores de <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.</param>
      <param name="actions">Uno de los valores de <see cref="T:System.Security.AccessControl.AccessControlActions" />.</param>
      <param name="pathList">Lista de variables del Registro (separadas por punto y coma).</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="access" /> no es un valor válido de <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.  
  
o bien 
El parámetro <paramref name="pathList" /> no es una cadena válida.</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)">
      <summary>Agrega acceso para las variables del registro especificado en el estado existente del permiso.</summary>
      <param name="access">Uno de los valores de <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.</param>
      <param name="pathList">Lista de variables de registro (separadas por punto y coma).</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="access" /> no es un valor válido de <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.  
  
o bien 
El parámetro <paramref name="pathList" /> no es una cadena válida.</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.Copy">
      <summary>Crea y devuelve una copia idéntica del permiso actual.</summary>
      <returns>Copia del permiso actual.</returns>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un permiso con un estado especificado a partir de una codificación XML.</summary>
      <param name="elem">Codificación XML que se usa para reconstruir el permiso.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="elem" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="elem" /> no es un elemento de permiso válido.  
  
o bien 
El número de la versión del parámetro <paramref name="elem" /> no es válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)">
      <summary>Obtiene las rutas de acceso para todas las variables del Registro con el <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> especificado.</summary>
      <param name="access">Uno de los valores de <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> que representa un tipo único de acceso a variables del Registro.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> no es un valor válido de <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.  
  
o bien 
 <paramref name="access" /> es <see cref="F:System.Security.Permissions.RegistryPermissionAccess.AllAccess" />, que representa más de un tipo de acceso a variables del Registro o <see cref="F:System.Security.Permissions.RegistryPermissionAccess.NoAccess" />, que no representa ningún tipo de acceso a variable del Registro.</exception>
      <returns>Lista de las variables del Registro (separadas por punto y coma) con el <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> especificado.</returns>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.Intersect(System.Security.IPermission)">
      <summary>Crea y devuelve un permiso que es la intersección del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para formar intersección con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</exception>
      <returns>Nuevo permiso que representa la intersección del permiso actual y del permiso especificado. Este nuevo permiso es <see langword="null" /> si la intersección está vacía.</returns>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina si el permiso actual es un subconjunto del permiso especificado.</summary>
      <param name="target">Permiso que se va a probar para la relación de subconjunto. Este permiso debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</exception>
      <returns>
        <see langword="true" /> si el permiso actual es un subconjunto del permiso especificado; si no, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.IsUnrestricted">
      <summary>Devuelve un valor que indica si el permiso actual no está restringido.</summary>
      <returns>
        <see langword="true" /> si el permiso actual no está restringido; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.SetPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)">
      <summary>Establece un nuevo acceso para los nombres de variables del registro especificado en el estado existente del permiso.</summary>
      <param name="access">Uno de los valores de <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.</param>
      <param name="pathList">Lista de variables de registro (separadas por punto y coma).</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="access" /> no es un valor válido de <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.  
  
o bien 
El parámetro <paramref name="pathList" /> no es una cadena válida.</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.ToXml">
      <summary>Crea una codificación XML del permiso y su estado actual.</summary>
      <returns>Codificación XML del permiso, incluida cualquier información de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.Union(System.Security.IPermission)">
      <summary>Crea un permiso que es la unión del permiso actual y el permiso especificado.</summary>
      <param name="other">Permiso para combinar con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="other" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</exception>
      <returns>Nuevo permiso que representa la unión del permiso actual y el permiso especificado.</returns>
    </member>
    <member name="T:System.Security.Permissions.RegistryPermissionAccess">
      <summary>Especifica el acceso permitido a los valores y las claves del Registro.</summary>
    </member>
    <member name="F:System.Security.Permissions.RegistryPermissionAccess.AllAccess">
      <summary>Acceso <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /> y <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" /> a las variables del Registro. <see cref="F:System.Security.Permissions.RegistryPermissionAccess.AllAccess" /> representa varios valores de <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> y produce una excepción <see cref="T:System.ArgumentException" /> cuando se usa como parámetro <paramref name="access" /> para el método <see cref="M:System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)" />, que espera un valor único.</summary>
    </member>
    <member name="F:System.Security.Permissions.RegistryPermissionAccess.Create">
      <summary>Acceso de creación para las variables del Registro.</summary>
    </member>
    <member name="F:System.Security.Permissions.RegistryPermissionAccess.NoAccess">
      <summary>Sin acceso a las variables del Registro. <see cref="F:System.Security.Permissions.RegistryPermissionAccess.NoAccess" /> representa valores de <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> no válidos y produce una excepción <see cref="T:System.ArgumentException" /> cuando se usa como parámetro para el método <see cref="M:System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)" />, que espera un valor único.</summary>
    </member>
    <member name="F:System.Security.Permissions.RegistryPermissionAccess.Read">
      <summary>Acceso de lectura a las variables del Registro.</summary>
    </member>
    <member name="F:System.Security.Permissions.RegistryPermissionAccess.Write">
      <summary>Acceso de escritura a las variables del Registro.</summary>
    </member>
    <member name="T:System.Security.Permissions.RegistryPermissionAttribute">
      <summary>Permite acciones de seguridad de <see cref="T:System.Security.Permissions.RegistryPermission" /> para que se apliquen al código mediante seguridad declarativa. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.RegistryPermissionAttribute" /> con el objeto <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Uno de los valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="action" /> no es un valor <see cref="T:System.Security.Permissions.SecurityAction" /> válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermissionAttribute.CreatePermission">
      <summary>Crea y devuelve un nuevo objeto <see cref="T:System.Security.Permissions.RegistryPermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.RegistryPermission" /> que se corresponde con este atributo.</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.All">
      <summary>Obtiene o establece el acceso total para las claves del Registro especificadas.</summary>
      <exception cref="T:System.NotSupportedException">Se llama al descriptor de acceso get; sólo se proporciona para ofrecer compatibilidad con el compilador de C#.</exception>
      <returns>Lista de las rutas de acceso de claves del Registro separadas por punto y coma, para el acceso total.</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.ChangeAccessControl">
      <summary>Obtiene o establece el control de acceso a cambios para las claves del Registro especificadas.</summary>
      <returns>Lista de las rutas de acceso de claves del Registro separadas por punto y coma, para el control de acceso a cambios. .</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.Create">
      <summary>Obtiene o establece el acceso de nivel de creación para las claves del Registro especificadas.</summary>
      <returns>Lista de las rutas de acceso de claves del Registro separadas por punto y coma, para el acceso de nivel de creación.</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.Read">
      <summary>Obtiene o establece el acceso de lectura para las claves del Registro especificadas.</summary>
      <returns>Lista de las rutas de acceso de claves del Registro separadas por punto y coma, para el acceso de lectura.</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.ViewAccessControl">
      <summary>Obtiene o establece el control de acceso a vistas para las claves del Registro especificadas.</summary>
      <returns>Lista de las rutas de acceso de claves del Registro separadas por punto y coma, para el control de acceso a vistas.</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.ViewAndModify">
      <summary>Obtiene o establece un conjunto especificado de claves del Registro que se pueden ver y modificar.</summary>
      <exception cref="T:System.NotSupportedException">Se llama al descriptor de acceso get; sólo se proporciona para ofrecer compatibilidad con el compilador de C#.</exception>
      <returns>Lista de rutas de acceso de claves del Registro separadas por punto y coma, para el acceso de creación, lectura y escritura.</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.Write">
      <summary>Obtiene o establece el acceso de escritura para las claves del Registro especificadas.</summary>
      <returns>Lista de las rutas de acceso de claves del Registro separadas por punto y coma, para el acceso de escritura.</returns>
    </member>
    <member name="T:System.Security.Permissions.ResourcePermissionBase">
      <summary>Permite el control de los permisos de seguridad de acceso del código.</summary>
    </member>
    <member name="F:System.Security.Permissions.ResourcePermissionBase.Any">
      <summary>Especifica el carácter que se va a utilizar para representar cualquier carácter comodín.</summary>
    </member>
    <member name="F:System.Security.Permissions.ResourcePermissionBase.Local">
      <summary>Especifica el carácter que se va a utilizar para representar una referencia local.</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.ResourcePermissionBase" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.ResourcePermissionBase" /> con el nivel de acceso a los recursos especificado en el momento de la creación.</summary>
      <param name="state">Uno de los valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="state" /> no es un valor válido de <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)">
      <summary>Agrega una entrada de permiso al permiso.</summary>
      <param name="entry">
        <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> que se va a agregar.</param>
      <exception cref="T:System.ArgumentNullException">El <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> especificado es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">El número de elementos de la propiedad <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath" /> no es igual al número de elementos de la propiedad <see cref="P:System.Security.Permissions.ResourcePermissionBase.TagNames" />.  
  
o bien 
El <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> está ya incluido en el permiso.</exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.Clear">
      <summary>Borra el permiso de las entradas de permiso agregadas.</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.Copy">
      <summary>Crea y devuelve una copia idéntica del objeto de permiso actual.</summary>
      <returns>Copia del objeto de permiso actual.</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un objeto de seguridad con un estado especificado a partir de codificación XML.</summary>
      <param name="securityElement">Codificación XML que se usará para reconstruir el objeto de seguridad.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="securityElement" /> no es un elemento de permiso válido.  
  
o bien 
No se admite el número de la versión del parámetro <paramref name="securityElement" />.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="securityElement" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.GetPermissionEntries">
      <summary>Devuelve una matriz con los objetos <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> agregados a este permiso.</summary>
      <returns>Matriz de objetos <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> agregados a este permiso.</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)">
      <summary>Crea y devuelve un objeto de permiso que es la intersección entre el objeto de permiso actual y un objeto de permiso de destino.</summary>
      <param name="target">Objeto de permiso del mismo tipo que el objeto de permiso actual.</param>
      <exception cref="T:System.ArgumentException">El objeto de permiso de destino no es del mismo tipo que el objeto de permiso actual.</exception>
      <returns>Nuevo objeto de permiso que representa la intersección entre el objeto actual y el destino especificado. Este objeto es <see langword="null" /> si la intersección está vacía.</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina si el objeto de permiso actual es un subconjunto del permiso especificado.</summary>
      <param name="target">Objeto de permiso que se va a comprobar para determinar la relación del subconjunto.</param>
      <returns>
        <see langword="true" /> si el objeto de permiso actual es un subconjunto del objeto de permiso especificado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.IsUnrestricted">
      <summary>Obtiene un valor que indica si el permiso no tiene restricciones.</summary>
      <returns>Es <see langword="true" /> si el permiso es no restringido; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)">
      <summary>Quita una entrada de permiso del permiso.</summary>
      <param name="entry">
        <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> que se va a quitar.</param>
      <exception cref="T:System.ArgumentNullException">El <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> especificado es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">El número de elementos de la propiedad <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath" /> no es igual al número de elementos de la propiedad <see cref="P:System.Security.Permissions.ResourcePermissionBase.TagNames" />.  
  
o bien 
<see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> no está en el permiso.</exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.ToXml">
      <summary>Crea y devuelve una codificación XML del objeto de seguridad y de su estado actual.</summary>
      <returns>Codificación XML del objeto de seguridad, incluida cualquier información de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)">
      <summary>Crea un objeto de permiso que combina el objeto de permiso actual y el objeto de permiso de destino.</summary>
      <param name="target">Objeto de permiso que va a formar una combinación con el objeto de permiso actual. Debe ser del mismo tipo que el objeto de permiso actual.</param>
      <exception cref="T:System.ArgumentException">El objeto de permiso <paramref name="target" /> no es del mismo tipo que el objeto de permiso actual.</exception>
      <returns>Nuevo objeto de permiso que representa la unión del objeto de permiso actual y del objeto de permiso especificado.</returns>
    </member>
    <member name="P:System.Security.Permissions.ResourcePermissionBase.PermissionAccessType">
      <summary>Obtiene o establece un valor de enumeración que describe los tipos de acceso que se está asignando al recurso.</summary>
      <exception cref="T:System.ArgumentNullException">El valor de la propiedad es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El valor de propiedad no es un valor de la enumeración.</exception>
      <returns>Valor de enumeración derivado de <see cref="T:System.Type" /> que describe los tipos de acceso que se está asignando al recurso.</returns>
    </member>
    <member name="P:System.Security.Permissions.ResourcePermissionBase.TagNames">
      <summary>Obtiene o establece una matriz de cadenas que identifican el recurso que se va a proteger.</summary>
      <exception cref="T:System.ArgumentNullException">El valor de la propiedad es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La longitud de la matriz es 0.</exception>
      <returns>Matriz de cadenas que identifican el recurso que se intenta proteger.</returns>
    </member>
    <member name="T:System.Security.Permissions.ResourcePermissionBaseEntry">
      <summary>Define la unidad más pequeña de un conjunto establecido de permisos de seguridad de acceso del código.</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBaseEntry.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBaseEntry.#ctor(System.Int32,System.String[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> con el acceso de permiso y la ruta de acceso de permiso especificados.</summary>
      <param name="permissionAccess">Representación entera del valor de la enumeración de nivel de acceso de permiso. La propiedad <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccess" /> se establece en este valor.</param>
      <param name="permissionAccessPath">Matriz de cadenas que identifican el recurso que se protege. La propiedad <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath" /> se establece en este valor.</param>
      <exception cref="T:System.ArgumentNullException">El <paramref name="permissionAccessPath" /> especificado es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccess">
      <summary>Obtiene una representación entera del valor de la enumeración de nivel de acceso.</summary>
      <returns>Valor de la enumeración de nivel de acceso.</returns>
    </member>
    <member name="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath">
      <summary>Obtiene una matriz de cadenas que identifican el recurso que se protege.</summary>
      <returns>Matriz de cadenas que identifican el recurso que se va a proteger.</returns>
    </member>
    <member name="T:System.Security.Permissions.SecurityPermission">
      <summary>Describe un conjunto de permisos de seguridad aplicados al código. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.SecurityPermission" /> con permiso restringido o sin restricción tal como se especifica.</summary>
      <param name="state">Uno de los valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="state" /> no es un valor válido de <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.#ctor(System.Security.Permissions.SecurityPermissionFlag)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.SecurityPermission" /> con el estado del conjunto inicial de marcas especificado.</summary>
      <param name="flag">El estado inicial del permiso, que se representa mediante una combinación OR bit a bit de los bits de permiso que define <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="flag" /> no es un valor válido de <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.Copy">
      <summary>Crea y devuelve una copia idéntica del permiso actual.</summary>
      <returns>Copia del permiso actual.</returns>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un permiso con un estado especificado a partir de una codificación XML.</summary>
      <param name="esd">Codificación XML que se usa para reconstruir el permiso.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="esd" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="esd" /> no es un elemento de permiso válido.  
  
o bien 
No se admite el número de la versión del parámetro <paramref name="esd" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.Intersect(System.Security.IPermission)">
      <summary>Crea y devuelve un permiso que es la intersección del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para formar intersección con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</exception>
      <returns>Nuevo objeto de permiso que representa la intersección del permiso actual y del permiso especificado. Este nuevo permiso es <see langword="null" /> si la intersección está vacía.</returns>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina si el permiso actual es un subconjunto del permiso especificado.</summary>
      <param name="target">Permiso que se va a probar para la relación de subconjunto. Este permiso debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</exception>
      <returns>
        <see langword="true" /> si el permiso actual es un subconjunto del permiso especificado; si no, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.IsUnrestricted">
      <summary>Devuelve un valor que indica si el permiso actual no está restringido.</summary>
      <returns>
        <see langword="true" /> si el permiso actual no está restringido; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.ToXml">
      <summary>Crea una codificación XML del permiso y su estado actual.</summary>
      <returns>Codificación XML del permiso, incluida cualquier información de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.Union(System.Security.IPermission)">
      <summary>Crea un permiso que es la unión del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para combinar con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</exception>
      <returns>Nuevo permiso que representa la unión del permiso actual y el permiso especificado.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermission.Flags">
      <summary>Obtiene o establece las marcas del permiso de seguridad.</summary>
      <exception cref="T:System.ArgumentException">Se realiza un intento para establecer esta propiedad en un valor no válido. Consulte <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /> para obtener los valores válidos.</exception>
      <returns>El estado del permiso actual, representado por una combinación OR bit a bit de los bits de permiso definidos por <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.SiteIdentityPermission">
      <summary>Define el permiso de identidad para el sitio web desde el que se origina el código. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.SiteIdentityPermission" /> con el objeto <see cref="T:System.Security.Permissions.PermissionState" /> especificado.</summary>
      <param name="state">Uno de los valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="state" /> no es un valor válido de <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.#ctor(System.String)">
      <summary>Inicializa un nueva instancia de la clase <see cref="T:System.Security.Permissions.SiteIdentityPermission" /> para representar la identidad del sitio especificado.</summary>
      <param name="site">El nombre del sitio o la expresión del carácter comodín.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="site" /> no es una cadena válida o no coincide con un nombre de sitio de carácter comodín válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.Copy">
      <summary>Crea y devuelve una copia idéntica del permiso actual.</summary>
      <returns>Copia del permiso actual.</returns>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un permiso con un estado especificado a partir de una codificación XML.</summary>
      <param name="esd">Codificación XML que se usa para reconstruir el permiso.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="esd" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="esd" /> no es un elemento de permiso válido.  
  
o bien 
El número de la versión del parámetro <paramref name="esd" /> no es válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.Intersect(System.Security.IPermission)">
      <summary>Crea y devuelve un permiso que es la intersección del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para formar intersección con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</exception>
      <returns>Nuevo permiso que representa la intersección del permiso actual y del permiso especificado. Este nuevo permiso es <see langword="null" /> si la intersección está vacía.</returns>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina si el permiso actual es un subconjunto del permiso especificado.</summary>
      <param name="target">Permiso que se va a probar para la relación de subconjunto. Este permiso debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</exception>
      <returns>
        <see langword="true" /> si el permiso actual es un subconjunto del permiso especificado; si no, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.ToXml">
      <summary>Crea una codificación XML del permiso y su estado actual.</summary>
      <returns>Codificación XML del permiso, incluida cualquier información de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.Union(System.Security.IPermission)">
      <summary>Crea un permiso que es la unión del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para combinar con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.  
  
o bien 
Los permisos no son iguales y uno no es un subconjunto del otro.</exception>
      <returns>Nuevo permiso que representa la unión del permiso actual y el permiso especificado.</returns>
    </member>
    <member name="P:System.Security.Permissions.SiteIdentityPermission.Site">
      <summary>Obtiene o establece el sitio actual.</summary>
      <exception cref="T:System.NotSupportedException">No se puede recuperar la identidad del sitio porque tiene una identidad ambigua.</exception>
      <returns>Sitio actual.</returns>
    </member>
    <member name="T:System.Security.Permissions.SiteIdentityPermissionAttribute">
      <summary>Permite acciones de seguridad de <see cref="T:System.Security.Permissions.SiteIdentityPermission" /> para que se apliquen al código mediante seguridad declarativa. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.SiteIdentityPermissionAttribute" /> con el objeto <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Uno de los valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermissionAttribute.CreatePermission">
      <summary>Crea y devuelve una nueva instancia de <see cref="T:System.Security.Permissions.SiteIdentityPermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.SiteIdentityPermission" /> que se corresponde con este atributo.</returns>
    </member>
    <member name="P:System.Security.Permissions.SiteIdentityPermissionAttribute.Site">
      <summary>Obtiene o establece el nombre del sitio del código de llamada.</summary>
      <returns>Nombre del sitio que se va a comparar con el nombre del sitio especificado por el proveedor de seguridad.</returns>
    </member>
    <member name="T:System.Security.Permissions.StorePermission">
      <summary>Controla el acceso a almacenes que contienen certificados X.509. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.StorePermission" /> con el estado de permiso totalmente restringido o sin restricción.</summary>
      <param name="state">Uno de los valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> no es un valor <see cref="T:System.Security.Permissions.PermissionState" /> válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.StorePermissionFlags)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.StorePermission" /> con el acceso especificado.</summary>
      <param name="flag">Combinación bit a bit de los valores de <see cref="T:System.Security.Permissions.StorePermissionFlags" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" /> no es una combinación válida de los valores de <see cref="T:System.Security.Permissions.StorePermissionFlags" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.Copy">
      <summary>Crea y devuelve una copia idéntica del permiso actual.</summary>
      <returns>Copia del permiso actual.</returns>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un permiso con un estado especificado a partir de una codificación XML.</summary>
      <param name="securityElement">
        <see cref="T:System.Security.SecurityElement" /> que contiene la codificación XML que se usará para reconstruir el permiso.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> no es un elemento de permiso válido.  
  
o bien 
El número de versión en <paramref name="securityElement" /> no es válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.Intersect(System.Security.IPermission)">
      <summary>Crea y devuelve un permiso que es la intersección del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para formar intersección con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</exception>
      <returns>Nuevo permiso que representa la intersección del permiso actual y del permiso especificado. Este nuevo permiso es <see langword="null" /> si la intersección está vacía.</returns>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina si el permiso actual es un subconjunto del permiso especificado.</summary>
      <param name="target">Permiso para probar la relación del subconjunto. Este permiso debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</exception>
      <returns>
        <see langword="true" /> si el permiso actual es un subconjunto del permiso especificado; si no, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.IsUnrestricted">
      <summary>Devuelve un valor que indica si el permiso actual no está restringido.</summary>
      <returns>
        <see langword="true" /> si el permiso actual no está restringido; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.ToXml">
      <summary>Crea una codificación XML del permiso y su estado actual.</summary>
      <returns>Un <see cref="T:System.Security.SecurityElement" /> que contiene una codificación XML del permiso, incluida cualquier información de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.Union(System.Security.IPermission)">
      <summary>Crea un permiso que es la unión del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para combinar con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</exception>
      <returns>Nuevo permiso que representa la unión del permiso actual y el permiso especificado.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermission.Flags">
      <summary>Obtiene o establece el tipo de acceso a <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" /> permitido por el permiso actual.</summary>
      <exception cref="T:System.ArgumentException">Se realiza un intento para establecer esta propiedad en un valor no válido. Consulte <see cref="T:System.Security.Permissions.StorePermissionFlags" /> para obtener los valores válidos.</exception>
      <returns>Combinación bit a bit de los valores de <see cref="T:System.Security.Permissions.StorePermissionFlags" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.StorePermissionAttribute">
      <summary>Permite acciones de seguridad de <see cref="T:System.Security.Permissions.StorePermission" /> para que se apliquen al código mediante seguridad declarativa. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Permissions.StorePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.StorePermissionAttribute" /> con la acción de seguridad especificada.</summary>
      <param name="action">Uno de los valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.StorePermissionAttribute.CreatePermission">
      <summary>Crea y devuelve un nuevo objeto <see cref="T:System.Security.Permissions.StorePermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.StorePermission" /> que corresponde a este atributo.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.AddToStore">
      <summary>Obtiene o establece un valor que indica si se le permite al código agregar a un almacén.</summary>
      <returns>
        <see langword="true" /> si se permite la capacidad de agregar a un almacén; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.CreateStore">
      <summary>Obtiene o establece un valor que indica si se le permite al código crear un almacén.</summary>
      <returns>
        <see langword="true" /> si se permite la capacidad de crear un almacén; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.DeleteStore">
      <summary>Obtiene o establece un valor que indica si se le permite al código eliminar un almacén.</summary>
      <returns>
        <see langword="true" /> si se permite la capacidad de eliminar un almacén; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.EnumerateCertificates">
      <summary>Obtiene o establece un valor que indica si se le permite al código enumerar los certificados de un almacén.</summary>
      <returns>
        <see langword="true" /> si se permite la capacidad de enumerar los certificados; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.EnumerateStores">
      <summary>Obtiene o establece un valor que indica si se le permite al código enumerar los almacenes.</summary>
      <returns>
        <see langword="true" /> si se permite la capacidad de enumerar los almacenes; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.Flags">
      <summary>Obtiene o establece los permisos del almacén.</summary>
      <returns>Combinación bit a bit de los valores de <see cref="T:System.Security.Permissions.StorePermissionFlags" />. De manera predeterminada, es <see cref="F:System.Security.Permissions.StorePermissionFlags.NoFlags" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.OpenStore">
      <summary>Obtiene o establece un valor que indica si se le permite al código abrir un almacén.</summary>
      <returns>
        <see langword="true" /> si se permite la capacidad de abrir un almacén; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.RemoveFromStore">
      <summary>Obtiene o establece un valor que indica si se le permiten al código quitar un certificado de un almacén.</summary>
      <returns>
        <see langword="true" /> si se permite la capacidad de quitar un certificado de un almacén; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.StorePermissionFlags">
      <summary>Especifica el acceso permitido a los almacenes de certificados X.509.</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.AddToStore">
      <summary>
        <para>Capacidad para agregar un certificado a un almacén.</para>
        <para>Por razones de seguridad, esta capacidad debe ser otorgada solo al código de plena confianza.</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.AllFlags">
      <summary>Capacidad para realizar todas las operaciones con certificados y almacenes.</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.CreateStore">
      <summary>
        <para>Capacidad para crear un nuevo almacén.</para>
        <para>Las nuevas tiendas se crean mediante la llamada al método <see cref="M:System.Security.Cryptography.X509Certificates.X509Store.Open(System.Security.Cryptography.X509Certificates.OpenFlags)" />.</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.DeleteStore">
      <summary>
        <para>Capacidad para eliminar un almacén.</para>
        <para>Esta funcionalidad no se expone mediante la clase <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" />.</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.EnumerateCertificates">
      <summary>
        <para>Capacidad para enumerar los certificados de un almacén.</para>
        <para>Por motivos de privacidad, esta capacidad debe concederse solo al código de plena confianza.</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.EnumerateStores">
      <summary>
        <para>Capacidad para enumerar los almacenes de un equipo.</para>
        <para>Esta funcionalidad no se expone mediante la clase <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" />.</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.NoFlags">
      <summary>No se concede permiso para realizar ninguna operación con certificados o almacenes.</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.OpenStore">
      <summary>
        <para>Capacidad para abrir un almacén.</para>
        <para>La posibilidad de abrir una tienda no incluye la posibilidad de enumerar certificados (lo que plantea problemas de privacidad) o de agregar o quitar certificados (lo que plantea problemas de seguridad).</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.RemoveFromStore">
      <summary>
        <para>Capacidad para quitar un certificado de un almacén.</para>
        <para>Esta capacidad solo se debe conceder a los códigos de plena confianza, ya que la eliminación de un certificado puede dar lugar a una denegación de servicio.</para>
      </summary>
    </member>
    <member name="T:System.Security.Permissions.StrongNameIdentityPermission">
      <summary>Define el permiso de identidades de nombres seguros. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> con el objeto <see cref="T:System.Security.Permissions.PermissionState" /> especificado.</summary>
      <param name="state">Uno de los valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="state" /> no es un valor válido de <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> para la identidad del nombre seguro especificado.</summary>
      <param name="blob">Clave pública que define el espacio de nombres de identidad del nombre seguro.</param>
      <param name="name">Parte sencilla del nombre de la identidad del nombre seguro. Esto se corresponde con el nombre del ensamblado.</param>
      <param name="version">Número de versión de la identidad.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="blob" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="name" /> es una cadena vacía ("").</exception>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.Copy">
      <summary>Crea y devuelve una copia idéntica del permiso actual.</summary>
      <returns>Copia del permiso actual.</returns>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un permiso con un estado especificado a partir de una codificación XML.</summary>
      <param name="e">Codificación XML que se usa para reconstruir el permiso.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="e" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="e" /> no es un elemento de permiso válido.  
  
o bien 
El número de la versión del parámetro <paramref name="e" /> no es válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.Intersect(System.Security.IPermission)">
      <summary>Crea y devuelve un permiso que es la intersección del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para formar intersección con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</exception>
      <returns>Nuevo permiso que representa la intersección del permiso actual y del permiso especificado o <see langword="null" /> si la intersección está vacía.</returns>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina si el permiso actual es un subconjunto del permiso especificado.</summary>
      <param name="target">Permiso que se va a probar para la relación de subconjunto. Este permiso debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</exception>
      <returns>
        <see langword="true" /> si el permiso actual es un subconjunto del permiso especificado; si no, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.ToXml">
      <summary>Crea una codificación XML del permiso y su estado actual.</summary>
      <returns>Codificación XML del permiso, incluida cualquier información de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.Union(System.Security.IPermission)">
      <summary>Crea un permiso que es la unión del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para combinar con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.  
  
o bien 
Los dos permisos no son iguales y uno es un subconjunto del otro.</exception>
      <returns>Nuevo permiso que representa la unión del permiso actual y el permiso especificado.</returns>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermission.Name">
      <summary>Obtiene o establece el nombre sencillo de la identidad de nombre seguro.</summary>
      <exception cref="T:System.ArgumentException">El valor es una cadena vacía ("").</exception>
      <exception cref="T:System.NotSupportedException">No se puede recuperar el valor de la propiedad porque contiene una identidad ambigua.</exception>
      <returns>Nombre simple de la identidad.</returns>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermission.PublicKey">
      <summary>Obtiene o establece el blob de clave pública que define el espacio de nombres de identidad de nombre seguro.</summary>
      <exception cref="T:System.ArgumentNullException">El valor de propiedad se establece en <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">No se puede recuperar el valor de la propiedad porque contiene una identidad ambigua.</exception>
      <returns>
        <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> que contiene la clave pública de la identidad o <see langword="null" /> si no hay ninguna clave.</returns>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermission.Version">
      <summary>Obtiene o establece el número de versión de la identidad.</summary>
      <exception cref="T:System.NotSupportedException">No se puede recuperar el valor de la propiedad porque contiene una identidad ambigua.</exception>
      <returns>Versión de la identidad.</returns>
    </member>
    <member name="T:System.Security.Permissions.StrongNameIdentityPermissionAttribute">
      <summary>Permite acciones de seguridad de <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> para que se apliquen al código mediante seguridad declarativa. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.StrongNameIdentityPermissionAttribute" /> con el objeto <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Uno de los valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermissionAttribute.CreatePermission">
      <summary>Crea y devuelve un nuevo objeto <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" />.</summary>
      <exception cref="T:System.ArgumentException">Se produjo un error en el método porque la clave es <see langword="null" />.</exception>
      <returns>
        <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> que se corresponde con este atributo.</returns>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermissionAttribute.Name">
      <summary>Obtiene o establece el nombre de la identidad de nombre seguro.</summary>
      <returns>Nombre que el proveedor de seguridad va a comparar con el nombre especificado.</returns>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermissionAttribute.PublicKey">
      <summary>Obtiene o establece el valor de clave pública de la identidad de nombre seguro expresada como una cadena hexadecimal.</summary>
      <returns>Valor de clave pública de la identidad de nombre seguro expresado como una cadena hexadecimal.</returns>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermissionAttribute.Version">
      <summary>Obtiene o establece la versión de la identidad de nombre seguro.</summary>
      <returns>Número de versión de la identidad de nombre seguro.</returns>
    </member>
    <member name="T:System.Security.Permissions.StrongNamePublicKeyBlob">
      <summary>Representa la información de clave pública (denominada objeto binario) de un nombre seguro. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Permissions.StrongNamePublicKeyBlob.#ctor(System.Byte[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> con bytes sin formato del objeto binario de clave pública.</summary>
      <param name="publicKey">Matriz de bytes que representa los datos de clave pública sin formato.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="publicKey" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.StrongNamePublicKeyBlob.Equals(System.Object)">
      <summary>Obtiene o establece un valor que indica si el objeto binario de clave pública actual es igual al objeto binario de clave pública especificado.</summary>
      <param name="o">Objeto que contiene un objeto binario de clave pública.</param>
      <returns>
        <see langword="true" /> si el objeto binario de clave pública del objeto actual es igual al objeto binario de clave pública del parámetro <paramref name="o" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.StrongNamePublicKeyBlob.GetHashCode">
      <summary>Devuelve un código hash según la clave pública.</summary>
      <returns>Código hash según la clave pública.</returns>
    </member>
    <member name="M:System.Security.Permissions.StrongNamePublicKeyBlob.ToString">
      <summary>Crea y devuelve una cadena que representa el objeto binario de clave pública.</summary>
      <returns>Versión hexadecimal del objeto binario de clave pública.</returns>
    </member>
    <member name="T:System.Security.Permissions.TypeDescriptorPermission">
      <summary>Define un acceso de confianza parcial a la clase <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.TypeDescriptorPermission" />.</summary>
      <param name="state">Objeto <see cref="T:System.Security.Permissions.PermissionState" /> que se va a solicitar. Solo son válidos los estados <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> y <see cref="F:System.Security.Permissions.PermissionState.None" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> no es un estado de permiso válido. Solo son válidos los estados <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> y <see cref="F:System.Security.Permissions.PermissionState.None" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.TypeDescriptorPermissionFlags)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.TypeDescriptorPermission" /> con los indicadores de permiso especificado.</summary>
      <param name="flag">Marcas de permiso que se van a solicitar.</param>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.Copy">
      <summary>Cuando se implementa mediante una clase derivada, crea y devuelve una copia idéntica del objeto de permiso actual.</summary>
      <returns>Copia del objeto de permiso actual.</returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.FromXml(System.Security.SecurityElement)">
      <summary>Cuando se invalida en una clase derivada, reconstruye un objeto de seguridad con un estado especificado a partir de codificación XML.</summary>
      <param name="securityElement">Codificación XML que se usará para reconstruir el objeto de seguridad.</param>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.Intersect(System.Security.IPermission)">
      <summary>Cuando se implementa mediante una clase derivada, se crea y se devuelve un permiso que es la intersección del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para formar intersección con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <returns>Nuevo permiso que representa la intersección del permiso actual y del permiso especificado. Este nuevo permiso es <see langword="null" /> si la intersección está vacía.</returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Cuando se implementa mediante una clase derivada, determina si el permiso actual es un subconjunto del permiso especificado.</summary>
      <param name="target">Permiso que se va a probar para la relación de subconjunto. Este permiso debe ser del mismo tipo que el permiso actual.</param>
      <returns>
        <see langword="true" /> si el permiso actual es un subconjunto del permiso especificado; si no, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.IsUnrestricted">
      <summary>Obtiene un valor que indica si se puede llamar al descriptor de tipos desde código de confianza parcial.</summary>
      <returns>
        <see langword="true" /> si la propiedad <see cref="P:System.Security.Permissions.TypeDescriptorPermission.Flags" /> está establecida en <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.ToXml">
      <summary>Cuando se invalida en una clase derivada, crea una codificación XML del objeto de seguridad y su estado actual.</summary>
      <returns>Codificación XML del objeto de seguridad, incluida cualquier información de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.Union(System.Security.IPermission)">
      <summary>Cuando se invalida en una clase derivada, crea un permiso que es la unión del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para combinar con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <returns>Nuevo permiso que representa la unión del permiso actual y el permiso especificado.</returns>
    </member>
    <member name="P:System.Security.Permissions.TypeDescriptorPermission.Flags">
      <summary>Obtiene o establece el objeto <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" /> del descriptor de tipos.</summary>
      <returns>Objeto <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" /> del descriptor de tipos.</returns>
    </member>
    <member name="T:System.Security.Permissions.TypeDescriptorPermissionAttribute">
      <summary>Determina las marcas de permiso que se aplican a un descriptor <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.TypeDescriptorPermissionAttribute" /> con el objeto <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Uno de los valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermissionAttribute.CreatePermission">
      <summary>Si se reemplaza en una clase derivada, crea un objeto de permiso que después puede serializarse de forma binaria y almacenarse de forma persistente junto con el objeto <see cref="T:System.Security.Permissions.SecurityAction" /> en los metadatos de un ensamblado.</summary>
      <returns>Objeto de permiso serializable.</returns>
    </member>
    <member name="P:System.Security.Permissions.TypeDescriptorPermissionAttribute.Flags">
      <summary>Obtiene o establece el objeto <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" /> para <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" /> para <see cref="T:System.ComponentModel.TypeDescriptor" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.TypeDescriptorPermissionAttribute.RestrictedRegistrationAccess">
      <summary>Obtiene o establece un valor que indica si se puede tener acceso al descriptor de tipos desde la confianza parcial.</summary>
      <returns>Es <see langword="true" /> si se puede tener acceso al descriptor de tipos desde la confianza parcial; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.TypeDescriptorPermissionFlags">
      <summary>Define la configuración de permisos para los descriptores de tipos.</summary>
    </member>
    <member name="F:System.Security.Permissions.TypeDescriptorPermissionFlags.NoFlags">
      <summary>No se establecen marcas de permiso en el descriptor de tipos.</summary>
    </member>
    <member name="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess">
      <summary>Se puede llamar al descriptor de tipos desde código de confianza parcial.</summary>
    </member>
    <member name="T:System.Security.Permissions.UIPermission">
      <summary>Controla los permisos relacionados con las interfaces de usuario y el Portapapeles. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.UIPermission" /> con acceso totalmente restringido o sin restricción, tal como se especifica.</summary>
      <param name="state">Uno de los valores de enumeración.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="state" /> no es un valor <see cref="T:System.Security.Permissions.PermissionState" /> válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionClipboard)">
      <summary>Inicializa un nueva instancia de la clase <see cref="T:System.Security.Permissions.UIPermission" /> con los permisos para el Portapapeles y no tiene acceso a las ventanas.</summary>
      <param name="clipboardFlag">Uno de los valores de enumeración.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="clipboardFlag" /> no es un valor de <see cref="T:System.Security.Permissions.UIPermissionClipboard" /> válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow)">
      <summary>Inicializa un nueva instancia de la clase <see cref="T:System.Security.Permissions.UIPermission" /> con los permisos especificados para Windows y no tiene acceso al portapapeles.</summary>
      <param name="windowFlag">Uno de los valores de enumeración.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="windowFlag" /> no es un valor de <see cref="T:System.Security.Permissions.UIPermissionWindow" /> válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow,System.Security.Permissions.UIPermissionClipboard)">
      <summary>Inicializa un nueva instancia de la clase <see cref="T:System.Security.Permissions.UIPermission" /> con los permisos especificados para Windows y el portapapeles.</summary>
      <param name="windowFlag">Uno de los valores de enumeración.</param>
      <param name="clipboardFlag">Uno de los valores de enumeración.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="windowFlag" /> no es un valor de <see cref="T:System.Security.Permissions.UIPermissionWindow" /> válido.  
  
o bien 
El parámetro <paramref name="clipboardFlag" /> no es un valor de <see cref="T:System.Security.Permissions.UIPermissionClipboard" /> válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.Copy">
      <summary>Crea y devuelve una copia idéntica del permiso actual.</summary>
      <returns>Copia del permiso actual.</returns>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un permiso con un estado especificado a partir de una codificación XML.</summary>
      <param name="esd">Codificación XML que se usa para reconstruir el permiso.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="esd" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="esd" /> no es un elemento de permiso válido.  
  
o bien 
El número de la versión del parámetro <paramref name="esd" /> no es válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.Intersect(System.Security.IPermission)">
      <summary>Crea y devuelve un permiso que es la intersección del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para formar intersección con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</exception>
      <returns>Nuevo permiso que representa la intersección del permiso actual y del permiso especificado. Este nuevo permiso es <see langword="null" /> si la intersección está vacía.</returns>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina si el permiso actual es un subconjunto del permiso especificado.</summary>
      <param name="target">Permiso para probar la relación del subconjunto. Este permiso debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</exception>
      <returns>
        <see langword="true" /> si el permiso actual es un subconjunto del permiso especificado; si no, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.IsUnrestricted">
      <summary>Devuelve un valor que indica si el permiso actual no está restringido.</summary>
      <returns>
        <see langword="true" /> si el permiso actual no está restringido; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.ToXml">
      <summary>Crea una codificación XML del permiso y su estado actual.</summary>
      <returns>Codificación XML del permiso, incluida cualquier información de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.Union(System.Security.IPermission)">
      <summary>Crea un permiso que es la unión del permiso y el permiso especificado.</summary>
      <param name="target">Permiso para combinar con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</exception>
      <returns>Nuevo permiso que representa la unión del permiso actual y el permiso especificado.</returns>
    </member>
    <member name="P:System.Security.Permissions.UIPermission.Clipboard">
      <summary>Obtiene o establece el acceso al portapapeles representado por el permiso.</summary>
      <returns>Uno de los valores de <see cref="T:System.Security.Permissions.UIPermissionClipboard" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.UIPermission.Window">
      <summary>Obtiene o establece el acceso a la ventana representado por el permiso.</summary>
      <returns>Uno de los valores de <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.UIPermissionAttribute">
      <summary>Permite acciones de seguridad de <see cref="T:System.Security.Permissions.UIPermission" /> para que se apliquen al código mediante seguridad declarativa. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Permissions.UIPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.UIPermissionAttribute" /> con el objeto <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Uno de los valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.UIPermissionAttribute.CreatePermission">
      <summary>Crea y devuelve un nuevo objeto <see cref="T:System.Security.Permissions.UIPermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.UIPermission" /> que se corresponde con este atributo.</returns>
    </member>
    <member name="P:System.Security.Permissions.UIPermissionAttribute.Clipboard">
      <summary>Obtiene o establece el tipo de acceso al portapapeles permitido.</summary>
      <returns>Uno de los valores de <see cref="T:System.Security.Permissions.UIPermissionClipboard" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.UIPermissionAttribute.Window">
      <summary>Obtiene o establece el tipo de acceso a los recursos de ventana permitido.</summary>
      <returns>Uno de los valores de <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.UIPermissionClipboard">
      <summary>Especifica el tipo de acceso al Portapapeles permitido para el código de llamada.</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard">
      <summary>El Portapapeles puede utilizarse sin restricciones.</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionClipboard.NoClipboard">
      <summary>No se puede utilizar el Portapapeles.</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionClipboard.OwnClipboard">
      <summary>La capacidad para colocar datos en el Portapapeles (<see langword="Copy" />, <see langword="Cut" />) no está restringida. Los controles intrínsecos que aceptan <see langword="Paste" />, como el control de cuadro de texto, pueden aceptar los datos del Portapapeles, pero los controles de usuario que deben leer el Portapapeles mediante programación no los aceptan.</summary>
    </member>
    <member name="T:System.Security.Permissions.UIPermissionWindow">
      <summary>Especifica el tipo de ventanas que el código puede utilizar.</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionWindow.AllWindows">
      <summary>Los usuarios pueden utilizar todas las ventanas y eventos de entrada de usuario sin restricciones.</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionWindow.NoWindows">
      <summary>Los usuarios no pueden utilizar ninguna ventana ni ningún evento de interfaz de usuario. No se puede utilizar ninguna interfaz de usuario.</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows">
      <summary>Los usuarios sólo pueden utilizar <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /> para dibujar, y sólo pueden utilizar eventos de entrada de usuario para la interfaz de usuario de la ventana secundaria. Ejemplos de <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /> son <see cref="T:System.Windows.Forms.MessageBox" />, controles de cuadro de diálogo comunes y un control que se muestra en un explorador.</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows">
      <summary>Los usuarios sólo pueden utilizar <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /> y <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /> para dibujar, a la vez que sólo pueden utilizar eventos de entrada de usuario para la interfaz de usuario de las ventanas secundarias y las ventanas de nivel superior. Vea la sección Comentarios para obtener más información.</summary>
    </member>
    <member name="T:System.Security.Permissions.UrlIdentityPermission">
      <summary>Define el permiso de identidad para la dirección URL desde la que se origina el código. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> con el objeto <see cref="T:System.Security.Permissions.PermissionState" /> especificado.</summary>
      <param name="state">Uno de los valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="state" /> no es un valor válido de <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.#ctor(System.String)">
      <summary>Inicializa un nueva instancia de la clase <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> para representar la identidad de URL descrita por <paramref name="site" />.</summary>
      <param name="site">Dirección URL o expresión de caracteres comodín.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="site" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">La longitud del parámetro <paramref name="site" /> es cero.</exception>
      <exception cref="T:System.ArgumentException">La dirección URL, la parte de sitio o el directorio del parámetro <paramref name="site" /> no es válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.Copy">
      <summary>Crea y devuelve una copia idéntica del permiso actual.</summary>
      <returns>Copia del permiso actual.</returns>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un permiso con un estado especificado a partir de una codificación XML.</summary>
      <param name="esd">Codificación XML que se usa para reconstruir el permiso.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="esd" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="esd" /> no es un elemento de permiso válido.  
  
o bien 
El número de la versión del parámetro <paramref name="esd" /> no es válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.Intersect(System.Security.IPermission)">
      <summary>Crea y devuelve un permiso que es la intersección del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para formar intersección con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.  
  
o bien 
La propiedad Url no es una dirección URL válida.</exception>
      <returns>Nuevo permiso que representa la intersección del permiso actual y del permiso especificado. Este nuevo permiso es <see langword="null" /> si la intersección está vacía.</returns>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina si el permiso actual es un subconjunto del permiso especificado.</summary>
      <param name="target">Permiso que se va a probar para la relación de subconjunto. Este permiso debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.  
  
o bien 
La propiedad Url no es una dirección URL válida.</exception>
      <returns>
        <see langword="true" /> si el permiso actual es un subconjunto del permiso especificado; si no, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.ToXml">
      <summary>Crea una codificación XML del permiso y su estado actual.</summary>
      <returns>Codificación XML del permiso, incluida cualquier información de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.Union(System.Security.IPermission)">
      <summary>Crea un permiso que es la unión del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para combinar con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.  
  
o bien 
La propiedad <see cref="P:System.Security.Permissions.UrlIdentityPermission.Url" /> no es una dirección URL válida.  
  
o bien 
Los dos permisos no son iguales y uno no es un subconjunto del otro.</exception>
      <exception cref="T:System.NotSupportedException">La operación es ambigua porque el permiso representa varias identidades.</exception>
      <returns>Nuevo permiso que representa la unión del permiso actual y el permiso especificado.</returns>
    </member>
    <member name="P:System.Security.Permissions.UrlIdentityPermission.Url">
      <summary>Obtiene o establece una dirección URL que representa la identidad del código de Internet.</summary>
      <exception cref="T:System.NotSupportedException">No se puede recuperar la dirección URL porque tiene una identidad ambigua.</exception>
      <returns>Dirección URL que representa la identidad del código de Internet.</returns>
    </member>
    <member name="T:System.Security.Permissions.UrlIdentityPermissionAttribute">
      <summary>Permite acciones de seguridad de <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> para que se apliquen al código mediante seguridad declarativa. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.UrlIdentityPermissionAttribute" /> con el objeto <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Uno de los valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermissionAttribute.CreatePermission">
      <summary>Crea y devuelve un nuevo objeto <see cref="T:System.Security.Permissions.UrlIdentityPermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> que se corresponde con este atributo.</returns>
    </member>
    <member name="P:System.Security.Permissions.UrlIdentityPermissionAttribute.Url">
      <summary>Obtiene o establece la dirección URL completa del código de llamada.</summary>
      <returns>Dirección URL que debe coincidir con la dirección URL especificada por el host.</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermission">
      <summary>El objeto <see cref="T:System.Security.Permissions.WebBrowserPermission" /> controla la capacidad para crear el control WebBrowser.</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.WebBrowserPermission" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.WebBrowserPermission" /> especificando un estado de permiso.</summary>
      <param name="state">Valor enumerado de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.WebBrowserPermissionLevel)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.WebBrowserPermission" /> especificando el nivel de permiso del explorador web.</summary>
      <param name="webBrowserPermissionLevel">Valor enumerado de <see cref="T:System.Security.Permissions.WebBrowserPermissionLevel" />.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Copy">
      <summary>Crea y devuelve una copia idéntica del permiso actual.</summary>
      <returns>Copia del permiso actual.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un permiso con un estado especificado a partir de una codificación XML.</summary>
      <param name="securityElement">Codificación XML que se usa para reconstruir el permiso.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Intersect(System.Security.IPermission)">
      <summary>Crea y devuelve un permiso que es la intersección del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para formar intersección con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <returns>La intersección de dos permisos es un permiso que describe el estado que ambos describen en común. Solo será válida para el permiso intersectado una petición que pase ambos permisos originales.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina si el permiso actual es un subconjunto del permiso especificado.</summary>
      <param name="target">Permiso que se va a probar para la relación de subconjunto. Este permiso debe ser del mismo tipo que el permiso actual.</param>
      <returns>
        <see langword="true" /> si el permiso actual es un subconjunto del permiso especificado; si no, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.IsUnrestricted">
      <summary>Devuelve un valor que indica si el permiso actual no está restringido.</summary>
      <returns>
        <see langword="true" /> si la propiedad <see cref="P:System.Security.Permissions.WebBrowserPermission.Level" /> está establecida en <see cref="F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.ToXml">
      <summary>Crea una codificación XML del permiso y su estado actual.</summary>
      <returns>Codificación XML del permiso, incluida cualquier información de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Union(System.Security.IPermission)">
      <summary>Crea un permiso que es la unión del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para combinar con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <returns>Nuevo permiso que representa la unión del permiso actual y el permiso especificado.</returns>
    </member>
    <member name="P:System.Security.Permissions.WebBrowserPermission.Level">
      <summary>Obtiene o establece el valor actual del nivel de permiso del explorador web.</summary>
      <returns>El valor actual del nivel de permiso del explorador web.</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermissionAttribute">
      <summary>Permite acciones de seguridad de <see cref="T:System.Security.Permissions.WebBrowserPermission" /> para que se apliquen al código mediante seguridad declarativa.</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.WebBrowserPermissionAttribute" /> con el objeto <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Uno de los valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermissionAttribute.CreatePermission">
      <summary>Crea y devuelve una nueva instancia de la clase <see cref="T:System.Security.Permissions.WebBrowserPermission" />.</summary>
      <returns>Un <see cref="T:System.Security.Permissions.WebBrowserPermission" /> correspondiente a la declaración de seguridad.</returns>
    </member>
    <member name="P:System.Security.Permissions.WebBrowserPermissionAttribute.Level">
      <summary>Obtiene o establece el nivel de permiso del explorador web actual para el <see cref="T:System.Security.Permissions.WebBrowserPermissionAttribute" />.</summary>
      <returns>Estado del nivel de permisos del explorador web actual.</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermissionLevel">
      <summary>Especifica el nivel de permisos para un explorador web.</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.None">
      <summary>Un explorador web que no puede navegar los fotogramas hasta HTML.</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.Safe">
      <summary>Un explorador web que puede navegar sin ningún riesgo los fotogramas hasta HTML pero con varias restricciones.</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted">
      <summary>Un explorador web que puede navegar sin restricciones.</summary>
    </member>
    <member name="T:System.Security.Permissions.ZoneIdentityPermission">
      <summary>Define el permiso de identidad para la zona desde la que se origina el código. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> con el objeto <see cref="T:System.Security.Permissions.PermissionState" /> especificado.</summary>
      <param name="state">Uno de los valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="state" /> no es un valor válido de <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.SecurityZone)">
      <summary>Inicializa un nueva instancia de la clase <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> para representar la identidad de la zona especificada.</summary>
      <param name="zone">Identificador de la zona.</param>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.Copy">
      <summary>Crea y devuelve una copia idéntica del permiso actual.</summary>
      <returns>Copia del permiso actual.</returns>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un permiso con un estado especificado a partir de una codificación XML.</summary>
      <param name="esd">Codificación XML que se usa para reconstruir el permiso.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="esd" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="esd" /> no es un elemento de permiso válido.  
  
o bien 
El número de la versión del parámetro <paramref name="esd" /> no es válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.Intersect(System.Security.IPermission)">
      <summary>Crea y devuelve un permiso que es la intersección del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para formar intersección con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</exception>
      <returns>Nuevo permiso que representa la intersección del permiso actual y del permiso especificado. Este nuevo permiso es <see langword="null" /> si la intersección está vacía.</returns>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina si el permiso actual es un subconjunto del permiso especificado.</summary>
      <param name="target">Permiso que se va a probar para la relación de subconjunto. Este permiso debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es <see langword="null" />, este permiso no representa la zona de seguridad <see cref="F:System.Security.SecurityZone.NoZone" /> y el permiso especificado no es igual al permiso actual.</exception>
      <returns>
        <see langword="true" /> si el permiso actual es un subconjunto del permiso especificado; si no, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.ToXml">
      <summary>Crea una codificación XML del permiso y su estado actual.</summary>
      <returns>Codificación XML del permiso, incluida cualquier información de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.Union(System.Security.IPermission)">
      <summary>Crea un permiso que es la unión del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para combinar con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.  
  
o bien 
Los dos permisos no son iguales y el permiso actual no representa la zona de seguridad <see cref="F:System.Security.SecurityZone.NoZone" />.</exception>
      <returns>Nuevo permiso que representa la unión del permiso actual y el permiso especificado.</returns>
    </member>
    <member name="P:System.Security.Permissions.ZoneIdentityPermission.SecurityZone">
      <summary>Obtiene o establece la zona representada por la <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> actual.</summary>
      <exception cref="T:System.ArgumentException">El valor del parámetro no es un valor válido de <see cref="T:System.Security.SecurityZone" />.</exception>
      <returns>Uno de los valores de <see cref="T:System.Security.SecurityZone" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.ZoneIdentityPermissionAttribute">
      <summary>Permite acciones de seguridad de <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> para que se apliquen al código mediante seguridad declarativa. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.ZoneIdentityPermissionAttribute" /> con el objeto <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Uno de los valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermissionAttribute.CreatePermission">
      <summary>Crea y devuelve un nuevo objeto <see cref="T:System.Security.Permissions.ZoneIdentityPermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> que se corresponde con este atributo.</returns>
    </member>
    <member name="P:System.Security.Permissions.ZoneIdentityPermissionAttribute.Zone">
      <summary>Obtiene o establece la pertenencia a la zona de contenido especificada por el valor de propiedad.</summary>
      <returns>Uno de los valores de <see cref="T:System.Security.SecurityZone" />.</returns>
    </member>
    <member name="T:System.Security.Policy.AllMembershipCondition">
      <summary>Representa una condición de pertenencia que coincide con todos los códigos. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.AllMembershipCondition" />.</summary>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>Determina si la evidencia especificada satisface la condición de pertenencia.</summary>
      <param name="evidence">Conjunto de evidencias del que se realiza la comprobación.</param>
      <returns>Siempre es <see langword="true" />.</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.Copy">
      <summary>Crea una copia equivalente de la condición de pertenencia.</summary>
      <returns>Nueva copia idéntica de la condición de pertenencia actual.</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.Equals(System.Object)">
      <summary>Determina si la condición de pertenencia especificada es un objeto <see cref="T:System.Security.Policy.AllMembershipCondition" />.</summary>
      <param name="o">Objeto que se compara con <see cref="T:System.Security.Policy.AllMembershipCondition" />.</param>
      <returns>
        <see langword="true" /> si la condición de pertenencia especificada es un objeto <see cref="T:System.Security.Policy.AllMembershipCondition" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un objeto de seguridad con un estado especificado a partir de codificación XML.</summary>
      <param name="e">Codificación XML que se usará para reconstruir el objeto de seguridad.</param>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Reconstruye un objeto de seguridad con un estado especificado a partir de codificación XML.</summary>
      <param name="e">Codificación XML que se usará para reconstruir el objeto de seguridad.</param>
      <param name="level">Contexto de nivel de directiva utilizado para resolver las referencias a los conjuntos de permisos con nombre.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="e" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="e" /> no es un elemento de condición de pertenencia válido.</exception>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.GetHashCode">
      <summary>Obtiene el código hash de la condición de pertenencia actual.</summary>
      <returns>El código hash de la condición de pertenencia actual.</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.ToString">
      <summary>Crea y devuelve una cadena que representa la condición de pertenencia.</summary>
      <returns>Representación de la condición de pertenencia.</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.ToXml">
      <summary>Crea una codificación XML del objeto de seguridad y su estado actual.</summary>
      <returns>Codificación XML del objeto de seguridad, incluida cualquier información de estado.</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>Crea una codificación XML del objeto de seguridad y de su estado actual con el objeto <see cref="T:System.Security.Policy.PolicyLevel" /> especificado.</summary>
      <param name="level">Contexto de nivel de directiva para resolver las referencias a los conjuntos de permisos con nombre.</param>
      <returns>Codificación XML del objeto de seguridad, incluida cualquier información de estado.</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationDirectory">
      <summary>Proporciona el directorio de la aplicación como prueba para la evaluación de directivas. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectory.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.ApplicationDirectory" />.</summary>
      <param name="name">La ruta de acceso del directorio de la aplicación.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="name" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectory.Copy">
      <summary>Crea una nueva copia de <see cref="T:System.Security.Policy.ApplicationDirectory" />.</summary>
      <returns>Copia idéntica y nueva de <see cref="T:System.Security.Policy.ApplicationDirectory" />.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectory.Equals(System.Object)">
      <summary>Determina si las instancias del mismo tipo de un objeto de prueba son equivalentes.</summary>
      <param name="o">Objeto del mismo tipo que el objeto de prueba actual.</param>
      <returns>
        <see langword="true" /> si las dos instancias son equivalentes; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectory.GetHashCode">
      <summary>Obtiene el código hash del directorio de aplicación actual.</summary>
      <returns>Código hash del directorio de aplicación actual.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectory.ToString">
      <summary>Obtiene una representación en forma de cadena del estado del objeto de prueba <see cref="T:System.Security.Policy.ApplicationDirectory" />.</summary>
      <returns>Representación del estado del objeto de prueba <see cref="T:System.Security.Policy.ApplicationDirectory" />.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationDirectory.Directory">
      <summary>Obtiene la ruta de acceso del directorio de la aplicación.</summary>
      <returns>La ruta de acceso del directorio de la aplicación.</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationDirectoryMembershipCondition">
      <summary>Determina si un ensamblado pertenece a un grupo de código mediante la comprobación de su directorio de aplicación. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.ApplicationDirectoryMembershipCondition" />.</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>Determina si la prueba especificada cumple la condición de pertenencia.</summary>
      <param name="evidence">Conjunto de evidencias del que se realiza la comprobación.</param>
      <returns>
        <see langword="true" /> si la evidencia especificada cumple la condición de pertenencia; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.Copy">
      <summary>Crea una copia equivalente de la condición de pertenencia.</summary>
      <returns>Nueva copia idéntica de la condición de pertenencia actual.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.Equals(System.Object)">
      <summary>Determina si la condición de pertenencia especificada es un objeto <see cref="T:System.Security.Policy.ApplicationDirectoryMembershipCondition" />.</summary>
      <param name="o">Objeto que se compara con <see cref="T:System.Security.Policy.ApplicationDirectoryMembershipCondition" />.</param>
      <returns>
        <see langword="true" /> si la condición de pertenencia especificada es un objeto <see cref="T:System.Security.Policy.ApplicationDirectoryMembershipCondition" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un objeto de seguridad con un estado especificado a partir de codificación XML.</summary>
      <param name="e">Codificación XML que se usará para reconstruir el objeto de seguridad.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="e" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="e" /> no es un elemento de condición de pertenencia de directorio de aplicación válido.</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Reconstruye un objeto de seguridad con un estado especificado a partir de codificación XML.</summary>
      <param name="e">Codificación XML que se usará para reconstruir el objeto de seguridad.</param>
      <param name="level">Contexto de nivel de directiva utilizado para resolver las referencias a los conjuntos de permisos con nombre.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="e" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="e" /> no es un elemento de condición de pertenencia de directorio de aplicación válido.</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.GetHashCode">
      <summary>Obtiene el código hash de la condición de pertenencia actual.</summary>
      <returns>El código hash de la condición de pertenencia actual.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.ToString">
      <summary>Crea y devuelve una cadena que representa la condición de pertenencia.</summary>
      <returns>Una representación en forma de cadena del estado de la condición de pertenencia.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml">
      <summary>Crea una codificación XML del objeto de seguridad y su estado actual.</summary>
      <returns>Codificación XML del objeto de seguridad, incluida cualquier información de estado.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>Crea una codificación XML del objeto de seguridad y de su estado actual con el objeto <see cref="T:System.Security.Policy.PolicyLevel" /> especificado.</summary>
      <param name="level">Contexto de nivel de directiva para resolver las referencias a los conjuntos de permisos con nombre.</param>
      <returns>Codificación XML del objeto de seguridad, incluida cualquier información de estado.</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationTrust">
      <summary>Encapsula las decisiones de seguridad sobre una aplicación. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrust.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.ApplicationTrust" />.</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrust.#ctor(System.ApplicationIdentity)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.ApplicationTrust" /> con <see cref="T:System.ApplicationIdentity" />.</summary>
      <param name="identity">
        <see cref="T:System.ApplicationIdentity" /> que identifica una aplicación de manera única.</param>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrust.#ctor(System.Security.PermissionSet,System.Collections.Generic.IEnumerable{System.Security.Policy.StrongName})">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.ApplicationTrust" /> utilizando el conjunto de permisos y la colección de ensamblados de plena confianza proporcionados.</summary>
      <param name="defaultGrantSet">Conjunto de permisos predeterminado que se concede a todos los ensamblados que no tienen concesiones específicas.</param>
      <param name="fullTrustAssemblies">Matriz de nombres seguros que representan ensamblados que se deben considerar de plena confianza en un dominio de aplicación.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fullTrustAssemblies" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="fullTrustAssemblies" /> contiene un ensamblado que no tiene un <see cref="T:System.Security.Policy.StrongName" />.</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrust.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un objeto <see cref="T:System.Security.Policy.ApplicationTrust" /> con un estado dado a partir de codificación XML.</summary>
      <param name="element">Codificación XML que se va a utilizar para reconstruir el objeto <see cref="T:System.Security.Policy.ApplicationTrust" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La codificación XML utilizada para <paramref name="element" /> no es válida.</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrust.ToXml">
      <summary>Crea codificación XML del objeto <see cref="T:System.Security.Policy.ApplicationTrust" /> y de su estado actual.</summary>
      <returns>Codificación XML del objeto de seguridad, incluida cualquier información de estado.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity">
      <summary>Obtiene o establece la identidad de aplicación del objeto de confianza de la aplicación.</summary>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.ApplicationIdentity" /> no se puede establecer porque su valor es <see langword="null" />.</exception>
      <returns>
        <see cref="T:System.ApplicationIdentity" /> del objeto de confianza de la aplicación.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.DefaultGrantSet">
      <summary>Obtiene o establece la instrucción de directiva que define el conjunto de concesión predeterminado.</summary>
      <returns>
        <see cref="T:System.Security.Policy.PolicyStatement" /> que describe las concesiones predeterminadas.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.ExtraInfo">
      <summary>Obtiene o establece la información de seguridad adicional sobre la aplicación.</summary>
      <returns>Objeto que contiene información de seguridad adicional sobre la aplicación.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.FullTrustAssemblies">
      <summary>Obtiene la lista de ensamblados de plena confianza para esta confianza de la aplicación.</summary>
      <returns>Lista de ensamblados de plena confianza.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun">
      <summary>Obtiene o establece un valor que indica si la aplicación cuenta con las concesiones de permisos requeridas y es de confianza para ejecutarla.</summary>
      <returns>Es <see langword="true" /> si la aplicación es de confianza para ejecutarla; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.Persist">
      <summary>Obtiene o establece un valor que indica si se conserva la información de confianza de la aplicación.</summary>
      <returns>Es <see langword="true" /> si la aplicación conserva la información de confianza; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationTrustCollection">
      <summary>Representa una colección de objetos <see cref="T:System.Security.Policy.ApplicationTrust" />. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.Add(System.Security.Policy.ApplicationTrust)">
      <summary>Agrega un elemento a la colección.</summary>
      <param name="trust">Objeto <see cref="T:System.Security.Policy.ApplicationTrust" /> que se agrega.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="trust" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La propiedad <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" /> de <see cref="T:System.Security.Policy.ApplicationTrust" /> que se especifica en <paramref name="trust" /> es <see langword="null" />.</exception>
      <returns>Índice donde se insertó el nuevo elemento.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.AddRange(System.Security.Policy.ApplicationTrust[])">
      <summary>Copia los elementos de la matriz <see cref="T:System.Security.Policy.ApplicationTrust" /> especificada al final de la colección.</summary>
      <param name="trusts">Matriz de tipo <see cref="T:System.Security.Policy.ApplicationTrust" /> que contiene los objetos que se agregarán a la colección.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="trusts" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La propiedad <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" /> de <see cref="T:System.Security.Policy.ApplicationTrust" /> que se especifica en <paramref name="trust" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.AddRange(System.Security.Policy.ApplicationTrustCollection)">
      <summary>Copia los elementos de la colección <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> especificada al final de la colección.</summary>
      <param name="trusts">
        <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> que contiene los objetos que se agregarán a la colección.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="trusts" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La propiedad <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" /> de <see cref="T:System.Security.Policy.ApplicationTrust" /> que se especifica en <paramref name="trust" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.Clear">
      <summary>Quita de la colección todos los objetos de confianza de la aplicación.</summary>
      <exception cref="T:System.ArgumentException">La propiedad <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" /> de un elemento de la colección es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.CopyTo(System.Security.Policy.ApplicationTrust[],System.Int32)">
      <summary>Copia la colección completa en una matriz unidimensional compatible, empezando en el índice especificado de la matriz de destino.</summary>
      <param name="array">Matriz unidimensional de tipo <see cref="T:System.Security.Policy.ApplicationTrust" /> que constituye el destino de los elementos copiados de la colección actual.</param>
      <param name="index">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> es menor que el límite inferior de <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> es multidimensional.  
  
o bien 
El número de elementos de la colección <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> es mayor que el espacio disponible desde el <paramref name="index" /> hasta el final de la <paramref name="array" /> de destino.</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.Find(System.ApplicationIdentity,System.Security.Policy.ApplicationVersionMatch)">
      <summary>Obtiene los objetos de confianza de la aplicación de la colección que coinciden con la identidad de la aplicación especificada.</summary>
      <param name="applicationIdentity">Objeto <see cref="T:System.ApplicationIdentity" /> que describe la aplicación que se va a buscar.</param>
      <param name="versionMatch">Uno de los valores de <see cref="T:System.Security.Policy.ApplicationVersionMatch" />.</param>
      <returns>
        <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> que contiene todos los objetos <see cref="T:System.Security.Policy.ApplicationTrust" /> coincidentes.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.GetEnumerator">
      <summary>Devuelve un objeto que se puede utilizar para recorrer en iteración la colección.</summary>
      <returns>Un <see cref="T:System.Security.Policy.ApplicationTrustEnumerator" /> que se puede utilizar para recorrer en iteración la colección.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.Remove(System.ApplicationIdentity,System.Security.Policy.ApplicationVersionMatch)">
      <summary>Quita de la colección todos los objetos de confianza de la aplicación que coinciden con los criterios especificados.</summary>
      <param name="applicationIdentity">
        <see cref="T:System.ApplicationIdentity" /> del objeto <see cref="T:System.Security.Policy.ApplicationTrust" /> que se va a quitar.</param>
      <param name="versionMatch">Uno de los valores de <see cref="T:System.Security.Policy.ApplicationVersionMatch" />.</param>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.Remove(System.Security.Policy.ApplicationTrust)">
      <summary>Quita de la colección el objeto de confianza de la aplicación especificado.</summary>
      <param name="trust">Objeto <see cref="T:System.Security.Policy.ApplicationTrust" /> que se quita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="trust" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La propiedad <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" /> del objeto <see cref="T:System.Security.Policy.ApplicationTrust" /> especificado por <paramref name="trust" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.RemoveRange(System.Security.Policy.ApplicationTrust[])">
      <summary>Quita de la colección los objetos de confianza de la aplicación contenidos en la matriz especificada.</summary>
      <param name="trusts">Matriz unidimensional de tipo <see cref="T:System.Security.Policy.ApplicationTrust" /> que contiene elementos que se van a quitar de la colección actual.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="trusts" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.RemoveRange(System.Security.Policy.ApplicationTrustCollection)">
      <summary>Quita de la colección los objetos de confianza de la aplicación contenidos en la colección especificada.</summary>
      <param name="trusts">
        <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> que contiene elementos que se van a quitar de la colección actual.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="trusts" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia los elementos de la <see cref="T:System.Collections.ICollection" /> en la <see cref="T:System.Array" /> especificada, comenzando por el índice de <see cref="T:System.Array" /> especificado.</summary>
      <param name="array">Matriz <see cref="T:System.Array" /> unidimensional que constituye el destino de los elementos copiados desde la colección <see cref="T:System.Collections.ICollection" />. <see cref="T:System.Array" /> debe tener una indización de base cero.</param>
      <param name="index">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> es menor que cero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> es multidimensional.  
  
o bien 
El número de elementos de la <see cref="T:System.Collections.ICollection" /> de origen es mayor que el espacio disponible desde <paramref name="index" /> hasta el final de la <paramref name="array" /> de destino.</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Devuelve un enumerador que procesa una iteración en la colección.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> que se puede utilizar para recorrer en iteración la colección.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustCollection.Count">
      <summary>Obtiene el número de elementos contenidos en la colección.</summary>
      <returns>El número de elementos incluidos en la colección.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustCollection.IsSynchronized">
      <summary>Obtiene un valor que indica si el acceso a la colección está sincronizado (es seguro para la ejecución de subprocesos).</summary>
      <returns>
        <see langword="false" /> en todos los casos.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustCollection.Item(System.Int32)">
      <summary>Obtiene el objeto <see cref="T:System.Security.Policy.ApplicationTrust" /> ubicado en el índice especificado de la colección.</summary>
      <param name="index">Índice basado en cero del objeto dentro de la colección.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> es mayor o igual que la cantidad de objetos contenidos en la colección.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="index" /> es negativo.</exception>
      <returns>Objeto <see cref="T:System.Security.Policy.ApplicationTrust" /> del índice especificado de la colección .</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustCollection.Item(System.String)">
      <summary>Obtiene el objeto <see cref="T:System.Security.Policy.ApplicationTrust" /> de la aplicación especificada.</summary>
      <param name="appFullName">Nombre completo de la aplicación.</param>
      <returns>Objeto <see cref="T:System.Security.Policy.ApplicationTrust" /> de la aplicación especificada, o bien <see langword="null" /> si el objeto no se encuentra.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustCollection.SyncRoot">
      <summary>Obtiene un objeto que se puede utilizar para sincronizar el acceso a la colección.</summary>
      <returns>Objeto que se utiliza para sincronizar el acceso a la colección.</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationTrustEnumerator">
      <summary>Representa el enumerador de los objetos <see cref="T:System.Security.Policy.ApplicationTrust" /> en la colección <see cref="T:System.Security.Policy.ApplicationTrustCollection" />.</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustEnumerator.MoveNext">
      <summary>Se desplaza hasta el siguiente elemento de la colección <see cref="T:System.Security.Policy.ApplicationTrustCollection" />.</summary>
      <returns>Es <see langword="true" /> si el enumerador avanzó con éxito hasta el siguiente elemento; es <see langword="false" /> si el enumerador alcanzó el final de la colección.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustEnumerator.Reset">
      <summary>Restablece el enumerador al principio de la colección <see cref="T:System.Security.Policy.ApplicationTrustCollection" />.</summary>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustEnumerator.Current">
      <summary>Obtiene el objeto <see cref="T:System.Security.Policy.ApplicationTrust" /> actual de la colección <see cref="T:System.Security.Policy.ApplicationTrustCollection" />.</summary>
      <returns>Objeto <see cref="T:System.Security.Policy.ApplicationTrust" /> actual del objeto <see cref="T:System.Security.Policy.ApplicationTrustCollection" />.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current">
      <summary>Obtiene el objeto <see cref="T:System.Object" /> actual de la colección <see cref="T:System.Security.Policy.ApplicationTrustCollection" />.</summary>
      <returns>Objeto <see cref="T:System.Object" /> actual del objeto <see cref="T:System.Security.Policy.ApplicationTrustCollection" />.</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationVersionMatch">
      <summary>Especifica cómo hacer coincidir las versiones al buscar confianzas de la aplicación en una colección.</summary>
    </member>
    <member name="F:System.Security.Policy.ApplicationVersionMatch.MatchAllVersions">
      <summary>Hacer coincidir en todas las versiones.</summary>
    </member>
    <member name="F:System.Security.Policy.ApplicationVersionMatch.MatchExactVersion">
      <summary>Hacer coincidir en una versión precisa.</summary>
    </member>
    <member name="T:System.Security.Policy.CodeConnectAccess">
      <summary>Especifica el acceso a recursos de red que se concede en el código.</summary>
    </member>
    <member name="F:System.Security.Policy.CodeConnectAccess.AnyScheme">
      <summary>Contiene el valor de cadena que representa el carácter comodín del esquema.</summary>
    </member>
    <member name="F:System.Security.Policy.CodeConnectAccess.DefaultPort">
      <summary>Contiene el valor utilizado para representar el puerto predeterminado.</summary>
    </member>
    <member name="F:System.Security.Policy.CodeConnectAccess.OriginPort">
      <summary>Contiene el valor utilizado para representar el valor de puerto del URI donde se originó el código.</summary>
    </member>
    <member name="F:System.Security.Policy.CodeConnectAccess.OriginScheme">
      <summary>Contiene el valor utilizado para representar el esquema del URI donde se originó el código.</summary>
    </member>
    <member name="M:System.Security.Policy.CodeConnectAccess.#ctor(System.String,System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.CodeConnectAccess" />.</summary>
      <param name="allowScheme">El esquema del URI representado por la instancia actual.</param>
      <param name="allowPort">El puerto representado por la instancia actual.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="allowScheme" /> es <see langword="null" />.  
  
o bien 
 <paramref name="allowScheme" /> es una cadena vacía ("").  
  
o bien 
 <paramref name="allowScheme" /> contiene caracteres que no se permiten en esquemas.  
  
o bien 
 <paramref name="allowPort" /> es menor que 0.  
  
o bien 
 <paramref name="allowPort" /> es mayor que 65.535</exception>
    </member>
    <member name="M:System.Security.Policy.CodeConnectAccess.CreateAnySchemeAccess(System.Int32)">
      <summary>Devuelve una instancia de <see cref="T:System.Security.Policy.CodeConnectAccess" /> que representa el acceso al puerto especificado utilizando cualquier esquema.</summary>
      <param name="allowPort">El puerto representado por la instancia devuelta.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="allowPort" /> es menor que 0.  
  
o bien 
 <paramref name="allowPort" /> es mayor que 65.535</exception>
      <returns>Instancia de <see cref="T:System.Security.Policy.CodeConnectAccess" /> para el puerto especificado.</returns>
    </member>
    <member name="M:System.Security.Policy.CodeConnectAccess.CreateOriginSchemeAccess(System.Int32)">
      <summary>Devuelve una instancia de <see cref="T:System.Security.Policy.CodeConnectAccess" /> que representa el acceso al puerto especificado utilizando el esquema de origen.</summary>
      <param name="allowPort">El puerto representado por la instancia devuelta.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="allowPort" /> es menor que 0.  
  
o bien 
 <paramref name="allowPort" /> es mayor que 65.535</exception>
      <returns>Instancia de <see cref="T:System.Security.Policy.CodeConnectAccess" /> para el puerto especificado.</returns>
    </member>
    <member name="M:System.Security.Policy.CodeConnectAccess.Equals(System.Object)">
      <summary>Devuelve un valor que indica si dos objetos <see cref="T:System.Security.Policy.CodeConnectAccess" /> representan el mismo esquema y puerto.</summary>
      <param name="o">Objeto que se va a comparar con el objeto <see cref="T:System.Security.Policy.CodeConnectAccess" /> actual.</param>
      <returns>
        <see langword="true" /> si los dos objetos representan el mismo esquema y puerto; en caso contrario es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.CodeConnectAccess.GetHashCode">
      <summary>Sirve como función de hash para un tipo concreto.</summary>
      <returns>Código hash para el objeto <see cref="T:System.Object" /> actual.</returns>
    </member>
    <member name="P:System.Security.Policy.CodeConnectAccess.Port">
      <summary>Obtiene el puerto representado por la instancia actual.</summary>
      <returns>Valor de <see cref="T:System.Int32" /> que identifica un puerto de PC utilizado junto con la propiedad <see cref="P:System.Security.Policy.CodeConnectAccess.Scheme" />.</returns>
    </member>
    <member name="P:System.Security.Policy.CodeConnectAccess.Scheme">
      <summary>Obtiene el esquema del URI representado por la instancia actual.</summary>
      <returns>
        <see cref="T:System.String" /> que identifica un esquema del URI, convertido a minúsculas.</returns>
    </member>
    <member name="T:System.Security.Policy.CodeGroup">
      <summary>Representa la clase base abstracta de la que deben derivarse todas las implementaciones de grupos de código.</summary>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.CodeGroup" />.</summary>
      <param name="membershipCondition">Condición de pertenencia que comprueba la evidencia para determinar si este grupo de código aplica la directiva.</param>
      <param name="policy">Instrucción de directiva del grupo de código en forma de conjunto de permisos y atributos que se conceden al código que cumple la condición de pertenencia.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="membershipCondition" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El tipo del parámetro <paramref name="membershipCondition" /> no es válido.  
  
o bien 
El tipo del parámetro <paramref name="policy" /> no es válido.</exception>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.AddChild(System.Security.Policy.CodeGroup)">
      <summary>Agrega un grupo de código secundario al grupo de código actual.</summary>
      <param name="group">El grupo de código que se va a agregar como grupo secundario. Este nuevo grupo de código secundario se agrega al final de la lista.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="group" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="group" /> no es un grupo de código válido.</exception>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.Copy">
      <summary>Cuando se reemplaza en una clase derivada, realiza una copia profunda del grupo de código actual.</summary>
      <returns>Una copia equivalente del grupo de código actual que incluye sus condiciones de pertenencia y los grupos de código secundarios.</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Cuando se reemplaza en una clase derivada, serializa las propiedades y el estado interno específico de un grupo de código derivado y agrega la serialización al <see cref="T:System.Security.SecurityElement" /> especificado.</summary>
      <param name="element">La codificación XML a la que se agrega la serialización.</param>
      <param name="level">Nivel de directiva donde está incluido el grupo de código.</param>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.Equals(System.Object)">
      <summary>Determina si el grupo de código especificado es equivalente al grupo de código actual.</summary>
      <param name="o">Grupo de código que se va a comparar con el grupo de código actual.</param>
      <returns>
        <see langword="true" /> si el grupo de código especificado es equivalente al grupo de código actual; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.Equals(System.Security.Policy.CodeGroup,System.Boolean)">
      <summary>Determina si el grupo de código especificado es equivalente al grupo de código actual, comprobando también los grupos de código secundarios, si se especifican.</summary>
      <param name="cg">Grupo de código que se va a comparar con el grupo de código actual.</param>
      <param name="compareChildren">
        <see langword="true" /> si se comparan los grupos de código secundarios; en caso contrario, <see langword="false" />.</param>
      <returns>
        <see langword="true" /> si el grupo de código especificado es equivalente al grupo de código actual; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un objeto de seguridad con un estado dado a partir de codificación XML.</summary>
      <param name="e">Codificación XML que se usará para reconstruir el objeto de seguridad.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="e" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Reconstruye un objeto de seguridad con un estado y un nivel de directiva dados a partir de codificación XML.</summary>
      <param name="e">Codificación XML que se usará para reconstruir el objeto de seguridad.</param>
      <param name="level">Nivel de directiva donde está incluido el grupo de código.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="e" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.GetHashCode">
      <summary>Obtiene el código hash del grupo de código actual.</summary>
      <returns>Código hash del grupo de código actual.</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Cuando se reemplaza en una clase derivada, reconstruye las propiedades y el estado interno específico de un grupo de código derivado del <see cref="T:System.Security.SecurityElement" /> especificado.</summary>
      <param name="e">Codificación XML que se usará para reconstruir el objeto de seguridad.</param>
      <param name="level">Nivel de directiva donde está incluido el grupo de código.</param>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.RemoveChild(System.Security.Policy.CodeGroup)">
      <summary>Quita el grupo de código secundario especificado.</summary>
      <param name="group">Grupo de código que se va a quitar como grupo secundario.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="group" /> no es un grupo de código secundario inmediato del grupo de código actual.</exception>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.Resolve(System.Security.Policy.Evidence)">
      <summary>Cuando se reemplaza en una clase derivada, resuelve la directiva del grupo de código y sus descendientes para un conjunto de evidencias.</summary>
      <param name="evidence">Prueba del ensamblado.</param>
      <returns>Una instrucción de directiva que contiene los permisos concedidos por el grupo de código con atributos opcionales, o <see langword="null" /> si el grupo de código no se aplica (la evidencia especificada no cumple la condición de pertenencia).</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary>Cuando se reemplaza en una clase derivada, resuelve los grupos de código coincidentes.</summary>
      <param name="evidence">Prueba del ensamblado.</param>
      <returns>Un objeto <see cref="T:System.Security.Policy.CodeGroup" /> que es el nodo raíz del árbol de grupos de código coincidentes.</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.ToXml">
      <summary>Crea una codificación XML del objeto de seguridad y su estado actual.</summary>
      <returns>Codificación XML del objeto de seguridad, incluida cualquier información de estado.</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>Crea una codificación XML del objeto de seguridad, de su estado actual y del nivel de directiva donde está incluido el código.</summary>
      <param name="level">Nivel de directiva donde está incluido el grupo de código.</param>
      <returns>Codificación XML del objeto de seguridad, incluida cualquier información de estado.</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.AttributeString">
      <summary>Obtiene una representación en forma de cadena de los atributos de la instrucción de directiva del grupo de código.</summary>
      <returns>Representación en forma de cadena de los atributos de la instrucción de directiva del grupo de código.</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.Children">
      <summary>Obtiene o establece una lista ordenada de los grupos de código secundarios de un grupo de código.</summary>
      <exception cref="T:System.ArgumentNullException">Se intentó establecer esta propiedad en <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Se ha intentado establecer esta propiedad con una lista de elementos secundarios que no son objetos <see cref="T:System.Security.Policy.CodeGroup" />.</exception>
      <returns>Lista de grupos de código secundarios.</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.Description">
      <summary>Obtiene o establece la descripción del grupo de código.</summary>
      <returns>La descripción del grupo de código.</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.MembershipCondition">
      <summary>Obtiene o establece la condición de pertenencia del grupo de código.</summary>
      <exception cref="T:System.ArgumentNullException">Se ha intentado establecer este parámetro en <see langword="null" />.</exception>
      <returns>Condición de pertenencia que determina a qué evidencia se aplica el grupo de código.</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.MergeLogic">
      <summary>Cuando se reemplaza en una clase derivada, obtiene la lógica de combinación del grupo de código.</summary>
      <returns>Una descripción de la lógica de combinación del grupo de código.</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.Name">
      <summary>Obtiene o establece el nombre del grupo de código.</summary>
      <returns>Nombre del grupo de código.</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.PermissionSetName">
      <summary>Obtiene el nombre del conjunto de permisos con nombre del grupo de código.</summary>
      <returns>El nombre de un conjunto de permisos con nombre del nivel de directiva.</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.PolicyStatement">
      <summary>Obtiene o establece la instrucción de directiva asociada al grupo de código.</summary>
      <returns>La instrucción de directiva del grupo de código.</returns>
    </member>
    <member name="T:System.Security.Policy.Evidence">
      <summary>Define el conjunto de información que constituye la entrada a las decisiones de las directivas de seguridad. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Policy.Evidence.#ctor">
      <summary>Inicializa una nueva instancia vacía de la clase <see cref="T:System.Security.Policy.Evidence" />.</summary>
    </member>
    <member name="M:System.Security.Policy.Evidence.#ctor(System.Object[],System.Object[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.Evidence" /> a partir de varios conjuntos de evidencias de host y ensamblado.</summary>
      <param name="hostEvidence">Evidencia de host a partir de la cual se crea la nueva instancia.</param>
      <param name="assemblyEvidence">Evidencia de ensamblado a partir de la cual se crea la nueva instancia.</param>
    </member>
    <member name="M:System.Security.Policy.Evidence.#ctor(System.Security.Policy.Evidence)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.Evidence" /> a partir de una copia superficial de una existente.</summary>
      <param name="evidence">La instancia de <see cref="T:System.Security.Policy.Evidence" /> a partir de la cual se crea la nueva instancia. No se realiza una copia en profundidad de esta instancia.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="evidence" /> no es una instancia válida de <see cref="T:System.Security.Policy.Evidence" />.</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.#ctor(System.Security.Policy.EvidenceBase[],System.Security.Policy.EvidenceBase[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.Evidence" /> a partir de varios conjuntos de evidencias de host y ensamblado.</summary>
      <param name="hostEvidence">Evidencia de host a partir de la cual se crea la nueva instancia.</param>
      <param name="assemblyEvidence">Evidencia de ensamblado a partir de la cual se crea la nueva instancia.</param>
    </member>
    <member name="M:System.Security.Policy.Evidence.AddAssembly(System.Object)">
      <summary>Agrega la evidencia de ensamblado especificada al conjunto de evidencias.</summary>
      <param name="id">Cualquier objeto de evidencia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> es null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="id" /> no es serializable.</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.AddAssemblyEvidence``1(``0)">
      <summary>Agrega un objeto de evidencia del tipo especificado a la lista de evidencias proporcionada por el ensamblado.</summary>
      <param name="evidence">Evidencia de ensamblado que se va a agregar.</param>
      <typeparam name="T">Tipo del objeto de <paramref name="evidence" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">La evidencia del tipo <paramref name="T" /> ya está en la lista.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="evidence" /> no es serializable.</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.AddHost(System.Object)">
      <summary>Agrega la evidencia especificada proporcionada por el host al conjunto de evidencias.</summary>
      <param name="id">Cualquier objeto de evidencia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> es null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="id" /> no es serializable.</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.AddHostEvidence``1(``0)">
      <summary>Agrega evidencia de host del tipo especificado a la colección de evidencias de host.</summary>
      <param name="evidence">Evidencia de host que se va a agregar.</param>
      <typeparam name="T">Tipo del objeto de <paramref name="evidence" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">La evidencia del tipo <paramref name="T" /> ya está en la lista.</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.Clear">
      <summary>Quita las evidencias de host y ensamblado del conjunto de evidencias.</summary>
    </member>
    <member name="M:System.Security.Policy.Evidence.Clone">
      <summary>Devuelve una copia duplicada de este objeto de evidencia.</summary>
      <returns>Copia duplicada de este objeto de evidencia.</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.CopyTo(System.Array,System.Int32)">
      <summary>Copia objetos de evidencia a un objeto <see cref="T:System.Array" />.</summary>
      <param name="array">Matriz de destino en la que se copian los objetos de evidencia.</param>
      <param name="index">Posición de base cero de la matriz donde comienza la copia de los objetos de evidencia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> está fuera del intervalo de la matriz de destino.</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.GetAssemblyEnumerator">
      <summary>Enumera la evidencia proporcionada por el ensamblado.</summary>
      <returns>Enumerador de la evidencia agregada por el método <see cref="M:System.Security.Policy.Evidence.AddAssembly(System.Object)" />.</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.GetAssemblyEvidence``1">
      <summary>Obtiene la evidencia de ensamblado del tipo especificado de la colección.</summary>
      <typeparam name="T">Tipo de evidencia que se va a obtener.</typeparam>
      <returns>Evidencia de tipo <paramref name="T" /> en la colección de evidencias de ensamblado.</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.GetEnumerator">
      <summary>Enumera todas las evidencias del conjunto, tanto las proporcionadas por el host como las proporcionadas por el ensamblado.</summary>
      <returns>Enumerador de la evidencia agregada por el método <see cref="M:System.Security.Policy.Evidence.AddHost(System.Object)" /> y el método <see cref="M:System.Security.Policy.Evidence.AddAssembly(System.Object)" />.</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.GetHostEnumerator">
      <summary>Enumera la evidencia proporcionada por el host.</summary>
      <returns>Enumerador de la evidencia agregada por el método <see cref="M:System.Security.Policy.Evidence.AddHost(System.Object)" />.</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.GetHostEvidence``1">
      <summary>Obtiene la evidencia de host del tipo especificado de la colección.</summary>
      <typeparam name="T">Tipo de evidencia que se va a obtener.</typeparam>
      <returns>Evidencia de tipo <paramref name="T" /> en la colección de evidencias de host.</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.Merge(System.Security.Policy.Evidence)">
      <summary>Combina el conjunto de evidencias especificado con el conjunto de evidencias actual.</summary>
      <param name="evidence">Conjunto de evidencias que se va a combinar con el conjunto de evidencias actual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="evidence" /> no es una instancia válida de <see cref="T:System.Security.Policy.Evidence" />.</exception>
      <exception cref="T:System.Security.SecurityException">
        <see cref="P:System.Security.Policy.Evidence.Locked" /> es <see langword="true" />, el código que llama a este método no tiene <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /> y el parámetro <paramref name="evidence" /> tiene una lista de host que no está vacía.</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.RemoveType(System.Type)">
      <summary>Quita de las enumeraciones de host y ensamblado las evidencias de un tipo determinado.</summary>
      <param name="t">Tipo de la evidencia que se va a quitar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="t" /> es null.</exception>
    </member>
    <member name="P:System.Security.Policy.Evidence.Count">
      <summary>Obtiene el número de objetos de evidencia del conjunto de evidencias.</summary>
      <returns>Número de objetos de evidencia del conjunto de evidencias.</returns>
    </member>
    <member name="P:System.Security.Policy.Evidence.IsReadOnly">
      <summary>Obtiene un valor que indica si el conjunto de evidencias es de sólo lectura.</summary>
      <returns>Siempre es <see langword="false" />, ya que no se admiten conjuntos de evidencias de solo lectura.</returns>
    </member>
    <member name="P:System.Security.Policy.Evidence.IsSynchronized">
      <summary>Obtiene un valor que indica si el conjunto de evidencias es seguro para la ejecución de subprocesos.</summary>
      <returns>Siempre es <see langword="false" /> ya que no se admiten conjuntos de evidencias seguros para la ejecución de subprocesos.</returns>
    </member>
    <member name="P:System.Security.Policy.Evidence.Locked">
      <summary>Obtiene o establece un valor que indica si la evidencia está bloqueada.</summary>
      <returns>
        <see langword="true" /> si la evidencia está bloqueada; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Policy.Evidence.SyncRoot">
      <summary>Obtiene la raíz de sincronización.</summary>
      <returns>Siempre es <see langword="this" /> (<see langword="Me" /> en Visual Basic), ya que no se admite la sincronización de conjuntos de evidencias.</returns>
    </member>
    <member name="T:System.Security.Policy.EvidenceBase">
      <summary>Proporciona una clase base de la cual se deben derivar todos los objetos que se van a utilizar como evidencia.</summary>
    </member>
    <member name="M:System.Security.Policy.EvidenceBase.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.EvidenceBase" />.</summary>
      <exception cref="T:System.InvalidOperationException">Un objeto que se va a utilizar como evidencia no es serializable.</exception>
    </member>
    <member name="M:System.Security.Policy.EvidenceBase.Clone">
      <summary>Crea un nuevo objeto que es una copia completa de la instancia actual.</summary>
      <returns>Copia duplicada de este objeto de evidencia.</returns>
    </member>
    <member name="T:System.Security.Policy.FileCodeGroup">
      <summary>Concede permiso para manipular archivos ubicados en los ensamblados de código con objeto de codificar ensamblados que cumplen la condición de pertenencia. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Permissions.FileIOPermissionAccess)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.FileCodeGroup" />.</summary>
      <param name="membershipCondition">Condición de pertenencia que comprueba la evidencia para determinar si este grupo de código aplica la directiva.</param>
      <param name="access">Uno de los valores de <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />. Este valor se utiliza para construir el objeto <see cref="T:System.Security.Permissions.FileIOPermission" /> al que se otorga permiso.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="membershipCondition" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El tipo del parámetro <paramref name="membershipCondition" /> no es válido.  
  
o bien 
El tipo del parámetro <paramref name="access" /> no es válido.</exception>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.Copy">
      <summary>Realiza una copia profunda del código de grupo actual.</summary>
      <returns>Una copia equivalente del grupo de código actual que incluye sus condiciones de pertenencia y los grupos de código secundarios.</returns>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.Equals(System.Object)">
      <summary>Determina si el grupo de código especificado es equivalente al grupo de código actual.</summary>
      <param name="o">Grupo de código que se va a comparar con el grupo de código actual.</param>
      <returns>
        <see langword="true" /> si el grupo de código especificado es equivalente al grupo de código actual; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.GetHashCode">
      <summary>Obtiene el código hash del grupo de código actual.</summary>
      <returns>Código hash del grupo de código actual.</returns>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.Resolve(System.Security.Policy.Evidence)">
      <summary>Resuelve la directiva del grupo de código y sus descendientes para un conjunto de pruebas.</summary>
      <param name="evidence">Prueba del ensamblado.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="evidence" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Policy.PolicyException">La directiva actual es <see langword="null" />.  
  
o bien 
Más de un grupo de código (incluido el grupo de código principal y todos los grupos de código secundarios) se ha marcado como <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />.</exception>
      <returns>Instrucción de directiva que contiene los permisos concedidos por el grupo de código con atributos opcionales, o <see langword="null" /> si el grupo de código no se aplica (la prueba especificada no cumple la condición de pertenencia).</returns>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary>Revuelve los grupos de código coincidentes.</summary>
      <param name="evidence">Prueba del ensamblado.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="evidence" /> es <see langword="null" />.</exception>
      <returns>Un objeto <see cref="T:System.Security.Policy.CodeGroup" /> que es el nodo raíz del árbol de grupos de código coincidentes.</returns>
    </member>
    <member name="P:System.Security.Policy.FileCodeGroup.AttributeString">
      <summary>Obtiene una representación en forma de cadena de los atributos de la instrucción de directiva del grupo de código.</summary>
      <returns>Siempre es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Security.Policy.FileCodeGroup.MergeLogic">
      <summary>Obtiene la lógica de combinación.</summary>
      <returns>La cadena "Unión".</returns>
    </member>
    <member name="P:System.Security.Policy.FileCodeGroup.PermissionSetName">
      <summary>Obtiene el nombre del conjunto de permisos con nombre del grupo de código.</summary>
      <returns>La concatenación de la cadena "Same Directory FileIO-" y el tipo de acceso.</returns>
    </member>
    <member name="T:System.Security.Policy.FirstMatchCodeGroup">
      <summary>Permite definir la directiva de seguridad mediante la unión de la instrucción de directiva de un grupo de código y la del primer grupo de código secundario coincidente. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Policy.FirstMatchCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.FirstMatchCodeGroup" />.</summary>
      <param name="membershipCondition">Condición de pertenencia que comprueba la evidencia para determinar si este grupo de código aplica la directiva.</param>
      <param name="policy">Instrucción de directiva del grupo de código en forma de conjunto de permisos y atributos que se conceden al código que cumple la condición de pertenencia.</param>
      <exception cref="T:System.ArgumentException">El tipo del parámetro <paramref name="membershipCondition" /> no es válido.  
  
o bien 
El tipo del parámetro <paramref name="policy" /> no es válido.</exception>
    </member>
    <member name="M:System.Security.Policy.FirstMatchCodeGroup.Copy">
      <summary>Realiza una copia profunda del código de grupo.</summary>
      <returns>Una copia equivalente del grupo de código que incluye sus condiciones de pertenencia y los grupos de código secundarios.</returns>
    </member>
    <member name="M:System.Security.Policy.FirstMatchCodeGroup.Resolve(System.Security.Policy.Evidence)">
      <summary>Resuelve la directiva del grupo de código y sus descendientes para un conjunto de pruebas.</summary>
      <param name="evidence">Prueba del ensamblado.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="evidence" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Policy.PolicyException">Más de un grupo de código (incluido el grupo de código principal y todos los grupos de código secundarios) se ha marcado como <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />.</exception>
      <returns>Instrucción de directiva que contiene los permisos concedidos por el grupo de código con atributos opcionales, o <see langword="null" /> si el grupo de código no se aplica (la prueba especificada no cumple la condición de pertenencia).</returns>
    </member>
    <member name="M:System.Security.Policy.FirstMatchCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary>Revuelve los grupos de código coincidentes.</summary>
      <param name="evidence">Prueba del ensamblado.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="evidence" /> es <see langword="null" />.</exception>
      <returns>Un objeto <see cref="T:System.Security.Policy.CodeGroup" /> que es el nodo raíz del árbol de grupos de código coincidentes.</returns>
    </member>
    <member name="P:System.Security.Policy.FirstMatchCodeGroup.MergeLogic">
      <summary>Obtiene la lógica de combinación.</summary>
      <returns>La cadena "Primera coincidencia".</returns>
    </member>
    <member name="T:System.Security.Policy.GacInstalled">
      <summary>Confirma que se ha originado un ensamblado de código en la caché global de ensamblados (GAC) como prueba para la evaluación de directivas. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.GacInstalled" />.</summary>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.Copy">
      <summary>Crea una copia equivalente del objeto actual.</summary>
      <returns>Una copia equivalente de <see cref="T:System.Security.Policy.GacInstalled" />.</returns>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>Crea un nuevo permiso de identidad correspondiente al objeto actual.</summary>
      <param name="evidence">Objeto <see cref="T:System.Security.Policy.Evidence" /> a partir del cual se crea el permiso de identidad.</param>
      <returns>Nuevo permiso de identidad correspondiente al objeto actual.</returns>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.Equals(System.Object)">
      <summary>Indica si el objeto actual es equivalente al objeto especificado.</summary>
      <param name="o">Objeto que se va a comparar con el objeto actual.</param>
      <returns>Es <see langword="true" /> si <paramref name="o" /> es un objeto <see cref="T:System.Security.Policy.GacInstalled" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.GetHashCode">
      <summary>Devuelve un código hash del objeto actual.</summary>
      <returns>Código hash para el objeto actual.</returns>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.ToString">
      <summary>Devuelve una representación en forma de cadena del objeto actual.</summary>
      <returns>Representación de cadena del objeto actual.</returns>
    </member>
    <member name="T:System.Security.Policy.GacMembershipCondition">
      <summary>Determina si un ensamblado pertenece a un grupo de código mediante la comprobación de su pertenencia a la caché global de ensamblados. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.GacMembershipCondition" />.</summary>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>Indica si la evidencia especificada satisface la condición de pertenencia.</summary>
      <param name="evidence">Objeto <see cref="T:System.Security.Policy.Evidence" /> del que se va a realizar la comprobación.</param>
      <returns>
        <see langword="true" /> si la evidencia especificada cumple la condición de pertenencia; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.Copy">
      <summary>Crea una copia equivalente de la condición de pertenencia.</summary>
      <returns>Un nuevo objeto <see cref="T:System.Security.Policy.GacMembershipCondition" />.</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.Equals(System.Object)">
      <summary>Indica si el objeto actual es equivalente al objeto especificado.</summary>
      <param name="o">Objeto que se va a comparar con el objeto actual.</param>
      <returns>
        <see langword="true" /> si <paramref name="o" /> es una clase <see cref="T:System.Security.Policy.GacMembershipCondition" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>Utiliza la codificación XML especificada para reconstruir un objeto de seguridad.</summary>
      <param name="e">Clase <see cref="T:System.Security.SecurityElement" /> que contiene la codificación XML utilizada para reconstruir el objeto de seguridad.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> no es un elemento de condición de pertenencia válido.</exception>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Utiliza la codificación XML especificada para reconstruir un objeto de seguridad, utilizando el contexto de nivel de directiva especificado.</summary>
      <param name="e">Clase <see cref="T:System.Security.SecurityElement" /> que contiene la codificación XML utilizada para reconstruir el objeto de seguridad.</param>
      <param name="level">Contexto de <see cref="T:System.Security.Policy.PolicyLevel" /> para resolver las referencias de <see cref="T:System.Security.NamedPermissionSet" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> no es un elemento de condición de pertenencia válido.</exception>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.GetHashCode">
      <summary>Obtiene un código hash de la condición de pertenencia actual.</summary>
      <returns>0 (cero).</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.ToString">
      <summary>Devuelve una representación en forma de cadena de la condición de pertenencia.</summary>
      <returns>Representación en forma de cadena de la condición de pertenencia.</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.ToXml">
      <summary>Crea una codificación XML del objeto de seguridad y su estado actual.</summary>
      <returns>Una clase <see cref="T:System.Security.SecurityElement" /> que contiene la codificación XML del objeto de seguridad, incluida cualquier información de estado.</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>Crea codificación XML del objeto de seguridad y de su estado actual, utilizando el contexto de nivel de directiva especificado.</summary>
      <param name="level">Contexto de <see cref="T:System.Security.Policy.PolicyLevel" /> para resolver las referencias de <see cref="T:System.Security.NamedPermissionSet" />.</param>
      <returns>Una clase <see cref="T:System.Security.SecurityElement" /> que contiene la codificación XML del objeto de seguridad, incluida cualquier información de estado.</returns>
    </member>
    <member name="T:System.Security.Policy.Hash">
      <summary>Proporciona la prueba relacionada con el valor hash de un ensamblado. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Policy.Hash.#ctor(System.Reflection.Assembly)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.Hash" />.</summary>
      <param name="assembly">Ensamblado cuyo valor hash se va a calcular.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="assembly" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assembly" /> no es un objeto <see cref="T:System.Reflection.Assembly" /> en tiempo de ejecución.</exception>
    </member>
    <member name="M:System.Security.Policy.Hash.CreateMD5(System.Byte[])">
      <summary>Crea un objeto <see cref="T:System.Security.Policy.Hash" /> que contiene un valor hash de <see cref="T:System.Security.Cryptography.MD5" />.</summary>
      <param name="md5">Matriz de bytes que contiene un valor hash de <see cref="T:System.Security.Cryptography.MD5" />.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="md5" /> es <see langword="null" />.</exception>
      <returns>Objeto que contiene el valor hash proporcionado por el parámetro <paramref name="md5" />.</returns>
    </member>
    <member name="M:System.Security.Policy.Hash.CreateSHA1(System.Byte[])">
      <summary>Crea un objeto <see cref="T:System.Security.Policy.Hash" /> que contiene un valor hash de <see cref="T:System.Security.Cryptography.SHA1" />.</summary>
      <param name="sha1">Matriz de bytes que contiene un valor hash de <see cref="T:System.Security.Cryptography.SHA1" />.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="sha1" /> es <see langword="null" />.</exception>
      <returns>Objeto que contiene el valor hash proporcionado por el parámetro <paramref name="sha1" />.</returns>
    </member>
    <member name="M:System.Security.Policy.Hash.CreateSHA256(System.Byte[])">
      <summary>Crea un objeto <see cref="T:System.Security.Policy.Hash" /> que contiene un valor hash de <see cref="T:System.Security.Cryptography.SHA256" />.</summary>
      <param name="sha256">Matriz de bytes que contiene un valor hash de <see cref="T:System.Security.Cryptography.SHA256" />.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="sha256" /> es <see langword="null" />.</exception>
      <returns>Objeto hash que contiene el valor hash proporcionado por el parámetro <paramref name="sha256" />.</returns>
    </member>
    <member name="M:System.Security.Policy.Hash.GenerateHash(System.Security.Cryptography.HashAlgorithm)">
      <summary>Calcula el valor hash del ensamblado utilizando el algoritmo hash especificado.</summary>
      <param name="hashAlg">Algoritmo hash que se utiliza para calcular el valor hash del ensamblado.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="hashAlg" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">No se puede generar el valor hash para el ensamblado.</exception>
      <returns>Matriz de bytes que representa el valor hash del ensamblado.</returns>
    </member>
    <member name="M:System.Security.Policy.Hash.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Obtiene el objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con el nombre del parámetro y la información adicional de la excepción.</summary>
      <param name="info">Objeto que contiene los datos del objeto serializados.</param>
      <param name="context">Información contextual acerca del origen o del destino.</param>
    </member>
    <member name="M:System.Security.Policy.Hash.ToString">
      <summary>Devuelve una representación en forma de cadena de este objeto <see cref="T:System.Security.Policy.Hash" /> actual.</summary>
      <returns>Representación del objeto <see cref="T:System.Security.Policy.Hash" /> actual.</returns>
    </member>
    <member name="P:System.Security.Policy.Hash.MD5">
      <summary>Obtiene el valor hash de la clase <see cref="T:System.Security.Cryptography.MD5" /> del ensamblado.</summary>
      <returns>Matriz de bytes que representa el valor hash de la clase <see cref="T:System.Security.Cryptography.MD5" /> del ensamblado.</returns>
    </member>
    <member name="P:System.Security.Policy.Hash.SHA1">
      <summary>Obtiene el valor hash de la clase <see cref="T:System.Security.Cryptography.SHA1" /> del ensamblado.</summary>
      <returns>Matriz de bytes que representa el valor hash de la clase <see cref="T:System.Security.Cryptography.SHA1" /> del ensamblado.</returns>
    </member>
    <member name="P:System.Security.Policy.Hash.SHA256">
      <summary>Obtiene el valor hash de la clase <see cref="T:System.Security.Cryptography.SHA256" /> del ensamblado.</summary>
      <returns>Matriz de bytes que representa el valor hash de la clase <see cref="T:System.Security.Cryptography.SHA256" /> del ensamblado.</returns>
    </member>
    <member name="T:System.Security.Policy.HashMembershipCondition">
      <summary>Determina si un ensamblado pertenece a un grupo de código mediante la comprobación de su valor hash. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.#ctor(System.Security.Cryptography.HashAlgorithm,System.Byte[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.HashMembershipCondition" /> con el algoritmo hash y el valor hash que determinan la pertenencia.</summary>
      <param name="hashAlg">Algoritmo hash que se utiliza para calcular el valor hash del ensamblado.</param>
      <param name="value">El valor hash que se va a comprobar.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="hashAlg" /> es <see langword="null" />.  
  
o bien 
El parámetro <paramref name="value" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="hashAlg" /> no es un algoritmo hash válido.</exception>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>Determina si la evidencia especificada satisface la condición de pertenencia.</summary>
      <param name="evidence">Conjunto de evidencias del que se realiza la comprobación.</param>
      <returns>
        <see langword="true" /> si la evidencia especificada cumple la condición de pertenencia; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.Copy">
      <summary>Crea una copia equivalente de la condición de pertenencia.</summary>
      <returns>Nueva copia idéntica de la condición de pertenencia actual.</returns>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.Equals(System.Object)">
      <summary>Determina si las propiedades <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" /> y <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" /> del objeto especificado son equivalentes a las propiedades <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" /> y <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" /> incluidas en el objeto <see cref="T:System.Security.Policy.HashMembershipCondition" /> actual.</summary>
      <param name="o">El objeto que se va a comparar con el objeto <see cref="T:System.Security.Policy.HashMembershipCondition" /> actual.</param>
      <returns>
        <see langword="true" /> si las propiedades <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" /> y <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" /> del objeto especificado son equivalentes a las propiedades <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" /> y <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" /> incluidas en el objeto <see cref="T:System.Security.Policy.HashMembershipCondition" /> actual; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un objeto de seguridad con un estado especificado a partir de codificación XML.</summary>
      <param name="e">Codificación XML que se usará para reconstruir el objeto de seguridad.</param>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Reconstruye un objeto de seguridad con un estado especificado a partir de codificación XML.</summary>
      <param name="e">Codificación XML que se usará para reconstruir el objeto de seguridad.</param>
      <param name="level">Contexto de nivel de directiva utilizado para resolver las referencias a los conjuntos de permisos con nombre.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="e" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="e" /> no es un elemento de condición de pertenencia válido.</exception>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.GetHashCode">
      <summary>Obtiene el código hash de la condición de pertenencia actual.</summary>
      <returns>El código hash de la condición de pertenencia actual.</returns>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
      <summary>Se ejecuta cuando todo el gráfico de objetos ha sido deserializado.</summary>
      <param name="sender">Objeto que inició la devolución de llamada. La funcionalidad de este parámetro aún no está implementada.</param>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Llena <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con los datos necesarios para serializar el objeto de destino.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se rellena con datos.</param>
      <param name="context">Destino <see cref="T:System.Runtime.Serialization.StreamingContext" /> de esta serialización.</param>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.ToString">
      <summary>Crea y devuelve una cadena que representa la condición de pertenencia.</summary>
      <returns>Una representación en forma de cadena del estado de la condición de pertenencia.</returns>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.ToXml">
      <summary>Crea una codificación XML del objeto de seguridad y su estado actual.</summary>
      <returns>Codificación XML del objeto de seguridad, incluida cualquier información de estado.</returns>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>Crea una codificación XML del objeto de seguridad y de su estado actual con el objeto <see cref="T:System.Security.Policy.PolicyLevel" /> especificado.</summary>
      <param name="level">Contexto de nivel de directiva para resolver las referencias a los conjuntos de permisos con nombre.</param>
      <returns>Codificación XML del objeto de seguridad, incluida cualquier información de estado.</returns>
    </member>
    <member name="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm">
      <summary>Obtiene o establece el algoritmo hash que se utiliza para la condición de pertenencia.</summary>
      <exception cref="T:System.ArgumentNullException">Se ha intentado establecer <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" /> en <see langword="null" />.</exception>
      <returns>Algoritmo hash que se utiliza para la condición de pertenencia.</returns>
    </member>
    <member name="P:System.Security.Policy.HashMembershipCondition.HashValue">
      <summary>Obtiene o establece el valor hash para el que se comprueba la condición de pertenencia.</summary>
      <exception cref="T:System.ArgumentNullException">Se ha intentado establecer <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" /> en <see langword="null" />.</exception>
      <returns>Valor hash para el que se comprueba la condición de pertenencia.</returns>
    </member>
    <member name="T:System.Security.Policy.IIdentityPermissionFactory">
      <summary>Define el método que crea un nuevo permiso de identidad.</summary>
    </member>
    <member name="M:System.Security.Policy.IIdentityPermissionFactory.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>Crea un nuevo permiso de identidad para la evidencia especificada.</summary>
      <param name="evidence">Evidencia a partir de la cual se crea el nuevo permiso de identidad.</param>
      <returns>El nuevo permiso de identidad.</returns>
    </member>
    <member name="T:System.Security.Policy.IMembershipCondition">
      <summary>Define la prueba que determina si un ensamblado de código es miembro de un grupo de código.</summary>
    </member>
    <member name="M:System.Security.Policy.IMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>Determina si la evidencia especificada satisface la condición de pertenencia.</summary>
      <param name="evidence">Conjunto de evidencias del que se realiza la comprobación.</param>
      <returns>
        <see langword="true" /> si la evidencia especificada cumple la condición de pertenencia; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.IMembershipCondition.Copy">
      <summary>Crea una copia equivalente de la condición de pertenencia.</summary>
      <returns>Nueva copia idéntica de la condición de pertenencia actual.</returns>
    </member>
    <member name="M:System.Security.Policy.IMembershipCondition.Equals(System.Object)">
      <summary>Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Object" /> actual.</summary>
      <param name="obj">Objeto <see cref="T:System.Object" /> que se va a comparar con el objeto <see cref="T:System.Object" /> actual.</param>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Object" /> actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.IMembershipCondition.ToString">
      <summary>Crea y devuelve una cadena que representa la condición de pertenencia.</summary>
      <returns>Representación en forma de cadena del estado de la condición de pertenencia actual.</returns>
    </member>
    <member name="T:System.Security.Policy.NetCodeGroup">
      <summary>Concede permiso Web al sitio del que se descargó el ensamblado. Esta clase no puede heredarse.</summary>
    </member>
    <member name="F:System.Security.Policy.NetCodeGroup.AbsentOriginScheme">
      <summary>Contiene un valor que se utiliza para especificar el acceso de conexión para el código con un esquema de origen desconocido o no reconocido.</summary>
    </member>
    <member name="F:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme">
      <summary>Contiene un valor utilizado para especificar cualquier otro esquema de origen no especificado.</summary>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.#ctor(System.Security.Policy.IMembershipCondition)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.NetCodeGroup" />.</summary>
      <param name="membershipCondition">Condición de pertenencia que comprueba la evidencia para determinar si este grupo de código aplica la directiva de seguridad de acceso del código.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="membershipCondition" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El tipo del parámetro <paramref name="membershipCondition" /> no es válido.</exception>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)">
      <summary>Agrega el acceso de conexión al grupo de código actual.</summary>
      <param name="originScheme">
        <see cref="T:System.String" /> que contiene el esquema que se va a comparar con el esquema del código.</param>
      <param name="connectAccess">
        <see cref="T:System.Security.Policy.CodeConnectAccess" /> que especifica el esquema y el código de puerto que se pueden utilizar para conectar de nuevo con su servidor de origen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="originScheme" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="originScheme" /> contiene caracteres que no se permiten en esquemas.  
  
o bien 
 <paramref name="originScheme" /> = <see cref="F:System.Security.Policy.NetCodeGroup.AbsentOriginScheme" /> y <paramref name="connectAccess" /> especifican <see cref="F:System.Security.Policy.CodeConnectAccess.OriginScheme" /> como su esquema.</exception>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.Copy">
      <summary>Realiza una copia profunda del código de grupo actual.</summary>
      <returns>Una copia equivalente del grupo de código actual que incluye sus condiciones de pertenencia y los grupos de código secundarios.</returns>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.Equals(System.Object)">
      <summary>Determina si el grupo de código especificado es equivalente al grupo de código actual.</summary>
      <param name="o">Objeto <see cref="T:System.Security.Policy.NetCodeGroup" /> que se va a comparar con el grupo de código actual.</param>
      <returns>
        <see langword="true" /> si el grupo de código especificado es equivalente al grupo de código actual; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.GetConnectAccessRules">
      <summary>Obtiene la información de acceso de conexión para el grupo de código actual.</summary>
      <returns>Matriz <see cref="T:System.Collections.DictionaryEntry" /> que contiene información de acceso de conexión.</returns>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.GetHashCode">
      <summary>Obtiene el código hash del grupo de código actual.</summary>
      <returns>Código hash del grupo de código actual.</returns>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.ResetConnectAccess">
      <summary>Quita toda la información de acceso de conexión para el grupo de código actual.</summary>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.Resolve(System.Security.Policy.Evidence)">
      <summary>Resuelve la directiva del grupo de código y sus descendientes para un conjunto de pruebas.</summary>
      <param name="evidence">
        <see cref="T:System.Security.Policy.Evidence" /> del ensamblado.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="evidence" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Policy.PolicyException">Más de un grupo de código (incluido el grupo de código principal y todos los grupos de código secundarios) se ha marcado como <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />.</exception>
      <returns>
        <see cref="T:System.Security.Policy.PolicyStatement" /> que contiene los permisos concedidos por el grupo de código con atributos opcionales, o <see langword="null" /> si el grupo de código no se aplica (la evidencia especificada no cumple la condición de pertenencia).</returns>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary>Revuelve los grupos de código coincidentes.</summary>
      <param name="evidence">Prueba del ensamblado.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="evidence" /> es <see langword="null" />.</exception>
      <returns>Conjunto completo de grupos de códigos que se encontró por evidencia.</returns>
    </member>
    <member name="P:System.Security.Policy.NetCodeGroup.AttributeString">
      <summary>Obtiene una representación en forma de cadena de los atributos de la instrucción de directiva del grupo de código.</summary>
      <returns>Siempre es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Security.Policy.NetCodeGroup.MergeLogic">
      <summary>Obtiene la lógica que se utiliza para la combinación de grupos.</summary>
      <returns>La cadena "Unión".</returns>
    </member>
    <member name="P:System.Security.Policy.NetCodeGroup.PermissionSetName">
      <summary>Obtiene el nombre del objeto <see cref="T:System.Security.NamedPermissionSet" /> del grupo de código.</summary>
      <returns>Siempre la cadena "Mismo Web de sitio."</returns>
    </member>
    <member name="T:System.Security.Policy.PermissionRequestEvidence">
      <summary>Define la prueba que representa las solicitudes de permiso. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Policy.PermissionRequestEvidence.#ctor(System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.PermissionRequestEvidence" /> con la solicitud de permiso de un ensamblado de código.</summary>
      <param name="request">Permisos mínimos que el código necesita para ejecutarse.</param>
      <param name="optional">Permisos que el código puede utilizar si se conceden, pero que no son obligatorios.</param>
      <param name="denied">Permisos que el código pide que no se concedan de forma explícita.</param>
    </member>
    <member name="M:System.Security.Policy.PermissionRequestEvidence.Copy">
      <summary>Crea una copia equivalente del <see cref="T:System.Security.Policy.PermissionRequestEvidence" /> actual.</summary>
      <returns>Copia equivalente del objeto <see cref="T:System.Security.Policy.PermissionRequestEvidence" /> actual.</returns>
    </member>
    <member name="M:System.Security.Policy.PermissionRequestEvidence.ToString">
      <summary>Obtiene una representación en forma de cadena del estado del objeto <see cref="T:System.Security.Policy.PermissionRequestEvidence" />.</summary>
      <returns>Representación del estado del objeto <see cref="T:System.Security.Policy.PermissionRequestEvidence" />.</returns>
    </member>
    <member name="P:System.Security.Policy.PermissionRequestEvidence.DeniedPermissions">
      <summary>Obtiene los permisos que el código pide que no se concedan de forma explícita.</summary>
      <returns>Permisos que el código pide que no se concedan de forma explícita.</returns>
    </member>
    <member name="P:System.Security.Policy.PermissionRequestEvidence.OptionalPermissions">
      <summary>Obtiene los permisos que el código puede utilizar si se conceden, pero que no son obligatorios.</summary>
      <returns>Permisos que el código puede utilizar si se conceden, pero que no son obligatorios.</returns>
    </member>
    <member name="P:System.Security.Policy.PermissionRequestEvidence.RequestedPermissions">
      <summary>Obtiene los permisos mínimos que el código necesita para ejecutarse.</summary>
      <returns>Permisos mínimos que el código necesita para ejecutarse.</returns>
    </member>
    <member name="T:System.Security.Policy.PolicyException">
      <summary>La excepción que se produce cuando la directiva prohíbe que se ejecute el código.</summary>
    </member>
    <member name="M:System.Security.Policy.PolicyException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.PolicyException" /> con propiedades predeterminadas.</summary>
    </member>
    <member name="M:System.Security.Policy.PolicyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.PolicyException" /> con datos serializados.</summary>
      <param name="info">Objeto que contiene los datos del objeto serializados.</param>
      <param name="context">Información contextual acerca del origen o del destino.</param>
    </member>
    <member name="M:System.Security.Policy.PolicyException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.PolicyException" /> con el mensaje de error especificado.</summary>
      <param name="message">Mensaje de error que explica el motivo de la excepción.</param>
    </member>
    <member name="M:System.Security.Policy.PolicyException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.PolicyException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message">Mensaje de error que explica el motivo de la excepción.</param>
      <param name="exception">Excepción que es la causa de la excepción actual. Si el parámetro <paramref name="exception" /> no es <see langword="null" />, la excepción actual se produce en un bloque <see langword="catch" /> que controla la excepción interna.</param>
    </member>
    <member name="T:System.Security.Policy.PolicyLevel">
      <summary>Representa los niveles de la directiva de seguridad para Common Language Runtime. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongName)">
      <summary>Agrega un <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> correspondiente al <see cref="T:System.Security.Policy.StrongName" /> especificado a la lista de objetos <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> que se utiliza para determinar si un ensamblado es miembro del grupo de ensamblados que no deben evaluarse.</summary>
      <param name="sn">El <see cref="T:System.Security.Policy.StrongName" /> utilizado para crear el <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> que se agregará a la lista de objetos <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> utilizada para determinar si un ensamblado es miembro del grupo de ensamblados que no deben evaluarse.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="sn" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El <see cref="T:System.Security.Policy.StrongName" /> especificado por el parámetro <paramref name="sn" /> tiene ya plena confianza.</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)">
      <summary>Agrega el <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> especificado a la lista de objetos <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> utilizada para determinar si un ensamblado es miembro del grupo de ensamblados que no deben evaluarse.</summary>
      <param name="snMC">Objeto <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> que se agregará a la lista de objetos <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> utilizada para determinar si un ensamblado es miembro del grupo de ensamblados que no deben evaluarse.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="snMC" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> especificado por el parámetro <paramref name="snMC" /> tiene ya plena confianza.</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.AddNamedPermissionSet(System.Security.NamedPermissionSet)">
      <summary>Agrega un <see cref="T:System.Security.NamedPermissionSet" /> al nivel actual de directiva.</summary>
      <param name="permSet">
        <see cref="T:System.Security.NamedPermissionSet" /> que se agrega al nivel actual de directiva.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="permSet" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="permSet" /> tiene el mismo nombre que un <see cref="T:System.Security.NamedPermissionSet" /> existente en <see cref="T:System.Security.Policy.PolicyLevel" />.</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.ChangeNamedPermissionSet(System.String,System.Security.PermissionSet)">
      <summary>Reemplaza un <see cref="T:System.Security.NamedPermissionSet" /> del nivel actual de directiva con el <see cref="T:System.Security.PermissionSet" /> especificado.</summary>
      <param name="name">Nombre del <see cref="T:System.Security.NamedPermissionSet" /> que se va a reemplazar.</param>
      <param name="pSet">
        <see cref="T:System.Security.PermissionSet" /> que reemplaza al <see cref="T:System.Security.NamedPermissionSet" /> especificado por el parámetro <paramref name="name" />.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="name" /> es <see langword="null" />.  
  
o bien 
El parámetro <paramref name="pSet" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="name" /> es igual al nombre de un conjunto de permisos reservado.  
  
o bien 
No se encuentra el <see cref="T:System.Security.PermissionSet" /> especificado por el parámetro <paramref name="pSet" />.</exception>
      <returns>Una copia del <see cref="T:System.Security.NamedPermissionSet" /> reemplazado.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.CreateAppDomainLevel">
      <summary>Crea un nuevo nivel de directiva para utilizarlo en el nivel de directiva de dominio de aplicación.</summary>
      <returns>Colección <see cref="T:System.Security.Policy.PolicyLevel" /> creada recientemente.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un objeto de seguridad con un estado dado a partir de codificación XML.</summary>
      <param name="e">Codificación XML que se usará para reconstruir el objeto de seguridad.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="e" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El <see cref="T:System.Security.SecurityElement" /> especificado por el parámetro <paramref name="e" /> no es válido.</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.GetNamedPermissionSet(System.String)">
      <summary>Devuelve el <see cref="T:System.Security.NamedPermissionSet" /> del nivel actual de directiva con el nombre especificado.</summary>
      <param name="name">Nombre de <see cref="T:System.Security.NamedPermissionSet" /> que se va a buscar.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="name" /> es <see langword="null" />.</exception>
      <returns>
        <see cref="T:System.Security.NamedPermissionSet" /> del nivel actual de directiva con el nombre especificado, si se encuentra; de lo contrario, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.Recover">
      <summary>Reemplaza el archivo de configuración para este <see cref="T:System.Security.Policy.PolicyLevel" /> con la última copia de seguridad (que refleja el estado de la directiva anterior a la última vez que se guardó) y lo devuelve al estado de la última vez que se guardó.</summary>
      <exception cref="T:System.Security.Policy.PolicyException">El nivel de directiva no tiene un archivo de configuración válido.</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongName)">
      <summary>Quita un ensamblado con el <see cref="T:System.Security.Policy.StrongName" /> especificado de la lista de ensamblados que el nivel de directiva utiliza para evaluar la directiva.</summary>
      <param name="sn">El <see cref="T:System.Security.Policy.StrongName" /> del ensamblado que se va a quitar de la lista de ensamblados que se utiliza para evaluar la directiva.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="sn" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El ensamblado con el <see cref="T:System.Security.Policy.StrongName" /> especificado por el parámetro <paramref name="sn" /> no tiene plena confianza.</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)">
      <summary>Quita un ensamblado con el <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> especificado de la lista de ensamblados que el nivel de directiva utiliza para evaluar la directiva.</summary>
      <param name="snMC">El <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> del ensamblado que se va a quitar de la lista de ensamblados que se utiliza para evaluar la directiva.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="snMC" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> especificado por el parámetro <paramref name="snMC" /> no tiene plena confianza.</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.Security.NamedPermissionSet)">
      <summary>Quita el <see cref="T:System.Security.NamedPermissionSet" /> especificado del nivel actual de directiva.</summary>
      <param name="permSet">
        <see cref="T:System.Security.NamedPermissionSet" /> que se va a quitar del nivel actual de directiva.</param>
      <exception cref="T:System.ArgumentException">No se encuentra el <see cref="T:System.Security.NamedPermissionSet" /> especificado por el parámetro <paramref name="permSet" />.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="permSet" /> es <see langword="null" />.</exception>
      <returns>El <see cref="T:System.Security.NamedPermissionSet" /> que se quitó.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.String)">
      <summary>Quita el <see cref="T:System.Security.NamedPermissionSet" /> con el nombre especificado del nivel actual de directiva.</summary>
      <param name="name">Nombre de la clase <see cref="T:System.Security.NamedPermissionSet" /> que se va a quitar.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="name" /> es igual al nombre de un conjunto de permisos reservado.  
  
o bien 
No se encuentra un <see cref="T:System.Security.NamedPermissionSet" /> con el nombre especificado.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="name" /> es <see langword="null" />.</exception>
      <returns>El <see cref="T:System.Security.NamedPermissionSet" /> que se quitó.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.Reset">
      <summary>Devuelve el nivel actual de directiva al estado predeterminado.</summary>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.Resolve(System.Security.Policy.Evidence)">
      <summary>Resuelve la directiva sobre la base de la prueba para el nivel de directiva y devuelve el <see cref="T:System.Security.Policy.PolicyStatement" /> resultante.</summary>
      <param name="evidence">
        <see cref="T:System.Security.Policy.Evidence" /> que se utiliza para resolver el <see cref="T:System.Security.Policy.PolicyLevel" />.</param>
      <exception cref="T:System.Security.Policy.PolicyException">El nivel de directiva contiene múltiples grupos de código coincidentes marcados como exclusivos.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="evidence" /> es <see langword="null" />.</exception>
      <returns>
        <see cref="T:System.Security.Policy.PolicyStatement" /> resultante.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary>Resuelve la directiva en el nivel de directiva y devuelve la raíz de un árbol de grupo de código que coincide con la prueba.</summary>
      <param name="evidence">
        <see cref="T:System.Security.Policy.Evidence" /> que se utiliza para resolver la directiva.</param>
      <exception cref="T:System.Security.Policy.PolicyException">El nivel de directiva contiene múltiples grupos de código coincidentes marcados como exclusivos.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="evidence" /> es <see langword="null" />.</exception>
      <returns>
        <see cref="T:System.Security.Policy.CodeGroup" /> que representa la raíz de un árbol de grupo de código que coincide con la prueba especificada.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.ToXml">
      <summary>Crea una codificación XML del objeto de seguridad y su estado actual.</summary>
      <returns>Codificación XML del objeto de seguridad, incluida cualquier información de estado.</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.FullTrustAssemblies">
      <summary>Obtiene una lista de objetos <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> utilizados para determinar si un ensamblado es un miembro del grupo de ensamblados utilizado para evaluar la directiva de seguridad.</summary>
      <returns>Lista de objetos <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> utilizados para determinar si un ensamblado es un miembro del grupo de ensamblados utilizado para evaluar la directiva de seguridad. Estos ensamblados reciben plena confianza durante la evaluación de la directiva de seguridad de los ensamblados que no pertenecen a la lista.</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.Label">
      <summary>Obtiene una etiqueta descriptiva para el nivel de directiva.</summary>
      <returns>Etiqueta asociada con el nivel de directiva.</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.NamedPermissionSets">
      <summary>Obtiene una lista de los conjuntos de permisos definidos para el nivel de directiva.</summary>
      <returns>Lista de los conjuntos de permisos definidos para el nivel de directiva.</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.RootCodeGroup">
      <summary>Obtiene o establece el grupo de código raíz para el nivel de directiva.</summary>
      <exception cref="T:System.ArgumentNullException">El valor de <see cref="P:System.Security.Policy.PolicyLevel.RootCodeGroup" /> es <see langword="null" />.</exception>
      <returns>
        <see cref="T:System.Security.Policy.CodeGroup" /> que es el nodo raíz del árbol de grupos de código de nivel de directiva.</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.StoreLocation">
      <summary>Obtiene la ruta de acceso donde se almacena el archivo de directivas.</summary>
      <returns>Ruta de acceso donde se almacena el archivo de directiva, o <see langword="null" /> si el <see cref="T:System.Security.Policy.PolicyLevel" /> no tiene una ubicación de almacenamiento.</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.Type">
      <summary>Obtiene el tipo del nivel de directiva.</summary>
      <returns>Uno de los valores de <see cref="T:System.Security.PolicyLevelType" />.</returns>
    </member>
    <member name="T:System.Security.Policy.PolicyStatement">
      <summary>Representa la instrucción de un <see cref="T:System.Security.Policy.CodeGroup" /> que describe los permisos y demás información que se aplica al código con un conjunto de evidencias en particular. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.#ctor(System.Security.PermissionSet)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.PolicyStatement" /> con el objeto <see cref="T:System.Security.PermissionSet" /> especificado.</summary>
      <param name="permSet">
        <see cref="T:System.Security.PermissionSet" /> con que inicializar la nueva instancia.</param>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.#ctor(System.Security.PermissionSet,System.Security.Policy.PolicyStatementAttribute)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.PolicyStatement" /> con el <see cref="T:System.Security.PermissionSet" /> y los atributos especificados.</summary>
      <param name="permSet">
        <see cref="T:System.Security.PermissionSet" /> con que inicializar la nueva instancia.</param>
      <param name="attributes">Combinación bit a bit de los valores de <see cref="T:System.Security.Policy.PolicyStatementAttribute" />.</param>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.Copy">
      <summary>Crea una copia equivalente de la instrucción de directiva actual.</summary>
      <returns>Una nueva copia del <see cref="T:System.Security.Policy.PolicyStatement" /> con <see cref="P:System.Security.Policy.PolicyStatement.PermissionSet" /> y <see cref="P:System.Security.Policy.PolicyStatement.Attributes" /> idénticos a los del <see cref="T:System.Security.Policy.PolicyStatement" /> actual.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.Equals(System.Object)">
      <summary>Determina si el objeto <see cref="T:System.Security.Policy.PolicyStatement" /> especificado es igual al objeto <see cref="T:System.Security.Policy.PolicyStatement" /> actual.</summary>
      <param name="o">Objeto <see cref="T:System.Security.Policy.PolicyStatement" /> que se va a comparar con el objeto <see cref="T:System.Security.Policy.PolicyStatement" /> actual.</param>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Security.Policy.PolicyStatement" /> especificado es igual al objeto <see cref="T:System.Security.Policy.PolicyStatement" /> actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un objeto de seguridad con un estado dado a partir de codificación XML.</summary>
      <param name="et">Codificación XML que se usará para reconstruir el objeto de seguridad.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="et" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="et" /> no es una codificación de <see cref="T:System.Security.Policy.PolicyStatement" /> válida.</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Reconstruye un objeto de seguridad con un estado dado a partir de codificación XML.</summary>
      <param name="et">Codificación XML que se usará para reconstruir el objeto de seguridad.</param>
      <param name="level">Contexto de <see cref="T:System.Security.Policy.PolicyLevel" /> para buscar valores de <see cref="T:System.Security.NamedPermissionSet" />.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="et" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="et" /> no es una codificación de <see cref="T:System.Security.Policy.PolicyStatement" /> válida.</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.GetHashCode">
      <summary>Obtiene un código hash para el objeto <see cref="T:System.Security.Policy.PolicyStatement" /> que es adecuado para su uso en algoritmos hash y estructuras de datos como una tabla hash.</summary>
      <returns>Código hash para el objeto <see cref="T:System.Security.Policy.PolicyStatement" /> actual.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.ToXml">
      <summary>Crea una codificación XML del objeto de seguridad y su estado actual.</summary>
      <returns>Codificación XML del objeto de seguridad, incluida cualquier información de estado.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>Crea una codificación XML del objeto de seguridad y su estado actual.</summary>
      <param name="level">Contexto de <see cref="T:System.Security.Policy.PolicyLevel" /> para buscar valores de <see cref="T:System.Security.NamedPermissionSet" />.</param>
      <returns>Codificación XML del objeto de seguridad, incluida cualquier información de estado.</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyStatement.Attributes">
      <summary>Obtiene o establece los atributos de la instrucción de directiva.</summary>
      <returns>Atributos de la instrucción de directiva.</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyStatement.AttributeString">
      <summary>Obtiene una representación de cadena de los atributos de la instrucción de directiva.</summary>
      <returns>Una cadena de texto que representa los atributos de la instrucción de directiva.</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyStatement.PermissionSet">
      <summary>Obtiene o establece el <see cref="T:System.Security.PermissionSet" /> de la instrucción de directiva.</summary>
      <returns>
        <see cref="T:System.Security.PermissionSet" /> de la instrucción de directiva.</returns>
    </member>
    <member name="T:System.Security.Policy.PolicyStatementAttribute">
      <summary>Define marcadores de atributos especiales para la directiva de seguridad en grupos de código.</summary>
    </member>
    <member name="F:System.Security.Policy.PolicyStatementAttribute.All">
      <summary>Se establecen todos los marcadores de atributo.</summary>
    </member>
    <member name="F:System.Security.Policy.PolicyStatementAttribute.Exclusive">
      <summary>Marcador de grupo de código exclusivo. Cuando un grupo de código tiene este marcador establecido, sólo se concede al código perteneciente al grupo de código los permisos asociados con ese grupo de código. Como máximo, puede establecerse como exclusivo un grupo de código que coincida con un fragmento de código dado.</summary>
    </member>
    <member name="F:System.Security.Policy.PolicyStatementAttribute.LevelFinal">
      <summary>Marcador que representa una instrucción de código que hace que los niveles inferiores de directiva no se evalúen como parte de la operación de resolución, lo que permite de forma efectiva que el nivel de directiva reemplace los niveles inferiores.</summary>
    </member>
    <member name="F:System.Security.Policy.PolicyStatementAttribute.Nothing">
      <summary>No se establecen marcas.</summary>
    </member>
    <member name="T:System.Security.Policy.Publisher">
      <summary>Proporciona la firma digital Authenticode X.509v3 de un ensamblado de código como prueba para la evaluación de directivas. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Policy.Publisher.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.Publisher" /> con el certificado Authenticode X.509v3 que contiene la clave pública de la compañía de software.</summary>
      <param name="cert">Objeto <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> que contiene la clave pública de la compañía de software.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="cert" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.Publisher.Copy">
      <summary>Crea una copia equivalente de <see cref="T:System.Security.Policy.Publisher" />.</summary>
      <returns>Copia idéntica y nueva de <see cref="T:System.Security.Policy.Publisher" />.</returns>
    </member>
    <member name="M:System.Security.Policy.Publisher.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>Crea un permiso de identidad correspondiente a la instancia actual de la clase <see cref="T:System.Security.Policy.Publisher" />.</summary>
      <param name="evidence">Objeto <see cref="T:System.Security.Policy.Evidence" /> a partir del cual se crea el permiso de identidad.</param>
      <returns>
        <see cref="T:System.Security.Permissions.PublisherIdentityPermission" /> del <see cref="T:System.Security.Policy.Publisher" /> especificado.</returns>
    </member>
    <member name="M:System.Security.Policy.Publisher.Equals(System.Object)">
      <summary>Compara el objeto <see cref="T:System.Security.Policy.Publisher" /> actual con el objeto especificado para determinar si son equivalentes.</summary>
      <param name="o">Objeto <see cref="T:System.Security.Policy.Publisher" /> cuya equivalencia con el objeto actual se va a comprobar.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="o" /> no es un objeto <see cref="T:System.Security.Policy.Publisher" />.</exception>
      <returns>
        <see langword="true" /> si las dos instancias de la clase <see cref="T:System.Security.Policy.Publisher" /> son iguales; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.Publisher.GetHashCode">
      <summary>Obtiene el código hash del objeto <see cref="P:System.Security.Policy.Publisher.Certificate" /> actual.</summary>
      <returns>Código hash del objeto <see cref="P:System.Security.Policy.Publisher.Certificate" /> actual.</returns>
    </member>
    <member name="M:System.Security.Policy.Publisher.ToString">
      <summary>Devuelve una representación en forma de cadena de este objeto <see cref="T:System.Security.Policy.Publisher" /> actual.</summary>
      <returns>Representación del objeto <see cref="T:System.Security.Policy.Publisher" /> actual.</returns>
    </member>
    <member name="P:System.Security.Policy.Publisher.Certificate">
      <summary>Obtiene el certificado Authenticode X.509v3 de la compañía de software.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> de la compañía de software.</returns>
    </member>
    <member name="T:System.Security.Policy.PublisherMembershipCondition">
      <summary>Determina si un ensamblado pertenece a un grupo de código mediante la comprobación del certificado Authenticode X.509v3 de la compañía de software. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.PublisherMembershipCondition" /> con el certificado Authenticode X.509v3 que determina la pertenencia.</summary>
      <param name="certificate">Objeto <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> que contiene la clave pública de la compañía de software.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="certificate" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>Determina si la evidencia especificada satisface la condición de pertenencia.</summary>
      <param name="evidence">Objeto <see cref="T:System.Security.Policy.Evidence" /> del que se va a realizar la comprobación.</param>
      <exception cref="T:System.ArgumentNullException">La propiedad <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> es <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> si la evidencia especificada cumple la condición de pertenencia; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.Copy">
      <summary>Crea una copia equivalente de la condición de pertenencia.</summary>
      <exception cref="T:System.ArgumentNullException">La propiedad <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> es <see langword="null" />.</exception>
      <returns>Nueva copia idéntica de la condición de pertenencia actual.</returns>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.Equals(System.Object)">
      <summary>Determina si el certificado de compañía de software del objeto especificado es equivalente al incluido en el objeto <see cref="T:System.Security.Policy.PublisherMembershipCondition" /> actual.</summary>
      <param name="o">El objeto que se va a comparar con el objeto <see cref="T:System.Security.Policy.PublisherMembershipCondition" /> actual.</param>
      <exception cref="T:System.ArgumentNullException">La propiedad <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> es <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> si el certificado de compañía de software del objeto especificado es equivalente al incluido en el objeto <see cref="T:System.Security.Policy.PublisherMembershipCondition" /> actual; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un objeto de seguridad con un estado especificado a partir de codificación XML.</summary>
      <param name="e">Codificación XML que se usará para reconstruir el objeto de seguridad.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="e" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="e" /> no es un elemento de condición de pertenencia válido.</exception>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Reconstruye un objeto de seguridad con un estado especificado a partir de codificación XML.</summary>
      <param name="e">Codificación XML que se usará para reconstruir el objeto de seguridad.</param>
      <param name="level">Contexto <see cref="T:System.Security.Policy.PolicyLevel" /> utilizado para resolver las referencias a <see cref="T:System.Security.NamedPermissionSet" />.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="e" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="e" /> no es un elemento de condición de pertenencia válido.</exception>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.GetHashCode">
      <summary>Obtiene el código hash de la condición de pertenencia actual.</summary>
      <exception cref="T:System.ArgumentNullException">La propiedad <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> es <see langword="null" />.</exception>
      <returns>El código hash de la condición de pertenencia actual.</returns>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.ToString">
      <summary>Crea y devuelve una representación en forma de cadena del objeto <see cref="T:System.Security.Policy.PublisherMembershipCondition" />.</summary>
      <exception cref="T:System.ArgumentNullException">La propiedad <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> es <see langword="null" />.</exception>
      <returns>Representación del objeto <see cref="T:System.Security.Policy.PublisherMembershipCondition" />.</returns>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.ToXml">
      <summary>Crea una codificación XML del objeto de seguridad y su estado actual.</summary>
      <exception cref="T:System.ArgumentNullException">La propiedad <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> es <see langword="null" />.</exception>
      <returns>Codificación XML del objeto de seguridad, incluida cualquier información de estado.</returns>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>Crea una codificación XML del objeto de seguridad y de su estado actual con el objeto <see cref="T:System.Security.Policy.PolicyLevel" /> especificado.</summary>
      <param name="level">Contexto <see cref="T:System.Security.Policy.PolicyLevel" /> que se utiliza para resolver las referencias a <see cref="T:System.Security.NamedPermissionSet" />.</param>
      <exception cref="T:System.ArgumentNullException">La propiedad <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> es <see langword="null" />.</exception>
      <returns>Codificación XML del objeto de seguridad, incluida cualquier información de estado.</returns>
    </member>
    <member name="P:System.Security.Policy.PublisherMembershipCondition.Certificate">
      <summary>Obtiene o establece el certificado Authenticode X.509v3 para el que se comprueba la condición de pertenencia.</summary>
      <exception cref="T:System.ArgumentNullException">El valor de la propiedad es <see langword="null" />.</exception>
      <returns>Objeto <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> para el que se comprueba la condición de pertenencia.</returns>
    </member>
    <member name="T:System.Security.Policy.Site">
      <summary>Proporciona el sitio Web del que se origina un ensamblado de código como prueba para la evaluación de directivas. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Policy.Site.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.Site" /> con el sitio web del que se origina un ensamblado de código.</summary>
      <param name="name">El sitio web de origen del ensamblado de código asociado.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="name" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.Site.Copy">
      <summary>Crea una copia equivalente del objeto <see cref="T:System.Security.Policy.Site" />.</summary>
      <returns>Nuevo objeto que es idéntico al objeto <see cref="T:System.Security.Policy.Site" /> actual.</returns>
    </member>
    <member name="M:System.Security.Policy.Site.CreateFromUrl(System.String)">
      <summary>Crea un nuevo objeto <see cref="T:System.Security.Policy.Site" /> a partir de la dirección URL especificada.</summary>
      <param name="url">URL a partir de la cual se va a crear el nuevo objeto <see cref="T:System.Security.Policy.Site" />.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="url" /> no es una dirección URL válida.  
  
o bien 
El parámetro <paramref name="url" /> es un nombre de archivo.</exception>
      <returns>Nuevo objeto de sitio.</returns>
    </member>
    <member name="M:System.Security.Policy.Site.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>Crea un permiso de identidad correspondiente al objeto <see cref="T:System.Security.Policy.Site" /> actual.</summary>
      <param name="evidence">Pruebas a partir del cual se crea el permiso de identidad.</param>
      <returns>Permiso de la identidad del sitio para el objeto <see cref="T:System.Security.Policy.Site" /> actual.</returns>
    </member>
    <member name="M:System.Security.Policy.Site.Equals(System.Object)">
      <summary>Compara el objeto <see cref="T:System.Security.Policy.Site" /> actual con el objeto especificado para determinar si son equivalentes.</summary>
      <param name="o">Objeto cuya equivalencia con el objeto actual se va a comprobar.</param>
      <returns>
        <see langword="true" /> si las dos instancias de la clase <see cref="T:System.Security.Policy.Site" /> son iguales; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.Site.GetHashCode">
      <summary>Devuelve el código hash del nombre de sitio web actual.</summary>
      <returns>Código hash del nombre de sitio web actual.</returns>
    </member>
    <member name="M:System.Security.Policy.Site.ToString">
      <summary>Devuelve una representación en forma de cadena del objeto <see cref="T:System.Security.Policy.Site" /> actual.</summary>
      <returns>Representación del sitio actual.</returns>
    </member>
    <member name="P:System.Security.Policy.Site.Name">
      <summary>Obtiene el sitio web del que se origina el ensamblado de código.</summary>
      <returns>Nombre del sitio web del que se origina el ensamblado de código.</returns>
    </member>
    <member name="T:System.Security.Policy.SiteMembershipCondition">
      <summary>Determina si un ensamblado pertenece a un grupo de código mediante la comprobación del sitio del que se ha originado. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.SiteMembershipCondition" /> con el nombre de sitio que determina la pertenencia.</summary>
      <param name="site">El nombre del sitio o la expresión del carácter comodín.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="site" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="site" /> no es un valor <see cref="T:System.Security.Policy.Site" /> válido.</exception>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>Determina si la evidencia especificada satisface la condición de pertenencia.</summary>
      <param name="evidence">Objeto <see cref="T:System.Security.Policy.Evidence" /> del que se va a realizar la comprobación.</param>
      <exception cref="T:System.ArgumentException">La propiedad <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> es <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> si la evidencia especificada cumple la condición de pertenencia; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.Copy">
      <summary>Crea una copia equivalente de la condición de pertenencia.</summary>
      <exception cref="T:System.ArgumentException">La propiedad <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> es <see langword="null" />.</exception>
      <returns>Nueva copia idéntica de la condición de pertenencia actual.</returns>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.Equals(System.Object)">
      <summary>Determina si el sitio del objeto <see cref="T:System.Security.Policy.SiteMembershipCondition" /> especificado es equivalente al sitio incluido en el objeto <see cref="T:System.Security.Policy.SiteMembershipCondition" /> actual.</summary>
      <param name="o">Objeto <see cref="T:System.Security.Policy.SiteMembershipCondition" /> que se va a comparar con el objeto <see cref="T:System.Security.Policy.SiteMembershipCondition" /> actual.</param>
      <exception cref="T:System.ArgumentException">La propiedad <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> del objeto actual o del objeto especificado es <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> si el sitio del objeto <see cref="T:System.Security.Policy.SiteMembershipCondition" /> especificado es equivalente al sitio incluido en el objeto <see cref="T:System.Security.Policy.SiteMembershipCondition" /> actual; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un objeto de seguridad con un estado especificado a partir de codificación XML.</summary>
      <param name="e">Codificación XML que se usará para reconstruir el objeto de seguridad.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="e" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="e" /> no es un elemento de condición de pertenencia válido.</exception>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Reconstruye un objeto de seguridad con un estado especificado a partir de codificación XML.</summary>
      <param name="e">Codificación XML que se usará para reconstruir el objeto de seguridad.</param>
      <param name="level">Contexto <see cref="T:System.Security.Policy.PolicyLevel" /> utilizado para resolver las referencias a <see cref="T:System.Security.NamedPermissionSet" />.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="e" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="e" /> no es un elemento de condición de pertenencia válido.</exception>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.GetHashCode">
      <summary>Obtiene el código hash de la condición de pertenencia actual.</summary>
      <exception cref="T:System.ArgumentException">La propiedad <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> es <see langword="null" />.</exception>
      <returns>El código hash de la condición de pertenencia actual.</returns>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.ToString">
      <summary>Crea y devuelve una cadena que representa la condición de pertenencia.</summary>
      <exception cref="T:System.ArgumentException">La propiedad <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> es <see langword="null" />.</exception>
      <returns>Representación en forma de cadena de la condición de pertenencia.</returns>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.ToXml">
      <summary>Crea una codificación XML del objeto de seguridad y su estado actual.</summary>
      <exception cref="T:System.ArgumentException">La propiedad <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> es <see langword="null" />.</exception>
      <returns>Codificación XML del objeto de seguridad, incluida cualquier información de estado.</returns>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>Crea una codificación XML del objeto de seguridad y de su estado actual con el objeto <see cref="T:System.Security.Policy.PolicyLevel" /> especificado.</summary>
      <param name="level">Contexto <see cref="T:System.Security.Policy.PolicyLevel" /> utilizado para resolver las referencias a <see cref="T:System.Security.NamedPermissionSet" />.</param>
      <exception cref="T:System.ArgumentException">La propiedad <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> es <see langword="null" />.</exception>
      <returns>Codificación XML del objeto de seguridad, incluida cualquier información de estado.</returns>
    </member>
    <member name="P:System.Security.Policy.SiteMembershipCondition.Site">
      <summary>Obtiene o establece el sitio para el que se comprueba la condición de pertenencia.</summary>
      <exception cref="T:System.ArgumentNullException">Se ha intentado establecer <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> en <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Se ha intentado establecer <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> en un objeto <see cref="T:System.Security.Policy.Site" /> no válido.</exception>
      <returns>Sitio para el que se comprueba la condición de pertenencia.</returns>
    </member>
    <member name="T:System.Security.Policy.StrongName">
      <summary>Proporciona el nombre seguro de un ensamblado de código como evidencia para la evaluación de directivas. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Policy.StrongName.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.StrongName" /> con el objeto binario correspondiente a la clave pública de nombre seguro, el nombre y la versión.</summary>
      <param name="blob">El objeto <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> de la compañía de software.</param>
      <param name="name">Sección de nombre sencillo del nombre seguro.</param>
      <param name="version">La versión (<see cref="T:System.Version" />) del nombre seguro.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="blob" /> es <see langword="null" />.  
  
o bien 
El parámetro <paramref name="name" /> es <see langword="null" />.  
  
o bien 
El parámetro <paramref name="version" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="name" /> es una cadena vacía ("").</exception>
    </member>
    <member name="M:System.Security.Policy.StrongName.Copy">
      <summary>Crea una copia equivalente del <see cref="T:System.Security.Policy.StrongName" /> actual.</summary>
      <returns>Una nueva copia idéntica del objeto <see cref="T:System.Security.Policy.StrongName" /> actual.</returns>
    </member>
    <member name="M:System.Security.Policy.StrongName.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>Crea un objeto <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> que se corresponde con el objeto <see cref="T:System.Security.Policy.StrongName" /> actual.</summary>
      <param name="evidence">El objeto <see cref="T:System.Security.Policy.Evidence" /> a partir del cual se crea el objeto <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" />.</param>
      <returns>
        <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> del <see cref="T:System.Security.Policy.StrongName" /> especificado.</returns>
    </member>
    <member name="M:System.Security.Policy.StrongName.Equals(System.Object)">
      <summary>Determina si el nombre seguro especificado es igual al nombre seguro actual.</summary>
      <param name="o">El nombre seguro con el que se compara el nombre seguro actual.</param>
      <returns>
        <see langword="true" /> si el nombre seguro especificado es igual al nombre seguro actual; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.StrongName.GetHashCode">
      <summary>Obtiene el código hash del objeto <see cref="T:System.Security.Policy.StrongName" /> actual.</summary>
      <returns>Código hash del objeto <see cref="T:System.Security.Policy.StrongName" /> actual.</returns>
    </member>
    <member name="M:System.Security.Policy.StrongName.ToString">
      <summary>Crea una representación en forma de cadena del objeto <see cref="T:System.Security.Policy.StrongName" /> actual.</summary>
      <returns>Representación del objeto <see cref="T:System.Security.Policy.StrongName" /> actual.</returns>
    </member>
    <member name="P:System.Security.Policy.StrongName.Name">
      <summary>Obtiene el nombre sencillo del objeto <see cref="T:System.Security.Policy.StrongName" /> actual.</summary>
      <returns>La parte del nombre sencillo de <see cref="T:System.Security.Policy.StrongName" />.</returns>
    </member>
    <member name="P:System.Security.Policy.StrongName.PublicKey">
      <summary>Obtiene la propiedad <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> del objeto <see cref="T:System.Security.Policy.StrongName" /> actual.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> de <see cref="T:System.Security.Policy.StrongName" /> actual.</returns>
    </member>
    <member name="P:System.Security.Policy.StrongName.Version">
      <summary>Obtiene la propiedad <see cref="T:System.Version" /> del objeto <see cref="T:System.Security.Policy.StrongName" /> actual.</summary>
      <returns>
        <see cref="T:System.Version" /> de <see cref="T:System.Security.Policy.StrongName" /> actual.</returns>
    </member>
    <member name="T:System.Security.Policy.StrongNameMembershipCondition">
      <summary>Determina si un ensamblado pertenece a un grupo de código mediante la comprobación de su nombre seguro. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> con el objeto binario de clave pública de nombre seguro, el nombre y el número de versión que determina la pertenencia.</summary>
      <param name="blob">Objeto binario de clave pública de nombre seguro de la compañía de software.</param>
      <param name="name">Sección de nombre sencillo del nombre seguro.</param>
      <param name="version">Número de la versión del nombre seguro.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="blob" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="name" /> es <see langword="null" />.  
  
o bien 
El parámetro <paramref name="name" /> es una cadena vacía ("").</exception>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>Determina si la evidencia especificada satisface la condición de pertenencia.</summary>
      <param name="evidence">Objeto <see cref="T:System.Security.Policy.Evidence" /> del que se va a realizar la comprobación.</param>
      <returns>
        <see langword="true" /> si la evidencia especificada cumple la condición de pertenencia; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.Copy">
      <summary>Crea una copia equivalente del <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> actual.</summary>
      <returns>Nueva copia idéntica del <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> actual.</returns>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.Equals(System.Object)">
      <summary>Determina si el <see cref="T:System.Security.Policy.StrongName" /> del objeto especificado es equivalente al <see cref="T:System.Security.Policy.StrongName" /> incluido en el objeto <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> actual.</summary>
      <param name="o">El objeto que se va a comparar con el objeto <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> actual.</param>
      <exception cref="T:System.ArgumentException">La propiedad <see cref="P:System.Security.Policy.StrongNameMembershipCondition.PublicKey" /> del objeto actual o del objeto especificado es <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> si el <see cref="T:System.Security.Policy.StrongName" /> del objeto especificado es equivalente al <see cref="T:System.Security.Policy.StrongName" /> incluido en el objeto <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> actual; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un objeto de seguridad con un estado especificado a partir de codificación XML.</summary>
      <param name="e">Codificación XML que se usará para reconstruir el objeto de seguridad.</param>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Reconstruye un objeto de seguridad con un estado especificado a partir de codificación XML.</summary>
      <param name="e">Codificación XML que se usará para reconstruir el objeto de seguridad.</param>
      <param name="level">Contexto <see cref="T:System.Security.Policy.PolicyLevel" /> utilizado para resolver las referencias a <see cref="T:System.Security.NamedPermissionSet" />.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="e" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="e" /> no es un elemento de condición de pertenencia válido.</exception>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.GetHashCode">
      <summary>Devuelve el código hash del <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> actual.</summary>
      <exception cref="T:System.ArgumentException">La propiedad <see cref="P:System.Security.Policy.StrongNameMembershipCondition.PublicKey" /> es <see langword="null" />.</exception>
      <returns>Código hash del <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> actual.</returns>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.ToString">
      <summary>Crea y devuelve una representación de cadena del objeto <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> actual.</summary>
      <returns>Representación del objeto <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> actual.</returns>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.ToXml">
      <summary>Crea una codificación XML del objeto de seguridad y su estado actual.</summary>
      <returns>Codificación XML del objeto de seguridad, incluida cualquier información de estado.</returns>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>Crea una codificación XML del objeto de seguridad y de su estado actual con el objeto <see cref="T:System.Security.Policy.PolicyLevel" /> especificado.</summary>
      <param name="level">Contexto <see cref="T:System.Security.Policy.PolicyLevel" /> que se utiliza para resolver las referencias a <see cref="T:System.Security.NamedPermissionSet" />.</param>
      <returns>Codificación XML del objeto de seguridad, incluida cualquier información de estado.</returns>
    </member>
    <member name="P:System.Security.Policy.StrongNameMembershipCondition.Name">
      <summary>Obtiene o establece el nombre sencillo del <see cref="T:System.Security.Policy.StrongName" /> para el que se comprueba la condición de pertenencia.</summary>
      <exception cref="T:System.ArgumentException">El valor es <see langword="null" />.  
  
o bien 
El valor es una cadena vacía ("").</exception>
      <returns>Nombre sencillo del <see cref="T:System.Security.Policy.StrongName" /> para el que se comprueba la condición de pertenencia.</returns>
    </member>
    <member name="P:System.Security.Policy.StrongNameMembershipCondition.PublicKey">
      <summary>Obtiene o establece el <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> del <see cref="T:System.Security.Policy.StrongName" /> para el que se comprueba la condición de pertenencia.</summary>
      <exception cref="T:System.ArgumentNullException">Se ha intentado establecer <see cref="P:System.Security.Policy.StrongNameMembershipCondition.PublicKey" /> en <see langword="null" />.</exception>
      <returns>Objeto <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> del <see cref="T:System.Security.Policy.StrongName" /> para el que se comprueba la condición de pertenencia.</returns>
    </member>
    <member name="P:System.Security.Policy.StrongNameMembershipCondition.Version">
      <summary>Obtiene o establece el <see cref="T:System.Version" /> del <see cref="T:System.Security.Policy.StrongName" /> para el que se comprueba la condición de pertenencia.</summary>
      <returns>Objeto <see cref="T:System.Version" /> del <see cref="T:System.Security.Policy.StrongName" /> para el que se comprueba la condición de pertenencia.</returns>
    </member>
    <member name="T:System.Security.Policy.TrustManagerContext">
      <summary>Representa el contexto que el administrador de confianza considerará al tomar la decisión de ejecutar una aplicación y al establecer la seguridad en un nuevo <see cref="T:System.AppDomain" /> en el que ejecutar una aplicación.</summary>
    </member>
    <member name="M:System.Security.Policy.TrustManagerContext.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.TrustManagerContext" />.</summary>
    </member>
    <member name="M:System.Security.Policy.TrustManagerContext.#ctor(System.Security.Policy.TrustManagerUIContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.TrustManagerContext" /> utilizando el objeto <see cref="T:System.Security.Policy.TrustManagerUIContext" /> especificado.</summary>
      <param name="uiContext">Uno de los valores <see cref="T:System.Security.Policy.TrustManagerUIContext" /> que especifica el tipo de interfaz de usuario del administrador de confianza que se va a utilizar.</param>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.IgnorePersistedDecision">
      <summary>Obtiene o establece un valor que indica si el administrador de seguridad de la aplicación debería omitir cualquier decisión guardada y llamar al administrador de confianza.</summary>
      <returns>
        <see langword="true" /> para llamar al administrador de confianza; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.KeepAlive">
      <summary>Obtiene o establece un valor que indica si el administrador de confianza debería almacenar en memoria caché el estado de esta aplicación, con el fin de facilitar las solicitudes futuras para determinar la confianza de la aplicación.</summary>
      <returns>
        <see langword="true" /> para almacenar en memoria caché los datos del estado; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.NoPrompt">
      <summary>Obtiene o establece un valor que indica si el administrador de confianza debería solicitar al usuario las decisiones de confianza.</summary>
      <returns>
        <see langword="true" /> para no preguntar al usuario; <see langword="false" /> para preguntar al usuario. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.Persist">
      <summary>Obtiene o establece un valor que indica si se debería conservar la respuesta del usuario al cuadro de diálogo de consentimiento.</summary>
      <returns>
        <see langword="true" /> para almacenar en memoria caché los datos del estado; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity">
      <summary>Obtiene o establece la identidad de la aplicación anterior.</summary>
      <returns>Objeto <see cref="T:System.ApplicationIdentity" /> que representa la clase <see cref="T:System.ApplicationIdentity" /> previa.</returns>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.UIContext">
      <summary>Obtiene o establece el tipo de interfaz de usuario que el administrador de confianza debería mostrar.</summary>
      <returns>Uno de los valores de <see cref="T:System.Security.Policy.TrustManagerUIContext" />. De manera predeterminada, es <see cref="F:System.Security.Policy.TrustManagerUIContext.Run" />.</returns>
    </member>
    <member name="T:System.Security.Policy.TrustManagerUIContext">
      <summary>Especifica el tipo de interfaz de usuario (UI) que el administrador de confianza debe utilizar para las decisiones de confianza.</summary>
    </member>
    <member name="F:System.Security.Policy.TrustManagerUIContext.Install">
      <summary>Interfaz de usuario de instalación.</summary>
    </member>
    <member name="F:System.Security.Policy.TrustManagerUIContext.Run">
      <summary>Interfaz de usuario de ejecución.</summary>
    </member>
    <member name="F:System.Security.Policy.TrustManagerUIContext.Upgrade">
      <summary>Interfaz de usuario de actualización.</summary>
    </member>
    <member name="T:System.Security.Policy.UnionCodeGroup">
      <summary>Representa un grupo de código cuya instrucción de directiva es la unión de la instrucción de directiva del grupo de código actual y la de todos sus grupos de código secundarios coincidentes. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Policy.UnionCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.UnionCodeGroup" />.</summary>
      <param name="membershipCondition">Condición de pertenencia que comprueba la evidencia para determinar si este grupo de código aplica la directiva.</param>
      <param name="policy">Instrucción de directiva del grupo de código en forma de conjunto de permisos y atributos que se conceden al código que cumple la condición de pertenencia.</param>
      <exception cref="T:System.ArgumentException">El tipo del parámetro <paramref name="membershipCondition" /> no es válido.  
  
o bien 
El tipo del parámetro <paramref name="policy" /> no es válido.</exception>
    </member>
    <member name="M:System.Security.Policy.UnionCodeGroup.Copy">
      <summary>Realiza una copia profunda del código de grupo actual.</summary>
      <returns>Una copia equivalente del grupo de código actual que incluye sus condiciones de pertenencia y los grupos de código secundarios.</returns>
    </member>
    <member name="M:System.Security.Policy.UnionCodeGroup.Resolve(System.Security.Policy.Evidence)">
      <summary>Resuelve la directiva del grupo de código y sus descendientes para un conjunto de pruebas.</summary>
      <param name="evidence">Prueba del ensamblado.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="evidence" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Policy.PolicyException">Más de un grupo de código (incluido el grupo de código principal y todos los grupos de código secundarios) se ha marcado como <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />.</exception>
      <returns>Instrucción de directiva que contiene los permisos concedidos por el grupo de código con atributos opcionales, o <see langword="null" /> si el grupo de código no se aplica (la prueba especificada no cumple la condición de pertenencia).</returns>
    </member>
    <member name="M:System.Security.Policy.UnionCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary>Revuelve los grupos de código coincidentes.</summary>
      <param name="evidence">Prueba del ensamblado.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="evidence" /> es <see langword="null" />.</exception>
      <returns>Conjunto completo de grupos de códigos que se encontró por evidencia.</returns>
    </member>
    <member name="P:System.Security.Policy.UnionCodeGroup.MergeLogic">
      <summary>Obtiene la lógica de combinación.</summary>
      <returns>Siempre es la cadena "Union".</returns>
    </member>
    <member name="T:System.Security.Policy.Url">
      <summary>Proporciona la dirección URL de la que se origina un ensamblado de código como prueba para la evaluación de directivas. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Policy.Url.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.Url" /> con la dirección URL de la que se origina un ensamblado de código.</summary>
      <param name="name">Dirección URL de origen del ensamblado de código asociado.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="name" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.Url.Copy">
      <summary>Crea una copia del objeto de prueba.</summary>
      <returns>Nueva copia idéntica del objeto de prueba.</returns>
    </member>
    <member name="M:System.Security.Policy.Url.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>Crea un permiso de identidad correspondiente a la instancia actual de la clase de prueba <see cref="T:System.Security.Policy.Url" />.</summary>
      <param name="evidence">Conjunto de pruebas a partir del cual se crea el permiso de identidad.</param>
      <returns>
        <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> de la evidencia <see cref="T:System.Security.Policy.Url" /> especificada.</returns>
    </member>
    <member name="M:System.Security.Policy.Url.Equals(System.Object)">
      <summary>Compara el objeto de evidencia <see cref="T:System.Security.Policy.Url" /> actual con el objeto especificado para determinar si son equivalentes.</summary>
      <param name="o">Objeto de evidencia <see cref="T:System.Security.Policy.Url" /> cuya equivalencia con el objeto actual se va a comprobar.</param>
      <returns>Es <see langword="true" /> si los dos objetos <see cref="T:System.Security.Policy.Url" /> son iguales; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.Url.GetHashCode">
      <summary>Obtiene el código hash de la dirección URL actual.</summary>
      <returns>Código hash de la dirección URL actual.</returns>
    </member>
    <member name="M:System.Security.Policy.Url.ToString">
      <summary>Devuelve una representación en forma de cadena de este objeto <see cref="T:System.Security.Policy.Url" /> actual.</summary>
      <returns>Representación del objeto <see cref="T:System.Security.Policy.Url" /> actual.</returns>
    </member>
    <member name="P:System.Security.Policy.Url.Value">
      <summary>Obtiene la dirección URL de la que se origina el ensamblado de código.</summary>
      <returns>Dirección URL de la que se origina el ensamblado de código.</returns>
    </member>
    <member name="T:System.Security.Policy.UrlMembershipCondition">
      <summary>Determina si un ensamblado pertenece a un grupo de código mediante la comprobación de su dirección URL. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.UrlMembershipCondition" /> con la dirección URL que determina la pertenencia.</summary>
      <param name="url">La dirección URL que se va a comprobar.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="url" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="url" /> debe ser una dirección URL absoluta.</exception>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>Determina si la evidencia especificada satisface la condición de pertenencia.</summary>
      <param name="evidence">Conjunto de evidencias del que se realiza la comprobación.</param>
      <exception cref="T:System.ArgumentNullException">La propiedad <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> es <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> si la evidencia especificada cumple la condición de pertenencia; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.Copy">
      <summary>Crea una copia equivalente de la condición de pertenencia.</summary>
      <exception cref="T:System.ArgumentNullException">La propiedad <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> es <see langword="null" />.</exception>
      <returns>Nueva copia idéntica de la condición de pertenencia actual.</returns>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.Equals(System.Object)">
      <summary>Determina si la dirección URL del objeto especificado es equivalente a la dirección URL incluida en el objeto <see cref="T:System.Security.Policy.UrlMembershipCondition" /> actual.</summary>
      <param name="o">El objeto que se va a comparar con el objeto <see cref="T:System.Security.Policy.UrlMembershipCondition" /> actual.</param>
      <exception cref="T:System.ArgumentNullException">La propiedad <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> del objeto actual o del objeto especificado es <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> si la dirección URL del objeto especificado es equivalente a la incluida en el objeto <see cref="T:System.Security.Policy.UrlMembershipCondition" /> actual; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un objeto de seguridad con un estado especificado a partir de codificación XML.</summary>
      <param name="e">Codificación XML que se usará para reconstruir el objeto de seguridad.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="e" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="e" /> no es un elemento de condición de pertenencia válido.</exception>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Reconstruye un objeto de seguridad con un estado especificado a partir de codificación XML.</summary>
      <param name="e">Codificación XML que se usará para reconstruir el objeto de seguridad.</param>
      <param name="level">Contexto de nivel de directiva utilizado para resolver las referencias a los conjuntos de permisos con nombre.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="e" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="e" /> no es un elemento de condición de pertenencia válido.</exception>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.GetHashCode">
      <summary>Obtiene el código hash de la condición de pertenencia actual.</summary>
      <exception cref="T:System.ArgumentNullException">La propiedad <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> es <see langword="null" />.</exception>
      <returns>El código hash de la condición de pertenencia actual.</returns>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.ToString">
      <summary>Crea y devuelve una cadena que representa la condición de pertenencia.</summary>
      <exception cref="T:System.ArgumentNullException">La propiedad <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> es <see langword="null" />.</exception>
      <returns>Una representación en forma de cadena del estado de la condición de pertenencia.</returns>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.ToXml">
      <summary>Crea una codificación XML del objeto de seguridad y su estado actual.</summary>
      <returns>Codificación XML del objeto de seguridad, incluida cualquier información de estado.</returns>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>Crea una codificación XML del objeto de seguridad y de su estado actual con el objeto <see cref="T:System.Security.Policy.PolicyLevel" /> especificado.</summary>
      <param name="level">Contexto de nivel de directiva para resolver las referencias a los conjuntos de permisos con nombre.</param>
      <exception cref="T:System.ArgumentNullException">La propiedad <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> es <see langword="null" />.</exception>
      <returns>Codificación XML del objeto de seguridad, incluida cualquier información de estado.</returns>
    </member>
    <member name="P:System.Security.Policy.UrlMembershipCondition.Url">
      <summary>Obtiene o establece la dirección URL para la que se comprueba la condición de pertenencia.</summary>
      <exception cref="T:System.ArgumentNullException">Se ha intentado establecer <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> en <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El valor no es una URL absoluta.</exception>
      <returns>La dirección URL para la que se comprueba la condición de pertenencia.</returns>
    </member>
    <member name="T:System.Security.Policy.Zone">
      <summary>Proporciona la zona de seguridad de un ensamblado de código como evidencia para la evaluación de directivas. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Policy.Zone.#ctor(System.Security.SecurityZone)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.Zone" /> con la zona desde la que se origina un ensamblado de código.</summary>
      <param name="zone">Zona de origen del ensamblado de código asociado.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="zone" /> no es un valor <see cref="T:System.Security.SecurityZone" /> válido.</exception>
    </member>
    <member name="M:System.Security.Policy.Zone.Copy">
      <summary>Crea una copia equivalente del objeto de evidencia.</summary>
      <returns>Nueva copia idéntica del objeto de prueba.</returns>
    </member>
    <member name="M:System.Security.Policy.Zone.CreateFromUrl(System.String)">
      <summary>Crea una nueva zona con la dirección URL especificada.</summary>
      <param name="url">Dirección URL a partir de la cual se creará la zona.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="url" /> es <see langword="null" />.</exception>
      <returns>Nueva zona con la dirección URL especificada.</returns>
    </member>
    <member name="M:System.Security.Policy.Zone.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>Crea un permiso de identidad correspondiente a la instancia actual de la clase de evidencia <see cref="T:System.Security.Policy.Zone" />.</summary>
      <param name="evidence">Conjunto de pruebas a partir del cual se crea el permiso de identidad.</param>
      <returns>
        <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> de la evidencia <see cref="T:System.Security.Policy.Zone" /> especificada.</returns>
    </member>
    <member name="M:System.Security.Policy.Zone.Equals(System.Object)">
      <summary>Compara el objeto de evidencia <see cref="T:System.Security.Policy.Zone" /> actual con el objeto especificado para determinar si son equivalentes.</summary>
      <param name="o">Objeto de evidencia <see cref="T:System.Security.Policy.Zone" /> cuya equivalencia con el objeto actual se va a comprobar.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="o" /> no es un objeto <see cref="T:System.Security.Policy.Zone" />.</exception>
      <returns>Es <see langword="true" /> si los dos objetos <see cref="T:System.Security.Policy.Zone" /> son iguales; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.Zone.GetHashCode">
      <summary>Obtiene el código hash de la zona actual.</summary>
      <returns>Código hash de la zona actual.</returns>
    </member>
    <member name="M:System.Security.Policy.Zone.ToString">
      <summary>Devuelve una representación en forma de cadena de este objeto <see cref="T:System.Security.Policy.Zone" /> actual.</summary>
      <returns>Representación del objeto <see cref="T:System.Security.Policy.Zone" /> actual.</returns>
    </member>
    <member name="P:System.Security.Policy.Zone.SecurityZone">
      <summary>Obtiene la zona desde la que se origina el ensamblado de código.</summary>
      <returns>Zona desde la que se origina el ensamblado de código.</returns>
    </member>
    <member name="T:System.Security.Policy.ZoneMembershipCondition">
      <summary>Determina si un ensamblado pertenece a un grupo de código mediante la comprobación de su zona de origen. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.#ctor(System.Security.SecurityZone)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.ZoneMembershipCondition" /> con la zona que determina la pertenencia.</summary>
      <param name="zone">El objeto <see cref="T:System.Security.SecurityZone" /> que se va a comprobar.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="zone" /> no es un valor <see cref="T:System.Security.SecurityZone" /> válido.</exception>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>Determina si la evidencia especificada satisface la condición de pertenencia.</summary>
      <param name="evidence">Conjunto de evidencias del que se realiza la comprobación.</param>
      <exception cref="T:System.ArgumentNullException">La propiedad <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La propiedad <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> no es una instancia de <see cref="T:System.Security.SecurityZone" /> válida.</exception>
      <returns>
        <see langword="true" /> si la evidencia especificada cumple la condición de pertenencia; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.Copy">
      <summary>Crea una copia equivalente de la condición de pertenencia.</summary>
      <exception cref="T:System.ArgumentNullException">La propiedad <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La propiedad <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> no es una instancia de <see cref="T:System.Security.SecurityZone" /> válida.</exception>
      <returns>Nueva copia idéntica de la condición de pertenencia actual.</returns>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.Equals(System.Object)">
      <summary>Determina si la zona del objeto especificado es equivalente a la zona incluida en el objeto <see cref="T:System.Security.Policy.ZoneMembershipCondition" /> actual.</summary>
      <param name="o">El objeto que se va a comparar con el objeto <see cref="T:System.Security.Policy.ZoneMembershipCondition" /> actual.</param>
      <exception cref="T:System.ArgumentNullException">La propiedad <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> del objeto actual o del objeto especificado es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La propiedad <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> del objeto actual o el objeto especificado no es una instancia de <see cref="T:System.Security.SecurityZone" /> válida.</exception>
      <returns>
        <see langword="true" /> si la zona del objeto especificado es equivalente a la incluida en el objeto <see cref="T:System.Security.Policy.ZoneMembershipCondition" /> actual; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un objeto de seguridad con un estado especificado a partir de codificación XML.</summary>
      <param name="e">Codificación XML que se usará para reconstruir el objeto de seguridad.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="e" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="e" /> no es un elemento de condición de pertenencia válido.</exception>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Reconstruye un objeto de seguridad con un estado especificado a partir de codificación XML.</summary>
      <param name="e">Codificación XML que se usará para reconstruir el objeto de seguridad.</param>
      <param name="level">Contexto de nivel de directiva utilizado para resolver las referencias a los conjuntos de permisos con nombre.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="e" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="e" /> no es un elemento de condición de pertenencia válido.</exception>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.GetHashCode">
      <summary>Obtiene el código hash de la condición de pertenencia actual.</summary>
      <exception cref="T:System.ArgumentNullException">La propiedad <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La propiedad <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> no es una instancia de <see cref="T:System.Security.SecurityZone" /> válida.</exception>
      <returns>El código hash de la condición de pertenencia actual.</returns>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.ToString">
      <summary>Crea y devuelve una cadena que representa la condición de pertenencia.</summary>
      <exception cref="T:System.ArgumentNullException">La propiedad <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La propiedad <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> no es una instancia de <see cref="T:System.Security.SecurityZone" /> válida.</exception>
      <returns>Una representación en forma de cadena del estado de la condición de pertenencia.</returns>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.ToXml">
      <summary>Crea una codificación XML del objeto de seguridad y su estado actual.</summary>
      <exception cref="T:System.ArgumentNullException">La propiedad <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La propiedad <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> no es una instancia de <see cref="T:System.Security.SecurityZone" /> válida.</exception>
      <returns>Codificación XML del objeto de seguridad, incluida cualquier información de estado.</returns>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>Crea una codificación XML del objeto de seguridad y de su estado actual con el objeto <see cref="T:System.Security.Policy.PolicyLevel" /> especificado.</summary>
      <param name="level">Contexto de nivel de directiva para resolver las referencias a los conjuntos de permisos con nombre.</param>
      <exception cref="T:System.ArgumentNullException">La propiedad <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La propiedad <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> no es una instancia de <see cref="T:System.Security.SecurityZone" /> válida.</exception>
      <returns>Codificación XML del objeto de seguridad, incluida cualquier información de estado.</returns>
    </member>
    <member name="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone">
      <summary>Obtiene o establece la zona para la que se comprueba la condición de pertenencia.</summary>
      <exception cref="T:System.ArgumentNullException">El valor es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Se ha intentado establecer <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> en un objeto <see cref="T:System.Security.SecurityZone" /> no válido.</exception>
      <returns>La zona para la que se comprueba la condición de pertenencia.</returns>
    </member>
    <member name="T:System.Security.PolicyLevelType">
      <summary>Especifica el tipo de un nivel de directiva de código administrado.</summary>
    </member>
    <member name="F:System.Security.PolicyLevelType.AppDomain">
      <summary>Directiva de seguridad para todo el código administrado de una aplicación.</summary>
    </member>
    <member name="F:System.Security.PolicyLevelType.Enterprise">
      <summary>Directiva de seguridad para todo el código administrado de una empresa.</summary>
    </member>
    <member name="F:System.Security.PolicyLevelType.Machine">
      <summary>Directiva de seguridad para todo el código administrado que se ejecuta en el equipo.</summary>
    </member>
    <member name="F:System.Security.PolicyLevelType.User">
      <summary>Directiva de seguridad para todo el código administrado que ejecuta el usuario.</summary>
    </member>
    <member name="T:System.Security.SecurityContext">
      <summary>Encapsula y propaga todos los datos relacionados con la seguridad para contextos de ejecución que se transfieren entre subprocesos. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.SecurityContext.Capture">
      <summary>Captura el contexto de seguridad del subproceso actual.</summary>
      <returns>Contexto de seguridad del subproceso actual.</returns>
    </member>
    <member name="M:System.Security.SecurityContext.CreateCopy">
      <summary>Crea una copia del contexto de seguridad actual.</summary>
      <exception cref="T:System.InvalidOperationException">El contexto de seguridad actual se ha utilizado previamente, se calcularon sus referencias entre diferentes dominios de aplicación o no se adquirió a través del método <see cref="M:System.Security.SecurityContext.Capture" />.</exception>
      <returns>Contexto de seguridad del subproceso actual.</returns>
    </member>
    <member name="M:System.Security.SecurityContext.Dispose">
      <summary>Libera todos los recursos usados por la instancia actual de la clase <see cref="T:System.Security.SecurityContext" />.</summary>
    </member>
    <member name="M:System.Security.SecurityContext.IsFlowSuppressed">
      <summary>Determina si el flujo del contexto de seguridad se ha suprimido.</summary>
      <returns>
        <see langword="true" /> si el flujo se ha suprimido; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed">
      <summary>Determina si el flujo de la parte de la identidad de Windows del contexto de seguridad actual se ha suprimido.</summary>
      <returns>
        <see langword="true" /> si el flujo se ha suprimido; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.SecurityContext.RestoreFlow">
      <summary>Restaura el flujo del contexto de seguridad en los subprocesos asincrónicos.</summary>
      <exception cref="T:System.InvalidOperationException">El contexto de seguridad es <see langword="null" /> o una cadena vacía.</exception>
    </member>
    <member name="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)">
      <summary>Ejecuta el método especificado en el contexto de seguridad especificado del subproceso actual.</summary>
      <param name="securityContext">Contexto de seguridad que se va a establecer.</param>
      <param name="callback">Delegado que representa el método que se va a ejecutar en el contexto de seguridad especificado.</param>
      <param name="state">Objeto que se pasa al método de devolución de llamada.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="securityContext" /> es <see langword="null" />.  
  
o bien 
 <paramref name="securityContext" /> no se adquirió a través de una operación de captura.  
  
o bien 
 <paramref name="securityContext" /> ya se ha utilizado como argumento de una llamada al método <see cref="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)" />.</exception>
    </member>
    <member name="M:System.Security.SecurityContext.SuppressFlow">
      <summary>Suprime el flujo del contexto de seguridad en los subprocesos asincrónicos.</summary>
      <returns>Estructura <see cref="T:System.Threading.AsyncFlowControl" /> para restaurar el flujo.</returns>
    </member>
    <member name="M:System.Security.SecurityContext.SuppressFlowWindowsIdentity">
      <summary>Suprime el flujo de la parte de la identidad de Windows del contexto de seguridad actual en los subprocesos asincrónicos.</summary>
      <returns>Estructura para restaurar el flujo.</returns>
    </member>
    <member name="T:System.Security.SecurityContextSource">
      <summary>Identifica el origen del contexto de seguridad.</summary>
    </member>
    <member name="F:System.Security.SecurityContextSource.CurrentAppDomain">
      <summary>El dominio de aplicación actual es el origen del contexto de seguridad.</summary>
    </member>
    <member name="F:System.Security.SecurityContextSource.CurrentAssembly">
      <summary>El ensamblado actual es el origen del contexto de seguridad.</summary>
    </member>
    <member name="T:System.Security.SecurityManager">
      <summary>Proporciona el punto de acceso principal para las clases que interactúan con el sistema de seguridad. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture">
      <summary>Determina si el subproceso actual requiere una captura del contexto de seguridad si es necesario volver a crear posteriormente su estado de seguridad.</summary>
      <returns>Es <see langword="false" /> si la pila no contiene ningún dominio de aplicación de confianza parcial, ningún ensamblado de confianza parcial y ningún modificador <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> o <see cref="M:System.Security.CodeAccessPermission.Deny" /> actualmente activo; es <see langword="true" /> si Common Language Runtime no puede garantizar que la pila no contenga ninguno de estos elementos.</returns>
    </member>
    <member name="M:System.Security.SecurityManager.GetStandardSandbox(System.Security.Policy.Evidence)">
      <summary>Obtiene un conjunto de permisos que se puede conceder de forma segura a una aplicación que tiene la evidencia especificada.</summary>
      <param name="evidence">Evidencia de host que debe corresponderse con un conjunto de permisos.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> es <see langword="null" />.</exception>
      <returns>Conjunto de permisos que se puede utilizar como conjunto de permisos concedidos para la aplicación que tiene la evidencia especificada.</returns>
    </member>
    <member name="M:System.Security.SecurityManager.GetZoneAndOrigin(System.Collections.ArrayList@,System.Collections.ArrayList@)">
      <summary>Obtiene la identidad de zona y los conjuntos de permisos de identidad de la dirección URL otorgados al ensamblado actual.</summary>
      <param name="zone">Parámetro de salida que contiene una colección <see cref="T:System.Collections.ArrayList" /> de objetos <see cref="P:System.Security.Permissions.ZoneIdentityPermissionAttribute.Zone" /> otorgados.</param>
      <param name="origin">Parámetro de salida que contiene una colección <see cref="T:System.Collections.ArrayList" /> de objetos <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> otorgados.</param>
      <exception cref="T:System.Security.SecurityException">La solicitud de <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> no se ha realizado correctamente.</exception>
    </member>
    <member name="M:System.Security.SecurityManager.IsGranted(System.Security.IPermission)">
      <summary>Determina si se concede un permiso al llamador.</summary>
      <param name="perm">Permiso del llamador cuya concesión se va a comprobar.</param>
      <returns>El valor es <see langword="true" /> si los permisos concedidos al llamador incluyen el permiso <paramref name="perm" />; en caso contrario, el valor es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)">
      <summary>Carga un <see cref="T:System.Security.Policy.PolicyLevel" /> a partir del archivo especificado.</summary>
      <param name="path">Ruta de acceso física a un archivo que contiene la información de la directiva de seguridad.</param>
      <param name="type">Uno de los valores de enumeración que especifica el tipo del nivel de directiva que se va a cargar.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="path" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El archivo indicado por el parámetro <paramref name="path" /> no existe.</exception>
      <exception cref="T:System.Security.SecurityException">El código que llama a este método no tiene <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.  
  
o bien 
El código que llama a este método no tiene <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.  
  
o bien 
El código que llama a este método no tiene <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.  
  
o bien 
El código que llama a este método no tiene <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</exception>
      <exception cref="T:System.NotSupportedException">Este método utiliza la directiva de seguridad de acceso del código (CAS), que está obsoleta en .NET Framework 4. Para habilitar la directiva CAS para compatibilidad con versiones anteriores de .NET Framework, use el elemento &lt;legacyCasPolicy&gt;.</exception>
      <returns>Nivel de directiva de carga.</returns>
    </member>
    <member name="M:System.Security.SecurityManager.LoadPolicyLevelFromString(System.String,System.Security.PolicyLevelType)">
      <summary>Carga un objeto <see cref="T:System.Security.Policy.PolicyLevel" /> desde la cadena especificada.</summary>
      <param name="str">Representación en XML de un nivel de directiva de seguridad de la misma forma en la que aparece en el archivo de configuración.</param>
      <param name="type">Uno de los valores de enumeración que especifica el tipo del nivel de directiva que se va a cargar.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="str" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="str" /> no es válido.</exception>
      <exception cref="T:System.Security.SecurityException">El código que llama a este método no tiene <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.</exception>
      <returns>Nivel de directiva de carga.</returns>
    </member>
    <member name="M:System.Security.SecurityManager.PolicyHierarchy">
      <summary>Proporciona un enumerador para acceder a la jerarquía de la directiva de seguridad por niveles, como la directiva de equipo y la directiva de usuario.</summary>
      <exception cref="T:System.NotSupportedException">Este método utiliza la directiva de seguridad de acceso del código (CAS), que está obsoleta en .NET Framework 4. Para habilitar la directiva CAS para compatibilidad con versiones anteriores de .NET Framework, use el elemento &lt;legacyCasPolicy&gt;.</exception>
      <exception cref="T:System.Security.SecurityException">El código que llama a este método no tiene <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.</exception>
      <returns>Enumerador para los objetos <see cref="T:System.Security.Policy.PolicyLevel" /> que componen la jerarquía de la directiva de seguridad.</returns>
    </member>
    <member name="M:System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence)">
      <summary>Determina qué permisos se conceden al código según la evidencia especificada.</summary>
      <param name="evidence">Conjunto de evidencias utilizado para evaluar la directiva.</param>
      <exception cref="T:System.NotSupportedException">Este método utiliza la directiva de seguridad de acceso del código (CAS), que está obsoleta en .NET Framework 4. Para habilitar la directiva CAS para compatibilidad con versiones anteriores de .NET Framework, use el elemento &lt;legacyCasPolicy&gt;.</exception>
      <returns>Conjunto de permisos que pueden concederse por el sistema de seguridad.</returns>
    </member>
    <member name="M:System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet@)">
      <summary>Determina qué permisos se conceden al código según la evidencia y solicitudes especificadas.</summary>
      <param name="evidence">Conjunto de evidencias utilizado para evaluar la directiva.</param>
      <param name="reqdPset">Permisos necesarios que debe ejecutar el código.</param>
      <param name="optPset">Permisos opcionales que se utilizarán si se conceden, pero que no son necesarios para ejecutar el código.</param>
      <param name="denyPset">Los permisos denegados que nunca deben concederse al código aunque la directiva lo permita.</param>
      <param name="denied">Parámetro de salida que contiene el conjunto de permisos no concedidos.</param>
      <exception cref="T:System.NotSupportedException">Este método utiliza la directiva de seguridad de acceso del código (CAS), que está obsoleta en .NET Framework 4. Para habilitar la directiva CAS para compatibilidad con versiones anteriores de .NET Framework, use el elemento &lt;legacyCasPolicy&gt;.</exception>
      <exception cref="T:System.Security.Policy.PolicyException">La directiva no puede conceder los permisos mínimos necesarios especificados por el parámetro <paramref name="reqdPset" />.</exception>
      <returns>Conjunto de permisos que pueden concederse por el sistema de seguridad.</returns>
    </member>
    <member name="M:System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence[])">
      <summary>Determina qué permisos se conceden al código según la evidencia especificada.</summary>
      <param name="evidences">Matriz de objetos de evidencia que se utilizan para evaluar la directiva.</param>
      <exception cref="T:System.NotSupportedException">Este método utiliza la directiva de seguridad de acceso del código (CAS), que está obsoleta en .NET Framework 4. Para habilitar la directiva CAS para compatibilidad con versiones anteriores de .NET Framework, use el elemento &lt;legacyCasPolicy&gt;.</exception>
      <returns>Conjunto de permisos apropiado para todas las pruebas proporcionadas.</returns>
    </member>
    <member name="M:System.Security.SecurityManager.ResolvePolicyGroups(System.Security.Policy.Evidence)">
      <summary>Obtiene una colección de grupos de código que coinciden con la evidencia especificada.</summary>
      <param name="evidence">Conjunto de evidencias en las que se evalúa la directiva.</param>
      <exception cref="T:System.NotSupportedException">Este método utiliza la directiva de seguridad de acceso del código (CAS), que está obsoleta en .NET Framework 4. Para habilitar la directiva CAS para compatibilidad con versiones anteriores de .NET Framework, use el elemento &lt;legacyCasPolicy&gt;.</exception>
      <returns>Enumeración del conjunto de grupos de código que coincide con la evidencia.</returns>
    </member>
    <member name="M:System.Security.SecurityManager.ResolveSystemPolicy(System.Security.Policy.Evidence)">
      <summary>Determina qué permisos se conceden al código según la evidencia especificada, excluida la directiva para el nivel <see cref="T:System.AppDomain" />.</summary>
      <param name="evidence">Conjunto de evidencias utilizado para evaluar la directiva.</param>
      <exception cref="T:System.NotSupportedException">Este método utiliza la directiva de seguridad de acceso del código (CAS), que está obsoleta en .NET Framework 4. Para habilitar la directiva CAS para compatibilidad con versiones anteriores de .NET Framework, use el elemento &lt;legacyCasPolicy&gt;.</exception>
      <returns>Conjunto de permisos que pueden concederse por el sistema de seguridad.</returns>
    </member>
    <member name="M:System.Security.SecurityManager.SavePolicy">
      <summary>Guarda el estado de la directiva de seguridad modificada.</summary>
      <exception cref="T:System.NotSupportedException">Este método utiliza la directiva de seguridad de acceso del código (CAS), que está obsoleta en .NET Framework 4. Para habilitar la directiva CAS para compatibilidad con versiones anteriores de .NET Framework, use el elemento &lt;legacyCasPolicy&gt;.</exception>
      <exception cref="T:System.Security.SecurityException">El código que llama a este método no tiene <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.</exception>
    </member>
    <member name="M:System.Security.SecurityManager.SavePolicyLevel(System.Security.Policy.PolicyLevel)">
      <summary>Guarda un nivel de directiva de seguridad modificado cargado con <see cref="M:System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)" />.</summary>
      <param name="level">El objeto de nivel de directiva que se va a guardar.</param>
      <exception cref="T:System.Security.SecurityException">El código que llama a este método no tiene <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.</exception>
      <exception cref="T:System.NotSupportedException">Este método utiliza la directiva de seguridad de acceso del código (CAS), que está obsoleta en .NET Framework 4. Para habilitar la directiva CAS para compatibilidad con versiones anteriores de .NET Framework, use el elemento &lt;legacyCasPolicy&gt;.</exception>
    </member>
    <member name="P:System.Security.SecurityManager.CheckExecutionRights">
      <summary>Obtiene o establece un valor que indica si el código debe contar con <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> para poder ejecutarse.</summary>
      <exception cref="T:System.Security.SecurityException">El código que llama a este método no tiene <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.</exception>
      <returns>El valor es <see langword="true" /> si el código debe tener <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> para poder ejecutarse; en caso contrario, el valor es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.SecurityManager.SecurityEnabled">
      <summary>Obtiene o establece un valor que indica si la seguridad está habilitada.</summary>
      <exception cref="T:System.Security.SecurityException">El código que llama a este método no tiene <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.</exception>
      <returns>El valor es <see langword="true" /> si la seguridad está habilitada; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Security.SecurityState">
      <summary>Proporciona una clase base para solicitar el estado de seguridad de una acción del objeto <see cref="T:System.AppDomainManager" />.</summary>
    </member>
    <member name="M:System.Security.SecurityState.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.SecurityState" />.</summary>
    </member>
    <member name="M:System.Security.SecurityState.EnsureState">
      <summary>Cuando se invalida en una clase derivada, asegúrese de que el estado representado por <see cref="T:System.Security.SecurityState" /> está disponible en el host.</summary>
    </member>
    <member name="M:System.Security.SecurityState.IsStateAvailable">
      <summary>Obtiene un valor que indica si el estado para esta implementación de la clase <see cref="T:System.Security.SecurityState" /> está disponible en el host actual.</summary>
      <returns>Es <see langword="true" /> si el estado está disponible; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Security.SecurityZone">
      <summary>Define los valores enteros que corresponden a las zonas de seguridad que utiliza la directiva de seguridad.</summary>
    </member>
    <member name="F:System.Security.SecurityZone.Internet">
      <summary>La zona Internet se utiliza para los sitios Web de Internet que no pertenecen a ninguna otra zona.</summary>
    </member>
    <member name="F:System.Security.SecurityZone.Intranet">
      <summary>La zona Intranet local se utiliza para el contenido ubicado en la intranet de la compañía. Debido a que los servidores y la información estarían dentro del firewall de la organización, un usuario o compañía podría asignar un nivel de confianza mayor al contenido de la intranet.</summary>
    </member>
    <member name="F:System.Security.SecurityZone.MyComputer">
      <summary>La zona correspondiente al equipo local es una zona implícita utilizada para el contenido del equipo del usuario.</summary>
    </member>
    <member name="F:System.Security.SecurityZone.NoZone">
      <summary>No se ha especificado ninguna zona.</summary>
    </member>
    <member name="F:System.Security.SecurityZone.Trusted">
      <summary>La zona de sitios de confianza se utiliza para el contenido de aquellos sitios Web considerados más confiables frente a otros sitios de Internet. Los usuarios pueden utilizar esta zona para asignar un nivel de confianza mayor a estos sitios y reducir al mínimo el número de solicitudes de autenticación. El usuario debe asignar a esta zona las direcciones URL de los sitios Web de confianza.</summary>
    </member>
    <member name="F:System.Security.SecurityZone.Untrusted">
      <summary>La zona de sitios restringidos se utiliza para aquellos sitios Web cuyo contenido podría causar o haber causado problemas al descargarse. El usuario debe asignar a esta zona las direcciones URL de los sitios Web que no son de confianza.</summary>
    </member>
    <member name="T:System.Security.XmlSyntaxException">
      <summary>Excepción que se provoca cuando existe un error de sintaxis al analizar XML. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.XmlSyntaxException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.XmlSyntaxException" /> con propiedades predeterminadas.</summary>
    </member>
    <member name="M:System.Security.XmlSyntaxException.#ctor(System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.XmlSyntaxException" /> con el número de línea donde se detectó la excepción.</summary>
      <param name="lineNumber">Número de línea de la secuencia XML donde se detectó el error de sintaxis XML.</param>
    </member>
    <member name="M:System.Security.XmlSyntaxException.#ctor(System.Int32,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.XmlSyntaxException" /> con el mensaje de error especificado y el número de línea donde se detectó la excepción.</summary>
      <param name="lineNumber">Número de línea de la secuencia XML donde se detectó el error de sintaxis XML.</param>
      <param name="message">Mensaje de error que explica el motivo de la excepción.</param>
    </member>
    <member name="M:System.Security.XmlSyntaxException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.XmlSyntaxException" /> con el mensaje de error especificado.</summary>
      <param name="message">Mensaje de error que explica el motivo de la excepción.</param>
    </member>
    <member name="M:System.Security.XmlSyntaxException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.XmlSyntaxException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message">Mensaje de error que explica el motivo de la excepción.</param>
      <param name="inner">Excepción que es la causa de la excepción actual. Si el parámetro <paramref name="inner" /> no es <see langword="null" />, la excepción actual se produce en un bloque <see langword="catch" /> que controla la excepción interna.</param>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermission">
      <summary>Permite el control de los permisos de seguridad de acceso del código para los controladores de servicios.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceProcess.ServiceControllerPermission" />.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceProcess.ServiceControllerPermission" /> con el acceso a los recursos especificado.</summary>
      <param name="state">Uno de los valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="state" /> no es un valor válido de <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.ServiceProcess.ServiceControllerPermissionAccess,System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceProcess.ServiceControllerPermission" /> con los niveles de permiso de acceso especificados, el nombre del equipo en el que reside el servicio y el nombre corto que identifica el servicio en el sistema.</summary>
      <param name="permissionAccess">Uno de los valores de <see cref="T:System.ServiceProcess.ServiceControllerPermissionAccess" />.</param>
      <param name="machineName">Nombre del equipo donde reside el servicio.</param>
      <param name="serviceName">Nombre corto que identifica el servicio ante el sistema.</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.ServiceProcess.ServiceControllerPermissionEntry[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceProcess.ServiceControllerPermission" /> con las entradas de permisos especificadas.</summary>
      <param name="permissionAccessEntries">Matriz de objetos <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" />. La propiedad <see cref="P:System.ServiceProcess.ServiceControllerPermission.PermissionEntries" /> se establece en este valor.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="permissionAccessEntries" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermission.PermissionEntries">
      <summary>Obtiene la colección de entradas de permiso para esta solicitud de permisos.</summary>
      <returns>
        <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" /> que contiene las entradas de permisos para esta solicitud de permisos.</returns>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermissionAccess">
      <summary>Define los niveles de acceso utilizados por las clases de permiso <see cref="T:System.ServiceProcess.ServiceController" />.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerPermissionAccess.Browse">
      <summary>
        <see cref="T:System.ServiceProcess.ServiceController" /> puede conectarse a los servicios existentes, pero no los puede controlar.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control">
      <summary>
        <see cref="T:System.ServiceProcess.ServiceController" /> puede conectarse a los servicios existentes y también los puede controlar.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerPermissionAccess.None">
      <summary>El objeto <see cref="T:System.ServiceProcess.ServiceController" /> no tiene permisos.</summary>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermissionAttribute">
      <summary>Permite comprobaciones declarativas de permiso de controlador de servicios.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceProcess.ServiceControllerPermissionAttribute" />.</summary>
      <param name="action">Uno de los valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionAttribute.CreatePermission">
      <summary>Crea el permiso basándose en los niveles de acceso solicitados que se establecen mediante la propiedad <see cref="P:System.ServiceProcess.ServiceControllerPermissionAttribute.PermissionAccess" /> del atributo.</summary>
      <returns>Una interfaz <see cref="T:System.Security.IPermission" /> que representa el permiso creado.</returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionAttribute.MachineName">
      <summary>Obtiene o establece el nombre del equipo en el que reside el servicio.</summary>
      <exception cref="T:System.ArgumentException">La sintaxis de <see cref="P:System.ServiceProcess.ServiceControllerPermissionAttribute.MachineName" /> no es válida.</exception>
      <returns>Nombre del equipo que está ejecutando el servicio asociado al <see cref="T:System.ServiceProcess.ServiceController" />.</returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionAttribute.PermissionAccess">
      <summary>Obtiene o establece los niveles de acceso utilizados en la solicitud de permisos.</summary>
      <returns>Combinación bit a bit de los valores de <see cref="T:System.ServiceProcess.ServiceControllerPermissionAccess" />.</returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionAttribute.ServiceName">
      <summary>Obtiene o establece el nombre corto que identifica el servicio en el sistema.</summary>
      <exception cref="T:System.ArgumentNullException">El valor de <see cref="P:System.ServiceProcess.ServiceControllerPermissionAttribute.ServiceName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La sintaxis de la propiedad <see cref="P:System.ServiceProcess.ServiceControllerPermissionAttribute.ServiceName" /> no es válida.</exception>
      <returns>El nombre del servicio.</returns>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermissionEntry">
      <summary>Define la unidad más pequeña de un permiso de seguridad de acceso del código que se establece para <see cref="T:System.ServiceProcess.ServiceController" />.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntry.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" />.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntry.#ctor(System.ServiceProcess.ServiceControllerPermissionAccess,System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> con los niveles de acceso a permisos especificados, el nombre del equipo y un nombre corto que identifique al servicio.</summary>
      <param name="permissionAccess">Uno de los valores de <see cref="T:System.ServiceProcess.ServiceControllerPermissionAccess" />.</param>
      <param name="machineName">Nombre del equipo donde reside el servicio.</param>
      <param name="serviceName">Nombre corto que identifica el servicio ante el sistema.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="machineName" /> no es válido.  
  
o bien 
 <paramref name="serviceName" /> no es válido.</exception>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionEntry.MachineName">
      <summary>Obtiene el nombre del equipo donde reside el servicio.</summary>
      <returns>Nombre del equipo que está ejecutando el servicio asociado al <see cref="T:System.ServiceProcess.ServiceController" />.</returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionEntry.PermissionAccess">
      <summary>Obtiene los niveles de acceso utilizados en la solicitud de permisos.</summary>
      <returns>Combinación bit a bit de los valores de <see cref="T:System.ServiceProcess.ServiceControllerPermissionAccess" />.</returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionEntry.ServiceName">
      <summary>Obtiene el nombre corto que identifica el servicio ante el sistema.</summary>
      <returns>El nombre del servicio.</returns>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection">
      <summary>Contiene una colección fuertemente tipada de objetos <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" />.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Add(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>Agrega un objeto <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> especificado a esta colección.</summary>
      <param name="value">Objeto <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> que se agrega.</param>
      <returns>Índice de base cero del objeto <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> agregado.</returns>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.AddRange(System.ServiceProcess.ServiceControllerPermissionEntry[])">
      <summary>Agrega a esta colección un conjunto de entradas de permiso especificadas.</summary>
      <param name="value">Matriz de objetos de tipo <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> que contiene las entradas de permisos que se van a agregar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.AddRange(System.ServiceProcess.ServiceControllerPermissionEntryCollection)">
      <summary>Agrega a esta colección un conjunto de entradas de permiso especificadas.</summary>
      <param name="value">
        <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" /> que contiene las entradas de permisos que se van a agregar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Contains(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>Determina si la colección contiene un objeto <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> especificado.</summary>
      <param name="value">Objeto <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> que se va a buscar.</param>
      <returns>Es <see langword="true" /> si el objeto <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> especificado pertenece a esta colección; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.CopyTo(System.ServiceProcess.ServiceControllerPermissionEntry[],System.Int32)">
      <summary>Copia las entradas de permiso de esta colección en una matriz, comenzando en un índice determinado de la matriz.</summary>
      <param name="array">Matriz de tipo <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> que recibe las entradas de permiso copiadas.</param>
      <param name="index">Índice de base cero en el que se comienzan a copiar las entradas de permiso.</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.IndexOf(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>Determina el índice de una entrada de permiso especificada en esta colección.</summary>
      <param name="value">Entrada de permiso que se va a buscar.</param>
      <returns>Índice de base cero de la entrada de permiso especificada, o -1 si la entrada de permiso no se ha encontrado en la colección.</returns>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Insert(System.Int32,System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>Inserta una entrada de permiso en esta colección, en el índice especificado.</summary>
      <param name="index">Índice de base cero de la colección en el que se va a insertar la entrada de permiso.</param>
      <param name="value">Entrada de permiso que se va a insertar en esta colección.</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Remove(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>Quita una entrada de permiso especificada de esta colección.</summary>
      <param name="value">Entrada de permiso que se va a quitar.</param>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Item(System.Int32)">
      <summary>Obtiene o establece el objeto en un índice especificado.</summary>
      <param name="index">Índice de base cero de la colección.</param>
      <returns>Objeto <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> que existe en el índice especificado.</returns>
    </member>
    <member name="T:System.Transactions.DistributedTransactionPermission">
      <summary>Permiso que <see cref="N:System.Transactions" /> solicita cuando la administración de una transacción se dirige al Coordinador de transacción distribuida de Microsoft (MS DTC). Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.DistributedTransactionPermission" />.</summary>
      <param name="state">Uno de los valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.Copy">
      <summary>Crea y devuelve una copia idéntica del permiso actual.</summary>
      <returns>Copia del permiso actual.</returns>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un permiso con un estado especificado a partir de una codificación XML.</summary>
      <param name="securityElement">Codificación XML que se usa para reconstruir el permiso.</param>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.Intersect(System.Security.IPermission)">
      <summary>Crea y devuelve un permiso que es la intersección del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para formar intersección con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <returns>Nuevo permiso que representa la intersección del permiso actual y del permiso especificado. Este nuevo permiso es <see langword="null" /> si la intersección está vacía.</returns>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Devuelve un valor que indica si el permiso actual es un subconjunto del permiso especificado.</summary>
      <param name="target">Permiso para probar la relación del subconjunto. Este permiso debe ser del mismo tipo que el permiso actual.</param>
      <returns>Es <see langword="true" /> si el <see cref="T:System.Security.IPermission" /> actual es un subconjunto del <see cref="T:System.Security.IPermission" /> especificado; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.IsUnrestricted">
      <summary>Devuelve un valor que indica si se permite el acceso sin restricciones al recurso protegido por el permiso actual.</summary>
      <returns>
        <see langword="true" /> si se permite el uso no restringido del recurso protegido por el permiso; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.ToXml">
      <summary>Crea una codificación XML del objeto de seguridad y su estado actual.</summary>
      <returns>Una clase <see cref="T:System.Security.SecurityElement" /> que contiene la codificación XML del objeto de seguridad, incluida cualquier información de estado.</returns>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.Union(System.Security.IPermission)">
      <summary>Crea un permiso que es la unión del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para combinar con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <returns>
        <see cref="T:System.Security.IPermission" /> que representa la unión del permiso actual y el permiso especificado.</returns>
    </member>
    <member name="T:System.Transactions.DistributedTransactionPermissionAttribute">
      <summary>Permite acciones de seguridad de <see cref="T:System.Transactions.DistributedTransactionPermission" /> para que se apliquen al código mediante seguridad declarativa. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.DistributedTransactionPermissionAttribute" /> con el objeto <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Uno de los valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermissionAttribute.CreatePermission">
      <summary>Crea un objeto de permiso que después puede serializarse de forma binaria y almacenarse de manera persistente junto con el objeto <see cref="T:System.Security.Permissions.SecurityAction" /> en los metadatos de un ensamblado.</summary>
      <returns>Objeto de permiso serializable.</returns>
    </member>
    <member name="P:System.Transactions.DistributedTransactionPermissionAttribute.Unrestricted">
      <summary>Obtiene o establece un valor que indica si se declara el permiso completo (sin restricciones) al recurso protegido por el atributo.</summary>
      <returns>Es <see langword="true" /> si se declaran permisos completos para el recurso protegido; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Web.AspNetHostingPermission">
      <summary>Controla los permisos de acceso en los entornos hospedados de ASP.NET. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.AspNetHostingPermission" /> con el valor de enumeración <see cref="T:System.Security.Permissions.PermissionState" /> especificado.</summary>
      <param name="state">Valor de enumeración de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> no se ha establecido en uno de los valores de enumeración<see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.#ctor(System.Web.AspNetHostingPermissionLevel)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.AspNetHostingPermission" /> con el nivel de permiso especificado.</summary>
      <param name="level">Valor de enumeración <see cref="T:System.Web.AspNetHostingPermissionLevel" />.</param>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.Copy">
      <summary>Cuando se implementa mediante una clase derivada, crea y devuelve una copia idéntica del objeto de permiso actual.</summary>
      <returns>Copia del objeto de permiso actual.</returns>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un objeto de permiso con un estado especificado a partir de codificación XML.</summary>
      <param name="securityElement">
        <see cref="T:System.Security.SecurityElement" /> que contiene la codificación XML que se utiliza para reconstruir el objeto de permiso.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La propiedad <see cref="P:System.Security.SecurityElement.Tag" /> de <paramref name="securityElement" /> no es igual a "IPermission".  
  
o bien 
La clase <see cref="M:System.Security.SecurityElement.Attribute(System.String)" /> de <paramref name="securityElement" /> es <see langword="null" /> o una cadena vacía ("").</exception>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.Intersect(System.Security.IPermission)">
      <summary>Cuando se implementa mediante una clase derivada, se crea y se devuelve un permiso que es la intersección del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para combinar con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> no es <see cref="T:System.Web.AspNetHostingPermission" />.</exception>
      <returns>
        <see cref="T:System.Security.IPermission" /> que representa la intersección del permiso actual y el permiso especificado; en caso contrario, <see langword="null" /> si la intersección está vacía.</returns>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Devuelve un valor que indica si el permiso actual es un subconjunto del permiso especificado.</summary>
      <param name="target">
        <see cref="T:System.Security.IPermission" /> que se va a combinar con el permiso actual. Debe ser del mismo tipo que el <see cref="T:System.Security.IPermission" /> actual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> no es <see cref="T:System.Web.AspNetHostingPermission" />.</exception>
      <returns>Es <see langword="true" /> si el <see cref="T:System.Security.IPermission" /> actual es un subconjunto del <see cref="T:System.Security.IPermission" /> especificado; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.IsUnrestricted">
      <summary>Devuelve un valor que indica si se permite el acceso sin restricciones al recurso protegido por el permiso actual.</summary>
      <returns>
        <see langword="true" /> si se permite el uso no restringido del recurso protegido por el permiso; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.ToXml">
      <summary>Crea una codificación XML del objeto de permiso y de su estado actual.</summary>
      <returns>
        <see cref="T:System.Security.SecurityElement" /> que contiene la codificación XML del objeto de permiso, incluida cualquier información de estado.</returns>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.Union(System.Security.IPermission)">
      <summary>Crea un permiso que es la unión del permiso actual y el permiso especificado.</summary>
      <param name="target">Permiso para combinar con el permiso actual. Debe ser del mismo tipo que el permiso actual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> no es <see cref="T:System.Web.AspNetHostingPermission" />.</exception>
      <returns>
        <see cref="T:System.Security.IPermission" /> que representa la unión del permiso actual y el permiso especificado.</returns>
    </member>
    <member name="P:System.Web.AspNetHostingPermission.Level">
      <summary>Obtiene o establece el nivel de permiso de host para una aplicación ASP.NET.</summary>
      <returns>Uno de los valores de enumeración de <see cref="T:System.Web.AspNetHostingPermissionLevel" />.</returns>
    </member>
    <member name="T:System.Web.AspNetHostingPermissionAttribute">
      <summary>Permite acciones de seguridad de <see cref="T:System.Web.AspNetHostingPermission" /> para que se apliquen al código mediante seguridad declarativa. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Web.AspNetHostingPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.AspNetHostingPermissionAttribute" />.</summary>
      <param name="action">Uno de los valores de enumeración de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Web.AspNetHostingPermissionAttribute.CreatePermission">
      <summary>Crea un nuevo <see cref="T:System.Web.AspNetHostingPermission" /> con el nivel de permisos establecido previamente por la propiedad <see cref="P:System.Web.AspNetHostingPermissionAttribute.Level" />.</summary>
      <returns>
        <see cref="T:System.Security.IPermission" /> que es el nuevo <see cref="T:System.Web.AspNetHostingPermission" />.</returns>
    </member>
    <member name="P:System.Web.AspNetHostingPermissionAttribute.Level">
      <summary>Obtiene o establece el nivel de permiso de hospedaje actual.</summary>
      <returns>Uno de los valores de enumeración de <see cref="T:System.Web.AspNetHostingPermissionLevel" />.</returns>
    </member>
    <member name="T:System.Web.AspNetHostingPermissionLevel">
      <summary>Especifica el nivel de confianza que se concede a una aplicación web ASP.NET.</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.High">
      <summary>Indica que las características protegidas con una petición para cualquier nivel inferior o igual al nivel de confianza <see langword="High" /> se realizarán correctamente. Este nivel está pensado para aplicaciones de código administrado de plena confianza que necesitan utilizar la mayoría de los permisos administrados que admiten el acceso de confianza parcial. No concede algunos de los permisos más altos (por ejemplo, la capacidad de llamar a código nativo), pero proporciona una forma para ejecutar aplicaciones de confianza con privilegios mínimos o proporcionar algún nivel de restricciones para las aplicaciones de plena confianza. Este nivel se concede mediante la configuración de al menos el nivel de confianza <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /> en la sección trust en un archivo de configuración.</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.Low">
      <summary>Indica que las características protegidas con una petición para cualquier nivel inferior o igual al nivel <see cref="F:System.Web.AspNetHostingPermissionLevel.Low" /> se realizarán correctamente. Este nivel está diseñado para permitir el acceso de solo lectura a recursos limitados en un entorno restringido. Este nivel se concede especificando el nivel de confianza <see cref="F:System.Web.AspNetHostingPermissionLevel.Low" /> en la sección trust en un archivo de configuración.</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.Medium">
      <summary>Indica que las características protegidas con una petición para cualquier nivel inferior o igual al nivel <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> se realizarán correctamente. Este nivel se concede mediante la configuración de al menos el nivel de confianza <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> en la sección trust en un archivo de configuración.</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.Minimal">
      <summary>Indica que las características protegidas con una petición para el nivel <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" /> se realizarán correctamente. Este nivel permite que el código se ejecute, pero no para interactuar con los recursos presentes en el sistema. Este nivel se concede mediante la configuración de al menos el nivel de confianza <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" /> utilizando la sección trust en un archivo de configuración.</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.None">
      <summary>Indica que no se concede ningún permiso. Todas las peticiones de <see cref="T:System.Web.AspNetHostingPermission" /> producirán un error.</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.Unrestricted">
      <summary>Indica que se concederá todas las peticiones de permiso para usar todas las características de una aplicación. Esto es equivalente a conceder el nivel de confianza <see langword="Full" /> en la sección trust en un archivo de configuración.</summary>
    </member>
    <member name="T:System.Xaml.Permissions.XamlLoadPermission">
      <summary>Declara los permisos para cargar los tipos de los ensamblados que son utilizados por un lector o sistema de escritura XAML.</summary>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Collections.Generic.IEnumerable{System.Xaml.Permissions.XamlAccessLevel})">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, utilizando un conjunto enumerable de valores <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> concretos.</summary>
      <param name="allowedAccess">Conjunto enumerable de valores de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> concretos.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="allowedAccess" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="allowedAccess" /> contuvieron información no válida, como un elemento nulo.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, utilizando los permisos existentes.</summary>
      <param name="state">Valor de enumeración de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Xaml.Permissions.XamlAccessLevel)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> mediante un valor <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> único.</summary>
      <param name="allowedAccess">El valor <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> que define.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="allowedAccess" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Copy">
      <summary>Crea y devuelve una copia idéntica del objeto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actual.</summary>
      <returns>Copia del objeto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actual.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Equals(System.Object)">
      <param name="obj" />
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un objeto de seguridad con un estado especificado a partir de codificación XML.</summary>
      <param name="elem">Codificación XML que se usará para reconstruir el objeto de seguridad.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elem" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elem" /> no contiene la codificación de XML para <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.  
  
o bien 
El atributo de versión dentro de <paramref name="elem" /> no se admite.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.GetHashCode" />
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Includes(System.Xaml.Permissions.XamlAccessLevel)">
      <summary>Devuelve si <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> incluye un <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> especificado en su lista <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" />.</summary>
      <param name="requestedAccess">El <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> específico que se comprueba.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestedAccess" /> es null.</exception>
      <returns>
        <see langword="true" /> si <paramref name="requestedAccess" /> existe como un elemento en la lista <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /> del <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />actual. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Intersect(System.Security.IPermission)">
      <summary>Crea y devuelve un <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> que es la intersección del permiso <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actual y el permiso especificado.</summary>
      <param name="target">
        <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> que forma una intersección con el <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actual. Puede ser <see langword="null" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> no es <see langword="null" /> o no es <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
      <returns>Nuevo permiso que representa la intersección entre el objeto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actual y el <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> especificado. Este nuevo permiso es <see langword="null" /> si la intersección está vacía.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina si el objeto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actual es un subconjunto del permiso especificado.</summary>
      <param name="target">Permiso que se va a probar para la relación de subconjunto. Puede ser <see langword="null" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> no es <see langword="null" /> o no es <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actual es un subconjunto del permiso especificado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted">
      <summary>Devuelve si <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> denota permisos no restringidos.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> denota permisos no restringidos. Es <see langword="false" /> si <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> tiene restricciones de nivel de acceso específicas en la propiedad <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /> o no tiene permisos.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.ToXml">
      <summary>Crea una codificación XML de <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> y de su estado actual.</summary>
      <returns>Codificación XML del <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, incluida la información de estado.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Union(System.Security.IPermission)">
      <summary>Crea un permiso que consiste en la unión del objeto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actual y del permiso especificado.</summary>
      <param name="other">
        <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> que se va a combinar con el <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actual. Puede ser <see langword="null" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> no es <see langword="null" /> o no es <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
      <returns>Nuevo <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> que representa la unión entre el <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actual y el <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> especificado.</returns>
    </member>
    <member name="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess">
      <summary>Obtiene la lista de todos los valores <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> que este <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> representa.</summary>
      <returns>Lista de solo lectura de valores <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> o <see langword="null" />.</returns>
    </member>
  </members>
</doc>