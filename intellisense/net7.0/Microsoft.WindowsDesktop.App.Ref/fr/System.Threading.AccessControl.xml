<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Threading.AccessControl</name>
  </assembly>
  <members>
    <member name="T:System.Security.AccessControl.EventWaitHandleAccessRule">
      <summary>Représente un jeu de droits d'accès accordés ou refusés à un utilisateur ou à un groupe. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" />, en spécifiant l'utilisateur ou le groupe auquel la règle s'applique, les droits d'accès, et si les droits d'accès spécifiés sont accordés ou refusés.</summary>
      <param name="identity">Utilisateur ou groupe auquel s'applique la règle. Doit être de type <see cref="T:System.Security.Principal.SecurityIdentifier" /> ou d'un type, tel que <see cref="T:System.Security.Principal.NTAccount" /> qui peut être converti en type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
      <param name="eventRights">Combinaison d'opérations de bits de valeurs <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> spécifiant les droits accordés ou refusés.</param>
      <param name="type">Une des valeurs <see cref="T:System.Security.AccessControl.AccessControlType" /> spécifiant si les droits sont accordés ou refusés.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> spécifie une valeur non valide.  
  
- ou - 
 <paramref name="type" /> spécifie une valeur non valide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="eventRights" /> est égal à zéro.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> n'est pas du type <see cref="T:System.Security.Principal.SecurityIdentifier" />, ni <see cref="T:System.Security.Principal.NTAccount" /> qui peut être converti en type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleAccessRule.#ctor(System.String,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" />, en spécifiant le nom de l'utilisateur ou du groupe auquel la règle s'applique, les droits d'accès, et si les droits d'accès spécifiés sont accordés ou refusés.</summary>
      <param name="identity">Nom de l'utilisateur ou du groupe auquel s'applique la règle.</param>
      <param name="eventRights">Combinaison d'opérations de bits de valeurs <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> spécifiant les droits accordés ou refusés.</param>
      <param name="type">Une des valeurs <see cref="T:System.Security.AccessControl.AccessControlType" /> spécifiant si les droits sont accordés ou refusés.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> spécifie une valeur non valide.  
  
- ou - 
 <paramref name="type" /> spécifie une valeur non valide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventRights" /> est égal à zéro.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="identity" /> est une chaîne de longueur nulle.  
  
- ou - 
 <paramref name="identity" /> fait plus de 512 caractères.</exception>
    </member>
    <member name="P:System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleRights">
      <summary>Obtient les droits accordés ou refusés par la règle d'accès.</summary>
      <returns>Combinaison d'opérations de bits de valeurs <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> spécifiant les droits accordés ou refusés par la règle d'accès.</returns>
    </member>
    <member name="T:System.Security.AccessControl.EventWaitHandleAuditRule">
      <summary>Représente un jeu de droits d'accès à auditer pour un utilisateur ou groupe. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AuditFlags)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" />, en spécifiant l'utilisateur ou groupe à auditer, les droits à auditer, et s'il faut auditer les succès, les échecs ou les deux.</summary>
      <param name="identity">Utilisateur ou groupe auquel s'applique la règle. Doit être de type <see cref="T:System.Security.Principal.SecurityIdentifier" /> ou d'un type, tel que <see cref="T:System.Security.Principal.NTAccount" /> qui peut être converti en type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
      <param name="eventRights">Combinaison d'opérations de bits des valeurs <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> spécifiant les types d'accès à auditer.</param>
      <param name="flags">Combinaison d'opérations de bits des valeurs <see cref="T:System.Security.AccessControl.AuditFlags" /> spécifiant s'il faut auditer les succès, les échecs ou les deux.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> spécifie une valeur non valide.  
  
- ou - 
 <paramref name="flags" /> spécifie une valeur non valide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="eventRights" /> est égal à zéro.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> n'est pas du type <see cref="T:System.Security.Principal.SecurityIdentifier" />, ni <see cref="T:System.Security.Principal.NTAccount" /> qui peut être converti en type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="P:System.Security.AccessControl.EventWaitHandleAuditRule.EventWaitHandleRights">
      <summary>Obtient les droits d'accès affectés par la règle d'audit.</summary>
      <returns>Combinaison de bits de valeurs <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> qui indique les droits affectés par la règle d'audit.</returns>
    </member>
    <member name="T:System.Security.AccessControl.EventWaitHandleRights">
      <summary>Spécifie les droits de contrôle d'accès qui peuvent s'appliquer aux objets événement système nommé.</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.ChangePermissions">
      <summary>Droit de modifier les règles de sécurité et d'audit associées à un événement nommé.</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.Delete">
      <summary>Droit de supprimer un événement nommé.</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.FullControl">
      <summary>Droit d'exercer un contrôle total sur un événement nommé et de modifier ses règles d'accès et d'audit.</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.Modify">
      <summary>Droit de définir ou de réinitialiser l'état signalé d'un événement nommé.</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.ReadPermissions">
      <summary>Droit d'ouvrir et de copier les règles d'accès et d'audit d'un événement nommé.</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.Synchronize">
      <summary>Droit d'attendre sur un événement nommé.</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.TakeOwnership">
      <summary>Droit de modifier le propriétaire d'un événement nommé.</summary>
    </member>
    <member name="T:System.Security.AccessControl.EventWaitHandleSecurity">
      <summary>Représente la sécurité de contrôle d'accès Windows appliquée à un handle d'attente système nommé. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> avec des valeurs par défaut.</summary>
      <exception cref="T:System.NotSupportedException">Cette classe n'est pas prise en charge dans Windows 98 ou Windows Millennium Edition.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
      <summary>Crée une règle de contrôle d'accès pour l'utilisateur spécifié, avec les droits d'accès, le contrôle d'accès et les indicateurs spécifiés.</summary>
      <param name="identityReference">
        <see cref="T:System.Security.Principal.IdentityReference" /> qui identifie l'utilisateur ou le groupe auquel s'applique la règle.</param>
      <param name="accessMask">Combinaison d'opérations de bits de valeurs <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> qui spécifient les droits d'accès à accorder ou refuser, castés en entier.</param>
      <param name="isInherited">Sans utilité pour les handles d'attente nommés, car ils n'ont pas de hiérarchie.</param>
      <param name="inheritanceFlags">Sans utilité pour les handles d'attente nommés, car ils n'ont pas de hiérarchie.</param>
      <param name="propagationFlags">Sans utilité pour les handles d'attente nommés, car ils n'ont pas de hiérarchie.</param>
      <param name="type">Une des valeurs <see cref="T:System.Security.AccessControl.AccessControlType" /> spécifiant si les droits sont accordés ou refusés.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> ou <paramref name="type" /> spécifie une valeur non valide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="accessMask" /> est égal à zéro.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> n'est ni du type <see cref="T:System.Security.Principal.SecurityIdentifier" />, ni d'un type tel que <see cref="T:System.Security.Principal.NTAccount" /> qui peut être converti en type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
      <returns>Objet <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> représentant les droits spécifiés pour l'utilisateur spécifié.</returns>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary>Recherche une règle de contrôle d'accès correspondante avec laquelle la nouvelle règle peut être fusionnée. Ajoute la nouvelle règle en cas de recherche infructueuse.</summary>
      <param name="rule">Règle de contrôle d'accès à ajouter.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.AddAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)">
      <summary>Recherche une règle d'audit avec laquelle la nouvelle règle peut être fusionnée. Ajoute la nouvelle règle en cas de recherche infructueuse.</summary>
      <param name="rule">Règle d’audit à ajouter. L'utilisateur spécifié par cette règle détermine la recherche.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
      <summary>Crée une règle d'audit, en spécifiant l'utilisateur auquel elle s'applique, les droits d'accès à auditer et le résultat qui déclenche la règle d'audit.</summary>
      <param name="identityReference">
        <see cref="T:System.Security.Principal.IdentityReference" /> qui identifie l'utilisateur ou le groupe auquel s'applique la règle.</param>
      <param name="accessMask">Combinaison d'opérations de bits de valeurs <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> spécifiant les droits d'accès à auditer, castés en entier.</param>
      <param name="isInherited">Sans utilité pour les handles d'attente nommés, car ils n'ont pas de hiérarchie.</param>
      <param name="inheritanceFlags">Sans utilité pour les handles d'attente nommés, car ils n'ont pas de hiérarchie.</param>
      <param name="propagationFlags">Sans utilité pour les handles d'attente nommés, car ils n'ont pas de hiérarchie.</param>
      <param name="flags">Combinaison d'opérations de bits de valeurs <see cref="T:System.Security.AccessControl.AuditFlags" /> spécifiant s'il faut auditer les accès réussis, les échecs d'accès ou les deux.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> ou <paramref name="flags" /> spécifie une valeur non valide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="accessMask" /> est égal à zéro.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> n'est ni du type <see cref="T:System.Security.Principal.SecurityIdentifier" />, ni d'un type tel que <see cref="T:System.Security.Principal.NTAccount" /> qui peut être converti en type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
      <returns>Objet <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" /> représentant la règle d'audit spécifiée pour l'utilisateur spécifié. Le type de retour de la méthode est la classe de base, <see cref="T:System.Security.AccessControl.AuditRule" />, mais la valeur de retour peut être castée sans risque en classe dérivée.</returns>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary>Recherche une règle de contrôle d'accès ayant les mêmes utilisateur et <see cref="T:System.Security.AccessControl.AccessControlType" /> (autorisation ou refus) que la règle d'accès spécifiée et ayant des indicateurs d'héritage et de propagation compatibles ; si une telle règle est trouvée, les droits contenus dans la règle d'accès spécifiée en sont supprimés.</summary>
      <param name="rule">
        <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> qui spécifie l'utilisateur et <see cref="T:System.Security.AccessControl.AccessControlType" /> à rechercher, ainsi qu'un jeu d'indicateurs d'héritage et de propagation avec lesquels une règle correspondante, si elle est trouvée, doit être compatible. Spécifie les droits à supprimer de la règle compatible, le cas échéant.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> si une règle compatible est trouvée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleAll(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary>Recherche toutes les règles de contrôle d'accès ayant les mêmes utilisateur et <see cref="T:System.Security.AccessControl.AccessControlType" /> (autorisation ou refus) que la règle spécifiée et, s'il en existe, les supprime.</summary>
      <param name="rule">
        <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> qui spécifie l'utilisateur et <see cref="T:System.Security.AccessControl.AccessControlType" /> à rechercher. Tous les droits spécifiés par cette règle sont ignorés.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary>Recherche une règle de contrôle d'accès qui correspond exactement à la règle spécifiée et, si une telle règle est trouvée, la supprime.</summary>
      <param name="rule">
        <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> à supprimer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)">
      <summary>Recherche une règle d'audit ayant le même utilisateur que la règle spécifiée et ayant des indicateurs d'héritage et de propagation compatibles ; si une règle compatible est trouvée, les droits contenus dans la règle spécifiée en sont supprimés.</summary>
      <param name="rule">
        <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" /> qui spécifie l'utilisateur à rechercher, ainsi qu'un jeu d'indicateurs d'héritage et de propagation avec lesquels une règle correspondante, si elle est trouvée, doit être compatible. Spécifie les droits à supprimer de la règle compatible, le cas échéant.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> si une règle compatible est trouvée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleAll(System.Security.AccessControl.EventWaitHandleAuditRule)">
      <summary>Recherche toutes les règles d'audit ayant le même utilisateur que la règle spécifiée et, s'il en existe, les supprime.</summary>
      <param name="rule">
        <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" /> qui spécifie l'utilisateur à rechercher. Tous les droits spécifiés par cette règle sont ignorés.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.EventWaitHandleAuditRule)">
      <summary>Recherche une règle d'audit qui correspond exactement à la règle spécifiée et, si une telle règle est trouvée, la supprime.</summary>
      <param name="rule">
        <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" /> à supprimer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.ResetAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary>Supprime toutes les règles de contrôle d'accès ayant le même utilisateur que la règle spécifiée, indépendamment de <see cref="T:System.Security.AccessControl.AccessControlType" />, puis ajoute la règle spécifiée.</summary>
      <param name="rule">
        <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> à ajouter. L'utilisateur spécifié par cette règle détermine les règles à supprimer avant l'ajout de celle-ci.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.SetAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary>Supprime toutes les règles de contrôle d'accès ayant les mêmes utilisateur et <see cref="T:System.Security.AccessControl.AccessControlType" /> (autorisation ou refus) que la règle spécifiée, puis ajoute la règle spécifiée.</summary>
      <param name="rule">
        <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> à ajouter. L'utilisateur et le <see cref="T:System.Security.AccessControl.AccessControlType" /> de cette règle déterminent les règles à supprimer avant l'ajout de celle-ci.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.SetAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)">
      <summary>Supprime toutes les règles d'audit ayant le même utilisateur que la règle spécifiée, quelle que soit la valeur de <see cref="T:System.Security.AccessControl.AuditFlags" />, puis ajoute la règle spécifiée.</summary>
      <param name="rule">
        <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" /> à ajouter. L'utilisateur spécifié par cette règle détermine les règles à supprimer avant l'ajout de celle-ci.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.AccessControl.EventWaitHandleSecurity.AccessRightType">
      <summary>Obtient le type d'énumération utilisé par la classe <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> pour représenter des droits d'accès.</summary>
      <returns>Objet <see cref="T:System.Type" /> représentant l'énumération <see cref="T:System.Security.AccessControl.EventWaitHandleRights" />.</returns>
    </member>
    <member name="P:System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleType">
      <summary>Obtient le type utilisé par la classe <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> pour représenter des règles d'accès.</summary>
      <returns>Objet <see cref="T:System.Type" /> représentant la classe <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" />.</returns>
    </member>
    <member name="P:System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleType">
      <summary>Obtient le type utilisé par la classe <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> pour représenter des règles d'audit.</summary>
      <returns>Objet <see cref="T:System.Type" /> représentant la classe <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" />.</returns>
    </member>
    <member name="T:System.Security.AccessControl.MutexAccessRule">
      <summary>Représente un jeu de droits d'accès accordés ou refusés à un utilisateur ou à un groupe. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.AccessControl.MutexAccessRule" />, en spécifiant l'utilisateur ou le groupe auquel la règle s'applique, les droits d'accès, et si les droits d'accès spécifiés sont accordés ou refusés.</summary>
      <param name="identity">Utilisateur ou groupe auquel s'applique la règle. Doit être de type <see cref="T:System.Security.Principal.SecurityIdentifier" /> ou d'un type, tel que <see cref="T:System.Security.Principal.NTAccount" /> qui peut être converti en type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
      <param name="eventRights">Combinaison d'opérations de bits de valeurs <see cref="T:System.Security.AccessControl.MutexRights" /> spécifiant les droits accordés ou refusés.</param>
      <param name="type">Une des valeurs <see cref="T:System.Security.AccessControl.AccessControlType" /> spécifiant si les droits sont accordés ou refusés.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> spécifie une valeur non valide.  
  
- ou - 
 <paramref name="type" /> spécifie une valeur non valide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="eventRights" /> est égal à zéro.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> n'est pas du type <see cref="T:System.Security.Principal.SecurityIdentifier" />, ni <see cref="T:System.Security.Principal.NTAccount" /> qui peut être converti en type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.AccessControl.MutexAccessRule" />, en spécifiant le nom de l'utilisateur ou du groupe auquel la règle s'applique, les droits d'accès, et si les droits d'accès spécifiés sont accordés ou refusés.</summary>
      <param name="identity">Nom de l'utilisateur ou du groupe auquel s'applique la règle.</param>
      <param name="eventRights">Combinaison d'opérations de bits de valeurs <see cref="T:System.Security.AccessControl.MutexRights" /> spécifiant les droits accordés ou refusés.</param>
      <param name="type">Une des valeurs <see cref="T:System.Security.AccessControl.AccessControlType" /> spécifiant si les droits sont accordés ou refusés.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> spécifie une valeur non valide.  
  
- ou - 
 <paramref name="type" /> spécifie une valeur non valide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventRights" /> est égal à zéro.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="identity" /> est une chaîne de longueur nulle.  
  
- ou - 
 <paramref name="identity" /> fait plus de 512 caractères.</exception>
    </member>
    <member name="P:System.Security.AccessControl.MutexAccessRule.MutexRights">
      <summary>Obtient les droits accordés ou refusés par la règle d'accès.</summary>
      <returns>Combinaison d'opérations de bits de valeurs <see cref="T:System.Security.AccessControl.MutexRights" /> spécifiant les droits accordés ou refusés par la règle d'accès.</returns>
    </member>
    <member name="T:System.Security.AccessControl.MutexAuditRule">
      <summary>Représente un jeu de droits d'accès à auditer pour un utilisateur ou groupe. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.AccessControl.MutexAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AuditFlags)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.AccessControl.MutexAuditRule" />, en spécifiant l'utilisateur ou groupe à auditer, les droits à auditer, et s'il faut auditer les succès, les échecs ou les deux.</summary>
      <param name="identity">Utilisateur ou groupe auquel s'applique la règle. Doit être de type <see cref="T:System.Security.Principal.SecurityIdentifier" /> ou d'un type, tel que <see cref="T:System.Security.Principal.NTAccount" /> qui peut être converti en type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
      <param name="eventRights">Combinaison d'opérations de bits des valeurs <see cref="T:System.Security.AccessControl.MutexRights" /> spécifiant les types d'accès à auditer.</param>
      <param name="flags">Combinaison d'opérations de bits des valeurs <see cref="T:System.Security.AccessControl.AuditFlags" /> spécifiant s'il faut auditer les succès, les échecs ou les deux.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> spécifie une valeur non valide.  
  
- ou - 
 <paramref name="flags" /> spécifie une valeur non valide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="eventRights" /> est égal à zéro.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> n'est pas du type <see cref="T:System.Security.Principal.SecurityIdentifier" />, ni d'un type, tel que <see cref="T:System.Security.Principal.NTAccount" /> pouvant être traduit en type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="P:System.Security.AccessControl.MutexAuditRule.MutexRights">
      <summary>Obtient les droits d'accès affectés par la règle d'audit.</summary>
      <returns>Combinaison de bits de valeurs <see cref="T:System.Security.AccessControl.MutexRights" /> qui indique les droits affectés par la règle d'audit.</returns>
    </member>
    <member name="T:System.Security.AccessControl.MutexRights">
      <summary>Spécifie les droits de contrôle d'accès qui peuvent s'appliquer aux objets d'un mutex système nommé.</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.ChangePermissions">
      <summary>Droit de modifier les règles de sécurité et d'audit associées à un mutex nommé.</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.Delete">
      <summary>Droit de supprimer un mutex nommé.</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.FullControl">
      <summary>Droit d'exercer un contrôle total sur un mutex nommé et d'en modifier les règles d'accès et d'audit.</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.Modify">
      <summary>Droit de libérer un mutex nommé.</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.ReadPermissions">
      <summary>Droit d'ouvrir et de copier les règles d'accès et d'audit d'un mutex nommé.</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.Synchronize">
      <summary>Droit de servir un mutex nommé.</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.TakeOwnership">
      <summary>Droit de modifier le propriétaire d'un mutex nommé.</summary>
    </member>
    <member name="T:System.Security.AccessControl.MutexSecurity">
      <summary>Représente la sécurité de contrôle d'accès Windows d'un mutex nommé. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.AccessControl.MutexSecurity" /> avec des valeurs par défaut.</summary>
      <exception cref="T:System.NotSupportedException">Cette classe n'est pas prise en charge dans Windows 98 ou Windows Millennium Edition.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.AccessControl.MutexSecurity" /> avec les sections spécifiées des règles de sécurité du contrôle d'accès du mutex système portant le nom spécifié.</summary>
      <param name="name">Nom du mutex système dont les règles de sécurité du contrôle d'accès doivent être récupérées.</param>
      <param name="includeSections">Combinaison d'indicateurs <see cref="T:System.Security.AccessControl.AccessControlSections" /> spécifiant les sections à récupérer.</param>
      <exception cref="T:System.IO.FileNotFoundException">Il n'existe aucun objet système portant le nom spécifié.</exception>
      <exception cref="T:System.NotSupportedException">Cette classe n'est pas prise en charge dans Windows 98 ou Windows Millennium Edition.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
      <summary>Crée une règle de contrôle d'accès pour l'utilisateur spécifié, avec les droits d'accès, le contrôle d'accès et les indicateurs spécifiés.</summary>
      <param name="identityReference">
        <see cref="T:System.Security.Principal.IdentityReference" /> qui identifie l'utilisateur ou le groupe auquel s'applique la règle.</param>
      <param name="accessMask">Combinaison d'opérations de bits de valeurs <see cref="T:System.Security.AccessControl.MutexRights" /> qui spécifient les droits d'accès à accorder ou refuser, castés en entier.</param>
      <param name="isInherited">Sans utilité pour les mutex nommés, car ils n'ont pas de hiérarchie.</param>
      <param name="inheritanceFlags">Sans utilité pour les mutex nommés, car ils n'ont pas de hiérarchie.</param>
      <param name="propagationFlags">Sans utilité pour les mutex nommés, car ils n'ont pas de hiérarchie.</param>
      <param name="type">Une des valeurs <see cref="T:System.Security.AccessControl.AccessControlType" /> spécifiant si les droits sont accordés ou refusés.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> ou <paramref name="type" /> spécifie une valeur non valide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="accessMask" /> est égal à zéro.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> n'est ni du type <see cref="T:System.Security.Principal.SecurityIdentifier" />, ni d'un type tel que <see cref="T:System.Security.Principal.NTAccount" /> qui peut être converti en type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
      <returns>Objet <see cref="T:System.Security.AccessControl.MutexAccessRule" /> représentant les droits spécifiés pour l'utilisateur spécifié.</returns>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
      <summary>Recherche une règle de contrôle d'accès correspondante avec laquelle la nouvelle règle peut être fusionnée. Ajoute la nouvelle règle en cas de recherche infructueuse.</summary>
      <param name="rule">Règle de contrôle d'accès à ajouter.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Security.Principal.IdentityNotMappedException">
        <paramref name="rule" /> ne peut pas être mappé à une identité connue.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.AddAuditRule(System.Security.AccessControl.MutexAuditRule)">
      <summary>Recherche une règle d'audit avec laquelle la nouvelle règle peut être fusionnée. Ajoute la nouvelle règle en cas de recherche infructueuse.</summary>
      <param name="rule">Règle d’audit à ajouter. L'utilisateur spécifié par cette règle détermine la recherche.</param>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
      <summary>Crée une règle d'audit, en spécifiant l'utilisateur auquel elle s'applique, les droits d'accès à auditer et le résultat qui déclenche la règle d'audit.</summary>
      <param name="identityReference">
        <see cref="T:System.Security.Principal.IdentityReference" /> qui identifie l'utilisateur ou le groupe auquel s'applique la règle.</param>
      <param name="accessMask">Combinaison d'opérations de bits de valeurs <see cref="T:System.Security.AccessControl.MutexRights" /> spécifiant les droits d'accès à auditer, castés en entier.</param>
      <param name="isInherited">Sans utilité pour les handles d'attente nommés, car ils n'ont pas de hiérarchie.</param>
      <param name="inheritanceFlags">Sans utilité pour les handles d'attente nommés, car ils n'ont pas de hiérarchie.</param>
      <param name="propagationFlags">Sans utilité pour les handles d'attente nommés, car ils n'ont pas de hiérarchie.</param>
      <param name="flags">Combinaison d'opérations de bits de valeurs <see cref="T:System.Security.AccessControl.AuditFlags" /> qui spécifient s'il faut auditer les accès réussis, les échecs d'accès ou les deux.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> ou <paramref name="flags" /> spécifie une valeur non valide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="accessMask" /> est égal à zéro.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> n'est ni du type <see cref="T:System.Security.Principal.SecurityIdentifier" />, ni d'un type tel que <see cref="T:System.Security.Principal.NTAccount" /> qui peut être converti en type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
      <returns>Objet <see cref="T:System.Security.AccessControl.MutexAuditRule" /> représentant la règle d'audit spécifiée pour l'utilisateur spécifié. Le type de retour de la méthode est la classe de base, <see cref="T:System.Security.AccessControl.AuditRule" />, mais la valeur de retour peut être castée sans risque en classe dérivée.</returns>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
      <summary>Recherche une règle de contrôle d'accès ayant les mêmes utilisateur et <see cref="T:System.Security.AccessControl.AccessControlType" /> (autorisation ou refus) que la règle spécifiée et ayant des indicateurs d'héritage et de propagation compatibles ; si une telle règle est trouvée, les droits contenus dans la règle d'accès spécifiée en sont supprimés.</summary>
      <param name="rule">
        <see cref="T:System.Security.AccessControl.MutexAccessRule" /> qui spécifie l'utilisateur et <see cref="T:System.Security.AccessControl.AccessControlType" /> à rechercher, ainsi qu'un jeu d'indicateurs d'héritage et de propagation avec lesquels une règle correspondante, si elle est trouvée, doit être compatible. Spécifie les droits à supprimer de la règle compatible, le cas échéant.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> si une règle compatible est trouvée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
      <summary>Recherche toutes les règles de contrôle d'accès ayant les mêmes utilisateur et <see cref="T:System.Security.AccessControl.AccessControlType" /> (autorisation ou refus) que la règle spécifiée et, s'il en existe, les supprime.</summary>
      <param name="rule">
        <see cref="T:System.Security.AccessControl.MutexAccessRule" /> qui spécifie l'utilisateur et <see cref="T:System.Security.AccessControl.AccessControlType" /> à rechercher. Tous les droits spécifiés par cette règle sont ignorés.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
      <summary>Recherche une règle de contrôle d'accès qui correspond exactement à la règle spécifiée et, si une telle règle est trouvée, la supprime.</summary>
      <param name="rule">
        <see cref="T:System.Security.AccessControl.MutexAccessRule" /> à supprimer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
      <summary>Recherche une règle de contrôle d'audit ayant le même utilisateur que la règle spécifiée et ayant des indicateurs d'héritage et de propagation compatibles ; si une règle compatible est trouvée, les droits contenus dans la règle spécifiée en sont supprimés.</summary>
      <param name="rule">
        <see cref="T:System.Security.AccessControl.MutexAuditRule" /> qui spécifie l'utilisateur à rechercher, ainsi qu'un jeu d'indicateurs d'héritage et de propagation avec lesquels une règle correspondante, si elle est trouvée, doit être compatible. Spécifie les droits à supprimer de la règle compatible, le cas échéant.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> si une règle compatible est trouvée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleAll(System.Security.AccessControl.MutexAuditRule)">
      <summary>Recherche toutes les règles d'audit ayant le même utilisateur que la règle spécifiée et, s'il en existe, les supprime.</summary>
      <param name="rule">
        <see cref="T:System.Security.AccessControl.MutexAuditRule" /> qui spécifie l'utilisateur à rechercher. Tous les droits spécifiés par cette règle sont ignorés.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.MutexAuditRule)">
      <summary>Recherche une règle d'audit qui correspond exactement à la règle spécifiée et, si une telle règle est trouvée, la supprime.</summary>
      <param name="rule">Objet <see cref="T:System.Security.AccessControl.MutexAuditRule" /> à supprimer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)">
      <summary>Supprime toutes les règles de contrôle d'accès ayant le même utilisateur que la règle spécifiée, indépendamment de <see cref="T:System.Security.AccessControl.AccessControlType" />, puis ajoute la règle spécifiée.</summary>
      <param name="rule">
        <see cref="T:System.Security.AccessControl.MutexAccessRule" /> à ajouter. L'utilisateur spécifié par cette règle détermine les règles à supprimer avant l'ajout de celle-ci.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
      <summary>Supprime toutes les règles de contrôle d'accès ayant les mêmes utilisateur et <see cref="T:System.Security.AccessControl.AccessControlType" /> (autorisation ou refus) que la règle spécifiée, puis ajoute la règle spécifiée.</summary>
      <param name="rule">
        <see cref="T:System.Security.AccessControl.MutexAccessRule" /> à ajouter. L'utilisateur et le <see cref="T:System.Security.AccessControl.AccessControlType" /> de cette règle déterminent les règles à supprimer avant l'ajout de celle-ci.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.SetAuditRule(System.Security.AccessControl.MutexAuditRule)">
      <summary>Supprime toutes les règles d'audit ayant le même utilisateur que la règle spécifiée, quelle que soit la valeur de <see cref="T:System.Security.AccessControl.AuditFlags" />, puis ajoute la règle spécifiée.</summary>
      <param name="rule">
        <see cref="T:System.Security.AccessControl.MutexAuditRule" /> à ajouter. L'utilisateur spécifié par cette règle détermine les règles à supprimer avant l'ajout de celle-ci.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.AccessControl.MutexSecurity.AccessRightType">
      <summary>Obtient l'énumération utilisée par la classe <see cref="T:System.Security.AccessControl.MutexSecurity" /> pour représenter des droits d'accès.</summary>
      <returns>Objet <see cref="T:System.Type" /> représentant l'énumération <see cref="T:System.Security.AccessControl.MutexRights" />.</returns>
    </member>
    <member name="P:System.Security.AccessControl.MutexSecurity.AccessRuleType">
      <summary>Obtient le type utilisé par la classe <see cref="T:System.Security.AccessControl.MutexSecurity" /> pour représenter des règles d'accès.</summary>
      <returns>Objet <see cref="T:System.Type" /> représentant la classe <see cref="T:System.Security.AccessControl.MutexAccessRule" />.</returns>
    </member>
    <member name="P:System.Security.AccessControl.MutexSecurity.AuditRuleType">
      <summary>Obtient le type utilisé par la classe <see cref="T:System.Security.AccessControl.MutexSecurity" /> pour représenter des règles d'audit.</summary>
      <returns>Objet <see cref="T:System.Type" /> représentant la classe <see cref="T:System.Security.AccessControl.MutexAuditRule" />.</returns>
    </member>
    <member name="T:System.Security.AccessControl.SemaphoreAccessRule">
      <summary>Représente un jeu de droits d'accès accordés ou refusés à un utilisateur ou à un groupe. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" />, en spécifiant l'utilisateur ou le groupe auquel la règle s'applique, les droits d'accès, et si les droits d'accès spécifiés sont accordés ou refusés.</summary>
      <param name="identity">Utilisateur ou groupe auquel s'applique la règle. Doit être de type <see cref="T:System.Security.Principal.SecurityIdentifier" /> ou d'un type, tel que <see cref="T:System.Security.Principal.NTAccount" /> qui peut être converti en type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
      <param name="eventRights">Combinaison d'opérations de bits de valeurs <see cref="T:System.Security.AccessControl.SemaphoreRights" /> spécifiant les droits accordés ou refusés.</param>
      <param name="type">Une des valeurs <see cref="T:System.Security.AccessControl.AccessControlType" /> spécifiant si les droits sont accordés ou refusés.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> spécifie une valeur non valide.  
  
- ou - 
 <paramref name="type" /> spécifie une valeur non valide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="eventRights" /> est égal à zéro.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> n'est pas du type <see cref="T:System.Security.Principal.SecurityIdentifier" />, ni <see cref="T:System.Security.Principal.NTAccount" /> qui peut être converti en type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" />, en spécifiant le nom de l'utilisateur ou du groupe auquel la règle s'applique, les droits d'accès, et si les droits d'accès spécifiés sont accordés ou refusés.</summary>
      <param name="identity">Nom de l'utilisateur ou du groupe auquel s'applique la règle.</param>
      <param name="eventRights">Combinaison d'opérations de bits de valeurs <see cref="T:System.Security.AccessControl.SemaphoreRights" /> spécifiant les droits accordés ou refusés.</param>
      <param name="type">Une des valeurs <see cref="T:System.Security.AccessControl.AccessControlType" /> spécifiant si les droits sont accordés ou refusés.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> spécifie une valeur non valide.  
  
- ou - 
 <paramref name="type" /> spécifie une valeur non valide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventRights" /> est égal à zéro.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="identity" /> est une chaîne de longueur nulle.  
  
- ou - 
 <paramref name="identity" /> fait plus de 512 caractères.</exception>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights">
      <summary>Obtient les droits accordés ou refusés par la règle d'accès.</summary>
      <returns>Combinaison d'opérations de bits de valeurs <see cref="T:System.Security.AccessControl.SemaphoreRights" /> spécifiant les droits accordés ou refusés par la règle d'accès.</returns>
    </member>
    <member name="T:System.Security.AccessControl.SemaphoreAuditRule">
      <summary>Représente un jeu de droits d'accès à auditer pour un utilisateur ou groupe. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AuditFlags)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" />, en spécifiant l'utilisateur ou groupe à auditer, les droits à auditer, et s'il faut auditer les succès, les échecs ou les deux.</summary>
      <param name="identity">Utilisateur ou groupe auquel s'applique la règle. Doit être de type <see cref="T:System.Security.Principal.SecurityIdentifier" /> ou d'un type, tel que <see cref="T:System.Security.Principal.NTAccount" /> qui peut être converti en type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
      <param name="eventRights">Combinaison d'opérations de bits des valeurs <see cref="T:System.Security.AccessControl.SemaphoreRights" /> spécifiant les types d'accès à auditer.</param>
      <param name="flags">Combinaison d'opérations de bits des valeurs <see cref="T:System.Security.AccessControl.AuditFlags" /> spécifiant s'il faut auditer les succès, les échecs ou les deux.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> spécifie une valeur non valide.  
  
- ou - 
 <paramref name="flags" /> spécifie une valeur non valide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="eventRights" /> est égal à zéro.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> n'est pas du type <see cref="T:System.Security.Principal.SecurityIdentifier" />, ni <see cref="T:System.Security.Principal.NTAccount" /> qui peut être converti en type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreAuditRule.SemaphoreRights">
      <summary>Obtient les droits d'accès affectés par la règle d'audit.</summary>
      <returns>Combinaison de bits de valeurs <see cref="T:System.Security.AccessControl.SemaphoreRights" /> qui indique les droits affectés par la règle d'audit.</returns>
    </member>
    <member name="T:System.Security.AccessControl.SemaphoreRights">
      <summary>Spécifie les droits de contrôle d'accès qui peuvent s'appliquer aux objets d'un sémaphore système nommé.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.ChangePermissions">
      <summary>Droit de modifier les règles de sécurité et d'audit associées à un sémaphore nommé.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.Delete">
      <summary>Droit de supprimer un sémaphore nommé.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.FullControl">
      <summary>Droit d'exercer un contrôle total sur un sémaphore nommé et d'en modifier les règles d'accès et d'audit.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.Modify">
      <summary>Droit de libérer un sémaphore nommé.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.ReadPermissions">
      <summary>Droit d'ouvrir et de copier les règles d'accès et d'audit pour un sémaphore nommé.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.Synchronize">
      <summary>Droit de servir un sémaphore nommé.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.TakeOwnership">
      <summary>Droit de modifier le propriétaire d'un sémaphore nommé.</summary>
    </member>
    <member name="T:System.Security.AccessControl.SemaphoreSecurity">
      <summary>Représente la sécurité de contrôle d'accès Windows d'un sémaphore nommé. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> avec des valeurs par défaut.</summary>
      <exception cref="T:System.NotSupportedException">Cette classe n'est pas prise en charge dans Windows 98 ou Windows Millennium Edition.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> avec les sections spécifiées des règles de sécurité du contrôle d'accès du sémaphore système portant le nom spécifié.</summary>
      <param name="name">Nom du sémaphore système dont les règles de sécurité du contrôle d'accès doivent être récupérées.</param>
      <param name="includeSections">Combinaison d'indicateurs <see cref="T:System.Security.AccessControl.AccessControlSections" /> spécifiant les sections à récupérer.</param>
      <exception cref="T:System.NotSupportedException">Cette classe n'est pas prise en charge dans Windows 98 ou Windows Millennium Edition.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
      <summary>Crée une règle de contrôle d'accès pour l'utilisateur spécifié, avec les droits d'accès, le contrôle d'accès et les indicateurs spécifiés.</summary>
      <param name="identityReference">
        <see cref="T:System.Security.Principal.IdentityReference" /> qui identifie l'utilisateur ou le groupe auquel s'applique la règle.</param>
      <param name="accessMask">Combinaison d'opérations de bits de valeurs <see cref="T:System.Security.AccessControl.SemaphoreRights" /> qui spécifient les droits d'accès à accorder ou refuser, castés en entier.</param>
      <param name="isInherited">Sans utilité pour les sémaphores nommés, car ils n'ont pas de hiérarchie.</param>
      <param name="inheritanceFlags">Sans utilité pour les sémaphores nommés, car ils n'ont pas de hiérarchie.</param>
      <param name="propagationFlags">Sans utilité pour les sémaphores nommés, car ils n'ont pas de hiérarchie.</param>
      <param name="type">Une des valeurs <see cref="T:System.Security.AccessControl.AccessControlType" /> spécifiant si les droits sont accordés ou refusés.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> ou <paramref name="type" /> spécifie une valeur non valide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="accessMask" /> est égal à zéro.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> n'est ni du type <see cref="T:System.Security.Principal.SecurityIdentifier" />, ni d'un type tel que <see cref="T:System.Security.Principal.NTAccount" /> qui peut être converti en type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
      <returns>Objet <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> représentant les droits spécifiés pour l'utilisateur spécifié.</returns>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.AddAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>Recherche une règle correspondante avec laquelle la nouvelle règle peut être fusionnée. Ajoute la nouvelle règle en cas de recherche infructueuse.</summary>
      <param name="rule">Règle de contrôle d'accès à ajouter.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.AddAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>Recherche une règle d'audit avec laquelle la nouvelle règle peut être fusionnée. Ajoute la nouvelle règle en cas de recherche infructueuse.</summary>
      <param name="rule">Règle d’audit à ajouter. L'utilisateur spécifié par cette règle détermine la recherche.</param>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
      <summary>Crée une règle d'audit, en spécifiant l'utilisateur auquel elle s'applique, les droits d'accès à auditer et le résultat qui déclenche la règle d'audit.</summary>
      <param name="identityReference">
        <see cref="T:System.Security.Principal.IdentityReference" /> qui identifie l'utilisateur ou le groupe auquel s'applique la règle.</param>
      <param name="accessMask">Combinaison d'opérations de bits de valeurs <see cref="T:System.Security.AccessControl.SemaphoreRights" /> spécifiant les droits d'accès à auditer, castés en entier.</param>
      <param name="isInherited">Sans utilité pour les handles d'attente nommés, car ils n'ont pas de hiérarchie.</param>
      <param name="inheritanceFlags">Sans utilité pour les handles d'attente nommés, car ils n'ont pas de hiérarchie.</param>
      <param name="propagationFlags">Sans utilité pour les handles d'attente nommés, car ils n'ont pas de hiérarchie.</param>
      <param name="flags">Combinaison d'opérations de bits de valeurs <see cref="T:System.Security.AccessControl.AuditFlags" /> qui spécifient s'il faut auditer les accès réussis, les échecs d'accès ou les deux.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> ou <paramref name="flags" /> spécifie une valeur non valide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="accessMask" /> est égal à zéro.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> n'est ni du type <see cref="T:System.Security.Principal.SecurityIdentifier" />, ni d'un type tel que <see cref="T:System.Security.Principal.NTAccount" /> qui peut être converti en type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
      <returns>Objet <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> représentant la règle d'audit spécifiée pour l'utilisateur spécifié. Le type de retour de la méthode est la classe de base, <see cref="T:System.Security.AccessControl.AuditRule" />, mais la valeur de retour peut être castée sans risque en classe dérivée.</returns>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>Recherche une règle de contrôle d'accès ayant les mêmes utilisateur et <see cref="T:System.Security.AccessControl.AccessControlType" /> (autorisation ou refus) que la règle spécifiée et ayant des indicateurs d'héritage et de propagation compatibles ; si une telle règle est trouvée, les droits contenus dans la règle d'accès spécifiée en sont supprimés.</summary>
      <param name="rule">
        <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> qui spécifie l'utilisateur et <see cref="T:System.Security.AccessControl.AccessControlType" /> à rechercher, ainsi qu'un jeu d'indicateurs d'héritage et de propagation avec lesquels une règle correspondante, si elle est trouvée, doit être compatible. Spécifie les droits à supprimer de la règle compatible, le cas échéant.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> si une règle compatible est trouvée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>Recherche toutes les règles de contrôle d'accès ayant les mêmes utilisateur et <see cref="T:System.Security.AccessControl.AccessControlType" /> (autorisation ou refus) que la règle spécifiée et, s'il en existe, les supprime.</summary>
      <param name="rule">
        <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> qui spécifie l'utilisateur et <see cref="T:System.Security.AccessControl.AccessControlType" /> à rechercher. Tous les droits spécifiés par cette règle sont ignorés.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>Recherche une règle de contrôle d'accès qui correspond exactement à la règle spécifiée et, si une telle règle est trouvée, la supprime.</summary>
      <param name="rule">
        <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> à supprimer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>Recherche une règle de contrôle d'audit ayant le même utilisateur que la règle spécifiée et ayant des indicateurs d'héritage et de propagation compatibles ; si une règle compatible est trouvée, les droits contenus dans la règle spécifiée en sont supprimés.</summary>
      <param name="rule">
        <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> qui spécifie l'utilisateur à rechercher, ainsi qu'un jeu d'indicateurs d'héritage et de propagation avec lesquels une règle correspondante, si elle est trouvée, doit être compatible. Spécifie les droits à supprimer de la règle compatible, le cas échéant.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> si une règle compatible est trouvée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleAll(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>Recherche toutes les règles d'audit ayant le même utilisateur que la règle spécifiée et, s'il en existe, les supprime.</summary>
      <param name="rule">
        <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> qui spécifie l'utilisateur à rechercher. Tous les droits spécifiés par cette règle sont ignorés.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>Recherche une règle d'audit qui correspond exactement à la règle spécifiée et, si une telle règle est trouvée, la supprime.</summary>
      <param name="rule">
        <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> à supprimer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>Supprime toutes les règles de contrôle d'accès ayant le même utilisateur que la règle spécifiée, indépendamment de <see cref="T:System.Security.AccessControl.AccessControlType" />, puis ajoute la règle spécifiée.</summary>
      <param name="rule">
        <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> à ajouter. L'utilisateur spécifié par cette règle détermine les règles à supprimer avant l'ajout de celle-ci.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>Supprime toutes les règles de contrôle d'accès ayant les mêmes utilisateur et <see cref="T:System.Security.AccessControl.AccessControlType" /> (autorisation ou refus) que la règle spécifiée, puis ajoute la règle spécifiée.</summary>
      <param name="rule">
        <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> à ajouter. L'utilisateur et le <see cref="T:System.Security.AccessControl.AccessControlType" /> de cette règle déterminent les règles à supprimer avant l'ajout de celle-ci.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.SetAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>Supprime toutes les règles d'audit ayant le même utilisateur que la règle spécifiée, quelle que soit la valeur de <see cref="T:System.Security.AccessControl.AuditFlags" />, puis ajoute la règle spécifiée.</summary>
      <param name="rule">
        <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> à ajouter. L'utilisateur spécifié par cette règle détermine les règles à supprimer avant l'ajout de celle-ci.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreSecurity.AccessRightType">
      <summary>Obtient l'énumération utilisée par la classe <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> pour représenter des droits d'accès.</summary>
      <returns>Objet <see cref="T:System.Type" /> représentant l'énumération <see cref="T:System.Security.AccessControl.SemaphoreRights" />.</returns>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreSecurity.AccessRuleType">
      <summary>Obtient le type utilisé par la classe <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> pour représenter des règles d'accès.</summary>
      <returns>Objet <see cref="T:System.Type" /> représentant la classe <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" />.</returns>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreSecurity.AuditRuleType">
      <summary>Obtient le type utilisé par la classe <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> pour représenter des règles d'audit.</summary>
      <returns>Objet <see cref="T:System.Type" /> représentant la classe <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" />.</returns>
    </member>
    <member name="T:System.Threading.EventWaitHandleAcl">
      <summary>Fournit une méthode d’extension propre à Windows pour la création d’objets <see cref="T:System.Threading.EventWaitHandle" /> avec une sécurité de liste de contrôle d’accès (ACL) spécifique.</summary>
    </member>
    <member name="M:System.Threading.EventWaitHandleAcl.Create(System.Boolean,System.Threading.EventResetMode,System.String,System.Boolean@,System.Security.AccessControl.EventWaitHandleSecurity)">
      <summary>Obtient ou crée une instance de <see cref="T:System.Threading.EventWaitHandle" />, qui permet de spécifier une instance de <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> pour la définir lors de la création de l’événement.</summary>
      <param name="initialState">
        <see langword="true" /> pour définir l’état initial sur signalé si l’événement nommé est créé suite à cet appel ; <see langword="false" /> pour le définir sur non signalé.</param>
      <param name="mode">Une des valeurs d’énumération qui détermine si l’événement se réinitialise automatiquement ou manuellement.</param>
      <param name="name">Nom, si l’événement doit être partagé avec d’autres processus ; sinon, <see langword="null" /> ou une chaîne vide.</param>
      <param name="createdNew">Quand cette méthode retourne, cet argument est toujours défini sur <see langword="true" /> si un événement local est créé ; autrement dit, quand <paramref name="name" /> est <see langword="null" /> ou <see cref="F:System.String.Empty" />. Si <paramref name="name" /> a une valeur non vide valide, cet argument est défini sur <see langword="true" /> quand l’événement système est créé ou il est défini sur <see langword="false" /> si un événement système existant porte ce nom.</param>
      <param name="eventSecurity">Sécurité du contrôle d’accès Windows facultative à appliquer.</param>
      <exception cref="T:System.ArgumentException">.NET Framework uniquement : la longueur de <paramref name="name" /> est supérieure à MAX_PATH (260 caractères).

- ou -

.NET Framework uniquement : la valeur d’énumération <paramref name="mode" /> était en dehors de la plage autorisée.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur d’énumération <paramref name="mode" /> était en dehors de la plage autorisée.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Impossible de trouver une partie du chemin spécifié dans <paramref name="name" />.</exception>
      <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">Un événement de synchronisation à l’échelle du système avec le <paramref name="name" /> fourni est introuvable.
(ou) Impossible de créer un <see cref="T:System.Threading.EventWaitHandle" /> avec un nom <paramref name="name" /> à l’échelle du système. Un <see cref="T:System.Threading.EventWaitHandle" /> d’un type différent peut avoir le même nom.</exception>
      <returns>Objet qui représente un descripteur d’attente d’événement comme demandé.</returns>
    </member>
    <member name="T:System.Threading.MutexAcl">
      <summary>Fournit une méthode d’extension propre à Windows pour la création d’objets <see cref="T:System.Threading.Mutex" /> avec une sécurité de liste de contrôle d’accès (ACL) spécifique.</summary>
    </member>
    <member name="M:System.Threading.MutexAcl.Create(System.Boolean,System.String,System.Boolean@,System.Security.AccessControl.MutexSecurity)">
      <summary>Obtient ou crée une instance de <see cref="T:System.Threading.Mutex" />, qui permet de spécifier une instance <see cref="T:System.Security.AccessControl.MutexSecurity" /> pour la définir lors de la création du mutex.</summary>
      <param name="initiallyOwned">
        <see langword="true" /> pour donner au thread appelant la propriété initiale du mutex système nommé si celui-ci est créé en réponse à cet appel ; sinon, <see langword="false" />.</param>
      <param name="name">Nom facultatif du mutex système. Si cet argument est défini sur <see langword="null" /> ou <see cref="F:System.String.Empty" />, un mutex local est créé.</param>
      <param name="createdNew">Quand cette méthode retourne, cet argument est toujours défini sur <see langword="true" /> si un mutex local est créé ; autrement dit, quand <paramref name="name" /> est <see langword="null" /> ou <see cref="F:System.String.Empty" />. Si <paramref name="name" /> a une valeur non vide valide, cet argument est défini sur <see langword="true" /> quand le mutex système est créé ou il est défini sur <see langword="false" /> si un mutex système existant porte ce nom. Ce paramètre est passé sans être initialisé.</param>
      <param name="mutexSecurity">Sécurité du contrôle d’accès du mutex facultative à appliquer.</param>
      <exception cref="T:System.ArgumentException">.NET Framework uniquement : la longueur du nom dépasse la limite maximale.</exception>
      <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">Impossible de créer un descripteur de mutex avec <paramref name="name" /> à l’échelle du système. Un descripteur de mutex d’un type différent peut avoir le même nom.</exception>
      <returns>Objet qui représente un mutex système s’il est nommé, ou un mutex local s’il n’a pas de nom.</returns>
    </member>
    <member name="T:System.Threading.SemaphoreAcl">
      <summary>Fournit une méthode d’extension spécifique à Windows pour la création d’objets <see cref="T:System.Threading.Semaphore" /> avec une sécurité de liste de contrôle d’accès (ACL) spécifique.</summary>
    </member>
    <member name="M:System.Threading.SemaphoreAcl.Create(System.Int32,System.Int32,System.String,System.Boolean@,System.Security.AccessControl.SemaphoreSecurity)">
      <summary>Obtient ou crée une instance de <see cref="T:System.Threading.Semaphore" />, qui permet de spécifier une instance de <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> pour la définir lors de la création de l’événement.</summary>
      <param name="initialCount">Nombre initial de demandes pour le sémaphore qui peut être satisfait simultanément.</param>
      <param name="maximumCount">Nombre maximal de demandes pour le sémaphore qui peut être satisfait simultanément.</param>
      <param name="name">Argument facultatif pour créer un sémaphore système. Définissez sur <see langword="null" /> ou sur <see cref="F:System.String.Empty" /> pour créer un sémaphore local.</param>
      <param name="createdNew">Quand cette méthode retourne, cet argument est toujours défini sur <see langword="true" /> si un sémaphore local est créé ; autrement dit, quand <paramref name="name" /> est <see langword="null" /> ou <see cref="F:System.String.Empty" />. Si <paramref name="name" /> a une valeur non vide valide, cet argument est défini sur <see langword="true" /> quand le sémaphore système est créé ou il est défini sur <see langword="false" /> si un sémaphore système existant porte ce nom. Ce paramètre est passé sans être initialisé.</param>
      <param name="semaphoreSecurity">Sécurité du contrôle d’accès du sémaphore facultative à appliquer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="initialCount" /> est un nombre négatif.
- ou -

<paramref name="maximumCount" /> n’est pas un nombre positif.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="initialCount" /> est supérieur à <paramref name="maximumCount" />.</exception>
      <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">Impossible de créer un descripteur de sémaphore avec le nom à l’échelle du système « <paramref name="name" /> ». Un descripteur de sémaphore d’un type différent peut avoir le même nom.</exception>
      <returns>Objet qui représente un sémaphore système s’il est nommé, ou un sémaphore local s’il n’a pas de nom.</returns>
    </member>
    <member name="T:System.Threading.ThreadingAclExtensions">
      <summary>Fournit des méthodes d’extension propres à Windows pour gérer les descripteurs de sécurité de la liste de contrôle d’accès (ACL) pour <see cref="T:System.Threading.EventWaitHandle" />, <see cref="T:System.Threading.Mutex" /> et <see cref="T:System.Threading.Semaphore" />.</summary>
    </member>
    <member name="M:System.Threading.ThreadingAclExtensions.GetAccessControl(System.Threading.EventWaitHandle)">
      <summary>Retourne les descripteurs de sécurité pour le <paramref name="handle" /> spécifié.</summary>
      <param name="handle">Handle d’attente d’événement à partir duquel les descripteurs de sécurité doivent être retournés.</param>
      <returns>Descripteurs de sécurité pour le <paramref name="handle" /> spécifié.</returns>
    </member>
    <member name="M:System.Threading.ThreadingAclExtensions.GetAccessControl(System.Threading.Mutex)">
      <summary>Retourne les descripteurs de sécurité pour le <paramref name="mutex" /> spécifié.</summary>
      <param name="mutex">Mutex à partir duquel les descripteurs de sécurité doivent être retournés.</param>
      <returns>Descripteurs de sécurité pour le <paramref name="mutex" /> spécifié.</returns>
    </member>
    <member name="M:System.Threading.ThreadingAclExtensions.GetAccessControl(System.Threading.Semaphore)">
      <summary>Retourne les descripteurs de sécurité pour le <paramref name="semaphore" /> spécifié.</summary>
      <param name="semaphore">Sémaphore à partir duquel les descripteurs de sécurité doivent être retournés.</param>
      <returns>Descripteurs de sécurité pour le sémaphore spécifié.</returns>
    </member>
    <member name="M:System.Threading.ThreadingAclExtensions.SetAccessControl(System.Threading.EventWaitHandle,System.Security.AccessControl.EventWaitHandleSecurity)">
      <summary>Définit les descripteurs de sécurité pour le handle d’attente d’événement spécifié.</summary>
      <param name="handle">Handle d’attente d’événement sur lequel le <paramref name="eventSecurity" /> sera appliqué.</param>
      <param name="eventSecurity">Descripteurs de sécurité à appliquer au <paramref name="handle" /> spécifié.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventSecurity" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.ThreadingAclExtensions.SetAccessControl(System.Threading.Mutex,System.Security.AccessControl.MutexSecurity)">
      <summary>Définit les descripteurs de sécurité pour le mutex spécifié.</summary>
      <param name="mutex">Mutex sur lequel le <paramref name="mutexSecurity" /> sera appliqué.</param>
      <param name="mutexSecurity">Descripteurs de sécurité à appliquer au <paramref name="mutex" /> spécifié.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="mutexSecurity" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.ThreadingAclExtensions.SetAccessControl(System.Threading.Semaphore,System.Security.AccessControl.SemaphoreSecurity)">
      <summary>Définit les descripteurs de sécurité pour le sémaphore spécifié.</summary>
      <param name="semaphore">Sémaphore sur lequel le <paramref name="semaphoreSecurity" /> sera appliqué.</param>
      <param name="semaphoreSecurity">Descripteurs de sécurité à appliquer au <paramref name="semaphore" /> spécifié.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="semaphoreSecurity" /> a la valeur <see langword="null" />.</exception>
    </member>
  </members>
</doc>