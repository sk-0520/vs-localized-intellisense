<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.PerformanceCounter</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.CounterCreationData">
      <summary>為自訂計數器定義計數器的型別、名稱和說明字串。</summary>
    </member>
    <member name="M:System.Diagnostics.CounterCreationData.#ctor">
      <summary>使用空白名稱和說明字串，將 <see cref="T:System.Diagnostics.CounterCreationData" /> 類別的新執行個體初始化為 <see langword="NumberOfItems32" /> 型別的計數器。</summary>
    </member>
    <member name="M:System.Diagnostics.CounterCreationData.#ctor(System.String,System.String,System.Diagnostics.PerformanceCounterType)">
      <summary>使用指定的計數器名稱和說明字串，將 <see cref="T:System.Diagnostics.CounterCreationData" /> 類別的新執行個體初始化為指定型別的計數器。</summary>
      <param name="counterName">計數器的名稱，它必須是它所在分類中唯一的名稱。</param>
      <param name="counterHelp">描述計數器的行為的文字。</param>
      <param name="counterType">
        <see cref="T:System.Diagnostics.PerformanceCounterType" />，識別計數器的行為。</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">您已經指定 <paramref name="counterType" /> 的值，這個值不是 <see cref="T:System.Diagnostics.PerformanceCounterType" /> 列舉型別的成員。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="counterHelp" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Diagnostics.CounterCreationData.CounterHelp">
      <summary>取得或設定自訂計數器的描述。</summary>
      <exception cref="T:System.ArgumentNullException">指定值是 <see langword="null" />。</exception>
      <returns>描述計數器的行為的文字。</returns>
    </member>
    <member name="P:System.Diagnostics.CounterCreationData.CounterName">
      <summary>取得或設定自訂計數器的名稱。</summary>
      <exception cref="T:System.ArgumentNullException">指定值是 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">指定值的長度不在 1 到 80 個字元之間，或指定值包含雙引號、控制字元或前後空格。</exception>
      <returns>計數器的名稱，它是它所在分類中唯一的名稱。</returns>
    </member>
    <member name="P:System.Diagnostics.CounterCreationData.CounterType">
      <summary>取得或設定自訂計數器的效能計數器型別。</summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">您已經指定型別，這個型別不是 <see cref="T:System.Diagnostics.PerformanceCounterType" /> 列舉型別的成員。</exception>
      <returns>
        <see cref="T:System.Diagnostics.PerformanceCounterType" />，定義效能計數器的行為。</returns>
    </member>
    <member name="T:System.Diagnostics.CounterCreationDataCollection">
      <summary>提供 <see cref="T:System.Diagnostics.CounterCreationData" /> 物件的強類型集合。</summary>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.#ctor">
      <summary>不使用關聯的 <see cref="T:System.Diagnostics.CounterCreationData" /> 執行個體，初始化 <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.#ctor(System.Diagnostics.CounterCreationData[])">
      <summary>使用指定的 <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> 執行個體陣列，初始化 <see cref="T:System.Diagnostics.CounterCreationData" /> 類別的新執行個體。</summary>
      <param name="value">
        <see cref="T:System.Diagnostics.CounterCreationData" /> 執行個體的陣列，用來初始化這個 <see cref="T:System.Diagnostics.CounterCreationDataCollection" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.#ctor(System.Diagnostics.CounterCreationDataCollection)">
      <summary>使用指定的 <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> 執行個體集合，初始化 <see cref="T:System.Diagnostics.CounterCreationData" /> 類別的新執行個體。</summary>
      <param name="value">含有 <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> 執行個體的 <see cref="T:System.Diagnostics.CounterCreationData" />，這個執行個體是用來初始化這個 <see cref="T:System.Diagnostics.CounterCreationDataCollection" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.Add(System.Diagnostics.CounterCreationData)">
      <summary>將 <see cref="T:System.Diagnostics.CounterCreationData" /> 類別的執行個體加入集合。</summary>
      <param name="value">要附加至現有集合的 <see cref="T:System.Diagnostics.CounterCreationData" /> 物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不是 <see cref="T:System.Diagnostics.CounterCreationData" /> 物件。</exception>
      <returns>新 <see cref="T:System.Diagnostics.CounterCreationData" /> 物件的索引。</returns>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.AddRange(System.Diagnostics.CounterCreationData[])">
      <summary>將指定的 <see cref="T:System.Diagnostics.CounterCreationData" /> 執行個體陣列加入集合中。</summary>
      <param name="value">
        <see cref="T:System.Diagnostics.CounterCreationData" /> 執行個體的陣列，要附加至現有的集合。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.AddRange(System.Diagnostics.CounterCreationDataCollection)">
      <summary>將指定的 <see cref="T:System.Diagnostics.CounterCreationData" /> 執行個體集合加入集合中。</summary>
      <param name="value">
        <see cref="T:System.Diagnostics.CounterCreationData" /> 執行個體的集合，要附加至現有的集合。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.Contains(System.Diagnostics.CounterCreationData)">
      <summary>判斷 <see cref="T:System.Diagnostics.CounterCreationData" /> 執行個體是否存在於集合中。</summary>
      <param name="value">要在集合中尋找的 <see cref="T:System.Diagnostics.CounterCreationData" /> 物件。</param>
      <returns>如果集合中有指定的 <see cref="T:System.Diagnostics.CounterCreationData" /> 物件存在，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.CopyTo(System.Diagnostics.CounterCreationData[],System.Int32)">
      <summary>從陣列的指定索引處開始，複製 <see cref="T:System.Diagnostics.CounterCreationData" /> 的元素至陣列。</summary>
      <param name="array">要加入集合的 <see cref="T:System.Diagnostics.CounterCreationData" /> 執行個體陣列。</param>
      <param name="index">要加入新執行個體的所在位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小於 0。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> 中的項目數大於從 <paramref name="index" /> 至目的陣列結尾的可用空間。</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.IndexOf(System.Diagnostics.CounterCreationData)">
      <summary>傳回 <see cref="T:System.Diagnostics.CounterCreationData" /> 物件在集合中的索引。</summary>
      <param name="value">要放置在集合中的 <see cref="T:System.Diagnostics.CounterCreationData" /> 物件。</param>
      <returns>如果在集合中找到指定的 <see cref="T:System.Diagnostics.CounterCreationData" />，則為其以零起始的索引，否則為 -1。</returns>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.Insert(System.Int32,System.Diagnostics.CounterCreationData)">
      <summary>將 <see cref="T:System.Diagnostics.CounterCreationData" /> 物件插入集合中的指定索引處。</summary>
      <param name="index">以零起始的索引位置，這個位置是 <see cref="T:System.Diagnostics.CounterCreationData" /> 要插入的位置。</param>
      <param name="value">要插入至集合的 <see cref="T:System.Diagnostics.CounterCreationData" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不是 <see cref="T:System.Diagnostics.CounterCreationData" /> 物件。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小於 0。  
  
-或- 
 <paramref name="index" /> 大於集合中的項目數。</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.OnValidate(System.Object)">
      <summary>檢查指定物件，判斷它是否為有效的 <see cref="T:System.Diagnostics.CounterCreationData" /> 型別。</summary>
      <param name="value">要驗證的物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不是 <see cref="T:System.Diagnostics.CounterCreationData" /> 物件。</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.Remove(System.Diagnostics.CounterCreationData)">
      <summary>從集合中移除 <see cref="T:System.Diagnostics.CounterCreationData" /> 物件。</summary>
      <param name="value">要從集合中移除的 <see cref="T:System.Diagnostics.CounterCreationData" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不是 <see cref="T:System.Diagnostics.CounterCreationData" /> 物件。  
  
-或- 
 <paramref name="value" /> 不存在於集合中。</exception>
    </member>
    <member name="P:System.Diagnostics.CounterCreationDataCollection.Item(System.Int32)">
      <summary>為 <see cref="T:System.Diagnostics.CounterCreationData" /> 集合建立索引。</summary>
      <param name="index">編入 <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> 的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小於 0。  
  
-或- 
 <paramref name="index" /> 等於或大於集合中的項目數目。</exception>
      <returns>集合索引，用來存取集合的個別項目。</returns>
    </member>
    <member name="T:System.Diagnostics.CounterSample">
      <summary>定義為效能計數器保留未經處理資料 (Raw Data) 的結構。</summary>
    </member>
    <member name="F:System.Diagnostics.CounterSample.Empty">
      <summary>定義 <see langword="NumberOfItems32" /> 型別的空的、未初始化的效能計數器樣本。</summary>
    </member>
    <member name="M:System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType)">
      <summary>初始化 <see cref="T:System.Diagnostics.CounterSample" /> 結構的新執行個體 (Instance)，並將 <see cref="P:System.Diagnostics.CounterSample.CounterTimeStamp" /> 屬性設定為 0 (零)。</summary>
      <param name="rawValue">與效能計數器樣本相關聯的數值。</param>
      <param name="baseValue">計數器的選擇性、未經處理的基底值，只使用於樣本是根據多個計數器時。</param>
      <param name="counterFrequency">讀取計數器的頻率。</param>
      <param name="systemFrequency">系統從計數器讀取所使用的頻率。</param>
      <param name="timeStamp">未經處理的時間戳記。</param>
      <param name="timeStamp100nSec">未經處理、高精確的時間戳記。</param>
      <param name="counterType">
        <see cref="T:System.Diagnostics.PerformanceCounterType" /> 物件，其指出使用此樣本做為快照 (Snapshot) 的計數器之型別。</param>
    </member>
    <member name="M:System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType,System.Int64)">
      <summary>初始化 <see cref="T:System.Diagnostics.CounterSample" /> 結構的新執行個體，並將 <see cref="P:System.Diagnostics.CounterSample.CounterTimeStamp" /> 屬性設定為傳入的值。</summary>
      <param name="rawValue">與效能計數器樣本相關聯的數值。</param>
      <param name="baseValue">計數器的選擇性、未經處理的基底值，只使用於樣本是根據多個計數器時。</param>
      <param name="counterFrequency">讀取計數器的頻率。</param>
      <param name="systemFrequency">系統從計數器讀取所使用的頻率。</param>
      <param name="timeStamp">未經處理的時間戳記。</param>
      <param name="timeStamp100nSec">未經處理、高精確的時間戳記。</param>
      <param name="counterType">
        <see cref="T:System.Diagnostics.PerformanceCounterType" /> 物件，其指出使用此樣本做為快照 (Snapshot) 的計數器之型別。</param>
      <param name="counterTimeStamp">取得樣本的時間。</param>
    </member>
    <member name="M:System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample)">
      <summary>使用單一樣本點，計算計數器的效能資料。 這個方法通常適用於未經計算的效能計數器型別。</summary>
      <param name="counterSample">
        <see cref="T:System.Diagnostics.CounterSample" /> 結構，用來做為計算效能資料的基準點。</param>
      <returns>已計算的效能值。</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)">
      <summary>使用兩個樣本點，計算計數器的效能資料。 這個方法通常適用於已計算的效能計數器型別，例如平均值。</summary>
      <param name="counterSample">
        <see cref="T:System.Diagnostics.CounterSample" /> 結構，用來做為計算效能資料的基準點。</param>
      <param name="nextCounterSample">
        <see cref="T:System.Diagnostics.CounterSample" /> 結構，用來做為計算效能資料的結束點。</param>
      <returns>已計算的效能值。</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSample.Equals(System.Diagnostics.CounterSample)">
      <summary>指出指定的 <see cref="T:System.Diagnostics.CounterSample" /> 結構是否等於目前的 <see cref="T:System.Diagnostics.CounterSample" /> 結構。</summary>
      <param name="sample">要與這個執行個體比較的 <see cref="T:System.Diagnostics.CounterSample" /> 結構。</param>
      <returns>如果 <paramref name="sample" /> 等於目前的執行個體，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSample.Equals(System.Object)">
      <summary>指出指定的結構是否為 <see cref="T:System.Diagnostics.CounterSample" /> 結構，並且是否與目前的 <see cref="T:System.Diagnostics.CounterSample" /> 結構完全相同。</summary>
      <param name="o">要與目前結構比較的 <see cref="T:System.Diagnostics.CounterSample" /> 結構。</param>
      <returns>如果 <paramref name="o" /> 是 <see cref="T:System.Diagnostics.CounterSample" /> 結構，並且與目前的執行個體完全相同，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSample.GetHashCode">
      <summary>取得目前計數器範例的雜湊程式碼。</summary>
      <returns>目前計數器範例的雜湊程式碼。</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSample.op_Equality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)">
      <summary>傳回值，指出兩個 <see cref="T:System.Diagnostics.CounterSample" /> 結構是否相等。</summary>
      <param name="a">
        <see cref="T:System.Diagnostics.CounterSample" /> 結構。</param>
      <param name="b">要與 <paramref name="a" /> 參數所指定之結構比較的另一個 <see cref="T:System.Diagnostics.CounterSample" /> 結構。</param>
      <returns>如果 <paramref name="a" /> 和 <paramref name="b" /> 相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSample.op_Inequality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)">
      <summary>傳回值，指出兩個 <see cref="T:System.Diagnostics.CounterSample" /> 結構是否不相等。</summary>
      <param name="a">
        <see cref="T:System.Diagnostics.CounterSample" /> 結構。</param>
      <param name="b">要與 <paramref name="a" /> 參數所指定之結構比較的另一個 <see cref="T:System.Diagnostics.CounterSample" /> 結構。</param>
      <returns>如果 <paramref name="a" /> 和 <paramref name="b" /> 不相等，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.BaseValue">
      <summary>取得計數器的選擇性、未經處理的基底值。</summary>
      <returns>未經處理的基底值，它只使用於樣本是根據多個計數器時。</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.CounterFrequency">
      <summary>取得未經處理的計數器頻率。</summary>
      <returns>讀取計數器的頻率。</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.CounterTimeStamp">
      <summary>取得計數器的時間戳記。</summary>
      <returns>取得樣本的時間。</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.CounterType">
      <summary>取得效能計數器的型別。</summary>
      <returns>
        <see cref="T:System.Diagnostics.PerformanceCounterType" /> 物件，其指出使用此樣本做為快照 (Snapshot) 的計數器之型別。</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.RawValue">
      <summary>取得計數器的未經處理值。</summary>
      <returns>與效能計數器樣本相關聯的數值。</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.SystemFrequency">
      <summary>取得未經處理的系統頻率。</summary>
      <returns>系統從計數器讀取所使用的頻率。</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.TimeStamp">
      <summary>取得未經處理的時間戳記。</summary>
      <returns>系統的時間戳記。</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.TimeStamp100nSec">
      <summary>取得未經處理、高精確的時間戳記。</summary>
      <returns>系統時間戳記，表示於 0.1 毫秒間。</returns>
    </member>
    <member name="T:System.Diagnostics.CounterSampleCalculator">
      <summary>提供解譯效能計數器資料的公用程式函式集。</summary>
    </member>
    <member name="M:System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample)">
      <summary>計算單一未經處理計數器樣本的已計算值。</summary>
      <param name="newSample">
        <see cref="T:System.Diagnostics.CounterSample" />，表示最近系統已使用的樣本。</param>
      <returns>效能計數器已計算值的浮點表示。</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)">
      <summary>計算兩個未經處理計數器樣本的已計算值。</summary>
      <param name="oldSample">
        <see cref="T:System.Diagnostics.CounterSample" />，表示系統已使用的前一個樣本。</param>
      <param name="newSample">
        <see cref="T:System.Diagnostics.CounterSample" />，表示最近系統已使用的樣本。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="oldSample" /> 使用的計數器型別與 <paramref name="newSample" /> 不同。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">
        <paramref name="newSample" /> 計數器型別有效能資料協助程式 (PDH) 錯誤。 如需詳細資訊，請參閱本文件之＜Win32 和 COM 程式開發＞章節中的＜檢查 PDH 介面傳回值＞。</exception>
      <returns>效能計數器已計算值的浮點表示。</returns>
    </member>
    <member name="T:System.Diagnostics.ICollectData">
      <summary>準備系統在使用效能計數器時，所要載入之效能 DLL 的效能資料。</summary>
    </member>
    <member name="M:System.Diagnostics.ICollectData.CloseData">
      <summary>由效能 DLL 的關閉效能資料函式所呼叫。</summary>
    </member>
    <member name="M:System.Diagnostics.ICollectData.CollectData(System.Int32,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr@)">
      <summary>收集效能 DLL 的效能資料。</summary>
      <param name="id">呼叫索引。</param>
      <param name="valueName">含有所要求之物件識別項的 Unicode 字串清單之指標。</param>
      <param name="data">資料緩衝區的指標。</param>
      <param name="totalBytes">一些位元組的指標。</param>
      <param name="res">當這個方法傳回時，包含資料後之第一個位元組的 <see cref="T:System.IntPtr" />，-1 表示錯誤，或 -2 表示需要更大的緩衝區。 這個參數會以未初始化的狀態傳遞。</param>
    </member>
    <member name="T:System.Diagnostics.InstanceData">
      <summary>保存與效能計數器樣本相關的執行個體 (Instance) 資料。</summary>
    </member>
    <member name="M:System.Diagnostics.InstanceData.#ctor(System.String,System.Diagnostics.CounterSample)">
      <summary>使用指定樣本和效能計數器執行個體，初始化 InstanceData 類別的新執行個體。</summary>
      <param name="instanceName">與效能計數器相關的執行個體名稱。</param>
      <param name="sample">
        <see cref="T:System.Diagnostics.CounterSample" />，取自 <paramref name="instanceName" /> 參數所指定的執行個體。</param>
    </member>
    <member name="P:System.Diagnostics.InstanceData.InstanceName">
      <summary>取得與這個執行個體資料相關的執行個體名稱。</summary>
      <returns>與效能計數器相關的執行個體名稱。</returns>
    </member>
    <member name="P:System.Diagnostics.InstanceData.RawValue">
      <summary>取得與效能計數器樣本相關的未經處理資料值。</summary>
      <returns>由與 <see cref="P:System.Diagnostics.InstanceData.Sample" /> 屬性相關的效能計數器樣本所讀取的未經處理值。</returns>
    </member>
    <member name="P:System.Diagnostics.InstanceData.Sample">
      <summary>取得產生這個資料的效能計數器樣本。</summary>
      <returns>
        <see cref="T:System.Diagnostics.CounterSample" />，取自 <see cref="P:System.Diagnostics.InstanceData.InstanceName" /> 屬性所指定的執行個體。</returns>
    </member>
    <member name="T:System.Diagnostics.InstanceDataCollection">
      <summary>提供 <see cref="T:System.Diagnostics.InstanceData" /> 物件的強類型集合。</summary>
    </member>
    <member name="M:System.Diagnostics.InstanceDataCollection.#ctor(System.String)">
      <summary>使用指定的效能計數器 (會定義效能執行個體)，初始化 <see cref="T:System.Diagnostics.InstanceDataCollection" /> 類別的新執行個體。</summary>
      <param name="counterName">計數器的名稱，通常描述了所要計數的數量。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="counterName" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Diagnostics.InstanceDataCollection.Contains(System.String)">
      <summary>判斷有指定名稱的效能執行個體 (由其中一個索引的 <see cref="T:System.Diagnostics.InstanceData" /> 物件識別) 是否在集合中。</summary>
      <param name="instanceName">要在這個集合中尋找的執行個體名稱。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instanceName" /> 參數為 <see langword="null" />。</exception>
      <returns>如果執行個體存在於集合中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.InstanceDataCollection.CopyTo(System.Diagnostics.InstanceData[],System.Int32)">
      <summary>將集合中的項目複製到指定之一維陣列的指定索引處。</summary>
      <param name="instances">一維 <see cref="T:System.Array" />，是從集合複製之值的目的端。</param>
      <param name="index">加入新執行個體處之以零起始的索引值。</param>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollection.CounterName">
      <summary>取得您要取得之執行個體資料的效能計數器名稱。</summary>
      <returns>效能計數器的名稱。</returns>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollection.Item(System.String)">
      <summary>取得與這個計數器相關聯的執行個體資料。 通常是一組未經處理的計數器值。</summary>
      <param name="instanceName">效能計數器分類執行個體的名稱，如果分類包含單一執行個體，則為空字串 ("")。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instanceName" /> 參數為 <see langword="null" />。</exception>
      <returns>
        <see cref="T:System.Diagnostics.InstanceData" /> 項目，<see cref="T:System.Diagnostics.InstanceDataCollection" /> 物件要根據它來建立索引。</returns>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollection.Keys">
      <summary>為與這個執行個體資料相關聯的物件取得物件和計數器登錄機碼。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" />，表示一組物件特定的登錄機碼。</returns>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollection.Values">
      <summary>取得未經處理的計數器值，這些數值構成計數器的執行個體資料。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" />，表示計數器未經處理的資料值。</returns>
    </member>
    <member name="T:System.Diagnostics.InstanceDataCollectionCollection">
      <summary>提供 <see cref="T:System.Diagnostics.InstanceDataCollection" /> 物件的強類型集合。</summary>
    </member>
    <member name="M:System.Diagnostics.InstanceDataCollectionCollection.#ctor">
      <summary>初始化 <see cref="T:System.Diagnostics.InstanceDataCollectionCollection" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Diagnostics.InstanceDataCollectionCollection.Contains(System.String)">
      <summary>判斷指定計數器 (由其中一個索引的 <see cref="T:System.Diagnostics.InstanceDataCollection" /> 物件識別) 的執行個體資料集合是否在集合中。</summary>
      <param name="counterName">效能計數器的名稱。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="counterName" /> 參數為 <see langword="null" />。</exception>
      <returns>如果包含指定計數器的執行個體資料集合在集合中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.InstanceDataCollectionCollection.CopyTo(System.Diagnostics.InstanceDataCollection[],System.Int32)">
      <summary>從指定索引處開始，將 <see cref="T:System.Diagnostics.InstanceDataCollection" /> 執行個體的陣列複製到集合。</summary>
      <param name="counters">要加入至集合之 <see cref="T:System.Diagnostics.InstanceDataCollection" /> 執行個體 (由其所包含的計數器識別) 的陣列。</param>
      <param name="index">要加入新執行個體的所在位置。</param>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollectionCollection.Item(System.String)">
      <summary>為指定的計數器取得執行個體資料。</summary>
      <param name="counterName">效能計數器的名稱。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="counterName" /> 參數為 <see langword="null" />。</exception>
      <returns>
        <see cref="T:System.Diagnostics.InstanceDataCollection" /> 項目，<see cref="T:System.Diagnostics.InstanceDataCollectionCollection" /> 物件要根據它來建立索引。</returns>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollectionCollection.Keys">
      <summary>為與這個執行個體資料集合相關聯的物件取得物件和計數器登錄機碼 (Registry Key)。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" />，表示一組物件特定的登錄機碼。</returns>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollectionCollection.Values">
      <summary>取得構成計數器執行個體集合的執行個體資料數值。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" />，表示計數器的執行個體和其相關聯的資料值。</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounter">
      <summary>代表 Windows NT 效能計數器元件。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounter.DefaultFileMappingSize">
      <summary>指定效能計數器所共用之全域記憶體的大小 (以位元組計)。 預設大小為 524,288 個位元組。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.#ctor">
      <summary>初始化 <see cref="T:System.Diagnostics.PerformanceCounter" /> 類別的新的、唯讀的執行個體，而不將執行個體與任何系統或自訂效能計數器相關聯。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String)">
      <summary>初始化 <see cref="T:System.Diagnostics.PerformanceCounter" /> 類別的新的、唯讀的執行個體，並將其與本機電腦上指定的系統或自訂效能計數器相關聯。 這個建構函式 (Constructor) 要求分類包含單一執行個體。</summary>
      <param name="categoryName">與這個效能計數器相關的效能計數器分類 (效能物件) 名稱。</param>
      <param name="counterName">效能計數器的名稱。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="categoryName" /> 為空字串 ("")。  
  
-或- 
 <paramref name="counterName" /> 為空字串 ("")。  
  
-或- 
指定的分類不存在。  
  
-或- 
指定的類別已標示為多重執行個體，且要求使用執行個體名稱來建立效能計數器。  
  
-或- 
 <paramref name="categoryName" /> 和 <paramref name="counterName" /> 已經當地語系化成不同的語言。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> 或 <paramref name="counterName" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">存取系統 API 時發生的錯誤。</exception>
      <exception cref="T:System.UnauthorizedAccessException">以不具有系統管理員權限執行的程式碼嘗試讀取效能計數器。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.Boolean)">
      <summary>初始化 <see cref="T:System.Diagnostics.PerformanceCounter" /> 類別的新的、唯讀或讀取/寫入執行個體，並將其與本機電腦上指定的系統或自訂效能計數器相關聯。 這個建構函式要求分類包含單一執行個體。</summary>
      <param name="categoryName">與這個效能計數器相關的效能計數器分類 (效能物件) 名稱。</param>
      <param name="counterName">效能計數器的名稱。</param>
      <param name="readOnly">若要以唯讀模式存取計數器 (不過計數器本身可以讀取/寫入)，則為 <see langword="true" />；若要以讀取/寫入模式存取計數器，則為 <see langword="false" />。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="categoryName" /> 為空字串 ("")。  
  
-或- 
<paramref name="counterName" /> 為空字串 ("")。  
  
-或- 
指定的分類不存在。 (如果 <paramref name="readOnly" /> 為 <see langword="true" />)。  
  
-或- 
指定的分類不是 .NET Framework 自訂分類 (如果 <paramref name="readOnly" /> 為 <see langword="false" />)。  
  
-或- 
指定的類別已標示為多重執行個體，且要求使用執行個體名稱來建立效能計數器。  
  
-或- 
 <paramref name="categoryName" /> 和 <paramref name="counterName" /> 已經當地語系化成不同的語言。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> 或 <paramref name="counterName" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">存取系統 API 時發生的錯誤。</exception>
      <exception cref="T:System.UnauthorizedAccessException">以不具有系統管理員權限執行的程式碼嘗試讀取效能計數器。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String)">
      <summary>初始化 <see cref="T:System.Diagnostics.PerformanceCounter" /> 類別的新的、唯讀的執行個體，並將其與本機電腦上指定的系統或自訂效能計數器和分類執行個體相關聯。</summary>
      <param name="categoryName">與這個效能計數器相關的效能計數器分類 (效能物件) 名稱。</param>
      <param name="counterName">效能計數器的名稱。</param>
      <param name="instanceName">效能計數器分類執行個體的名稱；如果分類含有單一執行個體，則為空字串 ("")。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="categoryName" /> 為空字串 ("")。  
  
-或- 
 <paramref name="counterName" /> 為空字串 ("")。  
  
-或- 
指定的分類無效。  
  
-或- 
指定的類別已標示為多重執行個體，且要求使用執行個體名稱來建立效能計數器。  
  
-或- 
 <paramref name="instanceName" /> 長度超過 127 個字元。  
  
-或- 
 <paramref name="categoryName" /> 和 <paramref name="counterName" /> 已經當地語系化成不同的語言。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> 或 <paramref name="counterName" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">存取系統 API 時發生的錯誤。</exception>
      <exception cref="T:System.UnauthorizedAccessException">以不具有系統管理員權限執行的程式碼嘗試讀取效能計數器。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.Boolean)">
      <summary>初始化 <see cref="T:System.Diagnostics.PerformanceCounter" /> 類別的新的、唯讀或讀取/寫入執行個體，並將其與本機電腦上指定的系統或自訂效能計數器和分類執行個體相關聯。</summary>
      <param name="categoryName">與這個效能計數器相關的效能計數器分類 (效能物件) 名稱。</param>
      <param name="counterName">效能計數器的名稱。</param>
      <param name="instanceName">效能計數器分類執行個體的名稱；如果分類含有單一執行個體，則為空字串 ("")。</param>
      <param name="readOnly">若要以唯讀模式存取計數器，則為 <see langword="true" />；若要以讀取/寫入模式存取計數器，則為 <see langword="false" />。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="categoryName" /> 為空字串 ("")。  
  
-或- 
 <paramref name="counterName" /> 為空字串 ("")。  
  
-或- 
要求的讀取/寫入權限設定對此計數器而言無效。  
  
-或- 
指定的分類不存在 (如果 <paramref name="readOnly" /> 為 <see langword="true" />)。  
  
-或- 
指定的分類不是 .NET Framework 自訂分類 (如果 <paramref name="readOnly" /> 為 <see langword="false" />)。  
  
-或- 
指定的類別已標示為多重執行個體，且要求使用執行個體名稱來建立效能計數器。  
  
-或- 
 <paramref name="instanceName" /> 長度超過 127 個字元。  
  
-或- 
 <paramref name="categoryName" /> 和 <paramref name="counterName" /> 已經當地語系化成不同的語言。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> 或 <paramref name="counterName" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">存取系統 API 時發生的錯誤。</exception>
      <exception cref="T:System.UnauthorizedAccessException">以不具有系統管理員權限執行的程式碼嘗試讀取效能計數器。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.String)">
      <summary>初始化 <see cref="T:System.Diagnostics.PerformanceCounter" /> 類別的新的、唯讀的執行個體，並將其與指定電腦上指定的系統或自訂效能計數器和分類執行個體相關聯。</summary>
      <param name="categoryName">與這個效能計數器相關的效能計數器分類 (效能物件) 名稱。</param>
      <param name="counterName">效能計數器的名稱。</param>
      <param name="instanceName">效能計數器分類執行個體的名稱；如果分類含有單一執行個體，則為空字串 ("")。</param>
      <param name="machineName">效能計數器和其相關聯的分類所在的電腦。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="categoryName" /> 為空字串 ("")。  
  
-或- 
 <paramref name="counterName" /> 為空字串 ("")。  
  
-或- 
要求的讀取/寫入權限設定對此計數器而言無效。  
  
-或- 
計數器不在指定的電腦上。  
  
-或- 
指定的類別已標示為多重執行個體，且要求使用執行個體名稱來建立效能計數器。  
  
-或- 
 <paramref name="instanceName" /> 長度超過 127 個字元。  
  
-或- 
 <paramref name="categoryName" /> 和 <paramref name="counterName" /> 已經當地語系化成不同的語言。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="machineName" /> 參數無效。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> 或 <paramref name="counterName" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">存取系統 API 時發生的錯誤。</exception>
      <exception cref="T:System.UnauthorizedAccessException">以不具有系統管理員權限執行的程式碼嘗試讀取效能計數器。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.BeginInit">
      <summary>開始初始化用於表單或為另一元件所使用的 <see cref="T:System.Diagnostics.PerformanceCounter" /> 執行個體。 初始化會於執行階段時執行。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.Close">
      <summary>關閉效能計數器，並釋放這個效能計數器執行個體所配置的所有資源。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.CloseSharedResources">
      <summary>釋放由計數器配置的效能計數器程式庫的共用狀態。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.Decrement">
      <summary>經由有效率的不可部分完成的作業 (Atomic Operation)，將相關的效能計數器逐一遞減。</summary>
      <exception cref="T:System.InvalidOperationException">計數器是唯讀的，所以應用程式無法將其遞減。  
  
-或- 
該執行個體沒有與效能計數器正確的相關聯。  
  
-或- 
使用全域共用記憶體時，<see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> 屬性是設定為 <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" />。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">存取系統 API 時發生的錯誤。</exception>
      <returns>遞減的計數器值。</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.EndInit">
      <summary>結束初始化用於表單或為另一元件所使用的 <see cref="T:System.Diagnostics.PerformanceCounter" /> 執行個體。 初始化會於執行階段時執行。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.Increment">
      <summary>經由有效率的不可部分完成的作業，將相關的效能計數器逐一遞增。</summary>
      <exception cref="T:System.InvalidOperationException">計數器是唯讀的，所以應用程式無法將其遞增。  
  
-或- 
該執行個體沒有與效能計數器正確的相關聯。  
  
-或- 
使用全域共用記憶體時，<see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> 屬性是設定為 <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" />。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">存取系統 API 時發生的錯誤。</exception>
      <returns>遞增的計數器值。</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.IncrementBy(System.Int64)">
      <summary>經由有效率的不可部分完成的作業，將相關的效能計數器值按指定的數量遞增或遞減。</summary>
      <param name="value">要被遞增的值 (負值會將計數器遞減)。</param>
      <exception cref="T:System.InvalidOperationException">計數器是唯讀的，所以應用程式無法將其遞增。  
  
-或- 
該執行個體沒有與效能計數器正確的相關聯。  
  
-或- 
使用全域共用記憶體時，<see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> 屬性是設定為 <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" />。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">存取系統 API 時發生的錯誤。</exception>
      <returns>新的計數器值。</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.NextSample">
      <summary>取得計數器範例，並為其傳回未經處理或未計算的值。</summary>
      <exception cref="T:System.InvalidOperationException">該執行個體沒有與效能計數器正確的相關聯。  
  
-或- 
使用全域共用記憶體時，<see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> 屬性是設定為 <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" />。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">存取系統 API 時發生的錯誤。</exception>
      <exception cref="T:System.UnauthorizedAccessException">以不具有系統管理員權限執行的程式碼嘗試讀取效能計數器。</exception>
      <returns>
        <see cref="T:System.Diagnostics.CounterSample" />，表示系統為這個計數器取得的下一個未經處理的值。</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.NextValue">
      <summary>取得計數器樣本，並為其傳回計算過的值。</summary>
      <exception cref="T:System.InvalidOperationException">該執行個體沒有與效能計數器正確的相關聯。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">存取系統 API 時發生的錯誤。</exception>
      <exception cref="T:System.UnauthorizedAccessException">以不具有系統管理員權限執行的程式碼嘗試讀取效能計數器。</exception>
      <returns>系統為這個計數器取得的下一個計算過的值。</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.RemoveInstance">
      <summary>刪除由 <see cref="T:System.Diagnostics.PerformanceCounter" /> 物件 <see cref="P:System.Diagnostics.PerformanceCounter.InstanceName" /> 屬性所指定的分類執行個體。</summary>
      <exception cref="T:System.InvalidOperationException">這個計數器是唯讀的，所以任何與分類相關的執行個體都無法移除。  
  
-或- 
該執行個體沒有與效能計數器正確的相關聯。  
  
-或- 
使用全域共用記憶體時，<see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> 屬性是設定為 <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" />。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">存取系統 API 時發生的錯誤。</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.CategoryName">
      <summary>取得或設定這個效能計數器的效能計數器分類的名稱。</summary>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Diagnostics.PerformanceCounter.CategoryName" /> 為 <see langword="null" />。</exception>
      <returns>與這個效能計數器相關的效能計數器分類 (效能物件) 名稱。</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.CounterHelp">
      <summary>取得這個效能計數器的描述。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Diagnostics.PerformanceCounter" /> 執行個體沒有與效能計數器相關聯。  
  
-或- 
使用全域共用記憶體時，<see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> 屬性是設定為 <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" />。</exception>
      <exception cref="T:System.UnauthorizedAccessException">以不具有系統管理員權限執行的程式碼嘗試讀取效能計數器。</exception>
      <returns>這個效能計數器所測量的項目或數量的描述。</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.CounterName">
      <summary>取得或設定與這個 <see cref="T:System.Diagnostics.PerformanceCounter" /> 執行個體相關的效能計數器的名稱。</summary>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Diagnostics.PerformanceCounter.CounterName" /> 為 <see langword="null" />。</exception>
      <returns>計數器的名稱，一般用於描述計算所得的數量。 這個名稱會顯示於 [效能計數器管理工具 MMC 嵌入式管理單元] 中 [新增計數器] 對話方塊的計數器清單中。</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.CounterType">
      <summary>取得相關的效能計數器的計數器型別。</summary>
      <exception cref="T:System.InvalidOperationException">該執行個體沒有與效能計數器正確的相關聯。  
  
-或- 
使用全域共用記憶體時，<see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> 屬性是設定為 <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" />。</exception>
      <exception cref="T:System.UnauthorizedAccessException">以不具有系統管理員權限執行的程式碼嘗試讀取效能計數器。</exception>
      <returns>
        <see cref="T:System.Diagnostics.PerformanceCounterType" />，描述計數器與監視應用程式的互動方式，以及它所包含的值的性質 (例如，計算過或未計算的)。</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.InstanceLifetime">
      <summary>取得或設定處理序的存留期 (Lifetime)。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">設定值不是 <see cref="T:System.Diagnostics.PerformanceCounterInstanceLifetime" /> 列舉型別的成員。</exception>
      <exception cref="T:System.InvalidOperationException">在 <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> 已初始化後設定 <see cref="T:System.Diagnostics.PerformanceCounter" />。</exception>
      <returns>其中一個 <see cref="T:System.Diagnostics.PerformanceCounterInstanceLifetime" /> 值。 預設為 <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Global" />。</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.InstanceName">
      <summary>取得或設定這個效能計數器的執行個體名稱。</summary>
      <returns>效能計數器分類執行個體的名稱，如果計數器是單一執行個體計數器，則為空字串 ("")。</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.MachineName">
      <summary>取得或設定這個效能計數器的電腦名稱。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Diagnostics.PerformanceCounter.MachineName" /> 格式無效。</exception>
      <returns>伺服器，效能計數器及其相關的分類所在處。</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.RawValue">
      <summary>取得或設定這個計數器的未經處理或未經計算的值。</summary>
      <exception cref="T:System.InvalidOperationException">您嘗試設定計數器的未經處理的值，但是處理器是唯讀的。  
  
-或- 
該執行個體沒有與效能計數器正確的相關聯。  
  
-或- 
使用全域共用記憶體時，<see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> 屬性是設定為 <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" />。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">存取系統 API 時發生的錯誤。</exception>
      <exception cref="T:System.UnauthorizedAccessException">以不具有系統管理員權限執行的程式碼嘗試讀取效能計數器。</exception>
      <returns>計數器未經處理的值。</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.ReadOnly">
      <summary>取得或設定數值，表示 <see cref="T:System.Diagnostics.PerformanceCounter" /> 執行個體是否處於唯讀模式。</summary>
      <returns>如果 <see cref="T:System.Diagnostics.PerformanceCounter" /> 執行個體是唯讀模式 (即使計數器本身是自訂的 .NET Framework 計數器)，則為 <see langword="true" />；如果它是讀取/寫入模式，則為 <see langword="false" />。 預設值是建構函式設定的值。</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterCategory">
      <summary>表示效能物件，定義效能計數器的分類。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.#ctor">
      <summary>初始化 <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> 類別的新執行個體，將 <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> 屬性保留為空的，並將 <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> 屬性設定為本機電腦。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> 類別的新執行個體，將 <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> 屬性設定為指定值，並將 <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> 屬性設定為本機電腦。</summary>
      <param name="categoryName">效能計數器分類或效能物件的名稱，用來與這個 <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> 執行個體相關聯。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="categoryName" /> 為空字串 ("")。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.#ctor(System.String,System.String)">
      <summary>初始化 <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> 類別的新執行個體，並將 <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> 和 <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> 屬性設定為指定值。</summary>
      <param name="categoryName">效能計數器分類或效能物件的名稱，用來與這個 <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> 執行個體相關聯。</param>
      <param name="machineName">效能計數器分類和其相關計數器所在的電腦。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="categoryName" /> 為空字串 ("")。  
  
-或- 
<paramref name="machineName" /> 語法無效。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)">
      <summary>判斷指定計數器是否登錄至這個分類，它是由 <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> 和 <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> 屬性所指示的。</summary>
      <param name="counterName">要尋找的效能計數器名稱。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="counterName" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> 屬性尚未設定。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">對基礎系統 API 的呼叫失敗。</exception>
      <exception cref="T:System.UnauthorizedAccessException">以不具有系統管理員權限執行的程式碼嘗試讀取效能計數器。</exception>
      <returns>如果計數器登錄至 <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> 和 <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> 屬性所指定的分類，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String)">
      <summary>判斷指定計數器是否登錄至本機電腦上的指定分類。</summary>
      <param name="counterName">要尋找的效能計數器名稱。</param>
      <param name="categoryName">與指定效能計數器相關的效能計數器分類或效能物件的名稱。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> 為 <see langword="null" />。  
  
-或- 
<paramref name="counterName" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="categoryName" /> 為空字串 ("")。</exception>
      <exception cref="T:System.InvalidOperationException">分類名稱不存在。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">對基礎系統 API 的呼叫失敗。</exception>
      <exception cref="T:System.UnauthorizedAccessException">以不具有系統管理員權限執行的程式碼嘗試讀取效能計數器。</exception>
      <returns>如果計數器登錄至本機電腦上的指定分類，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String,System.String)">
      <summary>判斷指定計數器是否登錄至遠端電腦上的指定分類。</summary>
      <param name="counterName">要尋找的效能計數器名稱。</param>
      <param name="categoryName">與指定效能計數器相關的效能計數器分類或效能物件的名稱。</param>
      <param name="machineName">效能計數器分類和其相關聯計數器所在的電腦名稱。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> 為 <see langword="null" />。  
  
-或- 
<paramref name="counterName" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="categoryName" /> 為空字串 ("")。  
  
-或- 
<paramref name="machineName" /> 無效。</exception>
      <exception cref="T:System.InvalidOperationException">分類名稱不存在。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">對基礎系統 API 的呼叫失敗。</exception>
      <exception cref="T:System.UnauthorizedAccessException">以不具有系統管理員權限執行的程式碼嘗試讀取效能計數器。</exception>
      <returns>如果計數器登錄至指定電腦上的指定分類，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.CounterCreationDataCollection)">
      <summary>在本機電腦上登錄包含指定計數器的自訂效能計數器分類。</summary>
      <param name="categoryName">要建立並登錄於系統的自訂效能計數器分類名稱。</param>
      <param name="categoryHelp">自訂分類的描述。</param>
      <param name="counterData">
        <see cref="T:System.Diagnostics.CounterCreationDataCollection" />，指定要建立為新分類部分的計數器。</param>
      <exception cref="T:System.ArgumentException">在 <paramref name="counterData" /> 集合中所指定的計數器名稱為 <see langword="null" /> 或空字串 ("")。  
  
-或- 
在 <paramref name="counterData" /> 集合中所指定的計數器已存在。  
  
-或- 
<paramref name="counterName" /> 參數的語法無效。 它可能包含反斜線字元 ("\") 或長度大於 80 個字元。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">分類已存在於本機電腦上。  
  
-或- 
<paramref name="counterData" /> 集合的配置對基底計數器而言不正確。 <see langword="AverageCount64" />、<see langword="AverageTimer32" />、<see langword="CounterMultiTimer" />、<see langword="CounterMultiTimerInverse" />、<see langword="CounterMultiTimer100Ns" />、<see langword="CounterMultiTimer100NsInverse" />、<see langword="RawFraction" />、<see langword="SampleFraction" /> 或 <see langword="SampleCounter" /> 類型的計數器後面必須緊接著其中一個基底計數器類型 (<see langword="AverageBase" />、<see langword="MultiBase" />、<see langword="RawBase" /> 或 <see langword="SampleBase" />)。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">對基礎系統 API 的呼叫失敗。</exception>
      <exception cref="T:System.UnauthorizedAccessException">以不具有系統管理員權限執行的程式碼嘗試讀取效能計數器。</exception>
      <returns>
        <see cref="T:System.Diagnostics.PerformanceCounterCategory" />，與新的自訂分類或效能物件相關聯。</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.Diagnostics.CounterCreationDataCollection)">
      <summary>在本機電腦上登錄包含指定計數器的自訂效能計數器分類。</summary>
      <param name="categoryName">要建立並登錄於系統的自訂效能計數器分類名稱。</param>
      <param name="categoryHelp">自訂分類的描述。</param>
      <param name="categoryType">其中一個 <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" /> 值。</param>
      <param name="counterData">
        <see cref="T:System.Diagnostics.CounterCreationDataCollection" />，指定要建立為新分類部分的計數器。</param>
      <exception cref="T:System.ArgumentException">在 <paramref name="counterData" /> 集合中所指定的計數器名稱為 <see langword="null" /> 或空字串 ("")。  
  
-或- 
在 <paramref name="counterData" /> 集合中所指定的計數器已存在。  
  
-或- 
 <paramref name="counterName" /> 含無效語法。 它可能包含反斜線字元 ("\") 或長度大於 80 個字元。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="counterData" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="categoryType" /> 值超出下列值範圍：<see langword="MultiInstance" />、<see langword="SingleInstance" /> 或 <see langword="Unknown" />。</exception>
      <exception cref="T:System.InvalidOperationException">分類已存在於本機電腦上。  
  
-或- 
<paramref name="counterData" /> 集合的配置對基底計數器而言不正確。 <see langword="AverageCount64" />、<see langword="AverageTimer32" />、<see langword="CounterMultiTimer" />、<see langword="CounterMultiTimerInverse" />、<see langword="CounterMultiTimer100Ns" />、<see langword="CounterMultiTimer100NsInverse" />、<see langword="RawFraction" />、<see langword="SampleFraction" /> 或 <see langword="SampleCounter" /> 類型的計數器後面必須緊接著其中一個基底計數器類型 (<see langword="AverageBase" />、<see langword="MultiBase" />、<see langword="RawBase" /> 或 <see langword="SampleBase" />)。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">對基礎系統 API 的呼叫失敗。</exception>
      <exception cref="T:System.UnauthorizedAccessException">以不具有系統管理員權限執行的程式碼嘗試讀取效能計數器。</exception>
      <returns>
        <see cref="T:System.Diagnostics.PerformanceCounterCategory" />，與新的自訂分類或效能物件相關聯。</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.String,System.String)">
      <summary>在本機電腦上登錄包含 <see cref="F:System.Diagnostics.PerformanceCounterType.NumberOfItems32" /> 型別之單一計數器的自訂效能計數器分類。</summary>
      <param name="categoryName">要建立並登錄於系統的自訂效能計數器分類名稱。</param>
      <param name="categoryHelp">自訂分類的描述。</param>
      <param name="categoryType">指定分類是 <see cref="F:System.Diagnostics.PerformanceCounterCategoryType.MultiInstance" />、<see cref="F:System.Diagnostics.PerformanceCounterCategoryType.SingleInstance" /> 或 <see cref="F:System.Diagnostics.PerformanceCounterCategoryType.Unknown" /> 的其中一個 <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" /> 值。</param>
      <param name="counterName">要建立為新分類一部分的新計數器名稱。</param>
      <param name="counterHelp">與新的自訂分類相關聯的計數器描述。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="counterName" /> 是 <see langword="null" /> 或空字串 ("")。  
  
-或- 
<paramref name="counterName" /> 所指定的計數器已存在。  
  
-或- 
 <paramref name="counterName" /> 含無效語法。 它可能包含反斜線字元 ("\") 或長度大於 80 個字元。</exception>
      <exception cref="T:System.InvalidOperationException">分類已存在於本機電腦上。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="counterHelp" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">對基礎系統 API 的呼叫失敗。</exception>
      <exception cref="T:System.UnauthorizedAccessException">以不具有系統管理員權限執行的程式碼嘗試讀取效能計數器。</exception>
      <returns>
        <see cref="T:System.Diagnostics.PerformanceCounterCategory" />，與新的系統分類或效能物件相關聯。</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.String,System.String)">
      <summary>在本機電腦上登錄包含 <see langword="NumberOfItems32" /> 型別單一計數器的自訂效能計數器分類。</summary>
      <param name="categoryName">要建立並登錄於系統的自訂效能計數器分類名稱。</param>
      <param name="categoryHelp">自訂分類的描述。</param>
      <param name="counterName">屬於 <see langword="NumberOfItems32" /> 型別的新計數器的名稱，要建立為新分類的部分。</param>
      <param name="counterHelp">與新的自訂分類相關聯的計數器描述。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="counterName" /> 是 <see langword="null" /> 或空字串 ("")。  
  
-或- 
<paramref name="counterName" /> 所指定的計數器已存在。  
  
-或- 
 <paramref name="counterName" /> 含無效語法。 它可能包含反斜線字元 ("\") 或長度大於 80 個字元。</exception>
      <exception cref="T:System.InvalidOperationException">分類已存在於本機電腦上。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="counterHelp" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">對基礎系統 API 的呼叫失敗。</exception>
      <exception cref="T:System.UnauthorizedAccessException">以不具有系統管理員權限執行的程式碼嘗試讀取效能計數器。</exception>
      <returns>
        <see cref="T:System.Diagnostics.PerformanceCounterCategory" />，與新的系統分類或效能物件相關聯。</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)">
      <summary>從本機電腦移除分類和其相關的計數器。</summary>
      <param name="categoryName">要刪除的自訂效能計數器分類名稱。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="categoryName" /> 參數的語法無效。 它可能包含反斜線字元 ("\") 或長度大於 80 個字元。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">對基礎系統 API 的呼叫失敗。</exception>
      <exception cref="T:System.InvalidOperationException">分類無法刪除，因為它不是自訂分類。</exception>
      <exception cref="T:System.UnauthorizedAccessException">以不具有系統管理員權限執行的程式碼嘗試讀取效能計數器。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)">
      <summary>判斷分類是否登錄在本機電腦上。</summary>
      <param name="categoryName">要尋找的效能計數器分類名稱。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="categoryName" /> 參數是空字串 ("")。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">對基礎系統 API 的呼叫失敗。</exception>
      <exception cref="T:System.UnauthorizedAccessException">以不具有系統管理員權限執行的程式碼嘗試讀取效能計數器。</exception>
      <returns>如果分類已登錄，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String,System.String)">
      <summary>判斷分類是否登錄在指定電腦上。</summary>
      <param name="categoryName">要尋找的效能計數器分類名稱。</param>
      <param name="machineName">要為分類檢視的電腦名稱。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="categoryName" /> 參數是空字串 ("")。  
  
-或- 
<paramref name="machineName" /> 參數無效。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">對基礎系統 API 的呼叫失敗。</exception>
      <exception cref="T:System.IO.IOException">找不到網路路徑。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼叫端沒有必要的權限。  
  
 -或-  
  
 以不具有系統管理員權限執行的程式碼嘗試讀取效能計數器。</exception>
      <returns>如果分類已登錄，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.GetCategories">
      <summary>擷取登錄在本機電腦上的效能計數器分類清單。</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">對基礎系統 API 的呼叫失敗。</exception>
      <exception cref="T:System.UnauthorizedAccessException">以不具有系統管理員權限執行的程式碼嘗試讀取效能計數器。</exception>
      <returns>
        <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> 物件的陣列，指出登錄在本機電腦上的分類。</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.GetCategories(System.String)">
      <summary>擷取登錄在指定電腦上的效能計數器分類清單。</summary>
      <param name="machineName">要觀察的電腦。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="machineName" /> 參數無效。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">對基礎系統 API 的呼叫失敗。</exception>
      <exception cref="T:System.UnauthorizedAccessException">以不具有系統管理員權限執行的程式碼嘗試讀取效能計數器。</exception>
      <returns>
        <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> 物件的陣列，指出登錄在指定電腦上的分類。</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.GetCounters">
      <summary>擷取只包含一個執行個體的效能計數器分類中的計數器清單。</summary>
      <exception cref="T:System.ArgumentException">分類不是單一的執行個體。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">對基礎系統 API 的呼叫失敗。</exception>
      <exception cref="T:System.InvalidOperationException">此分類沒有相關聯的執行個體。</exception>
      <exception cref="T:System.UnauthorizedAccessException">以不具有系統管理員權限執行的程式碼嘗試讀取效能計數器。</exception>
      <returns>
        <see cref="T:System.Diagnostics.PerformanceCounter" /> 物件的陣列，指出與這個單一執行個體效能計數器分類相關的計數器。</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.GetCounters(System.String)">
      <summary>擷取包含一個或多個執行個體的效能計數器分類中的計數器清單。</summary>
      <param name="instanceName">要為其擷取相關計數器清單的效能物件執行個體。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instanceName" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">這個 <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> 執行個體的 <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> 屬性尚未設定。  
  
-或- 
分類不包含 <paramref name="instanceName" /> 參數所指定的執行個體。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">對基礎系統 API 的呼叫失敗。</exception>
      <exception cref="T:System.UnauthorizedAccessException">以不具有系統管理員權限執行的程式碼嘗試讀取效能計數器。</exception>
      <returns>
        <see cref="T:System.Diagnostics.PerformanceCounter" /> 物件的陣列，指出與這個效能計數器分類的指定物件執行個體相關的計數器。</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.GetInstanceNames">
      <summary>擷取與這個分類相關的效能物件執行個體清單。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> 屬性為 <see langword="null" />。 屬性可能尚未設定。  
  
-或- 
此分類沒有相關聯的執行個體。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">對基礎系統 API 的呼叫失敗。</exception>
      <exception cref="T:System.UnauthorizedAccessException">以不具有系統管理員權限執行的程式碼嘗試讀取效能計數器。</exception>
      <returns>字串的陣列，表示與這個分類相關的效能物件執行個體名稱，或者包含空字串 ("") 的單一項目陣列 (如果分類只包含一個效能物件執行個體)。</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)">
      <summary>判斷在由這個 <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> 物件的 <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> 屬性所識別的分類中是否存在指定效能物件執行個體。</summary>
      <param name="instanceName">要在這個效能計數器分類中搜尋的目標效能物件執行個體。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> 屬性為 <see langword="null" />。 屬性可能尚未設定。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instanceName" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">對基礎系統 API 的呼叫失敗。</exception>
      <exception cref="T:System.UnauthorizedAccessException">以不具有系統管理員權限執行的程式碼嘗試讀取效能計數器。</exception>
      <returns>如果分類包含指定效能物件執行個體，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String)">
      <summary>判斷本機電腦上的指定分類是否包含指定效能物件執行個體。</summary>
      <param name="instanceName">要搜尋的目標效能物件執行個體。</param>
      <param name="categoryName">要搜尋的效能計數器分類。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instanceName" /> 參數為 <see langword="null" />。  
  
-或- 
<paramref name="categoryName" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="categoryName" /> 參數是空字串 ("")。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">對基礎系統 API 的呼叫失敗。</exception>
      <exception cref="T:System.UnauthorizedAccessException">以不具有系統管理員權限執行的程式碼嘗試讀取效能計數器。</exception>
      <returns>如果分類包含指定效能物件執行個體，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String,System.String)">
      <summary>判斷指定電腦上的指定分類是否包含指定效能物件執行個體。</summary>
      <param name="instanceName">要搜尋的目標效能物件執行個體。</param>
      <param name="categoryName">要搜尋的效能計數器分類。</param>
      <param name="machineName">要搜尋分類執行個體配對所在的電腦名稱。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instanceName" /> 參數為 <see langword="null" />。  
  
-或- 
<paramref name="categoryName" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="categoryName" /> 參數是空字串 ("")。  
  
-或- 
<paramref name="machineName" /> 參數無效。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">對基礎系統 API 的呼叫失敗。</exception>
      <exception cref="T:System.UnauthorizedAccessException">以不具有系統管理員權限執行的程式碼嘗試讀取效能計數器。</exception>
      <returns>如果分類包含指定效能物件執行個體，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.ReadCategory">
      <summary>讀取與這個效能計數器分類相關的所有計數器和效能物件執行個體資料。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> 屬性為 <see langword="null" />。 屬性可能尚未設定。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">對基礎系統 API 的呼叫失敗。</exception>
      <exception cref="T:System.UnauthorizedAccessException">以不具有系統管理員權限執行的程式碼嘗試讀取效能計數器。</exception>
      <returns>
        <see cref="T:System.Diagnostics.InstanceDataCollectionCollection" />，包含分類的計數器和效能物件執行個體資料。</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterCategory.CategoryHelp">
      <summary>取得分類的說明文字。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> 屬性為 <see langword="null" />。 取得分類說明之前，分類名稱必須先設定。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">對基礎系統 API 的呼叫失敗。</exception>
      <returns>這個分類所測量的效能物件的描述。</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterCategory.CategoryName">
      <summary>取得或設定定義這個分類的效能物件名稱。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> 為空字串 ("")。</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> 為 <see langword="null" />。</exception>
      <returns>效能計數器分類或效能物件的名稱，用來與這個 <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> 執行個體相關聯。</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterCategory.CategoryType">
      <summary>取得效能計數器分類的型別。</summary>
      <returns>其中一個 <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" /> 值。</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterCategory.MachineName">
      <summary>取得或設定這個分類所在的電腦名稱。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> 語法無效。</exception>
      <returns>效能計數器分類和其相關聯計數器所在的電腦名稱。</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterCategoryType">
      <summary>指出效能計數器分類是否可以具有多個執行個體。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterCategoryType.MultiInstance">
      <summary>效能計數器分類可以具有多個執行個體。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterCategoryType.SingleInstance">
      <summary>效能計數器分類只能具有單一執行個體。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterCategoryType.Unknown">
      <summary>效能計數器分類的執行個體功能未知。</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterInstanceLifetime">
      <summary>指定效能計數器執行個體的存留期。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Global">
      <summary>如果沒有任何計數器使用處理序分類時，就移除效能計數器執行個體。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process">
      <summary>處理序關閉時，就移除效能計數器執行個體。</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterManager">
      <summary>為 performance.dll 準備系統在使用效能計數器時所要載入的效能資料。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterManager.#ctor">
      <summary>初始化 <see cref="T:System.Diagnostics.PerformanceCounterManager" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterManager.System#Diagnostics#ICollectData#CloseData">
      <summary>由 perf dll 的關閉效能資料所呼叫。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterManager.System#Diagnostics#ICollectData#CollectData(System.Int32,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr@)">
      <summary>效能資料集合常式。 由 PerfCount 效能 dll 所呼叫。</summary>
      <param name="callIdx">呼叫索引。</param>
      <param name="valueNamePtr">含有所要求物件識別項之 Unicode 字串清單的指標。</param>
      <param name="dataPtr">資料緩衝區的指標。</param>
      <param name="totalBytes">一些位元組的指標。</param>
      <param name="res">這個方法傳回時，其中包含具有 -1 值的 <see cref="T:System.IntPtr" />。</param>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterType">
      <summary>指定用來計算 <see cref="M:System.Diagnostics.PerformanceCounter.NextValue" /> 執行個體 (Instance) <see cref="T:System.Diagnostics.PerformanceCounter" /> 方法的公式。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.AverageBase">
      <summary>基底計數器型別，用於計算時間或計數平均，例如 <see langword="AverageTimer32" /> 和 <see langword="AverageCount64" />。 儲存計算計數器的分母，以表示「每個作業時間」或「每個作業次數」。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.AverageCount64">
      <summary>平均計數器，顯示在作業期間已處理項目的平均數量。 這個型別的計數器會顯示已處理項目對已完成作業數量的比例。 藉由比較最新間隔期間所處理的項目數量與最新間隔期間所完成的作業，可以計算比例 此類型的計數器包括 PhysicalDisk \ Avg. Disk Bytes/Transfer。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.AverageTimer32">
      <summary>平均計數器，測量完成處理序或作業的平均使用時間。 這個型別的計數器會顯示樣本間隔的總耗用時間與此期間所完成處理序或作業數量的比例。 這個計數器型別會以系統時鐘的刻度為單位來測量時間  此類型的計數器包括 PhysicalDisk \ Avg. Disk sec/Transfer。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterDelta32">
      <summary>差異計數器，顯示在最近兩次的樣本間隔間的測量屬性之變更。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterDelta64">
      <summary>差異計數器，顯示在最近兩次的樣本間隔間的測量屬性之變更。 它和 <see langword="CounterDelta32" /> 計數器類型相同，但是使用較大的欄位來容納較大值。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterMultiBase">
      <summary>基底計數器，表示取樣的項目數量。 當要取得多個類似項目的時間時，它會做為計算的分母來取得取樣項目的平均。 與 <see langword="CounterMultiTimer" />、<see langword="CounterMultiTimerInverse" />、<see langword="CounterMultiTimer100Ns" /> 和 <see langword="CounterMultiTimer100NsInverse" /> 一起使用。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer">
      <summary>百分比計數器，將一個或多個元件的作用時間顯示為樣本間隔的總時間百分比。 因為分子會記錄同時運作的元件的作用時間，所以產生的百分比可以超過 100 %。 這個計數器型別不同於 <see langword="CounterMultiTimer100Ns" />，因為它是以系統效能計時器的刻度為單位來測量時間，而不是以 100 奈秒 (Nanosecond) 為單位 這個計數器型別是多重計時器。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns">
      <summary>將一或多個元件的作用時間顯示為樣本間隔的總時間百分比的百分比計數器。 它會以 100 奈秒為單位來測量時間。 這個計數器型別是多重計時器。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse">
      <summary>將一或多個元件的作用時間顯示為樣本間隔的總時間百分比的百分比計數器。 這個型別的計數器會以 100 奈秒 (ns) 為單位來測量時間。 它們會藉由測量元件的非作用時間，並將 100 % 乘以監視物件數量的乘積減去非作用時間，來取得作用的時間。 這個計數器型別是反向多重計時器。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse">
      <summary>將一或多個元件的作用時間顯示為樣本間隔的總時間百分比的百分比計數器。 它會藉由測量元件非作用時間，並將 100 % 乘以所監視物件數量的乘積減去非作用時間，來取得作用的時間。 這個計數器型別是反向多重計時器。 它和 CounterMultiTimer100NsInverse 不同，因為後者測量時間的單位是系統效能計時器的刻度，而不是 100 奈秒。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterTimer">
      <summary>百分比計數器，將元件使用中的平均時間顯示為總耗用時間的百分比。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterTimerInverse">
      <summary>百分比計數器，顯示樣本間隔期間所觀察的作用時間之平均百分比。 這些計數器的值是由監視服務非作用時間百分比，並且將 100 % 減去該百分比所計算而來。 這是反向計數器型別。 它和 CounterTimer100NsInv 相同，唯一的差別是它測量時間的單位為系統效能計時器的刻度，而不是 100 奈秒。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32">
      <summary>平均計數器，設計來監視一段時間內資源的佇列平均長度。 它會顯示在最新的兩個樣本間隔期間，所觀察佇列長度之間的差異值，再除以間隔的持續時間。 這個計數器型別通常用於追蹤佇列或等候的項目數。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64">
      <summary>平均計數器，監視一段時間內資源的佇列平均長度。 這個型別的計數器會顯示在最新的兩個樣本間隔期間，所觀察佇列長度之間的差異值，再除以間隔的持續時間。 這個計數器型別和 <see langword="CountPerTimeInterval32" /> 相同，但是它使用較大的欄位來容納較大的值。 這個計數器型別通常用於追蹤大量佇列或等候的項目數。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.ElapsedTime">
      <summary>差異計時器，顯示元件或處理序啟動時間和計算這個值的時間之間的總時間。 這類計數器包含 System\ System Up Time。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.NumberOfItems32">
      <summary>顯示最近觀察到的值的即時計數器。 例如，用來維護項目或作業的簡單計數。 這類計數器包含 Memory\Available Bytes。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.NumberOfItems64">
      <summary>顯示最近觀察到的值的即時計數器。 例如，用來維護極大量項目或作業的簡單計數。 它和 <see langword="NumberOfItems32" /> 相同，但是它使用較大的欄位來容納較大的值。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32">
      <summary>即時計數器，以十六進位格式顯示最近觀察到的值。 例如，用來維護項目或作業的簡單計數。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64">
      <summary>顯示最近觀察到的值的即時計數器。 例如，用來維護極大量項目或作業的簡單計數。 它和 <see langword="NumberOfItemsHEX32" /> 相同，但是它使用較大的欄位來容納較大的值。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32">
      <summary>差異計數器，顯示在樣本間隔每秒期間完成的作業平均數。 這個型別的計數器會以系統時鐘的刻度為單位來測量時間  這類計數器包含 System\ File Read Operations/sec。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64">
      <summary>差異計數器，顯示在樣本間隔每秒期間完成的作業平均數。 這個型別的計數器會以系統時鐘的刻度為單位來測量時間  這個計數器型別和 <see langword="RateOfCountsPerSecond32" /> 型別相同，但是它使用較大的欄位來容納較大的值，以便追蹤每秒大量的項目數或作業數，例如位元組傳輸速率。 這類計數器包含 System\ File Read Operations/sec。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.RawBase">
      <summary>基底計數器，儲存表示一般算術分數的計數器的分母。 請在將這個值當做 <see langword="RawFraction" /> 值計算中的分母之前，先檢查這個值是否大於零。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.RawFraction">
      <summary>即時百分比計數器，以百分比顯示子集對其集合的比例。 例如，它會比較磁碟的使用中位元組數和磁碟的總位元組數。 這個型別的計數器只會顯示目前的百分比，而不是一段時間的平均  這類計數器包含 Paging File\% Usage Peak。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.SampleBase">
      <summary>基底計數器型別，儲存取樣中斷數，並在取樣分數中做為分母。 取樣分數就是樣本數目，其對樣本中斷而言為 1 (或 <see langword="true" />)。 在將這個值當做 <see langword="SampleFraction" /> 計算中的分母之前，請先檢查這個值是否大於零。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.SampleCounter">
      <summary>平均計數器，顯示一秒鐘完成的作業平均數。 當這個型別的計數器取樣資料時，每個取樣中斷會傳回 1 或 0。 計數器資料是所取樣的數目。 它會以系統效能計時器的刻度為單位來測量時間。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.SampleFraction">
      <summary>百分比計數器，顯示在最新兩次樣本間隔期間的對所有作業點擊的平均比例。 這類計數器包含 Cache\Pin Read Hits %。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.Timer100Ns">
      <summary>將一或多個元件的作用時間顯示為樣本間隔的總時間百分比的百分比計數器。 它會以 100 奈秒為單位來測量時間。 這個型別的計數器是設計來一次測量一個元件的活動  這類計數器包含 Processor\ % User Time。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.Timer100NsInverse">
      <summary>百分比計數器，顯示樣本間隔期間所觀察的作用時間之平均百分比。 這是反向計數器。 這類計數器包含 Processor\ % Processor Time。</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterData">
      <summary>包含計數器的未經處理資料 (Raw Data)。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterData.Decrement">
      <summary>以 1 為單位遞減計數器值。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterData.Increment">
      <summary>以 1 為單位遞增計數器值。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterData.IncrementBy(System.Int64)">
      <summary>以指定量為單位遞增計數器值。</summary>
      <param name="value">要遞增計數器值的單位量。 遞增值可以為正數或負數。</param>
    </member>
    <member name="P:System.Diagnostics.PerformanceData.CounterData.RawValue">
      <summary>取得或設定未經處理的計數器資料。</summary>
      <returns>未經處理的計數器資料。</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceData.CounterData.Value">
      <summary>取得或設定計數器資料。</summary>
      <returns>計數器資料。</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterSet">
      <summary>定義一組邏輯計數器。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.#ctor(System.Guid,System.Guid,System.Diagnostics.PerformanceData.CounterSetInstanceType)">
      <summary>初始化 <see cref="T:System.Diagnostics.PerformanceData.CounterSet" /> 類別的新執行個體。</summary>
      <param name="providerGuid">可唯一識別計數器資料提供者的 GUID。 請使用資訊清單中指定的 GUID。</param>
      <param name="counterSetGuid">可唯一識別提供者之計數器集合的 GUID。 請使用資訊清單中指定的 GUID。</param>
      <param name="instanceType">識別計數器集合的類型，例如計數器集合是單一或多重執行個體的計數器集合。</param>
      <exception cref="T:System.InsufficientMemoryException">可用的記憶體不足，無法完成作業。</exception>
      <exception cref="T:System.PlatformNotSupportedException">Windows Vista 之前的版本不支援。</exception>
      <exception cref="T:System.ArgumentException">其中一個參數是 NULL 或無效。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">基礎 Win32 函式呼叫失敗。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType)">
      <summary>使用指定的計數器識別項和型別，將計數器加入至計數器集合。</summary>
      <param name="counterId">識別計數器。 請使用您在資訊清單中使用的同一個值來定義計數器。</param>
      <param name="counterType">識別計數器型別。 此計數器型別決定計數器資料的計算、求平均值及顯示等方式。</param>
      <exception cref="T:System.ArgumentException">計數器識別項已存在集合中或為負數，或者計數器型別是 NULL 或無效。</exception>
      <exception cref="T:System.InvalidOperationException">您不能在建立計數器集合的執行個體之後，將計數器加入至計數器集合。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType,System.String)">
      <summary>使用指定的計數器識別項和型別以及計數器的顯示名稱，將計數器加入至計數器集合。</summary>
      <param name="counterId">識別計數器。 請使用您在資訊清單中使用的同一個值來定義計數器。</param>
      <param name="counterType">識別計數器型別。 此計數器型別決定計數器資料的計算、求平均值及顯示等方式。</param>
      <param name="counterName">計數器的名稱。 您可以使用這個名稱，對計數器集合'執行個體中的計數器進行索引  (請參閱<see cref="P:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item(System.String)" />.)</param>
      <exception cref="T:System.ArgumentException">計數器識別項已存在集合中或為負數，或者計數器型別是 NULL 或無效。</exception>
      <exception cref="T:System.InvalidOperationException">您不能在建立計數器集合的執行個體之後，將計數器加入至計數器集合。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(System.String)">
      <summary>建立計數器集合的執行個體。</summary>
      <param name="instanceName">執行個體的名稱。 名稱必須是唯一的。</param>
      <exception cref="T:System.ArgumentException">執行個體名稱是 NULL。</exception>
      <exception cref="T:System.InvalidOperationException">您必須在建立計數器集合的執行個體前，將計數器加入至計數器集合中。</exception>
      <returns>包含計數器資料之計數器集合的執行個體。</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.Dispose">
      <summary>釋放這個物件使用的所有 Unmanaged 資源。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.Dispose(System.Boolean)">
      <summary>釋放此物件所使用的全部 Unmanaged 資源，並選擇性地釋放 Managed 資源。</summary>
      <param name="disposing">如果這是從 Dispose 方法呼叫則為 <see langword="True" />，如果是從完成項呼叫，則為 <see langword="False" />。</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.Finalize">
      <summary>在記憶體回收收回物件前釋放資源。</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterSetInstance">
      <summary>建立 <see cref="T:System.Diagnostics.PerformanceData.CounterSet" /> 類別中定義之邏輯計數器的執行個體。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSetInstance.Dispose">
      <summary>釋放這個物件使用的所有 Unmanaged 資源。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSetInstance.Finalize">
      <summary>釋放 Unmanaged 資源並執行其他清除作業。</summary>
    </member>
    <member name="P:System.Diagnostics.PerformanceData.CounterSetInstance.Counters">
      <summary>擷取計數器集合執行個體的計數器資料集合。</summary>
      <returns>包含在計數器集合執行個體中的計數器資料集合。</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet">
      <summary>包含計數器值的集合。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Dispose">
      <summary>釋放這個物件使用的所有 Unmanaged 資源。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Finalize">
      <summary>允許物件在記憶體回收進行回收之前，嘗試釋放資源並執行其他清除作業。</summary>
    </member>
    <member name="P:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item(System.Int32)">
      <summary>使用指定的計數器識別項，存取集合中的計數器值。</summary>
      <param name="counterId">計數器的識別項。 這是您在將計數器加入至計數器集合時所使用的識別項。</param>
      <returns>計數器資料。</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item(System.String)">
      <summary>使用指定的計數器名稱，存取集合中的計數器值。</summary>
      <param name="counterName">計數器的名稱。 這是您在將計數器加入至計數器集合時所使用的名稱。</param>
      <returns>計數器資料。</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterSetInstanceType">
      <summary>指定計數器集合可允許多重執行個體 (Instance)，例如處理序 (Process) 和實體磁碟，還是單一執行個體 (例如記憶體)。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.GlobalAggregate">
      <summary>計數器集合包含單一執行個體計數器，而該計數器的彙總值是取自一個或多個來源。 例如，這種計數器集合型別中的計數器可以取得電腦中三個硬碟各自的讀取次數，並將它們的值加總。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.GlobalAggregateWithHistory">
      <summary>這種型別類似於 <see cref="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.GlobalAggregate" />，只是這種計數器型別會在消費者應用程式的存留期 (Lifetime) 儲存所有的計數器值 (計數器值是在計數器存留期過後加以快取)。 例如，如果全域彙總範例中的某個硬碟變成無法使用，該磁碟所讀取的位元組總數仍然可用，也可用來計算彙總值。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.InstanceAggregate">
      <summary>此型別類似於 <see cref="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.MultipleAggregate" />，只是它不會將所有的執行個體資料彙總成單一彙總 (_Total) 執行個體，而會彙總同名執行個體中的計數器資料。 例如，如果多個提供者處理序包含名為 IExplore 的執行個體，<see cref="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.Multiple" /> 和 <see cref="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.MultipleAggregate" /> CounterSet 將會顯示多個 IExplore 執行個體 (IExplore、IExplore#1、IExplore#2 依此類推)；不過，<see cref="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.InstanceAggregate" /> 執行個體型別只會發行一個 IExplore 執行個體，其中包含名為 IExplore 之所有執行個體中的彙總計數器資料。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.Multiple">
      <summary>計數器集合包含多重執行個體計數器，例如測量處理序之平均磁碟 I/O 的計數器。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.MultipleAggregate">
      <summary>計數器集合包含多重執行個體計數器，而這些計數器的彙總值是取自計數器的所有執行個體。 例如，這種計數器集合型別中的計數器可以取得多執行緒應用程式中所有執行緒的執行緒執行時間總計，並將它們的值加總。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.Single">
      <summary>計數器集合包含單一執行個體計數器，例如測量實體記憶體的計數器。</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterType">
      <summary>定義計數器的可能型別。 每個計數器都會指派一種計數器型別。 此計數器型別決定計數器資料的計算、求平均值及顯示等方式。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.AverageBase">
      <summary>此計數器可當做 <see cref="F:System.Diagnostics.PerformanceData.CounterType.AverageCount64" /> 和 <see cref="F:System.Diagnostics.PerformanceData.CounterType.AverageTimer32" /> 計數器計算時間或計數平均的基底資料。 此計數器型別只會收集最後觀察到的值  (請參閱部署套件中的 PERF_AVERAGE_BASE 計數型別)。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.AverageCount64">
      <summary>此計數器型別顯示作業期間已處理項目的平均數量。 這種型別的計數器會顯示已處理項目 (例如已傳送的位元組) 相對於已完成作業數目的比例。 藉由比較最新間隔期間所處理的項目數量與最新間隔期間所完成的作業，可以計算比例 (請參閱部署套件中的 PERF_AVERAGE_BULK 計數型別)。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.AverageTimer32">
      <summary>此計數器型別會測量完成處理序 (Process) 或作業的平均使用時間。 這個型別的計數器會顯示樣本間隔的總耗用時間與此期間所完成處理序或作業數量的比例。 這個計數器型別會以系統時鐘的刻度為單位來測量時間  (請參閱部署套件中的 PERF_AVERAGE_TIMER 計數器型別)。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.Delta32">
      <summary>此計數器型別顯示最近兩次取樣間隔間之測量屬性 (Attribute) 的變更  (請參閱部署套件中的 PERF_COUNTER_DELTA 計數器型別)。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.Delta64">
      <summary>此計數器型別顯示最近兩次取樣間隔間之測量屬性 (Attribute) 的變更  它和 <see cref="F:System.Diagnostics.PerformanceData.CounterType.Delta32" /> 計數器型別相同，但是使用較大的欄位來容納較大的值  (請參閱部署套件中的 PERF_COUNTER_LARGE_DELTA 計數器型別)。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.ElapsedTime">
      <summary>此計數器型別顯示元件或處理序啟動時與計算這個值時兩者相隔的總時間  (請參閱部署套件中的 PERF_ELAPSED_TIME 計數器型別)。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.LargeQueueLength">
      <summary>此計數器型別會監視一段時間內資源的平均佇列長度。 這個型別的計數器會顯示在最新的兩個樣本間隔期間，所觀察佇列長度之間的差異值，再除以間隔的持續時間。 這個計數器型別和 <see cref="F:System.Diagnostics.PerformanceData.CounterType.QueueLength" /> 計數器型別相同，但是使用較大的欄位來容納較大的值  (請參閱部署套件中的 PERF_COUNTER_LARGE_QUEUELEN_TYPE 計數器型別)。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerBase">
      <summary>指出取樣的項目個數。 它可當做算式分母，以便在取得多個相似項目的時間時，用來計算取樣項目的平均值。 此型別支援下列計數器型別：<see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive" />、<see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive" />、<see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive100Ns" /> 和 <see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive100Ns" />。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive">
      <summary>這個計數器型別是多重計時器。 多重計時器會從一個以上的元件執行個體收集資料，例如處理器或磁碟。 這種型別的計數器會將一個或多個元件的作用時間顯示為取樣間隔總時間的百分比。 因為分子會記錄同時運作的元件的作用時間，所以產生的百分比可以超過 100 %。 這個計數器型別不同於 <see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive100Ns" />，因為它是以系統效能計時器的刻度為單位來測量時間，而不是以 100 奈秒 (Nanosecond) 為單位 (請參閱部署套件中的 PERF_COUNTER_MULTI_TIMER 計數器型別)。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive100Ns">
      <summary>這個計數器型別以範本間隔總時間的百分比，顯示一個或多個元件的作用時間。 它會以 100 奈秒為單位來測量時間。 這個計數器型別是多重計時器。 多重計時器是設計來監視一個以上的元件執行個體，例如處理器或磁碟  (請參閱部署套件中的 PERF_100NSEC_MULTI_TIMER 計數器型別)。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive">
      <summary>這個計數器型別以範本間隔總時間的百分比，顯示一個或多個元件的作用時間。 這個計數器型別是反向多重計時器。 多重計時器會監視一個以上的元件執行個體，例如處理器或磁碟。 反向計數器會測量元件處於非作用中的時間，並利用該測量值推算其作用時間。 這個計數器不同於 <see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive100Ns" />，因為它是以系統效能計時器的刻度為單位來測量時間，而不是以 100 奈秒為單位 (請參閱部署套件中的 PERF_COUNTER_MULTI_TIMER_INV 計數器型別)。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive100Ns">
      <summary>這個計數器型別以範本間隔總時間的百分比，顯示一個或多個元件的作用時間。 這種型別的計數器會以 100 奈秒為單位來測量時間。 這個計數器型別是反向多重計時器。 多重計時器是設計來監視一個以上的元件執行個體，例如處理器或磁碟  反向計數器會測量元件處於非作用中的時間，並利用測得的非作用時間推算其作用時間  (請參閱部署套件中的 PERF_100NSEC_MULTI_TIMER_INV 計數器型別)。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.ObjectSpecificTimer">
      <summary>此 64 位元的計數器型別是顯示物件專用單位的計時器  (請參閱部署套件中的 PERF_OBJ_TIME_TIMER 計數器型別)。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PercentageActive">
      <summary>此計數器型別會將元件作用中的平均時間顯示為總取樣時間的百分比  (請參閱部署套件中的 PERF_COUNTER_TIMER 計數器型別)。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PercentageActive100Ns">
      <summary>此計數器型別會將元件的作用中時間顯示為取樣間隔已耗用時間總和的百分比。 它會以 100 奈秒為單位來測量時間。 這個型別的計數器是設計來一次測量一個元件的活動  (請參閱部署套件中的 PERF_100NSEC_TIMER 計數器型別)。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PercentageNotActive">
      <summary>這是反向計數器型別。 反向計數器會測量元件處於非作用中的時間，並利用該測量值推算其作用時間。 這種型別的計數會顯示取樣間隔期間所觀察到的作用時間平均百分比。 這些計數器的值是由監視服務非作用時間百分比，並且將 100 % 減去該百分比所計算而來。 這種計數器型別和 <see cref="F:System.Diagnostics.PerformanceData.CounterType.PercentageNotActive100Ns" /> 計數器型別相同，但是它是以系統效能計時器的刻度為單位來測量時間，而不是以 100 奈秒為單位 (請參閱部署套件中的 PERF_COUNTER_TIMER_INV 計數器型別)。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PercentageNotActive100Ns">
      <summary>此計數器型別顯示取樣間隔期間所觀察到的作用時間平均百分比。 這是反向計數器。 反向計數器的計算方式是監視服務非作用時間的百分比，然後再以 100% 減去該百分比  (請參閱部署套件中的 PERF_100NSEC_TIMER_INV 計數器型別)。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PrecisionObjectSpecificTimer">
      <summary>此計數器型別顯示的值由下列兩個計數器值組成：受監視之事件的已耗用時間，以及物件標頭之 PerfFreq 欄位中指定的頻率。 這種計數器型別與其他計數器型別的不同之處在於時脈週期值隨附於計數器的值，以消除由於函式呼叫 (Function Call) 延遲時間可能產生的任何差異。 當標準系統計時器不夠精確，無法提供精確的讀數時，就會使用 Precision 計數器型別  (請參閱部署套件中的 PERF_PRECISION_OBJECT_TIMER 計數器型別)。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PrecisionSystemTimer">
      <summary>此計數器型別顯示的值由下列兩個計數器值組成：受監視之事件的已耗用時間，以及系統效能計時器提供的頻率。 這種計數器型別與其他計數器型別的不同之處在於時脈週期值隨附於計數器的值，以消除由於函式呼叫延遲時間可能產生的任何差異。 當標準系統計時器不夠精確，無法提供精確的讀數時，就會使用 Precision 計數器型別  (請參閱部署套件中的 PERF_PRECISION_TIMER 計數器型別)。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PrecisionTimer100Ns">
      <summary>此計數器型別顯示的值由下列兩個計數器值組成：受監視之事件的已耗用時間，以及私用 (Private) 計時器中相同單位的「時脈」時間。 它會以 100 奈秒為單位來測量時間。 這種計數器型別與其他計數器型別的不同之處在於時脈週期值隨附於計數器的值，以消除由於函式呼叫延遲時間可能產生的任何差異。 當標準系統計時器不夠精確，無法提供精確的讀數時，就會使用 Precision 計數器型別  (請參閱部署套件中的 PERF_PRECISION_100NS_TIMER 計數器型別)。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.QueueLength">
      <summary>此計數器型別是設計用來監視一段時間內資源的平均佇列長度。 它會顯示在最新的兩個樣本間隔期間，所觀察佇列長度之間的差異值，再除以間隔的持續時間。 (請參閱部署套件中的 PERF_COUNTER_QUEUELEN_TYPE 計數器型別)。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.QueueLength100Ns">
      <summary>此計數器型別會使用 100 奈秒的時間基底來測量佇列長度與空間時間的乘積  (請參閱部署套件中的 PERF_COUNTER_100NS_QUEUELEN_TYPE 計數器型別)。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.QueueLengthObjectTime">
      <summary>此計數器型別會使用物件專用的時間基底來測量佇列長度與空間時間的乘積  (請參閱部署套件中的 PERF_COUNTER_OBJ_QUEUELEN_TYPE 計數器型別)。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RateOfCountPerSecond32">
      <summary>此計數器型別顯示取樣間隔每秒期間完成的作業平均數。 這個型別的計數器會以系統時鐘的刻度為單位來測量時間  (請參閱部署套件中的 PERF_COUNTER_COUNTER 計數器型別)。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RateOfCountPerSecond64">
      <summary>此計數器型別顯示取樣間隔每秒期間完成的作業平均數。 這個型別的計數器會以系統時鐘的刻度為單位來測量時間  這種計數器型別和 <see cref="F:System.Diagnostics.PerformanceData.CounterType.RateOfCountPerSecond32" /> 型別相同，但是使用較大的欄位來容納較大的值  (請參閱部署套件中的 PERF_COUNTER_BULK_COUNT 計數器型別)。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawBase32">
      <summary>此計數器型別只會收集最後觀察到的值  這個值會儲存成顯示一般算術分數之計數器的分母。 此型別支援 <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawFraction32" /> 計數器型別  (請參閱部署套件中的 PERF_RAW_BASE 計數器型別)。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawBase64">
      <summary>此計數器型別會收集最後觀察到的值。 它和 <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawBase32" /> 計數器類型相同，但是使用較大的欄位來容納較大的值。 此型別支援 <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawFraction64" /> 計數器型別  (請參閱部署套件中的 PERF_LARGE_RAW_BASE 計數器型別)。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawData32">
      <summary>此計數器型別只會顯示最後觀察到的值， 但不會顯示平均值  (請參閱部署套件中的 PERF_COUNTER_RAWCOUNT 計數器型別)。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawData64">
      <summary>此計數器型別只會顯示最後觀察到的值，但不會顯示平均值。 它和 <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawData32" /> 計數器型別相同，但是使用較大的欄位來容納較大的值  (請參閱部署套件中的 PERF_COUNTER_LARGE_RAWCOUNT 計數器型別)。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawDataHex32">
      <summary>此計數器型別會以十六進位格式顯示最近觀察到的值， 但不會顯示平均值  (請參閱部署套件中的 PERF_COUNTER_RAWCOUNT_HEX 計數器型別)。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawDataHex64">
      <summary>此計數器型別會以十六進位格式顯示最後觀察到的值。 它和 <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawDataHex32" /> 計數器型別相同，但是使用較大的欄位來容納較大的值  (請參閱部署套件中的 PERF_COUNTER_LARGE_RAWCOUNT_HEX 計數器型別)。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawFraction32">
      <summary>此計數器型別會以百分比顯示子集相對於其集合的比例。 例如，它會比較磁碟的使用中位元組數和磁碟的總位元組數。 這個型別的計數器只會顯示目前的百分比，而不是一段時間的平均  (請參閱部署套件中的 PERF_RAW_FRACTION 計數器型別)。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawFraction64">
      <summary>此計數器型別會以百分比顯示子集相對於其集合的比例。 例如，它會比較磁碟的使用中位元組數和磁碟的總位元組數。 這個型別的計數器只會顯示目前的百分比，而不是一段時間的平均  它和 <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawFraction32" /> 計數器型別相同，但是使用較大的欄位來容納較大的值</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.SampleBase">
      <summary>此計數器型別會儲存取樣中斷數，而且可當做取樣分數中的分母。 此型別支援 <see cref="F:System.Diagnostics.PerformanceData.CounterType.SampleFraction" /> 計數器型別</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.SampleCounter">
      <summary>此計數器型別顯示一秒鐘完成的作業平均數。 它會以系統效能計時器的刻度為單位來測量時間。 變數 F 代表一秒內出現的刻度數。 F 值可當做因數計入等式中，以便將結果顯示為秒數  (請參閱部署套件中的 PERF_SAMPLE_COUNTER 計數器型別)。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.SampleFraction">
      <summary>此計數器型別顯示最後兩次取樣間隔期間相對於所有作業的平均命中比例  (請參閱部署套件中的 PERF_SAMPLE_FRACTION 計數器型別)。</summary>
    </member>
  </members>
</doc>