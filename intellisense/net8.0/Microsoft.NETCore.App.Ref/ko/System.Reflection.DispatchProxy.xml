<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Reflection.DispatchProxy</name>
  </assembly>
  <members>
    <member name="T:System.Reflection.DispatchProxy">
      <summary>프록시 개체를 인스턴스화하고 해당 메서드 디스패치를 처리하는 메커니즘을 제공합니다.</summary>
    </member>
    <member name="M:System.Reflection.DispatchProxy.#ctor" />
    <member name="M:System.Reflection.DispatchProxy.Create``2">
      <summary>클래스 <typeparamref name="TProxy" />에서 파생되고 인터페이스 <typeparamref name="T" />를 구현하는 개체 인스턴스를 만듭니다.</summary>
      <typeparam name="T">프록시가 구현 해야 하는 인터페이스입니다.</typeparam>
      <typeparam name="TProxy">프록시 클래스에 사용할 기본 클래스입니다.</typeparam>
      <exception cref="T:System.ArgumentException">
        <typeparamref name="T" />가 클래스이거나, <typeparamref name="TProxy" />가 봉인되었거나 매개 변수 없는 생성자를 가지고 있지 않습니다.</exception>
      <returns>
        <typeparamref name="T" />를 구현하는 개체 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Reflection.DispatchProxy.Invoke(System.Reflection.MethodInfo,System.Object[])">
      <summary>생성된 프록시 형식의 메서드를 호출할 때마다 이 메서드가 호출되어 컨트롤이 디스패치됩니다.</summary>
      <param name="targetMethod">호출자가 호출한 메서드입니다.</param>
      <param name="args">호출자가 메서드에 전달한 인수입니다.</param>
      <returns>호출자에게 반환할 개체 또는 void 메서드에 대한 <see langword="null" />입니다.</returns>
    </member>
  </members>
</doc>