<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.IO.Compression</name>
  </assembly>
  <members>
    <member name="T:System.IO.Compression.CompressionLevel">
      <summary>圧縮操作で速度を重視するか、または圧縮サイズを重視するかを示す値を指定します。</summary>
    </member>
    <member name="F:System.IO.Compression.CompressionLevel.Fastest">
      <summary>圧縮後のファイルが最適な圧縮でなくても、圧縮操作はできるだけ迅速に完了する必要があります。</summary>
    </member>
    <member name="F:System.IO.Compression.CompressionLevel.NoCompression">
      <summary>ファイルに対して圧縮を行いません。</summary>
    </member>
    <member name="F:System.IO.Compression.CompressionLevel.Optimal">
      <summary>圧縮操作が完了するまで時間がかかる場合でも、最適な圧縮を行います。</summary>
    </member>
    <member name="T:System.IO.Compression.CompressionMode">
      <summary>基になるストリームを圧縮するか、または圧縮解除するかを指定します。</summary>
    </member>
    <member name="F:System.IO.Compression.CompressionMode.Compress">
      <summary>基になるストリームを圧縮します。</summary>
    </member>
    <member name="F:System.IO.Compression.CompressionMode.Decompress">
      <summary>基になるストリームの圧縮を解除します。</summary>
    </member>
    <member name="T:System.IO.Compression.DeflateStream">
      <summary>Deflate アルゴリズムを使用してストリームを圧縮および圧縮解除するためのメソッドとプロパティを提供します。</summary>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
      <summary>指定したストリームと圧縮レベルを使用して、<see cref="T:System.IO.Compression.DeflateStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream">圧縮するストリーム。</param>
      <param name="compressionLevel">ストリームの圧縮時に速度または圧縮の効率性を強調するかどうかを示す列挙値の 1 つ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">ストリームは圧縮などの書き込み操作をサポートしません  (ストリーム オブジェクトの <see cref="P:System.IO.Stream.CanWrite" /> プロパティは <see langword="false" /> です)。</exception>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
      <summary>指定したストリームと圧縮レベルを使用して <see cref="T:System.IO.Compression.DeflateStream" /> クラスの新しいインスタンスを初期化し、必要に応じて、ストリームを開いたままにします。</summary>
      <param name="stream">圧縮するストリーム。</param>
      <param name="compressionLevel">ストリームの圧縮時に速度または圧縮の効率性を強調するかどうかを示す列挙値の 1 つ。</param>
      <param name="leaveOpen">
        <see cref="T:System.IO.Compression.DeflateStream" /> オブジェクトを破棄した後にストリーム オブジェクトを開いたままにする場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">ストリームは圧縮などの書き込み操作をサポートしません  (ストリーム オブジェクトの <see cref="P:System.IO.Stream.CanWrite" /> プロパティは <see langword="false" /> です)。</exception>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
      <summary>指定したストリームと圧縮モードを使用して、<see cref="T:System.IO.Compression.DeflateStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream">圧縮または圧縮解除するストリーム。</param>
      <param name="mode">ストリームを圧縮するか圧縮解除するかを示す列挙値の 1 つ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> は正しい <see cref="T:System.IO.Compression.CompressionMode" /> 値ではありません。  
  
- または - 
 <see cref="T:System.IO.Compression.CompressionMode" /> が <see cref="F:System.IO.Compression.CompressionMode.Compress" /> で、<see cref="P:System.IO.Stream.CanWrite" /> が <see langword="false" /> です。  
  
- または - 
 <see cref="T:System.IO.Compression.CompressionMode" /> が <see cref="F:System.IO.Compression.CompressionMode.Decompress" /> で、<see cref="P:System.IO.Stream.CanRead" /> が <see langword="false" /> です。</exception>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
      <summary>指定したストリームと圧縮モードを使用して <see cref="T:System.IO.Compression.DeflateStream" /> クラスの新しいインスタンスを初期化し、必要に応じて、ストリームを開いたままにします。</summary>
      <param name="stream">圧縮または圧縮解除するストリーム。</param>
      <param name="mode">ストリームを圧縮するか圧縮解除するかを示す列挙値の 1 つ。</param>
      <param name="leaveOpen">
        <see cref="T:System.IO.Compression.DeflateStream" /> オブジェクトを破棄した後にストリームを開いたままにする場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> は正しい <see cref="T:System.IO.Compression.CompressionMode" /> 値ではありません。  
  
- または - 
 <see cref="T:System.IO.Compression.CompressionMode" /> が <see cref="F:System.IO.Compression.CompressionMode.Compress" /> で、<see cref="P:System.IO.Stream.CanWrite" /> が <see langword="false" /> です。  
  
- または - 
 <see cref="T:System.IO.Compression.CompressionMode" /> が <see cref="F:System.IO.Compression.CompressionMode.Decompress" /> で、<see cref="P:System.IO.Stream.CanRead" /> が <see langword="false" /> です。</exception>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>非同期の読み込み動作を開始します。 (代わりに、<see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> メソッドの使用を検討します)。</summary>
      <param name="buffer">データを読み取るバイト配列。</param>
      <param name="offset">ストリームからのデータの読み込み開始位置を示す <paramref name="array" /> 内のバイト オフセット。</param>
      <param name="count">読み取る最大バイト数。</param>
      <param name="asyncCallback">読み取り操作の完了時に呼び出されるオプションの非同期コールバック。</param>
      <param name="asyncState">この特定の非同期読み取り要求を他の要求と区別するために使用するユーザー指定のオブジェクト。</param>
      <exception cref="T:System.IO.IOException">メソッドは、ストリームの末尾を越えて非同期的に読み取ろうとしました。または、ディスク エラーが発生しました。</exception>
      <exception cref="T:System.ArgumentException">1 つ以上の引数が無効です。</exception>
      <exception cref="T:System.ObjectDisposedException">ストリームが閉じた後でメソッドが呼び出されました。</exception>
      <exception cref="T:System.NotSupportedException">現在の <see cref="T:System.IO.Compression.DeflateStream" /> 実装は、読み取り操作をサポートしていません。</exception>
      <exception cref="T:System.InvalidOperationException">この呼び出しは完了できません。</exception>
      <returns>まだ保留中である可能性がある非同期の読み取り操作を表すオブジェクト。</returns>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>非同期の書き込み操作を開始します。 (代わりに、<see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> メソッドの使用を検討します)。</summary>
      <param name="array">データの書き込み元となるバッファー。</param>
      <param name="offset">書き込むデータの開始位置を示す <paramref name="buffer" /> 内のバイト オフセット。</param>
      <param name="count">書き込む最大バイト数。</param>
      <param name="asyncCallback">書き込みの操作完了時に呼び出されるオプションの非同期コールバック。</param>
      <param name="asyncState">この特定の非同期書き込み要求を他の要求と区別するために使用するユーザー指定のオブジェクト。</param>
      <exception cref="T:System.IO.IOException">メソッドは、ストリームの末尾を越えて非同期的に書き込もうとしました。または、ディスク エラーが発生しました。</exception>
      <exception cref="T:System.ArgumentException">1 つ以上の引数が無効です。</exception>
      <exception cref="T:System.ObjectDisposedException">ストリームが閉じた後でメソッドが呼び出されました。</exception>
      <exception cref="T:System.NotSupportedException">現在の <see cref="T:System.IO.Compression.DeflateStream" /> 実装は、書き込み操作をサポートしていません。</exception>
      <exception cref="T:System.InvalidOperationException">ストリームが閉じているため、書き込み操作を実行できません。</exception>
      <returns>まだ保留中である可能性がある非同期の書き込み操作を表すオブジェクト。</returns>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.CopyTo(System.IO.Stream,System.Int32)">
      <summary>指定したバッファー サイズを使用して、現在の Deflate ストリームからバイトを読み取り、別のストリームに書き込みます。</summary>
      <param name="destination">現在の Deflate ストリームの内容のコピー先のストリーム。</param>
      <param name="bufferSize">バッファーのサイズ。 これは、0 より大きい値である必要があります。 既定のサイズは 81920 です。</param>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
      <summary>指定のバッファー サイズを使用して、現在の Deflate ストリームからバイトを非同期に読み取り、別のストリームに書き込みます。</summary>
      <param name="destination">現在の Deflate ストリームの内容のコピー先のストリーム。</param>
      <param name="bufferSize">バッファーのサイズ (バイト数)。 これは、0 より大きい値である必要があります。 既定のサイズは 81920 です。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns>非同期のコピー操作を表すタスク。</returns>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.IO.Compression.DeflateStream" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.DisposeAsync">
      <summary>
        <see cref="T:System.IO.Compression.DeflateStream" /> によって使用されているアンマネージ リソースを非同期に解放します。</summary>
      <returns>非同期の破棄操作を表すタスク。</returns>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.EndRead(System.IAsyncResult)">
      <summary>保留中の非同期読み取りが完了するまで待機します。 (代わりに、<see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> メソッドの使用を検討します)。</summary>
      <param name="asyncResult">終了させる保留状態の非同期リクエストへの参照。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> は現在のストリームの <see cref="M:System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> メソッドから取得されませんでした。</exception>
      <exception cref="T:System.SystemException">
        <see cref="M:System.Threading.WaitHandle.WaitOne" /> の呼び出し中に例外がスローされました。</exception>
      <exception cref="T:System.InvalidOperationException">このストリームに対する非同期の読み取り操作がまだ完了していないため、終了呼び出しは無効です。

- または -

ストリームが <see langword="null" /> です。</exception>
      <returns>ストリームから読み取ったバイト数 (0 ～要求したバイト数の数値)。 <see cref="T:System.IO.Compression.DeflateStream" /> が 0 を返すのは、ストリームの末尾で読み取ろうとしたときだけです。それ以外の場合は、少なくとも 1 バイトが読み取り可能になるまでブロックします。</returns>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.EndWrite(System.IAsyncResult)">
      <summary>非同期書き込み操作を終了します。 (代わりに、<see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> メソッドの使用を検討します)。</summary>
      <param name="asyncResult">保留状態の非同期 I/O リクエストへの参照。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> は現在のストリームの <see cref="M:System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> メソッドから取得されませんでした。</exception>
      <exception cref="T:System.Exception">
        <see cref="M:System.Threading.WaitHandle.WaitOne" /> の呼び出し中に例外がスローされました。</exception>
      <exception cref="T:System.InvalidOperationException">ストリームが <see langword="null" /> です。

- または -

終了書き込みの呼び出しは無効です。</exception>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.Flush">
      <summary>現在実装されているこのメソッドは、何の機能も提供しません。</summary>
      <exception cref="T:System.ObjectDisposedException">ストリームは閉じられています。</exception>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.FlushAsync(System.Threading.CancellationToken)">
      <summary>この Deflate ストリームに対応するすべてのバッファーを非同期にクリアし、バッファー内のデータを基になるデバイスに書き込み、キャンセル要求を監視します。</summary>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns>非同期のフラッシュ操作を表すタスク。</returns>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>圧縮解除されたバイト数を、指定したバイト配列に読み取ります。</summary>
      <param name="array">圧縮解除されたバイトを格納するための配列。</param>
      <param name="offset">読み取られるバイトが配置される <paramref name="array" /> 内のバイト オフセット。</param>
      <param name="count">読み取られる、圧縮解除されたバイトの最大数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException">オブジェクトが作成されたとき、<see cref="T:System.IO.Compression.CompressionMode" /> 値が <see langword="Compress" /> でした。  
  
- または - 
基になるストリームが読み取りをサポートしていません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> または <paramref name="count" /> が 0 未満です。  
  
- または - 
 <paramref name="array" /> の長さからインデックスの開始点を引いた値が <paramref name="count" /> 未満です。</exception>
      <exception cref="T:System.IO.InvalidDataException">データ形式が無効です。</exception>
      <exception cref="T:System.ObjectDisposedException">ストリームは閉じられています。</exception>
      <returns>バイト配列に読み取られたバイト数。</returns>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.Read(System.Span{System.Byte})">
      <summary>現在の Deflate ストリームからバイト スパンにバイト シーケンスを読み取り、読み取られたバイト数だけ Deflate ストリーム内の位置を進めます。</summary>
      <param name="buffer">メモリの領域。 このメソッドが戻ると、この領域のコンテンツは現在のソースから読み取られたバイトに置き換えられます。</param>
      <returns>バッファーに読み取られた合計バイト数。 要求しただけのバイト数を読み取ることができなかった場合、この値はバッファーに割り当てられているバイト数より小さくなります。ストリームの末尾に到達した場合は 0 (ゼロ) になることがあります。</returns>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>現在の Deflate ストリームからバイト シーケンスを非同期に読み取り、バイト配列に書き込んで、読み取られたバイト数だけ Deflate ストリーム内の位置を進め、キャンセル要求を監視します。</summary>
      <param name="array">データを書き込むバッファー。</param>
      <param name="offset">Deflate ストリームからのデータの書き込み開始位置を示す <paramref name="array" /> 内のバイト オフセット。</param>
      <param name="count">読み取る最大バイト数。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns>非同期の読み取り操作を表すタスク。<paramref name="array" /> に読み取られたバイト数の合計がラップされます。 現在使用できるバイト数が要求した数より小さい場合、結果の値は要求したバイト数より小さくなることがあります。また、Deflate ストリームの末尾に到達した場合は 0 になることがあります。</returns>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>現在の Deflate ストリームからバイト シーケンスを非同期に読み取り、バイト メモリの範囲に書き込んで、読み取られたバイト数だけ Deflate ストリーム内の位置を進め、キャンセル要求を監視します。</summary>
      <param name="buffer">データを書き込むメモリの領域。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns>非同期の読み取り操作を表すタスク。バッファーに読み取られたバイト数の合計がラップされます。 要求しただけのバイト数を読み取ることができなかった場合、結果の値はバッファーに割り当てられているバイト数より小さくなります。Deflate ストリームの末尾に到達した場合は 0 (ゼロ) になることがあります。</returns>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.ReadByte">
      <summary>ストリームから 1 バイトを読み取り、Deflate ストリーム内の位置を 1 バイト進めます。Deflate ストリームの末尾の場合は -1 を返します。</summary>
      <returns>
        <see cref="T:System.Int32" /> にキャストされた符号なしバイト。ストリームの末尾の場合は -1。</returns>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>この操作はサポートされていないため、常に <see cref="T:System.NotSupportedException" /> をスローします。</summary>
      <param name="offset">ストリーム内の位置。</param>
      <param name="origin">
        <see cref="T:System.IO.SeekOrigin" /> 値のいずれか 1 つ。</param>
      <exception cref="T:System.NotSupportedException">このストリームでは、このプロパティはサポートされていません。</exception>
      <returns>long 値。</returns>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.SetLength(System.Int64)">
      <summary>この操作はサポートされていないため、常に <see cref="T:System.NotSupportedException" /> をスローします。</summary>
      <param name="value">ストリームの長さです。</param>
      <exception cref="T:System.NotSupportedException">このストリームでは、このプロパティはサポートされていません。</exception>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>圧縮されたバイトを、指定したバイト配列から基になるストリームに書き込みます。</summary>
      <param name="array">圧縮するデータを格納しているバッファー。</param>
      <param name="offset">バイトの読み取り元となる <paramref name="array" /> 内のバイト オフセット。</param>
      <param name="count">書き込む最大バイト数。</param>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.Write(System.ReadOnlySpan{System.Byte})">
      <summary>現在の Deflate ストリームにバイト シーケンスを書き込み、書き込んだバイト数だけ Deflate ストリーム内の現在位置を進めます。</summary>
      <param name="buffer">メモリの領域。 このメソッドでは、この領域のコンテンツが現在の Deflate ストリームにコピーされます。</param>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>圧縮されたバイトを、指定されたバイト配列から、基になる Deflate ストリームに非同期で書き込みます。</summary>
      <param name="array">圧縮するデータを格納しているバッファー。</param>
      <param name="offset">Deflate ストリームへのバイトのコピー元となる <paramref name="array" /> 内のゼロベースのバイト オフセット。</param>
      <param name="count">書き込む最大バイト数。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns>非同期の書き込み操作を表すタスク。</returns>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary>圧縮されたバイトを、指定された読み取り専用メモリ領域から、基になる Deflate ストリームに非同期で書き込みます。</summary>
      <param name="buffer">データを書き込む元のメモリの領域。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns>非同期の書き込み操作を表すタスク。</returns>
    </member>
    <member name="P:System.IO.Compression.DeflateStream.BaseStream">
      <summary>基になるストリームへの参照を取得します。</summary>
      <exception cref="T:System.ObjectDisposedException">基になるストリームが閉じられました。</exception>
      <returns>基になるストリームを表すストリーム オブジェクト。</returns>
    </member>
    <member name="P:System.IO.Compression.DeflateStream.CanRead">
      <summary>ファイルの圧縮解除中にストリームが読み取りをサポートするかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.IO.Compression.CompressionMode" /> 値が <see langword="Decompress" /> で、基になるストリームが開いており、読み取りをサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.IO.Compression.DeflateStream.CanSeek">
      <summary>ストリームがシークをサポートしているかどうかを示す値を取得します。</summary>
      <returns>常に <see langword="false" />。</returns>
    </member>
    <member name="P:System.IO.Compression.DeflateStream.CanWrite">
      <summary>ストリームが書き込みをサポートしているかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.IO.Compression.CompressionMode" /> 値が <see langword="Compress" /> で、基になるストリームが書き込みをサポートし、閉じられていない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.IO.Compression.DeflateStream.Length">
      <summary>このプロパティはサポートされていないため、常に <see cref="T:System.NotSupportedException" /> をスローします。</summary>
      <exception cref="T:System.NotSupportedException">このストリームでは、このプロパティはサポートされていません。</exception>
      <returns>long 値。</returns>
    </member>
    <member name="P:System.IO.Compression.DeflateStream.Position">
      <summary>このプロパティはサポートされていないため、常に <see cref="T:System.NotSupportedException" /> をスローします。</summary>
      <exception cref="T:System.NotSupportedException">このストリームでは、このプロパティはサポートされていません。</exception>
      <returns>long 値。</returns>
    </member>
    <member name="T:System.IO.Compression.GZipStream">
      <summary>GZip データ形式の仕様を使ってストリームを圧縮および圧縮解除するために使用するメソッドとプロパティを提供します。</summary>
    </member>
    <member name="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
      <summary>指定したストリームと圧縮レベルを使用して、<see cref="T:System.IO.Compression.GZipStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream">圧縮するストリーム。</param>
      <param name="compressionLevel">ストリームの圧縮時に速度または圧縮の効率性を強調するかどうかを示す列挙値の 1 つ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">ストリームは圧縮などの書き込み操作をサポートしません  (ストリーム オブジェクトの <see cref="P:System.IO.Stream.CanWrite" /> プロパティは <see langword="false" /> です)。</exception>
    </member>
    <member name="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
      <summary>指定したストリームと圧縮レベルを使用して <see cref="T:System.IO.Compression.GZipStream" /> クラスの新しいインスタンスを初期化し、必要に応じて、ストリームを開いたままにします。</summary>
      <param name="stream">圧縮されたデータを書き込むストリーム。</param>
      <param name="compressionLevel">ストリームの圧縮時に速度または圧縮の効率性を強調するかどうかを示す列挙値の 1 つ。</param>
      <param name="leaveOpen">
        <see cref="T:System.IO.Compression.GZipStream" /> オブジェクトを破棄した後にストリーム オブジェクトを開いたままにする場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">ストリームは圧縮などの書き込み操作をサポートしません  (ストリーム オブジェクトの <see cref="P:System.IO.Stream.CanWrite" /> プロパティは <see langword="false" /> です)。</exception>
    </member>
    <member name="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
      <summary>指定したストリームと圧縮モードを使用して、<see cref="T:System.IO.Compression.GZipStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream">圧縮されたデータまたは圧縮解除されたデータが書き込まれるストリーム。</param>
      <param name="mode">ストリームを圧縮するか圧縮解除するかを示す列挙値の 1 つ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> が有効な <see cref="T:System.IO.Compression.CompressionMode" /> 列挙値ではありません。  
  
- または - 
 <see cref="T:System.IO.Compression.CompressionMode" /> が <see cref="F:System.IO.Compression.CompressionMode.Compress" /> で、<see cref="P:System.IO.Stream.CanWrite" /> が <see langword="false" /> です。  
  
- または - 
 <see cref="T:System.IO.Compression.CompressionMode" /> が <see cref="F:System.IO.Compression.CompressionMode.Decompress" /> で、<see cref="P:System.IO.Stream.CanRead" /> が <see langword="false" /> です。</exception>
    </member>
    <member name="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
      <summary>指定したストリームと圧縮モードを使用して <see cref="T:System.IO.Compression.GZipStream" /> クラスの新しいインスタンスを初期化し、必要に応じて、ストリームを開いたままにします。</summary>
      <param name="stream">圧縮するストリーム。</param>
      <param name="mode">ストリームを圧縮するか圧縮解除するかを示す列挙値の 1 つ。</param>
      <param name="leaveOpen">
        <see cref="T:System.IO.Compression.GZipStream" /> オブジェクトを破棄した後にストリームを開いたままにする場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> は正しい <see cref="T:System.IO.Compression.CompressionMode" /> 値ではありません。  
  
- または - 
 <see cref="T:System.IO.Compression.CompressionMode" /> が <see cref="F:System.IO.Compression.CompressionMode.Compress" /> で、<see cref="P:System.IO.Stream.CanWrite" /> が <see langword="false" /> です。  
  
- または - 
 <see cref="T:System.IO.Compression.CompressionMode" /> が <see cref="F:System.IO.Compression.CompressionMode.Decompress" /> で、<see cref="P:System.IO.Stream.CanRead" /> が <see langword="false" /> です。</exception>
    </member>
    <member name="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>非同期の読み込み動作を開始します。 (代わりに、<see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> メソッドの使用を検討します)。</summary>
      <param name="array">データを読み取るバイト配列。</param>
      <param name="offset">ストリームからのデータの読み込み開始位置を示す <paramref name="array" /> 内のバイト オフセット。</param>
      <param name="count">読み取る最大バイト数。</param>
      <param name="asyncCallback">読み取り操作の完了時に呼び出されるオプションの非同期コールバック。</param>
      <param name="asyncState">この特定の非同期読み取り要求を他の要求と区別するために使用するユーザー指定のオブジェクト。</param>
      <exception cref="T:System.IO.IOException">メソッドは、ストリームの末尾を越えて非同期的に読み取ろうとしました。または、ディスク エラーが発生しました。</exception>
      <exception cref="T:System.ArgumentException">1 つ以上の引数が無効です。</exception>
      <exception cref="T:System.ObjectDisposedException">ストリームが閉じた後でメソッドが呼び出されました。</exception>
      <exception cref="T:System.NotSupportedException">現在の <see cref="T:System.IO.Compression.GZipStream" /> 実装は、読み取り操作をサポートしていません。</exception>
      <exception cref="T:System.InvalidOperationException">ストリームが閉じているため、読み取り操作を実行できません。</exception>
      <returns>まだ保留中である可能性がある非同期の読み取り操作を表すオブジェクト。</returns>
    </member>
    <member name="M:System.IO.Compression.GZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>非同期の書き込み操作を開始します。 (代わりに、<see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> メソッドの使用を検討します)。</summary>
      <param name="array">現在のストリームに書き込むデータを格納しているバッファー。</param>
      <param name="offset">書き込みの開始位置を示す <paramref name="array" /> 内のバイト オフセット。</param>
      <param name="count">書き込む最大バイト数。</param>
      <param name="asyncCallback">書き込みの操作完了時に呼び出されるオプションの非同期コールバック。</param>
      <param name="asyncState">この特定の非同期書き込み要求を他の要求と区別するために使用するユーザー指定のオブジェクト。</param>
      <exception cref="T:System.InvalidOperationException">基になるストリームが <see langword="null" /> です。  
  
- または - 
基になるストリームが閉じられました。</exception>
      <returns>まだ保留中である可能性がある非同期の書き込み操作を表すオブジェクト。</returns>
    </member>
    <member name="M:System.IO.Compression.GZipStream.CopyTo(System.IO.Stream,System.Int32)">
      <summary>指定したバッファー サイズを使用して、現在の GZip ストリームからバイトを読み取り、別のストリームに書き込みます。</summary>
      <param name="destination">現在の GZip ストリームの内容のコピー先のストリーム。</param>
      <param name="bufferSize">バッファーのサイズ。 これは、0 より大きい値である必要があります。 既定のサイズは 81920 です。</param>
    </member>
    <member name="M:System.IO.Compression.GZipStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
      <summary>指定のバッファー サイズを使用して、現在の GZip ストリームからバイトを非同期に読み取り、別のストリームに書き込みます。</summary>
      <param name="destination">現在の GZip ストリームの内容のコピー先のストリーム。</param>
      <param name="bufferSize">バッファーのサイズ (バイト数)。 これは、0 より大きい値である必要があります。 既定のサイズは 81920 です。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns>非同期のコピー操作を表すタスク。</returns>
    </member>
    <member name="M:System.IO.Compression.GZipStream.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.IO.Compression.GZipStream" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.IO.Compression.GZipStream.DisposeAsync">
      <summary>
        <see cref="T:System.IO.Compression.GZipStream" /> によって使用されているアンマネージ リソースを非同期に解放します。</summary>
      <returns>非同期の破棄操作を表すタスク。</returns>
    </member>
    <member name="M:System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)">
      <summary>保留中の非同期読み取りが完了するまで待機します。 (代わりに、<see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> メソッドの使用を検討します)。</summary>
      <param name="asyncResult">終了させる保留状態の非同期リクエストへの参照。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> は現在のストリームの <see cref="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> メソッドから取得されませんでした。</exception>
      <exception cref="T:System.InvalidOperationException">ストリームが閉じているため、終了操作を実行できません。</exception>
      <returns>ストリームから読み取ったバイト数 (0 ～要求したバイト数の数値)。 <see cref="T:System.IO.Compression.GZipStream" /> が 0 を返すのは、ストリームの末尾で読み取ろうとしたときだけです。それ以外の場合は、少なくとも 1 バイトが読み取り可能になるまでブロックします。</returns>
    </member>
    <member name="M:System.IO.Compression.GZipStream.EndWrite(System.IAsyncResult)">
      <summary>非同期書き込み操作の終了を処理します。 (代わりに、<see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> メソッドの使用を検討します)。</summary>
      <param name="asyncResult">非同期呼び出しを表すオブジェクト。</param>
      <exception cref="T:System.InvalidOperationException">基になるストリームが <see langword="null" /> です。  
  
- または - 
基になるストリームが閉じられました。</exception>
    </member>
    <member name="M:System.IO.Compression.GZipStream.Flush">
      <summary>内部バッファーをフラッシュします。</summary>
      <exception cref="T:System.ObjectDisposedException">基になるストリームが閉じられました。</exception>
    </member>
    <member name="M:System.IO.Compression.GZipStream.FlushAsync(System.Threading.CancellationToken)">
      <summary>この GZip ストリームに対応するすべてのバッファーを非同期にクリアし、バッファー内のデータを基になるデバイスに書き込み、キャンセル要求を監視します。</summary>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns>非同期のフラッシュ操作を表すタスク。</returns>
    </member>
    <member name="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>圧縮解除されたバイト数を、指定したバイト配列に読み取ります。</summary>
      <param name="array">圧縮解除されたバイトを格納するために使用する配列。</param>
      <param name="offset">読み取られるバイトが配置される <paramref name="array" /> 内のバイト オフセット。</param>
      <param name="count">読み取られる、圧縮解除されたバイトの最大数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException">オブジェクトが作成されたとき、<see cref="T:System.IO.Compression.CompressionMode" /> 値が <see langword="Compress" /> でした。  
  
- または - 
基になるストリームが読み取りをサポートしていません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> または <paramref name="count" /> が 0 未満です。  
  
- または - 
 <paramref name="array" /> の長さからインデックスの開始点を引いた値が <paramref name="count" /> 未満です。</exception>
      <exception cref="T:System.IO.InvalidDataException">データ形式が無効です。</exception>
      <exception cref="T:System.ObjectDisposedException">ストリームは閉じられています。</exception>
      <returns>圧縮解除されバイト配列に読み取られたバイト数。 既にストリームの末尾に到達している場合は、ゼロまたは読み取られたバイト数が返されます。</returns>
    </member>
    <member name="M:System.IO.Compression.GZipStream.Read(System.Span{System.Byte})">
      <summary>現在の GZip ストリームからバイト スパンにバイト シーケンスを読み取り、読み取られたバイト数だけ GZip ストリーム内の位置を進めます。</summary>
      <param name="buffer">メモリの領域。 このメソッドが戻ると、この領域のコンテンツは現在のソースから読み取られたバイトに置き換えられます。</param>
      <returns>バッファーに読み取られた合計バイト数。 要求しただけのバイト数を読み取ることができなかった場合、この値はバッファーに割り当てられているバイト数より小さくなります。ストリームの末尾に到達した場合は 0 (ゼロ) になることがあります。</returns>
    </member>
    <member name="M:System.IO.Compression.GZipStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>現在の GZip ストリームからバイト配列にバイト シーケンスを非同期に読み取り、読み取られたバイト数だけ GZip ストリーム内の位置を進め、キャンセル要求を監視します。</summary>
      <param name="array">データを書き込むバッファー。</param>
      <param name="offset">GZip ストリームからのデータの書き込み開始位置を示す <paramref name="array" /> 内のバイト オフセット。</param>
      <param name="count">読み取る最大バイト数。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns>非同期の読み取り操作を表すタスク。<paramref name="array" /> に読み取られたバイト数の合計がラップされます。 現在使用できるバイト数が要求した数より小さい場合、結果の値は要求したバイト数より小さくなることがあります。また、GZip ストリームの末尾に到達した場合は 0 になることがあります。</returns>
    </member>
    <member name="M:System.IO.Compression.GZipStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>現在の GZip ストリームからバイト メモリ領域にバイト シーケンスを非同期に読み取り、読み取られたバイト数だけ GZip ストリーム内の位置を進め、キャンセル要求を監視します。</summary>
      <param name="buffer">データを書き込むメモリの領域。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns>非同期の読み取り操作を表すタスク。バッファーに読み取られたバイト数の合計がラップされます。 要求しただけのバイト数を読み取ることができなかった場合、結果の値はバッファーに割り当てられているバイト数より小さくなります。GZip ストリームの末尾に到達した場合は 0 (ゼロ) になることがあります。</returns>
    </member>
    <member name="M:System.IO.Compression.GZipStream.ReadByte">
      <summary>ストリームから 1 バイトを読み取り、GZip ストリーム内の位置を 1 バイト進めます。GZip ストリームの末尾の場合は -1 を返します。</summary>
      <returns>
        <see cref="T:System.Int32" /> にキャストされた符号なしバイト。ストリームの末尾の場合は -1。</returns>
    </member>
    <member name="M:System.IO.Compression.GZipStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>このプロパティはサポートされていないため、常に <see cref="T:System.NotSupportedException" /> をスローします。</summary>
      <param name="offset">ストリーム内の位置。</param>
      <param name="origin">
        <see cref="T:System.IO.SeekOrigin" /> 値のいずれか 1 つ。</param>
      <exception cref="T:System.NotSupportedException">このストリームでは、このプロパティはサポートされていません。</exception>
      <returns>long 値。</returns>
    </member>
    <member name="M:System.IO.Compression.GZipStream.SetLength(System.Int64)">
      <summary>このプロパティはサポートされていないため、常に <see cref="T:System.NotSupportedException" /> をスローします。</summary>
      <param name="value">ストリームの長さです。</param>
      <exception cref="T:System.NotSupportedException">このストリームでは、このプロパティはサポートされていません。</exception>
    </member>
    <member name="M:System.IO.Compression.GZipStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>圧縮されたバイトを、指定されたバイト配列から、基になる GZip ストリームに書き込みます。</summary>
      <param name="array">圧縮するデータを格納しているバッファー。</param>
      <param name="offset">バイトの読み取り元となる <paramref name="array" /> 内のバイト オフセット。</param>
      <param name="count">書き込む最大バイト数。</param>
      <exception cref="T:System.ObjectDisposedException">ストリームが閉じているため、書き込み操作を実行できません。</exception>
    </member>
    <member name="M:System.IO.Compression.GZipStream.Write(System.ReadOnlySpan{System.Byte})">
      <summary>読み取り専用バイト スパンから現在の GZip ストリームにバイト シーケンスを書き込み、書き込まれたバイト数だけこの GZip ストリーム内の現在位置を進めます。</summary>
      <param name="buffer">メモリの領域。 このメソッドでは、この領域のコンテンツが現在の GZip ストリームにコピーされます。</param>
    </member>
    <member name="M:System.IO.Compression.GZipStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>圧縮されたバイトを、指定のバイト配列から、基になる GZip ストリームに非同期で書き込みます。</summary>
      <param name="array">圧縮するデータを格納しているバッファー。</param>
      <param name="offset">GZip ストリームへのバイトのコピーを開始する位置を示す <paramref name="array" /> 内のバイト オフセット。インデックス番号は 0 から始まります。</param>
      <param name="count">書き込む最大バイト数。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns>非同期の書き込み操作を表すタスク。</returns>
    </member>
    <member name="M:System.IO.Compression.GZipStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary>圧縮されたバイトを、指定された読み取り専用バイト メモリ領域から、基になる GZip ストリームに非同期で書き込みます。</summary>
      <param name="buffer">データを書き込む元のメモリの領域。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns>非同期の書き込み操作を表すタスク。</returns>
    </member>
    <member name="P:System.IO.Compression.GZipStream.BaseStream">
      <summary>基になるストリームへの参照を取得します。</summary>
      <exception cref="T:System.ObjectDisposedException">基になるストリームが閉じられました。</exception>
      <returns>基になるストリームを表すストリーム オブジェクト。</returns>
    </member>
    <member name="P:System.IO.Compression.GZipStream.CanRead">
      <summary>ファイルの圧縮解除中にストリームが読み取りをサポートするかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.IO.Compression.CompressionMode" /> 値が <see langword="Decompress," /> で、基になるストリームが読み取りをサポートし、閉じられていない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.IO.Compression.GZipStream.CanSeek">
      <summary>ストリームがシークをサポートしているかどうかを示す値を取得します。</summary>
      <returns>常に <see langword="false" />。</returns>
    </member>
    <member name="P:System.IO.Compression.GZipStream.CanWrite">
      <summary>ストリームが書き込みをサポートしているかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.IO.Compression.CompressionMode" /> 値が <see langword="Compress" /> で、基になるストリームが書き込みをサポートし、閉じられていない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.IO.Compression.GZipStream.Length">
      <summary>このプロパティはサポートされていないため、常に <see cref="T:System.NotSupportedException" /> をスローします。</summary>
      <exception cref="T:System.NotSupportedException">このストリームでは、このプロパティはサポートされていません。</exception>
      <returns>long 値。</returns>
    </member>
    <member name="P:System.IO.Compression.GZipStream.Position">
      <summary>このプロパティはサポートされていないため、常に <see cref="T:System.NotSupportedException" /> をスローします。</summary>
      <exception cref="T:System.NotSupportedException">このストリームでは、このプロパティはサポートされていません。</exception>
      <returns>long 値。</returns>
    </member>
    <member name="T:System.IO.Compression.ZipArchive">
      <summary>zip アーカイブ形式の圧縮ファイルのパッケージを表します。</summary>
    </member>
    <member name="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream)">
      <summary>指定したストリームから <see cref="T:System.IO.Compression.ZipArchive" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream">読み取るアーカイブを格納しているストリーム。</param>
      <exception cref="T:System.ArgumentException">ストリームが既に閉じているか、読み取りをサポートしていません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.IO.InvalidDataException">ストリームの内容は zip アーカイブのフォームにありません。</exception>
    </member>
    <member name="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode)">
      <summary>指定したストリームと指定したモードから <see cref="T:System.IO.Compression.ZipArchive" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream">入力ストリームまたは出力ストリーム。</param>
      <param name="mode">zip のアーカイブがエントリの読み込み、作成、または更新に使用されているかどうかを示す列挙値の 1 つ。</param>
      <exception cref="T:System.ArgumentException">ストリームは既に終了しているか、ストリームの機能がモードに一致しません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> が無効な値です。</exception>
      <exception cref="T:System.IO.InvalidDataException">ストリームの内容は zip のアーカイブとして解釈できません。  
  
- または - 
 <paramref name="mode" /> が <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> で、エントリがアーカイブにないか、または破損していて読み取ることができません。  
  
- または - 
 <paramref name="mode" /> が <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> で、エントリが大きすぎてメモリに収まりません。</exception>
    </member>
    <member name="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean)">
      <summary>指定されたモードの指定されたストリームで <see cref="T:System.IO.Compression.ZipArchive" /> クラスの新しいインスタンスを初期化し、必要に応じて、ストリームを開いたままにします。</summary>
      <param name="stream">入力ストリームまたは出力ストリーム。</param>
      <param name="mode">zip のアーカイブがエントリの読み込み、作成、または更新に使用されているかどうかを示す列挙値の 1 つ。</param>
      <param name="leaveOpen">
        <see cref="T:System.IO.Compression.ZipArchive" /> オブジェクトを破棄した後にストリームを開いたままにする場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentException">ストリームは既に終了しているか、ストリームの機能がモードに一致しません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> が無効な値です。</exception>
      <exception cref="T:System.IO.InvalidDataException">ストリームの内容は zip のアーカイブとして解釈できません。  
  
- または - 
 <paramref name="mode" /> が <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> で、エントリがアーカイブにないか、または破損していて読み取ることができません。  
  
- または - 
 <paramref name="mode" /> が <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> で、エントリが大きすぎてメモリに収まりません。</exception>
    </member>
    <member name="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean,System.Text.Encoding)">
      <summary>指定されたモードの指定されたストリームで <see cref="T:System.IO.Compression.ZipArchive" /> クラスの新しいインスタンスを初期化し、エントリ名に指定されたエンコーディングを使用します。また、必要に応じて、ストリームを開いたままにします。</summary>
      <param name="stream">入力ストリームまたは出力ストリーム。</param>
      <param name="mode">zip のアーカイブがエントリの読み込み、作成、または更新に使用されているかどうかを示す列挙値の 1 つ。</param>
      <param name="leaveOpen">
        <see cref="T:System.IO.Compression.ZipArchive" /> オブジェクトを破棄した後にストリームを開いたままにする場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
      <param name="entryNameEncoding">このアーカイブのエントリ名の読み取りまたは書き込み時に使用するエンコード。 エントリ名の UTF-8 エンコードをサポートしない zip アーカイブ ツールとライブラリとの相互運用性のためにエンコードが必要な場合にのみ、このパラメーターの値を指定してください。</param>
      <exception cref="T:System.ArgumentException">ストリームは既に終了しているか、ストリームの機能がモードに一致しません。

- または -

<paramref name="entryNameEncoding" /> に対して UTF-8 以外のエンコードが指定されています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> が無効な値です。</exception>
      <exception cref="T:System.IO.InvalidDataException">ストリームの内容は zip のアーカイブとして解釈できません。  
  
- または - 
 <paramref name="mode" /> が <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> で、エントリがアーカイブにないか、または破損していて読み取ることができません。  
  
- または - 
 <paramref name="mode" /> が <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> で、エントリが大きすぎてメモリに収まりません。</exception>
    </member>
    <member name="M:System.IO.Compression.ZipArchive.CreateEntry(System.String)">
      <summary>指定したパスとエントリ名を持つ空のエントリを zip アーカイブに作成します。</summary>
      <param name="entryName">作成されるエントリの名前を指定する、アーカイブのルートを基準とするパス。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="entryName" /> が <see cref="F:System.String.Empty" />です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="entryName" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.NotSupportedException">zip アーカイブは書き込みをサポートしません。</exception>
      <exception cref="T:System.ObjectDisposedException">zip アーカイブが破棄されました。</exception>
      <returns>zip アーカイブ内の空のエントリ。</returns>
    </member>
    <member name="M:System.IO.Compression.ZipArchive.CreateEntry(System.String,System.IO.Compression.CompressionLevel)">
      <summary>指定したエントリ名と圧縮レベルを持つ空のエントリを zip アーカイブに作成します。</summary>
      <param name="entryName">作成されるエントリの名前を指定する、アーカイブのルートを基準とするパス。</param>
      <param name="compressionLevel">エントリの作成時に速度または圧縮の有効性を強調するかどうかを示す列挙値の 1 つ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="entryName" /> が <see cref="F:System.String.Empty" />です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="entryName" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.NotSupportedException">zip アーカイブは書き込みをサポートしません。</exception>
      <exception cref="T:System.ObjectDisposedException">zip アーカイブが破棄されました。</exception>
      <returns>zip アーカイブ内の空のエントリ。</returns>
    </member>
    <member name="M:System.IO.Compression.ZipArchive.Dispose">
      <summary>
        <see cref="T:System.IO.Compression.ZipArchive" /> クラスの現在のインスタンスによって使用されているリソースを解放します。</summary>
    </member>
    <member name="M:System.IO.Compression.ZipArchive.Dispose(System.Boolean)">
      <summary>
        <see cref="M:System.IO.Compression.ZipArchive.Dispose" /> クラスの現在のインスタンスによって使用されるアンマネージド リソースを解放するために、<see cref="M:System.Object.Finalize" /> メソッドと <see cref="T:System.IO.Compression.ZipArchive" /> メソッドによって呼び出されます。オプションで、アーカイブの書き込みを終了し、マネージド リソースを解放できます。</summary>
      <param name="disposing">アーカイブの書き込みを終了し、アンマネージド リソースとマネージド リソースを解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.IO.Compression.ZipArchive.GetEntry(System.String)">
      <summary>zip アーカイブ内の指定したエントリのラッパーを取得します。</summary>
      <param name="entryName">取得するエントリを識別する、アーカイブのルートを基準とするパス。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="entryName" /> が <see cref="F:System.String.Empty" />です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="entryName" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.NotSupportedException">zip アーカイブは読み取りをサポートしません。</exception>
      <exception cref="T:System.ObjectDisposedException">zip アーカイブが破棄されました。</exception>
      <exception cref="T:System.IO.InvalidDataException">zip アーカイブが破損しているため、エントリを取得できません。</exception>
      <returns>アーカイブ内の指定されたエントリのラッパー。エントリがアーカイブに存在しない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.IO.Compression.ZipArchive.Entries">
      <summary>現在 zip アーカイブ内にあるエントリのコレクションを取得します。</summary>
      <exception cref="T:System.NotSupportedException">zip アーカイブは読み取りをサポートしません。</exception>
      <exception cref="T:System.ObjectDisposedException">zip アーカイブが破棄されました。</exception>
      <exception cref="T:System.IO.InvalidDataException">zip アーカイブが破損しているため、エントリを取得できません。</exception>
      <returns>現在 zip アーカイブ内にあるエントリのコレクション。</returns>
    </member>
    <member name="P:System.IO.Compression.ZipArchive.Mode">
      <summary>zip アーカイブがエントリで実行できる操作の種類を示す値を取得します。</summary>
      <returns>zip のアーカイブがエントリ上で実行できる操作の種類 (読み込み、作成、または更新) を示す列挙値の 1 つ。</returns>
    </member>
    <member name="T:System.IO.Compression.ZipArchiveEntry">
      <summary>zip アーカイブ内の圧縮ファイルを表します。</summary>
    </member>
    <member name="M:System.IO.Compression.ZipArchiveEntry.Delete">
      <summary>zip アーカイブからエントリを削除します。</summary>
      <exception cref="T:System.IO.IOException">エントリは、読み取り用または書き込み用に既に開いています。</exception>
      <exception cref="T:System.NotSupportedException">このエントリの zip アーカイブは、<see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> 以外のモードで開かれました。</exception>
      <exception cref="T:System.ObjectDisposedException">このエントリの zip アーカイブは破棄されています。</exception>
    </member>
    <member name="M:System.IO.Compression.ZipArchiveEntry.Open">
      <summary>zip のアーカイブからエントリを開きます。</summary>
      <exception cref="T:System.IO.IOException">書き込みのため、エントリが現在既に開いています。  
  
- または - 
エントリはアーカイブから削除されました。  
  
- または - 
このエントリのアーカイブは <see cref="F:System.IO.Compression.ZipArchiveMode.Create" /> モードで開き、このエントリは既に記述されています。</exception>
      <exception cref="T:System.IO.InvalidDataException">エントリがアーカイブにないか、または破損していて読み取ることができません。  
  
 - または -  
  
 サポートされていない圧縮方式を使用してエントリが圧縮されています。</exception>
      <exception cref="T:System.ObjectDisposedException">このエントリの zip アーカイブは破棄されています。</exception>
      <returns>エントリの内容を表すストリーム。</returns>
    </member>
    <member name="M:System.IO.Compression.ZipArchiveEntry.ToString">
      <summary>zip アーカイブ内のエントリの相対パスを取得します。</summary>
      <returns>エントリの相対パス。これは <see cref="P:System.IO.Compression.ZipArchiveEntry.FullName" /> プロパティに格納されている値です。</returns>
    </member>
    <member name="P:System.IO.Compression.ZipArchiveEntry.Archive">
      <summary>エントリが属する zip アーカイブを取得します。</summary>
      <returns>エントリが属している zip アーカイブ、または、エントリが削除されている場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.IO.Compression.ZipArchiveEntry.CompressedLength">
      <summary>zip アーカイブ内のエントリの圧縮サイズを取得します。</summary>
      <exception cref="T:System.InvalidOperationException">プロパティの値は、エントリが変更されたため、使用できません。</exception>
      <returns>zip アーカイブ内のエントリの圧縮サイズ。</returns>
    </member>
    <member name="P:System.IO.Compression.ZipArchiveEntry.Crc32">
      <summary>32 ビットの巡回冗長検査。</summary>
      <returns>CRC-32 フィールドを表す符号なし整数 (4 バイト)。</returns>
    </member>
    <member name="P:System.IO.Compression.ZipArchiveEntry.ExternalAttributes">
      <summary>OS およびアプリケーション固有のファイル属性。</summary>
      <returns>このエントリが書き込まれたときにアプリケーションによって書き込まれた外部属性。 ホスト OS とアプリケーションの両方に依存します。</returns>
    </member>
    <member name="P:System.IO.Compression.ZipArchiveEntry.FullName">
      <summary>zip アーカイブ内のエントリの相対パスを取得します。</summary>
      <returns>zip アーカイブ内のエントリの相対パス。</returns>
    </member>
    <member name="P:System.IO.Compression.ZipArchiveEntry.LastWriteTime">
      <summary>zip アーカイブのエントリが最後に変更されたときを取得または設定します。</summary>
      <exception cref="T:System.NotSupportedException">エントリの zip のアーカイブが <see cref="F:System.IO.Compression.ZipArchiveMode.Read" /> モードであるため、このプロパティを設定しようとすると失敗しました。</exception>
      <exception cref="T:System.IO.IOException">アーカイブのモードは <see cref="F:System.IO.Compression.ZipArchiveMode.Create" />に設定されます。  
  
- または - 
アーカイブのモードは <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> に設定され、エントリが開かれました。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">このプロパティを、1980 年 1 月 1 日 0 時 00 分 00 秒より前の値または 2107 年 12 月 31 日 23 時 59 分 58 秒 (午前 0 時の 1 秒前) より後の値に設定しようとしました。</exception>
      <returns>zip アーカイブ内のエントリが最後に変更された時間。</returns>
    </member>
    <member name="P:System.IO.Compression.ZipArchiveEntry.Length">
      <summary>zip アーカイブ内のエントリの非圧縮サイズを取得します。</summary>
      <exception cref="T:System.InvalidOperationException">プロパティの値は、エントリが変更されたため、使用できません。</exception>
      <returns>zip アーカイブ内のエントリの非圧縮サイズ。</returns>
    </member>
    <member name="P:System.IO.Compression.ZipArchiveEntry.Name">
      <summary>zip アーカイブ内のエントリのファイル名を取得します。</summary>
      <returns>zip アーカイブ内のエントリのファイル名。</returns>
    </member>
    <member name="T:System.IO.Compression.ZipArchiveMode">
      <summary>Zip アーカイブのエントリを操作するための値を指定します。</summary>
    </member>
    <member name="F:System.IO.Compression.ZipArchiveMode.Create">
      <summary>新しいアーカイブ エントリの作成に限り許可されます。</summary>
    </member>
    <member name="F:System.IO.Compression.ZipArchiveMode.Read">
      <summary>新しいアーカイブ エントリの読み込みに限り許可されます。</summary>
    </member>
    <member name="F:System.IO.Compression.ZipArchiveMode.Update">
      <summary>読み取りと書き込みの両方の操作がアーカイブ エントリで許可されます。</summary>
    </member>
  </members>
</doc>