<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.Tracing</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.Tracing.DiagnosticCounter">
      <summary>
        <see cref="T:System.Diagnostics.Tracing.DiagnosticCounter" /> — это абстрактный класс, который выступает в качестве родительского для различных классов Counter*, а именно: <see cref="T:System.Diagnostics.Tracing.EventCounter" />, <see cref="T:System.Diagnostics.Tracing.PollingCounter" />, <see cref="T:System.Diagnostics.Tracing.IncrementingEventCounter" /> и <see cref="T:System.Diagnostics.Tracing.IncrementingPollingCounter" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.DiagnosticCounter.AddMetadata(System.String,System.String)">
      <summary>Добавляет к счетчику метаданные в формате "ключ — значение", которые будут включены в полезные данные.</summary>
      <param name="key">Ключ метаданных.</param>
      <param name="value">Значение метаданных.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.DiagnosticCounter.Dispose">
      <summary>Удаляет счетчик из набора, для которого <see cref="T:System.Diagnostics.Tracing.EventSource" /> будет предоставлять данные.</summary>
    </member>
    <member name="P:System.Diagnostics.Tracing.DiagnosticCounter.DisplayName">
      <summary>Возвращает или задает отображаемое имя счетчика.</summary>
      <returns>Отображаемое имя счетчика.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.DiagnosticCounter.DisplayUnits">
      <summary>Возвращает или задает отображаемые единицы счетчика.</summary>
      <returns>Отображаемые единицы счетчика.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.DiagnosticCounter.EventSource">
      <summary>Возвращает EventSource, к которому привязан этот счетчик.</summary>
      <returns>Объект EventSource, к которому присоединен этот счетчик.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.DiagnosticCounter.Name">
      <summary>Возвращает имя счетчика.</summary>
      <returns>Имя этого счетчика.</returns>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventActivityOptions">
      <summary>Задает отслеживание событий запуска и остановки действия.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventActivityOptions.Detachable">
      <summary>Разрешить перекрывающиеся действия. По умолчанию запуски и остановки действия должны иметь вложенные свойства. То есть последовательность "запуск A, запуск B, остановка A, остановка B" не допускается — B остановится в то же время, что и A.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventActivityOptions.Disable">
      <summary>Отключите отслеживание запуска и остановки.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventActivityOptions.None">
      <summary>Для отслеживания запуска и остановки используйте поведение по умолчанию.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventActivityOptions.Recursive">
      <summary>Разрешить запуски рекурсивных действий. По умолчанию действие не может быть рекурсивным. То есть последовательность "запуск A, запуск A, остановка A, остановка A" не допускается. Если приложение выполняется и остановка не достигнута до вызова другого запуска, могут произойти непреднамеренные рекурсивные действия.</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventAttribute">
      <summary>Задает дополнительную информацию схемы для события.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventAttribute.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Tracing.EventAttribute" /> с указанным идентификатором события.</summary>
      <param name="eventId">Идентификатор события для события.</param>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventAttribute.ActivityOptions">
      <summary>Задает поведение событий запуска и остановки действия. Действие — это область времени между запуском и остановкой приложения.</summary>
      <returns>Возвращает <see cref="T:System.Diagnostics.Tracing.EventActivityOptions" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventAttribute.Channel">
      <summary>Возвращает или задает дополнительный журнал событий, в который должно быть записано событие.</summary>
      <returns>Дополнительный журнал событий, в который должно быть записано событие.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventAttribute.EventId">
      <summary>Возвращает или задает идентификатор события.</summary>
      <returns>Идентификатор события. Это значение должно находиться в диапазоне от 0 до 65535.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventAttribute.Keywords">
      <summary>Возвращает или задает ключевые слова для события.</summary>
      <returns>Побитовое сочетание значений перечисления.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventAttribute.Level">
      <summary>Возвращает или задает уровень для события.</summary>
      <returns>Одно из значений перечисления, определяющее уровень события.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventAttribute.Message">
      <summary>Возвращает или задает сообщение для события.</summary>
      <returns>Сообщение для события.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventAttribute.Opcode">
      <summary>Возвращает или задает код операции для события.</summary>
      <returns>Одно из значений перечисления, определяющее код операции.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventAttribute.Tags">
      <summary>Получает или задает значение <see cref="T:System.Diagnostics.Tracing.EventTags" /> для этого объекта <see cref="T:System.Diagnostics.Tracing.EventAttribute" />. Тег события является определяемым пользователем значением, которое передается при регистрации события в журнале.</summary>
      <returns>
        <see cref="T:System.Diagnostics.Tracing.EventTags" />Значение для этого <see cref="T:System.Diagnostics.Tracing.EventAttribute" /> объекта. Тег события является определяемым пользователем значением, которое передается при регистрации события в журнале.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventAttribute.Task">
      <summary>Возвращает или задает задачу для события.</summary>
      <returns>Задача для события.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventAttribute.Version">
      <summary>Возвращает или задает версию события.</summary>
      <returns>Версия события.</returns>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventChannel">
      <summary>Указывает канал журнала событий для события.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventChannel.Admin">
      <summary>Канал журнала администратора.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventChannel.Analytic">
      <summary>Аналитический канал.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventChannel.Debug">
      <summary>Канал отладки.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventChannel.None">
      <summary>Канал не указан.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventChannel.Operational">
      <summary>Операционный канал.</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventCommand">
      <summary>Описывает команду (свойство <see cref="P:System.Diagnostics.Tracing.EventCommandEventArgs.Command" /> ), которая передается в метод обратного вызова <see cref="M:System.Diagnostics.Tracing.EventSource.OnEventCommand(System.Diagnostics.Tracing.EventCommandEventArgs)" />.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventCommand.Disable">
      <summary>Отключить событие.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventCommand.Enable">
      <summary>Включить событие.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventCommand.SendManifest">
      <summary>Отправить манифест.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventCommand.Update">
      <summary>Обновление события.</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventCommandEventArgs">
      <summary>Предоставляет аргументы для обратного вызова <see cref="M:System.Diagnostics.Tracing.EventSource.OnEventCommand(System.Diagnostics.Tracing.EventCommandEventArgs)" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventCommandEventArgs.DisableEvent(System.Int32)">
      <summary>Отключает событие, имеющее указанный идентификатор.</summary>
      <param name="eventId">Идентификатор события, которое требуется отключить.</param>
      <returns>Значение <see langword="true" />, если параметр <paramref name="eventId" /> является диапазоном; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventCommandEventArgs.EnableEvent(System.Int32)">
      <summary>Включает событие, имеющее указанный идентификатор.</summary>
      <param name="eventId">Идентификатор события, которое требуется включить.</param>
      <returns>Значение <see langword="true" />, если параметр <paramref name="eventId" /> является диапазоном; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventCommandEventArgs.Arguments">
      <summary>Получает массив аргументы для обратного вызова.</summary>
      <returns>Массив аргументов обратного вызова.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventCommandEventArgs.Command">
      <summary>Получает команду для обратного вызова.</summary>
      <returns>Команда обратного вызова.</returns>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventCounter">
      <summary>Предоставляет возможность сбора статистики по очень часто возникающим событиям с помощью класса <see cref="T:System.Diagnostics.Tracing.EventSource" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventCounter.#ctor(System.String,System.Diagnostics.Tracing.EventSource)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Tracing.EventCounter" />.</summary>
      <param name="name">Имя счетчика событий.</param>
      <param name="eventSource">Источник события.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> имеет значение <see langword="null" />.  
  
-или- 
 <paramref name="eventSource" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventCounter.ToString">
      <summary>Возвращает строковое представление текущего события счетчика опросов.</summary>
      <returns>Имя, число и среднее значение счетчика текущего события.</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventCounter.WriteMetric(System.Double)">
      <summary>Записывает метрики, если включены счетчики производительности.</summary>
      <param name="value">Записываемое значение.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventCounter.WriteMetric(System.Single)">
      <summary>Записывает метрики, если включены счетчики производительности.</summary>
      <param name="value">Записываемое значение.</param>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventDataAttribute">
      <summary>Определяет тип, передаваемый методу <see cref="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventDataAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventDataAttribute.Name">
      <summary>Возвращает или задает имя, присваиваемое событию, если его тип или свойство не именованы явно.</summary>
      <returns>Имя, назначаемое событию или свойству.</returns>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventFieldAttribute">
      <summary>Атрибут <see cref="T:System.Diagnostics.Tracing.EventFieldAttribute" /> помещается в полях типов, определяемых пользователем, которые передаются в качестве полезных данных <see cref="T:System.Diagnostics.Tracing.EventSource" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventFieldAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Tracing.EventFieldAttribute" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventFieldAttribute.Format">
      <summary>Получает или задает значение, определяющее способ форматирования значения определяемого пользователем типа.</summary>
      <returns>Значение, указывающее способ форматирования значения определяемого пользователем типа.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventFieldAttribute.Tags">
      <summary>Получает или задает определяемое пользователем значение <see cref="T:System.Diagnostics.Tracing.EventFieldTags" />, которое требуется для полей, содержащих данные неподдерживаемых типов.</summary>
      <returns>Возвращает <see cref="T:System.Diagnostics.Tracing.EventFieldTags" />.</returns>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventFieldFormat">
      <summary>Указывает способ форматирования значения типа, определяемого пользователем, и может использоваться для переопределения форматирования поля по умолчанию.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventFieldFormat.Boolean">
      <summary>Логическое.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventFieldFormat.Default">
      <summary>По умолчанию.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventFieldFormat.Hexadecimal">
      <summary>Шестнадцатеричный.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventFieldFormat.HResult">
      <summary>HResult.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventFieldFormat.Json">
      <summary>JSON.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventFieldFormat.String">
      <summary>Строка.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventFieldFormat.Xml">
      <summary>XML.</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventFieldTags">
      <summary>Указывает определяемый пользователем тег, который помещается в поля типов, определяемых пользователем, которые передаются в качестве полезных данных <see cref="T:System.Diagnostics.Tracing.EventSource" /> посредством атрибута <see cref="T:System.Diagnostics.Tracing.EventFieldAttribute" />.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventFieldTags.None">
      <summary>Не указывает тег и равняется нулю.</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventIgnoreAttribute">
      <summary>Указывает, что при записи типа события с помощью метода <see cref="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)" /> свойство должно игнорироваться.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventIgnoreAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Tracing.EventIgnoreAttribute" />.</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventKeywords">
      <summary>Определяет стандартные ключевые слова, которые применяются к событиям.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventKeywords.All">
      <summary>Для всех битов задано значение 1, представляющее каждую возможную группу событий.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventKeywords.AuditFailure">
      <summary>Вкладывается во все неудавшиеся события аудита безопасности. Используйте это ключевое слово только для событий в журнале безопасности.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventKeywords.AuditSuccess">
      <summary>Вкладывается во все успешные события аудита безопасности. Используйте это ключевое слово только для событий в журнале безопасности.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventKeywords.CorrelationHint">
      <summary>Вкладывается во все события перемещения, в которых идентификатор действия (корреляционный идентификатор) является вычисленным значением, и его уникальность не гарантируется (т. е. он не является действительным GUID).</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventKeywords.EventLogClassic">
      <summary>Вкладывается в события, вызываемые с использованием функции <see langword="RaiseEvent" />.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventKeywords.MicrosoftTelemetry">
      <summary>Вкладывается во все события телеметрии Майкрософт.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventKeywords.None">
      <summary>При публикации события фильтрация по ключевым словам не выполняется.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventKeywords.Sqm">
      <summary>Вкладывается во все события механизма качества служб (SQM).</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventKeywords.WdiContext">
      <summary>Вкладывается во все контекстные события инфраструктуры диагностики Windows (WDI).</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventKeywords.WdiDiagnostic">
      <summary>Вкладывается во все диагностические события инфраструктуры диагностики Windows (WDI).</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventLevel">
      <summary>Определяет уровень события.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventLevel.Critical">
      <summary>Данный уровень соответствует критической ошибке, которая является серьезной ошибкой, вызвавшей серьезную неисправность.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventLevel.Error">
      <summary>Этот уровень добавляет стандартные ошибки, которые обозначают неполадки.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventLevel.Informational">
      <summary>Данный уровень добавляет информационные события или сообщения, не являющиеся ошибками. Данные события будут полезны при трассировке состояния или хода выполнения приложения.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventLevel.LogAlways">
      <summary>Никакой фильтрации уровня в событии не выполняется.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventLevel.Verbose">
      <summary>Данный уровень добавляет длительные события или сообщения. Это приводит к тому, что все события регистрируются.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventLevel.Warning">
      <summary>Данный уровень добавляет события предупреждения (например, события, публикуемые при уровне заполнения пространства диска, близком к максимальному).</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventListener">
      <summary>Предоставляет методы для включения и отключения событий из источников событий.</summary>
    </member>
    <member name="E:System.Diagnostics.Tracing.EventListener.EventSourceCreated">
      <summary>Происходит, когда источник событий (объект <see cref="T:System.Diagnostics.Tracing.EventSource" />) подключается к диспетчеру.</summary>
    </member>
    <member name="E:System.Diagnostics.Tracing.EventListener.EventWritten">
      <summary>Происходит, когда событие записано источником события (объектом <see cref="T:System.Diagnostics.Tracing.EventSource" />), для которого прослушиватель события включил события.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventListener.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Diagnostics.Tracing.EventListener" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventListener.DisableEvents(System.Diagnostics.Tracing.EventSource)">
      <summary>Отключает все события для заданного источника события.</summary>
      <param name="eventSource">Источник событий, для которого требуется отключить события.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventListener.Dispose">
      <summary>Освобождает ресурсы, используемые текущим экземпляром класса <see cref="T:System.Diagnostics.Tracing.EventListener" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel)">
      <summary>Включает события для заданного источника событий, который содержит указанный уровень детализации или ниже.</summary>
      <param name="eventSource">Источник события, для которого требуется включить события.</param>
      <param name="level">Уровень событий, который требуется разрешить.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)">
      <summary>Включает события для заданного источника события, который содержит указанный уровень детализации или ниже, и соответствующие флаги ключевого слова.</summary>
      <param name="eventSource">Источник события, для которого требуется включить события.</param>
      <param name="level">Уровень событий, который требуется разрешить.</param>
      <param name="matchAnyKeyword">Флаги ключевых слов, необходимые для включения событий.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Включает события для заданного источника события, который содержит указанный уровень детализации или ниже, соответствующие флаги ключевого слова и аргументы.</summary>
      <param name="eventSource">Источник события, для которого требуется включить события.</param>
      <param name="level">Уровень событий, который требуется разрешить.</param>
      <param name="matchAnyKeyword">Флаги ключевых слов, необходимые для включения событий.</param>
      <param name="arguments">Аргументы, сопоставляемые для реализации событий.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventListener.EventSourceIndex(System.Diagnostics.Tracing.EventSource)">
      <summary>Возвращает маленькое неотрицательное число, представляющее указанный источник события.</summary>
      <param name="eventSource">Источник события, для которого требуется найти индекс.</param>
      <returns>Маленькое неотрицательное число, представляющее указанный источник события.</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated(System.Diagnostics.Tracing.EventSource)">
      <summary>Вызывается для всех существующих источников событий, когда прослушиватель события создан и когда новый источник события вложен в прослушиватель.</summary>
      <param name="eventSource">Источник события.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)">
      <summary>Вызывается, когда событие было записано источником события, для которого прослушиватель события включил события.</summary>
      <param name="eventData">Аргументы события, описывающие событие.</param>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventManifestOptions">
      <summary>Определяет способ создания манифеста трассировки событий Windows для источника событий.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventManifestOptions.AllCultures">
      <summary>Создает узел ресурсов в папке локализации для каждой предоставленной вспомогательной сборки.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventManifestOptions.AllowEventSourceOverride">
      <summary>Переопределяет поведение по умолчанию, в соответствии с которым текущий класс <see cref="T:System.Diagnostics.Tracing.EventSource" /> должен быть базовым классом для пользовательского типа, передаваемого методу записи. Это позволяет проверять источники событий .NET.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventManifestOptions.None">
      <summary>Параметры не указаны.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventManifestOptions.OnlyIfNeededForRegistration">
      <summary>При создании манифеста только источник событий должен регистрироваться на главном компьютере.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventManifestOptions.Strict">
      <summary>Вызывает исключение, если при записи файла манифеста обнаружена несогласованность.</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventOpcode">
      <summary>Определяет стандартные коды операций, вложенные в события источником событий.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.DataCollectionStart">
      <summary>Событие начала коллекции трассировки.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.DataCollectionStop">
      <summary>Событие окончания коллекции трассировки.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.Extension">
      <summary>Событие расширения.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.Info">
      <summary>Информационное событие.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.Receive">
      <summary>Событие, публикуемое при приеме одним действием данных в приложении.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.Reply">
      <summary>Событие, публикуемое после ответа действия в приложении на событие.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.Resume">
      <summary>Событие, публикуемое после выхода действия в приложении из приостановленного состояния. Событие должно следовать за событием, содержащим код операции <see cref="F:System.Diagnostics.Tracing.EventOpcode.Suspend" />.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.Send">
      <summary>Событие, публикуемое при передаче одним действием в приложении данных или системных ресурсов другому действию.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.Start">
      <summary>Событие, публикуемое при запуске приложением новой транзакции или нового действия. Этот код операции можно внедрять в другие транзакции или действия, если несколько событий, содержащих код <see cref="F:System.Diagnostics.Tracing.EventOpcode.Start" />, следуют друг за другом без промежуточных событий, содержащих код <see cref="F:System.Diagnostics.Tracing.EventOpcode.Stop" />.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.Stop">
      <summary>Событие, публикуемое при завершении действия или транзакции в приложении. Событие соответствует последнему непарному событию с кодом операции <see cref="F:System.Diagnostics.Tracing.EventOpcode.Start" />.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.Suspend">
      <summary>Событие, публикуемое при приостановке действия в приложении.</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventSource">
      <summary>Предоставляет возможность создания событий для трассировки событий Windows (ETW).</summary>
    </member>
    <member name="E:System.Diagnostics.Tracing.EventSource.EventCommandExecuted">
      <summary>Происходит, когда команда поступает от прослушивателя событий.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Diagnostics.Tracing.EventSource" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Boolean)">
      <summary>Создает экземпляр класса <see cref="T:System.Diagnostics.Tracing.EventSource" /> и определяет, следует ли создавать исключение при возникновении ошибки в базовом коде Windows.</summary>
      <param name="throwOnEventWriteErrors">Значение <see langword="true" /> для создания исключения при возникновении ошибки в базовом коде Windows; в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings)">
      <summary>Создает экземпляр класса <see cref="T:System.Diagnostics.Tracing.EventSource" /> с указанными параметрами конфигурации.</summary>
      <param name="settings">Побитовое сочетание значений перечисления, которое определяет параметры конфигурации, применяемые к источнику события.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Tracing.EventSource" /> для использования с неконтрактными событиями, который содержит указанные параметры и признаки.</summary>
      <param name="settings">Побитовое сочетание значений перечисления, которое определяет параметры конфигурации, применяемые к источнику события.</param>
      <param name="traits">Пары ключ-значение, определяющие признаки для источника события.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="traits" /> не указан в парах "ключ значение".</exception>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String)">
      <summary>Создает экземпляр класса <see cref="T:System.Diagnostics.Tracing.EventSource" /> с указанным именем.</summary>
      <param name="eventSourceName">Имя, назначаемое источнику событий. Значение не должно быть равно <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventSourceName" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings)">
      <summary>Создает экземпляр класса <see cref="T:System.Diagnostics.Tracing.EventSource" /> с указанным именем и параметрами.</summary>
      <param name="eventSourceName">Имя, назначаемое источнику событий. Значение не должно быть равно <see langword="null" />.</param>
      <param name="config">Побитовое сочетание значений перечисления, которое определяет параметры конфигурации, применяемые к источнику события.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventSourceName" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
      <summary>Создает экземпляр класса <see cref="T:System.Diagnostics.Tracing.EventSource" /> с указанными параметрами конфигурации.</summary>
      <param name="eventSourceName">Имя, назначаемое источнику событий. Значение не должно быть равно <see langword="null" />.</param>
      <param name="config">Побитовое сочетание значений перечисления, которое определяет параметры конфигурации, применяемые к источнику события.</param>
      <param name="traits">Пары ключ-значение, определяющие признаки для источника события.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventSourceName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="traits" /> не указан в парах "ключ значение".</exception>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.Dispose">
      <summary>Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Diagnostics.Tracing.EventSource" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые классом <see cref="T:System.Diagnostics.Tracing.EventSource" /> (при необходимости освобождает и управляемые ресурсы).</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.Finalize">
      <summary>Позволяет объекту <see cref="T:System.Diagnostics.Tracing.EventSource" /> предпринять попытку освободить ресурсы и выполнить другие операции очистки перед утилизацией объекта в процессе сборки мусора.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String)">
      <summary>Возвращает строку манифеста XML, связанного с текущим источником события.</summary>
      <param name="eventSourceType">Тип источника события.</param>
      <param name="assemblyPathToIncludeInManifest">Путь к файлу сборки (DLL-файлу) для включения в элемент поставщика манифеста.</param>
      <returns>Строка XML-данных.</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String,System.Diagnostics.Tracing.EventManifestOptions)">
      <summary>Возвращает строку манифеста XML, связанного с текущим источником события.</summary>
      <param name="eventSourceType">Тип источника события.</param>
      <param name="assemblyPathToIncludeInManifest">Путь к файлу сборки (DLL-файлу) для включения в элемент поставщика манифеста.</param>
      <param name="flags">Побитовое сочетание значений перечисления, определяющее способ создания манифеста.</param>
      <returns>Строка XML-данных или <see langword="null" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.GetGuid(System.Type)">
      <summary>Получает уникальный идентификатор для данной реализации источника события.</summary>
      <param name="eventSourceType">Тип источника события.</param>
      <returns>Уникальный идентификатор для данного типа источника события.</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.GetName(System.Type)">
      <summary>Возвращает понятное имя источника события.</summary>
      <param name="eventSourceType">Тип источника события.</param>
      <returns>Понятное имя источника события. Значение по умолчанию — простое имя класса.</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.GetSources">
      <summary>Возвращает снимок всех источников событий в домене приложения.</summary>
      <returns>Перечисление всех источников событий в домене приложения.</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)">
      <summary>Получает значение признака, связанное с заданным ключом.</summary>
      <param name="key">Ключ признака, который необходимо получить.</param>
      <returns>Значение признака, связанное с указанным ключом. Если ключ не найден, возвращает значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.IsEnabled">
      <summary>Определяет, включен ли источник текущего события.</summary>
      <returns>Значение <see langword="true" />, если текущий источник события включен; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)">
      <summary>Указывает, включен ли источник текущего события, который имеет заданный уровень и ключевое слово.</summary>
      <param name="level">Уровень источника события.</param>
      <param name="keywords">Ключевое слово источника события.</param>
      <returns>Значение <see langword="true" />, если источник события включен; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)">
      <summary>Определяет, включен ли текущий источник для событий с указанным уровнем, ключевыми словами и каналом.</summary>
      <param name="level">Проверяемый уровень событий. Источник событий будет считаться включенным, если этот уровень равен или больше <paramref name="level" />.</param>
      <param name="keywords">Проверяемые ключевые слова события.</param>
      <param name="channel">Проверяемый канал событий.</param>
      <returns>Значение <see langword="true" />, если источник события включен для указанного уровня событий, ключевых слов и канала; в противном случае — значение <see langword="false" />.  
  
Результат выполнения этого метода только приблизительно показывает, активно ли определенное событие.  Используйте его, чтобы избежать ресурсоемких вычислений для ведения журнала, когда оно отключено. Работа источников событий может определяться дополнительной фильтрацией.</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.OnEventCommand(System.Diagnostics.Tracing.EventCommandEventArgs)">
      <summary>Вызывается, когда источник текущего события обновляется контроллером.</summary>
      <param name="command">Аргументы для события.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Отправляет команду указанному источнику события.</summary>
      <param name="eventSource">Источник событий, которому требуется отправлять команду.</param>
      <param name="command">Команда события, которую требуется отправить.</param>
      <param name="commandArguments">Аргументы для команды события.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)">
      <summary>Задает ИД действия в текущем потоке.</summary>
      <param name="activityId">Новый идентификатор действия текущего потока или <see cref="F:System.Guid.Empty" />, чтобы указать, что работа в этом потоке не связана ни с каким действием.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid,System.Guid@)">
      <summary>Задает идентификатор действия в текущем потоке и возвращает предыдущий идентификатор действия.</summary>
      <param name="activityId">Новый идентификатор действия текущего потока или <see cref="F:System.Guid.Empty" />, чтобы указать, что работа в этом потоке не связана ни с каким действием.</param>
      <param name="oldActivityThatWillContinue">При возврате из этого метода содержит идентификатор предыдущего действия в текущем потоке.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.ToString">
      <summary>Получает строковое представление текущего экземпляра источника события.</summary>
      <returns>Имя и уникальный идентификатор, определяющие источник текущего события.</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.Write(System.String)">
      <summary>Записывает событие без полей, но с указанным именем и параметрами по умолчанию.</summary>
      <param name="eventName">Имя записываемого события.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventName" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.Write(System.String,System.Diagnostics.Tracing.EventSourceOptions)">
      <summary>Записывает событие без полей, но с указанными именем и параметрами.</summary>
      <param name="eventName">Имя записываемого события.</param>
      <param name="options">Параметры события, такие как уровень, ключевые слова и код операции.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventName" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,``0)">
      <summary>Записывает событие с указанными именем и данными.</summary>
      <param name="eventName">Имя события.</param>
      <param name="data">Данные события. Тип должен быть анонимным или помеченным атрибутом <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" />.</param>
      <typeparam name="T">Тип, определяющий событие и связанные данные. Тип должен быть анонимным или помеченным атрибутом <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" />.</typeparam>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)">
      <summary>Записывает событие с указанными именем, данными и параметрами.</summary>
      <param name="eventName">Имя события.</param>
      <param name="options">Параметры события.</param>
      <param name="data">Данные события. Тип должен быть анонимным или помеченным атрибутом <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" />.</param>
      <typeparam name="T">Тип, определяющий событие и связанные данные. Тип должен быть анонимным или помеченным атрибутом <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" />.</typeparam>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)">
      <summary>Записывает событие с указанными именем, параметрами и данными.</summary>
      <param name="eventName">Имя события.</param>
      <param name="options">Параметры события.</param>
      <param name="data">Данные события. Тип должен быть анонимным или помеченным атрибутом <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" />.</param>
      <typeparam name="T">Тип, определяющий событие и связанные данные. Тип должен быть анонимным или помеченным атрибутом <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" />.</typeparam>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)">
      <summary>Записывает событие с указанными именем, параметрами, связанным действием и данными.</summary>
      <param name="eventName">Имя события.</param>
      <param name="options">Параметры события.</param>
      <param name="activityId">Идентификатор действия, связанного с событием.</param>
      <param name="relatedActivityId">Идентификатор связанного действия либо значение <see cref="F:System.Guid.Empty" />, если связанное действие отсутствует.</param>
      <param name="data">Данные события. Тип должен быть анонимным или помеченным атрибутом <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" />.</param>
      <typeparam name="T">Тип, определяющий событие и связанные данные. Тип должен быть анонимным или помеченным атрибутом <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" />.</typeparam>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)">
      <summary>Записывает событие, используя предоставленный идентификатор события.</summary>
      <param name="eventId">Идентификатор события. Это значение должно находиться в диапазоне от 0 до 65535.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])">
      <summary>Записывает событие, используя предоставленные идентификатор события и аргумент в виде массива байтов.</summary>
      <param name="eventId">Идентификатор события.  Это значение должно находиться в диапазоне от 0 до 65535.</param>
      <param name="arg1">Аргумент в виде массива байтов.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)">
      <summary>Записывает событие, используя предоставленные идентификатор события и 32-разрядный целочисленный аргумент.</summary>
      <param name="eventId">Идентификатор события.  Это значение должно находиться в диапазоне от 0 до 65535.</param>
      <param name="arg1">Целочисленный аргумент.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)">
      <summary>Записывает событие, используя предоставленные идентификатор события и 32-разрядные целочисленные аргументы.</summary>
      <param name="eventId">Идентификатор события.  Это значение должно находиться в диапазоне от 0 до 65535.</param>
      <param name="arg1">Целочисленный аргумент.</param>
      <param name="arg2">Целочисленный аргумент.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Записывает событие, используя предоставленные идентификатор события и 32-разрядные целочисленные аргументы.</summary>
      <param name="eventId">Идентификатор события.  Это значение должно находиться в диапазоне от 0 до 65535.</param>
      <param name="arg1">Целочисленный аргумент.</param>
      <param name="arg2">Целочисленный аргумент.</param>
      <param name="arg3">Целочисленный аргумент.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.String)">
      <summary>Записывает событие, используя предоставленный идентификатор, а также строковые и 32-разрядные целочисленные аргументы.</summary>
      <param name="eventId">Идентификатор события. Это значение должно находиться в диапазоне от 0 до 65535.</param>
      <param name="arg1">32-разрядный целочисленный аргумент.</param>
      <param name="arg2">Строковый аргумент.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)">
      <summary>Записывает событие, используя предоставленные идентификатор события и 64-разрядный целочисленный аргумент.</summary>
      <param name="eventId">Идентификатор события.  Это значение должно находиться в диапазоне от 0 до 65535.</param>
      <param name="arg1">64-разрядный целочисленный аргумент.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])">
      <summary>Записывает данные события, используя указанный идентификатор, а также 64-разрядные целочисленные аргументы и аргументы в виде массива байтов.</summary>
      <param name="eventId">Идентификатор события.  Это значение должно находиться в диапазоне от 0 до 65535.</param>
      <param name="arg1">64-разрядный целочисленный аргумент.</param>
      <param name="arg2">Аргумент в виде массива байтов.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)">
      <summary>Записывает событие, используя предоставленные идентификатор события и 64-разрядные аргументы.</summary>
      <param name="eventId">Идентификатор события.  Это значение должно находиться в диапазоне от 0 до 65535.</param>
      <param name="arg1">64-разрядный целочисленный аргумент.</param>
      <param name="arg2">64-разрядный целочисленный аргумент.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)">
      <summary>Записывает событие, используя предоставленные идентификатор события и 64-разрядные аргументы.</summary>
      <param name="eventId">Идентификатор события.  Это значение должно находиться в диапазоне от 0 до 65535.</param>
      <param name="arg1">64-разрядный целочисленный аргумент.</param>
      <param name="arg2">64-разрядный целочисленный аргумент.</param>
      <param name="arg3">64-разрядный целочисленный аргумент.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)">
      <summary>Записывает событие, используя предоставленный идентификатор, а также строковые и 64-разрядные целочисленные аргументы.</summary>
      <param name="eventId">Идентификатор события.  Это значение должно находиться в диапазоне от 0 до 65535.</param>
      <param name="arg1">64-разрядный целочисленный аргумент.</param>
      <param name="arg2">Строковый аргумент.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
      <summary>Записывает событие, используя предоставленные идентификатор события и массив аргументов.</summary>
      <param name="eventId">Идентификатор события.  Это значение должно находиться в диапазоне от 0 до 65535.</param>
      <param name="args">Массив объектов .</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)">
      <summary>Записывает событие, используя предоставленные идентификатор события и строковый аргумент.</summary>
      <param name="eventId">Идентификатор события.  Это значение должно находиться в диапазоне от 0 до 65535.</param>
      <param name="arg1">Строковый аргумент.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)">
      <summary>Записывает событие, используя предоставленные идентификатор события и аргументы.</summary>
      <param name="eventId">Идентификатор события.  Это значение должно находиться в диапазоне от 0 до 65535.</param>
      <param name="arg1">Строковый аргумент.</param>
      <param name="arg2">32-разрядный целочисленный аргумент.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)">
      <summary>Записывает событие, используя предоставленные идентификатор события и аргументы.</summary>
      <param name="eventId">Идентификатор события.  Это значение должно находиться в диапазоне от 0 до 65535.</param>
      <param name="arg1">Строковый аргумент.</param>
      <param name="arg2">32-разрядный целочисленный аргумент.</param>
      <param name="arg3">32-разрядный целочисленный аргумент.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)">
      <summary>Записывает событие, используя предоставленные идентификатор события и аргументы.</summary>
      <param name="eventId">Идентификатор события.  Это значение должно находиться в диапазоне от 0 до 65535.</param>
      <param name="arg1">Строковый аргумент.</param>
      <param name="arg2">64-разрядный целочисленный аргумент.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)">
      <summary>Записывает событие, используя предоставленные идентификатор события и строковые аргументы.</summary>
      <param name="eventId">Идентификатор события.  Это значение должно находиться в диапазоне от 0 до 65535.</param>
      <param name="arg1">Строковый аргумент.</param>
      <param name="arg2">Строковый аргумент.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)">
      <summary>Записывает событие, используя предоставленные идентификатор события и строковые аргументы.</summary>
      <param name="eventId">Идентификатор события.  Это значение должно находиться в диапазоне от 0 до 65535.</param>
      <param name="arg1">Строковый аргумент.</param>
      <param name="arg2">Строковый аргумент.</param>
      <param name="arg3">Строковый аргумент.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
      <summary>Создает перегрузку <see cref="Overload:System.Diagnostics.Tracing.EventSource.WriteEvent" /> с помощью предоставленных идентификатора и данных события.</summary>
      <param name="eventId">Идентификатор события.</param>
      <param name="eventDataCount">Число элементов данных события.</param>
      <param name="data">Структура, содержащая данные события.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
      <summary>Записывает событие, которое указывает, что текущее действие связано с другим действием.</summary>
      <param name="eventId">Идентификатор, который уникально идентифицирует это событие в источнике <see cref="T:System.Diagnostics.Tracing.EventSource" />.</param>
      <param name="relatedActivityId">Идентификатор связанного действия.</param>
      <param name="args">Массив объектов, которые содержат данные события.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
      <summary>Записывает событие, которое указывает, что текущее действие связано с другим действием.</summary>
      <param name="eventId">Идентификатор, который уникально идентифицирует это событие в источнике <see cref="T:System.Diagnostics.Tracing.EventSource" />.</param>
      <param name="relatedActivityId">Указатель на GUID идентификатора связанного действия.</param>
      <param name="eventDataCount">Число элементов в поле <paramref name="data" />.</param>
      <param name="data">Указатель на первый элемент в поле данных события.</param>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSource.ConstructionException">
      <summary>Возвращает любое исключение, инициированное во время создания источника событий.</summary>
      <returns>Исключение, инициированное во время создания источника событий, или <see langword="null" />, если исключение не создано.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSource.CurrentThreadActivityId">
      <summary>Получает идентификатор действия текущего потока.</summary>
      <returns>Идентификатор действия текущего потока.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSource.Guid">
      <summary>Уникальный идентификатор источника события.</summary>
      <returns>Уникальный идентификатор источника события.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSource.Name">
      <summary>Понятное имя класса, производного от источника события.</summary>
      <returns>Понятное имя производного класса.  Значение по умолчанию — простое имя класса.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSource.Settings">
      <summary>Возвращает параметры, применяемые к этому источнику события.</summary>
      <returns>Параметры, применяемые к этому источнику события.</returns>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventSource.EventData">
      <summary>Предоставляет данные события для создания быстрые перегрузки <see cref="Overload:System.Diagnostics.Tracing.EventSource.WriteEvent" /> с помощью метода <see cref="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSource.EventData.DataPointer">
      <summary>Получает или задает указатель на данные для новой перегрузки <see cref="Overload:System.Diagnostics.Tracing.EventSource.WriteEvent" />.</summary>
      <returns>Указатель на данные.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSource.EventData.Size">
      <summary>Получает или задает количество элементов полезной нагрузки в новой перегрузке <see cref="Overload:System.Diagnostics.Tracing.EventSource.WriteEvent" />.</summary>
      <returns>Количество элементов полезной нагрузки в новой перегрузке.</returns>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventSourceAttribute">
      <summary>Позволяет определить имя трассировки событий Windows (ETW) независимо от имени класса источника событий.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSourceAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSourceAttribute.Guid">
      <summary>Получает или задает идентификатор источника события.</summary>
      <returns>Идентификатор источника события.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSourceAttribute.LocalizationResources">
      <summary>Получает или задает имя локализованного файла ресурсов.</summary>
      <returns>Имя файла ресурсов локализации или <see langword="null" />, если файл ресурсов локализации не существует.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSourceAttribute.Name">
      <summary>Получает или задает имя источника события.</summary>
      <returns>Имя источника событий.</returns>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventSourceCreatedEventArgs">
      <summary>Предоставляет данные для события <see cref="E:System.Diagnostics.Tracing.EventListener.EventSourceCreated" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSourceCreatedEventArgs.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Tracing.EventSourceCreatedEventArgs" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSourceCreatedEventArgs.EventSource">
      <summary>Получение источника события, который присоединяется к прослушивателю.</summary>
      <returns>Источник события, который присоединяется к прослушивателю.</returns>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventSourceException">
      <summary>Исключение, которое вызывается при возникновении ошибки во время трассировки событий Windows (ETW).</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSourceException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Tracing.EventSourceException" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSourceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Tracing.EventSourceException" /> с сериализованными данными.</summary>
      <param name="info">Объект, содержащий сериализованные данные объекта.</param>
      <param name="context">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSourceException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Tracing.EventSourceException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение, описывающее ошибку.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSourceException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Tracing.EventSourceException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException">Исключение, вызвавшее текущее исключение, или значение <see langword="null" />, если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventSourceOptions">
      <summary>Задает переопределения параметров события по умолчанию, таких как уровень ведения журнала, ключевые слова и код операции, при вызове метода <see cref="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSourceOptions.ActivityOptions">
      <summary>Параметры действий, определенные для данного источника событий.</summary>
      <returns>Возвращает <see cref="T:System.Diagnostics.Tracing.EventActivityOptions" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSourceOptions.Keywords">
      <summary>Возвращает или задает ключевые слова, применяемые к событию. Если это свойство не задано, используется значение <see langword="None" />.</summary>
      <returns>Ключевые слова, применяемые к событию, или <see langword="None" />, если ключевые слова не заданы.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSourceOptions.Level">
      <summary>Возвращает или задает уровень, применяемый к событию.</summary>
      <returns>Уровень события. Если значение не задано, по умолчанию используется значение Verbose (5).</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSourceOptions.Opcode">
      <summary>Возвращает или задает код операции для указанного события.</summary>
      <returns>Код операции для указанного события. Если значение не задано, по умолчанию используется значение <see langword="Info" /> (0).</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSourceOptions.Tags">
      <summary>Теги событий, определенные для этого источника событий.</summary>
      <returns>Возвращает <see cref="T:System.Diagnostics.Tracing.EventTags" />.</returns>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventSourceSettings">
      <summary>Задает параметры конфигурации для источника события.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventSourceSettings.Default">
      <summary>Особые параметры конфигурации не включены.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventSourceSettings.EtwManifestEventFormat">
      <summary>Прослушиватель трассировки событий Windows должен использовать формат на основе манифеста при создании событий. Задание этого параметра указывает прослушивателю трассировки событий Windows на то, что при создании событий необходимо использовать формат на основе манифеста. Это параметр по умолчанию при определении типа, наследуемого от <see cref="T:System.Diagnostics.Tracing.EventSource" /> с помощью одного из защищенных конструкторов <see cref="T:System.Diagnostics.Tracing.EventSource" />.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventSourceSettings.EtwSelfDescribingEventFormat">
      <summary>Прослушиватель трассировки событий Windows должен использовать формат событий с самоописанием. Это параметр по умолчанию при создании экземпляра <see cref="T:System.Diagnostics.Tracing.EventSource" /> с помощью одного из общих конструкторов <see cref="T:System.Diagnostics.Tracing.EventSource" />.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventSourceSettings.ThrowOnEventWriteErrors">
      <summary>Источник события создает исключение при возникновении ошибки.</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventTags">
      <summary>Задает отслеживание событий запуска и остановки действия. Следует использовать только младшие 24 бита. Дополнительные сведения см. в разделах <see cref="T:System.Diagnostics.Tracing.EventSourceOptions" /> и <see cref="M:System.Diagnostics.Tracing.EventSource.Write(System.String,System.Diagnostics.Tracing.EventSourceOptions)" />.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventTags.None">
      <summary>Не указывает тег и равняется нулю.</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventTask">
      <summary>Определяет задачи, применяемые к событиям.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventTask.None">
      <summary>Неопределенная задача.</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventWrittenEventArgs">
      <summary>Предоставляет данные для обратного вызова <see cref="M:System.Diagnostics.Tracing.EventListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.ActivityId">
      <summary>Получает идентификатор действий в потоке, куда было записано событие.</summary>
      <returns>Идентификатор действий в потоке, куда было записано событие.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.Channel">
      <summary>Возвращает канал события.</summary>
      <returns>Канал события.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.EventId">
      <summary>Возвращает идентификатор события.</summary>
      <returns>Идентификатор события.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.EventName">
      <summary>Возвращает имя события.</summary>
      <returns>Имя события.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.EventSource">
      <summary>Возвращает объект источника события.</summary>
      <returns>Объект источника события.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.Keywords">
      <summary>Получает ключевые слова для события.</summary>
      <returns>Ключевые слова для события.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.Level">
      <summary>Получает уровень события.</summary>
      <returns>Уровень события.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.Message">
      <summary>Получает сообщение для события.</summary>
      <returns>Сообщение для события.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.Opcode">
      <summary>Получает код операции для события.</summary>
      <returns>Код операции для события.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.OSThreadId">
      <summary>Получает идентификатор потока для потока операционной системы, который записал событие. (.NET Core 2.2 и более поздних версий.)</summary>
      <returns>Идентификатор потока для потока операционной системы, который написал событие.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.Payload">
      <summary>Получает полезные данные для события.</summary>
      <returns>Полезные данные для события.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.PayloadNames">
      <summary>Возвращает список строк, представляющих имена свойств события.</summary>
      <returns>Возвращает <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.RelatedActivityId">
      <summary>Возвращает идентификатор действия, которое связано с действием, представленным текущим экземпляром.</summary>
      <returns>Идентификатор связанного действия, либо значение <see cref="F:System.Guid.Empty" />, если отсутствует связанная действие.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.Tags">
      <summary>Возвращает указанные теги в вызове метода <see cref="M:System.Diagnostics.Tracing.EventSource.Write(System.String,System.Diagnostics.Tracing.EventSourceOptions)" />.</summary>
      <returns>Возвращает <see cref="T:System.Diagnostics.Tracing.EventTags" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.Task">
      <summary>Возвращает задачу для события.</summary>
      <returns>Задача для события.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.TimeStamp">
      <summary>Получает время, в которое изначально было создано событие, как метку времени <see cref="T:System.DateTime" />. (.NET Core 2.2 и более поздних версий.)</summary>
      <returns>Дата и время записи события в журнал. Система пытается как можно точнее.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.Version">
      <summary>Получает версию события.</summary>
      <returns>Версия события.</returns>
    </member>
    <member name="T:System.Diagnostics.Tracing.IncrementingEventCounter">
      <summary>Предоставляет вариант <see cref="T:System.Diagnostics.Tracing.EventCounter" /> для переменных, значения которых постоянно возрастают, таких как число исключений в среде выполнения.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.IncrementingEventCounter.#ctor(System.String,System.Diagnostics.Tracing.EventSource)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Tracing.IncrementingEventCounter" />.</summary>
      <param name="name">Имя этого экземпляра <see cref="T:System.Diagnostics.Tracing.IncrementingEventCounter" />.</param>
      <param name="eventSource">Источник события.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.IncrementingEventCounter.Increment(System.Double)">
      <summary>Прибавляет значение к нарастающему итогу, который будет опубликован счетчиком по прошествии следующего интервала таймера.</summary>
      <param name="increment">Значение, на которое нужно увеличить нарастающий итог.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.IncrementingEventCounter.ToString">
      <summary>Возвращает строковое представление текущего экземпляра увеличивающегося счетчика событий.</summary>
      <returns>Имя и приращение текущего увеличивающегося счетчика событий.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.IncrementingEventCounter.DisplayRateTimeScale">
      <summary>Возвращает или задает скорость, с которой эта метрика должна отображаться.</summary>
      <returns>Возвращает или задает скорость отображения метрики.</returns>
    </member>
    <member name="T:System.Diagnostics.Tracing.IncrementingPollingCounter">
      <summary>Предоставляет вариант <see cref="T:System.Diagnostics.Tracing.EventCounter" /> для переменных, значения которых постоянно возрастают, таких как число исключений в среде выполнения.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.IncrementingPollingCounter.#ctor(System.String,System.Diagnostics.Tracing.EventSource,System.Func{System.Double})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Tracing.IncrementingPollingCounter" />.</summary>
      <param name="name">Имя этого экземпляра <see cref="T:System.Diagnostics.Tracing.IncrementingPollingCounter" />.</param>
      <param name="eventSource">Источник события, частью которого является данный экземпляр.</param>
      <param name="totalValueProvider">Метод, который будет использоваться для опроса значения.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.IncrementingPollingCounter.ToString">
      <summary>Возвращает строковое представление текущего экземпляра увеличивающегося счетчика опросов.</summary>
      <returns>Имя и приращение текущего увеличивающегося счетчика опросов.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.IncrementingPollingCounter.DisplayRateTimeScale">
      <summary>Возвращает или задает скорость, с которой эта метрика должна отображаться.</summary>
      <returns>Скорость отображения этой метрики.</returns>
    </member>
    <member name="T:System.Diagnostics.Tracing.NonEventAttribute">
      <summary>Определяет метод, который не создает событие.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.NonEventAttribute.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Diagnostics.Tracing.NonEventAttribute" />.</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.PollingCounter">
      <summary>Предоставляет вариант <see cref="T:System.Diagnostics.Tracing.EventCounter" />, который собирает и обрабатывает такие же статистические данные, как и <see cref="T:System.Diagnostics.Tracing.EventCounter" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.PollingCounter.#ctor(System.String,System.Diagnostics.Tracing.EventSource,System.Func{System.Double})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Tracing.PollingCounter" />.</summary>
      <param name="name">Имя этого экземпляра <see cref="T:System.Diagnostics.Tracing.PollingCounter" />.</param>
      <param name="eventSource">Источник события.</param>
      <param name="metricProvider">Метод, который будет использоваться для опроса значения.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.PollingCounter.ToString">
      <summary>Возвращает строковое представление текущего экземпляра счетчика опросов.</summary>
      <returns>Имя и среднее значение текущего счетчика опросов.</returns>
    </member>
  </members>
</doc>