<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.WebSockets</name>
  </assembly>
  <members>
    <member name="T:System.Net.WebSockets.ValueWebSocketReceiveResult">
      <summary>表示在 <see cref="T:System.Net.WebSockets.WebSocket" /> 上執行單一 <see cref="M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.Memory{System.Byte},System.Threading.CancellationToken)" /> 作業的結果。</summary>
    </member>
    <member name="M:System.Net.WebSockets.ValueWebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean)">
      <summary>初始化 <see cref="T:System.Net.WebSockets.ValueWebSocketReceiveResult" /> 結構的新執行個體。 這個結構的執行個體表示在 <see cref="T:System.Net.WebSockets.WebSocket" /> 上執行單一 <c>ReceiveAsync</c> 作業的結果。</summary>
      <param name="count">
        <see cref="T:System.Net.WebSockets.WebSocket" /> 收到的位元組數目。</param>
      <param name="messageType">其中一個列舉值，指出目前的訊息是 UTF-8 訊息或二進位訊息。</param>
      <param name="endOfMessage">
        <see langword="true" /> 表示已完成接收訊息；否則為 <see langword="false" />。</param>
    </member>
    <member name="P:System.Net.WebSockets.ValueWebSocketReceiveResult.Count">
      <summary>取得 <see cref="T:System.Net.WebSockets.WebSocket" /> 接收的位元組數目。</summary>
      <returns>
        <see cref="T:System.Net.WebSockets.WebSocket" /> 收到的位元組數目。</returns>
    </member>
    <member name="P:System.Net.WebSockets.ValueWebSocketReceiveResult.EndOfMessage">
      <summary>取得是否已完成接收訊息。</summary>
      <returns>
        <see langword="true" /> 如果已完全接收訊息，則為，否則為 <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Net.WebSockets.ValueWebSocketReceiveResult.MessageType">
      <summary>取得目前訊息的類型。</summary>
      <returns>其中一個列舉值，這個值會指定目前的訊息是 UTF-8、二進位或關閉訊息。</returns>
    </member>
    <member name="T:System.Net.WebSockets.WebSocket">
      <summary>WebSocket 類別允許應用程式在 WebSocket 升級完成之後傳送和接收資料。</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.#ctor">
      <summary>建立 <see cref="T:System.Net.WebSockets.WebSocket" /> 類別的執行個體。</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.Abort">
      <summary>中止 WebSocket 連線並取消任何暫止 IO 作業。</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
      <summary>以非同步作業使用 WebSocket 通訊協定規格第 7 節中所定義的關閉信號交換，關閉 WebSocket 連接。</summary>
      <param name="closeStatus">指出關閉 WebSocket 連線的原因。</param>
      <param name="statusDescription">指定易懂的連線結束原因說明。</param>
      <param name="cancellationToken">可以用來散佈應該取消作業之通知的語彙基元。</param>
      <returns>工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
      <summary>啟始或完成 WebSocket 通訊協定規格第 7 節中定義的關閉信號交換。</summary>
      <param name="closeStatus">表示關閉 WebSocket 連線的原因。</param>
      <param name="statusDescription">可讓應用程式就連線關閉的原因指定人類看得懂的說明。</param>
      <param name="cancellationToken">可用來傳播應該取消作業之通知的語彙基元。</param>
      <returns>工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CreateClientBuffer(System.Int32,System.Int32)">
      <summary>建立要與這個 <see cref="T:System.Net.WebSockets.WebSocket" /> 執行個體搭配使用的用戶端緩衝區。</summary>
      <param name="receiveBufferSize">用戶端接收緩衝區的大小 (以位元組為單位)。</param>
      <param name="sendBufferSize">傳送緩衝區的大小 (以位元組為單位)。</param>
      <returns>具有用戶端緩衝區的陣列。</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CreateClientWebSocket(System.IO.Stream,System.String,System.Int32,System.Int32,System.TimeSpan,System.Boolean,System.ArraySegment{System.Byte})">
      <summary>允許呼叫端建立使用 WSPC 進行框架處理的用戶端 WebSocket 類別。</summary>
      <param name="innerStream">要用於 IO 作業的連接。</param>
      <param name="subProtocol">用戶端所接受的附屬通訊協定。</param>
      <param name="receiveBufferSize">用戶端 WebSocket 接收緩衝區的大小 (以位元組為單位)。</param>
      <param name="sendBufferSize">用戶端 WebSocket 傳送緩衝區的大小 (以位元組為單位)。</param>
      <param name="keepAliveInterval">決定如何定期在連線上傳送保持連接的框架。 僅適用於連線處於閒置狀態時。</param>
      <param name="useZeroMaskingKey">表示隨機金鑰或靜態金鑰 (只是零) 是否應用於 WebSocket 遮罩。</param>
      <param name="internalBuffer">做為 WPC 中的內部緩衝區。 大小必須至少為 <c>2 * ReceiveBufferSize + SendBufferSize + 256 + 20 (32 位元時為 16)</c>。</param>
      <returns>傳回 <see cref="T:System.Net.WebSockets.WebSocket" />。</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CreateFromStream(System.IO.Stream,System.Boolean,System.String,System.TimeSpan)">
      <summary>建立新的 <see cref="T:System.Net.WebSockets.WebSocket" /> 物件，其會在指定的資料流上運作，表示 Web 通訊端連線。</summary>
      <param name="stream">連線的資料流。</param>
      <param name="isServer">
        <see langword="true" /> 表示其為連接的伺服器端；如果是用戶端，則為 <see langword="false" />。</param>
      <param name="subProtocol">建立連線時所使用的已同意子通訊協定。</param>
      <param name="keepAliveInterval">要使用的持續連線間隔，或 <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" /> 以停用持續連線。</param>
      <returns>新的 Web 通訊端。</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CreateServerBuffer(System.Int32)">
      <summary>建立 WebSocket 伺服器緩衝區。</summary>
      <param name="receiveBufferSize">所需緩衝區的大小 (以位元組為單位)。</param>
      <returns>傳回 <see cref="T:System.ArraySegment`1" />。</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.Dispose">
      <summary>用來清除 Unmanaged 資源，適用於 ASP.NET 和自我裝載的實作。</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.IsApplicationTargeting45">
      <summary>傳回表示 WebSocket 執行個體是否以 .NET Framework 4.5 為目標的值。</summary>
      <returns>若 <see cref="T:System.Net.WebSockets.WebSocket" /> 是以 .NET Framework 4.5 為目標，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.IsStateTerminal(System.Net.WebSockets.WebSocketState)">
      <summary>傳回值，指出 WebSocket 執行個體的狀態是關閉或中止。</summary>
      <param name="state">WebSocket 的目前狀態。</param>
      <returns>若 <see cref="T:System.Net.WebSockets.WebSocket" /> 已關閉或中止，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
      <summary>以非同步方式從 <see cref="T:System.Net.WebSockets.WebSocket" /> 連接接收資料。</summary>
      <param name="buffer">參考為已接收資料之儲存體位置的應用程式緩衝區。</param>
      <param name="cancellationToken">散佈通知，表示應該取消作業。</param>
      <returns>工作物件，表示非同步作業。 工作物件上的 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 屬性會傳回表示所接收資料的 <see cref="T:System.Net.WebSockets.WebSocketReceiveResult" /> 物件。</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>以非同步方式從 <see cref="T:System.Net.WebSockets.WebSocket" /> 連接接收資料。</summary>
      <param name="buffer">應用程式緩衝區，其為已接收資料的儲存位置。</param>
      <param name="cancellationToken">要用於取消接收作業的取消權杖。</param>
      <returns>工作物件，表示非同步作業。 工作物件上的 <see cref="P:System.Threading.Tasks.ValueTask`1.Result" /> 屬性會傳回表示所接收資料的 <see cref="T:System.Net.WebSockets.ValueWebSocketReceiveResult" /> 物件。</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.RegisterPrefixes">
      <summary>允許呼叫端註冊 WebSocket 要求 (ws 和 wss) 的前置詞。</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
      <summary>以非同步的方式透過 <see cref="T:System.Net.WebSockets.WebSocket" /> 連線傳送資料。</summary>
      <param name="buffer">要透過連線傳送的緩衝區。</param>
      <param name="messageType">指出應用程式是否正在傳送二進位或文字訊息。</param>
      <param name="endOfMessage">指出「緩衝區」中的資料是否為訊息的最後一部分。</param>
      <param name="cancellationToken">傳播應該取消作業之通知的語彙基元。</param>
      <returns>工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.SendAsync(System.ReadOnlyMemory{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
      <summary>以非同步的方式透過 <see cref="T:System.Net.WebSockets.WebSocket" /> 連線傳送資料。</summary>
      <param name="buffer">要透過連線傳送的緩衝區。</param>
      <param name="messageType">其中一個列舉值，指出應用程式是否正在傳送二進位或文字訊息。</param>
      <param name="endOfMessage">若「緩衝區」中資料為訊息的最後一部分，則為 <see langword="true" />；否則為 <see langword="false" />。</param>
      <param name="cancellationToken">要用於取消傳送作業的取消權杖。</param>
      <returns>工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.ThrowOnInvalidState(System.Net.WebSockets.WebSocketState,System.Net.WebSockets.WebSocketState[])">
      <summary>確認連接處於預期的狀態。</summary>
      <param name="state">要根據有效狀態清單測試的 WebSocket 目前狀態。</param>
      <param name="validStates">有效連接狀態的清單。</param>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.CloseStatus">
      <summary>表示遠端端點已起始關閉訊號交換的原因。</summary>
      <returns>傳回 <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" />。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.CloseStatusDescription">
      <summary>允許遠端端點描述此連接關閉的原因。</summary>
      <returns>傳回 <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.DefaultKeepAliveInterval">
      <summary>取得預設 WebSocket 通訊協定保持連接間隔。</summary>
      <returns>預設的 WebSocket 通訊協定 keep-alive 間隔。 此間隔的一般值為30秒， (由 OS 或 .NET 平臺) 所定義。 它是用來初始化 <see cref="P:System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval" /> 值。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.State">
      <summary>傳回 WebSocket 連線的目前狀態。</summary>
      <returns>WebSocket 連接的目前狀態。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.SubProtocol">
      <summary>取得開始信號交握期間所交涉的子通訊協定。</summary>
      <returns>在開啟信號交換期間所交涉的附屬通訊協定。</returns>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketCloseStatus">
      <summary>表示 WebSocket 通訊協定規格第 11.7 節中所定義的已知 WebSocket 關閉碼。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.Empty">
      <summary>未指定任何錯誤。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.EndpointUnavailable">
      <summary>(1001) 表示正在移除端點。 伺服器或用戶端將無法使用。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.InternalServerError">
      <summary>(1011) 因為伺服器上發生錯誤，所以伺服器將關閉連線。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.InvalidMessageType">
      <summary>(1003) 因為用戶端或伺服器不能接受它接收的資料類型，所以正在終止連線。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.InvalidPayloadData">
      <summary>(1007) 用戶端或伺服器正在終止連接，因為收到的資料與訊息類型不一致。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.MandatoryExtension">
      <summary>(1010) 因為用戶端預期伺服器必須交涉擴充功能，所以用戶端正在終止連線。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.MessageTooBig">
      <summary>(1009) 因為用戶端或伺服器已接收的訊息太大而無法處理，所以正在終止連線。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.NormalClosure">
      <summary>(1000) 已完成要求後，連線已關閉。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.PolicyViolation">
      <summary>(1008) 將會關閉連接，因為端點已收到違反其原則的訊息。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.ProtocolError">
      <summary>(1002) 用戶端或伺服器正在終止連接，因為發生通訊協定錯誤。</summary>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketContext">
      <summary>用來存取 WebSocket 交握中的資訊。</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketContext.#ctor">
      <summary>建立 <see cref="T:System.Net.WebSockets.WebSocketContext" /> 類別的執行個體。</summary>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.CookieCollection">
      <summary>在開啟信號交換期間傳遞至伺服器的 Cookie。</summary>
      <returns>傳回 <see cref="T:System.Net.CookieCollection" />。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.Headers">
      <summary>在開啟信號交換期間傳送至伺服器的 HTTP 標頭。</summary>
      <returns>傳回 <see cref="T:System.Collections.Specialized.NameValueCollection" />。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.IsAuthenticated">
      <summary>WebSocket 用戶端是否通過驗證。</summary>
      <returns>傳回 <see cref="T:System.Boolean" />。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.IsLocal">
      <summary>WebSocket 用戶端是否從本機電腦連線。</summary>
      <returns>傳回 <see cref="T:System.Boolean" />。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.IsSecureConnection">
      <summary>是否 WebSocket 連線是使用安全通訊端層 (SSL) 保護的。</summary>
      <returns>傳回 <see cref="T:System.Boolean" />。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.Origin">
      <summary>包含在開頭信號交換的原始 HTTP 標頭值。</summary>
      <returns>傳回 <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.RequestUri">
      <summary>WebSocket 用戶端所要求的 URI。</summary>
      <returns>傳回 <see cref="T:System.Uri" />。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.SecWebSocketKey">
      <summary>包含在開頭信號交換的 SecWebSocketKey HTTP 標頭值。</summary>
      <returns>傳回 <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.SecWebSocketProtocols">
      <summary>包含在開頭信號交換的 SecWebSocketKey HTTP 標頭值。</summary>
      <returns>傳回 <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.SecWebSocketVersion">
      <summary>WebSocket 用戶端所要求的附屬通訊協定的清單。</summary>
      <returns>傳回 <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.User">
      <summary>用來取得 WebSocket 用戶端之識別、驗證資訊及安全性角色的物件。</summary>
      <returns>傳回 <see cref="T:System.Security.Principal.IPrincipal" />。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.WebSocket">
      <summary>用來與 WebSocket 連接互動 (傳送/接收/關閉等) 的 WebSocket 執行個體。</summary>
      <returns>傳回 <see cref="T:System.Net.WebSockets.WebSocket" />。</returns>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketError">
      <summary>包含可能的 WebSocket 錯誤清單。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.ConnectionClosedPrematurely">
      <summary>指出連線已意外終止。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.Faulted">
      <summary>表示一般錯誤。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.HeaderError">
      <summary>指出開啟信號交換期間剖析 HTTP 標頭時發生的錯誤。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.InvalidMessageType">
      <summary>表示已收到具有未知 opcode 的 WebSocket 框架。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.InvalidState">
      <summary>指示 WebSocket 為指定的作業 (例如，正在關閉或中止) 的無效狀態。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.NativeError">
      <summary>指示發生未知的原生錯誤。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.NotAWebSocket">
      <summary>指出傳入的要求不是有效的 websocket 要求。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.Success">
      <summary>表示沒有例外狀況的原生錯誤資訊。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.UnsupportedProtocol">
      <summary>表示用戶端要求不支援的 WebSocket 附屬通訊協定。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.UnsupportedVersion">
      <summary>表示用戶端要求不支援的 WebSocket 通訊協定版本。</summary>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketException">
      <summary>表示對 WebSocket 連線執行作業時所發生的例外狀況。</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor">
      <summary>建立 <see cref="T:System.Net.WebSockets.WebSocketException" /> 類別的執行個體。</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Int32)">
      <summary>建立 <see cref="T:System.Net.WebSockets.WebSocketException" /> 類別的執行個體。</summary>
      <param name="nativeError">例外狀況的原生錯誤碼。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Int32,System.Exception)">
      <summary>建立 <see cref="T:System.Net.WebSockets.WebSocketException" /> 類別的執行個體。</summary>
      <param name="nativeError">例外狀況的原生錯誤碼。</param>
      <param name="innerException">指出造成目前例外狀況的先前例外狀況。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Int32,System.String)">
      <summary>建立 <see cref="T:System.Net.WebSockets.WebSocketException" /> 類別的執行個體。</summary>
      <param name="nativeError">例外狀況的原生錯誤碼。</param>
      <param name="message">錯誤的描述。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError)">
      <summary>建立 <see cref="T:System.Net.WebSockets.WebSocketException" /> 類別的執行個體。</summary>
      <param name="error">來自 WebSocketError 列舉的錯誤。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Exception)">
      <summary>建立 <see cref="T:System.Net.WebSockets.WebSocketException" /> 類別的執行個體。</summary>
      <param name="error">來自 WebSocketError 列舉的錯誤。</param>
      <param name="innerException">指出造成目前例外狀況的先前例外狀況。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32)">
      <summary>建立 <see cref="T:System.Net.WebSockets.WebSocketException" /> 類別的執行個體。</summary>
      <param name="error">來自 WebSocketError 列舉的錯誤。</param>
      <param name="nativeError">例外狀況的原生錯誤碼。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32,System.Exception)">
      <summary>建立 <see cref="T:System.Net.WebSockets.WebSocketException" /> 類別的執行個體。</summary>
      <param name="error">來自 WebSocketError 列舉的錯誤。</param>
      <param name="nativeError">例外狀況的原生錯誤碼。</param>
      <param name="innerException">指出造成目前例外狀況的先前例外狀況。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32,System.String)">
      <summary>建立 <see cref="T:System.Net.WebSockets.WebSocketException" /> 類別的執行個體。</summary>
      <param name="error">來自 WebSocketError 列舉的錯誤。</param>
      <param name="nativeError">例外狀況的原生錯誤碼。</param>
      <param name="message">錯誤的描述。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32,System.String,System.Exception)">
      <summary>建立 <see cref="T:System.Net.WebSockets.WebSocketException" /> 類別的執行個體。</summary>
      <param name="error">來自 WebSocketError 列舉的錯誤。</param>
      <param name="nativeError">例外狀況的原生錯誤碼。</param>
      <param name="message">錯誤的描述。</param>
      <param name="innerException">指出造成目前例外狀況的先前例外狀況。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.String)">
      <summary>建立 <see cref="T:System.Net.WebSockets.WebSocketException" /> 類別的執行個體。</summary>
      <param name="error">來自 WebSocketError 列舉的錯誤。</param>
      <param name="message">錯誤的描述。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.String,System.Exception)">
      <summary>建立 <see cref="T:System.Net.WebSockets.WebSocketException" /> 類別的執行個體。</summary>
      <param name="error">來自 WebSocketError 列舉的錯誤。</param>
      <param name="message">錯誤的描述。</param>
      <param name="innerException">指出造成目前例外狀況的先前例外狀況。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.String)">
      <summary>建立 <see cref="T:System.Net.WebSockets.WebSocketException" /> 類別的執行個體。</summary>
      <param name="message">錯誤的描述。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.String,System.Exception)">
      <summary>建立 <see cref="T:System.Net.WebSockets.WebSocketException" /> 類別的執行個體。</summary>
      <param name="message">錯誤的描述。</param>
      <param name="innerException">指出造成目前例外狀況的先前例外狀況。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>以發生這個例外狀況的檔案名稱和行號，設定 SerializationInfo 物件。</summary>
      <param name="info">SerializationInfo 物件。</param>
      <param name="context">關於來源或目的端的內容資訊。</param>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketException.ErrorCode">
      <summary>發生之例外狀況的原生錯誤碼。</summary>
      <returns>傳回 <see cref="T:System.Int32" />。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketException.WebSocketErrorCode">
      <summary>傳回表示所發生錯誤之類型的 WebSocketError。</summary>
      <returns>傳回 <see cref="T:System.Net.WebSockets.WebSocketError" />。</returns>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketMessageType">
      <summary>指出訊息類型。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketMessageType.Binary">
      <summary>訊息為二進位格式。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketMessageType.Close">
      <summary>接收已完成，因為已收到關閉訊息。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketMessageType.Text">
      <summary>此訊息為純文字。</summary>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketReceiveResult">
      <summary>這個類別的執行個體表示在 WebSocket 上執行單一 ReceiveAsync 作業的結果。</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean)">
      <summary>建立 <see cref="T:System.Net.WebSockets.WebSocketReceiveResult" /> 類別的執行個體。</summary>
      <param name="count">收到的位元組數目。</param>
      <param name="messageType">收到的訊息類型。</param>
      <param name="endOfMessage">指出這是否為最後的訊息。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Nullable{System.Net.WebSockets.WebSocketCloseStatus},System.String)">
      <summary>建立 <see cref="T:System.Net.WebSockets.WebSocketReceiveResult" /> 類別的執行個體。</summary>
      <param name="count">收到的位元組數目。</param>
      <param name="messageType">收到的訊息類型。</param>
      <param name="endOfMessage">指出這是否為最後的訊息。</param>
      <param name="closeStatus">指出連線的 <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" />。</param>
      <param name="closeStatusDescription">
        <paramref name="closeStatus" /> 的描述。</param>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.CloseStatus">
      <summary>表示遠端端點已起始關閉訊號交換的原因。</summary>
      <returns>傳回 <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" />。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.CloseStatusDescription">
      <summary>傳回選擇性描述，說明遠端端點已起始關閉交握的原因。</summary>
      <returns>傳回 <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.Count">
      <summary>表示 WebSocket 收到的位元組數。</summary>
      <returns>傳回 <see cref="T:System.Int32" />。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.EndOfMessage">
      <summary>表示是否已完成接收訊息。</summary>
      <returns>傳回 <see cref="T:System.Boolean" />。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.MessageType">
      <summary>指出目前的訊息是 UTF-8 或二進位訊息。</summary>
      <returns>傳回 <see cref="T:System.Net.WebSockets.WebSocketMessageType" />。</returns>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketState">
      <summary>定義 WebSockets 執行個體可能處於的狀態。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Aborted">
      <summary>保留供未來使用。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Closed">
      <summary>指示 WebSocket 關閉信號交換正常完成。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.CloseReceived">
      <summary>接收到來自遠端端點的關閉訊息。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.CloseSent">
      <summary>關閉訊息已傳送至遠端端點。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Connecting">
      <summary>這個連接正在交涉與遠端端點的信號交換。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.None">
      <summary>保留供未來使用。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Open">
      <summary>HTTP 信號交換完成之後的初始狀態。</summary>
    </member>
  </members>
</doc>