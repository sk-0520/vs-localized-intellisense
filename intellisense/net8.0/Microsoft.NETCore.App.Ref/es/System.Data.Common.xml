<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Data.Common</name>
  </assembly>
  <members>
    <member name="T:System.Data.AcceptRejectRule">
      <summary>Determina la acción que se produce cuando se invoca a los métodos <see cref="M:System.Data.DataSet.AcceptChanges" /> o <see cref="M:System.Data.DataTable.RejectChanges" /> en un <see cref="T:System.Data.DataTable" /> con un <see cref="T:System.Data.ForeignKeyConstraint" />.</summary>
    </member>
    <member name="F:System.Data.AcceptRejectRule.Cascade">
      <summary>Los cambios se organizan en cascada a través de la relación.</summary>
    </member>
    <member name="F:System.Data.AcceptRejectRule.None">
      <summary>No se realiza ninguna acción (valor predeterminado).</summary>
    </member>
    <member name="T:System.Data.CommandBehavior">
      <summary>Proporciona una descripción de los resultados de la consulta y su efecto en la base de datos.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.CloseConnection">
      <summary>Al ejecutar el comando, se cerrará el objeto <see langword="Connection" /> asociado cuando se cierre el objeto <see langword="DataReader" /> asociado.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.Default">
      <summary>La consulta puede devolver varios conjuntos de resultados. La ejecución de la consulta puede afectar al estado de la base de datos. <see langword="Default" /> no establece ninguna marca <see cref="T:System.Data.CommandBehavior" />, por lo que llamar a <see langword="ExecuteReader(CommandBehavior.Default)" /> equivale funcionalmente a llamar a <see langword="ExecuteReader()" />.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.KeyInfo">
      <summary>La consulta devuelve información sobre la columna y la clave principal. El proveedor anexa columnas adicionales al conjunto de resultados para las columnas de clave principal y marca de tiempo existentes.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SchemaOnly">
      <summary>La consulta sólo devuelve información de columna. Al utilizar <see cref="F:System.Data.CommandBehavior.SchemaOnly" />, el proveedor de datos de .NET Framework para SQL Server hace que la instrucción que está ejecutando vaya precedida de SET FMTONLY ON.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SequentialAccess">
      <summary>Proporciona un modo para que el <see langword="DataReader" /> controle las filas que contienen columnas con valores binarios grandes. En lugar de cargar la fila completa, <see langword="SequentialAccess" /> permite al <see langword="DataReader" /> cargar datos como una secuencia. A continuación, se pueden utilizar los métodos <see langword="GetBytes" /> o <see langword="GetChars" /> para especificar una ubicación de bytes donde iniciar la operación de lectura, así como un tamaño de búfer limitado para los datos devueltos.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SingleResult">
      <summary>La consulta devuelve un único conjunto de resultados.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SingleRow">
      <summary>Se espera que la consulta devuelva una fila única del primer conjunto de resultados. La ejecución de la consulta puede afectar al estado de la base de datos. Aunque no es necesario, algunos proveedores de datos de .NET Framework pueden utilizar esta información para optimizar el rendimiento del comando. Al especificar <see cref="F:System.Data.CommandBehavior.SingleRow" /> con el método <see cref="M:System.Data.OleDb.OleDbCommand.ExecuteReader" /> del objeto <see cref="T:System.Data.OleDb.OleDbCommand" />, el proveedor de datos de .NET Framework para OLE DB realiza el enlace mediante la interfaz <see langword="IRow" /> de OLE DB, si se encuentra disponible. En caso contrario, utiliza la interfaz <see langword="IRowset" />. Además, si se espera que la instrucción SQL devuelva una única fila, se puede mejorar el rendimiento de la aplicación especificando <see cref="F:System.Data.CommandBehavior.SingleRow" />. Es posible especificar <see langword="SingleRow" /> al ejecutar consultas que se espera que devuelvan varios conjuntos de resultados.  En ese caso, cuando se especifican una consulta SQL con varios conjuntos de resultados y una sola fila, el resultado devuelto contendrá solo la primera fila del primer conjunto de resultados. No se devolverán los demás conjuntos de resultados de la consulta.</summary>
    </member>
    <member name="T:System.Data.CommandType">
      <summary>Especifica cómo se interpreta una cadena de comandos.</summary>
    </member>
    <member name="F:System.Data.CommandType.StoredProcedure">
      <summary>Nombre del procedimiento almacenado.</summary>
    </member>
    <member name="F:System.Data.CommandType.TableDirect">
      <summary>Nombre de una tabla.</summary>
    </member>
    <member name="F:System.Data.CommandType.Text">
      <summary>Comando de texto SQL. (Valor predeterminado).</summary>
    </member>
    <member name="T:System.Data.Common.CatalogLocation">
      <summary>Indica la posición del nombre del catálogo en un nombre de tabla calificado en un comando de texto.</summary>
    </member>
    <member name="F:System.Data.Common.CatalogLocation.End">
      <summary>Indica que la posición del nombre del catálogo aparece después de la parte del esquema de un nombre de tabla calificado en un comando de texto. <c>End</c> y <c>Start</c> se excluyen mutuamente.</summary>
    </member>
    <member name="F:System.Data.Common.CatalogLocation.Start">
      <summary>Indica que la posición del nombre del catálogo aparece antes de la parte del esquema de un nombre de tabla calificado en un comando de texto. <c>Start</c> y <c>End</c> se excluyen mutuamente.</summary>
    </member>
    <member name="T:System.Data.Common.DataAdapter">
      <summary>Representa un conjunto de comandos SQL y una conexión a una base de datos que se usan para rellenar <see cref="T:System.Data.DataSet" /> y actualizar el origen de datos.</summary>
    </member>
    <member name="E:System.Data.Common.DataAdapter.FillError">
      <summary>Se devuelve cuando se produce un error durante una operación de relleno.</summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.#ctor">
      <summary>Inicializa una nueva instancia de una clase <see cref="T:System.Data.Common.DataAdapter" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DataAdapter" /> a partir de un objeto existente del mismo tipo.</summary>
      <param name="from">Objeto <see cref="T:System.Data.Common.DataAdapter" /> utilizado para crear el nuevo <see cref="T:System.Data.Common.DataAdapter" />.</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.CloneInternals">
      <summary>Crea una copia de esta instancia de <see cref="T:System.Data.Common.DataAdapter" />.</summary>
      <returns>Instancia clonada de <see cref="T:System.Data.Common.DataAdapter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.CreateTableMappings">
      <summary>Crea un nuevo <see cref="T:System.Data.Common.DataTableMappingCollection" />.</summary>
      <returns>Nueva colección de asignación de la tabla.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados que usa <see cref="T:System.Data.Common.DataAdapter" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
      <summary>Agrega o actualiza las filas del objeto <see cref="T:System.Data.DataSet" /> para que se correspondan con las del origen de datos.</summary>
      <param name="dataSet">Clase <see cref="T:System.Data.DataSet" /> que se va a rellenar con registros y, si es necesario, con un esquema.</param>
      <returns>Número de filas agregadas o actualizadas correctamente en la clase <see cref="T:System.Data.DataSet" />. No se incluyen las filas afectadas por instrucciones que no devuelven filas.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)">
      <summary>Agrega filas en un intervalo especificado de <see cref="T:System.Data.DataSet" /> o las actualiza para hacerlas coincidir con las filas del origen de datos utilizando los nombres de <see cref="T:System.Data.DataSet" /> y <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataSet">Objeto <see cref="T:System.Data.DataSet" /> que se va a llenar de registros.</param>
      <param name="srcTable">Cadena que indica el nombre de la tabla de origen.</param>
      <param name="dataReader">Instancia de <see cref="T:System.Data.IDataReader" />.</param>
      <param name="startRecord">Índice de base cero de la búsqueda del registro inicial.</param>
      <param name="maxRecords">Entero que indica el máximo número de registros.</param>
      <returns>Número de filas agregadas o actualizadas correctamente en la clase <see cref="T:System.Data.DataSet" />. No se incluyen las filas afectadas por instrucciones que no devuelven filas.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)">
      <summary>Agrega filas al objeto <see cref="T:System.Data.DataTable" /> o las actualiza para hacerlas coincidir con las del origen de datos, utilizando el nombre de <see cref="T:System.Data.DataTable" /> y la interfaz <see cref="T:System.Data.IDataReader" /> especificada.</summary>
      <param name="dataTable">Objeto <see cref="T:System.Data.DataTable" /> que se va a llenar de registros.</param>
      <param name="dataReader">Instancia de <see cref="T:System.Data.IDataReader" />.</param>
      <returns>Número de filas agregadas o actualizadas correctamente en la clase <see cref="T:System.Data.DataTable" />. No se incluyen las filas afectadas por instrucciones que no devuelven filas.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)">
      <summary>Agrega filas en un intervalo especificado de la colección de objetos <see cref="T:System.Data.DataTable" /> o las actualiza para hacerlas coincidir con las filas del origen de datos.</summary>
      <param name="dataTables">Colección de objetos <see cref="T:System.Data.DataTable" /> que se va a llenar de registros.</param>
      <param name="dataReader">Instancia de <see cref="T:System.Data.IDataReader" />.</param>
      <param name="startRecord">Índice de base cero de la búsqueda del registro inicial.</param>
      <param name="maxRecords">Entero que indica el máximo número de registros.</param>
      <returns>Número de filas agregadas o actualizadas correctamente en la clase <see cref="T:System.Data.DataTable" />. No se incluyen las filas afectadas por instrucciones que no devuelven filas.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary>Agrega un elemento <see cref="T:System.Data.DataTable" /> denominado "Table" para el elemento <see cref="T:System.Data.DataSet" /> especificado y configura el esquema para que coincida con el origen de datos basado en el <see cref="T:System.Data.SchemaType" />.</summary>
      <param name="dataSet">
        <see cref="T:System.Data.DataSet" /> que se debe rellenar con el esquema del origen de datos.</param>
      <param name="schemaType">Uno de los valores de <see cref="T:System.Data.SchemaType" />.</param>
      <returns>Objeto <see cref="T:System.Data.DataTable" /> que contiene la información de esquema devuelta desde el origen de datos.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)">
      <summary>Agrega un objeto <see cref="T:System.Data.DataTable" /> al objeto <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataSet">Objeto <see cref="T:System.Data.DataTable" /> que se va a rellenar desde la interfaz <see cref="T:System.Data.IDataReader" />.</param>
      <param name="schemaType">Uno de los valores de <see cref="T:System.Data.SchemaType" />.</param>
      <param name="srcTable">Nombre de la tabla de origen que se utilizará para la asignación de tabla.</param>
      <param name="dataReader">Interfaz <see cref="T:System.Data.IDataReader" /> que se va a utilizar como el origen de datos al rellenar el objeto <see cref="T:System.Data.DataTable" />.</param>
      <returns>Referencia a una colección de objetos <see cref="T:System.Data.DataTable" /> que se agregaron al <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)">
      <summary>Agrega un objeto <see cref="T:System.Data.DataTable" /> al objeto <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataTable">Objeto <see cref="T:System.Data.DataTable" /> que se va a rellenar desde la interfaz <see cref="T:System.Data.IDataReader" />.</param>
      <param name="schemaType">Uno de los valores de <see cref="T:System.Data.SchemaType" />.</param>
      <param name="dataReader">Interfaz <see cref="T:System.Data.IDataReader" /> que se va a utilizar como el origen de datos al rellenar el objeto <see cref="T:System.Data.DataTable" />.</param>
      <returns>Objeto <see cref="T:System.Data.DataTable" /> que contiene la información de esquema devuelta desde el origen de datos.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.GetFillParameters">
      <summary>Obtiene los parámetros establecidos por el usuario al ejecutar una instrucción SELECT de SQL.</summary>
      <returns>Matriz de objetos <see cref="T:System.Data.IDataParameter" /> que contienen los parámetros establecidos por el usuario.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.HasTableMappings">
      <summary>Indica si se ha creado una colección <see cref="T:System.Data.Common.DataTableMappingCollection" />.</summary>
      <returns>
        <see langword="true" /> si se ha creado una colección <see cref="T:System.Data.Common.DataTableMappingCollection" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)">
      <summary>Se invoca cuando se produce un error durante una operación <see langword="Fill" />.</summary>
      <param name="value">Un objeto <see cref="T:System.Data.FillErrorEventArgs" />.</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ResetFillLoadOption">
      <summary>Restablece <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> a su estado predeterminado y hace que <see cref="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)" /> tenga en cuenta <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill">
      <summary>Determina si la propiedad <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" /> debe persistir.</summary>
      <returns>
        <see langword="true" /> si se conserva la propiedad <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption">
      <summary>Determina si la propiedad <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> debe persistir.</summary>
      <returns>
        <see langword="true" /> si se conserva la propiedad <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeTableMappings">
      <summary>Determina si uno o más objetos <see cref="T:System.Data.Common.DataTableMapping" /> existen y si deben almacenarse.</summary>
      <returns>
        <see langword="true" /> si existen uno o más objetos <see cref="T:System.Data.Common.DataTableMapping" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
      <summary>Llama a las instrucciones INSERT, UPDATE o DELETE respectivas para cada fila insertada, actualizada o eliminada en el objeto <see cref="T:System.Data.DataSet" /> especificado a partir de un objeto <see cref="T:System.Data.DataTable" /> denominado "Table".</summary>
      <param name="dataSet">Clase <see cref="T:System.Data.DataSet" /> que se utiliza para actualizar el origen de datos.</param>
      <exception cref="T:System.InvalidOperationException">La tabla de origen no es válida.</exception>
      <exception cref="T:System.Data.DBConcurrencyException">El hecho de intentar ejecutar una instrucción INSERT, UPDATE o DELETE no ha afectado a ningún registro.</exception>
      <returns>Número de filas del <see cref="T:System.Data.DataSet" /> actualizadas correctamente.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill">
      <summary>Obtiene o establece un valor que indica si se llama a <see cref="M:System.Data.DataRow.AcceptChanges" /> en un elemento <see cref="T:System.Data.DataRow" /> después de agregarlo a <see cref="T:System.Data.DataTable" /> durante cualquiera de las operaciones Fill.</summary>
      <returns>
        <see langword="true" /> si se llama a <see cref="M:System.Data.DataRow.AcceptChanges" /> en <see cref="T:System.Data.DataRow" />; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate">
      <summary>Obtiene o establece si se llama a <see cref="M:System.Data.DataRow.AcceptChanges" /> durante una operación <see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>
        <see langword="true" /> si se llama a <see cref="M:System.Data.DataRow.AcceptChanges" /> durante una operación <see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" />; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.ContinueUpdateOnError">
      <summary>Obtiene o establece un valor que especifica si debe generarse una excepción cuando se produce un error durante una actualización de fila.</summary>
      <returns>Es <see langword="true" /> para reanudar la actualización sin generar una excepción, en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.FillLoadOption">
      <summary>Obtiene o establece el valor de <see cref="T:System.Data.LoadOption" /> que determina cómo rellena el adaptador el objeto <see cref="T:System.Data.DataTable" /> a partir de <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns>Valor <see cref="T:System.Data.LoadOption" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.MissingMappingAction">
      <summary>Determina la acción que hay que llevar a cabo si los datos entrantes no tienen una tabla o una columna coincidente.</summary>
      <exception cref="T:System.ArgumentException">El valor establecido no es ninguno de los valores de <see cref="T:System.Data.MissingMappingAction" />.</exception>
      <returns>Uno de los valores de <see cref="T:System.Data.MissingMappingAction" />. De manera predeterminada, es <see langword="Passthrough" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.MissingSchemaAction">
      <summary>Determina la acción que hay que llevar a cabo cuando el esquema <see cref="T:System.Data.DataSet" /> existente no coincide con los datos entrantes.</summary>
      <exception cref="T:System.ArgumentException">El valor establecido no es ninguno de los valores de <see cref="T:System.Data.MissingSchemaAction" />.</exception>
      <returns>Uno de los valores de <see cref="T:System.Data.MissingSchemaAction" />. De manera predeterminada, es <see langword="Add" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.ReturnProviderSpecificTypes">
      <summary>Obtiene o establece un valor que indica si el método <see langword="Fill" /> debe devolver valores específicos del proveedor o valores comunes conforme a CLS.</summary>
      <returns>Es <see langword="true" /> si el método <see langword="Fill" /> debe devolver valores específicos del proveedor; de lo contrario, es <see langword="false" /> para que devuelva valores comunes conforme a CLS.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings">
      <summary>Indica cómo se asigna una tabla de origen a una tabla de conjuntos de datos.</summary>
      <returns>Colección que proporciona la asignación maestra entre los registros devueltos y la clase <see cref="T:System.Data.DataSet" />. El valor predeterminado es una colección vacía.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.TableMappings">
      <summary>Obtiene una colección que proporciona la asignación principal entre una tabla de origen y <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Colección que proporciona la asignación maestra entre los registros devueltos y la clase <see cref="T:System.Data.DataSet" />. El valor predeterminado es una colección vacía.</returns>
    </member>
    <member name="T:System.Data.Common.DataColumnMapping">
      <summary>Contiene una asignación de columna genérica para un objeto que se hereda de <see cref="T:System.Data.Common.DataAdapter" />. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DataColumnMapping" /> con el nombre de columna de origen especificado y el nombre de columna de <see cref="T:System.Data.DataSet" /> que se va a asignar.</summary>
      <param name="sourceColumn">Nombre de columna de un origen de datos (con distinción entre mayúsculas y minúsculas).</param>
      <param name="dataSetColumn">Nombre de columna (sin distinción entre mayúsculas y minúsculas) de <see cref="T:System.Data.DataSet" /> que se va a asignar.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)">
      <summary>Obtiene <see cref="T:System.Data.DataColumn" /> a partir de la tabla <see cref="T:System.Data.DataTable" /> especificada mediante <see cref="T:System.Data.MissingSchemaAction" /> y la propiedad <see cref="P:System.Data.Common.DataColumnMapping.DataSetColumn" />.</summary>
      <param name="dataTable">
        <see cref="T:System.Data.DataTable" /> a partir de donde obtener la columna.</param>
      <param name="dataType">
        <see cref="T:System.Type" /> de la columna de datos.</param>
      <param name="schemaAction">Uno de los valores de <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <returns>Columna de datos.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.String,System.String,System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)">
      <summary>Una versión estática del método <see cref="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)" /> al que se puede llamar sin crear instancias de un objeto <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
      <param name="sourceColumn">Nombre de columna de un origen de datos (con distinción entre mayúsculas y minúsculas).</param>
      <param name="dataSetColumn">Nombre de columna (sin distinción entre mayúsculas y minúsculas) de <see cref="T:System.Data.DataSet" /> que se va a asignar.</param>
      <param name="dataTable">Instancia de <see cref="T:System.Data.DataTable" />.</param>
      <param name="dataType">El tipo de datos de la columna que se va a asignar.</param>
      <param name="schemaAction">Determina la acción que hay que llevar a cabo cuando el esquema <see cref="T:System.Data.DataSet" /> existente no coincide con los datos entrantes.</param>
      <returns>Un objeto <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.System#ICloneable#Clone">
      <summary>Crea un nuevo objeto copiado de la instancia actual.</summary>
      <returns>Copia del objeto actual.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.ToString">
      <summary>Convierte el nombre actual de <see cref="P:System.Data.Common.DataColumnMapping.SourceColumn" /> en una cadena.</summary>
      <returns>Nombre de <see cref="P:System.Data.Common.DataColumnMapping.SourceColumn" /> actual en forma de cadena.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMapping.DataSetColumn">
      <summary>Obtiene o establece el nombre de la columna de <see cref="T:System.Data.DataSet" /> al que se va a asignar.</summary>
      <returns>Nombre de la columna del <see cref="T:System.Data.DataSet" /> al que se va a asignar. El nombre no distingue entre mayúsculas y minúsculas.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMapping.SourceColumn">
      <summary>Obtiene o establece el nombre de la columna del origen de datos desde el que se va a asignar. El nombre distingue entre mayúsculas y minúsculas.</summary>
      <returns>Nombre de la columna del origen de datos (con distinción entre mayúsculas y minúsculas).</returns>
    </member>
    <member name="T:System.Data.Common.DataColumnMappingCollection">
      <summary>Contiene una colección de objetos <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.#ctor">
      <summary>Crea una colección <see cref="T:System.Data.Common.DataColumnMappingCollection" /> vacía.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Add(System.Object)">
      <summary>Agrega un objeto <see cref="T:System.Data.Common.DataColumnMapping" /> a la colección.</summary>
      <param name="value">Objeto <see langword="DataColumnMapping" /> que se va a agregar a la colección.</param>
      <exception cref="T:System.InvalidCastException">El objeto que se ha pasado no era un objeto <see cref="T:System.Data.Common.DataColumnMapping" />.</exception>
      <returns>Índice del objeto <see langword="DataColumnMapping" /> que se ha agregado a la colección.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Add(System.String,System.String)">
      <summary>Agrega un objeto <see cref="T:System.Data.Common.DataColumnMapping" /> a la colección cuando se especifica un nombre de columna de origen y un nombre de columna de <see cref="T:System.Data.DataSet" />.</summary>
      <param name="sourceColumn">Nombre de la columna de origen que se va a asignar (con distinción entre mayúsculas y minúsculas).</param>
      <param name="dataSetColumn">Nombre de la columna de <see cref="T:System.Data.DataSet" /> que se va a asignar (sin distinción entre mayúsculas y minúsculas).</param>
      <returns>El objeto <see langword="DataColumnMapping" /> que se ha agregado a la colección.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.AddRange(System.Array)">
      <summary>Copia los elementos de la colección <see cref="T:System.Array" /> especificada al final de la colección.</summary>
      <param name="values">
        <see cref="T:System.Array" /> que se agrega a la colección.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.AddRange(System.Data.Common.DataColumnMapping[])">
      <summary>Copia los elementos de la matriz <see cref="T:System.Data.Common.DataColumnMapping" /> especificada al final de la colección.</summary>
      <param name="values">Matriz de objetos <see cref="T:System.Data.Common.DataColumnMapping" /> que se va a agregar a la colección.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Clear">
      <summary>Quita todos los objetos <see cref="T:System.Data.Common.DataColumnMapping" /> de la colección.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Contains(System.Object)">
      <summary>Obtiene un valor que indica si existe un objeto <see cref="T:System.Data.Common.DataColumnMapping" /> con el <see cref="T:System.Object" /> especificado en la colección.</summary>
      <param name="value">
        <see cref="T:System.Object" /> que es el objeto <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
      <exception cref="T:System.InvalidCastException">El objeto que se ha pasado no era un objeto <see cref="T:System.Data.Common.DataColumnMapping" />.</exception>
      <returns>
        <see langword="true" /> si la colección contiene el objeto <see cref="T:System.Data.Common.DataColumnMapping" /> especificado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Contains(System.String)">
      <summary>Obtiene un valor que indica si existe un objeto <see cref="T:System.Data.Common.DataColumnMapping" /> con el nombre de columna de origen especificado en la colección.</summary>
      <param name="value">Nombre de columna de origen del objeto <see cref="T:System.Data.Common.DataColumnMapping" /> (con distinción entre mayúsculas y minúsculas).</param>
      <returns>
        <see langword="true" /> si la colección contiene un objeto <see cref="T:System.Data.Common.DataColumnMapping" /> con el nombre de columna de origen especificado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copia los elementos de <see cref="T:System.Data.Common.DataColumnMappingCollection" /> en la matriz especificada.</summary>
      <param name="array">Matriz <see cref="T:System.Array" /> en la que se van a copiar los elementos de <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</param>
      <param name="index">Índice inicial de la matriz.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.CopyTo(System.Data.Common.DataColumnMapping[],System.Int32)">
      <summary>Copia los elementos de <see cref="T:System.Data.Common.DataColumnMappingCollection" /> en la matriz <see cref="T:System.Data.Common.DataColumnMapping" /> especificada.</summary>
      <param name="array">Matriz <see cref="T:System.Data.Common.DataColumnMapping" /> en la que se van a copiar los elementos de <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</param>
      <param name="index">Índice de base cero del objeto <paramref name="array" /> donde comienza la copia.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetByDataSetColumn(System.String)">
      <summary>Obtiene el objeto <see cref="T:System.Data.Common.DataColumnMapping" /> con el nombre de columna de <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="value">Nombre de la columna de <see cref="T:System.Data.DataSet" /> que se va a buscar (sin distinción entre mayúsculas y minúsculas).</param>
      <returns>Objeto <see cref="T:System.Data.Common.DataColumnMapping" /> con el nombre de columna de <see cref="T:System.Data.DataSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetColumnMappingBySchemaAction(System.Data.Common.DataColumnMappingCollection,System.String,System.Data.MissingMappingAction)">
      <summary>Obtiene un objeto <see cref="T:System.Data.Common.DataColumnMapping" /> para la colección <see cref="T:System.Data.Common.DataColumnMappingCollection" /> especificada, un nombre de columna de origen y <see cref="T:System.Data.MissingMappingAction" />.</summary>
      <param name="columnMappings">
        <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</param>
      <param name="sourceColumn">Nombre de columna de origen que se va a buscar (con distinción entre mayúsculas y minúsculas).</param>
      <param name="mappingAction">Uno de los valores de <see cref="T:System.Data.MissingMappingAction" />.</param>
      <exception cref="T:System.InvalidOperationException">El parámetro <paramref name="mappingAction" /> se estableció en <see langword="Error" /> y no se especificó ninguna asignación.</exception>
      <returns>Un objeto <see cref="T:System.Data.Common.DataColumnMapping" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetDataColumn(System.Data.Common.DataColumnMappingCollection,System.String,System.Type,System.Data.DataTable,System.Data.MissingMappingAction,System.Data.MissingSchemaAction)">
      <summary>Es un método estático que devuelve un objeto <see cref="T:System.Data.DataColumn" /> sin crear instancias de un objeto <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</summary>
      <param name="columnMappings">
        <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</param>
      <param name="sourceColumn">Nombre de columna de un origen de datos (con distinción entre mayúsculas y minúsculas).</param>
      <param name="dataType">El tipo de datos de la columna que se va a asignar.</param>
      <param name="dataTable">Instancia de <see cref="T:System.Data.DataTable" />.</param>
      <param name="mappingAction">Uno de los valores de <see cref="T:System.Data.MissingMappingAction" />.</param>
      <param name="schemaAction">Determina la acción que hay que llevar a cabo cuando el esquema <see cref="T:System.Data.DataSet" /> existente no coincida con los datos entrantes.</param>
      <returns>Un objeto <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetEnumerator">
      <summary>Obtiene un enumerador que puede recorrer en iteración la colección.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> que se puede utilizar para recorrer en iteración la colección.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOf(System.Object)">
      <summary>Obtiene la ubicación del <see cref="T:System.Object" /> especificado, que es un objeto <see cref="T:System.Data.Common.DataColumnMapping" /> de la colección.</summary>
      <param name="value">
        <see cref="T:System.Object" /> que es el objeto <see cref="T:System.Data.Common.DataColumnMapping" /> que se va a buscar.</param>
      <returns>Ubicación de base cero del <see cref="T:System.Object" /> especificado, que es un objeto <see cref="T:System.Data.Common.DataColumnMapping" /> de la colección.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOf(System.String)">
      <summary>Obtiene la ubicación del objeto <see cref="T:System.Data.Common.DataColumnMapping" /> con el nombre de columna de origen especificado.</summary>
      <param name="sourceColumn">Nombre de la columna de origen con distinción entre mayúsculas y minúsculas.</param>
      <returns>Ubicación de base cero del objeto <see cref="T:System.Data.Common.DataColumnMapping" /> con el nombre de columna de origen especificado (con distinción entre mayúsculas y minúsculas).</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOfDataSetColumn(System.String)">
      <summary>Obtiene la ubicación del objeto <see cref="T:System.Data.Common.DataColumnMapping" /> especificado con el nombre de columna de <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataSetColumn">Nombre de columna de conjunto de datos que se va a buscar (sin distinción entre mayúsculas y minúsculas).</param>
      <returns>Ubicación de base cero del objeto <see cref="T:System.Data.Common.DataColumnMapping" /> especificado con el nombre de columna de <see langword="DataSet" /> especificado, o -1 si el objeto <see langword="DataColumnMapping" /> no existe en la colección.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Insert(System.Int32,System.Data.Common.DataColumnMapping)">
      <summary>Inserta un objeto <see cref="T:System.Data.Common.DataColumnMapping" /> en la colección <see cref="T:System.Data.Common.DataColumnMappingCollection" />, en el índice especificado.</summary>
      <param name="index">Índice de base cero del objeto <see cref="T:System.Data.Common.DataColumnMapping" /> que se va a insertar.</param>
      <param name="value">Objeto <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Insert(System.Int32,System.Object)">
      <summary>Inserta un objeto <see cref="T:System.Data.Common.DataColumnMapping" /> en la colección <see cref="T:System.Data.Common.DataColumnMappingCollection" />, en el índice especificado.</summary>
      <param name="index">Índice de base cero del objeto <see cref="T:System.Data.Common.DataColumnMapping" /> que se va a insertar.</param>
      <param name="value">Objeto <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Remove(System.Data.Common.DataColumnMapping)">
      <summary>Quita el objeto <see cref="T:System.Data.Common.DataColumnMapping" /> especificado de la colección.</summary>
      <param name="value">
        <see cref="T:System.Data.Common.DataColumnMapping" /> que se va a quitar.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Remove(System.Object)">
      <summary>Quita <see cref="T:System.Object" /> que es un objeto <see cref="T:System.Data.Common.DataColumnMapping" /> de la colección.</summary>
      <param name="value">
        <see cref="T:System.Object" /> que es el objeto <see cref="T:System.Data.Common.DataColumnMapping" /> que se va a quitar.</param>
      <exception cref="T:System.InvalidCastException">El objeto especificado no era un objeto <see cref="T:System.Data.Common.DataColumnMapping" />.</exception>
      <exception cref="T:System.ArgumentException">El objeto especificado no está en la colección.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.RemoveAt(System.Int32)">
      <summary>Quita el objeto <see cref="T:System.Data.Common.DataColumnMapping" /> con el índice especificado de la colección.</summary>
      <param name="index">Índice de base cero del objeto <see cref="T:System.Data.Common.DataColumnMapping" /> que se va a quitar.</param>
      <exception cref="T:System.IndexOutOfRangeException">No hay ningún objeto <see cref="T:System.Data.Common.DataColumnMapping" /> con el índice especificado.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.RemoveAt(System.String)">
      <summary>Quita el objeto <see cref="T:System.Data.Common.DataColumnMapping" /> con el nombre de columna de origen especificado de la colección.</summary>
      <param name="sourceColumn">Nombre de columna de origen (con distinción entre mayúsculas y minúsculas).</param>
      <exception cref="T:System.IndexOutOfRangeException">No existe ningún objeto <see cref="T:System.Data.Common.DataColumnMapping" /> con el nombre de columna de origen especificado.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#Add(System.String,System.String)">
      <summary>Agrega un objeto <see cref="T:System.Data.Common.DataColumnMapping" /> a la colección <see cref="T:System.Data.Common.DataColumnMappingCollection" /> utilizando la columna de origen y los nombres de columna de <see cref="T:System.Data.DataSet" />.</summary>
      <param name="sourceColumnName">Nombre de la columna de origen con distinción entre mayúsculas y minúsculas.</param>
      <param name="dataSetColumnName">Nombre de la columna del <see cref="T:System.Data.DataSet" />.</param>
      <returns>Objeto ColumnMapping que se ha agregado a la colección.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#GetByDataSetColumn(System.String)">
      <summary>Obtiene el objeto <see cref="T:System.Data.Common.DataColumnMapping" /> que tiene el nombre de columna de <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataSetColumnName">Nombre de la columna de <see cref="T:System.Data.DataSet" /> que se va a buscar (sin distinción entre mayúsculas y minúsculas).</param>
      <returns>Objeto <see cref="T:System.Data.Common.DataColumnMapping" /> que tiene el nombre de columna de <see cref="T:System.Data.DataSet" /> especificado.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Count">
      <summary>Obtiene el número de objetos <see cref="T:System.Data.Common.DataColumnMapping" /> que hay en la colección.</summary>
      <returns>Número de elementos de la colección.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Item(System.Int32)">
      <summary>Obtiene o establece el objeto <see cref="T:System.Data.Common.DataColumnMapping" /> que se encuentra en el índice especificado.</summary>
      <param name="index">Índice de base cero del objeto <see cref="T:System.Data.Common.DataColumnMapping" /> que se va a buscar.</param>
      <returns>Objeto <see cref="T:System.Data.Common.DataColumnMapping" /> en el índice especificado.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Item(System.String)">
      <summary>Obtiene o establece el objeto <see cref="T:System.Data.Common.DataColumnMapping" /> con el nombre de columna de origen especificado.</summary>
      <param name="sourceColumn">Nombre de la columna de origen con distinción entre mayúsculas y minúsculas.</param>
      <returns>Objeto <see cref="T:System.Data.Common.DataColumnMapping" /> con el nombre de columna de origen especificado.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Obtiene un valor que indica si el acceso a <see cref="T:System.Collections.ICollection" /> está sincronizado (es seguro para subprocesos).</summary>
      <returns>Es <see langword="true" /> si el acceso a <see cref="T:System.Collections.ICollection" /> está sincronizado (es seguro para subprocesos); de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#ICollection#SyncRoot">
      <summary>Obtiene un objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Un objeto que se puede usar para sincronizar el acceso a la clase <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#IsFixedSize">
      <summary>Obtiene un valor que indica si el objeto <see cref="T:System.Collections.IList" /> tiene un tamaño fijo.</summary>
      <returns>
        <see langword="true" /> si la <see cref="T:System.Collections.IList" /> tiene un tamaño fijo; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#IsReadOnly">
      <summary>Obtiene un valor que indica si <see cref="T:System.Collections.IList" /> es de solo lectura.</summary>
      <returns>Es <see langword="true" /> si la interfaz <see cref="T:System.Collections.IList" /> es de solo lectura; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Obtiene o establece el elemento en el índice especificado.</summary>
      <param name="index">Índice de base cero del elemento que se va a obtener o establecer.</param>
      <returns>Elemento en el índice especificado.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#Item(System.String)">
      <summary>Obtiene o establece el objeto <see cref="T:System.Data.IColumnMapping" /> con el nombre de <see langword="SourceColumn" /> especificado.</summary>
      <param name="index">Índice del elemento.</param>
      <returns>Objeto <see langword="IColumnMapping" /> con el nombre de <see langword="SourceColumn" /> especificado.</returns>
    </member>
    <member name="T:System.Data.Common.DataTableMapping">
      <summary>Contiene una descripción de una relación asignada entre una tabla de origen y una <see cref="T:System.Data.DataTable" />. Esta clase la usa un <see cref="T:System.Data.Common.DataAdapter" /> al rellenar un <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DataTableMapping" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DataTableMapping" /> con un origen cuando se especifica un nombre de tabla de origen y un nombre de <see cref="T:System.Data.DataTable" />.</summary>
      <param name="sourceTable">Nombre de tabla de origen de un origen de datos (con distinción entre mayúsculas y minúsculas).</param>
      <param name="dataSetTable">Nombre de tabla de <see cref="T:System.Data.DataSet" /> que se va a asignar.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor(System.String,System.String,System.Data.Common.DataColumnMapping[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DataTableMapping" /> cuando se especifica un nombre de tabla de origen, un nombre de <see cref="T:System.Data.DataTable" /> y una matriz de objetos <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
      <param name="sourceTable">Nombre de tabla de origen de un origen de datos (con distinción entre mayúsculas y minúsculas).</param>
      <param name="dataSetTable">Nombre de tabla de <see cref="T:System.Data.DataSet" /> que se va a asignar.</param>
      <param name="columnMappings">Matriz de objetos <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetColumnMappingBySchemaAction(System.String,System.Data.MissingMappingAction)">
      <summary>Obtiene <see cref="T:System.Data.DataColumn" /> a partir de la tabla <see cref="T:System.Data.DataTable" /> especificada utilizando el valor <see cref="T:System.Data.MissingMappingAction" /> especificado y el nombre de <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="sourceColumn">Nombre del objeto <see cref="T:System.Data.DataColumn" />.</param>
      <param name="mappingAction">Uno de los valores de <see cref="T:System.Data.MissingMappingAction" />.</param>
      <exception cref="T:System.InvalidOperationException">El parámetro <paramref name="mappingAction" /> se estableció en <see langword="Error" /> y no se especificó ninguna asignación.</exception>
      <returns>Columna de datos.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetDataColumn(System.String,System.Type,System.Data.DataTable,System.Data.MissingMappingAction,System.Data.MissingSchemaAction)">
      <summary>Devuelve un objeto <see cref="T:System.Data.DataColumn" /> para un nombre de columna especificado.</summary>
      <param name="sourceColumn">Nombre del objeto <see cref="T:System.Data.DataColumn" />.</param>
      <param name="dataType">Tipo de datos de <paramref name="sourceColumn" />.</param>
      <param name="dataTable">Nombre de tabla de <see cref="T:System.Data.DataSet" /> que se va a asignar.</param>
      <param name="mappingAction">Uno de los valores de <see cref="T:System.Data.MissingMappingAction" />.</param>
      <param name="schemaAction">Uno de los valores de <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <returns>Un objeto <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetDataTableBySchemaAction(System.Data.DataSet,System.Data.MissingSchemaAction)">
      <summary>Obtiene la tabla <see cref="T:System.Data.DataTable" /> actual para el <see cref="T:System.Data.DataSet" /> especificado utilizando el valor <see cref="T:System.Data.MissingSchemaAction" /> especificado.</summary>
      <param name="dataSet">
        <see cref="T:System.Data.DataSet" /> a partir de donde se va a obtener <see cref="T:System.Data.DataTable" />.</param>
      <param name="schemaAction">Uno de los valores de <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <returns>Una tabla de datos.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.System#ICloneable#Clone">
      <summary>Crea un nuevo objeto copiado de la instancia actual.</summary>
      <returns>Un nuevo objeto que es una copia de la instancia actual.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.ToString">
      <summary>Convierte el nombre actual de <see cref="P:System.Data.Common.DataTableMapping.SourceTable" /> en una cadena.</summary>
      <returns>Nombre de <see cref="P:System.Data.Common.DataTableMapping.SourceTable" /> actual en forma de cadena.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.ColumnMappings">
      <summary>Obtiene el <see cref="T:System.Data.Common.DataColumnMappingCollection" /> para la <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Colección de asignaciones de columnas de datos.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.DataSetTable">
      <summary>Obtiene o establece el nombre de tabla a partir de <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Nombre de tabla a partir de <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.SourceTable">
      <summary>Obtiene o establece el nombre de tabla de origen de un origen de datos (con distinción entre mayúsculas y minúsculas).</summary>
      <returns>Nombre de tabla de origen de un origen de datos (con distinción entre mayúsculas y minúsculas).</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.System#Data#ITableMapping#ColumnMappings">
      <summary>Obtiene el <see cref="T:System.Data.Common.DataColumnMappingCollection" /> derivado para el <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Colección de asignaciones de columnas de datos.</returns>
    </member>
    <member name="T:System.Data.Common.DataTableMappingCollection">
      <summary>Una colección de objetos <see cref="T:System.Data.Common.DataTableMapping" />. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DataTableMappingCollection" />. Esta nueva instancia está vacía, es decir, todavía no contiene objetos <see cref="T:System.Data.Common.DataTableMapping" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Add(System.Object)">
      <summary>Agrega un <see cref="T:System.Object" />, que es una asignación de tabla, a la colección.</summary>
      <param name="value">Objeto <see langword="DataTableMapping" /> que se va a agregar a la colección.</param>
      <exception cref="T:System.InvalidCastException">El objeto que se ha pasado no era un objeto <see cref="T:System.Data.Common.DataTableMapping" />.</exception>
      <returns>Índice del objeto <see langword="DataTableMapping" /> agregado a la colección.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Add(System.String,System.String)">
      <summary>Agrega un objeto <see cref="T:System.Data.Common.DataTableMapping" /> a la colección cuando se especifica un nombre de tabla de origen y un nombre de tabla de <see cref="T:System.Data.DataSet" />.</summary>
      <param name="sourceTable">Nombre de la tabla de origen desde la que se va a asignar (con distinción entre mayúsculas y minúsculas).</param>
      <param name="dataSetTable">Nombre de la tabla de <see cref="T:System.Data.DataSet" /> que se va a asignar (sin distinción entre mayúsculas y minúsculas).</param>
      <returns>El objeto <see cref="T:System.Data.Common.DataTableMapping" /> que se ha agregado a la colección.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.AddRange(System.Array)">
      <summary>Copia los elementos de la colección <see cref="T:System.Array" /> especificada al final de la colección.</summary>
      <param name="values">
        <see cref="T:System.Array" /> de valores que se va a agregar a la colección.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.AddRange(System.Data.Common.DataTableMapping[])">
      <summary>Copia los elementos de la matriz <see cref="T:System.Data.Common.DataTableMapping" /> especificada al final de la colección.</summary>
      <param name="values">Matriz de objetos <see cref="T:System.Data.Common.DataTableMapping" /> que se va a agregar a la colección.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Clear">
      <summary>Quita todos los objetos <see cref="T:System.Data.Common.DataTableMapping" /> de la colección.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Contains(System.Object)">
      <summary>Obtiene un valor que indica si el objeto <see cref="T:System.Data.Common.DataTableMapping" /> especificado existe en la colección.</summary>
      <param name="value">
        <see cref="T:System.Object" /> que es el objeto <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <returns>
        <see langword="true" /> si esta colección contiene el objeto <see cref="T:System.Data.Common.DataTableMapping" /> especificado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Contains(System.String)">
      <summary>Obtiene un valor que indica si existe un objeto <see cref="T:System.Data.Common.DataTableMapping" /> con el nombre de tabla de origen especificado en la colección.</summary>
      <param name="value">Nombre de tabla de origen que contiene el objeto <see cref="T:System.Data.Common.DataTableMapping" /> (con distinción entre mayúsculas y minúsculas).</param>
      <returns>
        <see langword="true" /> si la colección contiene un objeto <see cref="T:System.Data.Common.DataTableMapping" /> con este nombre de tabla de origen; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copia los elementos de <see cref="T:System.Data.Common.DataTableMappingCollection" /> en la matriz especificada.</summary>
      <param name="array">
        <see cref="T:System.Array" /> donde se van a copiar los elementos de <see cref="T:System.Data.Common.DataTableMappingCollection" />.</param>
      <param name="index">Índice inicial de la matriz.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.CopyTo(System.Data.Common.DataTableMapping[],System.Int32)">
      <summary>Copia los elementos de <see cref="T:System.Data.Common.DataTableMapping" /> en la matriz especificada.</summary>
      <param name="array">
        <see cref="T:System.Data.Common.DataTableMapping" /> donde se van a copiar los elementos de <see cref="T:System.Data.Common.DataTableMappingCollection" />.</param>
      <param name="index">Índice inicial de la matriz.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetByDataSetTable(System.String)">
      <summary>Obtiene el objeto <see cref="T:System.Data.Common.DataTableMapping" /> con el nombre de tabla de <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataSetTable">Nombre de la tabla de <see cref="T:System.Data.DataSet" /> que se va a buscar (sin distinción entre mayúsculas y minúsculas).</param>
      <returns>Objeto <see cref="T:System.Data.Common.DataTableMapping" /> con el nombre de tabla de <see cref="T:System.Data.DataSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetEnumerator">
      <summary>Obtiene un enumerador que puede recorrer en iteración la colección.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> que se puede utilizar para recorrer en iteración la colección.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetTableMappingBySchemaAction(System.Data.Common.DataTableMappingCollection,System.String,System.String,System.Data.MissingMappingAction)">
      <summary>Obtiene un objeto <see cref="T:System.Data.Common.DataColumnMapping" /> con el nombre de tabla de origen especificado y el nombre de tabla de <see cref="T:System.Data.DataSet" />, utilizando <see cref="T:System.Data.MissingMappingAction" /> que se haya especificado.</summary>
      <param name="tableMappings">Colección <see cref="T:System.Data.Common.DataTableMappingCollection" /> que se va a buscar.</param>
      <param name="sourceTable">Nombre de la tabla de origen asignada (con distinción entre mayúsculas y minúsculas).</param>
      <param name="dataSetTable">Nombre de la tabla de <see cref="T:System.Data.DataSet" /> asignada (sin distinción entre mayúsculas y minúsculas).</param>
      <param name="mappingAction">Uno de los valores de <see cref="T:System.Data.MissingMappingAction" />.</param>
      <exception cref="T:System.InvalidOperationException">El parámetro <paramref name="mappingAction" /> se estableció en <see langword="Error" /> y no se especificó ninguna asignación.</exception>
      <returns>Un objeto <see cref="T:System.Data.Common.DataTableMapping" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOf(System.Object)">
      <summary>Obtiene la ubicación del objeto <see cref="T:System.Data.Common.DataTableMapping" /> especificado en la colección.</summary>
      <param name="value">
        <see cref="T:System.Object" /> que es el objeto <see cref="T:System.Data.Common.DataTableMapping" /> que se va a buscar.</param>
      <returns>Ubicación de base cero del objeto <see cref="T:System.Data.Common.DataTableMapping" /> especificado en la colección.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOf(System.String)">
      <summary>Obtiene la ubicación del objeto <see cref="T:System.Data.Common.DataTableMapping" /> con el nombre de tabla de origen especificado.</summary>
      <param name="sourceTable">Nombre, con distinción entre mayúsculas y minúsculas, de la tabla de origen.</param>
      <returns>Ubicación de base cero del objeto <see cref="T:System.Data.Common.DataTableMapping" /> con el nombre de tabla de origen especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOfDataSetTable(System.String)">
      <summary>Obtiene la ubicación del objeto <see cref="T:System.Data.Common.DataTableMapping" /> con el nombre de tabla de <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataSetTable">Nombre de la tabla de <see langword="DataSet" /> que se va a buscar (sin distinción entre mayúsculas y minúsculas).</param>
      <returns>Ubicación de base cero del objeto <see cref="T:System.Data.Common.DataTableMapping" /> con el nombre de tabla de <see cref="T:System.Data.DataSet" /> especificado, o -1 si el objeto <see cref="T:System.Data.Common.DataTableMapping" /> no existe en la colección.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Data.Common.DataTableMapping)">
      <summary>Inserta un objeto <see cref="T:System.Data.Common.DataTableMapping" /> en la colección <see cref="T:System.Data.Common.DataTableMappingCollection" />, en el índice especificado.</summary>
      <param name="index">Índice de base cero del objeto <see cref="T:System.Data.Common.DataTableMapping" /> que se va a insertar.</param>
      <param name="value">Objeto <see cref="T:System.Data.Common.DataTableMapping" /> que se va a insertar.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Object)">
      <summary>Inserta un objeto <see cref="T:System.Data.Common.DataTableMapping" /> en la colección <see cref="T:System.Data.Common.DataTableMappingCollection" />, en el índice especificado.</summary>
      <param name="index">Índice de base cero del objeto <see cref="T:System.Data.Common.DataTableMapping" /> que se va a insertar.</param>
      <param name="value">Objeto <see cref="T:System.Data.Common.DataTableMapping" /> que se va a insertar.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Remove(System.Data.Common.DataTableMapping)">
      <summary>Quita el objeto <see cref="T:System.Data.Common.DataTableMapping" /> especificado de la colección.</summary>
      <param name="value">Objeto <see cref="T:System.Data.Common.DataTableMapping" /> que se quita.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Remove(System.Object)">
      <summary>Quita el objeto <see cref="T:System.Data.Common.DataTableMapping" /> especificado de la colección.</summary>
      <param name="value">Objeto <see cref="T:System.Data.Common.DataTableMapping" /> que se quita.</param>
      <exception cref="T:System.InvalidCastException">El objeto especificado no era un objeto <see cref="T:System.Data.Common.DataTableMapping" />.</exception>
      <exception cref="T:System.ArgumentException">El objeto especificado no está en la colección.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.RemoveAt(System.Int32)">
      <summary>Quita el objeto <see cref="T:System.Data.Common.DataTableMapping" /> ubicado en el índice especificado de la colección.</summary>
      <param name="index">Índice de base cero del objeto <see cref="T:System.Data.Common.DataTableMapping" /> que se va a quitar.</param>
      <exception cref="T:System.IndexOutOfRangeException">No existe un objeto <see cref="T:System.Data.Common.DataTableMapping" /> con el índice especificado.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.RemoveAt(System.String)">
      <summary>Quita el objeto <see cref="T:System.Data.Common.DataTableMapping" /> con el nombre de tabla de origen especificado de la colección.</summary>
      <param name="sourceTable">Nombre de tabla de origen que se va a buscar (con distinción entre mayúsculas y minúsculas).</param>
      <exception cref="T:System.IndexOutOfRangeException">No existe un objeto <see cref="T:System.Data.Common.DataTableMapping" /> con el nombre de tabla de origen especificado.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Add(System.String,System.String)">
      <summary>Agrega una asignación de tabla a la colección.</summary>
      <param name="sourceTableName">Nombre, con distinción entre mayúsculas y minúsculas, de la tabla de origen.</param>
      <param name="dataSetTableName">Nombre de la tabla del <see cref="T:System.Data.DataSet" />.</param>
      <returns>Referencia al objeto <see cref="T:System.Data.ITableMapping" /> recién asignado.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#GetByDataSetTable(System.String)">
      <summary>Obtiene el objeto TableMapping con el nombre de tabla del <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataSetTableName">Nombre de la tabla del <see langword="DataSet" /> dentro de la colección.</param>
      <returns>Objeto TableMapping con el nombre de tabla del <see langword="DataSet" /> especificado.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Count">
      <summary>Obtiene el número de objetos <see cref="T:System.Data.Common.DataTableMapping" /> que hay en la colección.</summary>
      <returns>El número de objetos <see langword="DataTableMapping" /> de la colección.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Item(System.Int32)">
      <summary>Obtiene o establece el objeto <see cref="T:System.Data.Common.DataTableMapping" /> que se encuentra en el índice especificado.</summary>
      <param name="index">El índice de base cero del objeto <see cref="T:System.Data.Common.DataTableMapping" /> que se debe devolver.</param>
      <returns>Objeto <see cref="T:System.Data.Common.DataTableMapping" /> en el índice especificado.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Item(System.String)">
      <summary>Obtiene o establece el objeto <see cref="T:System.Data.Common.DataTableMapping" /> con el nombre de tabla de origen especificado.</summary>
      <param name="sourceTable">Nombre, con distinción entre mayúsculas y minúsculas, de la tabla de origen.</param>
      <returns>Objeto <see cref="T:System.Data.Common.DataTableMapping" /> con el nombre de tabla de origen especificado.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Obtiene un valor que indica si el acceso a la interfaz <see cref="T:System.Collections.ICollection" /> está sincronizado (es seguro para subprocesos).</summary>
      <returns>Es <see langword="true" /> si el acceso a <see cref="T:System.Collections.ICollection" /> está sincronizado (es seguro para subprocesos); de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#SyncRoot">
      <summary>Obtiene un objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Un objeto que se puede usar para sincronizar el acceso a la clase <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsFixedSize">
      <summary>Obtiene un valor que indica si la interfaz <see cref="T:System.Collections.IList" /> tiene un tamaño fijo.</summary>
      <returns>
        <see langword="true" /> si la <see cref="T:System.Collections.IList" /> tiene un tamaño fijo; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsReadOnly">
      <summary>Obtiene un valor que indica si <see cref="T:System.Collections.IList" /> es de solo lectura.</summary>
      <returns>Es <see langword="true" /> si la interfaz <see cref="T:System.Collections.IList" /> es de solo lectura; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Obtiene o establece un elemento de la colección en el índice especificado.</summary>
      <param name="index">Índice de base cero del elemento que se va a obtener o establecer.</param>
      <returns>Elemento en el índice especificado.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Item(System.String)">
      <summary>Obtiene o establece la instancia de <see cref="T:System.Data.ITableMapping" /> con el nombre de <see cref="P:System.Data.ITableMapping.SourceTable" /> especificado.</summary>
      <param name="index">Nombre de <see langword="SourceTable" /> de <see cref="T:System.Data.ITableMapping" />.</param>
      <returns>Instancia de <see cref="T:System.Data.ITableMapping" /> con el nombre de <see langword="SourceTable" /> especificado.</returns>
    </member>
    <member name="T:System.Data.Common.DbColumn">
      <summary>Representa una columna dentro de un origen de datos.</summary>
    </member>
    <member name="M:System.Data.Common.DbColumn.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DbColumn" />.</summary>
    </member>
    <member name="P:System.Data.Common.DbColumn.AllowDBNull">
      <summary>Obtiene un valor booleano que acepta valores null que indica si los valores <see langword="DBNull" /> se permiten en esta columna o no, o devuelve <see langword="null" /> si no se establece ningún valor. Se puede establecer en <see langword="true" /> o <see langword="false" />, lo que indica si los valores <see langword="DBNull" /> se permiten en esta columna o no, o <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) si se invalida en una clase derivada.</summary>
      <returns>Devuelve <see langword="true" /> si los valores <see langword="DBNull" /> están permitidos en esta columna; en caso contrario, <see langword="false" />. Si no se establece ningún valor, devuelve una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseCatalogName">
      <summary>Obtiene el nombre de catálogo asociado con el origen de datos; en caso contrario, <see langword="null" /> si no se establece ningún valor. Se puede establecer en el nombre del catálogo o <see langword="null" /> cuando se invalida en una clase derivada.</summary>
      <returns>Nombre del catálogo asociado al origen de datos; en caso contrario, referencia null (<see langword="Nothing" /> en Visual Basic) si no se establece ningún valor.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseColumnName">
      <summary>Obtiene el nombre de columna base; en caso contrario, <see langword="null" /> si no se establece ningún valor. Se puede establecer en el nombre de columna o <see langword="null" /> cuando se invalida en una clase derivada.</summary>
      <returns>Nombre de columna base; en caso contrario, referencia null (<see langword="Nothing" /> en Visual Basic) si no se establece ningún valor.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseSchemaName">
      <summary>Obtiene el nombre de esquema asociado con el origen de datos; en caso contrario, <see langword="null" /> si no se establece ningún valor. Se puede establecer en el nombre de esquema o en <see langword="null" /> cuando se invalida en una clase derivada.</summary>
      <returns>Nombre de esquema asociado con el origen de datos; en caso contrario, referencia null (<see langword="Nothing" /> en Visual Basic) si no se establece ningún valor.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseServerName">
      <summary>Obtiene el nombre del servidor asociado a la columna; en caso contrario, <see langword="null" /> si no se establece ningún valor. Se puede establecer en el nombre del servidor o <see langword="null" /> cuando se invalida en una clase derivada.</summary>
      <returns>Nombre del servidor asociado a la columna; en caso contrario, referencia null (<see langword="Nothing" /> en Visual Basic) si no se establece ningún valor.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseTableName">
      <summary>Obtiene el nombre de tabla en el esquema; en caso contrario, <see langword="null" /> si no se establece ningún valor. Se puede establecer en el nombre de tabla o <see langword="null" /> cuando se invalida en una clase derivada.</summary>
      <returns>Nombre de tabla en el esquema; en caso contrario, referencia null (<see langword="Nothing" /> en Visual Basic) si no se establece ningún valor.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnName">
      <summary>Obtiene el nombre de la columna. Puede establecerse en el nombre de columna cuando se invalida en una clase derivada.</summary>
      <returns>El nombre de la columna.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnOrdinal">
      <summary>Obtiene la posición de columna (ordinal) en la fila de origen de datos; en caso contrario, <see langword="null" /> si no se establece ningún valor. Puede establecerse en un valor <see langword="int32" /> para especificar la posición de la columna o <see langword="null" /> cuando se invalida en una clase derivada.</summary>
      <returns>Valor <see langword="int32" /> de columna ordinal; en caso contrario, referencia null (<see langword="Nothing" /> en Visual Basic) si no se establece ningún valor.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnSize">
      <summary>Obtiene el tamaño de columna; en caso contrario, <see langword="null" /> si no se establece ningún valor. Puede establecerse en un valor <see langword="int32" /> para especificar el tamaño de la columna o <see langword="null" /> cuando se invalida en una clase derivada.</summary>
      <returns>Un <see langword="int32" /> valor para el tamaño de columna; en caso contrario, una referencia nula ( <see langword="Nothing" /> en Visual Basic) si no se establece ningún valor.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.DataType">
      <summary>Devuelve el tipo de datos almacenado en la columna. Se puede establecer en un objeto <see cref="T:System.Type" /> que representa el tipo de datos de la columna cuando se invalida en una clase derivada.</summary>
      <returns>Objeto <see cref="T:System.Type" /> que representa el tipo de datos que contiene la columna.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.DataTypeName">
      <summary>Obtiene el nombre del tipo de datos; en caso contrario, <see langword="null" /> si no se establece ningún valor. Puede establecerse en el nombre de tipo de datos o <see langword="null" /> cuando se invalida en una clase derivada.</summary>
      <returns>Nombre del tipo de datos; en caso contrario, referencia null (<see langword="Nothing" /> en Visual Basic) si no se establece ningún valor.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsAliased">
      <summary>Obtiene un valor booleano que acepta valores null que indica si esta columna tiene un alias o no, o devuelve <see langword="null" /> si no se establece ningún valor. Se puede establecer en <see langword="true" /> o <see langword="false" />, lo que indica si esta columna es un alias o no, o <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) si se invalida en una clase derivada.</summary>
      <returns>Devuelve <see langword="true" /> si esta columna tiene un alias; en caso contrario, <see langword="false" />. Si no se establece ningún valor, devuelve una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsAutoIncrement">
      <summary>Obtiene un valor booleano que acepta valores null que indica si los valores de esta columna se incrementan automáticamente o no, o devuelve <see langword="null" /> si no se establece ningún valor. Se puede establecer en <see langword="true" /> o <see langword="false" />, lo que indica si los valores de esta columna se incrementan automáticamente o no, o <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) si se invalida en una clase derivada.</summary>
      <returns>Devuelve <see langword="true" /> si hay valores de esta columna que se incrementan automáticamente; en caso contrario, <see langword="false" />. Si no se establece ningún valor, devuelve una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsExpression">
      <summary>Obtiene un valor booleano que acepta valores null que indica si esta columna es una expresión o no, o devuelve <see langword="null" /> si no se establece ningún valor. Se puede establecer en <see langword="true" /> o <see langword="false" />, lo que indica si esta columna es una expresión o no, o <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) si se invalida en una clase derivada.</summary>
      <returns>Devuelve <see langword="true" /> si esta columna es una expresión; en caso contrario, <see langword="false" />. Si no se establece ningún valor, devuelve una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsHidden">
      <summary>Obtiene un valor booleano que acepta valores null que indica si esta columna está oculta o no, o devuelve <see langword="null" /> si no se establece ningún valor. Se puede establecer en <see langword="true" /> o <see langword="false" />, lo que indica si esta columna está oculta o no, o <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) si se invalida en una clase derivada.</summary>
      <returns>Devuelve <see langword="true" /> si esta columna está oculta; en caso contrario, <see langword="false" />. Si no se establece ningún valor, devuelve una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsIdentity">
      <summary>Obtiene un valor booleano que acepta valores null que indica si esta columna es una identidad o no, o devuelve <see langword="null" /> si no se establece ningún valor. Se puede establecer en <see langword="true" /> o <see langword="false" />, lo que indica si esta columna es una identidad o no, o <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) si se invalida en una clase derivada.</summary>
      <returns>Devuelve <see langword="true" /> si esta columna es una identidad; en caso contrario, <see langword="false" />. Si no se establece ningún valor, devuelve una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsKey">
      <summary>Obtiene un valor booleano que acepta valores null que indica si esta columna es una clave o no, o devuelve <see langword="null" /> si no se establece ningún valor. Se puede establecer en <see langword="true" /> o <see langword="false" />, lo que indica si esta columna es una clave o no, o <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) si se invalida en una clase derivada.</summary>
      <returns>Devuelve <see langword="true" /> si esta columna es una clave; en caso contrario, <see langword="false" />. Si no se establece ningún valor, devuelve una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsLong">
      <summary>Obtiene un valor booleano que acepta valores null que indica si esta columna contiene datos Long o no, o devuelve <see langword="null" /> si no se establece ningún valor. Se puede establecer en <see langword="true" /> o <see langword="false" />, lo que indica si esta columna contiene datos Long, o <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) si se reemplaza en una clase derivada.</summary>
      <returns>Devuelve <see langword="true" /> si esta columna contiene datos Long; en caso contrario, <see langword="false" />. Si no se establece ningún valor, devuelve una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsReadOnly">
      <summary>Obtiene un valor booleano que acepta valores null que indica si esta columna es de solo lectura o no, o devuelve <see langword="null" /> si no se establece ningún valor. Se puede establecer en <see langword="true" /> o <see langword="false" />, lo que indica si esta columna es de solo lectura o no, o <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) si se invalida en una clase derivada.</summary>
      <returns>Devuelve <see langword="true" /> si esta columna es de solo lectura; en caso contrario, <see langword="false" />. Si no se establece ningún valor, devuelve una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsUnique">
      <summary>Obtiene un valor booleano que acepta valores null que indica si se aplica a esta columna una restricción única o no, o devuelve <see langword="null" /> si no se establece ningún valor. Se puede establecer en <see langword="true" /> o <see langword="false" />, lo que indica si se aplica una restricción única a esta columna, o <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) si se invalida en una clase derivada.</summary>
      <returns>Devuelve <see langword="true" /> si se aplica una restricción única a esta columna; en caso contrario, <see langword="false" />. Si no se establece ningún valor, devuelve una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.Item(System.String)">
      <summary>Obtiene el objeto basándose en el nombre de la propiedad de columna.</summary>
      <param name="property">Nombre de propiedad de columna.</param>
      <returns>Objeto basado en el nombre de la propiedad de columna.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.NumericPrecision">
      <summary>Obtiene la precisión numérica de la columna de datos; en caso contrario, <see langword="null" /> si no se establece ningún valor. Puede establecerse en un valor <see langword="int32" /> para especificar la precisión numérica de la columna de datos o <see langword="null" /> cuando se invalida en una clase derivada.</summary>
      <returns>
        <see langword="int32" />Valor que especifica la precisión de los datos de la columna, si los datos son numéricos; en caso contrario, una referencia nula ( <see langword="Nothing" /> en Visual Basic) si no se establece ningún valor.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.NumericScale">
      <summary>Obtiene un valor <see langword="int32" /> que acepta valores null o devuelve <see langword="null" /> o la escala numérica de los datos de la columna. Se puede establecer en <see langword="null" /> o un valor <see langword="int32" /> para la escala numérica de los datos de la columna cuando se invalida en una clase derivada.</summary>
      <returns>Referencia nula (<see langword="Nothing" /> en Visual Basic) si no se ha establecido ningún valor; en caso contrario, un valor <see langword="int32" /> que especifica la escala de los datos de la columna, si estos son numéricos.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.UdtAssemblyQualifiedName">
      <summary>Obtiene el nombre calificado con el ensamblado del objeto <see cref="T:System.Type" /> que representa el tipo de datos de la columna; en caso contrario, <see langword="null" /> si no se establece ningún valor. Se puede establecer en el nombre calificado con el ensamblado o <see langword="null" /> cuando se invalida en una clase derivada.</summary>
      <returns>Nombre calificado con el ensamblado del objeto <see cref="T:System.Type" /> que representa el tipo de datos de la columna; en caso contrario, referencia null (<see langword="Nothing" /> en Visual Basic) si no se establece ningún valor.</returns>
    </member>
    <member name="T:System.Data.Common.DbCommand">
      <summary>Representa una instrucción SQL o un procedimiento almacenado que se van a ejecutar en un origen de datos. Proporciona una clase base para las clases específicas de la base de datos que representan comandos. <see cref="Overload:System.Data.Common.DbCommand.ExecuteNonQueryAsync" /></summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.#ctor">
      <summary>Genera una instancia del objeto <see cref="T:System.Data.Common.DbCommand" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.Cancel">
      <summary>Cuando se invalida en una clase derivada, intenta cancelar la ejecución de una instancia de <see cref="T:System.Data.Common.DbCommand" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.CreateDbParameter">
      <summary>Cuando se invalida en una clase derivada, crea una instancia de un objeto <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns>Un objeto <see cref="T:System.Data.Common.DbParameter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.CreateParameter">
      <summary>Crea una nueva instancia de un objeto <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns>Un objeto <see cref="T:System.Data.Common.DbParameter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.DisposeAsync">
      <summary>Desecha de forma asincrónica el objeto de comando.</summary>
      <returns>Tarea <see cref="T:System.Threading.Tasks.ValueTask" /> que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)">
      <summary>Cuando se invalida en una clase derivada, ejecuta el texto de comando en la conexión.</summary>
      <param name="behavior">Instancia de <see cref="T:System.Data.CommandBehavior" />.</param>
      <exception cref="T:System.Data.Common.DbException">Error que se haya producido al ejecutar el texto del comando.</exception>
      <exception cref="T:System.ArgumentException">Hay un valor de <see cref="T:System.Data.CommandBehavior" /> no válido.</exception>
      <returns>Una tarea que representa la operación.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
      <summary>Los proveedores deben implementar este método para proporcionar una implementación no predeterminada para las sobrecargas de <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />.  
  
La implementación predeterminada invoca el método sincrónico <see cref="M:System.Data.Common.DbCommand.ExecuteReader" /> y devuelve una tarea completada, bloqueando el subproceso de llamada. La implementación predeterminada devolverá una tarea cancelada si se pasa un token de cancelación ya cancelado. Las excepciones producidas por ExecuteReader se comunicarán mediante la propiedad Task Exception devuelta.  
  
Este método acepta un token de cancelación que se puede usar para solicitar que la operación se cancele pronto. Las implementaciones pueden omitir esta solicitud.</summary>
      <param name="behavior">Opciones para la ejecución de instrucciones y la recuperación de datos.</param>
      <param name="cancellationToken">Token para cancelar la operación asincrónica.</param>
      <exception cref="T:System.Data.Common.DbException">Error que se haya producido al ejecutar el texto del comando.</exception>
      <exception cref="T:System.ArgumentException">Hay un valor de <see cref="T:System.Data.CommandBehavior" /> no válido.</exception>
      <returns>Tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQuery">
      <summary>Cuando se invalida en una clase derivada, ejecuta una instrucción SQL en un objeto de conexión.</summary>
      <returns>El número de filas afectadas.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync">
      <summary>Una versión asincrónica de <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" />, que ejecuta una instrucción SQL con un objeto de conexión.  
  
Invoca <see cref="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" /> con CancellationToken.None.</summary>
      <exception cref="T:System.Data.Common.DbException">Error que se haya producido al ejecutar el texto del comando.</exception>
      <returns>Tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
      <summary>Esta es la versión asincrónica de <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" />. Los proveedores lo deben reemplazar con una implementación apropiada. El token de cancelación se puede omitir opcionalmente.  
  
La implementación predeterminada invoca el método sincrónico <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" /> y devuelve una tarea completada, bloqueando el subproceso de llamada. La implementación predeterminada devolverá una tarea cancelada si se pasa un token de cancelación ya cancelado.  Las excepciones producidas por <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" /> se comunicarán mediante la propiedad Task Exception devuelta.  
  
No invoque otros métodos y propiedades del objeto <see langword="DbCommand" /> hasta que se haya completado la tarea devuelta.</summary>
      <param name="cancellationToken">Token para cancelar la operación asincrónica.</param>
      <exception cref="T:System.Data.Common.DbException">Error que se haya producido al ejecutar el texto del comando.</exception>
      <returns>Tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReader">
      <summary>Ejecuta <see cref="P:System.Data.Common.DbCommand.CommandText" /> en <see cref="P:System.Data.Common.DbCommand.Connection" /> y devuelve un objeto <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns>Un objeto <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary>Ejecuta <see cref="P:System.Data.Common.DbCommand.CommandText" /> en <see cref="P:System.Data.Common.DbCommand.Connection" /> y devuelve un objeto <see cref="T:System.Data.Common.DbDataReader" /> utilizando uno de los valores de <see cref="T:System.Data.CommandBehavior" />.</summary>
      <param name="behavior">Uno de los valores de enumeración que especifica el comportamiento del comando.</param>
      <returns>Un objeto <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync">
      <summary>Versión asincrónica de <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />, que ejecuta <see cref="P:System.Data.Common.DbCommand.CommandText" /> en <see cref="P:System.Data.Common.DbCommand.Connection" /> y devuelve <see cref="T:System.Data.Common.DbDataReader" />.  
  
Invoca <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> con CancellationToken.None.</summary>
      <exception cref="T:System.Data.Common.DbException">Error que se haya producido al ejecutar el texto del comando.</exception>
      <exception cref="T:System.ArgumentException">Hay un valor de <see cref="T:System.Data.CommandBehavior" /> no válido.</exception>
      <returns>Tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
      <summary>Versión asincrónica de <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />, que ejecuta <see cref="P:System.Data.Common.DbCommand.CommandText" /> en <see cref="P:System.Data.Common.DbCommand.Connection" /> y devuelve <see cref="T:System.Data.Common.DbDataReader" />.  
  
Invoca <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />.</summary>
      <param name="behavior">Uno de los valores de enumeración que ha especificado el comportamiento del comando.</param>
      <exception cref="T:System.Data.Common.DbException">Error que se haya producido al ejecutar el texto del comando.</exception>
      <exception cref="T:System.ArgumentException">Hay un valor de <see cref="T:System.Data.CommandBehavior" /> no válido.</exception>
      <returns>Tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
      <summary>Invoca <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />.</summary>
      <param name="behavior">Uno de los valores de enumeración que especifica el comportamiento del comando.</param>
      <param name="cancellationToken">Token para cancelar la operación asincrónica.</param>
      <exception cref="T:System.Data.Common.DbException">Error que se haya producido al ejecutar el texto del comando.</exception>
      <exception cref="T:System.ArgumentException">Hay un valor de <see cref="T:System.Data.CommandBehavior" /> no válido.</exception>
      <returns>Tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
      <summary>Versión asincrónica de <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />, que ejecuta <see cref="P:System.Data.Common.DbCommand.CommandText" /> en <see cref="P:System.Data.Common.DbCommand.Connection" /> y devuelve <see cref="T:System.Data.Common.DbDataReader" />. Este método propaga una notificación de que las operaciones deberían cancelarse.  
  
Invoca <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />.</summary>
      <param name="cancellationToken">Token para cancelar la operación asincrónica.</param>
      <exception cref="T:System.Data.Common.DbException">Error que se haya producido al ejecutar el texto del comando.</exception>
      <exception cref="T:System.ArgumentException">Hay un valor de <see cref="T:System.Data.CommandBehavior" /> no válido.</exception>
      <returns>Tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalar">
      <summary>Cuando se invalida en una clase derivada, ejecuta la consulta y devuelve la primera columna de la primera fila del conjunto de resultados que devuelve la consulta. Se omiten todas las demás columnas y filas.</summary>
      <returns>Primera columna de la primera fila del conjunto de resultados.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalarAsync">
      <summary>Una versión asincrónica de <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" /> que ejecuta la consulta y devuelve la primera columna de la primera fila del conjunto de resultados que devuelve la consulta. Se omiten todas las demás columnas y filas.  
  
Invoca <see cref="M:System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> con CancellationToken.None.</summary>
      <exception cref="T:System.Data.Common.DbException">Error que se haya producido al ejecutar el texto del comando.</exception>
      <returns>Tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
      <summary>Esta es la versión asincrónica de <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" />. Los proveedores lo deben reemplazar con una implementación apropiada. El token de cancelación se puede omitir opcionalmente.  
  
La implementación predeterminada invoca el método sincrónico <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" /> y devuelve una tarea completada, bloqueando el subproceso de llamada. La implementación predeterminada devolverá una tarea cancelada si se pasa un token de cancelación ya cancelado. Las excepciones producidas por ExecuteScalar se comunicarán mediante la propiedad Task Exception devuelta.  
  
No invoque otros métodos y propiedades del objeto <see langword="DbCommand" /> hasta que se haya completado la tarea devuelta.</summary>
      <param name="cancellationToken">Token para cancelar la operación asincrónica.</param>
      <exception cref="T:System.Data.Common.DbException">Error que se haya producido al ejecutar el texto del comando.</exception>
      <returns>Tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.Prepare">
      <summary>Cuando se invalida en una clase derivada, crea una versión preparada (o compilada) del comando en el origen de datos.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.PrepareAsync(System.Threading.CancellationToken)">
      <summary>Crea de forma asincrónica una versión preparada (o compilada) del comando en el origen de datos.</summary>
      <param name="cancellationToken">Token opcional para cancelar la operación asincrónica. El valor predeterminado es <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Tarea <see cref="T:System.Threading.Tasks.Task" /> que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter">
      <summary>Crea una nueva instancia de un objeto <see cref="T:System.Data.IDbDataParameter" /> .</summary>
      <returns>Un objeto <see langword="IDbDataParameter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader">
      <summary>Ejecuta <see cref="P:System.Data.IDbCommand.CommandText" /> contra <see cref="P:System.Data.IDbCommand.Connection" /> y genera <see cref="T:System.Data.IDataReader" />.</summary>
      <returns>Un objeto <see cref="T:System.Data.IDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)">
      <summary>Ejecuta <see cref="P:System.Data.IDbCommand.CommandText" /> contra <see cref="P:System.Data.IDbCommand.Connection" /> y genera <see cref="T:System.Data.IDataReader" /> mediante uno de los valores de <see cref="T:System.Data.CommandBehavior" />.</summary>
      <param name="behavior">Uno de los valores de enumeración que especifica el comportamiento del comando.</param>
      <returns>Un objeto <see cref="T:System.Data.IDataReader" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandText">
      <summary>Cuando se invalida en una clase derivada, obtiene o establece el comando de texto que se va a ejecutar en el origen de datos.</summary>
      <returns>Comando de texto para ejecutar. El valor predeterminado es una cadena vacía ("").</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandTimeout">
      <summary>Cuando se invalida en una clase derivada, obtiene o establece el tiempo de espera (en segundos) hasta que se interrumpe el intento de ejecutar un comando y se genera un error.</summary>
      <returns>El tiempo en segundos que se ha de esperar para que se ejecute el comando.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandType">
      <summary>Cuando se invalida en una clase derivada, obtiene o establece la forma de interpretar la propiedad <see cref="P:System.Data.Common.DbCommand.CommandText" />.</summary>
      <returns>Uno de los valores de enumeración que especifica cómo se interpreta una cadena de comando. De manera predeterminada, es <see langword="Text" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.Connection">
      <summary>Obtiene o establece el objeto <see cref="T:System.Data.Common.DbConnection" /> utilizado por este <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns>La conexión con el origen de datos.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbConnection">
      <summary>Cuando se invalida en una clase derivada, obtiene o establece la instancia de <see cref="T:System.Data.Common.DbConnection" /> que usa este elemento <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns>La conexión con el origen de datos.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbParameterCollection">
      <summary>Cuando se invalida en una clase derivada, obtiene la colección de objetos <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns>Parámetros de la instrucción SQL o procedimiento almacenado.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbTransaction">
      <summary>Cuando se invalida en una clase derivada, obtiene o establece el elemento <see cref="P:System.Data.Common.DbCommand.DbTransaction" /> en el que se ejecuta este objeto <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns>Transacción en la que se ejecuta un objeto de comando de un proveedor de datos de .NET. El valor predeterminado es una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DesignTimeVisible">
      <summary>Cuando se invalida en una clase derivada, obtiene o establece un valor que indica si el objeto de comando debe estar visible en un control de interfaz personalizado.</summary>
      <returns>
        <see langword="true" /> si el objeto de comando debe estar visible en un control; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.Parameters">
      <summary>Obtiene la colección de objetos <see cref="T:System.Data.Common.DbParameter" />. Para más información sobre los parámetros, vea Configurar parámetros y tipos de datos de parámetros.</summary>
      <returns>Parámetros de la instrucción SQL o procedimiento almacenado.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Connection">
      <summary>Obtiene o establece la interfaz <see cref="T:System.Data.IDbConnection" /> que usa esta instancia de <see cref="T:System.Data.IDbCommand" />.</summary>
      <returns>La conexión con el origen de datos.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters">
      <summary>Obtiene la estructura <see cref="T:System.Data.IDataParameterCollection" />.</summary>
      <returns>Parámetros de la instrucción SQL o procedimiento almacenado.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction">
      <summary>Obtiene o establece <see cref="P:System.Data.Common.DbCommand.DbTransaction" /> dentro del cual se ejecuta este objeto <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns>La transacción dentro de la cual se ejecuta un objeto <see langword="Command" /> de un proveedor de datos .NET Framework. El valor predeterminado es una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.Transaction">
      <summary>Obtiene o establece <see cref="T:System.Data.Common.DbTransaction" /> dentro del cual se ejecuta este objeto <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns>La transacción dentro de la cual se ejecuta un objeto <see langword="Command" /> de un proveedor de datos .NET Framework. El valor predeterminado es una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.UpdatedRowSource">
      <summary>Cuando se invalida en una clase derivada, obtiene o establece cómo se aplican los resultados de un comando al objeto <see cref="T:System.Data.DataRow" /> cuando lo usa el método Update de un objeto <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <returns>Uno de los valores de enumeración que indica cómo se aplican los resultados del comando. El valor predeterminado es <see langword="Both" /> a menos que el comando se genere automáticamente. Entonces, el valor predeterminado es <see langword="None" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbCommandBuilder">
      <summary>Genera automáticamente comandos de tabla única que se utilizan para conciliar los cambios realizados en un objeto <see cref="T:System.Data.DataSet" /> con la base de datos asociada. Es una clase abstracta que sólo se puede heredar.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.#ctor">
      <summary>Inicializa una nueva instancia de una clase que hereda de la clase <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
      <summary>Permite que la implementación del proveedor de la clase <see cref="T:System.Data.Common.DbCommandBuilder" /> controle propiedades de parámetro adicionales.</summary>
      <param name="parameter">
        <see cref="T:System.Data.Common.DbParameter" /> al que se aplican las modificaciones adicionales.</param>
      <param name="row">
        <see cref="T:System.Data.DataRow" /> de la tabla de esquema que proporciona <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" />.</param>
      <param name="statementType">Tipo de comando que se genera: INSERT, UPDATE o DELETE.</param>
      <param name="whereClause">
        <see langword="true" /> si el parámetro forma parte de la cláusula WHERE de actualización o eliminación, <see langword="false" /> si forma parte de los valores de inserción o actualización.</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados que usa <see cref="T:System.Data.Common.DbCommandBuilder" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar tanto recursos administrados como no administrados; <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
      <summary>Obtiene el objeto <see cref="T:System.Data.Common.DbCommand" /> generado automáticamente que es necesario para realizar eliminaciones en el origen de datos.</summary>
      <returns>Objeto <see cref="T:System.Data.Common.DbCommand" /> generado automáticamente que es necesario para realizar eliminaciones.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
      <summary>Obtiene el objeto <see cref="T:System.Data.Common.DbCommand" /> generado automáticamente que es necesario para realizar eliminaciones en el origen de datos, utilizando opcionalmente columnas para los nombres de parámetro.</summary>
      <param name="useColumnsForParameterNames">Si es <see langword="true" />, hay que generar nombres de parámetro que coincidan con los nombres de columna, si es posible. Si es <see langword="false" />, genera <c>@p1</c>, <c>@p2</c>, etc.</param>
      <returns>Objeto <see cref="T:System.Data.Common.DbCommand" /> generado automáticamente que es necesario para realizar eliminaciones.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
      <summary>Obtiene el objeto <see cref="T:System.Data.Common.DbCommand" /> generado automáticamente que es necesario para realizar inserciones en el origen de datos.</summary>
      <returns>Objeto <see cref="T:System.Data.Common.DbCommand" /> generado automáticamente que es necesario para realizar inserciones.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
      <summary>Obtiene el objeto <see cref="T:System.Data.Common.DbCommand" /> generado automáticamente que es necesario para realizar inserciones en el origen de datos, utilizando opcionalmente columnas para los nombres de parámetro.</summary>
      <param name="useColumnsForParameterNames">Si es <see langword="true" />, hay que generar nombres de parámetro que coincidan con los nombres de columna, si es posible. Si es <see langword="false" />, genera <c>@p1</c>, <c>@p2</c>, etc.</param>
      <returns>Objeto <see cref="T:System.Data.Common.DbCommand" /> generado automáticamente que es necesario para realizar inserciones.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)">
      <summary>Devuelve el nombre del parámetro especificado con el formato <c>@p#</c>. Utilícelo al crear un generador de comandos personalizado.</summary>
      <param name="parameterOrdinal">Número que se va a incluir como parte del nombre del parámetro.</param>
      <returns>Nombre del parámetro con el número especificado anexado como parte del nombre de parámetro.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.String)">
      <summary>Devuelve el nombre completo del parámetro, a partir de su nombre parcial.</summary>
      <param name="parameterName">Nombre parcial del parámetro.</param>
      <returns>Nombre completo del parámetro que corresponde al nombre parcial solicitado.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)">
      <summary>Devuelve el marcador de posición para el parámetro en la instrucción SQL asociada.</summary>
      <param name="parameterOrdinal">Número que se va a incluir como parte del nombre del parámetro.</param>
      <returns>Nombre del parámetro con el número especificado anexado.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)">
      <summary>Devuelve la tabla de esquema para <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <param name="sourceCommand">
        <see cref="T:System.Data.Common.DbCommand" /> para el que se va a recuperar la tabla de esquema correspondiente.</param>
      <returns>
        <see cref="T:System.Data.DataTable" /> que representa el esquema para el específico <see cref="T:System.Data.Common.DbCommand" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
      <summary>Obtiene el objeto <see cref="T:System.Data.Common.DbCommand" /> generado automáticamente que es necesario para realizar actualizaciones en el origen de datos.</summary>
      <returns>Objeto <see cref="T:System.Data.Common.DbCommand" /> generado automáticamente que es necesario para realizar actualizaciones.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
      <summary>Obtiene el objeto <see cref="T:System.Data.Common.DbCommand" /> generado automáticamente que es necesario para realizar actualizaciones en el origen de datos, utilizando opcionalmente columnas para los nombres de parámetro.</summary>
      <param name="useColumnsForParameterNames">Si es <see langword="true" />, hay que generar nombres de parámetro que coincidan con los nombres de columna, si es posible. Si es <see langword="false" />, genera <c>@p1</c>, <c>@p2</c>, etc.</param>
      <returns>Objeto <see cref="T:System.Data.Common.DbCommand" /> generado automáticamente que es necesario para realizar actualizaciones.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)">
      <summary>Restablece las propiedades <see cref="P:System.Data.Common.DbCommand.CommandTimeout" />, <see cref="P:System.Data.Common.DbCommand.Transaction" />, <see cref="P:System.Data.Common.DbCommand.CommandType" /> y <see cref="T:System.Data.UpdateRowSource" /> en el objeto <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <param name="command">
        <see cref="T:System.Data.Common.DbCommand" /> que va a utilizar el generador de comandos para el correspondiente comando de inserción, actualización o eliminación.</param>
      <returns>Instancia de <see cref="T:System.Data.Common.DbCommand" /> que se va a utilizar para cada operación de inserción, actualización o eliminación. Si se pasa un valor null, el método <see cref="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" /> puede crear un objeto <see cref="T:System.Data.Common.DbCommand" /> basado en el comando Select asociado al objeto <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)">
      <summary>Dado un identificador sin comillas en el caso de un catálogo correcto, devuelve el formato correcto entrecomillado de ese identificador, incluyendo una secuencia de escape adecuada para las comillas incrustadas en el identificador.</summary>
      <param name="unquotedIdentifier">Identificador original sin comillas.</param>
      <returns>Versión entrecomillada del identificador. Se crea una secuencia de escape adecuada para las comillas incrustadas dentro del identificador.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.RefreshSchema">
      <summary>Borra los comandos asociados a este <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)">
      <summary>Agrega un controlador de eventos para el evento <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" />.</summary>
      <param name="rowUpdatingEvent">Instancia de <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> que contiene información sobre el evento.</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)">
      <summary>Registra el objeto <see cref="T:System.Data.Common.DbCommandBuilder" /> para controlar el evento <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> de un objeto <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <param name="adapter">
        <see cref="T:System.Data.Common.DbDataAdapter" /> que se va a utilizar para la actualización.</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)">
      <summary>Dado un identificador entre comillas, devuelve el formato correcto sin comillas de ese identificador, incluyendo una secuencia sin escape adecuada para las comillas incrustadas en el identificador.</summary>
      <param name="quotedIdentifier">Identificador del que se van a quitar las comillas incrustadas.</param>
      <returns>Identificador sin comillas, del que también se han quitado adecuadamente las comillas incrustadas.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.CatalogLocation">
      <summary>Obtiene o establece el objeto <see cref="T:System.Data.Common.CatalogLocation" /> para una instancia de la clase <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns>Un objeto <see cref="T:System.Data.Common.CatalogLocation" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.CatalogSeparator">
      <summary>Obtiene o establece una cadena que se usa como separador de catálogo para una instancia de la clase <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns>Cadena que indica el separador de catálogo que se utiliza con una instancia de la clase <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.ConflictOption">
      <summary>Especifica qué <see cref="T:System.Data.ConflictOption" /> va a utilizar <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns>Devuelve uno de los valores de <see cref="T:System.Data.ConflictOption" /> que describe el comportamiento de <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.DataAdapter">
      <summary>Obtiene o establece un objeto <see cref="T:System.Data.Common.DbDataAdapter" /> para el que se generan automáticamente instrucciones de Transact-SQL.</summary>
      <returns>Un objeto <see cref="T:System.Data.Common.DbDataAdapter" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
      <summary>Obtiene o establece el carácter o los caracteres iniciales que se van a utilizar al especificar objetos de base de datos (por ejemplo, tablas o columnas), cuyos nombres contengan caracteres como espacios o símbolos (token) reservados.</summary>
      <exception cref="T:System.InvalidOperationException">Esta propiedad no se puede cambiar después de generar un comando de inserción, actualización o eliminación.</exception>
      <returns>Caracteres iniciales que se van a utilizar. El valor predeterminado es una cadena vacía.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.QuoteSuffix">
      <summary>Obtiene o establece el carácter o los caracteres finales que se van a usar al especificar los objetos de base de datos (por ejemplo, tablas o columnas) cuyos nombres contienen caracteres como espacios o tokens reservados.</summary>
      <returns>Caracteres finales que se van a utilizar. El valor predeterminado es una cadena vacía.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.SchemaSeparator">
      <summary>Obtiene o establece el carácter que se va a utilizar para el separador entre el identificador de esquema y cualquier otro identificador.</summary>
      <returns>Carácter que se va a utilizar como separador de esquema.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.SetAllValues">
      <summary>Especifica si en una instrucción de actualización se incluyen todos los valores de columna o sólo los que han cambiado.</summary>
      <returns>
        <see langword="true" /> si la instrucción UPDATE que genera <see cref="T:System.Data.Common.DbCommandBuilder" /> incluye todas las columnas; <see langword="false" /> si sólo incluye las columnas cambiadas.</returns>
    </member>
    <member name="T:System.Data.Common.DbConnection">
      <summary>Define el comportamiento básico de las conexiones de base de datos y proporciona una clase base para las conexiones específicas de base de datos.</summary>
    </member>
    <member name="E:System.Data.Common.DbConnection.StateChange">
      <summary>Se produce cuando cambia el estado de la conexión.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DbConnection" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginDbTransaction(System.Data.IsolationLevel)">
      <summary>Cuando se invalida en una clase derivada, inicia una transacción de base de datos.</summary>
      <param name="isolationLevel">Uno de los valores de enumeración que especifican el nivel de aislamiento que usará la transacción.</param>
      <returns>Objeto que representa la nueva transacción.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginDbTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)">
      <summary>Inicia de forma asincrónica una transacción de base de datos.</summary>
      <param name="isolationLevel">Uno de los valores de enumeración que especifican el nivel de aislamiento que usará la transacción.</param>
      <param name="cancellationToken">Token para cancelar la operación asincrónica.</param>
      <returns>Tarea cuya propiedad <see cref="P:System.Threading.Tasks.Task`1.Result" /> es un objeto que representa la nueva transacción.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransaction">
      <summary>Inicia una transacción de base de datos.</summary>
      <returns>Objeto que representa la nueva transacción.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>Inicia una transacción de base de datos con el nivel de aislamiento especificado.</summary>
      <param name="isolationLevel">Uno de los valores de enumeración que especifican el nivel de aislamiento que usará la transacción.</param>
      <returns>Objeto que representa la nueva transacción.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)">
      <summary>Empieza de forma asincrónica una transacción de base de datos.</summary>
      <param name="isolationLevel">Uno de los valores de enumeración que especifican el nivel de aislamiento que usará la transacción.</param>
      <param name="cancellationToken">Token opcional para cancelar la operación asincrónica. El valor predeterminado es <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Tarea cuya propiedad <see cref="P:System.Threading.Tasks.Task`1.Result" /> es un objeto que representa la nueva transacción.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransactionAsync(System.Threading.CancellationToken)">
      <summary>Empieza de forma asincrónica una transacción de base de datos.</summary>
      <param name="cancellationToken">Token opcional para cancelar la operación asincrónica. El valor predeterminado es <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Tarea cuya propiedad <see cref="P:System.Threading.Tasks.Task`1.Result" /> es un objeto que representa la nueva transacción.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.ChangeDatabase(System.String)">
      <summary>Cuando se reemplaza en una clase derivada, cambia la base de datos actual para una conexión abierta.</summary>
      <param name="databaseName">Nombre de la base de datos que va a utilizar la conexión.</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.ChangeDatabaseAsync(System.String,System.Threading.CancellationToken)">
      <summary>Cambia de forma asincrónica la base de datos actual de una conexión abierta.</summary>
      <param name="databaseName">Nombre de la base de datos que va a utilizar la conexión.</param>
      <param name="cancellationToken">Token opcional para cancelar la operación asincrónica. El valor predeterminado es <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.Close">
      <summary>Cuando se invalida en una clase derivada, cierra la conexión con la base de datos.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.CloseAsync">
      <summary>Cierra de forma asincrónica la conexión con la base de datos.</summary>
      <returns>Tarea <see cref="T:System.Threading.Tasks.Task" /> que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.CreateCommand">
      <summary>Crea y devuelve un objeto <see cref="T:System.Data.Common.DbCommand" /> asociado a la conexión actual.</summary>
      <returns>Un objeto <see cref="T:System.Data.Common.DbCommand" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.CreateDbCommand">
      <summary>Cuando se reemplaza en una clase derivada, crea y devuelve un objeto <see cref="T:System.Data.Common.DbCommand" /> asociado a la conexión actual.</summary>
      <returns>Un objeto <see cref="T:System.Data.Common.DbCommand" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.DisposeAsync">
      <summary>Desecha de forma asincrónica el objeto de conexión.</summary>
      <returns>Tarea <see cref="T:System.Threading.Tasks.ValueTask" /> que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.EnlistTransaction(System.Transactions.Transaction)">
      <summary>Da de alta en la transacción especificada.</summary>
      <param name="transaction">Referencia a una transacción <see cref="T:System.Transactions.Transaction" /> existente en la que se va a dar de alta.</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema">
      <summary>Devuelve información de esquema para el origen de datos de <see cref="T:System.Data.Common.DbConnection" />.</summary>
      <returns>
        <see cref="T:System.Data.DataTable" /> que contiene información de esquema.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema(System.String)">
      <summary>Devuelve información de esquema para el origen de datos de <see cref="T:System.Data.Common.DbConnection" /> utilizando la cadena especificada para el nombre del esquema.</summary>
      <param name="collectionName">Especifica el nombre del esquema que se va a devolver.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="collectionName" /> se especifica como null.</exception>
      <returns>
        <see cref="T:System.Data.DataTable" /> que contiene información de esquema.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])">
      <summary>Devuelve información de esquema para el origen de datos de <see cref="T:System.Data.Common.DbConnection" /> utilizando la cadena especificada para el nombre del esquema y la matriz de cadena determinada para los valores de restricción.</summary>
      <param name="collectionName">Especifica el nombre del esquema que se va a devolver.</param>
      <param name="restrictionValues">Especifica un conjunto de valores de restricción para el esquema solicitado.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="collectionName" /> se especifica como null.</exception>
      <returns>
        <see cref="T:System.Data.DataTable" /> que contiene información de esquema.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchemaAsync(System.String,System.String[],System.Threading.CancellationToken)">
      <summary>Esta es la versión asincrónica de <see cref="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])" />.
Los proveedores lo deben reemplazar con una implementación apropiada.
Opcionalmente, se puede respetar <paramref name="cancellationToken" />.
La implementación predeterminada invoca la llamada sincrónica a <see cref="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])" /> y devuelve una tarea completada.
La implementación predeterminada devolverá una tarea cancelada si se pasa un <paramref name="cancellationToken" /> ya cancelado.
Las excepciones producidas por <see cref="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])" /> se comunicarán mediante la propiedad Task Exception devuelta.</summary>
      <param name="collectionName">Especifica el nombre del esquema que se va a devolver.</param>
      <param name="restrictionValues">Especifica un conjunto de valores de restricción para el esquema solicitado.</param>
      <param name="cancellationToken">Instrucción de cancelación.</param>
      <returns>Tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchemaAsync(System.String,System.Threading.CancellationToken)">
      <summary>Esta es la versión asincrónica de <see cref="M:System.Data.Common.DbConnection.GetSchema(System.String)" />.
Los proveedores lo deben reemplazar con una implementación apropiada.
Opcionalmente, se puede respetar <paramref name="cancellationToken" />.
La implementación predeterminada invoca la llamada sincrónica a <see cref="M:System.Data.Common.DbConnection.GetSchema(System.String)" /> y devuelve una tarea completada.
La implementación predeterminada devolverá una tarea cancelada si se pasa un <paramref name="cancellationToken" /> ya cancelado.
Las excepciones producidas por <see cref="M:System.Data.Common.DbConnection.GetSchema(System.String)" /> se comunicarán mediante la propiedad Task Exception devuelta.</summary>
      <param name="collectionName">Especifica el nombre del esquema que se va a devolver.</param>
      <param name="cancellationToken">Instrucción de cancelación.</param>
      <returns>Tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchemaAsync(System.Threading.CancellationToken)">
      <summary>Esta es una versión asincrónica de <see cref="M:System.Data.Common.DbConnection.GetSchema" />.
Los proveedores lo deben reemplazar con una implementación apropiada.
Opcionalmente, se puede respetar <paramref name="cancellationToken" />.
La implementación predeterminada invoca la llamada sincrónica a <see cref="M:System.Data.Common.DbConnection.GetSchema" /> y devuelve una tarea completada.
La implementación predeterminada devolverá una tarea cancelada si se pasa un <paramref name="cancellationToken" /> ya cancelado.
Las excepciones producidas por <see cref="M:System.Data.Common.DbConnection.GetSchema" /> se comunicarán mediante la propiedad Task Exception devuelta.</summary>
      <param name="cancellationToken">Instrucción de cancelación.</param>
      <returns>Tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)">
      <summary>Genera el evento <see cref="E:System.Data.Common.DbConnection.StateChange" />.</summary>
      <param name="stateChange">Objeto <see cref="T:System.Data.StateChangeEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.Open">
      <summary>Cuando se reemplaza en una clase derivada, abre una conexión de base de datos con los valores especificados por la <see cref="P:System.Data.Common.DbConnection.ConnectionString" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.OpenAsync">
      <summary>Una versión asincrónica de <see cref="M:System.Data.Common.DbConnection.Open" />, que abre una conexión a bases de datos con los valores especificados por <see cref="P:System.Data.Common.DbConnection.ConnectionString" />. Este método invoca el método virtual <see cref="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)" /> con CancellationToken.None.</summary>
      <returns>Tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)">
      <summary>Esta es la versión asincrónica de <see cref="M:System.Data.Common.DbConnection.Open" />. Los proveedores lo deben reemplazar con una implementación apropiada. El token de cancelación se puede aceptar opcionalmente.  
  
La implementación predeterminada invoca la llamada sincrónica a <see cref="M:System.Data.Common.DbConnection.Open" /> y devuelve una tarea completada. La implementación predeterminada devolverá una tarea cancelada si se pasa un cancellationToken ya cancelado. Las excepciones producidas por Open se comunicarán mediante la propiedad Task Exception devuelta.  
  
No invoque otros métodos y propiedades del objeto <see langword="DbConnection" /> hasta que se haya completado la tarea devuelta.</summary>
      <param name="cancellationToken">Instrucción de cancelación.</param>
      <returns>Tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction">
      <summary>Inicia una transacción de base de datos.</summary>
      <returns>Un objeto que representa la nueva transacción.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)">
      <summary>Inicia una transacción de base de datos con el nivel de aislamiento especificado.</summary>
      <param name="isolationLevel">Uno de los valores de enumeración que especifican el nivel de aislamiento que usará la transacción.</param>
      <returns>Un objeto que representa la nueva transacción.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand">
      <summary>Crea y devuelve un objeto <see cref="T:System.Data.Common.DbCommand" /> asociado a la conexión actual.</summary>
      <returns>Un objeto <see cref="T:System.Data.Common.DbCommand" /> asociado a la conexión.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ConnectionString">
      <summary>Cuando se invalida en una clase derivada, obtiene o establece la cadena utilizada para abrir la conexión.</summary>
      <returns>Cadena de conexión utilizada para establecer la conexión inicial. El contenido exacto de la cadena de conexión depende del origen de datos específico para esta conexión. El valor predeterminado es una cadena vacía.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ConnectionTimeout">
      <summary>Obtiene el tiempo de espera (en segundos) mientras se establece una conexión hasta que se interrumpe el intento y se genera un error.</summary>
      <returns>El tiempo (en segundos) que se debe esperar para que se abra una conexión. El tipo específico de conexión que esté utilizando determinará el valor predeterminado.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.Database">
      <summary>Cuando se reemplaza en una clase deriva, obtiene el nombre de la base de datos actual después de abrir una conexión, o el nombre de la base de datos especificada en la cadena de conexión antes de que se abra la conexión.</summary>
      <returns>Nombre de la base de datos actual o de la que se va a utilizar tras abrir una conexión. El valor predeterminado es una cadena vacía.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.DataSource">
      <summary>Cuando se invalida en una clase derivada, obtiene el nombre de la base de datos con la que se debe conectar.</summary>
      <returns>Nombre del servidor de bases de datos con el que se va a establecer la conexión. El valor predeterminado es una cadena vacía.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.DbProviderFactory">
      <summary>Obtiene el objeto <see cref="T:System.Data.Common.DbProviderFactory" /> para este objeto <see cref="T:System.Data.Common.DbConnection" />.</summary>
      <returns>Conjunto de métodos para crear instancias de la implementación de un proveedor de las clases de origen de datos.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ServerVersion">
      <summary>Cuando se reemplaza en una clase derivada, obtiene una cadena que representa la versión del servidor al que está conectado el objeto.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Data.Common.DbConnection.ServerVersion" /> se llamó mientras no se completó la tarea devuelta y no se abrió la conexión después de llamar a <see cref="Overload:System.Data.Common.DbConnection.OpenAsync" />.</exception>
      <returns>Versión de la base de datos. El formato de la cadena devuelta depende del tipo específico de conexión que se esté utilizando.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.State">
      <summary>Obtiene una cadena que describe el estado de la conexión.</summary>
      <returns>Estado de la conexión. El formato de la cadena devuelta depende del tipo específico de conexión que se esté utilizando.</returns>
    </member>
    <member name="T:System.Data.Common.DbConnectionStringBuilder">
      <summary>Proporciona una clase base para los generadores de cadenas de la conexión fuertemente tipada.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.#ctor(System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DbConnectionStringBuilder" />, usando opcionalmente las reglas de ODBC para entrecomillar los valores.</summary>
      <param name="useOdbcRules">
        <see langword="true" /> para usar {} para delimitar los campos; <see langword="false" /> para usar comillas.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Add(System.String,System.Object)">
      <summary>Agrega una entrada con la clave y el valor especificados a <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="keyword">Clave que se va a agregar a <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <param name="value">Valor para la clave especificada.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> es una referencia nula (<see langword="Nothing" /> en Visual Basic).</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> es de solo lectura.

o bien

<see cref="T:System.Data.Common.DbConnectionStringBuilder" /> tiene un tamaño fijo.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String)">
      <summary>Proporciona una manera eficaz y segura de anexar una clave y un valor a un objeto <see cref="T:System.Text.StringBuilder" /> existente.</summary>
      <param name="builder">
        <see cref="T:System.Text.StringBuilder" /> al que se agrega el par clave/valor.</param>
      <param name="keyword">Clave que se va a agregar.</param>
      <param name="value">Valor de la clave proporcionada.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String,System.Boolean)">
      <summary>Proporciona una manera eficaz y segura de anexar una clave y un valor a un objeto <see cref="T:System.Text.StringBuilder" /> existente.</summary>
      <param name="builder">
        <see cref="T:System.Text.StringBuilder" /> al que se agrega el par clave/valor.</param>
      <param name="keyword">Clave que se va a agregar.</param>
      <param name="value">Valor de la clave proporcionada.</param>
      <param name="useOdbcRules">
        <see langword="true" /> para usar {} para delimitar los campos; <see langword="false" /> para usar comillas.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Clear">
      <summary>Borra el contenido de la instancia de <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> es de solo lectura.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ClearPropertyDescriptors">
      <summary>Borra la colección de objetos <see cref="T:System.ComponentModel.PropertyDescriptor" /> del <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> asociado.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ContainsKey(System.String)">
      <summary>Determina si <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> contiene una clave específica.</summary>
      <param name="keyword">Clave que se buscará en <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> es una referencia nula (<see langword="Nothing" /> en Visual Basic).</exception>
      <returns>Es <see langword="true" /> si <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> contiene una entrada con la clave especificada; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.EquivalentTo(System.Data.Common.DbConnectionStringBuilder)">
      <summary>Compara la información de conexión de este objeto <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> con la información de conexión del objeto especificado.</summary>
      <param name="connectionStringBuilder">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> que se va a comparar con este objeto <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <returns>
        <see langword="true" /> si la información de conexión en ambos objetos <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> provoca una cadena de conexión equivalente; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.GetProperties(System.Collections.Hashtable)">
      <summary>Rellena un <see cref="T:System.Collections.Hashtable" /> proporcionado con información sobre todas las propiedades de este <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="propertyDescriptors">
        <see cref="T:System.Collections.Hashtable" /> a rellenar con información sobre este <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Remove(System.String)">
      <summary>Quita la entrada con la clave especificada de la instancia de <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="keyword">Clave del par de clave-valor que se va a quitar de la cadena de conexión en este <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> es nulo (<see langword="Nothing" /> en Visual Basic).</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> es de sólo lectura o <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> tiene un tamaño fijo.</exception>
      <returns>
        <see langword="true" /> si la clave existía en la cadena de conexión y se quitó; <see langword="false" /> si la clave no existía.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ShouldSerialize(System.String)">
      <summary>Indica si la clave especificada existe en esta instancia de <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="keyword">Clave que se buscará en <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <returns>Es <see langword="true" /> si <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> contiene una entrada con la clave especificada; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia los elementos de <see cref="T:System.Collections.ICollection" /> en <see cref="T:System.Array" />, empezando por un índice determinado de <see cref="T:System.Array" />.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensional que constituye el destino de los elementos copiados de <see cref="T:System.Collections.ICollection" />. La matriz <see cref="T:System.Array" /> debe tener una indización de base cero.</param>
      <param name="index">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary>Agrega un elemento con la clave y el valor proporcionados al objeto <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="keyword">
        <see cref="T:System.Object" /> que se va a utilizar como clave del elemento que se va a agregar.</param>
      <param name="value">
        <see cref="T:System.Object" /> que se va a utilizar como valor del elemento que se va a agregar.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Contains(System.Object)">
      <summary>Determina si el objeto <see cref="T:System.Collections.IDictionary" /> contiene un elemento con la clave especificada.</summary>
      <param name="keyword">Clave que se buscará en el objeto <see cref="T:System.Collections.IDictionary" />.</param>
      <returns>Es <see langword="true" /> si <see cref="T:System.Collections.IDictionary" /> contiene un elemento con la clave; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#GetEnumerator">
      <summary>Devuelve un objeto <see cref="T:System.Collections.IDictionaryEnumerator" /> para el objeto <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns>Objeto <see cref="T:System.Collections.IDictionaryEnumerator" /> para el objeto <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Remove(System.Object)">
      <summary>Quita el elemento con la clave especificada del objeto <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="keyword">Clave del elemento que se va a quitar.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IEnumerable#GetEnumerator">
      <summary>Devuelve un enumerador que recorre en iteración una colección.</summary>
      <returns>Objeto <see cref="T:System.Collections.IEnumerator" /> que puede usarse para recorrer en iteración la colección.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary>Devuelve una colección de atributos personalizados para esta instancia de un componente.</summary>
      <returns>
        <see cref="T:System.ComponentModel.AttributeCollection" /> que contiene los atributos de este objeto.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary>Devuelve el nombre de clase de esta instancia de un componente.</summary>
      <returns>Nombre de clase del objeto o <see langword="null" /> si la clase no tiene nombre.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary>Devuelve los eventos para esta instancia de un componente.</summary>
      <returns>El nombre del objeto, o <see langword="null" /> si el objeto no tiene un nombre.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary>Devuelve un convertidor de tipos para instancia de un componente.</summary>
      <returns>
        <see cref="T:System.ComponentModel.TypeConverter" /> que es el convertidor para este objeto o <see langword="null" /> si no hay ningún <see cref="T:System.ComponentModel.TypeConverter" /> para este objeto.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary>Devuelve el evento predeterminado para esta instancia de un componente.</summary>
      <returns>
        <see cref="T:System.ComponentModel.EventDescriptor" /> que representa el evento predeterminado para este objeto o <see langword="null" /> si este objeto no tiene eventos.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary>Devuelve la propiedad predeterminada para esta instancia de un componente.</summary>
      <returns>
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> que representa la propiedad predeterminada de este objeto o <see langword="null" /> si el objeto no tiene propiedades.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary>Devuelve un editor del tipo especificado para esta instancia de un componente.</summary>
      <param name="editorBaseType">
        <see cref="T:System.Type" /> que representa el editor para este objeto.</param>
      <returns>Un <see cref="T:System.Object" /> del tipo especificado que es el editor para este objeto o <see langword="null" /> si no se encuentra el editor.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary>Devuelve los eventos para esta instancia de un componente.</summary>
      <returns>
        <see cref="T:System.ComponentModel.EventDescriptorCollection" /> que representa los eventos de esta instancia de componente.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary>Devuelve los eventos de esta instancia de un componente utilizando la matriz de atributos especificada como filtro.</summary>
      <param name="attributes">Matriz de tipo <see cref="T:System.Attribute" /> que se usa como filtro.</param>
      <returns>
        <see cref="T:System.ComponentModel.EventDescriptorCollection" /> que representa los eventos filtrados de esta instancia de componente.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary>Devuelve las propiedades para esta instancia de un componente.</summary>
      <returns>Un <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que representa las propiedades de esta instancia de componente.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary>Devuelve las propiedades para esta instancia de un componente usando la matriz de atributos como filtro.</summary>
      <param name="attributes">Matriz de tipo <see cref="T:System.Attribute" /> que se usa como filtro.</param>
      <returns>
        <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que representa las propiedades filtradas de esta instancia de componente.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary>Devuelve un objeto que contiene la propiedad que describe el descriptor de propiedades especificado.</summary>
      <param name="pd">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> que representa la propiedad cuyo propietario se va a buscar.</param>
      <returns>
        <see cref="T:System.Object" /> que representa el propietario de la propiedad especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ToString">
      <summary>Devuelve la cadena de conexión asociada a este <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns>La propiedad <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" /> actual.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
      <summary>Recupera un valor que corresponde a la clave proporcionada por este <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="keyword">Clave del elemento que se va a recuperar.</param>
      <param name="value">El valor que corresponde al <paramref name="keyword" /></param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> contiene un valor null (<see langword="Nothing" /> en Visual Basic).</exception>
      <returns>Es <see langword="true" /> si <paramref name="keyword" /> fue encontrado dentro de la cadena de conexión, en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.BrowsableConnectionString">
      <summary>Obtiene o establece un valor que indica si la propiedad <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" /> está visible en los diseñadores de Visual Studio.</summary>
      <returns>
        <see langword="true" /> si la cadena de conexión está visible en los diseñadores; <see langword="false" /> en caso contrario. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString">
      <summary>Obtiene o establece la cadena de conexión asociada con el <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <exception cref="T:System.ArgumentException">Se ha proporcionado un argumento de cadena de conexión no válido.</exception>
      <returns>La cadena de conexión actual, creada a partir de los pares clave/valor que están dentro del <see cref="T:System.Data.Common.DbConnectionStringBuilder" />. El valor predeterminado es una cadena vacía.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Count">
      <summary>Obtiene el número actual de claves que están dentro de la propiedad <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" />.</summary>
      <returns>Número de claves que están dentro de la cadena de conexión mantenida por la instancia <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.IsFixedSize">
      <summary>Obtiene un valor que indica si el objeto <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> tiene un tamaño fijo.</summary>
      <returns>Es <see langword="true" /> si <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> tiene un tamaño fijo; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.IsReadOnly">
      <summary>Obtiene un valor que indica si <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> es de solo lectura.</summary>
      <returns>
        <see langword="true" /> si la <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> es de solo lectura; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Item(System.String)">
      <summary>Obtiene o establece el valor asociado a la clave especificada.</summary>
      <param name="keyword">Clave del elemento que se va a obtener o establecer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> es una referencia nula (<see langword="Nothing" /> en Visual Basic).</exception>
      <exception cref="T:System.NotSupportedException">La propiedad está establecida y <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> es de solo lectura.

o bien

La propiedad está establecida, <paramref name="keyword" /> no existe en la colección y <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> tiene un tamaño fijo.</exception>
      <returns>Valor asociado a la clave especificada. Si no se encuentra la clave especificada, al intentar obtenerla se devuelve una referencia nula (<see langword="Nothing" /> en Visual Basic) y al intentar establecerla se crea un nuevo elemento con la clave especificada.

Al pasar una clave nula (<see langword="Nothing" /> en Visual Basic), se lanza una <see cref="T:System.ArgumentNullException" />. Al asignar un valor nulo, se quita el par clave/valor.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Keys">
      <summary>Obtiene una <see cref="T:System.Collections.ICollection" /> que contiene las claves de <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns>Una <see cref="T:System.Collections.ICollection" /> que contiene las claves de <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#IsSynchronized">
      <summary>Obtiene un valor que indica si el acceso a la interfaz <see cref="T:System.Collections.ICollection" /> está sincronizado (es seguro para subprocesos).</summary>
      <returns>Es <see langword="true" /> si el acceso a <see cref="T:System.Collections.ICollection" /> está sincronizado (es seguro para subprocesos); de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#SyncRoot">
      <summary>Obtiene un objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Un objeto que se puede usar para sincronizar el acceso a la clase <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Item(System.Object)">
      <summary>Obtiene o establece el elemento con la clave especificada.</summary>
      <param name="keyword">La clave del elemento que se obtiene o establece.</param>
      <returns>El elemento con la clave especificada.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Values">
      <summary>Obtiene un <see cref="T:System.Collections.ICollection" /> que contiene los valores de <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns>Interfaz <see cref="T:System.Collections.ICollection" /> que contiene los valores incluidos en el objeto <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataAdapter">
      <summary>Facilita la implementación de la interfaz <see cref="T:System.Data.IDbDataAdapter" />. Los herederos de <see cref="T:System.Data.Common.DbDataAdapter" /> implementan un conjunto de funciones para proporcionar un tipado fuerte, pero heredan la mayoría de las funciones necesarias para implementar completamente un elemento DataAdapter.</summary>
    </member>
    <member name="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName">
      <summary>Nombre predeterminado que el objeto <see cref="T:System.Data.Common.DataAdapter" /> utiliza para las asignaciones de tabla.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.#ctor">
      <summary>Inicializa una nueva instancia de una clase DataAdapter.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)">
      <summary>Inicializa una nueva instancia de la clase <see langword="DataAdapter" /> a partir de un objeto existente del mismo tipo.</summary>
      <param name="adapter">Objeto <see langword="DataAdapter" /> utilizado para crear el nuevo <see langword="DataAdapter" />.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)">
      <summary>Agrega una interfaz <see cref="T:System.Data.IDbCommand" /> al lote actual.</summary>
      <param name="command">
        <see cref="T:System.Data.IDbCommand" /> que se va a agregar al lote.</param>
      <exception cref="T:System.NotSupportedException">El adaptador no admite el procesamiento por lotes.</exception>
      <returns>Número de comandos en el lote antes de agregar <see cref="T:System.Data.IDbCommand" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.ClearBatch">
      <summary>Quita todos los objetos <see cref="T:System.Data.IDbCommand" /> del lote.</summary>
      <exception cref="T:System.NotSupportedException">El adaptador no admite el procesamiento por lotes.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.RowUpdatedEventArgs" />.</summary>
      <param name="dataRow">Clase <see cref="T:System.Data.DataRow" /> que se utiliza para actualizar el origen de datos.</param>
      <param name="command">
        <see cref="T:System.Data.IDbCommand" /> ejecutado durante <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType">Si el comando es una instrucción UPDATE, INSERT, DELETE o SELECT.</param>
      <param name="tableMapping">Un objeto <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <returns>Nueva instancia de la clase <see cref="T:System.Data.Common.RowUpdatedEventArgs" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.RowUpdatingEventArgs" />.</summary>
      <param name="dataRow">
        <see cref="T:System.Data.DataRow" /> que actualiza el origen de datos.</param>
      <param name="command">
        <see cref="T:System.Data.IDbCommand" /> que se va a ejecutar durante <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType">Si el comando es una instrucción UPDATE, INSERT, DELETE o SELECT.</param>
      <param name="tableMapping">Un objeto <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <returns>Nueva instancia de la clase <see cref="T:System.Data.Common.RowUpdatingEventArgs" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados que usa <see cref="T:System.Data.Common.DbDataAdapter" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.ExecuteBatch">
      <summary>Ejecuta el lote actual.</summary>
      <returns>Valor devuelto del último comando del lote.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
      <summary>Agrega o actualiza filas en <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSet">Clase <see cref="T:System.Data.DataSet" /> que se va a rellenar con registros y, si es necesario, con un esquema.</param>
      <returns>Número de filas agregadas o actualizadas correctamente en la clase <see cref="T:System.Data.DataSet" />. No se incluyen las filas afectadas por instrucciones que no devuelven filas.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
      <summary>Agrega filas en un intervalo especificado de <see cref="T:System.Data.DataSet" /> o las actualiza para hacerlas coincidir con las filas del origen de datos utilizando los nombres de <see cref="T:System.Data.DataSet" /> y <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataSet">Clase <see cref="T:System.Data.DataSet" /> que se va a rellenar con registros y, si es necesario, con un esquema.</param>
      <param name="startRecord">Número de registro de base cero inicial.</param>
      <param name="maxRecords">Número máximo de registros que se van a recuperar.</param>
      <param name="srcTable">Nombre de la tabla de origen que se utilizará para la asignación de tabla.</param>
      <exception cref="T:System.SystemException">
        <see cref="T:System.Data.DataSet" /> no es válido.</exception>
      <exception cref="T:System.InvalidOperationException">La tabla de origen no es válida.  
  
 o bien  
  
 La conexión no es válida.</exception>
      <exception cref="T:System.InvalidCastException">No se encontró la conexión.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="startRecord" /> es menor que 0.  
  
o bien 
El parámetro <paramref name="maxRecords" /> es menor que 0.</exception>
      <returns>Número de filas agregadas o actualizadas correctamente en la clase <see cref="T:System.Data.DataSet" />. No se incluyen las filas afectadas por instrucciones que no devuelven filas.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary>Agrega filas en un intervalo especificado de <see cref="T:System.Data.DataSet" /> o las actualiza para hacerlas coincidir con las filas del origen de datos utilizando los nombres de <see cref="T:System.Data.DataSet" /> y los nombres de tabla de origen, la cadena de comando y el comportamiento de comando.</summary>
      <param name="dataSet">Clase <see cref="T:System.Data.DataSet" /> que se va a rellenar con registros y, si es necesario, con un esquema.</param>
      <param name="startRecord">Número de registro de base cero inicial.</param>
      <param name="maxRecords">Número máximo de registros que se van a recuperar.</param>
      <param name="srcTable">Nombre de la tabla de origen que se utilizará para la asignación de tabla.</param>
      <param name="command">Instrucción SELECT de SQL utilizada para recuperar las filas del origen de datos.</param>
      <param name="behavior">Uno de los valores de <see cref="T:System.Data.CommandBehavior" />.</param>
      <exception cref="T:System.InvalidOperationException">La tabla de origen no es válida.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="startRecord" /> es menor que 0.  
  
o bien 
El parámetro <paramref name="maxRecords" /> es menor que 0.</exception>
      <returns>Número de filas agregadas o actualizadas correctamente en la clase <see cref="T:System.Data.DataSet" />. No se incluyen las filas afectadas por instrucciones que no devuelven filas.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
      <summary>Agrega filas a <see cref="T:System.Data.DataSet" /> o las actualiza para hacerlas coincidir con las filas del origen de datos utilizando los nombres de <see cref="T:System.Data.DataSet" /> y <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataSet">Clase <see cref="T:System.Data.DataSet" /> que se va a rellenar con registros y, si es necesario, con un esquema.</param>
      <param name="srcTable">Nombre de la tabla de origen que se utilizará para la asignación de tabla.</param>
      <exception cref="T:System.SystemException">La tabla de origen no es válida.</exception>
      <returns>Número de filas agregadas o actualizadas correctamente en la clase <see cref="T:System.Data.DataSet" />. No se incluyen las filas afectadas por instrucciones que no devuelven filas.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
      <summary>Agrega filas en un intervalo especificado de <see cref="T:System.Data.DataSet" /> o las actualiza para hacerlas coincidir con las filas del origen de datos utilizando el nombre de <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTable">Nombre de <see cref="T:System.Data.DataTable" /> que se va a utilizar para la asignación de tabla.</param>
      <exception cref="T:System.InvalidOperationException">La tabla de origen no es válida.</exception>
      <returns>Número de filas agregadas o actualizadas correctamente en la clase <see cref="T:System.Data.DataSet" />. No se incluyen las filas afectadas por instrucciones que no devuelven filas.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary>Agrega filas a un objeto <see cref="T:System.Data.DataTable" /> o las actualiza para hacerlas coincidir con las del origen de datos, utilizando los objetos <see cref="T:System.Data.DataTable" />, <see cref="T:System.Data.IDbCommand" /> y <see cref="T:System.Data.CommandBehavior" /> especificados.</summary>
      <param name="dataTable">Clase <see cref="T:System.Data.DataTable" /> que se va a rellenar con registros y, si es necesario, con un esquema.</param>
      <param name="command">Instrucción SELECT de SQL utilizada para recuperar las filas del origen de datos.</param>
      <param name="behavior">Uno de los valores de <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns>Número de filas agregadas o actualizadas correctamente en la clase <see cref="T:System.Data.DataTable" />. No se incluyen las filas afectadas por instrucciones que no devuelven filas.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary>Agrega filas en un intervalo especificado de <see cref="T:System.Data.DataSet" /> o las actualiza para hacerlas coincidir con las filas del origen de datos utilizando los nombres de <see cref="T:System.Data.DataSet" /> y <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTables">Objetos <see cref="T:System.Data.DataTable" /> que se van a rellenar a partir del origen de datos.</param>
      <param name="startRecord">Número de registro de base cero inicial.</param>
      <param name="maxRecords">Número máximo de registros que se van a recuperar.</param>
      <param name="command">Interfaz <see cref="T:System.Data.IDbCommand" /> ejecutada para rellenar los objetos <see cref="T:System.Data.DataTable" />.</param>
      <param name="behavior">Uno de los valores de <see cref="T:System.Data.CommandBehavior" />.</param>
      <exception cref="T:System.SystemException">
        <see cref="T:System.Data.DataSet" /> no es válido.</exception>
      <exception cref="T:System.InvalidOperationException">La tabla de origen no es válida.  
  
 o bien  
  
 La conexión no es válida.</exception>
      <exception cref="T:System.InvalidCastException">No se encontró la conexión.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="startRecord" /> es menor que 0.  
  
o bien 
El parámetro <paramref name="maxRecords" /> es menor que 0.</exception>
      <returns>Número de filas agregadas o actualizadas en las tablas de datos.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
      <summary>Agrega filas a <see cref="T:System.Data.DataTable" /> o las actualiza para hacerlas coincidir con las del origen de datos, empezando en el registro especificado y recuperando hasta el número máximo de registros especificado.</summary>
      <param name="startRecord">Número de registro de base cero inicial.</param>
      <param name="maxRecords">Número máximo de registros que se van a recuperar.</param>
      <param name="dataTables">Objetos <see cref="T:System.Data.DataTable" /> que se van a rellenar a partir del origen de datos.</param>
      <returns>Número de filas agregadas o actualizadas correctamente en la clase <see cref="T:System.Data.DataTable" />. Este valor no incluye las filas afectadas por instrucciones que no devuelven filas.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary>Agrega una <see cref="T:System.Data.DataTable" /> denominada "Table" para el <see cref="T:System.Data.DataSet" /> especificado y configura el esquema para que coincida con el origen de datos basado en el <see cref="T:System.Data.SchemaType" /> especificado.</summary>
      <param name="dataSet">
        <see cref="T:System.Data.DataSet" /> en el que se va a insertar el esquema.</param>
      <param name="schemaType">Uno de los valores <see cref="T:System.Data.SchemaType" /> que especifica cómo insertar el esquema.</param>
      <returns>Referencia a una colección de objetos <see cref="T:System.Data.DataTable" /> que se agregaron al <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
      <summary>Agrega un elemento <see cref="T:System.Data.DataTable" /> denominado "Table" para el elemento <see cref="T:System.Data.DataSet" /> especificado y configura el esquema para que coincida con el origen de datos basado en el <see cref="T:System.Data.SchemaType" />.</summary>
      <param name="dataSet">
        <see cref="T:System.Data.DataSet" /> que se debe rellenar con el esquema del origen de datos.</param>
      <param name="schemaType">Uno de los valores de <see cref="T:System.Data.SchemaType" />.</param>
      <param name="command">Instrucción SELECT de SQL utilizada para recuperar las filas del origen de datos.</param>
      <param name="srcTable">Nombre de la tabla de origen que se utilizará para la asignación de tabla.</param>
      <param name="behavior">Uno de los valores de <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns>Matriz de objetos <see cref="T:System.Data.DataTable" /> que contienen la información de esquema devuelta a partir del origen de datos.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
      <summary>Agrega un elemento <see cref="T:System.Data.DataTable" /> denominado "Table" para el elemento <see cref="T:System.Data.DataSet" /> especificado y configura el esquema para que coincida con el del origen de datos basado en los elementos especificados <see cref="T:System.Data.SchemaType" /> y <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataSet">
        <see cref="T:System.Data.DataSet" /> en el que se va a insertar el esquema.</param>
      <param name="schemaType">Uno de los valores <see cref="T:System.Data.SchemaType" /> que especifica cómo insertar el esquema.</param>
      <param name="srcTable">Nombre de la tabla de origen que se utilizará para la asignación de tabla.</param>
      <exception cref="T:System.ArgumentException">No se encontró una tabla de origen desde la que se pueda obtener el esquema.</exception>
      <returns>Referencia a una colección de objetos <see cref="T:System.Data.DataTable" /> que se agregaron al <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
      <summary>Configura el esquema del elemento <see cref="T:System.Data.DataTable" /> especificado en función del elemento <see cref="T:System.Data.SchemaType" /> especificado.</summary>
      <param name="dataTable">
        <see cref="T:System.Data.DataTable" /> que se debe rellenar con el esquema del origen de datos.</param>
      <param name="schemaType">Uno de los valores de <see cref="T:System.Data.SchemaType" />.</param>
      <returns>
        <see cref="T:System.Data.DataTable" /> que contiene información de esquema devuelta desde el origen de datos.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary>Configura el esquema de la tabla <see cref="T:System.Data.DataTable" /> especificada en función del <see cref="T:System.Data.SchemaType" />, la cadena de comando y los valores de <see cref="T:System.Data.CommandBehavior" /> especificados.</summary>
      <param name="dataTable">
        <see cref="T:System.Data.DataTable" /> que se debe rellenar con el esquema del origen de datos.</param>
      <param name="schemaType">Uno de los valores de <see cref="T:System.Data.SchemaType" />.</param>
      <param name="command">Instrucción SELECT de SQL utilizada para recuperar las filas del origen de datos.</param>
      <param name="behavior">Uno de los valores de <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns>Objeto <see cref="T:System.Data.DataTable" /> que contiene la información de esquema devuelta desde el origen de datos.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
      <summary>Devuelve una interfaz <see cref="T:System.Data.IDataParameter" /> de uno de los comandos del lote actual.</summary>
      <param name="commandIdentifier">Índice del comando del que se va a recuperar el parámetro.</param>
      <param name="parameterIndex">Índice del parámetro incluido en el comando.</param>
      <exception cref="T:System.NotSupportedException">El adaptador no admite el procesamiento por lotes.</exception>
      <returns>El <see cref="T:System.Data.IDataParameter" /> especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)">
      <summary>Devuelve información sobre un intento de actualización dentro de una actualización más amplia por lotes.</summary>
      <param name="commandIdentifier">Índice de columna de base cero del comando individual dentro del lote.</param>
      <param name="recordsAffected">Número de filas del almacén de datos que se ven afectadas por el comando especificado dentro del lote.</param>
      <param name="error">
        <see cref="T:System.Exception" /> que se ha producido durante la ejecución del comando especificado. Devuelve <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) si no se ha producido ninguna excepción.</param>
      <returns>Información sobre un intento de actualización individual dentro de una actualización por lotes más amplia.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetFillParameters">
      <summary>Obtiene los parámetros establecidos por el usuario al ejecutar una instrucción SELECT de SQL.</summary>
      <returns>Matriz de objetos <see cref="T:System.Data.IDataParameter" /> que contienen los parámetros establecidos por el usuario.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.InitializeBatching">
      <summary>Inicializa el procesamiento por lotes de <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <exception cref="T:System.NotSupportedException">El adaptador no admite el procesamiento por lotes.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
      <summary>Provoca el evento <see langword="RowUpdated" /> de un proveedor de datos de .NET Framework.</summary>
      <param name="value">Objeto <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
      <summary>Provoca el evento <see langword="RowUpdating" /> de un proveedor de datos de .NET Framework.</summary>
      <param name="value">Objeto <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone">
      <summary>Crea un nuevo objeto copiado de la instancia actual.</summary>
      <returns>Nuevo objeto que es copia de esta instancia.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.TerminateBatching">
      <summary>Finaliza el procesamiento por lotes para <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <exception cref="T:System.NotSupportedException">El adaptador no admite el procesamiento por lotes.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
      <summary>Actualiza los valores de la base de datos ejecutando las instrucciones INSERT, UPDATE o DELETE respectivas para cada fila insertada, actualizada o eliminada en la matriz especificada en <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataRows">Matriz de objetos <see cref="T:System.Data.DataRow" /> utilizada para actualizar el origen de datos.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Data.DataSet" /> no es válido.</exception>
      <exception cref="T:System.InvalidOperationException">La tabla de origen no es válida.</exception>
      <exception cref="T:System.SystemException">No existe ningún objeto <see cref="T:System.Data.DataRow" /> que actualizar.  
  
o bien 
No existe ningún objeto <see cref="T:System.Data.DataTable" /> que actualizar.  
  
o bien 
No existe ninguna clase <see cref="T:System.Data.DataSet" /> que se vaya a utilizar como origen.</exception>
      <exception cref="T:System.Data.DBConcurrencyException">El hecho de intentar ejecutar una instrucción INSERT, UPDATE o DELETE no ha afectado a ningún registro.</exception>
      <returns>Número de filas del <see cref="T:System.Data.DataSet" /> actualizadas correctamente.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
      <summary>Actualiza los valores de la base de datos ejecutando las instrucciones INSERT, UPDATE o DELETE respectivas para cada fila insertada, actualizada o eliminada en la matriz de objetos <see cref="T:System.Data.DataSet" /> especificada.</summary>
      <param name="dataRows">Matriz de objetos <see cref="T:System.Data.DataRow" /> utilizada para actualizar el origen de datos.</param>
      <param name="tableMapping">Colección <see cref="P:System.Data.IDataAdapter.TableMappings" /> que se va a utilizar.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Data.DataSet" /> no es válido.</exception>
      <exception cref="T:System.InvalidOperationException">La tabla de origen no es válida.</exception>
      <exception cref="T:System.SystemException">No existe ningún objeto <see cref="T:System.Data.DataRow" /> que actualizar.  
  
o bien 
No existe ningún objeto <see cref="T:System.Data.DataTable" /> que actualizar.  
  
o bien 
No existe ninguna clase <see cref="T:System.Data.DataSet" /> que se vaya a utilizar como origen.</exception>
      <exception cref="T:System.Data.DBConcurrencyException">El hecho de intentar ejecutar una instrucción INSERT, UPDATE o DELETE no ha afectado a ningún registro.</exception>
      <returns>Número de filas del <see cref="T:System.Data.DataSet" /> actualizadas correctamente.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
      <summary>Actualiza los valores de la base de datos ejecutando las instrucciones INSERT, UPDATE o DELETE respectivas para cada fila insertada, actualizada o eliminada en los objetos <see cref="T:System.Data.DataSet" /> especificados.</summary>
      <param name="dataSet">Clase <see cref="T:System.Data.DataSet" /> que se utiliza para actualizar el origen de datos.</param>
      <exception cref="T:System.InvalidOperationException">La tabla de origen no es válida.</exception>
      <exception cref="T:System.Data.DBConcurrencyException">El hecho de intentar ejecutar una instrucción INSERT, UPDATE o DELETE no ha afectado a ningún registro.</exception>
      <returns>Número de filas del <see cref="T:System.Data.DataSet" /> actualizadas correctamente.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
      <summary>Actualiza los valores de la base de datos al ejecutar las instrucciones INSERT, UPDATE o DELETE respectivas para cada fila insertada, actualizada o eliminada en los objetos <see cref="T:System.Data.DataSet" /> con el nombre de <see cref="T:System.Data.DataTable" /> especificado.</summary>
      <param name="dataSet">
        <see cref="T:System.Data.DataSet" /> que se va a utilizar para actualizar el origen de datos.</param>
      <param name="srcTable">Nombre de la tabla de origen que se utilizará para la asignación de tabla.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Data.DataSet" /> no es válido.</exception>
      <exception cref="T:System.InvalidOperationException">La tabla de origen no es válida.</exception>
      <exception cref="T:System.Data.DBConcurrencyException">El hecho de intentar ejecutar una instrucción INSERT, UPDATE o DELETE no ha afectado a ningún registro.</exception>
      <returns>Número de filas del <see cref="T:System.Data.DataSet" /> actualizadas correctamente.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
      <summary>Actualiza los valores de la base de datos ejecutando las instrucciones INSERT, UPDATE o DELETE respectivas para cada fila insertada, actualizada o eliminada en los objetos <see cref="T:System.Data.DataTable" /> especificados.</summary>
      <param name="dataTable">Clase <see cref="T:System.Data.DataTable" /> que se utiliza para actualizar el origen de datos.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Data.DataSet" /> no es válido.</exception>
      <exception cref="T:System.InvalidOperationException">La tabla de origen no es válida.</exception>
      <exception cref="T:System.SystemException">No existe ningún objeto <see cref="T:System.Data.DataRow" /> que actualizar.  
  
o bien 
No existe ningún objeto <see cref="T:System.Data.DataTable" /> que actualizar.  
  
o bien 
No existe ninguna clase <see cref="T:System.Data.DataSet" /> que se vaya a utilizar como origen.</exception>
      <exception cref="T:System.Data.DBConcurrencyException">El hecho de intentar ejecutar una instrucción INSERT, UPDATE o DELETE no ha afectado a ningún registro.</exception>
      <returns>Número de filas del <see cref="T:System.Data.DataTable" /> actualizadas correctamente.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.DeleteCommand">
      <summary>Obtiene o establece un comando para eliminar registros del conjunto de datos.</summary>
      <returns>
        <see cref="T:System.Data.IDbCommand" /> utilizado mientras opera <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> para eliminar registros del origen de datos para filas eliminadas en el conjunto de datos.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.FillCommandBehavior">
      <summary>Obtiene o establece el comportamiento del comando utilizado para rellenar el adaptador de datos.</summary>
      <returns>
        <see cref="T:System.Data.CommandBehavior" /> del comando utilizado para rellenar el adaptador de datos.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.InsertCommand">
      <summary>Obtiene o establece un comando que se usa para insertar registros nuevos en el origen de datos.</summary>
      <returns>
        <see cref="T:System.Data.IDbCommand" /> que se utiliza mientras opera <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> para insertar registros en el origen de datos para nuevas filas en el conjunto de datos.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.SelectCommand">
      <summary>Obtiene o establece un comando que se utiliza para seleccionar registros en el origen de datos.</summary>
      <returns>
        <see cref="T:System.Data.IDbCommand" /> que se utiliza mientras opera <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> para seleccionar registros del origen de datos y colocarlos en el conjunto de datos.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
      <summary>Obtiene o establece una instrucción SQL para eliminar registros del conjunto de datos.</summary>
      <returns>
        <see cref="T:System.Data.IDbCommand" /> utilizado mientras opera <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para eliminar registros del origen de datos para filas eliminadas en el conjunto de datos.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
      <summary>Obtiene o establece una instrucción SQL utilizada para insertar nuevos registros en el origen de datos.</summary>
      <returns>
        <see cref="T:System.Data.IDbCommand" /> utilizado mientras opera <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para insertar registros en el origen de datos para nuevas filas en el conjunto de datos.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
      <summary>Obtiene o establece una instrucción SQL utilizada para seleccionar registros en el origen de datos.</summary>
      <returns>
        <see cref="T:System.Data.IDbCommand" /> que se utiliza mientras opera <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para seleccionar registros del origen de datos para su colocación en el conjunto de datos.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
      <summary>Obtiene o establece una instrucción SQL utilizada para actualizar registros en el origen de datos.</summary>
      <returns>
        <see cref="T:System.Data.IDbCommand" /> utilizado mientras opera <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para actualizar registros del origen de datos para filas modificadas en el conjunto de datos.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
      <summary>Obtiene o establece un valor que habilita o deshabilita la compatibilidad con el procesamiento por lotes, y especifica el número de comandos que se pueden ejecutar en un lote.</summary>
      <returns>Número de filas que se van a procesar por lote.  
  
 <list type="table"><listheader><term> Valor</term><description> Efecto</description></listheader><item><term> 0</term><description> No hay límite para el tamaño de lotes.</description></item><item><term> 1</term><description> Deshabilita la actualización por lotes.</description></item><item><term> &gt; dimensional</term><description> Los cambios se envían utilizando los lotes de las operaciones <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" /> a la vez.</description></item></list>  

 Cuando se establece en un valor distinto de 1, todos los comandos asociados a <see cref="T:System.Data.Common.DbDataAdapter" /> deben tener su <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> propiedad establecida en None o OutputParameters. De lo contrario, se producirá una excepción.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.UpdateCommand">
      <summary>Obtiene o establece un comando que se utiliza para actualizar registros en el origen de datos.</summary>
      <returns>Interfaz <see cref="T:System.Data.IDbCommand" /> utilizada mientras opera <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> para actualizar registros del origen de datos para filas modificadas en el conjunto de datos.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataReader">
      <summary>Lee una secuencia de sólo avance de filas de un origen de datos.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Close">
      <summary>Cierra el objeto <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.CloseAsync">
      <summary>Cierra de forma asincrónica el objeto <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns>Tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Dispose">
      <summary>Libera todos los recursos usados por la instancia actual de la clase <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados que usa <see cref="T:System.Data.Common.DbDataReader" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar tanto los recursos administrados como los no administrados, <see langword="false" /> para liberar solo los recursos no administrados.</param>
    </member>
    <member name="M:System.Data.Common.DbDataReader.DisposeAsync">
      <summary>Libera de forma asincrónica todos los recursos que usa la instancia actual de la clase <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns>Tarea <see cref="T:System.Threading.Tasks.ValueTask" /> que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetBoolean(System.Int32)">
      <summary>Cuando se invalida en una clase derivada, obtiene el valor de la columna especificada como booleano.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice de columna está fuera del rango.</exception>
      <exception cref="T:System.InvalidCastException">La conversión especificada no es válida.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetByte(System.Int32)">
      <summary>Cuando se invalida en una clase derivada, obtiene el valor de la columna especificada como byte.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice de columna está fuera del rango.</exception>
      <exception cref="T:System.InvalidCastException">La conversión especificada no es válida.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Cuando se invalida en una clase derivada, lee un número especificado de bytes de la columna especificada a partir de un índice especificado, y los escribe en un búfer a partir de una posición especificada en el búfer.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <param name="dataOffset">Índice de la fila desde la que se va a iniciar la operación de lectura.</param>
      <param name="buffer">Búfer en el que se van a copiar los datos.</param>
      <param name="bufferOffset">Índice del búfer en el que se van a copiar los datos.</param>
      <param name="length">Número máximo de bytes que se pueden leer.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice de columna está fuera del rango.</exception>
      <exception cref="T:System.InvalidCastException">La conversión especificada no es válida.</exception>
      <returns>El número real de bytes que se leen.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetChar(System.Int32)">
      <summary>Cuando se invalida en una clase derivada, obtiene el valor de la columna especificada como carácter.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice de columna está fuera del rango.</exception>
      <exception cref="T:System.InvalidCastException">La conversión especificada no es válida.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Cuando se invalida en una clase derivada, lee un número especificado de caracteres de la columna especificada a partir de un índice especificado, y los escribe en un búfer a partir de una posición especificada.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <param name="dataOffset">Índice de la fila desde la que se va a iniciar la operación de lectura.</param>
      <param name="buffer">Búfer en el que se van a copiar los datos.</param>
      <param name="bufferOffset">Índice del búfer en el que se van a copiar los datos.</param>
      <param name="length">Número máximo de caracteres que se van a leer.</param>
      <returns>Número real de caracteres que se leen.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetColumnSchemaAsync(System.Threading.CancellationToken)">
      <summary>Esta es la versión asincrónica de <see cref="M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)" />.
Los proveedores lo deben reemplazar con una implementación apropiada.
Opcionalmente, se puede respetar <paramref name="cancellationToken" />.
La implementación predeterminada invoca la llamada sincrónica a <see cref="M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)" /> y devuelve una tarea completada.
La implementación predeterminada devolverá una tarea cancelada si se pasa un <paramref name="cancellationToken" /> ya cancelado.
Las excepciones producidas por <see cref="M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)" /> se comunicarán mediante la propiedad Task Exception devuelta.</summary>
      <param name="cancellationToken">Instrucción de cancelación.</param>
      <returns>Tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetData(System.Int32)">
      <summary>Devuelve un lector de datos anidados para la columna solicitada.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice de columna está fuera del rango.</exception>
      <returns>Lector de datos.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)">
      <summary>Cuando se invalida en una clase derivada, obtiene el nombre del tipo de datos de la columna especificada.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice de columna está fuera del rango.</exception>
      <returns>Nombre del tipo de datos.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDateTime(System.Int32)">
      <summary>Cuando se invalida en una clase derivada, obtiene el valor de la columna especificada como un objeto <see cref="T:System.DateTime" />.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice de columna está fuera del rango.</exception>
      <exception cref="T:System.InvalidCastException">La conversión especificada no es válida.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)">
      <summary>Devuelve un objeto <see cref="T:System.Data.Common.DbDataReader" /> para el índice de columna solicitado que puede ser invalidado con una implementación específica del proveedor.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <returns>Un objeto <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDecimal(System.Int32)">
      <summary>Cuando se invalida en una clase derivada, obtiene el valor de la columna especificada como <see cref="T:System.Decimal" />.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice de columna está fuera del rango.</exception>
      <exception cref="T:System.InvalidCastException">La conversión especificada no es válida.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDouble(System.Int32)">
      <summary>Cuando se invalida en una clase derivada, obtiene el valor de la columna especificada como un número de punto flotante de precisión doble.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <exception cref="T:System.InvalidCastException">La conversión especificada no es válida.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetEnumerator">
      <summary>Cuando se invalida en una clase derivada, devuelve un enumerador que se puede usar para recorrer en iteración las filas del lector de datos.</summary>
      <returns>Enumerador que se puede usar para recorrer en iteración en las filas del lector de datos.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldType(System.Int32)">
      <summary>Cuando se invalida en una clase derivada, obtiene el tipo de datos de la columna especificada.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice de columna está fuera del rango.</exception>
      <exception cref="T:System.InvalidCastException">La conversión especificada no es válida.</exception>
      <returns>El tipo de datos de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)">
      <summary>Obtiene el valor de la columna especificada con el tipo solicitado.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <typeparam name="T">Tipo del valor que se va a devolver.</typeparam>
      <exception cref="T:System.InvalidOperationException">La conexión se descartó o cerró durante la recuperación de datos.  

o bien 
El lector de datos se cerró durante la recuperación de datos.  
  
o bien

No hay ningún dato listo para leer (por ejemplo, no se ha llamado al primer <see cref="M:System.Data.Common.DbDataReader.Read" /> o ha devuelto <see langword="false" />).  

o bien

El lector intentó leer una columna leída previamente en modo secuencial.  

o bien

Había una operación asincrónica en curso. Esto se aplica a todos los métodos Get* cuando se ejecutan en modo secuencial, ya que se les podía llamar mientras se leía una secuencia.</exception>
      <exception cref="T:System.IndexOutOfRangeException">El índice de columna está fuera del rango.</exception>
      <exception cref="T:System.InvalidCastException">El valor devuelto por la base de datos no coincide o no se puede convertir en <typeparamref name="T" />.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)">
      <summary>Obtiene de manera asincrónica el valor de la columna especificada con el tipo solicitado.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <typeparam name="T">Tipo del valor que se va a devolver.</typeparam>
      <exception cref="T:System.InvalidOperationException">La conexión se descartó o cerró durante la recuperación de datos.  
  
o bien

El lector de datos se cerró durante la recuperación de datos.  

o bien

No hay ningún dato listo para leer (por ejemplo, no se ha llamado al primer <see cref="M:System.Data.Common.DbDataReader.Read" /> o ha devuelto <see langword="false" />).

o bien

Se intentó leer una columna leída previamente en modo secuencial.  

o bien

Había una operación asincrónica en curso. Esto se aplica a todos los métodos Get_*_ cuando se ejecutan en modo secuencial, ya que se les podía llamar mientras se leía una secuencia.</exception>
      <exception cref="T:System.IndexOutOfRangeException">El índice de columna está fuera del rango.</exception>
      <exception cref="T:System.InvalidCastException">El valor devuelto por la base de datos no coincide o no se puede convertir en <typeparamref name="T" />.</exception>
      <returns>Tarea cuyo <see cref="P:System.Threading.Tasks.Task`1.Result" /> contiene el valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)">
      <summary>Obtiene de manera asincrónica el valor de la columna especificada con el tipo solicitado.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <param name="cancellationToken">Token para cancelar la operación asincrónica.</param>
      <typeparam name="T">Tipo del valor que se va a devolver.</typeparam>
      <exception cref="T:System.InvalidOperationException">La conexión se descartó o cerró durante la recuperación de datos.  
  
o bien

El lector de datos se cerró durante la recuperación de datos.  

o bien

No hay ningún dato listo para leer (por ejemplo, no se ha llamado al primer <see cref="M:System.Data.Common.DbDataReader.Read" /> o ha devuelto <see langword="false" />).

o bien

Se intentó leer una columna leída previamente en modo secuencial.  

o bien

Había una operación asincrónica en curso. Esto se aplica a todos los métodos Get_*_ cuando se ejecutan en modo secuencial, ya que se les podía llamar mientras se leía una secuencia.</exception>
      <exception cref="T:System.IndexOutOfRangeException">El índice de columna está fuera del rango.</exception>
      <exception cref="T:System.InvalidCastException">El valor devuelto por la base de datos no coincide o no se puede convertir en <typeparamref name="T" />.</exception>
      <returns>Tarea cuyo <see cref="P:System.Threading.Tasks.Task`1.Result" /> contiene el valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFloat(System.Int32)">
      <summary>Cuando se invalida en una clase derivada, obtiene el valor de la columna especificada como un número de punto flotante de precisión sencilla.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice de columna está fuera del rango.</exception>
      <exception cref="T:System.InvalidCastException">La conversión especificada no es válida.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetGuid(System.Int32)">
      <summary>Cuando se invalida en una clase derivada, obtiene el valor de la columna especificada como un identificador único global (GUID).</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice de columna está fuera del rango.</exception>
      <exception cref="T:System.InvalidCastException">La conversión especificada no es válida.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt16(System.Int32)">
      <summary>Cuando se invalida en una clase derivada, obtiene el valor de la columna especificada como un entero con signo de 16 bits.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice de columna está fuera del rango.</exception>
      <exception cref="T:System.InvalidCastException">La conversión especificada no es válida.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt32(System.Int32)">
      <summary>Cuando se invalida en una clase derivada, obtiene el valor de la columna especificada como un entero con signo de 32 bits.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice de columna está fuera del rango.</exception>
      <exception cref="T:System.InvalidCastException">La conversión especificada no es válida.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt64(System.Int32)">
      <summary>Cuando se invalida en una clase derivada, obtiene el valor de la columna especificada como un entero con signo de 64 bits.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice de columna está fuera del rango.</exception>
      <exception cref="T:System.InvalidCastException">La conversión especificada no es válida.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetName(System.Int32)">
      <summary>Cuando se invalida en una clase derivada, obtiene el nombre de la columna, dado el índice de columna de base cero.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <returns>El nombre de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetOrdinal(System.String)">
      <summary>Cuando se invalida en una clase derivada, obtiene el índice de columna, dado el nombre de la columna.</summary>
      <param name="name">El nombre de la columna.</param>
      <exception cref="T:System.IndexOutOfRangeException">El nombre especificado no es un nombre de columna válido.</exception>
      <returns>Índice de la columna de base cero.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)">
      <summary>Devuelve el tipo específico del proveedor de la columna especificada.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice de columna está fuera del rango.</exception>
      <returns>Tipo .NET específico del proveedor.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)">
      <summary>Obtiene el valor de la columna especificada como instancia de un tipo específico del proveedor.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])">
      <summary>Obtiene todas las columnas de atributos específicos del proveedor en la colección para la fila actual.</summary>
      <param name="values">Matriz de <see cref="T:System.Object" /> en la que se copian las columnas de atributos.</param>
      <returns>Número de instancias de elementos en la matriz.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetSchemaTable">
      <summary>Devuelve un objeto <see cref="T:System.Data.DataTable" /> que describe los metadatos de columna del <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <exception cref="T:System.InvalidOperationException">La clase <see cref="T:System.Data.Common.DbDataReader" /> está cerrada.</exception>
      <exception cref="T:System.IndexOutOfRangeException">El índice de columna está fuera del rango.</exception>
      <exception cref="T:System.NotSupportedException">Solo .NET Core: este miembro no se admite.</exception>
      <returns>
        <see cref="T:System.Data.DataTable" /> que describe los metadatos de columna.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetSchemaTableAsync(System.Threading.CancellationToken)">
      <summary>Esta es la versión asincrónica de <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" />.
Los proveedores lo deben reemplazar con una implementación apropiada.
Opcionalmente, se puede respetar <paramref name="cancellationToken" />.
La implementación predeterminada invoca la llamada sincrónica a <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" /> y devuelve una tarea completada.
La implementación predeterminada devolverá una tarea cancelada si se pasa un <paramref name="cancellationToken" /> ya cancelado.
Las excepciones producidas por <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" /> se comunicarán mediante la propiedad Task Exception devuelta.</summary>
      <param name="cancellationToken">Instrucción de cancelación.</param>
      <returns>Tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetStream(System.Int32)">
      <summary>Obtiene un flujo para recuperar datos de la columna especificada.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <exception cref="T:System.InvalidOperationException">La conexión se descartó o cerró durante la recuperación de datos.  
  
o bien

El lector de datos se cerró durante la recuperación de datos.  

o bien

No hay ningún dato listo para leer (por ejemplo, no se ha llamado al primer <see cref="M:System.Data.Common.DbDataReader.Read" /> o ha devuelto false).  

o bien

El lector de datos intentó leer una columna leída previamente en modo secuencial.  

o bien

Había una operación asincrónica en curso. Esto se aplica a todos los métodos Get* cuando se ejecutan en modo secuencial, ya que se les podía llamar mientras se leía una secuencia.</exception>
      <exception cref="T:System.IndexOutOfRangeException">El índice de columna está fuera del rango.</exception>
      <exception cref="T:System.InvalidCastException">La columna especificada no es un tipo binario que admita operaciones de lectura con <see cref="T:System.IO.Stream" />.</exception>
      <returns>Flujo.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetString(System.Int32)">
      <summary>Cuando se invalida en una clase derivada, obtiene el valor de la columna especificada como una instancia de <see cref="T:System.String" />.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice de columna está fuera del rango.</exception>
      <exception cref="T:System.InvalidCastException">La conversión especificada no es válida.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetTextReader(System.Int32)">
      <summary>Obtiene un lector de texto para recuperar datos de la columna.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <exception cref="T:System.InvalidOperationException">La conexión se descartó o cerró durante la recuperación de datos.  
  
o bien

El lector de datos se cerró durante la recuperación de datos.  

o bien

No hay ningún dato listo para leer (por ejemplo, no se ha llamado al primer <see cref="M:System.Data.Common.DbDataReader.Read" /> o ha devuelto false).  

o bien

El lector de datos intentó leer una columna leída previamente en modo secuencial.  

o bien

Había una operación asincrónica en curso. Esto se aplica a todos los métodos Get* cuando se ejecutan en modo secuencial, ya que se les podía llamar mientras se leía una secuencia.</exception>
      <exception cref="T:System.IndexOutOfRangeException">El índice de columna está fuera del rango.</exception>
      <exception cref="T:System.InvalidCastException">La columna especificada no es un tipo de texto que admita operaciones de lectura con <see cref="T:System.IO.TextReader" />.</exception>
      <returns>Lector de texto.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetValue(System.Int32)">
      <summary>Cuando se invalida en una clase derivada, obtiene el valor de la columna especificada como una instancia de <see cref="T:System.Object" />.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice de columna está fuera del rango.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetValues(System.Object[])">
      <summary>Cuando se invalida en una clase derivada, rellena una matriz de objetos con los valores de columna de la fila actual.</summary>
      <param name="values">Matriz de <see cref="T:System.Object" /> en la que se copian las columnas de atributos.</param>
      <returns>El número de instancias de <see cref="T:System.Object" /> en la matriz.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)">
      <summary>Cuando se invalida en una clase derivada, obtiene un valor que indica si la columna contiene valores inexistentes o que faltan.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice de columna está fuera del rango.</exception>
      <returns>
        <see langword="true" /> si la columna especificada equivale a <see cref="T:System.DBNull" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)">
      <summary>Obtiene de manera asincrónica un valor que indica si la columna contiene valores no existentes o que faltan.</summary>
      <param name="ordinal">La columna de base cero que se recuperará.</param>
      <exception cref="T:System.InvalidOperationException">La conexión se descartó o cerró durante la recuperación de datos.  
  
o bien

El lector de datos se cerró durante la recuperación de datos.  

o bien

No hay ningún dato listo para leer (por ejemplo, no se ha llamado al primer <see cref="M:System.Data.Common.DbDataReader.Read" /> o ha devuelto false).  

o bien

Se intentó leer una columna leída previamente en modo secuencial.  

o bien

Había una operación asincrónica en curso. Esto se aplica a todos los métodos Get* cuando se ejecutan en modo secuencial, ya que se les podía llamar mientras se leía una secuencia.</exception>
      <exception cref="T:System.IndexOutOfRangeException">El índice de columna está fuera del rango.</exception>
      <returns>
        <see cref="T:System.Threading.Tasks.Task`1" /> cuya propiedad <see cref="P:System.Threading.Tasks.Task`1.Result" /> es <see langword="true" /> si el valor de la columna especificada es equivalente a <see langword="DBNull" />, o <see langword="false" /> si no lo es.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)">
      <summary>Obtiene de manera asincrónica un valor que indica si la columna contiene valores no existentes o que faltan.</summary>
      <param name="ordinal">La columna de base cero que se recuperará.</param>
      <param name="cancellationToken">Token para cancelar la operación asincrónica.</param>
      <exception cref="T:System.InvalidOperationException">La conexión se descartó o cerró durante la recuperación de datos.  
  
o bien

El lector de datos se cerró durante la recuperación de datos.  

o bien

No hay ningún dato listo para leer (por ejemplo, no se ha llamado al primer <see cref="M:System.Data.Common.DbDataReader.Read" /> o ha devuelto false).  

o bien

Se intentó leer una columna leída previamente en modo secuencial.  

o bien 
Había una operación asincrónica en curso. Esto se aplica a todos los métodos Get* cuando se ejecutan en modo secuencial, ya que se les podía llamar mientras se leía una secuencia.</exception>
      <exception cref="T:System.IndexOutOfRangeException">El índice de columna está fuera del rango.</exception>
      <returns>
        <see cref="T:System.Threading.Tasks.Task`1" /> cuya propiedad <see cref="P:System.Threading.Tasks.Task`1.Result" /> es <see langword="true" /> si el valor de la columna especificada es equivalente a <see langword="DBNull" />, o <see langword="false" /> si no lo es.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResult">
      <summary>Cuando se invalida en una clase derivada, hace avanzar el lector hasta el resultado siguiente cuando se leen los resultados de un lote de instrucciones.</summary>
      <returns>
        <see langword="true" /> si hay más conjuntos de resultados; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResultAsync">
      <summary>Hace avanzar de manera asincrónica el lector hasta el resultado siguiente cuando se leen los resultados de un lote de instrucciones.</summary>
      <exception cref="T:System.Data.Common.DbException">Error que se haya producido al ejecutar el texto del comando.</exception>
      <returns>Tarea cuya propiedad <see cref="P:System.Threading.Tasks.Task`1.Result" /> es <see langword="true" /> si hay más conjuntos de resultados, o <see langword="false" /> si no los hay.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)">
      <summary>Hace avanzar de manera asincrónica el lector hasta el resultado siguiente cuando se leen los resultados de un lote de instrucciones.</summary>
      <param name="cancellationToken">Instrucción de cancelación.</param>
      <exception cref="T:System.Data.Common.DbException">Error que se haya producido al ejecutar el texto del comando.</exception>
      <returns>
        <see cref="T:System.Threading.Tasks.Task`1" /> cuya propiedad <see cref="P:System.Threading.Tasks.Task`1.Result" /> es <see langword="true" /> si hay más conjuntos de resultados, o <see langword="false" /> si no los hay.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Read">
      <summary>Cuando se invalida en una clase derivada, hace avanzar el lector al siguiente registro del conjunto de resultados.</summary>
      <returns>
        <see langword="true" /> si hay más filas; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.ReadAsync">
      <summary>Hace avanzar de manera asincrónica el lector hasta el siguiente registro de un conjunto de resultados.</summary>
      <exception cref="T:System.Data.Common.DbException">Error que se haya producido al ejecutar el texto del comando.</exception>
      <returns>
        <see cref="T:System.Threading.Tasks.Task`1" /> cuya propiedad <see cref="P:System.Threading.Tasks.Task`1.Result" /> es <see langword="true" /> si hay más filas, o <see langword="false" /> si no las hay.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)">
      <summary>Hace avanzar de manera asincrónica el lector hasta el siguiente registro de un conjunto de resultados.</summary>
      <param name="cancellationToken">Instrucción de cancelación.</param>
      <exception cref="T:System.Data.Common.DbException">Error que se haya producido al ejecutar el texto del comando.</exception>
      <returns>
        <see cref="T:System.Threading.Tasks.Task`1" /> cuya propiedad <see cref="P:System.Threading.Tasks.Task`1.Result" /> es <see langword="true" /> si hay más filas, o <see langword="false" /> si no las hay.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Data.IDataRecord.GetData(System.Int32)" />.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <returns>Instancia de <see cref="T:System.Data.IDataReader" /> que se va a utilizar cuando el campo apunte a más datos estructurados remotos.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Depth">
      <summary>Obtiene un valor que indica la profundidad de anidamiento de la fila actual.</summary>
      <returns>Profundidad de anidamiento de la fila actual.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.FieldCount">
      <summary>Cuando se invalida en una clase derivada, obtiene el número de columnas en el flujo actual.</summary>
      <exception cref="T:System.NotSupportedException">No hay ninguna conexión a una instancia de SQL Server.</exception>
      <returns>El número de columnas de la fila actual.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.HasRows">
      <summary>Cuando se invalida en una clase derivada, obtiene un valor que indica si esta instancia de <see cref="T:System.Data.Common.DbDataReader" /> contiene una o más filas.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Data.Common.DbDataReader" /> contiene una o varias filas; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.IsClosed">
      <summary>Cuando se invalida en una clase derivada, obtiene un valor que indica si <see cref="T:System.Data.Common.DbDataReader" /> está cerrado.</summary>
      <exception cref="T:System.InvalidOperationException">La clase <see cref="T:System.Data.Common.DbDataReader" /> está cerrada.</exception>
      <returns>
        <see langword="true" /> si <see cref="T:System.Data.Common.DbDataReader" /> está cerrado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Item(System.Int32)">
      <summary>Cuando se invalida en una clase derivada, obtiene el valor de la columna especificada como una instancia de <see cref="T:System.Object" />.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice de columna está fuera del rango.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Item(System.String)">
      <summary>Cuando se invalida en una clase derivada, obtiene el valor de la columna especificada como una instancia de <see cref="T:System.Object" />.</summary>
      <param name="name">El nombre de la columna.</param>
      <exception cref="T:System.IndexOutOfRangeException">No se ha encontrado la columna con el nombre especificado.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.RecordsAffected">
      <summary>Cuando se invalida en una clase derivada, obtiene el número de filas cambiadas, insertadas o eliminadas mediante la ejecución de la instrucción SQL.</summary>
      <returns>El número de filas modificadas, insertadas o eliminadas. -1 para instrucciones SELECT; 0 si no hay filas afectadas o se produce un error en la instrucción.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.VisibleFieldCount">
      <summary>Obtiene el número de campos de <see cref="T:System.Data.Common.DbDataReader" /> que no están ocultos.</summary>
      <returns>El número de campos que no están ocultos.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataReaderExtensions">
      <summary>Esta clase contiene métodos de extensión de esquema de columna para <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReaderExtensions.CanGetColumnSchema(System.Data.Common.DbDataReader)">
      <summary>Obtiene un valor que indica si <see cref="T:System.Data.Common.DbDataReader" /> puede obtener un esquema de columna.</summary>
      <param name="reader">
        <see cref="T:System.Data.Common.DbDataReader" /> que se comprobará en busca de compatibilidad del esquema de columna.</param>
      <returns>
        <see langword="true" /> si <see cref="T:System.Data.Common.DbDataReader" /> puede obtener un esquema de columna; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)">
      <summary>Obtiene el esquema de columna (colección <see cref="T:System.Data.Common.DbColumn" />) para <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <param name="reader">
        <see cref="T:System.Data.Common.DbDataReader" /> para devolver el esquema de columna.</param>
      <returns>Esquema de columna (colección <see cref="T:System.Data.Common.DbColumn" />) para <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataRecord">
      <summary>Implementa <see cref="T:System.Data.IDataRecord" /> y <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />, y proporciona compatibilidad con enlaces de datos para <see cref="T:System.Data.Common.DbEnumerator" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DbDataRecord" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetBoolean(System.Int32)">
      <summary>Devuelve el valor de la columna especificada como booleano.</summary>
      <param name="i">Ordinal de la columna.</param>
      <returns>
        <see langword="true" /> si el valor booleano es <see langword="true" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetByte(System.Int32)">
      <summary>Devuelve el valor de la columna especificada como un byte.</summary>
      <param name="i">Ordinal de la columna.</param>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Devuelve el valor de la columna especificada como una matriz de bytes.</summary>
      <param name="i">Índice de la columna de base cero.</param>
      <param name="dataIndex">Índice del campo a partir del cual se va a comenzar la operación de lectura.</param>
      <param name="buffer">Búfer en el que se va a leer la secuencia de bytes.</param>
      <param name="bufferIndex">Índice de <paramref name="buffer" /> para iniciar la operación de lectura.</param>
      <param name="length">Número de bytes que se va a leer.</param>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetChar(System.Int32)">
      <summary>Devuelve el valor de la columna especificada como un carácter.</summary>
      <param name="i">Ordinal de la columna.</param>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Devuelve el valor de la columna especificada como una matriz de caracteres.</summary>
      <param name="i">Ordinal de columna.</param>
      <param name="dataIndex">Búfer donde se van a copiar los datos.</param>
      <param name="buffer">Longitud máxima que se puede copiar en el búfer.</param>
      <param name="bufferIndex">Punto inicial del búfer.</param>
      <param name="length">Punto inicial del origen de datos.</param>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetData(System.Int32)">
      <summary>No se admite actualmente.</summary>
      <param name="i">No se admite actualmente.</param>
      <returns>No se admite actualmente.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDataTypeName(System.Int32)">
      <summary>Devuelve el nombre del tipo de datos de back-end.</summary>
      <param name="i">Ordinal de la columna.</param>
      <returns>Nombre del tipo de datos de back-end.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDateTime(System.Int32)">
      <summary>Devuelve el valor de la columna especificada como un objeto <see cref="T:System.DateTime" />.</summary>
      <param name="i">Ordinal de la columna.</param>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDbDataReader(System.Int32)">
      <summary>Devuelve un objeto <see cref="T:System.Data.Common.DbDataReader" /> para el índice de columna solicitado que puede ser invalidado con una implementación específica del proveedor.</summary>
      <param name="i">Índice de la columna de base cero.</param>
      <returns>Un objeto <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDecimal(System.Int32)">
      <summary>Devuelve el valor de la columna especificada como un objeto <see cref="T:System.Decimal" />.</summary>
      <param name="i">Ordinal de la columna.</param>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDouble(System.Int32)">
      <summary>Devuelve el valor de la columna especificada como un número de punto flotante de doble precisión.</summary>
      <param name="i">Ordinal de la columna.</param>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetFieldType(System.Int32)">
      <summary>Devuelve <see cref="T:System.Type" />, que el tipo de datos del objeto.</summary>
      <param name="i">Ordinal de la columna.</param>
      <returns>
        <see cref="T:System.Type" />, que el tipo de datos del objeto.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetFloat(System.Int32)">
      <summary>Devuelve el valor de la columna especificada como un número de punto flotante de precisión sencilla.</summary>
      <param name="i">Ordinal de la columna.</param>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetGuid(System.Int32)">
      <summary>Devuelve el valor GUID del campo especificado.</summary>
      <param name="i">Índice del campo que se va a devolver.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Valor GUID del campo especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt16(System.Int32)">
      <summary>Devuelve el valor de la columna especificada como un entero de 16 bits con signo.</summary>
      <param name="i">Ordinal de la columna.</param>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt32(System.Int32)">
      <summary>Devuelve el valor de la columna especificada como un entero de 32 bits con signo.</summary>
      <param name="i">Ordinal de la columna.</param>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt64(System.Int32)">
      <summary>Devuelve el valor de la columna especificada como un entero de 64 bits con signo.</summary>
      <param name="i">Ordinal de la columna.</param>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetName(System.Int32)">
      <summary>Devuelve el nombre de la columna especificada.</summary>
      <param name="i">Ordinal de la columna.</param>
      <returns>El nombre de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetOrdinal(System.String)">
      <summary>Devuelve el ordinal de columna dado el nombre de la misma.</summary>
      <param name="name">El nombre de la columna.</param>
      <returns>Ordinal de la columna.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetString(System.Int32)">
      <summary>Devuelve el valor de la columna especificada como una cadena.</summary>
      <param name="i">Ordinal de la columna.</param>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetValue(System.Int32)">
      <summary>Devuelve el valor de la columna especificada en su formato nativo.</summary>
      <param name="i">Ordinal de la columna.</param>
      <returns>Valor que se va a devolver.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetValues(System.Object[])">
      <summary>Rellena una matriz de objetos con los valores de columna del registro actual.</summary>
      <param name="values">Matriz de <see cref="T:System.Object" /> en la que copiar los campos de atributos.</param>
      <returns>El número de instancias de <see cref="T:System.Object" /> en la matriz.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.IsDBNull(System.Int32)">
      <summary>Se utiliza para indicar valores inexistentes.</summary>
      <param name="i">Ordinal de la columna.</param>
      <returns>
        <see langword="true" /> si la columna especificada equivale a <see cref="T:System.DBNull" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary>Devuelve una colección de atributos personalizados para esta instancia de un componente.</summary>
      <returns>
        <see cref="T:System.ComponentModel.AttributeCollection" /> que contiene los atributos de este objeto.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary>Devuelve el nombre de clase de esta instancia de un componente.</summary>
      <returns>Nombre de clase del objeto o <see langword="null" /> si la clase no tiene nombre.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary>Devuelve los eventos para esta instancia de un componente.</summary>
      <returns>El nombre del objeto, o <see langword="null" /> si el objeto no tiene un nombre.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary>Devuelve un convertidor de tipos para instancia de un componente.</summary>
      <returns>
        <see cref="T:System.ComponentModel.TypeConverter" /> que es el convertidor para este objeto o <see langword="null" /> si no hay ningún <see cref="T:System.ComponentModel.TypeConverter" /> para este objeto.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary>Devuelve el evento predeterminado para esta instancia de un componente.</summary>
      <returns>
        <see cref="T:System.ComponentModel.EventDescriptor" /> que representa el evento predeterminado para este objeto o <see langword="null" /> si este objeto no tiene eventos.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary>Devuelve la propiedad predeterminada para esta instancia de un componente.</summary>
      <returns>
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> que representa la propiedad predeterminada de este objeto o <see langword="null" /> si el objeto no tiene propiedades.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary>Devuelve un editor del tipo especificado para esta instancia de un componente.</summary>
      <param name="editorBaseType">
        <see cref="T:System.Type" /> que representa el editor para este objeto.</param>
      <returns>Un <see cref="T:System.Object" /> del tipo especificado que es el editor para este objeto o <see langword="null" /> si no se encuentra el editor.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary>Devuelve los eventos para esta instancia de un componente.</summary>
      <returns>
        <see cref="T:System.ComponentModel.EventDescriptorCollection" /> que representa los eventos de esta instancia de componente.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary>Devuelve los eventos de esta instancia de un componente utilizando la matriz de atributos especificada como filtro.</summary>
      <param name="attributes">Matriz de tipo <see cref="T:System.Attribute" /> que se usa como filtro.</param>
      <returns>
        <see cref="T:System.ComponentModel.EventDescriptorCollection" /> que representa los eventos filtrados de esta instancia de componente.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary>Devuelve las propiedades para esta instancia de un componente.</summary>
      <returns>Un <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que representa las propiedades de esta instancia de componente.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary>Devuelve las propiedades para esta instancia de un componente usando la matriz de atributos como filtro.</summary>
      <param name="attributes">Matriz de tipo <see cref="T:System.Attribute" /> que se usa como filtro.</param>
      <returns>
        <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que representa las propiedades filtradas de esta instancia de componente.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary>Devuelve un objeto que contiene la propiedad que describe el descriptor de propiedades especificado.</summary>
      <param name="pd">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> que representa la propiedad cuyo propietario se va a buscar.</param>
      <returns>
        <see cref="T:System.Object" /> que representa el propietario de la propiedad especificada.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.FieldCount">
      <summary>Indica el número de campos del registro actual. Esta propiedad es de sólo lectura.</summary>
      <exception cref="T:System.NotSupportedException">No conectado a un origen de datos desde el que leer.</exception>
      <returns>Número de campos del registro actual.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.Item(System.Int32)">
      <summary>Indica el valor de la columna especificada en su formato nativo dado el ordinal de columna. Esta propiedad es de sólo lectura.</summary>
      <param name="i">Ordinal de la columna.</param>
      <returns>Valor de la columna especificada en su formato nativo.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.Item(System.String)">
      <summary>Indica el valor en la columna especificada en su formato nativo dado nombre de columna. Esta propiedad es de sólo lectura.</summary>
      <param name="name">Nombre de columna.</param>
      <returns>Valor de la columna especificada en su formato nativo.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataSourceEnumerator">
      <summary>Proporciona un mecanismo para enumerar todas las instancias disponibles de servidores de bases de datos incluidas en la red local.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataSourceEnumerator.#ctor">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.Data.Common.DbDataSourceEnumerator" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataSourceEnumerator.GetDataSources">
      <summary>Recupera un objeto <see cref="T:System.Data.DataTable" /> que contiene información sobre todas las instancias visibles del servidor representado por la instancia fuertemente tipada de esta clase.</summary>
      <returns>
        <see cref="T:System.Data.DataTable" /> que contiene información sobre las instancias visibles del origen de datos asociado.</returns>
    </member>
    <member name="T:System.Data.Common.DbEnumerator">
      <summary>Expone el método <see cref="M:System.Collections.IEnumerable.GetEnumerator" />, que admite una iteración simple sobre una colección mediante un proveedor de datos de .NET Framework.</summary>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DbEnumerator" /> con los el lector de datos especificado.</summary>
      <param name="reader">El DataReader a través del cual se va a iterar.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DbEnumerator" /> con el lector especificado e indica si se va a cerrar automáticamente el lector después de recorrer en iteración sus datos.</summary>
      <param name="reader">El DataReader a través del cual se va a iterar.</param>
      <param name="closeReader">
        <see langword="true" /> para cerrar DataReader automáticamente después de recorrer en iteración sus datos; en caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DbEnumerator" /> utilizando la clase <see langword="DataReader" /> especificada.</summary>
      <param name="reader">El <see langword="DataReader" /> a través del cual se va a iterar.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DbEnumerator" /> usando el <see langword="DataReader" /> especificado e indica si se debe cerrar automáticamente el <see langword="DataReader" /> después de recorrer en iteración sus datos.</summary>
      <param name="reader">El <see langword="DataReader" /> a través del cual se va a iterar.</param>
      <param name="closeReader">
        <see langword="true" /> para cerrar el <see langword="DataReader" /> automáticamente después de recorrer en iteración sus datos; si no, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.MoveNext">
      <summary>Desplaza el enumerador al siguiente elemento de la colección.</summary>
      <exception cref="T:System.InvalidOperationException">La colección se modificó después de que el enumerador se creara.</exception>
      <returns>Es <see langword="true" /> si el enumerador avanzó con éxito hasta el siguiente elemento; es <see langword="false" /> si el enumerador alcanzó el final de la colección.</returns>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.Reset">
      <summary>Establece el enumerador en su posición inicial (antes del primer elemento de la colección).</summary>
      <exception cref="T:System.InvalidOperationException">La colección se modificó después de que el enumerador se creara.</exception>
    </member>
    <member name="P:System.Data.Common.DbEnumerator.Current">
      <summary>Obtiene el elemento actual de la colección.</summary>
      <exception cref="T:System.InvalidOperationException">El enumerador se coloca delante del primer elemento o detrás del último elemento de la colección.</exception>
      <returns>Elemento actual de la colección.</returns>
    </member>
    <member name="T:System.Data.Common.DbException">
      <summary>Clase base para todas las excepciones iniciadas en nombre del origen de datos.</summary>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DbException" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DbException" /> con la información y el contexto de serialización especificados.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos serializados del objeto que hacen referencia a la excepción que se va a producir.</param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene información contextual sobre el origen o el destino.</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DbException" /> con el mensaje de error especificado.</summary>
      <param name="message">Mensaje que se va a mostrar para esta excepción.</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Data.Common.DbException" /> con el mensaje de error especificado y una referencia a la excepción interna que causó esta excepción.</summary>
      <param name="message">Cadena con el mensaje de error.</param>
      <param name="innerException">Referencia a la excepción interna.</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String,System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DbException" /> con el mensaje de error y el código de error especificados.</summary>
      <param name="message">Mensaje de error que explica el motivo de la excepción.</param>
      <param name="errorCode">Código de error para la excepción.</param>
    </member>
    <member name="P:System.Data.Common.DbException.IsTransient">
      <summary>Indica si el error representado por esta <see cref="T:System.Data.Common.DbException" /> podría ser un error transitorio, es decir, si volver a intentar la operación de desencadenamiento podría realizarse correctamente sin ningún otro cambio.</summary>
      <returns>
        <see langword="true" /> Si el error representado puede ser un error transitorio; <see langword="false" /> en caso contrario,.</returns>
    </member>
    <member name="P:System.Data.Common.DbException.SqlState">
      <summary>
        <para> Para los proveedores de bases de datos que lo admiten, contiene un código de retorno SQL estándar de cinco caracteres que indica si la operación de base de datos se realizó correctamente o no. Los dos primeros caracteres representan la <strong>clase</strong> del código de devolución (por ejemplo, error, correcto), mientras que los tres últimos caracteres representan la <strong>subclase</strong>, lo que permite detectar escenarios de error en una base de datos portable.</para>
        <para> En el caso de los proveedores de bases de datos que no lo admitan o para escenarios de error inaplicables, contiene <see langword="null" />.</para>
      </summary>
      <returns>Código de retorno de cinco caracteres de SQL estándar, o <see langword="null" /> .</returns>
    </member>
    <member name="T:System.Data.Common.DbMetaDataCollectionNames">
      <summary>Proporciona una lista de constantes para el elemento conocido MetaDataCollections: DataSourceInformation, DataTypes, MetaDataCollections, ReservedWords y Restrictions.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation">
      <summary>Constante que se usa con el método <see cref="M:System.Data.Common.DbConnection.GetSchema" /> que representa la colección DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.DataTypes">
      <summary>Constante que se usa con el método <see cref="M:System.Data.Common.DbConnection.GetSchema" /> que representa la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.MetaDataCollections">
      <summary>Constante que se usa con el método <see cref="M:System.Data.Common.DbConnection.GetSchema" /> que representa la colección MetaDataCollections.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.ReservedWords">
      <summary>Constante que se usa con el método <see cref="M:System.Data.Common.DbConnection.GetSchema" /> que representa la colección ReservedWords.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.Restrictions">
      <summary>Constante que se usa con el método <see cref="M:System.Data.Common.DbConnection.GetSchema" /> que representa la colección Restrictions.</summary>
    </member>
    <member name="T:System.Data.Common.DbMetaDataColumnNames">
      <summary>Proporciona valores estáticos que se usan para los nombres de columna de los objetos MetaDataCollection incluidos en <see cref="T:System.Data.DataTable" />. El método GetSchema crea el objeto <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CollectionName">
      <summary>Usado por el método GetSchema para crear la columna CollectionName en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ColumnSize">
      <summary>Usado por el método GetSchema para crear la columna ColumnSize en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CompositeIdentifierSeparatorPattern">
      <summary>Usado por el método GetSchema para crear la columna CompositeIdentifierSeparatorPattern en la colección DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CreateFormat">
      <summary>Usado por el método GetSchema para crear la columna CreateFormat en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CreateParameters">
      <summary>Usado por el método GetSchema para crear la columna CreateParameters en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductName">
      <summary>Usado por el método GetSchema para crear la columna DataSourceProductName en la colección DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductVersion">
      <summary>Usado por el método GetSchema para crear la columna DataSourceProductVersion en la colección DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductVersionNormalized">
      <summary>Usado por el método GetSchema para crear la columna DataSourceProductVersionNormalized en la colección DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataType">
      <summary>Usado por el método GetSchema para crear la columna DataType en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.GroupByBehavior">
      <summary>Usado por el método GetSchema para crear la columna GroupByBehavior en la colección DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IdentifierCase">
      <summary>Usado por el método GetSchema para crear la columna IdentifierCase en la colección DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IdentifierPattern">
      <summary>Usado por el método GetSchema para crear la columna IdentifierPattern en la colección DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsAutoIncrementable">
      <summary>Usado por el método GetSchema para crear la columna IsAutoIncrementable en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsBestMatch">
      <summary>Usado por el método GetSchema para crear la columna IsBestMatch en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsCaseSensitive">
      <summary>Usado por el método GetSchema para crear la columna IsCaseSensitive en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsConcurrencyType">
      <summary>Usado por el método GetSchema para crear la columna IsConcurrencyType en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsFixedLength">
      <summary>Usado por el método GetSchema para crear la columna IsFixedLength en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsFixedPrecisionScale">
      <summary>Usado por el método GetSchema para crear la columna IsFixedPrecisionScale en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsLiteralSupported">
      <summary>Usado por el método GetSchema para crear la columna IsLiteralSupported en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsLong">
      <summary>Usado por el método GetSchema para crear la columna IsLong en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsNullable">
      <summary>Usado por el método GetSchema para crear la columna IsNullable en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsSearchable">
      <summary>Usado por el método GetSchema para crear la columna IsSearchable en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsSearchableWithLike">
      <summary>Usado por el método GetSchema para crear la columna IsSearchableWithLike en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsUnsigned">
      <summary>Usado por el método GetSchema para crear la columna IsUnsigned en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.LiteralPrefix">
      <summary>Usado por el método GetSchema para crear la columna LiteralPrefix en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.LiteralSuffix">
      <summary>Usado por el método GetSchema para crear la columna LiteralSuffix en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.MaximumScale">
      <summary>Usado por el método GetSchema para crear la columna MaximumScale en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.MinimumScale">
      <summary>Usado por el método GetSchema para crear la columna MinimumScale en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.NumberOfIdentifierParts">
      <summary>Usado por el método GetSchema para crear la columna NumberOfIdentifierParts en la colección MetaDataCollections.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.NumberOfRestrictions">
      <summary>Usado por el método GetSchema para crear la columna NumberOfRestrictions en la colección MetaDataCollections.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.OrderByColumnsInSelect">
      <summary>Usado por el método GetSchema para crear la columna OrderByColumnsInSelect en la colección DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat">
      <summary>Usado por el método GetSchema para crear la columna ParameterMarkerFormat en la colección DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerPattern">
      <summary>Usado por el método GetSchema para crear la columna ParameterMarkerPattern en la colección DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength">
      <summary>Usado por el método GetSchema para crear la columna ParameterNameMaxLength en la colección DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern">
      <summary>Usado por el método GetSchema para crear la columna ParameterNamePattern en la colección DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ProviderDbType">
      <summary>Usado por el método GetSchema para crear la columna ProviderDbType en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.QuotedIdentifierCase">
      <summary>Usado por el método GetSchema para crear la columna QuotedIdentifierCase en la colección DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.QuotedIdentifierPattern">
      <summary>Usado por el método GetSchema para crear la columna QuotedIdentifierPattern en la colección DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ReservedWord">
      <summary>Usado por el método GetSchema para crear la columna ReservedWord en la colección ReservedWords.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.StatementSeparatorPattern">
      <summary>Usado por el método GetSchema para crear la columna StatementSeparatorPattern en la colección DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.StringLiteralPattern">
      <summary>Usado por el método GetSchema para crear la columna StringLiteralPattern en la colección DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.SupportedJoinOperators">
      <summary>Usado por el método GetSchema para crear la columna SupportedJoinOperators en la colección DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.TypeName">
      <summary>Usado por el método GetSchema para crear la columna TypeName en la colección DataTypes.</summary>
    </member>
    <member name="T:System.Data.Common.DbParameter">
      <summary>Representa un parámetro para un <see cref="T:System.Data.Common.DbCommand" /> y, de forma opcional, su asignación a una columna <see cref="T:System.Data.DataSet" />. Para más información sobre los parámetros, vea Configurar parámetros y tipos de datos de parámetros.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameter.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DbParameter" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameter.ResetDbType">
      <summary>Restablece la propiedad DbType a su valor original.</summary>
    </member>
    <member name="P:System.Data.Common.DbParameter.DbType">
      <summary>Obtiene o establece el <see cref="T:System.Data.DbType" /> del parámetro.</summary>
      <exception cref="T:System.ArgumentException">No se ha establecido la propiedad en una enumeración <see cref="T:System.Data.DbType" /> válida.</exception>
      <returns>Uno de los valores de <see cref="T:System.Data.DbType" />. De manera predeterminada, es <see cref="F:System.Data.DbType.String" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Direction">
      <summary>Obtiene o establece un valor que indica si el parámetro es sólo de entrada, sólo de salida, bidireccional, o un valor devuelto de un procedimiento almacenado.</summary>
      <exception cref="T:System.ArgumentException">No se ha establecido la propiedad en uno de los valores válidos de <see cref="T:System.Data.ParameterDirection" />.</exception>
      <returns>Uno de los valores de <see cref="T:System.Data.ParameterDirection" />. De manera predeterminada, es <see langword="Input" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.IsNullable">
      <summary>Obtiene o establece un valor que indica si el parámetro acepta valores null.</summary>
      <returns>
        <see langword="true" /> si se aceptan valores null; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.ParameterName">
      <summary>Obtiene o establece el nombre de <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns>Nombre del objeto <see cref="T:System.Data.Common.DbParameter" />. El valor predeterminado es una cadena vacía ("").</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Precision">
      <summary>Obtiene o establece el número máximo de dígitos usados para representar la propiedad <see cref="P:System.Data.Common.DbParameter.Value" />.</summary>
      <returns>Número máximo de dígitos usados para representar la propiedad <see cref="P:System.Data.Common.DbParameter.Value" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Scale">
      <summary>Obtiene o establece el número de posiciones decimales con que se resuelve <see cref="P:System.Data.Common.DbParameter.Value" />.</summary>
      <returns>Número de posiciones decimales a las que se resuelve <see cref="P:System.Data.Common.DbParameter.Value" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Size">
      <summary>Obtiene o establece el tamaño máximo, en bytes, de los datos de la columna.</summary>
      <returns>Tamaño máximo, en bytes, de los datos de la columna. El valor predeterminado se deduce del valor del parámetro.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceColumn">
      <summary>Obtiene o establece el nombre de la columna de origen asignada al objeto <see cref="T:System.Data.DataSet" /> y utilizada para cargar o devolver la propiedad <see cref="P:System.Data.Common.DbParameter.Value" />.</summary>
      <returns>Nombre de la columna de origen asignada a <see cref="T:System.Data.DataSet" />. El valor predeterminado es una cadena vacía.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceColumnNullMapping">
      <summary>Obtiene o establece un valor que indica si la columna de origen admite valores NULL. Esto permite a <see cref="T:System.Data.Common.DbCommandBuilder" /> generar correctamente instrucciones Update para las columnas que aceptan valores NULL.</summary>
      <returns>
        <see langword="true" /> si la columna de origen acepta valores null; <see langword="false" /> en caso contrario.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceVersion">
      <summary>Obtiene o establece la enumeración <see cref="T:System.Data.DataRowVersion" /> que se va a utilizar a la hora de cargar <see cref="P:System.Data.Common.DbParameter.Value" />.</summary>
      <exception cref="T:System.ArgumentException">No se ha establecido la propiedad en uno de los valores de <see cref="T:System.Data.DataRowVersion" />.</exception>
      <returns>Uno de los valores de <see cref="T:System.Data.DataRowVersion" />. De manera predeterminada, es <see langword="Current" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision">
      <summary>Indica la precisión de los parámetros numéricos.</summary>
      <returns>El número máximo de dígitos usados para representar la propiedad <see langword="Value" /> de un objeto <see langword="Parameter" /> de proveedor de datos. El valor predeterminado es 0, que indica que un proveedor de datos establece la precisión para <see langword="Value" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.Data.IDbDataParameter.Scale" />.</summary>
      <returns>Número de posiciones decimales a las que se resuelve <see cref="P:System.Data.OleDb.OleDbParameter.Value" />. El valor predeterminado es 0.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Value">
      <summary>Obtiene o establece el valor del parámetro.</summary>
      <returns>
        <see cref="T:System.Object" /> que es el valor del parámetro. El valor predeterminado es null.</returns>
    </member>
    <member name="T:System.Data.Common.DbParameterCollection">
      <summary>Clase base para una colección de parámetros relevantes para un <see cref="T:System.Data.Common.DbCommand" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Add(System.Object)">
      <summary>Agrega el objeto <see cref="T:System.Data.Common.DbParameter" /> especificado al objeto <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
      <param name="value">
        <see cref="P:System.Data.Common.DbParameter.Value" /> de <see cref="T:System.Data.Common.DbParameter" /> que se agrega a la colección.</param>
      <returns>Índice del objeto <see cref="T:System.Data.Common.DbParameter" /> de la colección.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.AddRange(System.Array)">
      <summary>Agrega una matriz de elementos con los valores especificados a la <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
      <param name="values">Matriz de valores de tipo <see cref="T:System.Data.Common.DbParameter" /> que se va a agregar a la colección.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Clear">
      <summary>Quita todos los valores <see cref="T:System.Data.Common.DbParameter" /> de <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Contains(System.Object)">
      <summary>Determina si en la colección se encuentra un <see cref="T:System.Data.Common.DbParameter" /> con el <see cref="P:System.Data.Common.DbParameter.Value" /> especificado.</summary>
      <param name="value">
        <see cref="P:System.Data.Common.DbParameter.Value" /> del <see cref="T:System.Data.Common.DbParameter" /> que se va a buscar en la colección.</param>
      <returns>
        <see langword="true" /> si <see cref="T:System.Data.Common.DbParameter" /> está en la colección; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Contains(System.String)">
      <summary>Determina si en la colección se encuentra un <see cref="T:System.Data.Common.DbParameter" /> con el nombre especificado.</summary>
      <param name="value">Nombre de <see cref="T:System.Data.Common.DbParameter" /> que se va a buscar en la colección.</param>
      <returns>
        <see langword="true" /> si <see cref="T:System.Data.Common.DbParameter" /> está en la colección; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copia una matriz de elementos en la colección comenzando por el índice especificado.</summary>
      <param name="array">Matriz de elementos para copiar en la colección.</param>
      <param name="index">Índice de la colección en la que copiar los elementos.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetEnumerator">
      <summary>Expone el método <see cref="M:System.Collections.IEnumerable.GetEnumerator" />, que admite una iteración simple sobre una colección mediante un proveedor de datos de .NET Framework.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> que se puede utilizar para recorrer en iteración la colección.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetParameter(System.Int32)">
      <summary>Devuelve el objeto <see cref="T:System.Data.Common.DbParameter" /> en el índice especificado de la colección .</summary>
      <param name="index">Índice del elemento <see cref="T:System.Data.Common.DbParameter" /> de la colección.</param>
      <returns>Objeto <see cref="T:System.Data.Common.DbParameter" /> del índice especificado de la colección .</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetParameter(System.String)">
      <summary>Devuelve a <see cref="T:System.Data.Common.DbParameter" /> el objeto con el nombre especificado.</summary>
      <param name="parameterName">Nombre de <see cref="T:System.Data.Common.DbParameter" /> en la colección.</param>
      <returns>
        <see cref="T:System.Data.Common.DbParameter" /> el objeto con el nombre especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.IndexOf(System.Object)">
      <summary>Devuelve el índice del objeto <see cref="T:System.Data.Common.DbParameter" /> especificado.</summary>
      <param name="value">Objeto <see cref="T:System.Data.Common.DbParameter" /> de la colección.</param>
      <returns>Índice del objeto <see cref="T:System.Data.Common.DbParameter" /> especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.IndexOf(System.String)">
      <summary>Devuelve el índice del objeto <see cref="T:System.Data.Common.DbParameter" /> con el nombre especificado.</summary>
      <param name="parameterName">Nombre del objeto <see cref="T:System.Data.Common.DbParameter" /> de la colección.</param>
      <returns>Índice del objeto <see cref="T:System.Data.Common.DbParameter" /> con el nombre especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Insert(System.Int32,System.Object)">
      <summary>Inserta el índice especificado del objeto de <see cref="T:System.Data.Common.DbParameter" /> con el nombre especificado en la colección en el índice especificado.</summary>
      <param name="index">Índice en el que se va a insertar el objeto de <see cref="T:System.Data.Common.DbParameter" />.</param>
      <param name="value">El objeto <see cref="T:System.Data.Common.DbParameter" /> que se va a insertar en la colección.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Remove(System.Object)">
      <summary>Quita el objeto <see cref="T:System.Data.Common.DbParameter" /> especificado de la colección.</summary>
      <param name="value">Objeto <see cref="T:System.Data.Common.DbParameter" /> que se quita.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.RemoveAt(System.Int32)">
      <summary>Quita el objeto <see cref="T:System.Data.Common.DbParameter" /> en el especificado de la colección.</summary>
      <param name="index">Índice donde se encuentra el objeto <see cref="T:System.Data.Common.DbParameter" />.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.RemoveAt(System.String)">
      <summary>Quita el objeto <see cref="T:System.Data.Common.DbParameter" /> con el nombre especificado de la colección.</summary>
      <param name="parameterName">El nombre del objeto <see cref="T:System.Data.Common.DbParameter" /> que se va a quitar.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.SetParameter(System.Int32,System.Data.Common.DbParameter)">
      <summary>Establece el objeto <see cref="T:System.Data.Common.DbParameter" /> del índice especificado en un valor nuevo.</summary>
      <param name="index">Índice donde se encuentra el objeto <see cref="T:System.Data.Common.DbParameter" />.</param>
      <param name="value">Nuevo valor <see cref="T:System.Data.Common.DbParameter" />.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.SetParameter(System.String,System.Data.Common.DbParameter)">
      <summary>Establece el objeto <see cref="T:System.Data.Common.DbParameter" /> con el nombre especificado en un valor nuevo.</summary>
      <param name="parameterName">Nombre del objeto <see cref="T:System.Data.Common.DbParameter" /> de la colección.</param>
      <param name="value">Nuevo valor <see cref="T:System.Data.Common.DbParameter" />.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.System#Collections#IList#Add(System.Object)">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <param name="value">Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Add(System.Object)" />.</param>
      <returns>Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Add(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.System#Collections#IList#Contains(System.Object)">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <param name="value">Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Contains(System.Object)" />.</param>
      <returns>Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Contains(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <param name="value">Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</param>
      <returns>Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</param>
      <param name="value">Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.System#Collections#IList#Remove(System.Object)">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Remove(System.Object)" />.</param>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Count">
      <summary>Especifica el número de elementos de la colección.</summary>
      <returns>Número de elementos de la colección.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsFixedSize">
      <summary>Especifica si la colección tiene un tamaño fijo.</summary>
      <returns>
        <see langword="true" /> si la colección tiene un tamaño fijo; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsReadOnly">
      <summary>Especifica si la colección es de solo lectura.</summary>
      <returns>
        <see langword="true" /> si la colección es de solo lectura; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsSynchronized">
      <summary>Especifica si la colección está sincronizada.</summary>
      <returns>
        <see langword="true" /> si la colección está sincronizada; en caso contrario, devuelve <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Item(System.Int32)">
      <summary>Obtiene o establece la clase <see cref="T:System.Data.Common.DbParameter" /> en el índice especificado.</summary>
      <param name="index">Índice de base cero del parámetro.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice especificado no existe.</exception>
      <returns>Objeto <see cref="T:System.Data.Common.DbParameter" /> en el índice especificado.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Item(System.String)">
      <summary>Obtiene o establece el objeto <see cref="T:System.Data.Common.DbParameter" /> con el nombre especificado.</summary>
      <param name="parameterName">El nombre del parámetro.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice especificado no existe.</exception>
      <returns>Objeto <see cref="T:System.Data.Common.DbParameter" /> con el nombre especificado.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.SyncRoot">
      <summary>Especifica el <see cref="T:System.Object" /> que se puede usar para sincronizar el acceso a la colección.</summary>
      <returns>
        <see cref="T:System.Object" /> que se utilizará para sincronizar el acceso a <see cref="T:System.Data.Common.DbParameterCollection" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Obtiene o establece el elemento en el índice especificado.</summary>
      <param name="index">Índice de base cero del elemento que se va a obtener o establecer.</param>
      <returns>Elemento en el índice especificado.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.System#Data#IDataParameterCollection#Item(System.String)">
      <summary>Obtiene o establece el parámetro en el índice especificado.</summary>
      <param name="parameterName">Nombre del parámetro que se va a recuperar.</param>
      <returns>Un objeto <see cref="T:System.Object" /> en el índice especificado.</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderFactories">
      <summary>Representa un conjunto de métodos estáticos para crear una o varias instancias de las clases <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.Data.Common.DbConnection)">
      <summary>Devuelve una instancia de <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <param name="connection">Conexión que se usa.</param>
      <returns>Instancia de <see cref="T:System.Data.Common.DbProviderFactory" /> para una conexión especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.Data.DataRow)">
      <summary>Devuelve una instancia de <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <param name="providerRow">
        <see cref="T:System.Data.DataRow" /> que contiene la información de configuración del proveedor.</param>
      <returns>Instancia de <see cref="T:System.Data.Common.DbProviderFactory" /> para un objeto <see cref="T:System.Data.DataRow" /> especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.String)">
      <summary>Devuelve una instancia de <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <param name="providerInvariantName">Nombre invariable de un proveedor.</param>
      <returns>Instancia de <see cref="T:System.Data.Common.DbProviderFactory" /> para un nombre de proveedor especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactoryClasses">
      <summary>Devuelve un objeto <see cref="T:System.Data.DataTable" /> que contiene información sobre todos los proveedores instalados que implementan <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <returns>
        <see cref="T:System.Data.DataTable" /> que contiene objetos <see cref="T:System.Data.DataRow" /> que contienen los datos siguientes: 
 <list type="table"><listheader><term> Índice de columna</term><description> Nombre de columna</description><description> Descripción</description></listheader><item><term> 0</term><description> Nombre</description><description> Nombre legible para el proveedor de datos.</description></item><item><term> 1</term><description> Descripción</description><description> Descripción legible del proveedor de datos.</description></item><item><term> 2</term><description> InvariantName</description><description> Nombre que se puede utilizar para hacer referencia al proveedor de datos mediante programación.</description></item><item><term> 3</term><description> AssemblyQualifiedName</description><description> Nombre completo de la clase Factory, que contiene información suficiente para crear instancias del objeto.</description></item></list></returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetProviderInvariantNames">
      <summary>Devuelve los nombres de proveedor invariables de todas las instancias registradas de <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <returns>Nombres de proveedor invariables de todas las instancias registradas de <see cref="T:System.Data.Common.DbProviderFactory" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.Data.Common.DbProviderFactory)">
      <summary>Registra una instancia de <see cref="T:System.Data.Common.DbProviderFactory" /> con el nombre de proveedor invariable especificado.</summary>
      <param name="providerInvariantName">Nombre de proveedor invariable con el que se va a registrar el proveedor.</param>
      <param name="factory">Instancia del generador de proveedor que se va a registrar.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.String)">
      <summary>Registra un <see cref="T:System.Data.Common.DbProviderFactory" /> con el nombre calificado con el ensamblado con el nombre de proveedor invariable especificado.</summary>
      <param name="providerInvariantName">Nombre de proveedor invariable con el que se va a registrar el proveedor.</param>
      <param name="factoryTypeAssemblyQualifiedName">Nombre calificado con el ensamblado de un <see cref="T:System.Data.Common.DbProviderFactory" />.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.Type)">
      <summary>Registra un <see cref="T:System.Data.Common.DbProviderFactory" /> con el tipo dado con el nombre de proveedor invariable especificado.</summary>
      <param name="providerInvariantName">Nombre de proveedor invariable con el que se va a registrar el proveedor.</param>
      <param name="providerFactoryClass">Tipo que representa un <see cref="T:System.Data.Common.DbProviderFactory" />.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.TryGetFactory(System.String,System.Data.Common.DbProviderFactory@)">
      <summary>Intenta obtener el <see cref="T:System.Data.Common.DbProviderFactory" /> registrado con el nombre de proveedor invariable especificado.</summary>
      <param name="providerInvariantName">Nombre de proveedor invariable que se va a buscar.</param>
      <param name="factory">Cuando este método termina de ejecutarse, contiene el <see cref="T:System.Data.Common.DbProviderFactory" /> asociado al nombre de proveedor invariable especificado, si se encuentra; de lo contrario, <see langword="null" />. Este parámetro se pasa sin inicializar.</param>
      <returns>
        <see langword="true" /> si hay un proveedor registrado con el nombre de proveedor invariable especificado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.UnregisterFactory(System.String)">
      <summary>Quita un registro de <see cref="T:System.Data.Common.DbProviderFactory" /> del nombre de proveedor invariable especificado.</summary>
      <param name="providerInvariantName">Nombre de proveedor invariable del registro que se va a quitar.</param>
      <returns>
        <see langword="true" /> si el registro se encuentra y se quita correctamente; de lo contrario, <see langword="false" />. Este método devuelve <see langword="false" /> si no se encuentra un registro de <paramref name="providerInvariantName" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderFactory">
      <summary>Representa un conjunto de métodos para crear instancias de la implementación de un proveedor de las clases de origen de datos.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.#ctor">
      <summary>Inicializa una nueva instancia de una clase <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateCommand">
      <summary>Devuelve una nueva instancia de la clase del proveedor que implementa la clase <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns>Nueva instancia de <see cref="T:System.Data.Common.DbCommand" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateCommandBuilder">
      <summary>Devuelve una nueva instancia de la clase del proveedor que implementa la clase <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns>Nueva instancia de <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateConnection">
      <summary>Devuelve una nueva instancia de la clase del proveedor que implementa la clase <see cref="T:System.Data.Common.DbConnection" />.</summary>
      <returns>Nueva instancia de <see cref="T:System.Data.Common.DbConnection" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateConnectionStringBuilder">
      <summary>Devuelve una nueva instancia de la clase del proveedor que implementa la clase <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns>Nueva instancia de <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateDataAdapter">
      <summary>Devuelve una nueva instancia de la clase del proveedor que implementa la clase <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <returns>Nueva instancia de <see cref="T:System.Data.Common.DbDataAdapter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateDataSourceEnumerator">
      <summary>Devuelve una nueva instancia de la clase del proveedor que implementa la clase <see cref="T:System.Data.Common.DbDataSourceEnumerator" />.</summary>
      <returns>Nueva instancia de <see cref="T:System.Data.Common.DbDataSourceEnumerator" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateParameter">
      <summary>Devuelve una nueva instancia de la clase del proveedor que implementa la clase <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns>Nueva instancia de <see cref="T:System.Data.Common.DbParameter" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateCommandBuilder">
      <summary>Obtiene un valor que indica si esta instancia de <see cref="T:System.Data.Common.DbProviderFactory" /> admite la clase <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns>
        <see langword="true" /> Si esta instancia admite la <see cref="T:System.Data.Common.DbCommandBuilder" /> clase; de lo contrario, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateDataAdapter">
      <summary>Obtiene un valor que indica si esta instancia de <see cref="T:System.Data.Common.DbProviderFactory" /> admite la clase <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <returns>
        <see langword="true" /> Si la instancia admite la <see cref="T:System.Data.Common.DbDataAdapter" /> clase; de lo contrario, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateDataSourceEnumerator">
      <summary>Obtiene un valor que indica si esta instancia de <see cref="T:System.Data.Common.DbProviderFactory" /> admite la clase <see cref="T:System.Data.Common.DbDataSourceEnumerator" />.</summary>
      <returns>
        <see langword="true" /> Si la instancia admite la <see cref="T:System.Data.Common.DbDataSourceEnumerator" /> clase; de lo contrario, <see langword="false" /> .</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderSpecificTypePropertyAttribute">
      <summary>Identifica qué propiedad específica del proveedor en las clases de parámetro fuertemente tipadas será utilizada cuando se establezca un tipo específico del proveedor.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderSpecificTypePropertyAttribute.#ctor(System.Boolean)">
      <summary>Inicializa una nueva instancia de una clase <see cref="T:System.Data.Common.DbProviderSpecificTypePropertyAttribute" />.</summary>
      <param name="isProviderSpecificTypeProperty">Especifica si esta propiedad es una propiedad específica del proveedor.</param>
    </member>
    <member name="P:System.Data.Common.DbProviderSpecificTypePropertyAttribute.IsProviderSpecificTypeProperty">
      <summary>Indica si la propiedad con atributos es un tipo específico del proveedor.</summary>
      <returns>
        <see langword="true" /> si la propiedad a la que se aplica este atributo es una propiedad con tipo específico del proveedor; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbTransaction">
      <summary>Define el comportamiento básico de las transacciones de base de datos y proporciona una clase base para las transacciones específicas de base de datos.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.#ctor">
      <summary>Inicializa un nuevo objeto <see cref="T:System.Data.Common.DbTransaction" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Commit">
      <summary>Cuando se invalida en una clase derivada, confirma la transacción de base de datos.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.CommitAsync(System.Threading.CancellationToken)">
      <summary>Confirma de forma asincrónica la transacción de base de datos.</summary>
      <param name="cancellationToken">Token opcional para cancelar la operación asincrónica. El valor predeterminado es <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Tarea <see cref="T:System.Threading.Tasks.Task" /> que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Dispose">
      <summary>Libera los recursos no administrados que usa <see cref="T:System.Data.Common.DbTransaction" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados que usa <see cref="T:System.Data.Common.DbTransaction" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing">Si es <see langword="true" />, este método libera todos los recursos que tenga cualquier objeto administrado al que haga referencia <see cref="T:System.Data.Common.DbTransaction" />.</param>
    </member>
    <member name="M:System.Data.Common.DbTransaction.DisposeAsync">
      <summary>Desecha de forma asincrónica el objeto de transacción.</summary>
      <returns>Tarea <see cref="T:System.Threading.Tasks.ValueTask" /> que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Release(System.String)">
      <summary>Destruye un punto de retorno anteriormente definido en la transacción actual. Esto permite que el sistema reclame algunos recursos antes de que finalice la transacción.</summary>
      <param name="savepointName">El nombre del punto de retorno que se va a liberar.</param>
    </member>
    <member name="M:System.Data.Common.DbTransaction.ReleaseAsync(System.String,System.Threading.CancellationToken)">
      <summary>Destruye un punto de retorno anteriormente definido en la transacción actual. Esto permite que el sistema reclame algunos recursos antes de que finalice la transacción.</summary>
      <param name="savepointName">El nombre del punto de retorno que se va a liberar.</param>
      <param name="cancellationToken">Token opcional para cancelar la operación asincrónica. El valor predeterminado es <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Tarea <see cref="T:System.Threading.Tasks.Task" /> que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Rollback">
      <summary>Cuando se invalida en una clase derivada, revierte una transacción desde un estado pendiente.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Rollback(System.String)">
      <summary>Revierte todos los comandos que se ejecutaron después de que se estableció el punto de retorno.</summary>
      <param name="savepointName">El nombre del punto de retorno que se va a revertir.</param>
    </member>
    <member name="M:System.Data.Common.DbTransaction.RollbackAsync(System.String,System.Threading.CancellationToken)">
      <summary>Revierte todos los comandos que se ejecutaron después de que se estableció el punto de retorno.</summary>
      <param name="savepointName">El nombre del punto de retorno que se va a revertir.</param>
      <param name="cancellationToken">Token opcional para cancelar la operación asincrónica. El valor predeterminado es <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Tarea <see cref="T:System.Threading.Tasks.Task" /> que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.RollbackAsync(System.Threading.CancellationToken)">
      <summary>Revierte de forma asincrónica una transacción desde un estado pendiente.</summary>
      <param name="cancellationToken">Token opcional para cancelar la operación asincrónica. El valor predeterminado es <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Save(System.String)">
      <summary>Crea un punto de retorno en la transacción. Esto permite que se reviertan todos los comandos que se ejecutan después de que se estableció el punto de retorno, lo que restaura el estado de la transacción al estado que tenía en el momento del punto de retorno.</summary>
      <param name="savepointName">El nombre del punto de retorno que se va a crear.</param>
    </member>
    <member name="M:System.Data.Common.DbTransaction.SaveAsync(System.String,System.Threading.CancellationToken)">
      <summary>Crea un punto de retorno en la transacción. Esto permite que se reviertan todos los comandos que se ejecutan después de que se estableció el punto de retorno, lo que restaura el estado de la transacción al estado que tenía en el momento del punto de retorno.</summary>
      <param name="savepointName">El nombre del punto de retorno que se va a crear.</param>
      <param name="cancellationToken">Token opcional para cancelar la operación asincrónica. El valor predeterminado es <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Tarea <see cref="T:System.Threading.Tasks.Task" /> que representa la operación asincrónica.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.Connection">
      <summary>Especifica el objeto <see cref="T:System.Data.Common.DbConnection" /> asociado a la transacción.</summary>
      <returns>Objeto <see cref="T:System.Data.Common.DbConnection" /> asociado a la transacción.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.DbConnection">
      <summary>Cuando se invalida en una clase derivada, obtiene el objeto <see cref="T:System.Data.Common.DbConnection" /> asociado a la transacción.</summary>
      <returns>Objeto <see cref="T:System.Data.Common.DbConnection" /> asociado a la transacción.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.IsolationLevel">
      <summary>Cuando se invalida en una clase derivada, obtiene el nivel de aislamiento de esta transacción.</summary>
      <returns>Nivel de aislamiento de esta transacción.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.SupportsSavepoints">
      <summary>Obtiene un valor que indica si esta instancia de <see cref="T:System.Data.Common.DbTransaction" /> admite los puntos de retorno de la base de datos.
Si <see langword="false" />, se espera que los métodos <see cref="M:System.Data.Common.DbTransaction.SaveAsync(System.String,System.Threading.CancellationToken)" />, <see cref="M:System.Data.Common.DbTransaction.RollbackAsync(System.String,System.Threading.CancellationToken)" /> y <see cref="M:System.Data.Common.DbTransaction.ReleaseAsync(System.String,System.Threading.CancellationToken)" />, así como sus contrapartes sincrónicas, generen <see cref="T:System.NotSupportedException" />.</summary>
      <returns>
        <see langword="true" /> Si esta <see cref="T:System.Data.Common.DbTransaction" /> instancia admite puntos de retorno de base de datos; de lo contrario, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.System#Data#IDbTransaction#Connection">
      <summary>Obtiene el objeto <see cref="T:System.Data.Common.DbConnection" /> asociado a la transacción o una referencia nula si la transacción ya no es válida.</summary>
      <returns>Objeto <see cref="T:System.Data.Common.DbConnection" /> asociado a la transacción.</returns>
    </member>
    <member name="T:System.Data.Common.GroupByBehavior">
      <summary>Especifica la relación entre las columnas de una cláusula GROUP BY y las columnas no agregadas de la lista de selección de una instrucción SELECT.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.ExactMatch">
      <summary>La cláusula GROUP BY tiene que contener todas las columnas no agregadas de la lista seleccionada, y no debe incluir otras columnas que no estén en dicha lista seleccionada.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.MustContainAll">
      <summary>La cláusula GROUP BY tiene que contener todas las columnas no agregadas de la lista seleccionada, aunque puede incluir otras columnas que no estén en dicha lista seleccionada.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.NotSupported">
      <summary>No se admite la cláusula GROUP BY.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.Unknown">
      <summary>Se desconoce la compatibilidad con la cláusula GROUP BY.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.Unrelated">
      <summary>No hay ninguna relación entre las columnas incluidas en la cláusula GROUP BY y las columnas no agregadas de la lista SELECT. Puede agrupar por cualquier columna.</summary>
    </member>
    <member name="T:System.Data.Common.IDbColumnSchemaGenerator">
      <summary>Genera un esquema de la columna.</summary>
    </member>
    <member name="M:System.Data.Common.IDbColumnSchemaGenerator.GetColumnSchema">
      <summary>Obtiene el esquema de columna (colección <see cref="T:System.Data.Common.DbColumn" />).</summary>
      <returns>Esquema de columna (colección <see cref="T:System.Data.Common.DbColumn" />).</returns>
    </member>
    <member name="T:System.Data.Common.IdentifierCase">
      <summary>Especifica cómo el origen de datos trata los identificadores cuando se realizan búsquedas en el catálogo del sistema.</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Insensitive">
      <summary>El origen de datos no tiene en cuenta las mayúsculas o minúsculas del identificador cuando se realizan búsquedas en el catálogo del sistema. Los identificadores "ab" y "AB" coincidirán.</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Sensitive">
      <summary>El origen de datos tiene en cuenta las mayúsculas o minúsculas del identificador cuando se realizan búsquedas en el catálogo del sistema. Los identificadores "ab" y "AB" no coincidirán.</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Unknown">
      <summary>El origen de datos tiene reglas ambiguas relativas al uso de mayúsculas y minúsculas en el identificador y no puede distinguir esta información.</summary>
    </member>
    <member name="T:System.Data.Common.RowUpdatedEventArgs">
      <summary>Proporciona datos para el evento <see langword="RowUpdated" /> de un proveedor de datos de .NET Framework.</summary>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.RowUpdatedEventArgs" />.</summary>
      <param name="dataRow">Objeto <see cref="T:System.Data.DataRow" /> que se envía mediante un método <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="command">
        <see cref="T:System.Data.IDbCommand" /> que se ejecuta cuando se llama a <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType">Tipo de instrucción SQL ejecutada.</param>
      <param name="tableMapping">Objeto <see cref="T:System.Data.Common.DataTableMapping" /> que se envía mediante un método <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.CopyToRows(System.Data.DataRow[])">
      <summary>Copia referencias a las filas modificadas en la matriz proporcionada.</summary>
      <param name="array">Matriz de <see cref="T:System.Data.DataRow" /> en la que se va a copiar.</param>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.CopyToRows(System.Data.DataRow[],System.Int32)">
      <summary>Copia referencias a las filas modificadas en la matriz proporcionada.</summary>
      <param name="array">Matriz de <see cref="T:System.Data.DataRow" /> en la que se va a copiar.</param>
      <param name="arrayIndex">Índice de la matriz donde se va a comenzar a copiar.</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Command">
      <summary>Obtiene el objeto <see cref="T:System.Data.IDbCommand" /> que se ejecuta cuando se llama a <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>
        <see cref="T:System.Data.IDbCommand" /> que se ejecuta cuando se llama a <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Errors">
      <summary>Obtiene todos los errores generados por el proveedor de datos de .NET Framework al ejecutar la propiedad <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</summary>
      <returns>Errores generados por el proveedor de datos de .NET Framework al ejecutar la propiedad <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.RecordsAffected">
      <summary>Obtiene el número de filas cambiadas, insertadas o eliminadas mediante la ejecución de la instrucción SQL.</summary>
      <returns>El número de filas cambiadas, insertadas o eliminadas; 0 si no hay filas afectadas o instrucción dio error; -1 para instrucciones SELECT.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Row">
      <summary>Obtiene la clase <see cref="T:System.Data.DataRow" /> que se envió a través de un método <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>Objeto <see cref="T:System.Data.DataRow" /> que se envía mediante un método <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.RowCount">
      <summary>Obtiene el número de filas procesadas en un lote de registros actualizados.</summary>
      <returns>
        <see langword="int" /> que especifica el número de filas procesadas.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.StatementType">
      <summary>Obtiene el tipo de instrucción SQL ejecutada.</summary>
      <returns>Tipo de instrucción SQL ejecutada.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Status">
      <summary>Obtiene <see cref="T:System.Data.UpdateStatus" /> de la propiedad <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</summary>
      <returns>Uno de los valores de <see cref="T:System.Data.UpdateStatus" />. De manera predeterminada, es <see langword="Continue" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.TableMapping">
      <summary>Obtiene la clase <see cref="T:System.Data.Common.DataTableMapping" /> que se envió a través de un método <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>Objeto <see cref="T:System.Data.Common.DataTableMapping" /> que se envía mediante un método <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="T:System.Data.Common.RowUpdatingEventArgs">
      <summary>Proporciona los datos para el evento RowUpdating de un proveedor de datos de .NET Framework.</summary>
    </member>
    <member name="M:System.Data.Common.RowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.RowUpdatingEventArgs" />.</summary>
      <param name="dataRow">
        <see cref="T:System.Data.DataRow" /> para <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="command">
        <see cref="T:System.Data.IDbCommand" /> que se va a ejecutar al llamar el método <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType">Tipo de instrucción SQL que se va a ejecutar.</param>
      <param name="tableMapping">
        <see cref="T:System.Data.Common.DataTableMapping" /> que se va a enviar mediante <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.BaseCommand">
      <summary>Obtiene o establece el objeto <see cref="T:System.Data.IDbCommand" /> para una instancia de esta clase.</summary>
      <returns>
        <see cref="T:System.Data.IDbCommand" /> que se va a ejecutar durante <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Command">
      <summary>Obtiene <see cref="T:System.Data.IDbCommand" /> que se va a ejecutar durante la operación <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>
        <see cref="T:System.Data.IDbCommand" /> que se va a ejecutar durante <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Errors">
      <summary>Obtiene todos los errores generados por el proveedor de datos de .NET Framework al ejecutar la propiedad <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</summary>
      <returns>Errores generados por el proveedor de datos .NET Framework al ejecutar la propiedad <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Row">
      <summary>Obtiene el objeto <see cref="T:System.Data.DataRow" /> que se enviará al servidor como parte de una operación de inserción, actualización, o eliminación.</summary>
      <returns>
        <see cref="T:System.Data.DataRow" /> que se va a enviar mediante <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.StatementType">
      <summary>Obtiene el tipo de instrucción SQL que se va a ejecutar.</summary>
      <returns>Tipo de instrucción SQL que se va a ejecutar.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Status">
      <summary>Obtiene o establece <see cref="T:System.Data.UpdateStatus" /> de la propiedad <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</summary>
      <returns>Uno de los valores de <see cref="T:System.Data.UpdateStatus" />. De manera predeterminada, es <see langword="Continue" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.TableMapping">
      <summary>Obtiene <see cref="T:System.Data.Common.DataTableMapping" /> que se va a enviar mediante <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>
        <see cref="T:System.Data.Common.DataTableMapping" /> que se va a enviar mediante <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="T:System.Data.Common.SchemaTableColumn">
      <summary>Describe los metadatos de columna del esquema para una tabla de base de datos.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.AllowDBNull">
      <summary>Especifica si se permite el valor <see langword="DBNull" />.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseColumnName">
      <summary>Especifica el nombre de la columna en la tabla de esquema.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseSchemaName">
      <summary>Especifica el nombre del esquema en la tabla de esquema.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseTableName">
      <summary>Especifica el nombre de la tabla en la tabla de esquema.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnName">
      <summary>Especifica el nombre de la columna en la tabla de esquema.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnOrdinal">
      <summary>Especifica el ordinal de la columna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnSize">
      <summary>Especifica el tamaño de la columna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.DataType">
      <summary>Especifica el tipo de datos que hay en la columna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsAliased">
      <summary>Especifica si esta columna tiene alias.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsExpression">
      <summary>Especifica si esta columna es una expresión.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsKey">
      <summary>Especifica si esta columna es una clave para la tabla.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsLong">
      <summary>Especifica si esta columna contiene datos grandes.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsUnique">
      <summary>Especifica si una restricción UNIQUE se aplica a esta columna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NonVersionedProviderType">
      <summary>Concreta el tipo de datos específicos de proveedor y sin versión de la columna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NumericPrecision">
      <summary>Especifica la precisión de los datos de la columna, si los datos son numéricos.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NumericScale">
      <summary>Especifica la escala de los datos de la columna, si los datos son numéricos.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ProviderType">
      <summary>Indica el tipo de datos específico del proveedor de la columna.</summary>
    </member>
    <member name="T:System.Data.Common.SchemaTableOptionalColumn">
      <summary>Describe los metadatos de columna opcionales del esquema para una tabla de base de datos.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.AutoIncrementSeed">
      <summary>Especifica el valor en el que se asigna la serie para las nuevas columnas de identidad.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.AutoIncrementStep">
      <summary>Especifica el incremento entre los valores de la columna de identidad.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseCatalogName">
      <summary>Nombre del catálogo asociado a los resultados de la consulta más reciente.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseColumnNamespace">
      <summary>Espacio de nombres de la columna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseServerName">
      <summary>Nombre del servidor de la columna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseTableNamespace">
      <summary>Espacio de nombres para la tabla que contiene la columna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.ColumnMapping">
      <summary>Especifica la asignación para la columna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.DefaultValue">
      <summary>Valor predeterminado para la columna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.Expression">
      <summary>Expresión utilizada para calcular la columna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsAutoIncrement">
      <summary>Especifica si los valores de la columna se incrementan automáticamente.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsHidden">
      <summary>Especifica si esta columna está oculta.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsReadOnly">
      <summary>Indica si la columna es de sólo lectura.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsRowVersion">
      <summary>Especifica si esta columna contiene información de la versión de fila.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.ProviderSpecificDataType">
      <summary>Indica el tipo de datos específico del proveedor de la columna.</summary>
    </member>
    <member name="T:System.Data.Common.SupportedJoinOperators">
      <summary>Especifica qué tipos de instrucciones de combinación Transact-SQL admite el origen de datos.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.FullOuter">
      <summary>El origen de datos admite combinaciones externas completas.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.Inner">
      <summary>El origen de datos admite combinaciones internas.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.LeftOuter">
      <summary>El origen de datos admite la combinación externa izquierda.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.None">
      <summary>El origen de datos no admite consultas de combinación.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.RightOuter">
      <summary>El origen de datos admite la combinación externa derecha.</summary>
    </member>
    <member name="T:System.Data.ConflictOption">
      <summary>Especifica cómo se van a detectar y resolver los cambios contradictorios del origen de datos.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.CompareAllSearchableValues">
      <summary>En la cláusula WHERE de las instrucciones para actualizar y eliminar se incluirán todas las columnas de la tabla en las que se pueda buscar. Es equivalente a especificar <see langword="CompareAllValuesUpdate" /> | <see langword="CompareAllValuesDelete" />.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.CompareRowVersion">
      <summary>Si en la tabla existe una o varias columnas Timestamp, se utilizarán en la cláusula WHERE de todas las instrucciones de actualización que se hayan generado. Es equivalente a especificar <see langword="CompareRowVersionUpdate" /> | <see langword="CompareRowVersionDelete" />.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.OverwriteChanges">
      <summary>En la cláusula WHERE de todas las instrucciones para actualizar y eliminar sólo se incluirán las columnas con <see cref="P:System.Data.DataTable.PrimaryKey" />. Si no se ha definido ninguna propiedad <see cref="P:System.Data.DataTable.PrimaryKey" />, en la cláusula WHERE se incluirán todas las columnas en las que se pueda buscar. Es equivalente a <see langword="OverwriteChangesUpdate" /> | <see langword="OverwriteChangesDelete" />.</summary>
    </member>
    <member name="T:System.Data.ConnectionState">
      <summary>Describe el estado actual de la conexión a un origen de datos.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Broken">
      <summary>Se ha perdido la conexión con el origen de datos. Esto sólo puede ocurrir tras abrir la conexión. Una conexión en este estado se puede cerrar y volver a abrir. Este valor se reserva para versiones futuras del producto.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Closed">
      <summary>La conexión está cerrada.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Connecting">
      <summary>El objeto de conexión está conectando con el origen de datos.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Executing">
      <summary>El objeto de conexión está ejecutando un comando. Este valor se reserva para versiones futuras del producto.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Fetching">
      <summary>El objeto de conexión está recuperando datos. Este valor se reserva para versiones futuras del producto.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Open">
      <summary>La conexión está abierta.</summary>
    </member>
    <member name="T:System.Data.Constraint">
      <summary>Representa una restricción que se puede forzar en uno o más objetos <see cref="T:System.Data.DataColumn" />.</summary>
    </member>
    <member name="M:System.Data.Constraint.CheckStateForProperty">
      <summary>Obtiene el objeto <see cref="T:System.Data.DataSet" /> al que pertenece esta restricción.</summary>
    </member>
    <member name="M:System.Data.Constraint.SetDataSet(System.Data.DataSet)">
      <summary>Establece el objeto <see cref="T:System.Data.DataSet" /> de la restricción.</summary>
      <param name="dataSet">Objeto <see cref="T:System.Data.DataSet" /> al que va a pertenecer esta restricción.</param>
    </member>
    <member name="M:System.Data.Constraint.ToString">
      <summary>Obtiene el <see cref="P:System.Data.Constraint.ConstraintName" />, si existe, como una cadena.</summary>
      <returns>Valor de cadena de <see cref="P:System.Data.Constraint.ConstraintName" />.</returns>
    </member>
    <member name="P:System.Data.Constraint._DataSet">
      <summary>Obtiene el objeto <see cref="T:System.Data.DataSet" /> al que pertenece esta restricción.</summary>
      <returns>Objeto <see cref="T:System.Data.DataSet" /> al que pertenece la restricción.</returns>
    </member>
    <member name="P:System.Data.Constraint.ConstraintName">
      <summary>Nombre de una restricción en el <see cref="T:System.Data.ConstraintCollection" />.</summary>
      <exception cref="T:System.ArgumentException">El nombre de <see cref="T:System.Data.Constraint" /> es un valor nulo o una cadena vacía.</exception>
      <exception cref="T:System.Data.DuplicateNameException">
        <see cref="T:System.Data.ConstraintCollection" /> ya contiene un <see cref="T:System.Data.Constraint" /> con el mismo nombre (la comparación no distingue entre mayúsculas y minúsculas).</exception>
      <returns>Nombre del objeto <see cref="T:System.Data.Constraint" />.</returns>
    </member>
    <member name="P:System.Data.Constraint.ExtendedProperties">
      <summary>Obtiene la colección de propiedades de restricción definidas por el usuario.</summary>
      <returns>
        <see cref="T:System.Data.PropertyCollection" /> de información personalizada.</returns>
    </member>
    <member name="P:System.Data.Constraint.Table">
      <summary>Obtiene el <see cref="T:System.Data.DataTable" /> al que se aplica la restricción.</summary>
      <returns>
        <see cref="T:System.Data.DataTable" /> al que se aplica la restricción.</returns>
    </member>
    <member name="T:System.Data.ConstraintCollection">
      <summary>Representa una colección de restricciones para una tabla <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="E:System.Data.ConstraintCollection.CollectionChanged">
      <summary>Se produce siempre que cambia la colección <see cref="T:System.Data.ConstraintCollection" /> porque se están agregando o quitando objetos <see cref="T:System.Data.Constraint" />.</summary>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.Data.Constraint)">
      <summary>Agrega a la colección el objeto <see cref="T:System.Data.Constraint" /> especificado.</summary>
      <param name="constraint">
        <see langword="Constraint" /> que se va a agregar.</param>
      <exception cref="T:System.ArgumentNullException">El argumento <paramref name="constraint" /> es null.</exception>
      <exception cref="T:System.ArgumentException">La restricción ya pertenece a esta colección o pertenece a otra colección.</exception>
      <exception cref="T:System.Data.DuplicateNameException">La colección ya tiene una restricción con el mismo nombre. (La comparación no distingue entre mayúsculas y minúsculas).</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)">
      <summary>Construye una nueva restricción <see cref="T:System.Data.UniqueConstraint" /> con el nombre especificado, el objeto <see cref="T:System.Data.DataColumn" /> y un valor que indica si la columna es una clave principal, y la agrega a la colección.</summary>
      <param name="name">Nombre del objeto <see langword="UniqueConstraint" />.</param>
      <param name="column">Columna <see cref="T:System.Data.DataColumn" /> a la que se aplica la restricción.</param>
      <param name="primaryKey">Especifica si la columna debe ser la clave principal. Si es <see langword="true" />, la columna será una columna de clave principal.</param>
      <exception cref="T:System.ArgumentException">La restricción ya pertenece a esta colección.  
  
 -O bien-  
  
 La restricción pertenece a otra colección.</exception>
      <exception cref="T:System.Data.DuplicateNameException">La colección ya tiene una restricción con el nombre especificado. (La comparación no distingue entre mayúsculas y minúsculas).</exception>
      <returns>Un nuevo objeto <see langword="UniqueConstraint" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Construye una nueva restricción <see cref="T:System.Data.ForeignKeyConstraint" /> con el nombre, columna primaria y columna secundaria especificados, y agrega la restricción a la colección.</summary>
      <param name="name">Nombre del objeto <see cref="T:System.Data.ForeignKeyConstraint" />.</param>
      <param name="primaryKeyColumn">Columna <see cref="T:System.Data.DataColumn" /> de clave principal o primaria.</param>
      <param name="foreignKeyColumn">Columna <see cref="T:System.Data.DataColumn" /> de clave externa o secundaria.</param>
      <returns>Un nuevo objeto <see langword="ForeignKeyConstraint" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)">
      <summary>Crea una nueva restricción <see cref="T:System.Data.UniqueConstraint" /> con el nombre especificado, la matriz de objetos <see cref="T:System.Data.DataColumn" /> y un valor que indica si la columna es una clave principal, y la agrega a la colección.</summary>
      <param name="name">Nombre del objeto <see cref="T:System.Data.UniqueConstraint" />.</param>
      <param name="columns">Matriz de objetos <see cref="T:System.Data.DataColumn" /> a la que se aplica la restricción.</param>
      <param name="primaryKey">Especifica si la columna debe ser la clave principal. Si es <see langword="true" />, la columna será una columna de clave principal.</param>
      <exception cref="T:System.ArgumentException">La restricción ya pertenece a esta colección.  
  
 -O bien-  
  
 La restricción pertenece a otra colección.</exception>
      <exception cref="T:System.Data.DuplicateNameException">La colección ya tiene una restricción con el nombre especificado. (La comparación no distingue entre mayúsculas y minúsculas).</exception>
      <returns>Un nuevo objeto <see langword="UniqueConstraint" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Construye una nueva restricción <see cref="T:System.Data.ForeignKeyConstraint" /> con las matrices de columnas primarias y secundarias especificadas y agrega la restricción a la colección.</summary>
      <param name="name">Nombre del objeto <see cref="T:System.Data.ForeignKeyConstraint" />.</param>
      <param name="primaryKeyColumns">Matriz de objetos <see cref="T:System.Data.DataColumn" /> que son las columnas de clave primaria o principal.</param>
      <param name="foreignKeyColumns">Matriz de objetos <see cref="T:System.Data.DataColumn" /> que son las columnas de clave externa o secundaria.</param>
      <returns>Un nuevo objeto <see langword="ForeignKeyConstraint" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])">
      <summary>Copia los elementos de la matriz <see cref="T:System.Data.ConstraintCollection" /> especificada al final de la colección.</summary>
      <param name="constraints">Matriz de objetos <see cref="T:System.Data.ConstraintCollection" /> que se agregará a la colección.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)">
      <summary>Indica si una restricción <see cref="T:System.Data.Constraint" /> se puede quitar.</summary>
      <param name="constraint">Restricción <see cref="T:System.Data.Constraint" /> que se va a comprobar para quitarla de la colección.</param>
      <returns>
        <see langword="true" /> si se puede quitar <see cref="T:System.Data.Constraint" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Clear">
      <summary>Borra cualquier objeto <see cref="T:System.Data.Constraint" /> de la colección.</summary>
    </member>
    <member name="M:System.Data.ConstraintCollection.Contains(System.String)">
      <summary>Indica si existe en la colección el objeto <see cref="T:System.Data.Constraint" /> especificado por nombre.</summary>
      <param name="name">Nombre <see cref="P:System.Data.Constraint.ConstraintName" /> de la restricción.</param>
      <returns>
        <see langword="true" /> si la colección contiene la restricción especificada; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)">
      <summary>Copia los objetos de la colección en una instancia de <see cref="T:System.Array" /> unidimensional, comenzando a partir del índice especificado.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensional que constituye el destino de los valores copiados de la colección.</param>
      <param name="index">Índice de la matriz donde va a comenzar la inserción.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)">
      <summary>Obtiene el índice del objeto <see cref="T:System.Data.Constraint" /> especificado.</summary>
      <param name="constraint">
        <see cref="T:System.Data.Constraint" /> que se va a buscar.</param>
      <returns>Índice de base cero de la restricción <see cref="T:System.Data.Constraint" /> si se encuentra en la colección; en caso contrario, -1.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.IndexOf(System.String)">
      <summary>Obtiene el índice del objeto <see cref="T:System.Data.Constraint" /> especificado por su nombre.</summary>
      <param name="constraintName">Nombre del objeto <see cref="T:System.Data.Constraint" />.</param>
      <returns>Índice de la restricción <see cref="T:System.Data.Constraint" /> si se encuentra en la colección; en caso contrario, -1.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)">
      <summary>Quita el objeto <see cref="T:System.Data.Constraint" /> especificado de la colección.</summary>
      <param name="constraint">
        <see cref="T:System.Data.Constraint" /> que se va a quitar.</param>
      <exception cref="T:System.ArgumentNullException">El argumento <paramref name="constraint" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La restricción no pertenece a la colección.</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Remove(System.String)">
      <summary>Quita el objeto <see cref="T:System.Data.Constraint" /> especificado por nombre de la colección.</summary>
      <param name="name">Nombre de la clase <see cref="T:System.Data.Constraint" /> que se va a quitar.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.RemoveAt(System.Int32)">
      <summary>Quita el objeto <see cref="T:System.Data.Constraint" /> del índice especificado de la colección.</summary>
      <param name="index">Índice del objeto <see cref="T:System.Data.Constraint" /> que se va a quitar.</param>
      <exception cref="T:System.IndexOutOfRangeException">La colección no tiene ninguna restricción en este índice.</exception>
    </member>
    <member name="P:System.Data.ConstraintCollection.Item(System.Int32)">
      <summary>Obtiene el objeto <see cref="T:System.Data.Constraint" /> de la colección en el índice especificado.</summary>
      <param name="index">Índice de la restricción que se va a devolver.</param>
      <exception cref="T:System.IndexOutOfRangeException">El valor de índice es mayor que el número de elementos de la colección.</exception>
      <returns>Objeto <see cref="T:System.Data.Constraint" /> en el índice especificado.</returns>
    </member>
    <member name="P:System.Data.ConstraintCollection.Item(System.String)">
      <summary>Obtiene el objeto <see cref="T:System.Data.Constraint" /> de la colección con el nombre especificado.</summary>
      <param name="name">
        <see cref="P:System.Data.Constraint.ConstraintName" /> de la restricción que se va a devolver.</param>
      <returns>
        <see cref="T:System.Data.Constraint" /> con el nombre especificado; en caso contrario, es un valor nulo si no existe la restricción <see cref="T:System.Data.Constraint" />.</returns>
    </member>
    <member name="T:System.Data.ConstraintException">
      <summary>Representa la excepción que se produce cuando se intenta realizar una acción que infringe una restricción.</summary>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.ConstraintException" />. Este es el constructor sin parámetros.</summary>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.ConstraintException" /> mediante la serialización y el contexto de flujo especificados.</summary>
      <param name="info">Datos necesarios para serializar o deserializar un objeto.</param>
      <param name="context">Descripción del origen y el destino de la secuencia serializada especificada.</param>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.ConstraintException" /> con la cadena especificada.</summary>
      <param name="s">Cadena que se muestra cuando se produce la excepción.</param>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.ConstraintException" /> con la cadena y la excepción interna especificadas.</summary>
      <param name="message">Cadena que se muestra cuando se produce la excepción.</param>
      <param name="innerException">Obtiene la instancia <see langword="Exception" /> que produjo la excepción actual.</param>
    </member>
    <member name="T:System.Data.DataColumn">
      <summary>Representa el esquema de una columna en una <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataColumn.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataColumn" /> como cadena de tipo.</summary>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataColumn" />, como cadena de tipo, utilizando el nombre de columna especificado.</summary>
      <param name="columnName">Cadena que representa el nombre de la columna que se va a crear. Si se establece en <see langword="null" /> o en una cadena vacía (""), cuando se agregue a la colección de columnas se especificará un nombre predeterminado.</param>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataColumn" /> con el nombre de columna y el tipo de datos especificados.</summary>
      <param name="columnName">Cadena que representa el nombre de la columna que se va a crear. Si se establece en <see langword="null" /> o en una cadena vacía (""), cuando se agregue a la colección de columnas se especificará un nombre predeterminado.</param>
      <param name="dataType">
        <see cref="P:System.Data.DataColumn.DataType" /> compatible.</param>
      <exception cref="T:System.ArgumentNullException">No se ha especificado ningún <paramref name="dataType" />.</exception>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataColumn" /> con el nombre, el tipo de datos y la expresión especificados.</summary>
      <param name="columnName">Cadena que representa el nombre de la columna que se va a crear. Si se establece en <see langword="null" /> o en una cadena vacía (""), cuando se agregue a la colección de columnas se especificará un nombre predeterminado.</param>
      <param name="dataType">
        <see cref="P:System.Data.DataColumn.DataType" /> compatible.</param>
      <param name="expr">Expresión utilizada para crear esta columna. Para obtener más información, vea la propiedad <see cref="P:System.Data.DataColumn.Expression" />.</param>
      <exception cref="T:System.ArgumentNullException">No se ha especificado ningún <paramref name="dataType" />.</exception>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String,System.Data.MappingType)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataColumn" /> con el nombre, el tipo de datos, la expresión y un valor que determina si la columna es un atributo; todos ellos especificados.</summary>
      <param name="columnName">Cadena que representa el nombre de la columna que se va a crear. Si se establece en <see langword="null" /> o en una cadena vacía (""), cuando se agregue a la colección de columnas se especificará un nombre predeterminado.</param>
      <param name="dataType">
        <see cref="P:System.Data.DataColumn.DataType" /> compatible.</param>
      <param name="expr">Expresión utilizada para crear esta columna. Para obtener más información, vea la propiedad <see cref="P:System.Data.DataColumn.Expression" />.</param>
      <param name="type">Uno de los valores de <see cref="T:System.Data.MappingType" />.</param>
      <exception cref="T:System.ArgumentNullException">No se ha especificado ningún <paramref name="dataType" />.</exception>
    </member>
    <member name="M:System.Data.DataColumn.CheckNotAllowNull">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Data.DataColumn.CheckUnique">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="pcevent">Referencia de parámetro.</param>
    </member>
    <member name="M:System.Data.DataColumn.RaisePropertyChanging(System.String)">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="name">Referencia de parámetro.</param>
    </member>
    <member name="M:System.Data.DataColumn.SetOrdinal(System.Int32)">
      <summary>Cambia el ordinal o la posición del objeto <see cref="T:System.Data.DataColumn" /> al ordinal o posición especificados.</summary>
      <param name="ordinal">El ordinal especificado.</param>
    </member>
    <member name="M:System.Data.DataColumn.ToString">
      <summary>Obtiene el <see cref="P:System.Data.DataColumn.Expression" /> de la columna, si existe alguno.</summary>
      <returns>Valor <see cref="P:System.Data.DataColumn.Expression" />, si la propiedad está establecida; en caso contrario, la propiedad <see cref="P:System.Data.DataColumn.ColumnName" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.AllowDBNull">
      <summary>Obtiene o establece un valor que indica si en esta columna se permiten valores null para las filas que pertenecen a la tabla.</summary>
      <returns>
        <see langword="true" /> Si se permiten valores NULL; en caso contrario, <see langword="false" /> . De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrement">
      <summary>Obtiene o establece un valor que indica si la columna incrementa automáticamente el valor de la columna para las nuevas filas que se agregan a la tabla.</summary>
      <exception cref="T:System.ArgumentException">La columna es una columna calculada.</exception>
      <returns>
        <see langword="true" /> si el valor de la columna se incrementa automáticamente; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrementSeed">
      <summary>Obtiene o establece el valor inicial de una columna cuya propiedad <see cref="P:System.Data.DataColumn.AutoIncrement" /> está establecida en <see langword="true" />. El valor predeterminado es 0.</summary>
      <returns>Valor inicial para la característica <see cref="P:System.Data.DataColumn.AutoIncrement" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrementStep">
      <summary>Obtiene o establece el incremento utilizado por una columna cuya propiedad <see cref="P:System.Data.DataColumn.AutoIncrement" /> está establecida en <see langword="true" />.</summary>
      <exception cref="T:System.ArgumentException">El valor está establecido en cero.</exception>
      <returns>Número con el que se incrementa automáticamente el valor de la columna. El valor predeterminado es 1.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Caption">
      <summary>Obtiene o establece el título de la columna.</summary>
      <returns>Título de la columna. Si no está establecido, devuelve el valor <see cref="P:System.Data.DataColumn.ColumnName" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.ColumnMapping">
      <summary>Obtiene o establece la enumeración <see cref="T:System.Data.MappingType" /> de la columna.</summary>
      <returns>Uno de los valores de <see cref="T:System.Data.MappingType" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.ColumnName">
      <summary>Obtiene o establece el nombre de la columna en el <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <exception cref="T:System.ArgumentException">La propiedad se establece en <see langword="null" /> o es una cadena vacía y la columna pertenece a una colección.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Ya existe una columna con el mismo nombre en la colección. La comparación de nombres no distingue entre mayúsculas y minúsculas.</exception>
      <returns>El nombre de la columna.</returns>
    </member>
    <member name="P:System.Data.DataColumn.DataType">
      <summary>Obtiene o establece el tipo de datos almacenados en la columna.</summary>
      <exception cref="T:System.ArgumentException">La columna ya tiene datos almacenados.</exception>
      <returns>Objeto <see cref="T:System.Type" /> que representa el tipo de datos de la columna.</returns>
    </member>
    <member name="P:System.Data.DataColumn.DateTimeMode">
      <summary>Obtiene o establece la propiedad <see langword="DateTimeMode" /> para la columna.</summary>
      <returns>Enumeración <see cref="T:System.Data.DataSetDateTime" /> para la columna especificada.</returns>
    </member>
    <member name="P:System.Data.DataColumn.DefaultValue">
      <summary>Obtiene o establece el valor predeterminado para la columna al crear nuevas filas.</summary>
      <exception cref="T:System.InvalidCastException">Cuando se agrega una fila, el valor predeterminado no es una instancia del tipo de datos de la columna.</exception>
      <returns>Valor correspondiente al <see cref="P:System.Data.DataColumn.DataType" /> de la columna.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Expression">
      <summary>Obtiene o establece la expresión utilizada para filtrar filas, calcular los valores de una columna o crear una columna agregada.</summary>
      <exception cref="T:System.ArgumentException">Las propiedades <see cref="P:System.Data.DataColumn.AutoIncrement" /> o <see cref="P:System.Data.DataColumn.Unique" /> están establecidas en <see langword="true" />.</exception>
      <exception cref="T:System.FormatException">Al utilizar la función CONVERT, la expresión se evalúa como cadena, pero la cadena no contiene una representación que se pueda convertir al parámetro de tipo.</exception>
      <exception cref="T:System.InvalidCastException">Al utilizar la función CONVERT, la conversión solicitada no es posible. Consulte la función de conversión de la siguiente sección para obtener información detallada sobre las posibles conversiones.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Al utilizar la función SUBSTRING, el argumento de inicio está fuera del intervalo.  
  
 -O bien-  
  
 Al utilizar la función SUBSTRING, el argumento de longitud está fuera del intervalo.</exception>
      <exception cref="T:System.Exception">Al utilizar la función LEN o TRIM, la expresión no se evalúa como cadena. Esto incluye expresiones que se evalúan como <see cref="T:System.Char" />.</exception>
      <returns>Expresión para calcular el valor de una columna o para crear una columna agregada. El tipo de valor devuelto de una expresión está determinado por el <see cref="P:System.Data.DataColumn.DataType" /> de la columna.</returns>
    </member>
    <member name="P:System.Data.DataColumn.ExtendedProperties">
      <summary>Obtiene la colección de la información personalizada del usuario asociada a <see cref="T:System.Data.DataColumn" />.</summary>
      <returns>
        <see cref="T:System.Data.PropertyCollection" /> de información personalizada.</returns>
    </member>
    <member name="P:System.Data.DataColumn.MaxLength">
      <summary>Obtiene o establece la longitud máxima de una columna de texto.</summary>
      <returns>Longitud máxima de la columna en caracteres. Si la columna no tiene una longitud máxima, el valor es-1 (valor predeterminado).</returns>
    </member>
    <member name="P:System.Data.DataColumn.Namespace">
      <summary>Obtiene o establece el espacio de nombres del objeto <see cref="T:System.Data.DataColumn" />.</summary>
      <exception cref="T:System.ArgumentException">El espacio de nombres ya tiene datos.</exception>
      <returns>Espacio de nombres de <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Ordinal">
      <summary>Obtiene la posición de base cero de la columna en la colección <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <returns>Posición de la columna. Obtiene –1 si la columna no es un miembro de una colección.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Prefix">
      <summary>Obtiene o establece un prefijo XML que crea alias para el espacio de nombres del objeto <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Prefijo XML para el espacio de nombres de <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.ReadOnly">
      <summary>Obtiene o establece un valor que indica si la columna permite cambios justo después de que se haya agregado una fila a la tabla.</summary>
      <exception cref="T:System.ArgumentException">La propiedad está establecida en <see langword="false" /> en una columna calculada.</exception>
      <returns>
        <see langword="true" /> si la columna es de sólo lectura; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Table">
      <summary>Obtiene el <see cref="T:System.Data.DataTable" /> al que pertenece la columna.</summary>
      <returns>
        <see cref="T:System.Data.DataTable" /> al que pertenece el <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Unique">
      <summary>Obtiene o establece un valor que indica si los valores de cada fila de la columna deben ser únicos.</summary>
      <exception cref="T:System.ArgumentException">La columna es una columna calculada.</exception>
      <returns>
        <see langword="true" /> si el valor debe ser único; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Data.DataColumnChangeEventArgs">
      <summary>Proporciona datos para el evento <see cref="E:System.Data.DataTable.ColumnChanging" />.</summary>
    </member>
    <member name="M:System.Data.DataColumnChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataColumn,System.Object)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataColumnChangeEventArgs" />.</summary>
      <param name="row">
        <see cref="T:System.Data.DataRow" /> de la columna con el valor que cambia.</param>
      <param name="column">
        <see cref="T:System.Data.DataColumn" /> con el valor que cambia.</param>
      <param name="value">Nuevo valor.</param>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.Column">
      <summary>Obtiene el <see cref="T:System.Data.DataColumn" /> con un valor que cambia.</summary>
      <returns>
        <see cref="T:System.Data.DataColumn" /> con un valor que cambia.</returns>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.ProposedValue">
      <summary>Obtiene o establece el nuevo valor propuesto para la columna.</summary>
      <returns>El valor propuesto, de tipo <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.Row">
      <summary>Obtiene el <see cref="T:System.Data.DataRow" /> de la columna con un valor que cambia.</summary>
      <returns>
        <see cref="T:System.Data.DataRow" /> de la columna con un valor que cambia.</returns>
    </member>
    <member name="T:System.Data.DataColumnChangeEventHandler">
      <summary>Representa el método que controlará el evento <see cref="E:System.Data.DataTable.ColumnChanging" />.</summary>
      <param name="sender">Origen del evento.</param>
      <param name="e">Objeto <see cref="T:System.Data.DataColumnChangeEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="T:System.Data.DataColumnCollection">
      <summary>Representa una colección de objetos <see cref="T:System.Data.DataColumn" /> de una tabla <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="E:System.Data.DataColumnCollection.CollectionChanged">
      <summary>Se produce cuando la colección de columnas cambia, al agregar o quitar una columna.</summary>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add">
      <summary>Crea y agrega un objeto <see cref="T:System.Data.DataColumn" /> a la colección <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <returns>Colección <see cref="T:System.Data.DataColumn" /> creada recientemente.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)">
      <summary>Crea y agrega el objeto <see cref="T:System.Data.DataColumn" /> especificado a la colección <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="column">
        <see cref="T:System.Data.DataColumn" /> que se va a agregar.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="column" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La columna ya pertenece a esta colección o a otra.</exception>
      <exception cref="T:System.Data.DuplicateNameException">La colección ya tiene una columna con el nombre especificado. (La comparación no distingue entre mayúsculas y minúsculas).</exception>
      <exception cref="T:System.Data.InvalidExpressionException">La expresión no es válida. Vea la propiedad <see cref="P:System.Data.DataColumn.Expression" /> para obtener más información sobre cómo crear expresiones.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String)">
      <summary>Crea un objeto <see cref="T:System.Data.DataColumn" /> que tiene el nombre especificado y lo agrega a la colección <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="columnName">El nombre de la columna.</param>
      <exception cref="T:System.Data.DuplicateNameException">La colección ya tiene una columna con el nombre especificado. (La comparación no distingue entre mayúsculas y minúsculas).</exception>
      <returns>Colección <see cref="T:System.Data.DataColumn" /> creada recientemente.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type)">
      <summary>Crea un objeto <see cref="T:System.Data.DataColumn" /> que tiene el nombre y tipo especificados y lo agrega a la colección <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="columnName">Propiedad <see cref="P:System.Data.DataColumn.ColumnName" /> que se va a utilizar al crear la columna.</param>
      <param name="type">
        <see cref="P:System.Data.DataColumn.DataType" /> de la nueva columna.</param>
      <exception cref="T:System.Data.DuplicateNameException">La colección ya tiene una columna con el nombre especificado. (La comparación no distingue entre mayúsculas y minúsculas).</exception>
      <exception cref="T:System.Data.InvalidExpressionException">La expresión no es válida. Vea la propiedad <see cref="P:System.Data.DataColumn.Expression" /> para obtener más información sobre cómo crear expresiones.</exception>
      <returns>Colección <see cref="T:System.Data.DataColumn" /> creada recientemente.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)">
      <summary>Crea un objeto <see cref="T:System.Data.DataColumn" /> que tiene el nombre, tipo y expresión especificados y lo agrega a la colección <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="columnName">Nombre que se va a utilizar al crear la columna.</param>
      <param name="type">
        <see cref="P:System.Data.DataColumn.DataType" /> de la nueva columna.</param>
      <param name="expression">Expresión que se va a asignar a la propiedad <see cref="P:System.Data.DataColumn.Expression" />.</param>
      <exception cref="T:System.Data.DuplicateNameException">La colección ya tiene una columna con el nombre especificado. (La comparación no distingue entre mayúsculas y minúsculas).</exception>
      <exception cref="T:System.Data.InvalidExpressionException">La expresión no es válida. Vea la propiedad <see cref="P:System.Data.DataColumn.Expression" /> para obtener más información sobre cómo crear expresiones.</exception>
      <returns>Colección <see cref="T:System.Data.DataColumn" /> creada recientemente.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])">
      <summary>Copia los elementos de la matriz <see cref="T:System.Data.DataColumn" /> especificada al final de la colección.</summary>
      <param name="columns">Matriz de objetos <see cref="T:System.Data.DataColumn" /> que se va a agregar a la colección.</param>
    </member>
    <member name="M:System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)">
      <summary>Comprueba si una columna especificada se puede quitar de la colección.</summary>
      <param name="column">
        <see cref="T:System.Data.DataColumn" /> de la colección.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="column" /> es null.</exception>
      <exception cref="T:System.ArgumentException">La columna no pertenece a esta colección.
        
o bien

La columna forma parte de una relación.

o bien

La expresión de otra columna depende de esta columna.</exception>
      <returns>
        <see langword="true" /> si la columna puede quitarse. <see langword="false" /> si, 
-   El parámetro <paramref name="column" /> es <see langword="null" />.  
  
-   La columna no pertenece a esta colección.  
  
-   La columna forma parte de una relación.  
  
-   La expresión de otra columna depende de esta columna.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Clear">
      <summary>Borra la colección de todas las columnas.</summary>
    </member>
    <member name="M:System.Data.DataColumnCollection.Contains(System.String)">
      <summary>Comprueba si la colección contiene una columna con el nombre especificado.</summary>
      <param name="name">Propiedad <see cref="P:System.Data.DataColumn.ColumnName" /> de la columna que se va a buscar.</param>
      <returns>
        <see langword="true" /> si existe una columna con este nombre; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)">
      <summary>Copia toda la colección en una matriz existente, comenzando en el índice especificado de la matriz.</summary>
      <param name="array">Matriz de objetos <see cref="T:System.Data.DataColumn" /> en la que se va a copiar la colección.</param>
      <param name="index">Índice por el que se va a comenzar.</param>
    </member>
    <member name="M:System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)">
      <summary>Obtiene el índice de una columna especificado por su nombre.</summary>
      <param name="column">Nombre de la columna que se va a devolver.</param>
      <returns>Índice de la columna especificado por <paramref name="column" />, si se encuentra; de lo contrario, -1.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.IndexOf(System.String)">
      <summary>Obtiene el índice de la columna con el nombre especificado (el nombre no distingue entre mayúsculas y minúsculas).</summary>
      <param name="columnName">Nombre de la columna para buscar.</param>
      <returns>Índice de base cero de la columna con el nombre especificado, o -1 si la columna no existe en la colección.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Remove(System.Data.DataColumn)">
      <summary>Quita el objeto <see cref="T:System.Data.DataColumn" /> especificado de la colección.</summary>
      <param name="column">
        <see cref="T:System.Data.DataColumn" /> que se va a quitar.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="column" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La columna no pertenece a esta colección.  
  
 -O bien-  
  
 La columna forma parte de una relación.  
  
 -O bien-  
  
 La expresión de otra columna depende de esta columna.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Remove(System.String)">
      <summary>Quita de la colección el objeto <see cref="T:System.Data.DataColumn" /> que tiene el nombre especificado.</summary>
      <param name="name">Nombre de la columna que se va a quitar.</param>
      <exception cref="T:System.ArgumentException">La colección no tiene ninguna columna con el nombre especificado.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.RemoveAt(System.Int32)">
      <summary>Quita la columna de la colección en el índice especificado.</summary>
      <param name="index">Índice de la columna que se va a quitar.</param>
      <exception cref="T:System.ArgumentException">La colección no tiene ninguna columna en el índice especificado.</exception>
    </member>
    <member name="P:System.Data.DataColumnCollection.Item(System.Int32)">
      <summary>Obtiene el objeto <see cref="T:System.Data.DataColumn" /> de la colección en el índice especificado.</summary>
      <param name="index">Índice de base cero de la columna que se va a devolver.</param>
      <exception cref="T:System.IndexOutOfRangeException">El valor de índice es mayor que el número de elementos de la colección.</exception>
      <returns>Objeto <see cref="T:System.Data.DataColumn" /> en el índice especificado.</returns>
    </member>
    <member name="P:System.Data.DataColumnCollection.Item(System.String)">
      <summary>Obtiene el objeto <see cref="T:System.Data.DataColumn" /> de la colección con el nombre especificado.</summary>
      <param name="name">
        <see cref="P:System.Data.DataColumn.ColumnName" /> de la columna que se va a devolver.</param>
      <returns>
        <see cref="T:System.Data.DataColumn" /> de la colección con el nombre <see cref="P:System.Data.DataColumn.ColumnName" /> especificado; en caso contrario, un valor nulo si no existe <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="T:System.Data.DataException">
      <summary>Representa la excepción que se produce cuando se generan errores al utilizar componentes ADO.NET.</summary>
    </member>
    <member name="M:System.Data.DataException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataException" />. Este es el constructor sin parámetros.</summary>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataException" /> con la información y el contexto de serialización especificados.</summary>
      <param name="info">Datos necesarios para serializar o deserializar un objeto.</param>
      <param name="context">Descripción del origen y el destino de la secuencia serializada especificada.</param>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataException" /> con la cadena especificada.</summary>
      <param name="s">Cadena que se muestra cuando se produce la excepción.</param>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataException" /> con la cadena y la excepción interna especificadas.</summary>
      <param name="s">Cadena que se muestra cuando se produce la excepción.</param>
      <param name="innerException">Referencia a una excepción interna.</param>
    </member>
    <member name="T:System.Data.DataReaderExtensions">
      <summary>Proporciona métodos de extensión para <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetBoolean(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtiene el valor de la columna especificada como tipo Boolean.</summary>
      <param name="reader">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name">El nombre de la columna.</param>
      <exception cref="T:System.IndexOutOfRangeException">El nombre especificado no es un nombre de columna válido.</exception>
      <exception cref="T:System.InvalidCastException">La conversión especificada no es válida.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetByte(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtiene el valor de la columna especificada como un byte.</summary>
      <param name="reader">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name">El nombre de la columna.</param>
      <exception cref="T:System.IndexOutOfRangeException">El nombre especificado no es un nombre de columna válido.</exception>
      <exception cref="T:System.InvalidCastException">La conversión especificada no es válida.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetBytes(System.Data.Common.DbDataReader,System.String,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Lee un número especificado de bytes de la columna especificada a partir de un índice especificado, y los escribe en un búfer a partir de una posición especificada en el búfer.</summary>
      <param name="reader">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name">El nombre de la columna.</param>
      <param name="dataOffset">Índice de la fila desde la que se va a iniciar la operación de lectura.</param>
      <param name="buffer">Búfer en el que se van a copiar los datos.</param>
      <param name="bufferOffset">Índice del búfer en el que se van a copiar los datos.</param>
      <param name="length">Número máximo de caracteres que se van a leer.</param>
      <exception cref="T:System.IndexOutOfRangeException">El nombre especificado no es un nombre de columna válido.</exception>
      <exception cref="T:System.InvalidCastException">La conversión especificada no es válida.</exception>
      <returns>El número real de bytes que se leen.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetChar(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtiene el valor de la columna especificada como un solo carácter.</summary>
      <param name="reader">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name">El nombre de la columna.</param>
      <exception cref="T:System.IndexOutOfRangeException">El nombre especificado no es un nombre de columna válido.</exception>
      <exception cref="T:System.InvalidCastException">La conversión especificada no es válida.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetChars(System.Data.Common.DbDataReader,System.String,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Lee un número especificado de caracteres de una columna especificada a partir de un índice especificado, y los escribe en un búfer a partir de una posición especificada.</summary>
      <param name="reader">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name">El nombre de la columna.</param>
      <param name="dataOffset">Índice de la fila desde la que se va a iniciar la operación de lectura.</param>
      <param name="buffer">Búfer en el que se van a copiar los datos.</param>
      <param name="bufferOffset">Índice del búfer en el que se van a copiar los datos.</param>
      <param name="length">Número máximo de caracteres que se van a leer.</param>
      <exception cref="T:System.IndexOutOfRangeException">El nombre especificado no es un nombre de columna válido.</exception>
      <returns>Número real de caracteres que se leen.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetData(System.Data.Common.DbDataReader,System.String)">
      <summary>Devuelve un lector de datos anidados para la columna solicitada.</summary>
      <param name="reader">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name">El nombre de la columna.</param>
      <exception cref="T:System.IndexOutOfRangeException">El nombre especificado no es un nombre de columna válido.</exception>
      <returns>Lector de datos.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDataTypeName(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtiene el nombre del tipo de datos de la columna especificada.</summary>
      <param name="reader">Lector de datos de donde se obtendrá el nombre del tipo de columna.</param>
      <param name="name">El nombre de la columna.</param>
      <exception cref="T:System.IndexOutOfRangeException">El nombre especificado no es un nombre de columna válido.</exception>
      <returns>Nombre del tipo de datos.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDateTime(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtiene el valor de la columna especificada como un objeto <see cref="T:System.DateTime" />.</summary>
      <param name="reader">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name">El nombre de la columna.</param>
      <exception cref="T:System.IndexOutOfRangeException">El nombre especificado no es un nombre de columna válido.</exception>
      <exception cref="T:System.InvalidCastException">La conversión especificada no es válida.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDecimal(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtiene el valor de la columna especificada como objeto <see cref="T:System.Decimal" />.</summary>
      <param name="reader">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name">El nombre de la columna.</param>
      <exception cref="T:System.IndexOutOfRangeException">El nombre especificado no es un nombre de columna válido.</exception>
      <exception cref="T:System.InvalidCastException">La conversión especificada no es válida.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDouble(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtiene el valor de la columna especificada como un número de punto flotante de doble precisión.</summary>
      <param name="reader">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name">El nombre de la columna.</param>
      <exception cref="T:System.InvalidCastException">La conversión especificada no es válida.</exception>
      <exception cref="T:System.IndexOutOfRangeException">El nombre especificado no es un nombre de columna válido.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldType(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtiene el tipo de datos de la columna especificada.</summary>
      <param name="reader">Lector de datos de donde se obtendrá el tipo de campo.</param>
      <param name="name">El nombre de la columna.</param>
      <exception cref="T:System.IndexOutOfRangeException">El nombre especificado no es un nombre de columna válido.</exception>
      <exception cref="T:System.InvalidCastException">La conversión especificada no es válida.</exception>
      <returns>El tipo de datos de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldValue``1(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtiene el valor de la columna especificada con el tipo solicitado.</summary>
      <param name="reader">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name">El nombre de la columna.</param>
      <typeparam name="T">Tipo del valor que se va a devolver.</typeparam>
      <exception cref="T:System.InvalidOperationException">La conexión se descartó o cerró durante la recuperación de datos.  

o bien 
El lector de datos se cerró durante la recuperación de datos.  
  
o bien

No hay ningún dato listo para leer (por ejemplo, no se ha llamado al primer <see cref="M:System.Data.Common.DbDataReader.Read" /> o ha devuelto <see langword="false" />).  

o bien

El lector intentó leer una columna leída previamente en modo secuencial.  

o bien

Había una operación asincrónica en curso. Esto se aplica a todos los métodos Get* cuando se ejecutan en modo secuencial, ya que se les podía llamar mientras se leía una secuencia.</exception>
      <exception cref="T:System.IndexOutOfRangeException">El nombre especificado no es un nombre de columna válido.</exception>
      <exception cref="T:System.InvalidCastException">El valor devuelto por la base de datos no coincide o no se puede convertir en <typeparamref name="T" />.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldValueAsync``1(System.Data.Common.DbDataReader,System.String,System.Threading.CancellationToken)">
      <summary>Obtiene de manera asincrónica el valor de la columna especificada con el tipo solicitado.</summary>
      <param name="reader">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name">El nombre de la columna.</param>
      <param name="cancellationToken">Token opcional para cancelar la operación asincrónica.</param>
      <typeparam name="T">Tipo del valor que se va a devolver.</typeparam>
      <exception cref="T:System.InvalidOperationException">La conexión se descartó o cerró durante la recuperación de datos.  
  
o bien

El lector de datos se cerró durante la recuperación de datos.  

o bien

No hay ningún dato listo para leer (por ejemplo, no se ha llamado al primer <see cref="M:System.Data.Common.DbDataReader.Read" /> o ha devuelto <see langword="false" />).

o bien

Se intentó leer una columna leída previamente en modo secuencial.  

o bien

Había una operación asincrónica en curso. Esto se aplica a todos los métodos Get_*_ cuando se ejecutan en modo secuencial, ya que se les podía llamar mientras se leía una secuencia.</exception>
      <exception cref="T:System.IndexOutOfRangeException">El nombre especificado no es un nombre de columna válido.</exception>
      <exception cref="T:System.InvalidCastException">El valor devuelto por la base de datos no coincide o no se puede convertir en <typeparamref name="T" />.</exception>
      <returns>Tarea cuyo <see cref="P:System.Threading.Tasks.Task`1.Result" /> contiene el valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFloat(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtiene el valor de la columna especificada como un número de punto flotante de precisión sencilla.</summary>
      <param name="reader">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name">El nombre de la columna.</param>
      <exception cref="T:System.IndexOutOfRangeException">El nombre especificado no es un nombre de columna válido.</exception>
      <exception cref="T:System.InvalidCastException">La conversión especificada no es válida.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetGuid(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtiene el valor de la columna especificada como identificador único global (GUID).</summary>
      <param name="reader">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name">El nombre de la columna.</param>
      <exception cref="T:System.IndexOutOfRangeException">El nombre especificado no es un nombre de columna válido.</exception>
      <exception cref="T:System.InvalidCastException">La conversión especificada no es válida.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt16(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtiene el valor de la columna especificada como un entero de 16 bits con signo.</summary>
      <param name="reader">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name">El nombre de la columna.</param>
      <exception cref="T:System.IndexOutOfRangeException">El nombre especificado no es un nombre de columna válido.</exception>
      <exception cref="T:System.InvalidCastException">La conversión especificada no es válida.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt32(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtiene el valor de la columna especificada como un entero con signo de 32 bits.</summary>
      <param name="reader">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name">El nombre de la columna.</param>
      <exception cref="T:System.IndexOutOfRangeException">El nombre especificado no es un nombre de columna válido.</exception>
      <exception cref="T:System.InvalidCastException">La conversión especificada no es válida.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt64(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtiene el valor de la columna especificada como un entero de 64 bits con signo.</summary>
      <param name="reader">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name">El nombre de la columna.</param>
      <exception cref="T:System.IndexOutOfRangeException">El nombre especificado no es un nombre de columna válido.</exception>
      <exception cref="T:System.InvalidCastException">La conversión especificada no es válida.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetProviderSpecificFieldType(System.Data.Common.DbDataReader,System.String)">
      <summary>Devuelve el tipo específico del proveedor de la columna especificada.</summary>
      <param name="reader">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name">El nombre de la columna.</param>
      <exception cref="T:System.IndexOutOfRangeException">El nombre especificado no es un nombre de columna válido.</exception>
      <returns>Tipo .NET específico del proveedor.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetProviderSpecificValue(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtiene el valor de la columna especificada como instancia de un tipo específico del proveedor.</summary>
      <param name="reader">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name">El nombre de la columna.</param>
      <exception cref="T:System.IndexOutOfRangeException">El nombre especificado no es un nombre de columna válido.</exception>
      <exception cref="T:System.InvalidCastException">La conversión especificada no es válida.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetStream(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtiene un flujo para recuperar datos de la columna especificada.</summary>
      <param name="reader">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name">El nombre de la columna.</param>
      <exception cref="T:System.InvalidOperationException">La conexión se descartó o cerró durante la recuperación de datos.  
  
o bien

El lector de datos se cerró durante la recuperación de datos.  

o bien

No hay ningún dato listo para leer (por ejemplo, no se ha llamado al primer <see cref="M:System.Data.Common.DbDataReader.Read" /> o ha devuelto false).  

o bien

El lector de datos intentó leer una columna leída previamente en modo secuencial.  

o bien

Había una operación asincrónica en curso. Esto se aplica a todos los métodos Get* cuando se ejecutan en modo secuencial, ya que se les podía llamar mientras se leía una secuencia.</exception>
      <exception cref="T:System.IndexOutOfRangeException">El nombre especificado no es un nombre de columna válido.</exception>
      <exception cref="T:System.InvalidCastException">La columna especificada no es un tipo binario que admita operaciones de lectura con <see cref="T:System.IO.Stream" />.</exception>
      <returns>Flujo.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetString(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtiene el valor de la columna especificada como una instancia de <see cref="T:System.String" />.</summary>
      <param name="reader">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name">El nombre de la columna.</param>
      <exception cref="T:System.IndexOutOfRangeException">El nombre especificado no es un nombre de columna válido.</exception>
      <exception cref="T:System.InvalidCastException">La conversión especificada no es válida.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetTextReader(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtiene un lector de texto para recuperar datos de la columna.</summary>
      <param name="reader">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name">El nombre de la columna.</param>
      <exception cref="T:System.InvalidOperationException">La conexión se descartó o cerró durante la recuperación de datos.  
  
o bien

El lector de datos se cerró durante la recuperación de datos.  

o bien

No hay ningún dato listo para leer (por ejemplo, no se ha llamado al primer <see cref="M:System.Data.Common.DbDataReader.Read" /> o ha devuelto false).  

o bien

El lector de datos intentó leer una columna leída previamente en modo secuencial.  

o bien

Había una operación asincrónica en curso. Esto se aplica a todos los métodos Get* cuando se ejecutan en modo secuencial, ya que se les podía llamar mientras se leía una secuencia.</exception>
      <exception cref="T:System.IndexOutOfRangeException">El nombre especificado no es un nombre de columna válido.</exception>
      <exception cref="T:System.InvalidCastException">La columna especificada no es un tipo de texto que admita operaciones de lectura con <see cref="T:System.IO.TextReader" />.</exception>
      <returns>Lector de texto.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetValue(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtiene el valor de la columna especificada como una instancia de <see cref="T:System.Object" />.</summary>
      <param name="reader">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name">El nombre de la columna.</param>
      <exception cref="T:System.IndexOutOfRangeException">El nombre especificado no es un nombre de columna válido.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.IsDBNull(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtiene un valor que indica si la columna contiene valores que no existen o ausentes.</summary>
      <param name="reader">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name">El nombre de la columna.</param>
      <exception cref="T:System.IndexOutOfRangeException">El nombre especificado no es un nombre de columna válido.</exception>
      <returns>
        <see langword="true" /> si la columna especificada equivale a <see cref="T:System.DBNull" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.IsDBNullAsync(System.Data.Common.DbDataReader,System.String,System.Threading.CancellationToken)">
      <summary>Obtiene de manera asincrónica un valor que indica si la columna contiene valores no existentes o que faltan.</summary>
      <param name="reader">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name">El nombre de la columna.</param>
      <param name="cancellationToken">Token opcional para cancelar la operación asincrónica.</param>
      <exception cref="T:System.InvalidOperationException">La conexión se descartó o cerró durante la recuperación de datos.  
  
o bien

El lector de datos se cerró durante la recuperación de datos.  

o bien

No hay ningún dato listo para leer (por ejemplo, no se ha llamado al primer <see cref="M:System.Data.Common.DbDataReader.Read" /> o ha devuelto false).  

o bien

Se intentó leer una columna leída previamente en modo secuencial.  

o bien 
Había una operación asincrónica en curso. Esto se aplica a todos los métodos Get* cuando se ejecutan en modo secuencial, ya que se les podía llamar mientras se leía una secuencia.</exception>
      <exception cref="T:System.IndexOutOfRangeException">El nombre especificado no es un nombre de columna válido.</exception>
      <returns>
        <see cref="T:System.Threading.Tasks.Task`1" /> cuya propiedad <see cref="P:System.Threading.Tasks.Task`1.Result" /> es <see langword="true" /> si el valor de la columna especificada es equivalente a <see langword="DBNull" />, o <see langword="false" /> si no lo es.</returns>
    </member>
    <member name="T:System.Data.DataRelation">
      <summary>Representa una relación primaria-secundaria entre dos objetos <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataRelation" /> mediante el nombre <see cref="T:System.Data.DataRelation" /> especificado y los objetos <see cref="T:System.Data.DataColumn" /> primarios y secundarios.</summary>
      <param name="relationName">Nombre del objeto <see cref="T:System.Data.DataRelation" />. Si es <see langword="null" /> o una cadena vacía (""), se le asignará un nombre predeterminado cuando el objeto creado se agregue al <see cref="T:System.Data.DataRelationCollection" />.</param>
      <param name="parentColumn">
        <see cref="T:System.Data.DataColumn" /> primario de la relación.</param>
      <param name="childColumn">
        <see cref="T:System.Data.DataColumn" /> secundario de la relación.</param>
      <exception cref="T:System.ArgumentNullException">Uno o ambos objetos <see cref="T:System.Data.DataColumn" /> contienen <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Las columnas tienen tipos de datos diferentes. 
-O bien- 
Las tablas no pertenecen al mismo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataRelation" /> utilizando el nombre especificado, los objetos <see cref="T:System.Data.DataColumn" /> primarios y secundarios y un valor que indica si se van a crear restricciones.</summary>
      <param name="relationName">Nombre de la relación. Si es <see langword="null" /> o una cadena vacía (""), se le asignará un nombre predeterminado cuando el objeto creado se agregue al <see cref="T:System.Data.DataRelationCollection" />.</param>
      <param name="parentColumn">
        <see cref="T:System.Data.DataColumn" /> primario de la relación.</param>
      <param name="childColumn">
        <see cref="T:System.Data.DataColumn" /> secundario de la relación.</param>
      <param name="createConstraints">Valor que indica si se crean restricciones. <see langword="true" />, si se crean restricciones. En caso contrario, es <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">Uno o ambos objetos <see cref="T:System.Data.DataColumn" /> contienen <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Las columnas tienen tipos de datos diferentes. 
-O bien- 
Las tablas no pertenecen al mismo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataRelation" /> mediante el nombre <see cref="T:System.Data.DataRelation" /> especificado y las matrices coincidentes de los objetos <see cref="T:System.Data.DataColumn" /> primarios y secundarios.</summary>
      <param name="relationName">Nombre de la relación. Si es <see langword="null" /> o una cadena vacía (""), se le asignará un nombre predeterminado cuando el objeto creado se agregue al <see cref="T:System.Data.DataRelationCollection" />.</param>
      <param name="parentColumns">Matriz de objetos <see cref="T:System.Data.DataColumn" /> primarios.</param>
      <param name="childColumns">Matriz de objetos <see cref="T:System.Data.DataColumn" /> secundarios.</param>
      <exception cref="T:System.ArgumentNullException">Uno o ambos objetos <see cref="T:System.Data.DataColumn" /> contienen <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Los objetos <see cref="T:System.Data.DataColumn" /> tienen tipos de datos distintos. 
-O bien- 
Una o ambas matrices no están compuestas por columnas diferentes de la misma tabla.  
  
-O bien- 
Las tablas no pertenecen al mismo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataRelation" /> utilizando el nombre especificado, matrices coincidentes de objetos <see cref="T:System.Data.DataColumn" /> primarios y secundarios y un valor que indica si se van a crear restricciones.</summary>
      <param name="relationName">Nombre de la relación. Si es <see langword="null" /> o una cadena vacía (""), se le asignará un nombre predeterminado cuando el objeto creado se agregue al <see cref="T:System.Data.DataRelationCollection" />.</param>
      <param name="parentColumns">Matriz de objetos <see cref="T:System.Data.DataColumn" /> primarios.</param>
      <param name="childColumns">Matriz de objetos <see cref="T:System.Data.DataColumn" /> secundarios.</param>
      <param name="createConstraints">Valor que indica si se van a crear restricciones. <see langword="true" />, si se crean restricciones. En caso contrario, es <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">Uno o ambos objetos <see cref="T:System.Data.DataColumn" /> son <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Las columnas tienen tipos de datos diferentes. 
-O bien- 
Las tablas no pertenecen al mismo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <summary>Este constructor proporciona compatibilidad en tiempo de diseño en el entorno de Visual Studio.</summary>
      <param name="relationName">Nombre del objeto <see cref="T:System.Data.DataRelation" />. Si es <see langword="null" /> o una cadena vacía (""), se le asignará un nombre predeterminado cuando el objeto creado se agregue al <see cref="T:System.Data.DataRelationCollection" />.</param>
      <param name="parentTableName">Nombre del <see cref="T:System.Data.DataTable" /> que es la tabla primaria de la relación.</param>
      <param name="parentTableNamespace">Nombre del espacio de nombres de la tabla primaria.</param>
      <param name="childTableName">Nombre del <see cref="T:System.Data.DataTable" /> que es la tabla secundaria de la relación.</param>
      <param name="childTableNamespace">Nombre del espacio de nombres de la tabla secundaria.</param>
      <param name="parentColumnNames">Matriz de nombres de objetos <see cref="T:System.Data.DataColumn" /> del <see cref="T:System.Data.DataTable" /> primario de la relación.</param>
      <param name="childColumnNames">Matriz de nombres de objetos <see cref="T:System.Data.DataColumn" /> del <see cref="T:System.Data.DataTable" /> secundario de la relación.</param>
      <param name="nested">Valor que indica si se anidan relaciones.</param>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <summary>Este constructor proporciona compatibilidad en tiempo de diseño en el entorno de Visual Studio.</summary>
      <param name="relationName">Nombre de la relación. Si es <see langword="null" /> o una cadena vacía (""), se le asignará un nombre predeterminado cuando el objeto creado se agregue al <see cref="T:System.Data.DataRelationCollection" />.</param>
      <param name="parentTableName">Nombre del <see cref="T:System.Data.DataTable" /> que es la tabla primaria de la relación.</param>
      <param name="childTableName">Nombre del <see cref="T:System.Data.DataTable" /> que es la tabla secundaria de la relación.</param>
      <param name="parentColumnNames">Matriz de nombres de objetos <see cref="T:System.Data.DataColumn" /> del <see cref="T:System.Data.DataTable" /> primario de la relación.</param>
      <param name="childColumnNames">Matriz de nombres de objetos <see cref="T:System.Data.DataColumn" /> del <see cref="T:System.Data.DataTable" /> secundario de la relación.</param>
      <param name="nested">Valor que indica si se anidan relaciones.</param>
    </member>
    <member name="M:System.Data.DataRelation.CheckStateForProperty">
      <summary>Este método es compatible con la infraestructura de .NET Framework y no está diseñado para utilizarse directamente desde el código.</summary>
      <exception cref="T:System.Data.DataException">Las tablas primarias y secundarias pertenecen a objetos <see cref="T:System.Data.DataSet" /> diferentes.  
  
-O bien- 
Una o más parejas de objetos <see cref="T:System.Data.DataColumn" /> primarios y secundarios tienen tipos de datos que no coinciden.  
  
-O bien- 
Los objetos <see cref="T:System.Data.DataColumn" /> primarios y secundarios son idénticos.</exception>
    </member>
    <member name="M:System.Data.DataRelation.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="pcevent">Referencia de parámetro.</param>
    </member>
    <member name="M:System.Data.DataRelation.RaisePropertyChanging(System.String)">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="name">Referencia de parámetro.</param>
    </member>
    <member name="M:System.Data.DataRelation.ToString">
      <summary>Obtiene el <see cref="P:System.Data.DataRelation.RelationName" />, si existe alguno.</summary>
      <returns>Valor de propiedad <see cref="P:System.Data.DataRelation.RelationName" />.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ChildColumns">
      <summary>Obtiene los objetos <see cref="T:System.Data.DataColumn" /> secundarios de esta relación.</summary>
      <returns>Matriz de objetos <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ChildKeyConstraint">
      <summary>Obtiene el <see cref="T:System.Data.ForeignKeyConstraint" /> para la relación.</summary>
      <returns>Objeto <see langword="ForeignKeyConstraint" />.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ChildTable">
      <summary>Obtiene la tabla secundaria de esta relación.</summary>
      <returns>
        <see cref="T:System.Data.DataTable" /> que es la tabla secundaria de la relación.</returns>
    </member>
    <member name="P:System.Data.DataRelation.DataSet">
      <summary>Obtiene el <see cref="T:System.Data.DataSet" /> al que pertenece el <see cref="T:System.Data.DataRelation" />.</summary>
      <returns>
        <see cref="T:System.Data.DataSet" /> al que pertenece el <see cref="T:System.Data.DataRelation" />.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ExtendedProperties">
      <summary>Obtiene la colección que almacena propiedades personalizadas.</summary>
      <returns>Colección <see cref="T:System.Data.PropertyCollection" /> que contiene propiedades personalizadas.</returns>
    </member>
    <member name="P:System.Data.DataRelation.Nested">
      <summary>Obtiene o establece un valor que indica si se anidan objetos <see cref="T:System.Data.DataRelation" />.</summary>
      <returns>
        <see langword="true" />, si se anidan objetos <see cref="T:System.Data.DataRelation" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ParentColumns">
      <summary>Obtiene una matriz de objetos <see cref="T:System.Data.DataColumn" /> que son las columnas primarias de este <see cref="T:System.Data.DataRelation" />.</summary>
      <returns>Matriz de objetos <see cref="T:System.Data.DataColumn" /> que son las columnas primarias de <see cref="T:System.Data.DataRelation" />.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ParentKeyConstraint">
      <summary>Obtiene el objeto <see cref="T:System.Data.UniqueConstraint" /> que garantiza que los valores de la columna primaria de un objeto <see cref="T:System.Data.DataRelation" /> son únicos.</summary>
      <returns>Objeto <see cref="T:System.Data.UniqueConstraint" /> que garantiza que los valores de una columna primaria son únicos.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ParentTable">
      <summary>Obtiene el <see cref="T:System.Data.DataTable" /> primario de <see cref="T:System.Data.DataRelation" />.</summary>
      <returns>
        <see cref="T:System.Data.DataTable" />, que es la tabla primaria de esta relación.</returns>
    </member>
    <member name="P:System.Data.DataRelation.RelationName">
      <summary>Obtiene o establece el nombre utilizado para recuperar un <see cref="T:System.Data.DataRelation" /> de <see cref="T:System.Data.DataRelationCollection" />.</summary>
      <exception cref="T:System.ArgumentException">Se pasó <see langword="null" /> o una cadena vacía ("") a un <see cref="T:System.Data.DataColumn" /> que es un <see cref="T:System.Data.DataRelation" />.</exception>
      <exception cref="T:System.Data.DuplicateNameException">El <see cref="T:System.Data.DataRelation" /> pertenece a una colección que ya contiene un <see cref="T:System.Data.DataRelation" /> con el mismo nombre.</exception>
      <returns>Nombre del <see cref="T:System.Data.DataRelation" />.</returns>
    </member>
    <member name="T:System.Data.DataRelationCollection">
      <summary>Representa la colección de objetos <see cref="T:System.Data.DataRelation" /> de este <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="E:System.Data.DataRelationCollection.CollectionChanged">
      <summary>Se produce cuando cambia la colección.</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataRelationCollection" />.</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Crea una relación <see cref="T:System.Data.DataRelation" /> con una columna primaria y secundaria especificada y la agrega a la colección.</summary>
      <param name="parentColumn">Columna primaria de la relación.</param>
      <param name="childColumn">Columna secundaria de la relación.</param>
      <returns>Relación creada.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Crea una relación <see cref="T:System.Data.DataRelation" /> con las columnas primarias y secundarias especificadas y la agrega a la colección.</summary>
      <param name="parentColumns">Columnas primarias de la relación.</param>
      <param name="childColumns">Columnas secundarias de la relación.</param>
      <exception cref="T:System.ArgumentNullException">El argumento <paramref name="relation" /> es un valor nulo.</exception>
      <exception cref="T:System.ArgumentException">La relación ya pertenece a esta colección o a otra.</exception>
      <exception cref="T:System.Data.DuplicateNameException">La colección ya tiene una relación con el mismo nombre. La comparación no distingue entre mayúsculas y minúsculas.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">La relación ha introducido un estado no válido desde que se creó.</exception>
      <returns>Relación creada.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataRelation)">
      <summary>Agrega un objeto <see cref="T:System.Data.DataRelation" /> a <see cref="T:System.Data.DataRelationCollection" />.</summary>
      <param name="relation">
        <see langword="DataRelation" /> que se agrega a la colección.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="relation" /> es un valor nulo.</exception>
      <exception cref="T:System.ArgumentException">La relación ya pertenece a esta colección o a otra.</exception>
      <exception cref="T:System.Data.DuplicateNameException">La colección ya tiene una relación con el nombre especificado. La comparación no distingue entre mayúsculas y minúsculas.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">La relación ha introducido un estado no válido desde que se creó.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Crea una relación <see cref="T:System.Data.DataRelation" /> con el nombre y las columnas primarias y secundarias especificados y la agrega a la colección.</summary>
      <param name="name">Nombre de la relación.</param>
      <param name="parentColumn">Columna primaria de la relación.</param>
      <param name="childColumn">Columna secundaria de la relación.</param>
      <returns>Relación creada.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <summary>Crea un objeto <see cref="T:System.Data.DataRelation" /> con el nombre y las columnas primarias y secundarias que se especifiquen y con restricciones opcionales según el valor del parámetro <paramref name="createConstraints" />, y lo agrega a la colección.</summary>
      <param name="name">Nombre de la relación.</param>
      <param name="parentColumn">Columna primaria de la relación.</param>
      <param name="childColumn">Columna secundaria de la relación.</param>
      <param name="createConstraints">
        <see langword="true" /> para crear restricciones; en caso contrario, <see langword="false" />. El valor predeterminado es <see langword="true" />.</param>
      <returns>Relación creada.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Crea una relación <see cref="T:System.Data.DataRelation" /> con el nombre especificado y las matrices de columnas primarias y secundarias especificadas y la agrega a la colección.</summary>
      <param name="name">Nombre del objeto <see langword="DataRelation" /> que se va a crear.</param>
      <param name="parentColumns">Matriz de objetos <see cref="T:System.Data.DataColumn" /> primarios.</param>
      <param name="childColumns">Matriz de objetos <see langword="DataColumn" /> secundarios.</param>
      <exception cref="T:System.ArgumentNullException">El nombre de relación es un valor nulo.</exception>
      <exception cref="T:System.ArgumentException">La relación ya pertenece a esta colección o a otra.</exception>
      <exception cref="T:System.Data.DuplicateNameException">La colección ya tiene una relación con el mismo nombre. La comparación no distingue entre mayúsculas y minúsculas.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">La relación ha introducido un estado no válido desde que se creó.</exception>
      <returns>Objeto <see langword="DataRelation" /> creado.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <summary>Crea una relación <see cref="T:System.Data.DataRelation" /> con el nombre, las matrices de columnas primarias y secundarias especificados y un valor que especifica si se debe crear una restricción y lo agrega a la colección.</summary>
      <param name="name">Nombre del objeto <see langword="DataRelation" /> que se va a crear.</param>
      <param name="parentColumns">Matriz de objetos <see cref="T:System.Data.DataColumn" /> primarios.</param>
      <param name="childColumns">Matriz de objetos <see langword="DataColumn" /> secundarios.</param>
      <param name="createConstraints">
        <see langword="true" /> para crear una restricción; en caso contrario, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">El nombre de relación es un valor nulo.</exception>
      <exception cref="T:System.ArgumentException">La relación ya pertenece a esta colección o a otra.</exception>
      <exception cref="T:System.Data.DuplicateNameException">La colección ya tiene una relación con el mismo nombre. La comparación no distingue entre mayúsculas y minúsculas.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">La relación ha introducido un estado no válido desde que se creó.</exception>
      <returns>Relación creada.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)">
      <summary>Realiza comprobaciones en la tabla.</summary>
      <param name="relation">Relación que se va a comprobar.</param>
      <exception cref="T:System.ArgumentNullException">La relación es null.</exception>
      <exception cref="T:System.ArgumentException">La relación ya pertenece a esta colección o a otra.</exception>
      <exception cref="T:System.Data.DuplicateNameException">La colección ya tiene una relación con el mismo nombre. La comparación no distingue entre mayúsculas y minúsculas.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])">
      <summary>Copia los elementos de la matriz <see cref="T:System.Data.DataRelation" /> especificada al final de la colección.</summary>
      <param name="relations">Matriz de objetos <see cref="T:System.Data.DataRelation" /> que se va a agregar a la colección.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)">
      <summary>Comprueba si la relación <see cref="T:System.Data.DataRelation" /> especificada se puede quitar de la colección.</summary>
      <param name="relation">Relación en la que se desea realizar la comprobación.</param>
      <returns>
        <see langword="true" /> si se puede quitar <see cref="T:System.Data.DataRelation" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Clear">
      <summary>Borra las relaciones de la colección.</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.Contains(System.String)">
      <summary>Comprueba si en la colección existe un objeto <see cref="T:System.Data.DataRelation" /> con el nombre especificado (sin distinción entre mayúsculas y minúsculas).</summary>
      <param name="name">Nombre de la relación que se va a buscar.</param>
      <returns>
        <see langword="true" /> si existe una relación con el nombre especificado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)">
      <summary>Copia la colección de objetos <see cref="T:System.Data.DataRelation" />, empezando por el índice especificado.</summary>
      <param name="array">Matriz de objetos <see cref="T:System.Data.DataRelation" /> en la que se va a copiar la colección.</param>
      <param name="index">Índice por el que se va a comenzar.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.GetDataSet">
      <summary>Este método es compatible con la infraestructura de .NET Framework y no está diseñado para utilizarse directamente desde el código.</summary>
      <returns>DataSet al que se hace referencia.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)">
      <summary>Obtiene el índice del objeto <see cref="T:System.Data.DataRelation" /> especificado.</summary>
      <param name="relation">Relación que se va a buscar.</param>
      <returns>Índice de base cero de la relación, o -1 si la relación no se encuentra en la colección.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.IndexOf(System.String)">
      <summary>Obtiene el índice del objeto <see cref="T:System.Data.DataRelation" /> especificado por su nombre.</summary>
      <param name="relationName">Nombre de la relación que se va a buscar.</param>
      <returns>Índice de base cero de la relación con el nombre especificado, o -1 si la relación no existe en la colección.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Genera el evento <see cref="E:System.Data.DataRelationCollection.CollectionChanged" />.</summary>
      <param name="ccevent">
        <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Genera el evento <see cref="E:System.Data.DataRelationCollection.CollectionChanged" />.</summary>
      <param name="ccevent">
        <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.Remove(System.Data.DataRelation)">
      <summary>Quita la relación especificada de la colección.</summary>
      <param name="relation">Relación que se va a quitar.</param>
      <exception cref="T:System.ArgumentNullException">La relación es un valor null.</exception>
      <exception cref="T:System.ArgumentException">La relación no pertenece a la colección.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Remove(System.String)">
      <summary>Quita la relación con el nombre especificado de la colección.</summary>
      <param name="name">Nombre de la relación que se va a quitar.</param>
      <exception cref="T:System.IndexOutOfRangeException">La colección no tiene ninguna relación con el nombre especificado.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.RemoveAt(System.Int32)">
      <summary>Quita la relación de la colección en el índice especificado.</summary>
      <param name="index">Índice de la relación que se va a quitar.</param>
      <exception cref="T:System.ArgumentException">La colección no tiene ninguna relación en el índice especificado.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)">
      <summary>Realiza una comprobación en el objeto <see cref="T:System.Data.DataRelation" /> especificado.</summary>
      <param name="relation">Objeto <see langword="DataRelation" /> que se va a comprobar.</param>
      <exception cref="T:System.ArgumentNullException">La colección no tiene ninguna relación en el índice especificado.</exception>
      <exception cref="T:System.ArgumentException">La relación especificada no pertenece a esta colección o pertenece a otra.</exception>
    </member>
    <member name="P:System.Data.DataRelationCollection.Item(System.Int32)">
      <summary>Obtiene el objeto <see cref="T:System.Data.DataRelation" /> en el índice especificado.</summary>
      <param name="index">Índice de base cero que se va a buscar.</param>
      <exception cref="T:System.IndexOutOfRangeException">El valor de índice es mayor que el número de elementos de la colección.</exception>
      <returns>
        <see cref="T:System.Data.DataRelation" /> o un valor nulo si el <see cref="T:System.Data.DataRelation" /> especificado no existe.</returns>
    </member>
    <member name="P:System.Data.DataRelationCollection.Item(System.String)">
      <summary>Obtiene los objetos <see cref="T:System.Data.DataRelation" /> especificados por su nombre.</summary>
      <param name="name">Nombre de la relación que se va a buscar.</param>
      <returns>
        <see cref="T:System.Data.DataRelation" /> con nombre o un valor nulo si el <see cref="T:System.Data.DataRelation" /> especificado no existe.</returns>
    </member>
    <member name="T:System.Data.DataRow">
      <summary>Representa una fila de datos en un <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.#ctor(System.Data.DataRowBuilder)">
      <summary>Inicializa una nueva instancia de DataRow. Construye una fila desde el generador. Solo para uso interno.</summary>
      <param name="builder">generador</param>
    </member>
    <member name="M:System.Data.DataRow.AcceptChanges">
      <summary>Confirma todos los cambios realizados en esta fila desde la última vez que se llamó a <see cref="M:System.Data.DataRow.AcceptChanges" />.</summary>
      <exception cref="T:System.Data.RowNotInTableException">La fila no pertenece a la tabla.</exception>
    </member>
    <member name="M:System.Data.DataRow.BeginEdit">
      <summary>Inicia una operación de edición en un objeto <see cref="T:System.Data.DataRow" />.</summary>
      <exception cref="T:System.Data.InRowChangingEventException">Se ha llamado al método dentro del evento <see cref="E:System.Data.DataTable.RowChanging" />.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Se ha llamado al método en una fila eliminada.</exception>
    </member>
    <member name="M:System.Data.DataRow.CancelEdit">
      <summary>Cancela la edición actual de la fila.</summary>
      <exception cref="T:System.Data.InRowChangingEventException">Se ha llamado al método dentro del evento <see cref="E:System.Data.DataTable.RowChanging" />.</exception>
    </member>
    <member name="M:System.Data.DataRow.ClearErrors">
      <summary>Borra los errores respecto de la fila. Incluye la propiedad <see cref="P:System.Data.DataRow.RowError" /> y los errores establecidos con <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.Delete">
      <summary>Elimina <see cref="T:System.Data.DataRow" />.</summary>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">
        <see cref="T:System.Data.DataRow" /> ya se ha eliminado.</exception>
    </member>
    <member name="M:System.Data.DataRow.EndEdit">
      <summary>Finaliza la edición que se está produciendo en la fila.</summary>
      <exception cref="T:System.Data.InRowChangingEventException">Se ha llamado al método dentro del evento <see cref="E:System.Data.DataTable.RowChanging" />.</exception>
      <exception cref="T:System.Data.ConstraintException">Restricción interrumpida por la edición.</exception>
      <exception cref="T:System.Data.ReadOnlyException">La fila pertenece a la tabla y la edición ha intentado cambiar el valor de una columna de sólo lectura.</exception>
      <exception cref="T:System.Data.NoNullAllowedException">La edición ha intentado colocar un valor nulo en una columna donde <see cref="P:System.Data.DataColumn.AllowDBNull" /> es false.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)">
      <summary>Obtiene las filas secundarias de este <see cref="T:System.Data.DataRow" /> mediante el <see cref="T:System.Data.DataRelation" /> especificado.</summary>
      <param name="relation">Objeto <see cref="T:System.Data.DataRelation" /> que se va a usar.</param>
      <exception cref="T:System.ArgumentException">La relación y la fila no pertenecen a la misma tabla.</exception>
      <exception cref="T:System.ArgumentNullException">La relación es <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">La fila no pertenece a la tabla.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">La fila no tiene esta versión de datos.</exception>
      <returns>Matriz de objetos <see cref="T:System.Data.DataRow" /> o una matriz de longitud cero.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary>Obtiene las filas secundarias de un <see cref="T:System.Data.DataRow" /> mediante el <see cref="T:System.Data.DataRelation" /> especificado y <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relation">Objeto <see cref="T:System.Data.DataRelation" /> que se va a usar.</param>
      <param name="version">Uno de los valores de <see cref="T:System.Data.DataRowVersion" /> que especifica la versión de los datos que se va a obtener. Los valores posibles son <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> y <see langword="Proposed" />.</param>
      <exception cref="T:System.ArgumentException">La relación y la fila no pertenecen a la misma tabla.</exception>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="relation" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">La fila no pertenece a la tabla.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">La fila no tiene el <see cref="T:System.Data.DataRowVersion" /> solicitado.</exception>
      <returns>Matriz de objetos <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.String)">
      <summary>Obtiene las filas secundarias de un <see cref="T:System.Data.DataRow" /> mediante el <see cref="P:System.Data.DataRelation.RelationName" /> especificado de un <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relationName">
        <see cref="P:System.Data.DataRelation.RelationName" /> de <see cref="T:System.Data.DataRelation" /> que se va a utilizar.</param>
      <exception cref="T:System.ArgumentException">La relación y la fila no pertenecen a la misma tabla.</exception>
      <exception cref="T:System.Data.RowNotInTableException">La fila no pertenece a la tabla.</exception>
      <returns>Matriz de objetos <see cref="T:System.Data.DataRow" /> o una matriz de longitud cero.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)">
      <summary>Obtiene las filas secundarias de un <see cref="T:System.Data.DataRow" /> mediante el <see cref="P:System.Data.DataRelation.RelationName" /> especificado de un <see cref="T:System.Data.DataRelation" /> y <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relationName">
        <see cref="P:System.Data.DataRelation.RelationName" /> de <see cref="T:System.Data.DataRelation" /> que se va a utilizar.</param>
      <param name="version">Uno de los valores de <see cref="T:System.Data.DataRowVersion" /> que especifica la versión de los datos que se va a obtener. Los valores posibles son <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> y <see langword="Proposed" />.</param>
      <exception cref="T:System.ArgumentException">La relación y la fila no pertenecen a la misma tabla.</exception>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="relation" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">La fila no pertenece a la tabla.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">La fila no tiene el <see cref="T:System.Data.DataRowVersion" /> solicitado.</exception>
      <returns>Matriz de objetos <see cref="T:System.Data.DataRow" /> o una matriz de longitud cero.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)">
      <summary>Obtiene la descripción de error del <see cref="T:System.Data.DataColumn" /> especificado.</summary>
      <param name="column">Objeto <see cref="T:System.Data.DataColumn" />.</param>
      <returns>Texto de la descripción de error.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.Int32)">
      <summary>Obtiene la descripción de error para la columna especificada mediante un índice.</summary>
      <param name="columnIndex">Índice de base cero de la columna.</param>
      <exception cref="T:System.IndexOutOfRangeException">El argumento <paramref name="columnIndex" /> está fuera de intervalo.</exception>
      <returns>Texto de la descripción de error.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.String)">
      <summary>Obtiene la descripción de error para una columna, especificada mediante un nombre.</summary>
      <param name="columnName">El nombre de la columna.</param>
      <returns>Texto de la descripción de error.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnsInError">
      <summary>Obtiene una matriz de columnas que tienen errores.</summary>
      <returns>Matriz de objetos <see cref="T:System.Data.DataColumn" /> que contienen errores.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)">
      <summary>Obtiene la fila primaria de un <see cref="T:System.Data.DataRow" /> mediante el <see cref="T:System.Data.DataRelation" /> especificado.</summary>
      <param name="relation">Objeto <see cref="T:System.Data.DataRelation" /> que se va a usar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relation" /> no pertenece a <see cref="T:System.Data.DataTable" />.  
  
o bien

La fila es <see langword="null" />.</exception>
      <exception cref="T:System.Data.DataException">Una fila secundaria tiene varios elementos primarios.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Esta fila no pertenece a la tabla secundaria del objeto <see cref="T:System.Data.DataRelation" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">La fila no pertenece a una tabla.</exception>
      <returns>
        <see cref="T:System.Data.DataRow" /> primario de la fila actual.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary>Obtiene la fila primaria de <see cref="T:System.Data.DataRow" /> mediante el <see cref="T:System.Data.DataRelation" /> especificado y <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relation">Objeto <see cref="T:System.Data.DataRelation" /> que se va a usar.</param>
      <param name="version">Uno de los valores de <see cref="T:System.Data.DataRowVersion" /> que especifica la versión de los datos que se va a obtener.</param>
      <exception cref="T:System.ArgumentNullException">La fila es <see langword="null" />.  
  
o bien

<paramref name="relation" /> no pertenece a las relaciones primarias de esta tabla.</exception>
      <exception cref="T:System.Data.DataException">Una fila secundaria tiene varios elementos primarios.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">La tabla secundaria de la relación no es la tabla a la que pertenece la fila.</exception>
      <exception cref="T:System.Data.RowNotInTableException">La fila no pertenece a una tabla.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">La fila no tiene esta versión de datos.</exception>
      <returns>
        <see cref="T:System.Data.DataRow" /> primario de la fila actual.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.String)">
      <summary>Obtiene la fila primaria de <see cref="T:System.Data.DataRow" /> mediante el <see cref="P:System.Data.DataRelation.RelationName" /> especificado de <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relationName">
        <see cref="P:System.Data.DataRelation.RelationName" /> de un <see cref="T:System.Data.DataRelation" />.</param>
      <exception cref="T:System.ArgumentException">La relación y la fila no pertenecen a la misma tabla.</exception>
      <exception cref="T:System.Data.DataException">Una fila secundaria tiene varios elementos primarios.</exception>
      <exception cref="T:System.Data.RowNotInTableException">La fila no pertenece a la tabla.</exception>
      <returns>
        <see cref="T:System.Data.DataRow" /> primario de la fila actual.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)">
      <summary>Obtiene la fila primaria de un <see cref="T:System.Data.DataRow" /> mediante el <see cref="P:System.Data.DataRelation.RelationName" /> especificado de un <see cref="T:System.Data.DataRelation" /> y <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relationName">
        <see cref="P:System.Data.DataRelation.RelationName" /> de un <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version">Uno de los valores de <see cref="T:System.Data.DataRowVersion" />.</param>
      <exception cref="T:System.ArgumentException">La relación y la fila no pertenecen a la misma tabla.</exception>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="relation" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Data.DataException">Una fila secundaria tiene varios elementos primarios.</exception>
      <exception cref="T:System.Data.RowNotInTableException">La fila no pertenece a la tabla.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">La fila no tiene el <see cref="T:System.Data.DataRowVersion" /> solicitado.</exception>
      <returns>
        <see cref="T:System.Data.DataRow" /> primario de la fila actual.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)">
      <summary>Obtiene las filas primarias de <see cref="T:System.Data.DataRow" /> mediante el <see cref="T:System.Data.DataRelation" /> especificado.</summary>
      <param name="relation">Objeto <see cref="T:System.Data.DataRelation" /> que se va a usar.</param>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Data.DataRelation" /> no pertenece al <see cref="T:System.Data.DataSet" /> de esta fila.</exception>
      <exception cref="T:System.ArgumentNullException">La fila es <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">La tabla secundaria de la relación no es la tabla a la que pertenece la fila.</exception>
      <exception cref="T:System.Data.RowNotInTableException">La fila no pertenece a <see cref="T:System.Data.DataTable" />.</exception>
      <returns>Matriz de objetos <see cref="T:System.Data.DataRow" /> o una matriz de longitud cero.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary>Obtiene las filas primarias de <see cref="T:System.Data.DataRow" /> mediante el <see cref="T:System.Data.DataRelation" /> especificado y <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relation">Objeto <see cref="T:System.Data.DataRelation" /> que se va a usar.</param>
      <param name="version">Uno de los valores de <see cref="T:System.Data.DataRowVersion" /> que especifica la versión de los datos que se va a obtener.</param>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Data.DataRelation" /> no pertenece al <see cref="T:System.Data.DataSet" /> de esta fila.</exception>
      <exception cref="T:System.ArgumentNullException">La fila es <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">La tabla secundaria de la relación no es la tabla a la que pertenece la fila.</exception>
      <exception cref="T:System.Data.RowNotInTableException">La fila no pertenece a <see cref="T:System.Data.DataTable" />.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">La fila no tiene el <see cref="T:System.Data.DataRowVersion" /> solicitado.</exception>
      <returns>Matriz de objetos <see cref="T:System.Data.DataRow" /> o una matriz de longitud cero.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.String)">
      <summary>Obtiene las filas primarias de <see cref="T:System.Data.DataRow" /> mediante el <see cref="P:System.Data.DataRelation.RelationName" /> especificado de un <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relationName">
        <see cref="P:System.Data.DataRelation.RelationName" /> de un <see cref="T:System.Data.DataRelation" />.</param>
      <exception cref="T:System.ArgumentException">La relación y la fila no pertenecen a la misma tabla.</exception>
      <exception cref="T:System.Data.RowNotInTableException">La fila no pertenece a la tabla.</exception>
      <returns>Matriz de objetos <see cref="T:System.Data.DataRow" /> o una matriz de longitud cero.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)">
      <summary>Obtiene las filas primarias de un <see cref="T:System.Data.DataRow" /> mediante el <see cref="P:System.Data.DataRelation.RelationName" /> especificado de un <see cref="T:System.Data.DataRelation" /> y <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relationName">
        <see cref="P:System.Data.DataRelation.RelationName" /> de un <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version">Uno de los valores de <see cref="T:System.Data.DataRowVersion" /> que especifica la versión de los datos que se va a obtener. Los valores posibles son <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> y <see langword="Proposed" />.</param>
      <exception cref="T:System.ArgumentException">La relación y la fila no pertenecen a la misma tabla.</exception>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="relation" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">La fila no pertenece a la tabla.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">La fila no tiene el <see cref="T:System.Data.DataRowVersion" /> solicitado.</exception>
      <returns>Matriz de objetos <see cref="T:System.Data.DataRow" /> o una matriz de longitud cero.</returns>
    </member>
    <member name="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)">
      <summary>Obtiene un valor que indica si existe una versión especificada.</summary>
      <param name="version">Uno de los valores de <see cref="T:System.Data.DataRowVersion" /> que especifica la versión de la fila.</param>
      <returns>
        <see langword="true" /> si la versión existe; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn)">
      <summary>Obtiene un valor que indica si el objeto <see cref="T:System.Data.DataColumn" /> especificado contiene un valor null.</summary>
      <param name="column">Objeto <see cref="T:System.Data.DataColumn" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="column" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">La fila no pertenece a la tabla.</exception>
      <returns>
        <see langword="true" /> si la columna contiene un valor nulo; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary>Obtiene un valor que indica si el objeto <see cref="T:System.Data.DataColumn" /> y la enumeración <see cref="T:System.Data.DataRowVersion" /> especificados contiene un valor null.</summary>
      <param name="column">Objeto <see cref="T:System.Data.DataColumn" />.</param>
      <param name="version">Uno de los valores de <see cref="T:System.Data.DataRowVersion" /> que especifica la versión de la fila. Los valores posibles son <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> y <see langword="Proposed" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="column" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">La fila no pertenece a la tabla.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">La fila no tiene el <paramref name="version" /> solicitado.</exception>
      <returns>
        <see langword="true" /> si la columna contiene un valor nulo; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Int32)">
      <summary>Obtiene un valor que indica si la columna en el índice especificado contiene un valor null.</summary>
      <param name="columnIndex">Índice de base cero de la columna.</param>
      <exception cref="T:System.IndexOutOfRangeException">Ninguna columna corresponde al índice especificado por <paramref name="columnIndex" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">La fila no pertenece a la tabla.</exception>
      <returns>
        <see langword="true" /> si la columna contiene un valor nulo; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.String)">
      <summary>Obtiene un valor que indica si la columna con nombre contiene un valor null.</summary>
      <param name="columnName">El nombre de la columna.</param>
      <exception cref="T:System.ArgumentException">No se puede encontrar la columna especificada mediante <paramref name="columnName" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="columnName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">La fila no pertenece a la tabla.</exception>
      <returns>
        <see langword="true" /> si la columna contiene un valor nulo; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.RejectChanges">
      <summary>Rechaza todos los cambios realizados en esta fila desde la última vez que se llamó a <see cref="M:System.Data.DataRow.AcceptChanges" />.</summary>
      <exception cref="T:System.Data.RowNotInTableException">La fila no pertenece a la tabla.</exception>
    </member>
    <member name="M:System.Data.DataRow.SetAdded">
      <summary>Cambia la propiedad <see cref="P:System.Data.DataRow.RowState" /> de un objeto <see cref="T:System.Data.DataRow" /> a <see langword="Added" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)">
      <summary>Establece la descripción de error para una columna especificada como <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="column">
        <see cref="T:System.Data.DataColumn" /> para el que se va a establecer la descripción de error.</param>
      <param name="error">Descripción de error.</param>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)">
      <summary>Establece la descripción de error para una columna especificada mediante un índice.</summary>
      <param name="columnIndex">Índice de base cero de la columna.</param>
      <param name="error">Descripción de error.</param>
      <exception cref="T:System.IndexOutOfRangeException">El argumento <paramref name="columnIndex" /> está fuera de intervalo.</exception>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.String,System.String)">
      <summary>Establece la descripción de error para una columna especificada mediante un nombre.</summary>
      <param name="columnName">El nombre de la columna.</param>
      <param name="error">Descripción de error.</param>
    </member>
    <member name="M:System.Data.DataRow.SetModified">
      <summary>Cambia la propiedad <see cref="P:System.Data.DataRow.RowState" /> de un objeto <see cref="T:System.Data.DataRow" /> a <see langword="Modified" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.SetNull(System.Data.DataColumn)">
      <summary>Establece el valor del objeto <see cref="T:System.Data.DataColumn" /> especificado en un valor null.</summary>
      <param name="column">Objeto <see cref="T:System.Data.DataColumn" />.</param>
    </member>
    <member name="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)">
      <summary>Establece la fila primaria de un <see cref="T:System.Data.DataRow" /> con un nuevo <see cref="T:System.Data.DataRow" /> primario especificado.</summary>
      <param name="parentRow">Nuevo <see cref="T:System.Data.DataRow" /> primario.</param>
    </member>
    <member name="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)">
      <summary>Establece la fila primaria de un <see cref="T:System.Data.DataRow" /> con un nuevo <see cref="T:System.Data.DataRow" /> primario especificado y <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="parentRow">Nuevo <see cref="T:System.Data.DataRow" /> primario.</param>
      <param name="relation">Relación <see cref="T:System.Data.DataRelation" /> que se va a utilizar.</param>
      <exception cref="T:System.Data.RowNotInTableException">Una de las filas no pertenece a una tabla.</exception>
      <exception cref="T:System.ArgumentNullException">Una de las filas es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La relación no pertenece a la colección <see cref="T:System.Data.DataRelationCollection" /> del objeto <see cref="T:System.Data.DataSet" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">El objeto <see cref="T:System.Data.DataTable" /> secundario de la relación no es la tabla a la que pertenece esta fila.</exception>
    </member>
    <member name="P:System.Data.DataRow.HasErrors">
      <summary>Obtiene un valor que indica si hay errores en una fila.</summary>
      <returns>Es <see langword="true" /> si la fila contiene un error; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Data.DataColumn)">
      <summary>Obtiene o establece los datos almacenados en el <see cref="T:System.Data.DataColumn" /> especificado.</summary>
      <param name="column">Un valor de tipo <see cref="T:System.Data.DataColumn" /> que contiene los datos.</param>
      <exception cref="T:System.ArgumentException">La columna no pertenece a esta tabla.</exception>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="column" /> es null.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Se intentó establecer un valor en una fila eliminada.</exception>
      <exception cref="T:System.InvalidCastException">No coinciden los tipos de datos del valor y de la columna.</exception>
      <returns>
        <see cref="T:System.Object" /> que contiene los datos.</returns>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary>Obtiene la versión específica de datos almacenados en el <see cref="T:System.Data.DataColumn" /> determinado.</summary>
      <param name="column">Objeto <see cref="T:System.Data.DataColumn" /> que contiene información sobre la columna.</param>
      <param name="version">Uno de los valores de <see cref="T:System.Data.DataRowVersion" /> que especifica la versión de la fila que desea. Los valores posibles son <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> y <see langword="Proposed" />.</param>
      <exception cref="T:System.ArgumentException">La columna no pertenece a la tabla.</exception>
      <exception cref="T:System.ArgumentNullException">El argumento <paramref name="column" /> contiene un valor nulo.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">La fila no tiene esta versión de datos.</exception>
      <returns>
        <see cref="T:System.Object" /> que contiene los datos.</returns>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Int32)">
      <summary>Obtiene o establece los datos almacenados en la columna especificada mediante un índice.</summary>
      <param name="columnIndex">Índice de base cero de la columna.</param>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Se produce cuando se intenta establecer un valor en una fila eliminada.</exception>
      <exception cref="T:System.IndexOutOfRangeException">El argumento <paramref name="columnIndex" /> está fuera de intervalo.</exception>
      <exception cref="T:System.InvalidCastException">Se produce cuando se establece el valor y el objeto <see cref="T:System.Type" /> del valor nuevo no coincide con <see cref="P:System.Data.DataColumn.DataType" />.</exception>
      <returns>
        <see cref="T:System.Object" /> que contiene los datos.</returns>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)">
      <summary>Obtiene los datos almacenados en la columna, especificada mediante índice y versión de los datos que se van a recuperar.</summary>
      <param name="columnIndex">Índice de base cero de la columna.</param>
      <param name="version">Uno de los valores de <see cref="T:System.Data.DataRowVersion" /> que especifica la versión de la fila que desea. Los valores posibles son <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> y <see langword="Proposed" />.</param>
      <exception cref="T:System.IndexOutOfRangeException">El argumento <paramref name="columnIndex" /> está fuera de intervalo.</exception>
      <exception cref="T:System.InvalidCastException">No coinciden los tipos de datos del valor y de la columna.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">La fila no tiene esta versión de datos.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Se intentó establecer un valor en una fila eliminada.</exception>
      <returns>
        <see cref="T:System.Object" /> que contiene los datos.</returns>
    </member>
    <member name="P:System.Data.DataRow.Item(System.String)">
      <summary>Obtiene o establece los datos almacenados en la columna especificada mediante un nombre.</summary>
      <param name="columnName">El nombre de la columna.</param>
      <exception cref="T:System.ArgumentException">No se puede encontrar la columna especificada mediante <paramref name="columnName" />.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Se produce cuando se intenta establecer un valor en una fila eliminada.</exception>
      <exception cref="T:System.InvalidCastException">Se produce cuando se establece un valor y su objeto <see cref="T:System.Type" /> no coincide con <see cref="P:System.Data.DataColumn.DataType" />.</exception>
      <exception cref="T:System.Data.NoNullAllowedException">Se produce cuando se intenta insertar un valor null en una columna donde <see cref="P:System.Data.DataColumn.AllowDBNull" /> se establece en <see langword="false" />.</exception>
      <returns>
        <see cref="T:System.Object" /> que contiene los datos.</returns>
    </member>
    <member name="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)">
      <summary>Obtiene la versión específica de datos almacenados en la columna con nombre.</summary>
      <param name="columnName">El nombre de la columna.</param>
      <param name="version">Uno de los valores de <see cref="T:System.Data.DataRowVersion" /> que especifica la versión de la fila que desea. Los valores posibles son <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> y <see langword="Proposed" />.</param>
      <exception cref="T:System.ArgumentException">No se puede encontrar la columna especificada mediante <paramref name="columnName" />.</exception>
      <exception cref="T:System.InvalidCastException">No coinciden los tipos de datos del valor y de la columna.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">La fila no tiene esta versión de datos.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Se ha eliminado la fila.</exception>
      <returns>
        <see cref="T:System.Object" /> que contiene los datos.</returns>
    </member>
    <member name="P:System.Data.DataRow.ItemArray">
      <summary>Obtiene o establece todos los valores de esta fila mediante una matriz.</summary>
      <exception cref="T:System.ArgumentException">La matriz es mayor que el número de columnas de la tabla.</exception>
      <exception cref="T:System.InvalidCastException">La propiedad <see cref="P:System.Data.DataColumn.DataType" /> de un valor de la matriz no coincide con su respectivo objeto <see cref="T:System.Data.DataColumn" />.</exception>
      <exception cref="T:System.Data.ConstraintException">Restricción interrumpida por una edición.</exception>
      <exception cref="T:System.Data.ReadOnlyException">Una edición ha intentado cambiar el valor de una columna de sólo lectura.</exception>
      <exception cref="T:System.Data.NoNullAllowedException">Una operación de edición ha intentado colocar un valor null en una columna en la que la propiedad <see cref="P:System.Data.DataColumn.AllowDBNull" /> del objeto <see cref="T:System.Data.DataColumn" /> es <see langword="false" />.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">La fila se ha eliminado.</exception>
      <returns>Matriz de tipo <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:System.Data.DataRow.RowError">
      <summary>Obtiene o establece la descripción de error personalizada para una fila.</summary>
      <returns>Texto que describe un error.</returns>
    </member>
    <member name="P:System.Data.DataRow.RowState">
      <summary>Obtiene el estado actual de la fila con respecto a su relación con la colección <see cref="T:System.Data.DataRowCollection" />.</summary>
      <returns>Uno de los valores de <see cref="T:System.Data.DataRowState" />.</returns>
    </member>
    <member name="P:System.Data.DataRow.Table">
      <summary>Obtiene el <see cref="T:System.Data.DataTable" /> para el que esta fila tiene un esquema.</summary>
      <returns>
        <see cref="T:System.Data.DataTable" /> al que pertenece esta fila.</returns>
    </member>
    <member name="T:System.Data.DataRowAction">
      <summary>Describe una acción realizada en un <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Add">
      <summary>Se ha agregado la fila a la tabla.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Change">
      <summary>La fila ha cambiado.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.ChangeCurrentAndOriginal">
      <summary>Se han cambiado las versiones original y actual de la fila.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.ChangeOriginal">
      <summary>Se ha cambiado la versión original de la fila.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Commit">
      <summary>Se han confirmado los cambios realizados en la fila.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Delete">
      <summary>Se ha eliminado la fila de la tabla.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Nothing">
      <summary>La fila no ha cambiado.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Rollback">
      <summary>Se ha deshecho el cambio más reciente en la fila.</summary>
    </member>
    <member name="T:System.Data.DataRowBuilder">
      <summary>El tipo <see langword="DataRowBuilder" /> admite la infraestructura de .NET Framework y no está previsto su uso directo desde el código.</summary>
    </member>
    <member name="T:System.Data.DataRowChangeEventArgs">
      <summary>Proporciona datos para los eventos <see cref="E:System.Data.DataTable.RowChanged" />, <see cref="E:System.Data.DataTable.RowChanging" />, <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /> y <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" />.</summary>
    </member>
    <member name="M:System.Data.DataRowChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataRowAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataRowChangeEventArgs" />.</summary>
      <param name="row">
        <see cref="T:System.Data.DataRow" /> en la que se está produciendo una acción.</param>
      <param name="action">Uno de los valores de <see cref="T:System.Data.DataRowAction" />.</param>
    </member>
    <member name="P:System.Data.DataRowChangeEventArgs.Action">
      <summary>Obtiene la acción que se ha producido en <see cref="T:System.Data.DataRow" />.</summary>
      <returns>Uno de los valores de <see cref="T:System.Data.DataRowAction" />.</returns>
    </member>
    <member name="P:System.Data.DataRowChangeEventArgs.Row">
      <summary>Obtiene la fila sobre la que se ha producido una acción.</summary>
      <returns>
        <see cref="T:System.Data.DataRow" /> sobre el que se ha producido una acción.</returns>
    </member>
    <member name="T:System.Data.DataRowChangeEventHandler">
      <summary>Representa el método que controlará los eventos <see cref="E:System.Data.DataTable.RowChanging" />, <see cref="E:System.Data.DataTable.RowChanged" />, <see cref="E:System.Data.DataTable.RowDeleting" /> y <see cref="E:System.Data.DataTable.RowDeleted" /> de <see cref="T:System.Data.DataTable" />.</summary>
      <param name="sender">Origen del evento.</param>
      <param name="e">Objeto <see cref="T:System.Data.DataRowChangeEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="T:System.Data.DataRowCollection">
      <summary>Representa una colección de filas para un <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataRowCollection.Add(System.Data.DataRow)">
      <summary>Agrega el <see cref="T:System.Data.DataRow" /> especificado al objeto <see cref="T:System.Data.DataRowCollection" />.</summary>
      <param name="row">
        <see cref="T:System.Data.DataRow" /> que se va a agregar.</param>
      <exception cref="T:System.ArgumentNullException">La fila es nula.</exception>
      <exception cref="T:System.ArgumentException">La fila pertenece a otra tabla o ya pertenece a ésta.</exception>
      <exception cref="T:System.Data.ConstraintException">La adición invalida una restricción.</exception>
      <exception cref="T:System.Data.NoNullAllowedException">La adición intenta colocar un valor nulo en <see cref="T:System.Data.DataColumn" /> donde <see cref="P:System.Data.DataColumn.AllowDBNull" /> sea falso.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Add(System.Object[])">
      <summary>Crea una fila mediante los valores especificados y la agrega a <see cref="T:System.Data.DataRowCollection" />.</summary>
      <param name="values">Matriz de valores que se utiliza para crear la nueva fila.</param>
      <exception cref="T:System.ArgumentException">La matriz es mayor que el número de columnas de la tabla.</exception>
      <exception cref="T:System.InvalidCastException">Un valor no coincide con su tipo de columna respectivo.</exception>
      <exception cref="T:System.Data.ConstraintException">La adición de la fila invalida una restricción.</exception>
      <exception cref="T:System.Data.NoNullAllowedException">Se ha intentado colocar un valor null en una columna en la que <see cref="P:System.Data.DataColumn.AllowDBNull" /> es false.</exception>
      <returns>Ninguno.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.Clear">
      <summary>Borra todas las filas de la colección.</summary>
      <exception cref="T:System.Data.InvalidConstraintException">Se fuerza un <see cref="T:System.Data.ForeignKeyConstraint" /> en <see cref="T:System.Data.DataRowCollection" />.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Contains(System.Object)">
      <summary>Obtiene un valor que indica si la clave principal de cualquier fila de la colección contiene el valor especificado.</summary>
      <param name="key">Valor de la clave principal que se va a comprobar.</param>
      <exception cref="T:System.Data.MissingPrimaryKeyException">La tabla no contiene ninguna clave principal.</exception>
      <returns>
        <see langword="true" /> si la colección contiene un <see cref="T:System.Data.DataRow" /> con el valor de clave principal especificado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.Contains(System.Object[])">
      <summary>Obtiene un valor que indica si las columnas de clave principal de cualquier fila de la colección contienen los valores especificados en la matriz de objetos.</summary>
      <param name="keys">Matriz de valores de clave principal que se va a comprobar.</param>
      <exception cref="T:System.Data.MissingPrimaryKeyException">La tabla no contiene ninguna clave principal.</exception>
      <returns>
        <see langword="true" /> si <see cref="T:System.Data.DataRowCollection" /> contiene un <see cref="T:System.Data.DataRow" /> con los valores de clave especificados; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copia todos los objetos <see cref="T:System.Data.DataRow" /> de esta colección en la matriz especificada, a partir del índice indicado de la matriz de destino.</summary>
      <param name="ar">Matriz unidimensional que constituye el destino de los elementos copiados desde <see langword="DataRowCollection" />. La matriz debe tener una indización de base cero.</param>
      <param name="index">Índice de base cero de la matriz donde comienza la copia.</param>
    </member>
    <member name="M:System.Data.DataRowCollection.CopyTo(System.Data.DataRow[],System.Int32)">
      <summary>Copia todos los objetos <see cref="T:System.Data.DataRow" /> de esta colección en la matriz especificada, a partir del índice indicado de la matriz de destino.</summary>
      <param name="array">Matriz unidimensional que constituye el destino de los elementos copiados desde <see langword="DataRowCollection" />. La matriz debe tener una indización de base cero.</param>
      <param name="index">Índice de base cero de la matriz donde comienza la copia.</param>
    </member>
    <member name="M:System.Data.DataRowCollection.Find(System.Object)">
      <summary>Obtiene la fila especificada por el valor de clave principal.</summary>
      <param name="key">Valor de clave principal del <see cref="T:System.Data.DataRow" /> que se desea buscar.</param>
      <exception cref="T:System.Data.MissingPrimaryKeyException">La tabla no contiene ninguna clave principal.</exception>
      <returns>Objeto <see cref="T:System.Data.DataRow" /> que contiene el valor de clave principal especificado; de lo contrario, un valor null si el valor de clave principal no existe en la colección <see cref="T:System.Data.DataRowCollection" />.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.Find(System.Object[])">
      <summary>Obtiene la fila que contiene los valores de clave principal especificados.</summary>
      <param name="keys">Matriz de valores de clave principal que se desea buscar. El tipo de la matriz es <see langword="Object" />.</param>
      <exception cref="T:System.IndexOutOfRangeException">Ninguna fila corresponde a este valor de índice.</exception>
      <exception cref="T:System.Data.MissingPrimaryKeyException">La tabla no contiene ninguna clave principal.</exception>
      <returns>Un objeto <see cref="T:System.Data.DataRow" /> que contiene los valores de clave principal especificados; de lo contrario, un valor null si el valor de clave principal no existe en la colección <see cref="T:System.Data.DataRowCollection" />.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.GetEnumerator">
      <summary>Obtiene una interfaz <see cref="T:System.Collections.IEnumerator" /> para esta colección.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> para esta colección.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.IndexOf(System.Data.DataRow)">
      <summary>Obtiene el índice del objeto <see cref="T:System.Data.DataRow" /> especificado.</summary>
      <param name="row">
        <see langword="DataRow" /> que se va a buscar.</param>
      <returns>Índice de base cero de la fila, o -1 si la fila no se encuentra en la colección.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)">
      <summary>Inserta una nueva fila en la colección en la ubicación especificada.</summary>
      <param name="row">
        <see cref="T:System.Data.DataRow" /> que se va a agregar.</param>
      <param name="pos">La ubicación (basado en cero) en la colección donde desea agregar <see langword="DataRow" />.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="pos" /> es menor que 0.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)">
      <summary>Quita el objeto <see cref="T:System.Data.DataRow" /> especificado de la colección.</summary>
      <param name="row">
        <see cref="T:System.Data.DataRow" /> que se va a quitar.</param>
    </member>
    <member name="M:System.Data.DataRowCollection.RemoveAt(System.Int32)">
      <summary>Quita la fila de la colección en el índice especificado.</summary>
      <param name="index">Índice de la fila que se va a quitar.</param>
    </member>
    <member name="P:System.Data.DataRowCollection.Count">
      <summary>Obtiene el número total de objetos <see cref="T:System.Data.DataRow" /> de esta colección.</summary>
      <returns>Número total de objetos <see cref="T:System.Data.DataRow" /> de esta colección.</returns>
    </member>
    <member name="P:System.Data.DataRowCollection.Item(System.Int32)">
      <summary>Obtiene la fila en el índice especificado.</summary>
      <param name="index">Índice de base cero de la fila que se va a devolver.</param>
      <exception cref="T:System.IndexOutOfRangeException">El valor de índice es mayor que el número de elementos de la colección.</exception>
      <returns>Objeto <see cref="T:System.Data.DataRow" /> especificado.</returns>
    </member>
    <member name="T:System.Data.DataRowComparer">
      <summary>Devuelve una instancia singleton de la clase <see cref="T:System.Data.DataRowComparer`1" />.</summary>
    </member>
    <member name="P:System.Data.DataRowComparer.Default">
      <summary>Obtiene una instancia singleton de <see cref="T:System.Data.DataRowComparer`1" />. Esta propiedad es de sólo lectura.</summary>
      <returns>Instancia de un objeto <see cref="T:System.Data.DataRowComparer`1" />.</returns>
    </member>
    <member name="T:System.Data.DataRowComparer`1">
      <summary>Compara si dos objetos <see cref="T:System.Data.DataRow" /> son equivalentes mediante la comparación basada en valores.</summary>
      <typeparam name="TRow">Tipo de objetos que se van a comparar, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="M:System.Data.DataRowComparer`1.Equals(`0,`0)">
      <summary>Compara dos objetos <see cref="T:System.Data.DataRow" /> mediante una comparación basada en valores, columna por columna.</summary>
      <param name="leftRow">Primer objeto <see cref="T:System.Data.DataRow" /> que se va a comparar.</param>
      <param name="rightRow">Segundo objeto <see cref="T:System.Data.DataRow" /> que se va a comparar.</param>
      <exception cref="T:System.ArgumentNullException">Uno o los dos objetos <see cref="T:System.Data.DataRow" /> de origen son <see langword="null" />.</exception>
      <returns>Es <see langword="true" /> si los dos objetos <see cref="T:System.Data.DataRow" /> tienen conjuntos ordenados de valores de columna que son iguales; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRowComparer`1.GetHashCode(`0)">
      <summary>Devuelve un código hash para el objeto <see cref="T:System.Data.DataRow" /> especificado.</summary>
      <param name="row">Objeto <see cref="T:System.Data.DataRow" /> a partir del que se calcula el código hash.</param>
      <exception cref="T:System.ArgumentException">Los objetos <see cref="T:System.Data.DataRow" /> de origen no pertenecen a <see cref="T:System.Data.DataTable" />.</exception>
      <exception cref="T:System.ArgumentNullException">Los objetos <see cref="T:System.Data.DataRow" /> de origen son <see langword="null" />.</exception>
      <returns>Valor <see cref="T:System.Int32" /> que representa el código hash de la fila.</returns>
    </member>
    <member name="P:System.Data.DataRowComparer`1.Default">
      <summary>Obtiene una instancia singleton de <see cref="T:System.Data.DataRowComparer`1" />. Esta propiedad es de sólo lectura.</summary>
      <returns>Instancia de un objeto <see cref="T:System.Data.DataRowComparer`1" />.</returns>
    </member>
    <member name="T:System.Data.DataRowExtensions">
      <summary>Define los métodos de extensión para la clase <see cref="T:System.Data.DataRow" />. Se trata de una clase estática.</summary>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)">
      <summary>Proporciona acceso fuertemente tipado a cada uno de los valores de columna de la fila especificada. El método <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" /> también admite tipos que aceptan valores NULL.</summary>
      <param name="row">Objeto <see cref="T:System.Data.DataRow" /> de entrada, que actúa como la instancia de <see langword="this" /> del método de extensión.</param>
      <param name="column">Objeto <see cref="T:System.Data.DataColumn" /> de entrada que especifica la columna de la que devolver el valor.</param>
      <typeparam name="T">Parámetro genérico que especifica el tipo devuelto de la columna.</typeparam>
      <exception cref="T:System.InvalidCastException">El tipo de valor de la columna subyacente no pudo convertirse en el tipo especificado por el parámetro genérico, <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">La columna especificada por <paramref name="column" /> no aparece en la <see cref="T:System.Data.DataTable" /> de la que forma parte <see cref="T:System.Data.DataRow" />.</exception>
      <exception cref="T:System.NullReferenceException">Se ha asignado un valor null a un tipo que no acepta valores NULL.</exception>
      <returns>Valor de tipo <paramref name="T" /> del objeto <see cref="T:System.Data.DataColumn" /> especificado por <paramref name="column" />.</returns>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary>Proporciona acceso fuertemente tipado a cada uno de los valores de columna de la fila especificada. El método <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" /> también admite tipos que aceptan valores NULL.</summary>
      <param name="row">Objeto <see cref="T:System.Data.DataRow" /> de entrada, que actúa como la instancia de <see langword="this" /> del método de extensión.</param>
      <param name="column">Objeto <see cref="T:System.Data.DataColumn" /> de entrada que especifica la columna de la que devolver el valor.</param>
      <param name="version">Enumeración <see cref="T:System.Data.DataRowVersion" /> que especifica la versión del valor de columna que debe devolverse, como la versión <see langword="Current" /> o <see langword="Original" />.</param>
      <typeparam name="T">Parámetro genérico que especifica el tipo devuelto de la columna.</typeparam>
      <exception cref="T:System.InvalidCastException">El tipo de valor de la columna subyacente no pudo convertirse en el tipo especificado por el parámetro genérico, <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">La columna especificada por <paramref name="column" /> no existe en la <see cref="T:System.Data.DataTable" /> de la que forma parte <see cref="T:System.Data.DataRow" />.</exception>
      <exception cref="T:System.NullReferenceException">Se ha asignado un valor null a un tipo que no acepta valores NULL.</exception>
      <returns>Valor de tipo <paramref name="T" /> del objeto <see cref="T:System.Data.DataColumn" /> especificado por <paramref name="column" /> y <paramref name="version" />.</returns>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)">
      <summary>Proporciona acceso fuertemente tipado a cada uno de los valores de columna de la fila especificada. El método <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" /> también admite tipos que aceptan valores NULL.</summary>
      <param name="row">Objeto <see cref="T:System.Data.DataRow" /> de entrada, que actúa como la instancia de <see langword="this" /> del método de extensión.</param>
      <param name="columnIndex">Índice de la columna.</param>
      <typeparam name="T">Parámetro genérico que especifica el tipo devuelto de la columna.</typeparam>
      <exception cref="T:System.InvalidCastException">El tipo de valor de la columna subyacente no pudo convertirse en el tipo especificado por el parámetro genérico, <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">La columna especificada por <paramref name="ordinal" /> no existe en la <see cref="T:System.Data.DataTable" /> de la que forma parte <see cref="T:System.Data.DataRow" />.</exception>
      <exception cref="T:System.NullReferenceException">Se ha asignado un valor null a un tipo que no acepta valores NULL.</exception>
      <returns>Valor de tipo <paramref name="T" /> del objeto <see cref="T:System.Data.DataColumn" /> especificado por <paramref name="columnIndex" />.</returns>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
      <summary>Proporciona acceso fuertemente tipado a cada uno de los valores de columna de la fila especificada. El método <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" /> también admite tipos que aceptan valores NULL.</summary>
      <param name="row">Objeto <see cref="T:System.Data.DataRow" /> de entrada, que actúa como la instancia de <see langword="this" /> del método de extensión.</param>
      <param name="columnIndex">Ordinal de base cero de la columna de la que va a devolverse el valor.</param>
      <param name="version">Enumeración <see cref="T:System.Data.DataRowVersion" /> que especifica la versión del valor de columna que debe devolverse, como la versión <see langword="Current" /> o <see langword="Original" />.</param>
      <typeparam name="T">Parámetro genérico que especifica el tipo devuelto de la columna.</typeparam>
      <exception cref="T:System.InvalidCastException">El tipo de valor de la columna subyacente no pudo convertirse en el tipo especificado por el parámetro genérico, <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">La columna especificada por <paramref name="ordinal" /> no existe en la <see cref="T:System.Data.DataTable" /> de la que forma parte <see cref="T:System.Data.DataRow" />.</exception>
      <exception cref="T:System.NullReferenceException">Se ha asignado un valor null a un tipo que no acepta valores NULL.</exception>
      <returns>Valor de tipo <paramref name="T" /> del objeto <see cref="T:System.Data.DataColumn" /> especificado por <paramref name="ordinal" /> y <paramref name="version" />.</returns>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)">
      <summary>Proporciona acceso fuertemente tipado a cada uno de los valores de columna de la fila especificada. El método <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" /> también admite tipos que aceptan valores NULL.</summary>
      <param name="row">Objeto <see cref="T:System.Data.DataRow" /> de entrada, que actúa como la instancia de <see langword="this" /> del método de extensión.</param>
      <param name="columnName">Nombre de la columna de la que se va a devolver el valor.</param>
      <typeparam name="T">Parámetro genérico que especifica el tipo devuelto de la columna.</typeparam>
      <exception cref="T:System.InvalidCastException">El tipo de valor de la columna subyacente no pudo convertirse en el tipo especificado por el parámetro genérico, <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">La columna especificada por <paramref name="columnName" /> no aparece en la <see cref="T:System.Data.DataTable" /> de la que forma parte <see cref="T:System.Data.DataRow" />.</exception>
      <exception cref="T:System.NullReferenceException">Se asignó un valor <see langword="null" /> a un tipo que no acepta valores NULL.</exception>
      <returns>Valor de tipo <paramref name="T" /> del objeto <see cref="T:System.Data.DataColumn" /> especificado por <paramref name="columnName" />.</returns>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
      <summary>Proporciona acceso fuertemente tipado a cada uno de los valores de columna de la fila especificada. El método <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" /> también admite tipos que aceptan valores NULL.</summary>
      <param name="row">Objeto <see cref="T:System.Data.DataRow" /> de entrada, que actúa como la instancia de <see langword="this" /> del método de extensión.</param>
      <param name="columnName">Nombre de la columna de la que se va a devolver el valor.</param>
      <param name="version">Enumeración <see cref="T:System.Data.DataRowVersion" /> que especifica la versión del valor de columna que debe devolverse, como la versión <see langword="Current" /> o <see langword="Original" />.</param>
      <typeparam name="T">Parámetro genérico que especifica el tipo devuelto de la columna.</typeparam>
      <exception cref="T:System.InvalidCastException">El tipo de valor de la columna subyacente no pudo convertirse en el tipo especificado por el parámetro genérico, <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">La columna especificada por <paramref name="columnName" /> no existe en la <see cref="T:System.Data.DataTable" /> de la que forma parte <see cref="T:System.Data.DataRow" />.</exception>
      <exception cref="T:System.NullReferenceException">Se ha asignado un valor null a un tipo que no acepta valores NULL.</exception>
      <returns>Valor de tipo <paramref name="T" /> del objeto <see cref="T:System.Data.DataColumn" /> especificado por <paramref name="columnName" /> y <paramref name="version" />.</returns>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)">
      <summary>Establece un nuevo valor para la columna especificada en <see cref="T:System.Data.DataRow" />. El método <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" /> también admite tipos que aceptan valores NULL.</summary>
      <param name="row">Objeto <see cref="T:System.Data.DataRow" /> de entrada, que actúa como la instancia de <see langword="this" /> del método de extensión.</param>
      <param name="column">La entrada <see cref="T:System.Data.DataColumn" /> especifica qué valor de fila debe recuperarse.</param>
      <param name="value">Nuevo valor de fila de la columna especificada, de tipo <paramref name="T" />.</param>
      <typeparam name="T">Parámetro genérico que especifica el tipo de valor de la columna.</typeparam>
      <exception cref="T:System.ArgumentException">No se puede encontrar la columna especificada mediante <paramref name="column" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="column" /> es null.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Se produce al intentar establecer un valor en una fila eliminada.</exception>
      <exception cref="T:System.InvalidCastException">El tipo de valor de la columna subyacente no pudo convertirse en el tipo especificado por el parámetro genérico, <paramref name="T" />.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)">
      <summary>Establece un nuevo valor para la columna especificada en la <see cref="T:System.Data.DataRow" /> donde se llama al método. El método <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" /> también admite tipos que aceptan valores NULL.</summary>
      <param name="row">Objeto <see cref="T:System.Data.DataRow" /> de entrada, que actúa como la instancia de <see langword="this" /> del método de extensión.</param>
      <param name="columnIndex">Ordinal de base cero de la columna cuyo valor va a establecerse.</param>
      <param name="value">Nuevo valor de fila de la columna especificada, de tipo <paramref name="T" />.</param>
      <typeparam name="T">Parámetro genérico que especifica el tipo de valor de la columna.</typeparam>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Se produce al intentar establecer un valor en una fila eliminada.</exception>
      <exception cref="T:System.IndexOutOfRangeException">El argumento <paramref name="ordinal" /> está fuera de intervalo.</exception>
      <exception cref="T:System.InvalidCastException">El tipo de valor de la columna subyacente no pudo convertirse en el tipo especificado por el parámetro genérico, <paramref name="T" />.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)">
      <summary>Establece un nuevo valor para la columna especificada en <see cref="T:System.Data.DataRow" />. El método <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" /> también admite tipos que aceptan valores NULL.</summary>
      <param name="row">Objeto <see cref="T:System.Data.DataRow" /> de entrada, que actúa como la instancia de <see langword="this" /> del método de extensión.</param>
      <param name="columnName">Nombre de la columna cuyo valor va a establecerse.</param>
      <param name="value">Nuevo valor de fila de la columna especificada, de tipo <paramref name="T" />.</param>
      <typeparam name="T">Parámetro genérico que especifica el tipo de valor de la columna.</typeparam>
      <exception cref="T:System.ArgumentException">No se puede encontrar la columna especificada mediante <paramref name="columnName" />.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Se produce al intentar establecer un valor en una fila eliminada.</exception>
      <exception cref="T:System.InvalidCastException">El tipo de valor de la columna subyacente no pudo convertirse en el tipo especificado por el parámetro genérico, <paramref name="T" />.</exception>
    </member>
    <member name="T:System.Data.DataRowState">
      <summary>Obtiene el estado de un objeto <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Added">
      <summary>La fila se ha agregado a <see cref="T:System.Data.DataRowCollection" /> y no se ha llamado a <see cref="M:System.Data.DataRow.AcceptChanges" />.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Deleted">
      <summary>La fila se ha eliminado mediante el método <see cref="M:System.Data.DataRow.Delete" /> del <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Detached">
      <summary>La fila se ha creado pero no forma parte de ninguna <see cref="T:System.Data.DataRowCollection" />. <see cref="T:System.Data.DataRow" /> se encuentra en este estado inmediatamente después de haber sido creado y antes de que se agregue a una colección, o bien si se ha quitado de una colección.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Modified">
      <summary>La fila se ha modificado y no se ha llamado a <see cref="M:System.Data.DataRow.AcceptChanges" />.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Unchanged">
      <summary>La fila no ha cambiado desde la última vez que se llamó a <see cref="M:System.Data.DataRow.AcceptChanges" />.</summary>
    </member>
    <member name="T:System.Data.DataRowVersion">
      <summary>Describe la versión de <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Current">
      <summary>La fila contiene sus valores actuales.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Default">
      <summary>Versión predeterminada de <see cref="T:System.Data.DataRowState" />. Para un valor de <see langword="DataRowState" /> igual a <see langword="Added" />, <see langword="Modified" /> o <see langword="Deleted" />, la versión predeterminada es <see langword="Current" />. Para un valor <see cref="T:System.Data.DataRowState" /> de <see langword="Detached" />, la versión es <see langword="Proposed" />.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Original">
      <summary>La fila contiene sus valores originales.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Proposed">
      <summary>La fila contiene un valor propuesto.</summary>
    </member>
    <member name="T:System.Data.DataRowView">
      <summary>Representa una vista personalizada de un elemento <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="E:System.Data.DataRowView.PropertyChanged">
      <summary>Evento que se provoca cuando se cambia una propiedad de <see cref="T:System.Data.DataRowView" />.</summary>
    </member>
    <member name="M:System.Data.DataRowView.BeginEdit">
      <summary>Inicia un procedimiento de edición.</summary>
    </member>
    <member name="M:System.Data.DataRowView.CancelEdit">
      <summary>Cancela un procedimiento de edición.</summary>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation)">
      <summary>Devuelve un <see cref="T:System.Data.DataView" /> correspondiente al <see cref="T:System.Data.DataTable" /> secundario con el <see cref="T:System.Data.DataRelation" /> secundario especificado.</summary>
      <param name="relation">Objeto <see cref="T:System.Data.DataRelation" />.</param>
      <returns>
        <see cref="T:System.Data.DataView" /> correspondiente al <see cref="T:System.Data.DataTable" /> secundario.</returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation,System.Boolean)">
      <summary>Devuelve un elemento <see cref="T:System.Data.DataView" /> correspondiente al elemento <see cref="T:System.Data.DataTable" /> secundario con el <see cref="T:System.Data.DataRelation" /> especificado y el elemento primario.</summary>
      <param name="relation">Objeto <see cref="T:System.Data.DataRelation" />.</param>
      <param name="followParent">Objeto primario .</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="relation" /> es <see langword="null" />.</exception>
      <returns>
        <see cref="T:System.Data.DataView" /> para el <see cref="T:System.Data.DataTable" /> secundario.</returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.String)">
      <summary>Devuelve un <see cref="T:System.Data.DataView" /> correspondiente al <see cref="T:System.Data.DataTable" /> secundario con el <see cref="T:System.Data.DataRelation" /> secundario especificado.</summary>
      <param name="relationName">Cadena que contiene el nombre de <see cref="T:System.Data.DataRelation" />.</param>
      <returns>
        <see cref="T:System.Data.DataView" /> correspondiente al <see cref="T:System.Data.DataTable" /> secundario.</returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.String,System.Boolean)">
      <summary>Devuelve un <see cref="T:System.Data.DataView" /> correspondiente al <see cref="T:System.Data.DataTable" /> secundario con el nombre <see cref="T:System.Data.DataRelation" /> especificado y el primario.</summary>
      <param name="relationName">Cadena que contiene el nombre de <see cref="T:System.Data.DataRelation" />.</param>
      <param name="followParent">
        <see langword="true" /> para mantener la vista secundaria creada en sincronización con la primaria; en caso contrario, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="relation" /> es <see langword="null" />.</exception>
      <returns>
        <see cref="T:System.Data.DataView" /> correspondiente al <see cref="T:System.Data.DataTable" /> secundario.</returns>
    </member>
    <member name="M:System.Data.DataRowView.Delete">
      <summary>Elimina una fila.</summary>
    </member>
    <member name="M:System.Data.DataRowView.EndEdit">
      <summary>Confirma los cambios en el <see cref="T:System.Data.DataRow" /> subyacente y finaliza la sesión de edición que se inició con <see cref="M:System.Data.DataRowView.BeginEdit" />.  Use <see cref="M:System.Data.DataRowView.CancelEdit" /> para descartar los cambios realizados en <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="M:System.Data.DataRowView.Equals(System.Object)">
      <summary>Obtiene un valor que indica si la clase <see cref="T:System.Data.DataRowView" /> actual es idéntica al objeto especificado.</summary>
      <param name="other">
        <see cref="T:System.Object" /> que se desea comparar.</param>
      <returns>
        <see langword="true" /> si <paramref name="object" /> es un objeto <see cref="T:System.Data.DataRowView" /> y devuelve la misma fila que el objeto <see cref="T:System.Data.DataRowView" /> actual; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.GetHashCode">
      <summary>Devuelve el código hash del objeto <see cref="T:System.Data.DataRow" />.</summary>
      <returns>Un código hash de entero 1 de 32 bits con signo que representa el valor booleano <see langword="true" /> si el valor de esta instancia es distinto de cero; en caso contrario, entero 0 que representa el valor booleano <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary>Devuelve una colección de atributos personalizados para esta instancia de un componente.</summary>
      <returns>Un AttributeCollection que contiene los atributos para este objeto.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary>Devuelve el nombre de clase de esta instancia de un componente.</summary>
      <returns>Nombre de clase de esta instancia de un componente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary>Devuelve los eventos para esta instancia de un componente.</summary>
      <returns>Nombre de esta instancia de un componente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary>Devuelve un convertidor de tipos para instancia de un componente.</summary>
      <returns>Convertidor de tipos para esta instancia de un componente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary>Devuelve el evento predeterminado para esta instancia de un componente.</summary>
      <returns>Evento predeterminado para esta instancia de un componente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary>Devuelve la propiedad predeterminada para esta instancia de un componente.</summary>
      <returns>Propiedad predeterminada para esta instancia de un componente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary>Devuelve un editor del tipo especificado para esta instancia de un componente.</summary>
      <param name="editorBaseType">
        <see cref="T:System.Type" /> que representa el editor para este objeto.</param>
      <returns>Un <see cref="T:System.Object" /> del tipo especificado que es el editor para este objeto o <see langword="null" /> si no se encuentra el editor.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary>Devuelve los eventos para esta instancia de un componente.</summary>
      <returns>Eventos para esta instancia de componente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary>Devuelve los eventos para esta instancia de un componente con los atributos especificados.</summary>
      <param name="attributes">Atributos.</param>
      <returns>Eventos para esta instancia de componente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary>Devuelve las propiedades para esta instancia de un componente.</summary>
      <returns>Propiedades para esta instancia de componente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary>Devuelve las propiedades para esta instancia de un componente con los atributos especificados.</summary>
      <param name="attributes">Atributos.</param>
      <returns>Propiedades para esta instancia de componente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary>Devuelve un objeto que contiene la propiedad que describe el descriptor de propiedades especificado.</summary>
      <param name="pd">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> que representa la propiedad cuyo propietario se va a buscar.</param>
      <returns>
        <see cref="T:System.Object" /> que representa el propietario de la propiedad especificada.</returns>
    </member>
    <member name="P:System.Data.DataRowView.DataView">
      <summary>Obtiene el <see cref="T:System.Data.DataView" /> al que pertenece esta fila.</summary>
      <returns>
        <see langword="DataView" /> al que pertenece esta fila.</returns>
    </member>
    <member name="P:System.Data.DataRowView.IsEdit">
      <summary>Indica si la fila está en modo de edición.</summary>
      <returns>
        <see langword="true" /> si la fila se encuentra en modo de edición; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.IsNew">
      <summary>Indica si un <see cref="T:System.Data.DataRowView" /> es nuevo.</summary>
      <returns>
        <see langword="true" /> si la fila es nueva; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.Item(System.Int32)">
      <summary>Obtiene o establece el valor de una columna especificada.</summary>
      <param name="ndx">Índice de la columna.</param>
      <exception cref="T:System.Data.DataException">
        <see cref="P:System.Data.DataRowView.DataView" /> no permite editar y <see cref="T:System.Data.DataRowView" /> no es nuevo.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Ninguna columna corresponde a este valor de índice.</exception>
      <returns>Valor de la columna.</returns>
    </member>
    <member name="P:System.Data.DataRowView.Item(System.String)">
      <summary>Obtiene o establece el valor de una columna especificada.</summary>
      <param name="property">Cadena que contiene la columna especificada.</param>
      <exception cref="T:System.ArgumentException">No se ha encontrado ninguna columna con el nombre o la relación especificados.
        
o bien

<see cref="P:System.Data.DataRowView.DataView" /> no permite editar y <see cref="T:System.Data.DataRowView" /> no es nuevo.</exception>
      <exception cref="T:System.Data.DataException">
        <paramref name="property" /> sin coincidencia al establecer un valor.</exception>
      <returns>Valor de la columna.</returns>
    </member>
    <member name="P:System.Data.DataRowView.Row">
      <summary>Obtiene el <see cref="T:System.Data.DataRow" /> que se está viendo.</summary>
      <returns>
        <see cref="T:System.Data.DataRow" /> que está viendo <see cref="T:System.Data.DataRowView" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.RowVersion">
      <summary>Obtiene la descripción de la versión actual de <see cref="T:System.Data.DataRow" />.</summary>
      <returns>Uno de los valores de <see cref="T:System.Data.DataRowVersion" />. Los valores posibles para la propiedad <see cref="P:System.Data.DataRowView.RowVersion" /> son <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> y <see langword="Proposed" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Error">
      <summary>Obtiene un mensaje en el que se describen los errores de validación del objeto.</summary>
      <returns>Error de validación en el objeto.</returns>
    </member>
    <member name="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Item(System.String)">
      <summary>Obtiene el mensaje de error correspondiente a la propiedad con el nombre especificado.</summary>
      <param name="colName">Nombre de la propiedad cuyo mensaje de error se va a obtener.</param>
      <returns>Mensaje de error correspondiente a la propiedad. El valor predeterminado es una cadena vacía ("").</returns>
    </member>
    <member name="T:System.Data.DataSet">
      <summary>Representa una caché de datos en memoria.</summary>
    </member>
    <member name="E:System.Data.DataSet.Initialized">
      <summary>Se produce después de inicializar <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="E:System.Data.DataSet.MergeFailed">
      <summary>Se produce cuando unos <see cref="T:System.Data.DataRow" /> de origen y de destino tienen el mismo valor de clave principal y <see cref="P:System.Data.DataSet.EnforceConstraints" /> se establece en true.</summary>
    </member>
    <member name="M:System.Data.DataSet.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de una clase <see cref="T:System.Data.DataSet" /> que contiene la información de serialización y el contexto especificados.</summary>
      <param name="info">Los datos necesarios para serializar o deserializar un objeto.</param>
      <param name="context">Origen y destino de una secuencia de serialización dada.</param>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataSet" />.</summary>
      <param name="info">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Objeto <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
      <param name="ConstructSchema">Valor booleano.</param>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de una clase <see cref="T:System.Data.DataSet" /> con el nombre dado.</summary>
      <param name="dataSetName">Nombre del objeto <see cref="T:System.Data.DataSet" />.</param>
    </member>
    <member name="M:System.Data.DataSet.AcceptChanges">
      <summary>Confirma todos los cambios realizados en este <see cref="T:System.Data.DataSet" /> desde que se ha cargado o desde la última vez que se ha llamado a <see cref="M:System.Data.DataSet.AcceptChanges" />.</summary>
    </member>
    <member name="M:System.Data.DataSet.BeginInit">
      <summary>Activa la inicialización de un objeto <see cref="T:System.Data.DataSet" /> que se emplea en un formulario o que utiliza otro componente. La inicialización se produce en tiempo de ejecución.</summary>
    </member>
    <member name="M:System.Data.DataSet.Clear">
      <summary>Borra cualquier dato de <see cref="T:System.Data.DataSet" /> mediante el procedimiento de quitar todas las filas de todas las tablas.</summary>
    </member>
    <member name="M:System.Data.DataSet.Clone">
      <summary>Copia la estructura de <see cref="T:System.Data.DataSet" />, incluidos todos los esquemas, relaciones y restricciones de <see cref="T:System.Data.DataTable" />. No copia ningún dato.</summary>
      <returns>Nuevo <see cref="T:System.Data.DataSet" /> con el mismo esquema que el <see cref="T:System.Data.DataSet" /> actual, pero sin ningún dato.</returns>
    </member>
    <member name="M:System.Data.DataSet.Copy">
      <summary>Copia la estructura y los datos para este objeto <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Nuevo <see cref="T:System.Data.DataSet" /> con la misma estructura (esquemas, relaciones y restricciones de tabla) y datos que este <see cref="T:System.Data.DataSet" />.  
  
 <block subset="none" type="note"><para>  
 Si estas clases se han subclasificado, la copia también será de las mismas subclases.</para></block></returns>
    </member>
    <member name="M:System.Data.DataSet.CreateDataReader">
      <summary>Devuelve un objeto <see cref="T:System.Data.DataTableReader" /> con un conjunto de resultados por cada <see cref="T:System.Data.DataTable" />, siguiendo la misma secuencia con la que aparecen las tablas en la colección <see cref="P:System.Data.DataSet.Tables" />.</summary>
      <returns>Objeto <see cref="T:System.Data.DataTableReader" /> que contiene uno o varios conjuntos de resultados, que se corresponden con las instancias de <see cref="T:System.Data.DataTable" /> incluidas en el objeto <see cref="T:System.Data.DataSet" /> de origen.</returns>
    </member>
    <member name="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])">
      <summary>Devuelve un objeto <see cref="T:System.Data.DataTableReader" /> con un conjunto de resultados por cada <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTables">Matriz de objetos DataTable que proporciona el orden de los conjuntos de resultados que va a devolver el objeto <see cref="T:System.Data.DataTableReader" />.</param>
      <returns>Objeto <see cref="T:System.Data.DataTableReader" /> que contiene uno o varios conjuntos de resultados, que se corresponden con las instancias de <see cref="T:System.Data.DataTable" /> incluidas en el objeto <see cref="T:System.Data.DataSet" /> de origen. Los conjuntos de resultados devueltos siguen el orden especificado por el parámetro <paramref name="dataTables" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Determina la propiedad <see cref="P:System.Data.DataSet.SchemaSerializationMode" /> para un objeto <see cref="T:System.Data.DataSet" />.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con el que se invoca al constructor <see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> protegido de <see langword="DataSet" /> durante la deserialización en escenarios de comunicación remota.</param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> con el que se invoca al constructor <see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> protegido de <see langword="DataSet" /> durante la deserialización en escenarios de comunicación remota.</param>
      <returns>Enumeración <see cref="T:System.Data.SchemaSerializationMode" /> que indica si la información de esquema se ha omitido de la carga.</returns>
    </member>
    <member name="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Xml.XmlReader)">
      <summary>Determina la propiedad <see cref="P:System.Data.DataSet.SchemaSerializationMode" /> para un objeto <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader">Instancia de <see cref="T:System.Xml.XmlReader" /> que se pasa durante la deserialización del objeto <see cref="T:System.Data.DataSet" />.</param>
      <returns>Enumeración <see cref="T:System.Data.SchemaSerializationMode" /> que indica si la información de esquema se ha omitido de la carga.</returns>
    </member>
    <member name="M:System.Data.DataSet.EndInit">
      <summary>Finaliza la inicialización de un objeto <see cref="T:System.Data.DataSet" /> que se emplea en un formulario o que utiliza otro componente. La inicialización se produce en tiempo de ejecución.</summary>
    </member>
    <member name="M:System.Data.DataSet.GetChanges">
      <summary>Obtiene una copia del objeto <see cref="T:System.Data.DataSet" /> que contiene todos los cambios que se le han realizado desde que se cargó o se llamó a <see cref="M:System.Data.DataSet.AcceptChanges" /> por última vez.</summary>
      <returns>Copia de los cambios de este objeto <see cref="T:System.Data.DataSet" /> en el que puede que se hayan realizado acciones y, posteriormente, se hayan vuelto a combinar mediante el método <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. Si no se encuentran filas modificadas, el método devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
      <summary>Obtiene una copia del objeto <see cref="T:System.Data.DataSet" /> que contiene todos los cambios que se le han realizado desde la última vez que se cargó, o desde que se llamó a <see cref="M:System.Data.DataSet.AcceptChanges" />, filtrado por <see cref="T:System.Data.DataRowState" />.</summary>
      <param name="rowStates">Uno de los valores de <see cref="T:System.Data.DataRowState" />.</param>
      <returns>Copia filtrada del objeto <see cref="T:System.Data.DataSet" /> en el que es posible que se hayan llevado a cabo acciones y que, por consiguiente, se puede volver a combinar mediante <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. Si no se encuentran filas con el <see cref="T:System.Data.DataRowState" /> deseado, el método devolverá <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetDataSetSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary>Obtiene una copia de <see cref="T:System.Xml.Schema.XmlSchemaSet" /> para el conjunto de datos.</summary>
      <param name="schemaSet">Conjunto de esquemas especificado.</param>
      <returns>Copia de la clase <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Rellena un objeto de información de serialización con los datos necesarios para serializar <see cref="T:System.Data.DataSet" />.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos serializados asociados a la excepción <see cref="T:System.Data.DataSet" />.</param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene el origen y el destino de la secuencia serializada asociada a la <see cref="T:System.Data.DataSet" />.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="info" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.GetSchemaSerializable">
      <summary>Devuelve una instancia serializable de <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
      <returns>Instancia de <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetSerializationData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Deserializa los datos de la tabla a partir de la secuencia binaria o XML.</summary>
      <param name="info">Instancia de <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Contexto de transmisión por secuencias.</param>
    </member>
    <member name="M:System.Data.DataSet.GetXml">
      <summary>Devuelve la representación XML de los datos almacenados en <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Cadena que es una representación de los datos almacenados en <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetXmlSchema">
      <summary>Devuelve el esquema XML para la representación XML de los datos almacenados en <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Cadena que es el esquema XML para la representación XML de los datos almacenados en <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.HasChanges">
      <summary>Obtiene un valor que indica si <see cref="T:System.Data.DataSet" /> presenta cambios, incluyendo filas nuevas, eliminadas o modificadas.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Data.DataSet" /> presenta cambios; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.HasChanges(System.Data.DataRowState)">
      <summary>Obtiene un valor que indica si <see cref="T:System.Data.DataSet" /> presenta cambios, incluidas filas nuevas, eliminadas o modificadas, filtrados por <see cref="T:System.Data.DataRowState" />.</summary>
      <param name="rowStates">Uno de los valores de <see cref="T:System.Data.DataRowState" />.</param>
      <returns>
        <see langword="true" /> si <see cref="T:System.Data.DataSet" /> presenta cambios; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.IO.Stream,System.String[])">
      <summary>Aplica el esquema XML del objeto <see cref="T:System.IO.Stream" /> especificado al objeto <see cref="T:System.Data.DataSet" />.</summary>
      <param name="stream">Secuencia <see langword="Stream" /> desde la que se va a leer el esquema.</param>
      <param name="nsArray">Matriz de cadenas de identificador de recursos uniforme (URI) del espacio de nombres que se van a excluir de la deducción del esquema.</param>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.IO.TextReader,System.String[])">
      <summary>Aplica el esquema XML del objeto <see cref="T:System.IO.TextReader" /> especificado al objeto <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader">Secuencia <see langword="TextReader" /> desde la que se va a leer el esquema.</param>
      <param name="nsArray">Matriz de cadenas de identificador de recursos uniforme (URI) del espacio de nombres que se van a excluir de la deducción del esquema.</param>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.String,System.String[])">
      <summary>Aplica el esquema XML del archivo especificado al <see cref="T:System.Data.DataSet" />.</summary>
      <param name="fileName">Nombre del archivo (incluida la ruta) desde el que se va a leer el esquema.</param>
      <param name="nsArray">Matriz de cadenas de identificador de recursos uniforme (URI) del espacio de nombres que se van a excluir de la deducción del esquema.</param>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> no está establecido en <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.Xml.XmlReader,System.String[])">
      <summary>Aplica el esquema XML del objeto <see cref="T:System.Xml.XmlReader" /> especificado al objeto <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader">Secuencia <see langword="XMLReader" /> desde la que se va a leer el esquema.</param>
      <param name="nsArray">Matriz de cadenas de identificador de recursos uniforme (URI) del espacio de nombres que se van a excluir de la deducción del esquema.</param>
    </member>
    <member name="M:System.Data.DataSet.InitializeDerivedDataSet">
      <summary>Deserializa todos los datos de tablas del conjunto de datos a partir de la secuencia binaria o XML.</summary>
    </member>
    <member name="M:System.Data.DataSet.IsBinarySerialized(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inspecciona el formato de la representación serializada de <see langword="DataSet" />.</summary>
      <param name="info">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Objeto <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
      <returns>Es <see langword="true" /> si el objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> especificado representa un objeto <see langword="DataSet" /> serializado en su formato binario; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
      <summary>Rellena un objeto <see cref="T:System.Data.DataSet" /> de valores de un origen de datos utilizando la interfaz <see cref="T:System.Data.IDataReader" /> proporcionada, que usa una matriz de instancias de <see cref="T:System.Data.DataTable" /> para suministrar la información sobre el espacio de nombres y el esquema.</summary>
      <param name="reader">
        <see cref="T:System.Data.IDataReader" /> que proporciona uno o varios conjuntos de resultados.</param>
      <param name="loadOption">Valor de la enumeración <see cref="T:System.Data.LoadOption" /> que indica cómo se van a combinar las filas que ya se encuentran en las instancias de <see cref="T:System.Data.DataTable" />, incluidas en el objeto <see cref="T:System.Data.DataSet" />, con las filas de entrada con las que comparten la misma clave principal.</param>
      <param name="tables">Matriz de instancias de <see cref="T:System.Data.DataTable" /> de las que el método <see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])" /> recupera la información sobre el espacio de nombres y el nombre. Cada una de estas tablas debe ser un miembro de la colección <see cref="T:System.Data.DataTableCollection" /> que incluye este objeto <see cref="T:System.Data.DataSet" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
      <summary>Rellena un objeto <see cref="T:System.Data.DataSet" /> de valores de un origen de datos utilizando la interfaz <see cref="T:System.Data.IDataReader" /> proporcionada, que usa una matriz de instancias de <see cref="T:System.Data.DataTable" /> para suministrar la información sobre el espacio de nombres y el esquema.</summary>
      <param name="reader">
        <see cref="T:System.Data.IDataReader" /> que proporciona uno o varios conjuntos de resultados.</param>
      <param name="loadOption">Valor de la enumeración <see cref="T:System.Data.LoadOption" /> que indica cómo se van a combinar las filas que ya se encuentran en las instancias de <see cref="T:System.Data.DataTable" />, incluidas en el objeto <see cref="T:System.Data.DataSet" />, con las filas de entrada con las que comparten la misma clave principal.</param>
      <param name="errorHandler">Delegado <see cref="T:System.Data.FillErrorEventHandler" /> al que se va a llamar cuando se produzca un error mientras se cargan los datos.</param>
      <param name="tables">Matriz de instancias de <see cref="T:System.Data.DataTable" /> de las que el método <see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])" /> recupera la información sobre el espacio de nombres y el nombre.</param>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
      <summary>Rellena un objeto <see cref="T:System.Data.DataSet" /> de valores de un origen de datos utilizando la interfaz <see cref="T:System.Data.IDataReader" /> proporcionada, que usa una matriz de cadenas para suministrar los nombres para las tablas de <see langword="DataSet" />.</summary>
      <param name="reader">
        <see cref="T:System.Data.IDataReader" /> que proporciona uno o varios conjuntos de resultados.</param>
      <param name="loadOption">Valor de la enumeración <see cref="T:System.Data.LoadOption" /> que indica cómo se van a combinar las filas que ya se encuentran en las instancias de <see cref="T:System.Data.DataTable" />, incluidas en el objeto <see langword="DataSet" />, con las filas de entrada con las que comparten la misma clave principal.</param>
      <param name="tables">Matriz de cadenas de las que el método <see langword="Load" /> recupera la información sobre el nombre de tabla.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
      <summary>Combina una matriz de objetos <see cref="T:System.Data.DataRow" /> en el <see cref="T:System.Data.DataSet" /> actual.</summary>
      <param name="rows">Matriz de objetos <see langword="DataRow" /> que se va a combinar en el <see langword="DataSet" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
      <summary>Combina una matriz de objetos <see cref="T:System.Data.DataRow" /> en el <see cref="T:System.Data.DataSet" /> actual, conservando o descartando los cambios efectuados en el <see langword="DataSet" /> y controlando un esquema incompatible de acuerdo con los argumentos especificados.</summary>
      <param name="rows">Matriz de objetos <see cref="T:System.Data.DataRow" /> que se va a combinar en el <see langword="DataSet" />.</param>
      <param name="preserveChanges">
        <see langword="true" /> para conservar los cambios en el elemento <see langword="DataSet" />; de lo contrario, <see langword="false" />.</param>
      <param name="missingSchemaAction">Uno de los valores de <see cref="T:System.Data.MissingSchemaAction" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet)">
      <summary>Combina un objeto <see cref="T:System.Data.DataSet" /> especificado y su esquema en el objeto <see langword="DataSet" /> actual.</summary>
      <param name="dataSet">
        <see langword="DataSet" /> cuyos datos y esquema se van a combinar.</param>
      <exception cref="T:System.Data.ConstraintException">No se pueden habilitar una o más restricciones.</exception>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="dataSet" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
      <summary>Combina un <see cref="T:System.Data.DataSet" /> y su esquema en el <see langword="DataSet" /> actual, conservando o descartando cualquier cambio efectuado en este <see langword="DataSet" /> de acuerdo con el argumento especificado.</summary>
      <param name="dataSet">
        <see langword="DataSet" /> cuyos datos y esquema se van a combinar.</param>
      <param name="preserveChanges">
        <see langword="true" /> para conservar los cambios en el elemento <see langword="DataSet" /> actual; de lo contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
      <summary>Combina un <see cref="T:System.Data.DataSet" /> especificado y su esquema con el <see langword="DataSet" /> actual, conservando o descartando los cambios efectuados en el <see langword="DataSet" /> actual y controlando un esquema incompatible de acuerdo con los argumentos especificados.</summary>
      <param name="dataSet">
        <see langword="DataSet" /> cuyos datos y esquema se van a combinar.</param>
      <param name="preserveChanges">
        <see langword="true" /> para conservar los cambios en el elemento <see langword="DataSet" /> actual; de lo contrario, <see langword="false" />.</param>
      <param name="missingSchemaAction">Uno de los valores de <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="dataSet" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataTable)">
      <summary>Combina un objeto <see cref="T:System.Data.DataTable" /> especificado y su esquema en el objeto <see cref="T:System.Data.DataSet" /> actual.</summary>
      <param name="table">
        <see cref="T:System.Data.DataTable" /> cuyos datos y esquema se van a combinar.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="table" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
      <summary>Combina un <see cref="T:System.Data.DataTable" /> especificado y su esquema en el <see langword="DataSet" /> actual, conservando o descartando los cambios efectuados en el <see langword="DataSet" /> y controlando un esquema incompatible de acuerdo con los argumentos especificados.</summary>
      <param name="table">
        <see langword="DataTable" /> cuyos datos y esquema se van a combinar.</param>
      <param name="preserveChanges">Uno de los valores de <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <param name="missingSchemaAction">
        <see langword="true" /> para conservar los cambios en el elemento <see langword="DataSet" />; de lo contrario, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="dataSet" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Genera el evento <see cref="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />.</summary>
      <param name="pcevent">
        <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Data.DataSet.OnRemoveRelation(System.Data.DataRelation)">
      <summary>Se produce cuando se quita un objeto <see cref="T:System.Data.DataRelation" /> de un <see cref="T:System.Data.DataTable" />.</summary>
      <param name="relation">Objeto <see cref="T:System.Data.DataRelation" /> que se va a quitar.</param>
    </member>
    <member name="M:System.Data.DataSet.OnRemoveTable(System.Data.DataTable)">
      <summary>Se produce cuando se quita un <see cref="T:System.Data.DataTable" /> de un <see cref="T:System.Data.DataSet" />.</summary>
      <param name="table">Objeto <see cref="T:System.Data.DataTable" /> que se va a quitar.</param>
    </member>
    <member name="M:System.Data.DataSet.RaisePropertyChanging(System.String)">
      <summary>Envía una notificación que indica que se va a cambiar la propiedad especificada de <see cref="T:System.Data.DataSet" />.</summary>
      <param name="name">Nombre de la propiedad que se va a cambiar.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
      <summary>Lee los datos y el esquema XML en el objeto <see cref="T:System.Data.DataSet" /> mediante el objeto <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream">Objeto que deriva de <see cref="T:System.IO.Stream" />.</param>
      <returns>
        <see cref="T:System.Data.XmlReadMode" /> utilizado para leer los datos.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
      <summary>Lee el esquema y los datos XML del objeto <see cref="T:System.Data.DataSet" /> mediante el objeto <see cref="T:System.IO.Stream" /> y la enumeración <see cref="T:System.Data.XmlReadMode" /> especificados.</summary>
      <param name="stream">Objeto <see cref="T:System.IO.Stream" /> desde el que se va a leer.</param>
      <param name="mode">Uno de los valores de <see cref="T:System.Data.XmlReadMode" />.</param>
      <returns>
        <see langword="XmlReadMode" /> utilizado para leer los datos.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
      <summary>Lee los datos y el esquema XML en el objeto <see cref="T:System.Data.DataSet" /> mediante el objeto <see cref="T:System.IO.TextReader" /> especificado.</summary>
      <param name="reader">
        <see langword="TextReader" /> desde el que se van a leer el esquema y los datos.</param>
      <returns>
        <see cref="T:System.Data.XmlReadMode" /> utilizado para leer los datos.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
      <summary>Lee el esquema y los datos XML del objeto <see cref="T:System.Data.DataSet" /> mediante el objeto <see cref="T:System.IO.TextReader" /> y la enumeración <see cref="T:System.Data.XmlReadMode" /> especificados.</summary>
      <param name="reader">Objeto <see cref="T:System.IO.TextReader" /> desde el que se va a leer.</param>
      <param name="mode">Uno de los valores de <see cref="T:System.Data.XmlReadMode" />.</param>
      <returns>
        <see langword="XmlReadMode" /> utilizado para leer los datos.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.String)">
      <summary>Lee el esquema y los datos XML del <see cref="T:System.Data.DataSet" /> mediante el archivo especificado.</summary>
      <param name="fileName">Nombre del archivo (incluida la ruta) desde el que se va a leer.</param>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> no está establecido en <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</exception>
      <returns>
        <see langword="XmlReadMode" /> utilizado para leer los datos.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
      <summary>Lee el esquema y los datos XML del <see cref="T:System.Data.DataSet" /> mediante el archivo y el <see cref="T:System.Data.XmlReadMode" /> especificados.</summary>
      <param name="fileName">Nombre del archivo (incluida la ruta) desde el que se va a leer.</param>
      <param name="mode">Uno de los valores de <see cref="T:System.Data.XmlReadMode" />.</param>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> no está establecido en <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</exception>
      <returns>
        <see langword="XmlReadMode" /> utilizado para leer los datos.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
      <summary>Lee los datos y el esquema XML en el objeto <see cref="T:System.Data.DataSet" /> mediante el objeto <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="reader">Objeto <see cref="T:System.Xml.XmlReader" /> desde el que se va a leer.</param>
      <returns>
        <see langword="XmlReadMode" /> utilizado para leer los datos.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
      <summary>Lee el esquema y los datos XML del objeto <see cref="T:System.Data.DataSet" /> mediante el objeto <see cref="T:System.Xml.XmlReader" /> y la enumeración <see cref="T:System.Data.XmlReadMode" /> especificados.</summary>
      <param name="reader">Objeto <see cref="T:System.Xml.XmlReader" /> desde el que se va a leer.</param>
      <param name="mode">Uno de los valores de <see cref="T:System.Data.XmlReadMode" />.</param>
      <returns>
        <see langword="XmlReadMode" /> utilizado para leer los datos.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
      <summary>Lee el esquema XML del objeto <see cref="T:System.IO.Stream" /> especificado en el objeto <see cref="T:System.Data.DataSet" />.</summary>
      <param name="stream">Objeto <see cref="T:System.IO.Stream" /> desde el que se va a leer.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
      <summary>Lee el esquema XML del objeto <see cref="T:System.IO.TextReader" /> especificado en el objeto <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader">Objeto <see cref="T:System.IO.TextReader" /> desde el que se va a leer.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.String)">
      <summary>Lee el esquema XML del archivo especificado en el <see cref="T:System.Data.DataSet" />.</summary>
      <param name="fileName">Nombre del archivo (incluida la ruta) desde el que se va a leer.</param>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> no está establecido en <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
      <summary>Lee el esquema XML del objeto <see cref="T:System.Xml.XmlReader" /> especificado en el objeto <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader">Objeto <see cref="T:System.Xml.XmlReader" /> desde el que se va a leer.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSerializable(System.Xml.XmlReader)">
      <summary>Omite los atributos y devuelve un conjunto de datos vacío.</summary>
      <param name="reader">Lector XML especificado.</param>
    </member>
    <member name="M:System.Data.DataSet.RejectChanges">
      <summary>Deshace todos los cambios realizados en el <see cref="T:System.Data.DataSet" /> desde que se ha creado o desde que se ha llamado por última vez a <see cref="M:System.Data.DataSet.AcceptChanges" />.</summary>
    </member>
    <member name="M:System.Data.DataSet.Reset">
      <summary>Borra todas las tablas y quita todas las relaciones, restricciones externas y tablas de <see cref="T:System.Data.DataSet" />. Las subclases deben reemplazar a <see cref="M:System.Data.DataSet.Reset" /> para restaurar el estado original de un <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataSet.ShouldSerializeRelations">
      <summary>Obtiene un valor que indica si se debe conservar la propiedad <see cref="P:System.Data.DataSet.Relations" />.</summary>
      <returns>
        <see langword="true" /> si el valor de propiedad ha cambiado con respecto a su valor predeterminado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.ShouldSerializeTables">
      <summary>Obtiene un valor que indica si se debe conservar la propiedad <see cref="P:System.Data.DataSet.Tables" />.</summary>
      <returns>
        <see langword="true" /> si el valor de propiedad ha cambiado con respecto a su valor predeterminado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.System#ComponentModel#IListSource#GetList">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.IListSource.GetList" />.</summary>
      <returns>Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.IListSource.GetList" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns>Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader">Objeto <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer">Objeto <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
      <summary>Escribe los datos actuales para el objeto <see cref="T:System.Data.DataSet" /> mediante el objeto <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream">Objeto <see cref="T:System.IO.Stream" /> utilizado para escribir en un archivo.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
      <summary>Escribe los datos actuales y, de forma opcional, el esquema para el objeto <see cref="T:System.Data.DataSet" /> mediante el objeto <see cref="T:System.IO.Stream" /> y la enumeración <see cref="T:System.Data.XmlWriteMode" /> especificados. Para escribir el esquema, establezca el valor del parámetro <paramref name="mode" /> en <see langword="WriteSchema" />.</summary>
      <param name="stream">Objeto <see cref="T:System.IO.Stream" /> utilizado para escribir en un archivo.</param>
      <param name="mode">Uno de los valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)">
      <summary>Escribe los datos actuales para el objeto <see cref="T:System.Data.DataSet" /> mediante el objeto <see cref="T:System.IO.TextWriter" /> especificado.</summary>
      <param name="writer">Objeto <see cref="T:System.IO.TextWriter" /> con el que se va a escribir.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
      <summary>Escribe los datos actuales y, de forma opcional, el esquema para el objeto <see cref="T:System.Data.DataSet" /> mediante el objeto <see cref="T:System.IO.TextWriter" /> y la enumeración <see cref="T:System.Data.XmlWriteMode" /> especificados. Para escribir el esquema, establezca el valor del parámetro <paramref name="mode" /> en <see langword="WriteSchema" />.</summary>
      <param name="writer">Objeto <see cref="T:System.IO.TextWriter" /> que se utiliza para escribir el documento.</param>
      <param name="mode">Uno de los valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.String)">
      <summary>Escribe los datos actuales para el <see cref="T:System.Data.DataSet" /> en el archivo especificado.</summary>
      <param name="fileName">Nombre del archivo (incluida la ruta) en el que se va a escribir.</param>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> no está establecido en <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
      <summary>Escribe los datos actuales y, de forma opcional, el esquema para el objeto <see cref="T:System.Data.DataSet" /> en el archivo indicado mediante la enumeración <see cref="T:System.Data.XmlWriteMode" /> especificada. Para escribir el esquema, establezca el valor del parámetro <paramref name="mode" /> en <see langword="WriteSchema" />.</summary>
      <param name="fileName">Nombre del archivo (incluida la ruta) en el que se va a escribir.</param>
      <param name="mode">Uno de los valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> no está establecido en <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)">
      <summary>Escribe los datos actuales para el <see cref="T:System.Data.DataSet" /> en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> con el que se va a escribir.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
      <summary>Escribe los datos actuales y, de forma opcional, el esquema para el objeto <see cref="T:System.Data.DataSet" /> mediante el objeto <see cref="T:System.Xml.XmlWriter" /> y la enumeración <see cref="T:System.Data.XmlWriteMode" /> especificados. Para escribir el esquema, establezca el valor del parámetro <paramref name="mode" /> en <see langword="WriteSchema" />.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> con el que se va a escribir.</param>
      <param name="mode">Uno de los valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)">
      <summary>Escribe la estructura <see cref="T:System.Data.DataSet" /> como un esquema XML al objeto <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream">Objeto <see cref="T:System.IO.Stream" /> utilizado para escribir en un archivo.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream,System.Converter{System.Type,System.String})">
      <summary>Escribe la estructura <see cref="T:System.Data.DataSet" /> como un esquema XML al objeto <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream">Un objeto <see cref="T:System.IO.Stream" /> en el que se va a escribir.</param>
      <param name="multipleTargetConverter">Un delegado usado para convertir <see cref="T:System.Type" /> en una cadena.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
      <summary>Escribe la estructura <see cref="T:System.Data.DataSet" /> como un esquema XML al objeto <see cref="T:System.IO.TextWriter" /> especificado.</summary>
      <param name="writer">Objeto <see cref="T:System.IO.TextWriter" /> con el que se va a escribir.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter,System.Converter{System.Type,System.String})">
      <summary>Escribe la estructura de <see cref="T:System.Data.DataSet" /> como un esquema XML en el objeto <see cref="T:System.IO.TextWriter" /> especificado.</summary>
      <param name="writer">Un objeto <see cref="T:System.IO.TextWriter" /> en el que se va a escribir.</param>
      <param name="multipleTargetConverter">Un delegado usado para convertir <see cref="T:System.Type" /> en una cadena.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.String)">
      <summary>Escribe la estructura del <see cref="T:System.Data.DataSet" /> como un esquema XML en un archivo.</summary>
      <param name="fileName">Nombre del archivo (incluida la ruta) en el que se va a escribir.</param>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> no está establecido en <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.String,System.Converter{System.Type,System.String})">
      <summary>Escribe la estructura del <see cref="T:System.Data.DataSet" /> como un esquema XML en un archivo.</summary>
      <param name="fileName">Nombre del archivo en el que se va a escribir.</param>
      <param name="multipleTargetConverter">Un delegado usado para convertir <see cref="T:System.Type" /> en una cadena.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
      <summary>Escribe la estructura del <see cref="T:System.Data.DataSet" /> como un esquema XML en un objeto <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> en el que se va a escribir.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter,System.Converter{System.Type,System.String})">
      <summary>Escribe la estructura de <see cref="T:System.Data.DataSet" /> como un esquema XML en el objeto <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="writer">Un objeto <see cref="T:System.Xml.XmlWriter" /> en el que se va a escribir.</param>
      <param name="multipleTargetConverter">Un delegado usado para convertir <see cref="T:System.Type" /> en una cadena.</param>
    </member>
    <member name="P:System.Data.DataSet.CaseSensitive">
      <summary>Obtiene o establece un valor que indica si las comparaciones de cadena en los objetos <see cref="T:System.Data.DataTable" /> distinguen entre mayúsculas y minúsculas.</summary>
      <returns>
        <see langword="true" /> Si las comparaciones de cadenas distinguen mayúsculas de minúsculas; en caso contrario, <see langword="false" /> . De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.DataSetName">
      <summary>Obtiene o establece el nombre del objeto <see cref="T:System.Data.DataSet" /> actual.</summary>
      <returns>Nombre del objeto <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.DefaultViewManager">
      <summary>Obtiene una vista personalizada de los datos incluidos en <see cref="T:System.Data.DataSet" />, lo que permite filtrar, buscar y navegar mediante un <see cref="T:System.Data.DataViewManager" /> personalizado.</summary>
      <returns>Un objeto <see cref="T:System.Data.DataViewManager" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.EnforceConstraints">
      <summary>Obtiene o establece un valor que indica si se siguen las reglas de restricción al intentar realizar cualquier operación de actualización.</summary>
      <exception cref="T:System.Data.ConstraintException">No se pueden forzar una o más restricciones.</exception>
      <returns>
        <see langword="true" /> Si se aplican las reglas; en caso contrario, <see langword="false" /> . De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.ExtendedProperties">
      <summary>Obtiene la colección de la información personalizada del usuario asociada a <see langword="DataSet" />.</summary>
      <returns>
        <see cref="T:System.Data.PropertyCollection" /> con toda la información personalizada del usuario.</returns>
    </member>
    <member name="P:System.Data.DataSet.HasErrors">
      <summary>Obtiene un valor que indica si hay errores en alguno de los objetos <see cref="T:System.Data.DataTable" /> de este <see cref="T:System.Data.DataSet" />.</summary>
      <returns>
        <see langword="true" /> Si una tabla contiene un error; en caso contrario, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Data.DataSet.IsInitialized">
      <summary>Obtiene un valor que indica si el objeto <see cref="T:System.Data.DataSet" /> está inicializado.</summary>
      <returns>
        <see langword="true" /> para indicar que el componente ha completado la inicialización; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.Locale">
      <summary>Obtiene o establece la información de configuración regional que se utiliza para comparar cadenas de la tabla.</summary>
      <returns>
        <see cref="T:System.Globalization.CultureInfo" /> que contiene datos sobre la configuración regional del equipo del usuario. De manera predeterminada, es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.Namespace">
      <summary>Obtiene o establece el espacio de nombres del objeto <see cref="T:System.Data.DataSet" />.</summary>
      <exception cref="T:System.ArgumentException">El espacio de nombres ya tiene datos.</exception>
      <returns>Espacio de nombres de <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.Prefix">
      <summary>Obtiene o establece un prefijo XML que crea alias para el espacio de nombres del objeto <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Prefijo XML para el espacio de nombres de <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.Relations">
      <summary>Obtiene la colección de relaciones que vincula las tablas y permite la navegación desde las tablas primarias a las secundarias.</summary>
      <returns>Elemento <see cref="T:System.Data.DataRelationCollection" /> que contiene una colección de objetos <see cref="T:System.Data.DataRelation" />. Si no existe ningún objeto <see cref="T:System.Data.DataRelation" />, se devuelve una colección vacía.</returns>
    </member>
    <member name="P:System.Data.DataSet.RemotingFormat">
      <summary>Obtiene o establece una enumeración <see cref="T:System.Data.SerializationFormat" /> para el objeto <see cref="T:System.Data.DataSet" /> utilizado durante la comunicación remota.</summary>
      <returns>Un objeto <see cref="T:System.Data.SerializationFormat" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.SchemaSerializationMode">
      <summary>Obtiene o establece una enumeración <see cref="T:System.Data.SchemaSerializationMode" /> para un objeto <see cref="T:System.Data.DataSet" />.</summary>
      <returns>
        <see cref="T:System.Data.SchemaSerializationMode" /> para <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.Site">
      <summary>Obtiene o establece una interfaz <see cref="T:System.ComponentModel.ISite" /> para el objeto <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Estructura <see cref="T:System.ComponentModel.ISite" /> para la colección <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.System#ComponentModel#IListSource#ContainsListCollection">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</summary>
      <returns>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.Tables">
      <summary>Obtiene la colección de tablas incluidas en <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Colección <see cref="T:System.Data.DataTableCollection" /> que contiene este objeto <see cref="T:System.Data.DataSet" />. Si no existe ningún objeto <see cref="T:System.Data.DataTable" />, se devuelve una colección vacía.</returns>
    </member>
    <member name="T:System.Data.DataSetDateTime">
      <summary>Describe el formato de serialización para las columnas <see cref="T:System.DateTime" /> de un objeto <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Local">
      <summary>
        <see langword="DateTime" /> siempre se almacena en Local. Si en este modo se asigna <see cref="F:System.Data.DataSetDateTime.Utc" /> o <see cref="F:System.Data.DataSetDateTime.Unspecified" /> a una columna, se convierte primero a Local. La serialización en este modo siempre se realiza en Local. Hay un desplazamiento durante la serialización.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Unspecified">
      <summary>
        <see langword="DateTime" /> siempre se almacena en Unspecified. Si en este modo se asigna <see cref="F:System.Data.DataSetDateTime.Local" /> o <see cref="F:System.Data.DataSetDateTime.Utc" /> a una columna, se convierte primero a <see cref="F:System.Data.DataSetDateTime.Unspecified" />. La serialización en este modo no produce un desplazamiento.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.UnspecifiedLocal">
      <summary>
        <see langword="DateTime" /> se almacena en Unspecified. Si en este modo se asigna <see cref="F:System.Data.DataSetDateTime.Local" /> o <see cref="F:System.Data.DataSetDateTime.Utc" /> a una columna, se convierte primero a <see cref="F:System.Data.DataSetDateTime.Unspecified" />. La serialización en este modo produce desplazamiento. Es el comportamiento predeterminado y es compatible con versiones anteriores. Se debe considerar que esta opción es igual a Unspecified en lo que se refiere al almacenamiento, aunque aplica un desplazamiento similar al de <see cref="F:System.Data.DataSetDateTime.Local" /> durante la serialización.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Utc">
      <summary>
        <see langword="DateTime" /> se almacena en la hora universal coordinada (UTC). Si en este modo se asigna <see cref="F:System.Data.DataSetDateTime.Local" /> o <see cref="F:System.Data.DataSetDateTime.Unspecified" /> a una columna, se convierte primero a <see langword="Utc" />. La serialización en este modo siempre se realiza en <see langword="Utc" />. No hay desplazamiento durante la serialización.</summary>
    </member>
    <member name="T:System.Data.DataSysDescriptionAttribute">
      <summary>Marca una propiedad, un evento o un extensor con una descripción. Los diseñadores visuales pueden mostrar esta descripción al hacer referencia al miembro.</summary>
    </member>
    <member name="M:System.Data.DataSysDescriptionAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataSysDescriptionAttribute" /> utilizando la cadena de descripción especificada.</summary>
      <param name="description">Cadena de descripción.</param>
    </member>
    <member name="P:System.Data.DataSysDescriptionAttribute.Description">
      <summary>Obtiene el texto de la descripción.</summary>
      <returns>Cadena de descripción.</returns>
    </member>
    <member name="T:System.Data.DataTable">
      <summary>Representa una tabla de datos en memoria.</summary>
    </member>
    <member name="E:System.Data.DataTable.ColumnChanged">
      <summary>Se produce cuando se ha cambiado un valor para el <see cref="T:System.Data.DataColumn" /> especificado de un <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="E:System.Data.DataTable.ColumnChanging">
      <summary>Se produce cuando se ha cambiado un valor para el <see cref="T:System.Data.DataColumn" /> especificado de un <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="E:System.Data.DataTable.Initialized">
      <summary>Se produce después de inicializar <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowChanged">
      <summary>Ocurre después de modificar correctamente una <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowChanging">
      <summary>Se produce cuando se cambia un <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowDeleted">
      <summary>Se produce después de eliminar una fila de la tabla.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowDeleting">
      <summary>Se produce cuando se va a eliminar una fila de la tabla.</summary>
    </member>
    <member name="E:System.Data.DataTable.TableCleared">
      <summary>Se produce después de borrar un objeto <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="E:System.Data.DataTable.TableClearing">
      <summary>Se produce cuando se borra un objeto <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="E:System.Data.DataTable.TableNewRow">
      <summary>Se produce cuando se inserta un nuevo objeto <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataTable.fInitInProgress">
      <summary>Comprueba si la inicialización está en curso. La inicialización se produce en tiempo de ejecución.</summary>
    </member>
    <member name="M:System.Data.DataTable.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataTable" /> sin argumentos.</summary>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataTable" /> con el objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y la estructura <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Los datos necesarios para serializar o deserializar un objeto.</param>
      <param name="context">Origen y destino de una secuencia de serialización dada.</param>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataTable" /> con el nombre de tabla especificado.</summary>
      <param name="tableName">Nombre que se va a asignar a la tabla. Si <paramref name="tableName" /> es <see langword="null" /> o una cadena vacía, se le asigna un nombre predeterminado al agregarlo a <see cref="T:System.Data.DataTableCollection" />.</param>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataTable" /> utilizando el nombre de tabla y el espacio de nombres especificados.</summary>
      <param name="tableName">Nombre que se va a asignar a la tabla. Si <paramref name="tableName" /> es <see langword="null" /> o una cadena vacía, se le asigna un nombre predeterminado al agregarlo a <see cref="T:System.Data.DataTableCollection" />.</param>
      <param name="tableNamespace">Espacio de nombres para la representación XML de los datos almacenados en el objeto <see langword="DataTable" />.</param>
    </member>
    <member name="M:System.Data.DataTable.AcceptChanges">
      <summary>Confirma todos los cambios realizados en esta tabla desde la última vez que se llamó a <see cref="M:System.Data.DataTable.AcceptChanges" />.</summary>
    </member>
    <member name="M:System.Data.DataTable.BeginInit">
      <summary>Activa la inicialización de un objeto <see cref="T:System.Data.DataTable" /> que se emplea en un formulario o que utiliza otro componente. La inicialización se produce en tiempo de ejecución.</summary>
    </member>
    <member name="M:System.Data.DataTable.BeginLoadData">
      <summary>Desactiva notificaciones, mantenimiento de índices y restricciones mientras se cargan datos.</summary>
    </member>
    <member name="M:System.Data.DataTable.Clear">
      <summary>Borra el <see cref="T:System.Data.DataTable" /> de todos los datos.</summary>
    </member>
    <member name="M:System.Data.DataTable.Clone">
      <summary>Clona la estructura de <see cref="T:System.Data.DataTable" />, incluidos todos los esquemas y restricciones de <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Nuevo <see cref="T:System.Data.DataTable" /> con el mismo esquema que el <see cref="T:System.Data.DataTable" /> actual.</returns>
    </member>
    <member name="M:System.Data.DataTable.Compute(System.String,System.String)">
      <summary>Calcula la expresión dada de las filas actuales que cumplen los criterios de filtro.</summary>
      <param name="expression">Expresión que se va a calcular.</param>
      <param name="filter">Filtro que va a limitar las filas que se evalúan en la expresión.</param>
      <returns>
        <see cref="T:System.Object" /> establecido en el resultado del cálculo. Si la expresión se evalúa como null, el valor devuelto será <see cref="F:System.DBNull.Value" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Copy">
      <summary>Copia la estructura y los datos para este objeto <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Nuevo <see cref="T:System.Data.DataTable" /> con la misma estructura (esquemas y restricciones de tabla) y datos que este <see cref="T:System.Data.DataTable" />.  
  
Si estas clases se han derivado, la copia también será de las mismas clases derivadas.  
  
 <see cref="M:System.Data.DataTable.Copy" /> crea un nuevo <see cref="T:System.Data.DataTable" /> con la misma estructura y datos que el original <see cref="T:System.Data.DataTable" />. Para copiar la estructura a nuevo <see cref="T:System.Data.DataTable" />, pero no los datos, utilice <see cref="M:System.Data.DataTable.Clone" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.CreateDataReader">
      <summary>Devuelve un objeto <see cref="T:System.Data.DataTableReader" /> que corresponde a los datos incluidos en este objeto <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Objeto <see cref="T:System.Data.DataTableReader" /> que contiene un conjunto de resultados, que corresponde a la instancia de <see cref="T:System.Data.DataTable" /> de origen.</returns>
    </member>
    <member name="M:System.Data.DataTable.CreateInstance">
      <summary>Crea una nueva instancia de <see cref="T:System.Data.DataTable" />.</summary>
      <returns>La nueva expresión.</returns>
    </member>
    <member name="M:System.Data.DataTable.EndInit">
      <summary>Finaliza la inicialización de un objeto <see cref="T:System.Data.DataTable" /> que se emplea en un formulario o que utiliza otro componente. La inicialización se produce en tiempo de ejecución.</summary>
    </member>
    <member name="M:System.Data.DataTable.EndLoadData">
      <summary>Activa notificaciones, mantenimiento de índices y restricciones después de cargar datos.</summary>
    </member>
    <member name="M:System.Data.DataTable.GetChanges">
      <summary>Obtiene una copia del objeto <see cref="T:System.Data.DataTable" /> que contiene todos los cambios que se le han realizado desde que se cargó o se llamó a <see cref="M:System.Data.DataTable.AcceptChanges" /> por última vez.</summary>
      <returns>Copia de los cambios de este <see cref="T:System.Data.DataTable" />, o <see langword="null" /> si no se encuentra ningún cambio.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
      <summary>Obtiene una copia del objeto <see cref="T:System.Data.DataTable" /> que contiene todos los cambios que se le han realizado desde la última vez que se cargó, o desde que se llamó a <see cref="M:System.Data.DataTable.AcceptChanges" />, filtrado por <see cref="T:System.Data.DataRowState" />.</summary>
      <param name="rowStates">Uno de los valores de <see cref="T:System.Data.DataRowState" />.</param>
      <returns>Una copia filtrada del objeto <see cref="T:System.Data.DataTable" /> en el que puede que se hayan realizado acciones y, posteriormente, se hayan vuelto a combinar en <see cref="T:System.Data.DataTable" /> utilizando el método <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. Si no se encuentran filas con el <see cref="T:System.Data.DataRowState" /> deseado, el método devolverá <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary>Este método devuelve una instancia de <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contiene el Lenguaje de descripción de servicios Web (WSDL) que describe <see cref="T:System.Data.DataTable" /> para servicios Web.</summary>
      <param name="schemaSet">Instancia de <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Instancia de <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetErrors">
      <summary>Obtiene una matriz de objetos <see cref="T:System.Data.DataRow" /> que contienen errores.</summary>
      <returns>Matriz de objetos <see cref="T:System.Data.DataRow" /> que tienen errores.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Rellena un objeto de información de serialización con los datos necesarios para serializar <see cref="T:System.Data.DataTable" />.</summary>
      <param name="info">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos serializados asociados a <see cref="T:System.Data.DataTable" />.</param>
      <param name="context">Objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene el origen y el destino de la secuencia serializada asociada a <see cref="T:System.Data.DataTable" />.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="info" /> es una referencia nula (<see langword="Nothing" /> en Visual Basic).</exception>
    </member>
    <member name="M:System.Data.DataTable.GetRowType">
      <summary>Obtiene el tipo de fila.</summary>
      <returns>Tipo de la propiedad <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetSchema">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns>Clase <see cref="T:System.Xml.Schema.XmlSchema" /> que describe la representación XML del objeto generado por el método <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> y usado por el método <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
      <summary>Copia un <see cref="T:System.Data.DataRow" /> en un <see cref="T:System.Data.DataTable" /> conservando los valores de propiedad, así como los valores originales y actuales.</summary>
      <param name="row">
        <see cref="T:System.Data.DataRow" /> que se va a importar.</param>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader)">
      <summary>Rellena un objeto <see cref="T:System.Data.DataTable" /> con valores de un origen de datos utilizando la interfaz <see cref="T:System.Data.IDataReader" /> proporcionada. Si el objeto <see cref="T:System.Data.DataTable" /> ya contiene filas, los datos de entrada del origen de datos se combinan con las filas existentes.</summary>
      <param name="reader">Interfaz <see cref="T:System.Data.IDataReader" /> que proporciona un conjunto de resultados.</param>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
      <summary>Rellena un objeto <see cref="T:System.Data.DataTable" /> con valores de un origen de datos utilizando la interfaz <see cref="T:System.Data.IDataReader" /> proporcionada. Si el objeto <see langword="DataTable" /> ya contiene las filas, los datos de entrada del origen de datos se combinan con las filas existentes conforme al valor del parámetro <paramref name="loadOption" />.</summary>
      <param name="reader">
        <see cref="T:System.Data.IDataReader" /> que proporciona uno o varios conjuntos de resultados.</param>
      <param name="loadOption">Valor de la enumeración <see cref="T:System.Data.LoadOption" /> que indica cómo se combinan las filas que ya existen en el objeto <see cref="T:System.Data.DataTable" /> con las filas de entrada con las que comparten la misma clave principal.</param>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
      <summary>Rellena un objeto <see cref="T:System.Data.DataTable" /> con valores de un origen de datos utilizando la interfaz <see cref="T:System.Data.IDataReader" /> proporcionada y un delegado de control de errores.</summary>
      <param name="reader">Interfaz <see cref="T:System.Data.IDataReader" /> que proporciona un conjunto de resultados.</param>
      <param name="loadOption">Valor de la enumeración <see cref="T:System.Data.LoadOption" /> que indica cómo se combinan las filas que ya existen en el objeto <see cref="T:System.Data.DataTable" /> con las filas de entrada con las que comparten la misma clave principal.</param>
      <param name="errorHandler">Delegado <see cref="T:System.Data.FillErrorEventHandler" /> al que se va a llamar cuando se produzca un error mientras se cargan los datos.</param>
    </member>
    <member name="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
      <summary>Busca y actualiza una fila específica. Si no encuentra ninguna fila coincidente, se crea una nueva con los valores dados.</summary>
      <param name="values">Matriz de valores utilizada para crear la nueva fila.</param>
      <param name="fAcceptChanges">
        <see langword="true" /> para aceptar los cambios; de lo contrario, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">La matriz es mayor que el número de columnas de la tabla.</exception>
      <exception cref="T:System.InvalidCastException">Un valor no coincide con su tipo de columna respectivo.</exception>
      <exception cref="T:System.Data.ConstraintException">La adición de la fila invalida una restricción.</exception>
      <exception cref="T:System.Data.NoNullAllowedException">Intento de colocar un valor nulo donde <see cref="P:System.Data.DataColumn.AllowDBNull" /> sea falso.</exception>
      <returns>Nuevo objeto <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
      <summary>Busca y actualiza una fila específica. Si no encuentra ninguna fila coincidente, se crea una nueva con los valores dados.</summary>
      <param name="values">Matriz de valores utilizada para crear la nueva fila.</param>
      <param name="loadOption">Se utiliza para determinar cómo se aplican los valores de la matriz a los valores correspondientes en una fila existente.</param>
      <returns>Nuevo objeto <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable)">
      <summary>Combina el objeto <see cref="T:System.Data.DataTable" /> especificado con el objeto <see cref="T:System.Data.DataTable" /> actual.</summary>
      <param name="table">Objeto <see cref="T:System.Data.DataTable" /> que se va a combinar con el objeto <see cref="T:System.Data.DataTable" /> actual.</param>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
      <summary>Combina el objeto <see cref="T:System.Data.DataTable" /> especificado con el objeto <see langword="DataTable" /> actual, indicando si se deben conservar los cambios en el objeto <see langword="DataTable" /> actual.</summary>
      <param name="table">Objeto <see langword="DataTable" /> que se va a combinar con el objeto <see langword="DataTable" /> actual.</param>
      <param name="preserveChanges">
        <see langword="true" /> para conservar los cambios realizados en el objeto <see langword="DataTable" /> actual; de lo contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
      <summary>Combina el objeto <see cref="T:System.Data.DataTable" /> especificado con el objeto <see langword="DataTable" /> actual, indicando si se van a conservar los cambios y cómo se va a controlar el esquema que falta en el objeto <see langword="DataTable" /> actual.</summary>
      <param name="table">Objeto <see cref="T:System.Data.DataTable" /> que se va a combinar con el objeto <see cref="T:System.Data.DataTable" /> actual.</param>
      <param name="preserveChanges">
        <see langword="true" /> para conservar los cambios realizados en el objeto <see cref="T:System.Data.DataTable" /> actual; de lo contrario, <see langword="false" />.</param>
      <param name="missingSchemaAction">Uno de los valores de <see cref="T:System.Data.MissingSchemaAction" />.</param>
    </member>
    <member name="M:System.Data.DataTable.NewRow">
      <summary>Crea un nuevo <see cref="T:System.Data.DataRow" /> con el mismo esquema que la tabla.</summary>
      <returns>
        <see cref="T:System.Data.DataRow" /> con el mismo esquema que <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.NewRowArray(System.Int32)">
      <summary>Devuelve una matriz de <see cref="T:System.Data.DataRow" />.</summary>
      <param name="size">Un valor <see cref="T:System.Int32" /> que describe el tamaño de la matriz.</param>
      <returns>Nueva matriz.</returns>
    </member>
    <member name="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
      <summary>Crea una nueva fila a partir de una existente.</summary>
      <param name="builder">Un objeto <see cref="T:System.Data.DataRowBuilder" />.</param>
      <returns>Clase derivada <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)">
      <summary>Genera el evento <see cref="E:System.Data.DataTable.ColumnChanged" />.</summary>
      <param name="e">
        <see cref="T:System.Data.DataColumnChangeEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)">
      <summary>Genera el evento <see cref="E:System.Data.DataTable.ColumnChanging" />.</summary>
      <param name="e">
        <see cref="T:System.Data.DataColumnChangeEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Genera el evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</summary>
      <param name="pcevent">
        <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)">
      <summary>Notifica a <see cref="T:System.Data.DataTable" /> que se ha quitado un <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="column">Objeto <see cref="T:System.Data.DataColumn" /> que se va a quitar.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
      <summary>Genera el evento <see cref="E:System.Data.DataTable.RowChanged" />.</summary>
      <param name="e">
        <see cref="T:System.Data.DataRowChangeEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
      <summary>Genera el evento <see cref="E:System.Data.DataTable.RowChanging" />.</summary>
      <param name="e">
        <see cref="T:System.Data.DataRowChangeEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
      <summary>Genera el evento <see cref="E:System.Data.DataTable.RowDeleted" />.</summary>
      <param name="e">
        <see cref="T:System.Data.DataRowChangeEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
      <summary>Genera el evento <see cref="E:System.Data.DataTable.RowDeleting" />.</summary>
      <param name="e">
        <see cref="T:System.Data.DataRowChangeEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)">
      <summary>Genera el evento <see cref="E:System.Data.DataTable.TableCleared" />.</summary>
      <param name="e">
        <see cref="T:System.Data.DataTableClearEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)">
      <summary>Genera el evento <see cref="E:System.Data.DataTable.TableClearing" />.</summary>
      <param name="e">
        <see cref="T:System.Data.DataTableClearEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)">
      <summary>Genera el evento <see cref="E:System.Data.DataTable.TableNewRow" />.</summary>
      <param name="e">
        <see cref="T:System.Data.DataTableNewRowEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
      <summary>Lee los datos y el esquema XML en el objeto <see cref="T:System.Data.DataTable" /> mediante el objeto <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream">Objeto que se deriva de <see cref="T:System.IO.Stream" />.</param>
      <returns>
        <see cref="T:System.Data.XmlReadMode" /> utilizado para leer los datos.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
      <summary>Lee los datos y el esquema XML en el objeto <see cref="T:System.Data.DataTable" /> mediante el objeto <see cref="T:System.IO.TextReader" /> especificado.</summary>
      <param name="reader">Objeto <see cref="T:System.IO.TextReader" /> que se va a usar para leer los datos.</param>
      <returns>
        <see cref="T:System.Data.XmlReadMode" /> utilizado para leer los datos.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.String)">
      <summary>Lee los datos y el esquema XML en el objeto <see cref="T:System.Data.DataTable" /> desde el archivo especificado.</summary>
      <param name="fileName">Nombre del archivo del que se van a leer los datos.</param>
      <returns>
        <see cref="T:System.Data.XmlReadMode" /> utilizado para leer los datos.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
      <summary>Lee datos y el esquema XML en el objeto <see cref="T:System.Data.DataTable" /> mediante el objeto <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="reader">Objeto <see cref="T:System.Xml.XmlReader" /> que se va a usar para leer los datos.</param>
      <returns>
        <see cref="T:System.Data.XmlReadMode" /> utilizado para leer los datos.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
      <summary>Lee un esquema XML en el objeto <see cref="T:System.Data.DataTable" /> utilizando la secuencia especificada.</summary>
      <param name="stream">Secuencia que se utiliza para leer el esquema.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
      <summary>Lee un esquema XML en el objeto <see cref="T:System.Data.DataTable" /> utilizando el objeto <see cref="T:System.IO.TextReader" /> especificado.</summary>
      <param name="reader">Objeto <see cref="T:System.IO.TextReader" /> que se utiliza para leer la información del esquema.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.String)">
      <summary>Lee un esquema XML en el objeto <see cref="T:System.Data.DataTable" /> desde el archivo especificado.</summary>
      <param name="fileName">Nombre del archivo del que se va a leer la información de esquema.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
      <summary>Lee un esquema XML en el objeto <see cref="T:System.Data.DataTable" /> utilizando el objeto <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="reader">Objeto <see cref="T:System.Xml.XmlReader" /> que se utiliza para leer la información del esquema.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)">
      <summary>Lee de una secuencia XML.</summary>
      <param name="reader">Un objeto <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Data.DataTable.RejectChanges">
      <summary>Deshace todos los cambios que se hayan realizado en la tabla desde que se cargó o se llamó a <see cref="M:System.Data.DataTable.AcceptChanges" /> por última vez.</summary>
    </member>
    <member name="M:System.Data.DataTable.Reset">
      <summary>Restablece el estado original del objeto <see cref="T:System.Data.DataTable" />. El reinicio quita todos los datos, índices, relaciones y columnas de la tabla. Si un conjunto de datos incluye un DataTable, la tabla todavía formará parte del conjunto de datos una vez restaurada la tabla.</summary>
    </member>
    <member name="M:System.Data.DataTable.Select">
      <summary>Obtiene una matriz de todos los objetos <see cref="T:System.Data.DataRow" />.</summary>
      <returns>Matriz de objetos <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String)">
      <summary>Obtiene una matriz de todos los objetos <see cref="T:System.Data.DataRow" /> que coinciden con los criterios de filtro.</summary>
      <param name="filterExpression">Criterios que se van a utilizar para filtrar las filas. Para obtener ejemplos sobre cómo filtrar filas, vea DataView RowFilter Syntax [C#].</param>
      <returns>Matriz de objetos <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String,System.String)">
      <summary>Obtiene una matriz de todos los objetos <see cref="T:System.Data.DataRow" /> que coinciden con los criterios de filtro, en el criterio de ordenación especificado.</summary>
      <param name="filterExpression">Criterios que se van a utilizar para filtrar las filas. Para obtener ejemplos sobre cómo filtrar filas, vea DataView RowFilter Syntax [C#].</param>
      <param name="sort">Cadena que especifica la columna y orden de clasificación.</param>
      <returns>Matriz de objetos <see cref="T:System.Data.DataRow" /> que coinciden con la expresión de filtro.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
      <summary>Obtiene una matriz de todos los objetos <see cref="T:System.Data.DataRow" /> que coinciden con el filtro en el orden de clasificación y que coinciden con el estado especificado.</summary>
      <param name="filterExpression">Criterios que se van a utilizar para filtrar las filas. Para obtener ejemplos sobre cómo filtrar filas, vea DataView RowFilter Syntax [C#].</param>
      <param name="sort">Cadena que especifica la columna y orden de clasificación.</param>
      <param name="recordStates">Uno de los valores de <see cref="T:System.Data.DataViewRowState" />.</param>
      <returns>Matriz de objetos <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.IListSource.GetList" />.</summary>
      <returns>
        <see cref="T:System.Collections.IList" /> que se puede enlazar a un origen de datos del objeto.</returns>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns>Clase <see cref="T:System.Xml.Schema.XmlSchema" /> que describe la representación XML del objeto generado por el método <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> y usado por el método <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader">XmlReader.</param>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer">XMLWriter.</param>
    </member>
    <member name="M:System.Data.DataTable.ToString">
      <summary>Obtiene <see cref="P:System.Data.DataTable.TableName" /> y <see cref="P:System.Data.DataTable.DisplayExpression" />, si hay alguna, como cadena concatenada.</summary>
      <returns>Cadena compuesta por los valores <see cref="P:System.Data.DataTable.TableName" /> y <see cref="P:System.Data.DataTable.DisplayExpression" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
      <summary>Escribe el contenido actual de <see cref="T:System.Data.DataTable" /> como datos XML mediante el <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream">Secuencia en la que se van a escribir los datos.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
      <summary>Escribe el contenido actual de <see cref="T:System.Data.DataTable" /> como datos XML mediante el <see cref="T:System.IO.Stream" /> especificado. Para guardar los datos de la tabla y de todos sus descendientes, establezca el parámetro <paramref name="writeHierarchy" /> en <see langword="true" />.</summary>
      <param name="stream">Secuencia en la que se van a escribir los datos.</param>
      <param name="writeHierarchy">Si es <see langword="true" />, escribe el contenido de la tabla actual y de todos sus descendientes. Si es <see langword="false" /> (valor predeterminado), escribe sólo los datos para la tabla actual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
      <summary>Escribe los datos actuales y, de forma opcional, el esquema para el objeto <see cref="T:System.Data.DataTable" /> en el archivo indicado mediante la enumeración <see cref="T:System.Data.XmlWriteMode" /> especificada. Para escribir el esquema, establezca el valor del parámetro <paramref name="mode" /> en <see langword="WriteSchema" />.</summary>
      <param name="stream">Secuencia en la que se van a escribir los datos.</param>
      <param name="mode">Uno de los valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
      <summary>Escribe los datos actuales y, de forma opcional, el esquema para el objeto <see cref="T:System.Data.DataTable" /> en el archivo indicado mediante la enumeración <see cref="T:System.Data.XmlWriteMode" /> especificada. Para escribir el esquema, establezca el valor del parámetro <paramref name="mode" /> en <see langword="WriteSchema" />. Para guardar los datos de la tabla y de todos sus descendientes, establezca el parámetro <paramref name="writeHierarchy" /> en <see langword="true" />.</summary>
      <param name="stream">Secuencia en la que se van a escribir los datos.</param>
      <param name="mode">Uno de los valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
      <param name="writeHierarchy">Si es <see langword="true" />, escribe el contenido de la tabla actual y de todos sus descendientes. Si es <see langword="false" /> (valor predeterminado), escribe sólo los datos para la tabla actual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
      <summary>Escribe el contenido actual de <see cref="T:System.Data.DataTable" /> como datos XML mediante el <see cref="T:System.IO.TextWriter" /> especificado.</summary>
      <param name="writer">
        <see cref="T:System.IO.TextWriter" /> con el que se va a escribir el contenido.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
      <summary>Escribe el contenido actual de <see cref="T:System.Data.DataTable" /> como datos XML mediante el <see cref="T:System.IO.TextWriter" /> especificado. Para guardar los datos de la tabla y de todos sus descendientes, establezca el parámetro <paramref name="writeHierarchy" /> en <see langword="true" />.</summary>
      <param name="writer">
        <see cref="T:System.IO.TextWriter" /> con el que se va a escribir el contenido.</param>
      <param name="writeHierarchy">Si es <see langword="true" />, escribe el contenido de la tabla actual y de todos sus descendientes. Si es <see langword="false" /> (valor predeterminado), escribe sólo los datos para la tabla actual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
      <summary>Escribe los datos actuales y, de forma opcional, el esquema para el objeto <see cref="T:System.Data.DataTable" /> mediante el objeto <see cref="T:System.IO.TextWriter" /> y la enumeración <see cref="T:System.Data.XmlWriteMode" /> especificados. Para escribir el esquema, establezca el valor del parámetro <paramref name="mode" /> en <see langword="WriteSchema" />.</summary>
      <param name="writer">Objeto <see cref="T:System.IO.TextWriter" /> que se utiliza para escribir el documento.</param>
      <param name="mode">Uno de los valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
      <summary>Escribe los datos actuales y, de forma opcional, el esquema para el objeto <see cref="T:System.Data.DataTable" /> mediante el objeto <see cref="T:System.IO.TextWriter" /> y la enumeración <see cref="T:System.Data.XmlWriteMode" /> especificados. Para escribir el esquema, establezca el valor del parámetro <paramref name="mode" /> en <see langword="WriteSchema" />. Para guardar los datos de la tabla y de todos sus descendientes, establezca el parámetro <paramref name="writeHierarchy" /> en <see langword="true" />.</summary>
      <param name="writer">Objeto <see cref="T:System.IO.TextWriter" /> que se utiliza para escribir el documento.</param>
      <param name="mode">Uno de los valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
      <param name="writeHierarchy">Si es <see langword="true" />, escribe el contenido de la tabla actual y de todos sus descendientes. Si es <see langword="false" /> (valor predeterminado), escribe sólo los datos para la tabla actual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String)">
      <summary>Escribe el contenido actual del objeto <see cref="T:System.Data.DataTable" /> como elemento XML utilizando el archivo especificado.</summary>
      <param name="fileName">Archivo en el que se escriben los datos XML</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
      <summary>Escribe el contenido actual del objeto <see cref="T:System.Data.DataTable" /> como elemento XML utilizando el archivo especificado. Para guardar los datos de la tabla y de todos sus descendientes, establezca el parámetro <paramref name="writeHierarchy" /> en <see langword="true" />.</summary>
      <param name="fileName">Archivo en el que se escriben los datos XML</param>
      <param name="writeHierarchy">Si es <see langword="true" />, escribe el contenido de la tabla actual y de todos sus descendientes. Si es <see langword="false" /> (valor predeterminado), escribe sólo los datos para la tabla actual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
      <summary>Escribe los datos actuales y, de forma opcional, el esquema para el <see cref="T:System.Data.DataTable" /> mediante el archivo y la enumeración <see cref="T:System.Data.XmlWriteMode" /> especificados. Para escribir el esquema, establezca el valor del parámetro <paramref name="mode" /> en <see langword="WriteSchema" />.</summary>
      <param name="fileName">Nombre del archivo en el que se van a escribir los datos.</param>
      <param name="mode">Uno de los valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
      <summary>Escribe los datos actuales y, de forma opcional, el esquema para el <see cref="T:System.Data.DataTable" /> mediante el archivo y la enumeración <see cref="T:System.Data.XmlWriteMode" /> especificados. Para escribir el esquema, establezca el valor del parámetro <paramref name="mode" /> en <see langword="WriteSchema" />. Para guardar los datos de la tabla y de todos sus descendientes, establezca el parámetro <paramref name="writeHierarchy" /> en <see langword="true" />.</summary>
      <param name="fileName">Nombre del archivo en el que se van a escribir los datos.</param>
      <param name="mode">Uno de los valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
      <param name="writeHierarchy">Si es <see langword="true" />, escribe el contenido de la tabla actual y de todos sus descendientes. Si es <see langword="false" /> (valor predeterminado), escribe sólo los datos para la tabla actual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
      <summary>Escribe el contenido actual de <see cref="T:System.Data.DataTable" /> como datos XML mediante el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="writer">Objeto <see cref="T:System.Xml.XmlWriter" /> con el que se va a escribir el contenido.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
      <summary>Escribe el contenido actual de <see cref="T:System.Data.DataTable" /> como datos XML mediante el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="writer">Objeto <see cref="T:System.Xml.XmlWriter" /> con el que se va a escribir el contenido.</param>
      <param name="writeHierarchy">Si es <see langword="true" />, escribe el contenido de la tabla actual y de todos sus descendientes. Si es <see langword="false" /> (valor predeterminado), escribe sólo los datos para la tabla actual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
      <summary>Escribe los datos actuales y, de forma opcional, el esquema para el objeto <see cref="T:System.Data.DataTable" /> mediante el objeto <see cref="T:System.Xml.XmlWriter" /> y la enumeración <see cref="T:System.Data.XmlWriteMode" /> especificados. Para escribir el esquema, establezca el valor del parámetro <paramref name="mode" /> en <see langword="WriteSchema" />.</summary>
      <param name="writer">Objeto <see cref="T:System.Xml.XmlWriter" /> que se utiliza para escribir el documento.</param>
      <param name="mode">Uno de los valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
      <summary>Escribe los datos actuales y, de forma opcional, el esquema para el objeto <see cref="T:System.Data.DataTable" /> mediante el objeto <see cref="T:System.Xml.XmlWriter" /> y la enumeración <see cref="T:System.Data.XmlWriteMode" /> especificados. Para escribir el esquema, establezca el valor del parámetro <paramref name="mode" /> en <see langword="WriteSchema" />. Para guardar los datos de la tabla y de todos sus descendientes, establezca el parámetro <paramref name="writeHierarchy" /> en <see langword="true" />.</summary>
      <param name="writer">Objeto <see cref="T:System.Xml.XmlWriter" /> que se utiliza para escribir el documento.</param>
      <param name="mode">Uno de los valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
      <param name="writeHierarchy">Si es <see langword="true" />, escribe el contenido de la tabla actual y de todos sus descendientes. Si es <see langword="false" /> (valor predeterminado), escribe sólo los datos para la tabla actual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)">
      <summary>Escribe en la secuencia especificada la estructura de datos actual del objeto <see cref="T:System.Data.DataTable" /> como esquema XML.</summary>
      <param name="stream">Secuencia en la que se va a escribir el esquema XML.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
      <summary>Escribe en la secuencia especificada la estructura de datos actual del objeto <see cref="T:System.Data.DataTable" /> como esquema XML. Para guardar el esquema de la tabla y de todos sus descendientes, establezca el parámetro <paramref name="writeHierarchy" /> en <see langword="true" />.</summary>
      <param name="stream">Secuencia en la que se va a escribir el esquema XML.</param>
      <param name="writeHierarchy">Si es <see langword="true" />, escribe el esquema de la tabla actual y de todos sus descendientes. Si es <see langword="false" /> (valor predeterminado), sólo escribe el esquema de la tabla actual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)">
      <summary>Escribe la estructura de datos actual del objeto <see cref="T:System.Data.DataTable" /> como esquema XML, utilizando el objeto <see cref="T:System.IO.TextWriter" /> especificado.</summary>
      <param name="writer">
        <see cref="T:System.IO.TextWriter" /> con el que se va a escribir.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
      <summary>Escribe la estructura de datos actual del objeto <see cref="T:System.Data.DataTable" /> como esquema XML, utilizando el objeto <see cref="T:System.IO.TextWriter" /> especificado. Para guardar el esquema de la tabla y de todos sus descendientes, establezca el parámetro <paramref name="writeHierarchy" /> en <see langword="true" />.</summary>
      <param name="writer">
        <see cref="T:System.IO.TextWriter" /> con el que se va a escribir.</param>
      <param name="writeHierarchy">Si es <see langword="true" />, escribe el esquema de la tabla actual y de todos sus descendientes. Si es <see langword="false" /> (valor predeterminado), sólo escribe el esquema de la tabla actual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.String)">
      <summary>Escribe en el archivo especificado la estructura de datos actual del objeto <see cref="T:System.Data.DataTable" /> como esquema XML.</summary>
      <param name="fileName">Nombre del archivo que se va a utilizar.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
      <summary>Escribe en el archivo especificado la estructura de datos actual del objeto <see cref="T:System.Data.DataTable" /> como esquema XML. Para guardar el esquema de la tabla y de todos sus descendientes, establezca el parámetro <paramref name="writeHierarchy" /> en <see langword="true" />.</summary>
      <param name="fileName">Nombre del archivo que se va a utilizar.</param>
      <param name="writeHierarchy">Si es <see langword="true" />, escribe el esquema de la tabla actual y de todos sus descendientes. Si es <see langword="false" /> (valor predeterminado), sólo escribe el esquema de la tabla actual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)">
      <summary>Escribe la estructura de datos actual del objeto <see cref="T:System.Data.DataTable" /> como esquema XML, utilizando el objeto <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="writer">Objeto <see cref="T:System.Xml.XmlWriter" /> que se va a usar.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
      <summary>Escribe la estructura de datos actual del objeto <see cref="T:System.Data.DataTable" /> como esquema XML, utilizando el objeto <see cref="T:System.Xml.XmlWriter" /> especificado. Para guardar el esquema de la tabla y de todos sus descendientes, establezca el parámetro <paramref name="writeHierarchy" /> en <see langword="true" />.</summary>
      <param name="writer">Objeto <see cref="T:System.Xml.XmlWriter" /> que se utiliza para escribir el documento.</param>
      <param name="writeHierarchy">Si es <see langword="true" />, escribe el esquema de la tabla actual y de todos sus descendientes. Si es <see langword="false" /> (valor predeterminado), sólo escribe el esquema de la tabla actual.</param>
    </member>
    <member name="P:System.Data.DataTable.CaseSensitive">
      <summary>Indica si las comparaciones de cadenas en la tabla distinguen entre mayúsculas y minúsculas.</summary>
      <returns>
        <see langword="true" /> si la comparación distingue entre mayúsculas y minúsculas; de lo contrario, <see langword="false" />. El valor predeterminado se establece en la propiedad <see cref="T:System.Data.DataSet" /> del objeto <see cref="P:System.Data.DataSet.CaseSensitive" /> primario, o bien en <see langword="false" /> si <see cref="T:System.Data.DataTable" /> se ha creado independientemente de <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.ChildRelations">
      <summary>Obtiene la colección de relaciones secundarias para este <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Colección <see cref="T:System.Data.DataRelationCollection" /> que contiene las relaciones secundarias para la tabla. Si no existe ningún objeto <see cref="T:System.Data.DataRelation" />, se devuelve una colección vacía.</returns>
    </member>
    <member name="P:System.Data.DataTable.Columns">
      <summary>Obtiene la colección de columnas que pertenecen a esta tabla.</summary>
      <returns>Objeto <see cref="T:System.Data.DataColumnCollection" /> que contiene la colección de objetos <see cref="T:System.Data.DataColumn" /> para la tabla. Si no existe ningún objeto <see cref="T:System.Data.DataColumn" />, se devuelve una colección vacía.</returns>
    </member>
    <member name="P:System.Data.DataTable.Constraints">
      <summary>Obtiene la colección de restricciones mantenidas por esta tabla.</summary>
      <returns>Objeto <see cref="T:System.Data.ConstraintCollection" /> que contiene la colección de objetos <see cref="T:System.Data.Constraint" /> para la tabla. Si no existe ningún objeto <see cref="T:System.Data.Constraint" />, se devuelve una colección vacía.</returns>
    </member>
    <member name="P:System.Data.DataTable.DataSet">
      <summary>Obtiene el objeto <see cref="T:System.Data.DataSet" /> al que pertenece esta tabla.</summary>
      <returns>Objeto <see cref="T:System.Data.DataSet" /> al que pertenece esta tabla.</returns>
    </member>
    <member name="P:System.Data.DataTable.DefaultView">
      <summary>Obtiene una vista personalizada de la tabla que puede incluir una vista filtrada o una posición del cursor.</summary>
      <returns>Objeto <see cref="T:System.Data.DataView" /> asociado a <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.DisplayExpression">
      <summary>Obtiene o establece la expresión que devuelve un valor utilizado para representar esta tabla en la interfaz de usuario. La propiedad <see langword="DisplayExpression" /> permite mostrar el nombre de esta tabla en una interfaz de usuario.</summary>
      <returns>Cadena de representación.</returns>
    </member>
    <member name="P:System.Data.DataTable.ExtendedProperties">
      <summary>Obtiene la colección de información personalizada del usuario.</summary>
      <returns>
        <see cref="T:System.Data.PropertyCollection" /> que contiene información personalizada del usuario.</returns>
    </member>
    <member name="P:System.Data.DataTable.HasErrors">
      <summary>Obtiene un valor que indica si hay errores en cualquier fila de cualquier tabla del <see cref="T:System.Data.DataSet" /> al que pertenece la tabla.</summary>
      <returns>
        <see langword="true" /> si existen errores; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.IsInitialized">
      <summary>Obtiene un valor que indica si el objeto <see cref="T:System.Data.DataTable" /> está inicializado.</summary>
      <returns>
        <see langword="true" /> para indicar que el componente ha terminado la inicialización; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.Locale">
      <summary>Obtiene o establece la información de configuración regional que se utiliza para comparar cadenas de la tabla.</summary>
      <returns>
        <see cref="T:System.Globalization.CultureInfo" /> que contiene datos sobre la configuración regional del equipo del usuario. El valor predeterminado es <see cref="T:System.Data.DataSet" /> del objeto <see cref="T:System.Globalization.CultureInfo" /> (devuelto por la propiedad <see cref="P:System.Data.DataSet.Locale" />) al que pertenece <see cref="T:System.Data.DataTable" />; si la tabla no pertenece a ningún <see cref="T:System.Data.DataSet" />, el valor predeterminado es <see cref="T:System.Globalization.CultureInfo" /> del sistema actual.</returns>
    </member>
    <member name="P:System.Data.DataTable.MinimumCapacity">
      <summary>Obtiene o establece el tamaño inicial para esta tabla.</summary>
      <returns>Tamaño inicial en filas de esta tabla. El valor predeterminado es 50.</returns>
    </member>
    <member name="P:System.Data.DataTable.Namespace">
      <summary>Obtiene o establece el espacio de nombres para la representación XML de los datos almacenados en el objeto <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Espacio de nombres de <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.ParentRelations">
      <summary>Obtiene la colección de relaciones primarias para este <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Colección <see cref="T:System.Data.DataRelationCollection" /> que contiene las relaciones primarias para la tabla. Si no existe ningún objeto <see cref="T:System.Data.DataRelation" />, se devuelve una colección vacía.</returns>
    </member>
    <member name="P:System.Data.DataTable.Prefix">
      <summary>Obtiene o establece el espacio de nombres para la representación XML de los datos almacenados en el objeto <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Prefijo de <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.PrimaryKey">
      <summary>Obtiene o establece una matriz de columnas que funcionan como claves principales para la tabla de datos.</summary>
      <exception cref="T:System.Data.DataException">Se trata de una clave externa.</exception>
      <returns>Matriz de objetos <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.RemotingFormat">
      <summary>Obtiene o establece el formato de serialización.</summary>
      <returns>Enumeración <see cref="T:System.Data.SerializationFormat" /> que especifica si la serialización es <see langword="Binary" /> o <see langword="Xml" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.Rows">
      <summary>Obtiene la colección de filas que pertenecen a esta tabla.</summary>
      <returns>
        <see cref="T:System.Data.DataRowCollection" /> que contiene objetos <see cref="T:System.Data.DataRow" />; en caso contrario, valor nulo si no existe ningún objeto <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.Site">
      <summary>Obtiene o establece una interfaz <see cref="T:System.ComponentModel.ISite" /> para el objeto <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Estructura <see cref="T:System.ComponentModel.ISite" /> para la colección <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</summary>
      <returns>
        <see langword="true" /> si la colección es una colección de objetos <see cref="T:System.Collections.IList" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.TableName">
      <summary>Obtiene o establece el nombre de <see cref="T:System.Data.DataTable" />.</summary>
      <exception cref="T:System.ArgumentException">Se pasa un valor <see langword="null" /> o una cadena vacía ("") y esta tabla pertenece a una colección.</exception>
      <exception cref="T:System.Data.DuplicateNameException">La tabla pertenece a una colección que ya contiene una tabla con el mismo nombre. (La comparación distingue entre mayúsculas de minúsculas.)</exception>
      <returns>Nombre del objeto <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="T:System.Data.DataTableClearEventArgs">
      <summary>Proporciona datos para el método <see cref="M:System.Data.DataTable.Clear" />.</summary>
    </member>
    <member name="M:System.Data.DataTableClearEventArgs.#ctor(System.Data.DataTable)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataTableClearEventArgs" />.</summary>
      <param name="dataTable">
        <see cref="T:System.Data.DataTable" /> cuyas filas se van a borrar.</param>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.Table">
      <summary>Obtiene la tabla cuyas filas se van a borrar.</summary>
      <returns>
        <see cref="T:System.Data.DataTable" /> cuyas filas se van a borrar.</returns>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.TableName">
      <summary>Obtiene el nombre de la tabla cuyas filas se van a borrar.</summary>
      <returns>Un valor <see cref="T:System.String" /> que indica el nombre de la tabla.</returns>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.TableNamespace">
      <summary>Obtiene el espacio de nombres de la tabla cuyas filas se van a borrar.</summary>
      <returns>Un valor <see cref="T:System.String" /> que indica el nombre del espacio de nombres.</returns>
    </member>
    <member name="T:System.Data.DataTableClearEventHandler">
      <summary>Representa el método que controla el método <see cref="M:System.Data.DataTable.Clear" />.</summary>
      <param name="sender">Origen del evento.</param>
      <param name="e">Objeto <see cref="T:System.Data.DataTableClearEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="T:System.Data.DataTableCollection">
      <summary>Representa la colección de tablas para el <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="E:System.Data.DataTableCollection.CollectionChanged">
      <summary>Se produce después de que cambie la colección <see cref="T:System.Data.DataTableCollection" /> por agregar o quitar objetos <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="E:System.Data.DataTableCollection.CollectionChanging">
      <summary>Se produce mientras cambia la colección <see cref="T:System.Data.DataTableCollection" /> porque se están agregando o quitando objetos <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataTableCollection.Add">
      <summary>Crea un nuevo objeto <see cref="T:System.Data.DataTable" /> utilizando un nombre predeterminado y lo agrega a la colección.</summary>
      <returns>Colección <see cref="T:System.Data.DataTable" /> creada recientemente.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.Data.DataTable)">
      <summary>Agrega el <see langword="DataTable" /> especificado a la colección.</summary>
      <param name="table">Objeto <see langword="DataTable" /> que se agrega.</param>
      <exception cref="T:System.ArgumentNullException">El valor especificado para la tabla es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La tabla ya pertenece a esta colección o pertenece a otra colección.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Una tabla de la colección tiene el mismo nombre. La comparación no distingue entre mayúsculas y minúsculas.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.String)">
      <summary>Crea un objeto <see cref="T:System.Data.DataTable" /> utilizando el nombre especificado y lo agrega a la colección.</summary>
      <param name="name">Nombre que se va a asignar al <see cref="T:System.Data.DataTable" /> creado.</param>
      <exception cref="T:System.Data.DuplicateNameException">Una tabla de la colección tiene el mismo nombre. La comparación no distingue entre mayúsculas y minúsculas.</exception>
      <returns>Colección <see cref="T:System.Data.DataTable" /> creada recientemente.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.String,System.String)">
      <summary>Crea un objeto <see cref="T:System.Data.DataTable" /> utilizando el nombre especificado y lo agrega a la colección.</summary>
      <param name="name">Nombre que se va a asignar al <see cref="T:System.Data.DataTable" /> creado.</param>
      <param name="tableNamespace">Espacio de nombres que se va a asignar al objeto <see cref="T:System.Data.DataTable" /> creado.</param>
      <exception cref="T:System.Data.DuplicateNameException">Una tabla de la colección tiene el mismo nombre. La comparación no distingue entre mayúsculas y minúsculas.</exception>
      <returns>Colección <see cref="T:System.Data.DataTable" /> creada recientemente.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.AddRange(System.Data.DataTable[])">
      <summary>Copia los elementos de la matriz <see cref="T:System.Data.DataTable" /> especificada al final de la colección.</summary>
      <param name="tables">Matriz de objetos <see cref="T:System.Data.DataTable" /> que se va a agregar a la colección.</param>
    </member>
    <member name="M:System.Data.DataTableCollection.CanRemove(System.Data.DataTable)">
      <summary>Comprueba si el objeto <see cref="T:System.Data.DataTable" /> especificado se puede quitar de la colección.</summary>
      <param name="table">
        <see langword="DataTable" /> de la colección en el que se desea realizar la comprobación.</param>
      <returns>
        <see langword="true" /> si se puede quitar la tabla; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Clear">
      <summary>Borra todos los objetos <see cref="T:System.Data.DataTable" /> de la colección.</summary>
    </member>
    <member name="M:System.Data.DataTableCollection.Contains(System.String)">
      <summary>Obtiene un valor que indica si en la colección existe un objeto <see cref="T:System.Data.DataTable" /> con el nombre especificado.</summary>
      <param name="name">Nombre de <see cref="T:System.Data.DataTable" /> que se va a buscar.</param>
      <returns>
        <see langword="true" /> si existe la tabla especificada; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Contains(System.String,System.String)">
      <summary>Obtiene un valor que indica si existe en la colección un objeto <see cref="T:System.Data.DataTable" /> con el nombre y espacio de nombres de tabla especificados.</summary>
      <param name="name">Nombre de <see cref="T:System.Data.DataTable" /> que se va a buscar.</param>
      <param name="tableNamespace">Nombre del espacio de nombres de <see cref="T:System.Data.DataTable" /> en el que se va a buscar.</param>
      <returns>
        <see langword="true" /> si existe la tabla especificada; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)">
      <summary>Copia todos los elementos de la colección <see cref="T:System.Data.DataTableCollection" /> actual en una matriz <see cref="T:System.Array" /> unidimensional, empezando por el índice especificado de la matriz de destino.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensional en la que se copian los elementos del objeto <see cref="T:System.Data.DataTableCollection" /> actual.</param>
      <param name="index">Índice de destino del <see cref="T:System.Array" /> en el que se empieza a copiar.</param>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.Data.DataTable)">
      <summary>Obtiene el índice del objeto <see cref="T:System.Data.DataTable" /> especificado.</summary>
      <param name="table">
        <see langword="DataTable" /> que se va a buscar.</param>
      <returns>Índice de base cero de la tabla, o -1 si la tabla no se encuentra en la colección.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.String)">
      <summary>Obtiene el índice del objeto <see cref="T:System.Data.DataTable" /> con el nombre especificado en la colección.</summary>
      <param name="tableName">Nombre del objeto <see langword="DataTable" /> que se desea buscar.</param>
      <returns>Índice de base cero del objeto <see langword="DataTable" /> con el nombre especificado o -1 si la tabla no existe en la colección.  
  
 <block subset="none" type="note"><para>  
 Devuelve -1 cuando dos o más tablas tienen el mismo nombre pero distintos espacios de nombres. Se producirá un error en la llamada si existe alguna ambigüedad al hacer coincidir exactamente una tabla con su nombre de tabla.</para></block></returns>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.String,System.String)">
      <summary>Obtiene el índice del objeto <see cref="T:System.Data.DataTable" /> especificado en la colección.</summary>
      <param name="tableName">Nombre del objeto <see cref="T:System.Data.DataTable" /> que se desea buscar.</param>
      <param name="tableNamespace">Nombre del espacio de nombres de <see cref="T:System.Data.DataTable" /> en el que se va a buscar.</param>
      <returns>Índice de base cero del objeto <see cref="T:System.Data.DataTable" /> con el nombre especificado o -1 si la tabla no existe en la colección.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.Data.DataTable)">
      <summary>Quita el objeto <see cref="T:System.Data.DataTable" /> especificado de la colección.</summary>
      <param name="table">
        <see langword="DataTable" /> que se va a quitar.</param>
      <exception cref="T:System.ArgumentNullException">El valor especificado para la tabla es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La tabla no pertenece a esta colección.  
  
 o bien  
  
 La tabla forma parte de una relación.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.String)">
      <summary>Quita el objeto <see cref="T:System.Data.DataTable" /> con el nombre especificado de la colección.</summary>
      <param name="name">El nombre del objeto <see cref="T:System.Data.DataTable" /> que se va a quitar.</param>
      <exception cref="T:System.ArgumentException">La colección no tiene ninguna tabla con el nombre especificado.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.String,System.String)">
      <summary>Quita el objeto <see cref="T:System.Data.DataTable" /> con el nombre especificado de la colección.</summary>
      <param name="name">El nombre del objeto <see cref="T:System.Data.DataTable" /> que se va a quitar.</param>
      <param name="tableNamespace">Nombre del espacio de nombres de <see cref="T:System.Data.DataTable" /> en el que se va a buscar.</param>
      <exception cref="T:System.ArgumentException">La colección no tiene ninguna tabla con el nombre especificado.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.RemoveAt(System.Int32)">
      <summary>Quita el objeto <see cref="T:System.Data.DataTable" /> del índice especificado de la colección.</summary>
      <param name="index">Índice del objeto <see langword="DataTable" /> que se va a quitar.</param>
      <exception cref="T:System.ArgumentException">La colección no tiene ninguna tabla con el índice especificado.</exception>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.Int32)">
      <summary>Obtiene el objeto <see cref="T:System.Data.DataTable" /> en el índice especificado.</summary>
      <param name="index">El índice de base cero de <see cref="T:System.Data.DataTable" /> que se va a buscar.</param>
      <exception cref="T:System.IndexOutOfRangeException">El valor de índice es mayor que el número de elementos de la colección.</exception>
      <returns>
        <see cref="T:System.Data.DataTable" />Con el índice especificado; en caso contrario, <see langword="null" /> si no <see cref="T:System.Data.DataTable" /> existe.</returns>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.String)">
      <summary>Obtiene el <see cref="T:System.Data.DataTable" /> con el nombre especificado.</summary>
      <param name="name">Nombre de <see langword="DataTable" /> que se va a buscar.</param>
      <returns>
        <see cref="T:System.Data.DataTable" /> con el nombre especificado; en caso contrario, <see langword="null" /> si <see cref="T:System.Data.DataTable" /> no existe.</returns>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.String,System.String)">
      <summary>Obtiene el objeto <see cref="T:System.Data.DataTable" /> con el nombre especificado en el espacio de nombres indicado.</summary>
      <param name="name">Nombre de <see langword="DataTable" /> que se va a buscar.</param>
      <param name="tableNamespace">Nombre del espacio de nombres de <see cref="T:System.Data.DataTable" /> en el que se va a buscar.</param>
      <returns>
        <see cref="T:System.Data.DataTable" /> con el nombre especificado; en caso contrario, <see langword="null" /> si <see cref="T:System.Data.DataTable" /> no existe.</returns>
    </member>
    <member name="T:System.Data.DataTableExtensions">
      <summary>Define los métodos de extensión para la clase <see cref="T:System.Data.DataTable" />. <see cref="T:System.Data.DataTableExtensions" /> es una clase estática.</summary>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)">
      <summary>Crea y devuelve un objeto <see cref="T:System.Data.DataView" /> habilitado para LINQ.</summary>
      <param name="table">
        <see cref="T:System.Data.DataTable" /> de origen a partir del que se crea el objeto <see cref="T:System.Data.DataView" /> habilitado para LINQ.</param>
      <returns>Objeto <see cref="T:System.Data.DataView" /> habilitado para LINQ.</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})">
      <summary>Crea y devuelve un objeto <see cref="T:System.Data.DataView" /> habilitado para LINQ que representa la consulta de LINQ to DataSet.</summary>
      <param name="source">Consulta de LINQ to DataSet de origen a partir de la que se crea el objeto <see cref="T:System.Data.DataView" /> habilitado para LINQ.</param>
      <typeparam name="T">Tipo de objetos de la secuencia de origen, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <returns>Objeto <see cref="T:System.Data.DataView" /> habilitado para LINQ.</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)">
      <summary>Devuelve un objeto <see cref="T:System.Collections.Generic.IEnumerable`1" />, donde el parámetro <paramref name="T" /> genérico es <see cref="T:System.Data.DataRow" />. Este objeto puede usarse en una expresión LINQ o en una consulta de método.</summary>
      <param name="source">
        <see cref="T:System.Data.DataTable" /> de origen que se va a volver enumerable.</param>
      <exception cref="T:System.ArgumentNullException">El valor del objeto <see cref="T:System.Data.DataTable" /> de origen es <see langword="null" />.</exception>
      <returns>Objeto <see cref="T:System.Collections.Generic.IEnumerable`1" />, donde el parámetro <paramref name="T" /> genérico es <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Devuelve un objeto <see cref="T:System.Data.DataTable" /> que contiene copias de los objetos <see cref="T:System.Data.DataRow" />, dado un objeto <see cref="T:System.Collections.Generic.IEnumerable`1" /> de entrada donde el parámetro <paramref name="T" /> genérico es <see cref="T:System.Data.DataRow" />.</summary>
      <param name="source">Secuencia <see cref="T:System.Collections.Generic.IEnumerable`1" /> de origen.</param>
      <typeparam name="T">Tipo de objetos de la secuencia de origen, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">La secuencia <see cref="T:System.Collections.Generic.IEnumerable`1" /> de origen es <see langword="null" /> y no se puede crear una tabla nueva.</exception>
      <exception cref="T:System.InvalidOperationException">El estado de un objeto <see cref="T:System.Data.DataRow" /> de la secuencia de origen es <see cref="F:System.Data.DataRowState.Deleted" />.  
  
La secuencia de origen no contiene ningún objeto <see cref="T:System.Data.DataRow" />.  
  
El valor de un objeto <see cref="T:System.Data.DataRow" /> de la secuencia de origen es <see langword="null" />.</exception>
      <returns>
        <see cref="T:System.Data.DataTable" /> que contiene la secuencia de entrada como tipo de los objetos <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)">
      <summary>Copia objetos <see cref="T:System.Data.DataRow" /> en el objeto <see cref="T:System.Data.DataTable" /> especificado, dado un objeto <see cref="T:System.Collections.Generic.IEnumerable`1" /> de entrada donde el parámetro <paramref name="T" /> genérico es <see cref="T:System.Data.DataRow" />.</summary>
      <param name="source">Secuencia <see cref="T:System.Collections.Generic.IEnumerable`1" /> de origen.</param>
      <param name="table">
        <see cref="T:System.Data.DataTable" /> de destino.</param>
      <param name="options">Enumeración <see cref="T:System.Data.LoadOption" /> que especifica las opciones de carga de <see cref="T:System.Data.DataTable" />.</param>
      <typeparam name="T">Tipo de objetos de la secuencia de origen, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <exception cref="T:System.ArgumentException">Los objetos <see cref="T:System.Data.DataRow" /> copiados no se ajustan al esquema del objeto <see cref="T:System.Data.DataTable" /> de destino.</exception>
      <exception cref="T:System.ArgumentNullException">La secuencia <see cref="T:System.Collections.Generic.IEnumerable`1" /> de origen es <see langword="null" /> o el objeto <see cref="T:System.Data.DataTable" /> de destino es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">El estado de un objeto <see cref="T:System.Data.DataRow" /> de la secuencia de origen es <see cref="F:System.Data.DataRowState.Deleted" />.  
  
La secuencia de origen no contiene ningún objeto <see cref="T:System.Data.DataRow" />.  
  
El valor de un objeto <see cref="T:System.Data.DataRow" /> de la secuencia de origen es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
      <summary>Copia objetos <see cref="T:System.Data.DataRow" /> en el objeto <see cref="T:System.Data.DataTable" /> especificado, dado un objeto <see cref="T:System.Collections.Generic.IEnumerable`1" /> de entrada donde el parámetro <paramref name="T" /> genérico es <see cref="T:System.Data.DataRow" />.</summary>
      <param name="source">Secuencia <see cref="T:System.Collections.Generic.IEnumerable`1" /> de origen.</param>
      <param name="table">
        <see cref="T:System.Data.DataTable" /> de destino.</param>
      <param name="options">Enumeración <see cref="T:System.Data.LoadOption" /> que especifica las opciones de carga de <see cref="T:System.Data.DataTable" />.</param>
      <param name="errorHandler">Delegado <see cref="T:System.Data.FillErrorEventHandler" /> que representa el método que va a controlar un error.</param>
      <typeparam name="T">Tipo de objetos de la secuencia de origen, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <exception cref="T:System.ArgumentException">Los objetos <see cref="T:System.Data.DataRow" /> copiados no se ajustan al esquema del objeto <see cref="T:System.Data.DataTable" /> de destino.</exception>
      <exception cref="T:System.ArgumentNullException">La secuencia <see cref="T:System.Collections.Generic.IEnumerable`1" /> de origen es <see langword="null" /> o el objeto <see cref="T:System.Data.DataTable" /> de destino es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">El estado de un objeto <see cref="T:System.Data.DataRow" /> de la secuencia de origen es <see cref="F:System.Data.DataRowState.Deleted" />.  
  
o bien 
La secuencia de origen no contiene ningún objeto <see cref="T:System.Data.DataRow" />.  
  
o bien 
El valor de un objeto <see cref="T:System.Data.DataRow" /> de la secuencia de origen es <see langword="null" />.</exception>
    </member>
    <member name="T:System.Data.DataTableNewRowEventArgs">
      <summary>Proporciona datos para el método <see cref="M:System.Data.DataTable.NewRow" />.</summary>
    </member>
    <member name="M:System.Data.DataTableNewRowEventArgs.#ctor(System.Data.DataRow)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataTableNewRowEventArgs" />.</summary>
      <param name="dataRow">
        <see cref="T:System.Data.DataRow" /> que se va a agregar.</param>
    </member>
    <member name="P:System.Data.DataTableNewRowEventArgs.Row">
      <summary>Obtiene la fila que se va a agregar.</summary>
      <returns>El objeto <see cref="T:System.Data.DataRow" /> que se va a agregar.</returns>
    </member>
    <member name="T:System.Data.DataTableNewRowEventHandler">
      <summary>Representa el método que controla el método <see cref="M:System.Data.DataTable.NewRow" />.</summary>
      <param name="sender">Origen del evento.</param>
      <param name="e">
        <see cref="T:System.Data.DataTableNewRowEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="T:System.Data.DataTableReader">
      <summary>El <see cref="T:System.Data.DataTableReader" /> obtiene el contenido de uno o más objetos <see cref="T:System.Data.DataTable" /> con formato de uno o más conjuntos de solo lectura y de solo avance.</summary>
    </member>
    <member name="M:System.Data.DataTableReader.#ctor(System.Data.DataTable)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataTableReader" /> utilizando los datos del objeto <see cref="T:System.Data.DataTable" /> proporcionado.</summary>
      <param name="dataTable">Objeto <see cref="T:System.Data.DataTable" /> del que va a obtener su conjunto de resultados el nuevo objeto <see cref="T:System.Data.DataTableReader" />.</param>
    </member>
    <member name="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataTableReader" /> utilizando la matriz proporcionada de objetos <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTables">Matriz de objetos <see cref="T:System.Data.DataTable" /> que proporciona los resultados para el nuevo objeto <see cref="T:System.Data.DataTableReader" />.</param>
    </member>
    <member name="M:System.Data.DataTableReader.Close">
      <summary>Cierra el objeto <see cref="T:System.Data.DataTableReader" /> actual.</summary>
    </member>
    <member name="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
      <summary>Obtiene el valor de la columna especificada como objeto <see cref="T:System.Boolean" />.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException">Se ha intentado la lectura o el acceso a una columna en un objeto <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
      <exception cref="T:System.InvalidCastException">La columna especificada no contiene un objeto <see langword="Boolean" />.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetByte(System.Int32)">
      <summary>Obtiene el valor de la columna especificada como un byte.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException">Se ha intentado la lectura o el acceso a una columna en un objeto <see langword="DataTableReader" /> cerrado.</exception>
      <exception cref="T:System.InvalidCastException">La columna especificada no contiene un byte.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Lee una secuencia de bytes que comienza en la posición de desplazamiento de la columna especificada cargándola al búfer como una matriz, comenzando a cargar desde la posición de desplazamiento de búfer especificada.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <param name="dataIndex">Índice del campo a partir del cual se va a comenzar la operación de lectura.</param>
      <param name="buffer">Búfer en el que se va a leer la secuencia de bytes.</param>
      <param name="bufferIndex">Índice en el búfer en el que se van a comenzar a colocar los datos.</param>
      <param name="length">Longitud máxima que se puede copiar en el búfer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException">Se ha intentado la lectura o el acceso a una columna en un objeto <see langword="DataTableReader" /> cerrado.</exception>
      <exception cref="T:System.InvalidCastException">La columna especificada no contiene una matriz de bytes.</exception>
      <returns>El número real de bytes que se leen.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetChar(System.Int32)">
      <summary>Obtiene el valor de la columna especificada como un carácter.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException">Se ha intentado la lectura o el acceso a una columna en un objeto <see langword="DataTableReader" /> cerrado.</exception>
      <exception cref="T:System.InvalidCastException">El campo especificado no contiene un carácter.</exception>
      <returns>Valor de la columna.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Devuelve el valor de la columna especificada como una matriz de caracteres.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <param name="dataIndex">Índice del campo a partir del cual se va a comenzar la operación de lectura.</param>
      <param name="buffer">Búfer en el que se va a leer la secuencia de caracteres.</param>
      <param name="bufferIndex">Índice en el búfer en el que se van a comenzar a colocar los datos.</param>
      <param name="length">Longitud máxima que se puede copiar en el búfer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException">Se ha intentado la lectura o el acceso a una columna en un objeto <see langword="DataTableReader" /> cerrado.</exception>
      <exception cref="T:System.InvalidCastException">La columna especificada no contiene una matriz de caracteres.</exception>
      <returns>Número real de caracteres que se leen.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)">
      <summary>Obtiene una cadena que representa el tipo de datos de la columna especificada.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.InvalidOperationException">Se ha intentado la lectura o el acceso a una columna en un objeto <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
      <returns>Cadena que representa el tipo de datos de la columna.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
      <summary>Obtiene el valor de la columna especificada como un objeto <see cref="T:System.DateTime" />.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException">Se ha intentado la lectura o el acceso a una columna en un objeto <see langword="DataTableReader" /> cerrado.</exception>
      <exception cref="T:System.InvalidCastException">La columna especificada no contiene un valor de DateTime.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
      <summary>Obtiene el valor de la columna especificada como objeto <see cref="T:System.Decimal" />.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException">Se ha intentado la lectura o el acceso a una columna en un objeto <see langword="DataTableReader" /> cerrado.</exception>
      <exception cref="T:System.InvalidCastException">La columna especificada no contiene un valor <see langword="Decimal" />.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetDouble(System.Int32)">
      <summary>Obtiene el valor de la columna como un número de punto flotante de precisión doble.</summary>
      <param name="ordinal">Ordinal basado en cero de la columna.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException">Se ha intentado la lectura o el acceso a una columna en un objeto <see langword="DataTableReader" /> cerrado.</exception>
      <exception cref="T:System.InvalidCastException">La columna especificada no contiene un número de punto flotante de precisión doble.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetEnumerator">
      <summary>Devuelve un enumerador que puede utilizarse para recorrer una iteración en la colección de elementos.</summary>
      <exception cref="T:System.InvalidOperationException">Se ha intentado la lectura o el acceso a una columna en un objeto <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
      <returns>Objeto <see cref="T:System.Collections.IEnumerator" /> que representa la colección de elementos.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetFieldType(System.Int32)">
      <summary>Obtiene el objeto <see cref="T:System.Type" /> que es el tipo de datos del objeto.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.InvalidOperationException">Se ha intentado la lectura o el acceso a una columna en un elemento <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
      <returns>
        <see cref="T:System.Type" />, que el tipo de datos del objeto.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetFloat(System.Int32)">
      <summary>Obtiene el valor de la columna especificada como un número de punto flotante de precisión sencilla.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException">Se ha intentado la lectura o el acceso a una columna en un objeto <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
      <exception cref="T:System.InvalidCastException">La columna especificada no contiene un número de punto flotante de precisión sencilla.</exception>
      <returns>Valor de la columna.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetGuid(System.Int32)">
      <summary>Obtiene el valor de la columna especificada como un identificador global único (GUID).</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException">Se ha intentado la lectura o el acceso a una columna en un objeto <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
      <exception cref="T:System.InvalidCastException">La columna especificada no contiene un identificador GUID.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt16(System.Int32)">
      <summary>Obtiene el valor de la columna especificada como un entero de 16 bits con signo.</summary>
      <param name="ordinal">Índice de columna de base cero</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException">Se ha intentado la lectura o el acceso a una columna en un objeto <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
      <exception cref="T:System.InvalidCastException">La columna especificada no contiene un entero de 16 bits con signo.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt32(System.Int32)">
      <summary>Obtiene el valor de la columna especificada como un entero con signo de 32 bits.</summary>
      <param name="ordinal">Índice de columna de base cero</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException">Se ha intentado la lectura o el acceso a una columna en un elemento <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
      <exception cref="T:System.InvalidCastException">La columna especificada no contiene un valor de entero de 32 bits con signo.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt64(System.Int32)">
      <summary>Obtiene el valor de la columna especificada como un entero de 64 bits con signo.</summary>
      <param name="ordinal">Índice de columna de base cero</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException">Se ha intentado la lectura o el acceso a una columna en un elemento <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
      <exception cref="T:System.InvalidCastException">La columna especificada no contiene un valor de entero con signo de 64 bits.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetName(System.Int32)">
      <summary>Obtiene el valor de la columna especificada como objeto <see cref="T:System.String" />.</summary>
      <param name="ordinal">Índice de columna de base cero</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.InvalidOperationException">Se ha intentado la lectura o el acceso a una columna en un objeto <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
      <returns>El nombre de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetOrdinal(System.String)">
      <summary>Obtiene el índice de columna a partir del nombre de la columna determinado.</summary>
      <param name="name">El nombre de la columna.</param>
      <exception cref="T:System.InvalidOperationException">Se ha intentado la lectura o el acceso a una columna en un objeto <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
      <exception cref="T:System.ArgumentException">El nombre especificado no es un nombre de columna válido.</exception>
      <returns>Índice de la columna de base cero.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)">
      <summary>Obtiene el tipo de la columna especificada en el formato específico del proveedor.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.InvalidOperationException">Se ha intentado la lectura o el acceso a una columna en un objeto <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
      <returns>
        <see cref="T:System.Type" />, que el tipo de datos del objeto.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)">
      <summary>Obtiene el valor de la columna especificada en el formato específico del proveedor.</summary>
      <param name="ordinal">Número de base cero de la columna cuyo valor se va a recuperar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException">Se ha intentado la lectura o el acceso a una columna en un objeto <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
      <returns>Valor de la columna especificada en el formato específico del proveedor.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])">
      <summary>Rellena la matriz proporcionada de información de tipo específico del proveedor para todas las columnas del objeto <see cref="T:System.Data.DataTableReader" />.</summary>
      <param name="values">Matriz de objetos que se va a rellenar con información de tipo para las columnas del objeto <see cref="T:System.Data.DataTableReader" />.</param>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException">Se ha intentado la lectura o el acceso a una columna en un objeto <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
      <returns>Número de valores de columna copiados en la matriz.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetSchemaTable">
      <summary>Devuelve un objeto <see cref="T:System.Data.DataTable" /> que describe los metadatos de columna del <see cref="T:System.Data.DataTableReader" />.</summary>
      <exception cref="T:System.InvalidOperationException">La clase <see cref="T:System.Data.DataTableReader" /> está cerrada.</exception>
      <returns>
        <see cref="T:System.Data.DataTable" /> que describe los metadatos de columna.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetString(System.Int32)">
      <summary>Obtiene el valor de la columna especificada como una cadena.</summary>
      <param name="ordinal">Índice de columna de base cero</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException">Se ha intentado la lectura o el acceso a una columna en un objeto <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
      <exception cref="T:System.InvalidCastException">La columna especificada no contiene una cadena.</exception>
      <returns>El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetValue(System.Int32)">
      <summary>Obtiene el valor de la columna especificada en su formato nativo.</summary>
      <param name="ordinal">Índice de columna de base cero</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException">Se ha intentado la lectura o el acceso a columnas en un elemento <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
      <returns>El valor de la columna especificada. Este método devuelve <see langword="DBNull" /> para las columnas null.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetValues(System.Object[])">
      <summary>Rellena una matriz de objetos con los valores de columna de la fila actual.</summary>
      <param name="values">Matriz de <see cref="T:System.Object" /> en la que se copian los valores de las columnas del objeto <see cref="T:System.Data.DataTableReader" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException">Se ha intentado la lectura o el acceso a una columna en un elemento <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
      <returns>Número de valores de columna copiados en la matriz.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.IsDBNull(System.Int32)">
      <summary>Obtiene un valor que indica si la columna contiene valores no existentes o que faltan.</summary>
      <param name="ordinal">Índice de columna de base cero</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException">Se ha intentado la lectura o el acceso a una columna en un elemento <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
      <returns>
        <see langword="true" /> si el valor de la columna especificada equivale a <see cref="T:System.DBNull" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.NextResult">
      <summary>Avanza el objeto <see cref="T:System.Data.DataTableReader" /> al conjunto de resultados siguiente, si hay alguno.</summary>
      <exception cref="T:System.InvalidOperationException">Se ha intentado navegar en un objeto <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
      <returns>
        <see langword="true" /> si hay otro conjunto de resultados; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.Read">
      <summary>Desplaza <see cref="T:System.Data.DataTableReader" /> al siguiente registro.</summary>
      <exception cref="T:System.InvalidOperationException">Se ha intentado la lectura o el acceso a una columna en un elemento <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
      <returns>
        <see langword="true" /> si hay alguna otra fila que leer; de lo contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataTableReader.Depth">
      <summary>Profundidad del anidamiento para la fila actual del objeto <see cref="T:System.Data.DataTableReader" />.</summary>
      <returns>Profundidad del anidamiento para la fila actual, siempre es cero.</returns>
    </member>
    <member name="P:System.Data.DataTableReader.FieldCount">
      <summary>Devuelve el número de columnas de la fila actual.</summary>
      <exception cref="T:System.InvalidOperationException">Se ha intentado recuperar el recuento de campo en un objeto <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
      <returns>0, si no está situado en un conjunto de resultados válido; en caso contrario, número de columnas de la fila actual.</returns>
    </member>
    <member name="P:System.Data.DataTableReader.HasRows">
      <summary>Obtiene un valor que indica si <see cref="T:System.Data.DataTableReader" /> contiene una o varias filas.</summary>
      <exception cref="T:System.InvalidOperationException">Se ha intentado recuperar información sobre un objeto <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
      <returns>
        <see langword="true" /> si <see cref="T:System.Data.DataTableReader" /> contiene una o varias filas; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataTableReader.IsClosed">
      <summary>Obtiene un valor que indica si el objeto <see cref="T:System.Data.DataTableReader" /> está cerrado.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Data.DataTableReader" /> está cerrado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataTableReader.Item(System.Int32)">
      <summary>Obtiene el valor de la columna especificada en su formato nativo si se da el índice de columna.</summary>
      <param name="ordinal">Índice de la columna de base cero.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <returns>Valor de la columna especificada en su formato nativo.</returns>
    </member>
    <member name="P:System.Data.DataTableReader.Item(System.String)">
      <summary>Obtiene el valor de la columna especificada en su formato nativo si se da el nombre de la columna.</summary>
      <param name="name">El nombre de la columna.</param>
      <exception cref="T:System.ArgumentException">El nombre especificado no es un nombre de columna válido.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException">Se ha intentado la lectura o el acceso a una columna en un objeto <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
      <returns>Valor de la columna especificada en su formato nativo.</returns>
    </member>
    <member name="P:System.Data.DataTableReader.RecordsAffected">
      <summary>Obtiene el número de filas insertadas, modificadas o eliminadas al ejecutar la instrucción SQL.</summary>
      <returns>Siempre 0 porque el objeto <see cref="T:System.Data.DataTableReader" /> no admite esta propiedad.</returns>
    </member>
    <member name="T:System.Data.DataView">
      <summary>Representa una vista personalizada enlazables de datos de un objeto <see cref="T:System.Data.DataTable" /> para ordenación, filtrado, búsqueda, edición y navegación. <see cref="T:System.Data.DataView" /> no almacena datos, pero en su lugar representa una vista conectada de su <see cref="T:System.Data.DataTable" /> correspondiente. Los cambios en los datos de <see cref="T:System.Data.DataView" /> afectan a <see cref="T:System.Data.DataTable" />. Los cambios en los datos de <see cref="T:System.Data.DataTable" /> afectan a todos los elementos <see cref="T:System.Data.DataView" /> asociados a él.</summary>
    </member>
    <member name="E:System.Data.DataView.Initialized">
      <summary>Se produce cuando se completa la inicialización de <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="E:System.Data.DataView.ListChanged">
      <summary>Se produce cuando la lista administrada por el <see cref="T:System.Data.DataView" /> cambia.</summary>
    </member>
    <member name="M:System.Data.DataView.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataView.#ctor(System.Data.DataTable)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataView" /> con el objeto <see cref="T:System.Data.DataTable" /> especificado.</summary>
      <param name="table">
        <see cref="T:System.Data.DataTable" /> que se va a agregar a la <see cref="T:System.Data.DataView" />.</param>
    </member>
    <member name="M:System.Data.DataView.#ctor(System.Data.DataTable,System.String,System.String,System.Data.DataViewRowState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataView" /> con los elementos <see cref="T:System.Data.DataTable" />, <see cref="P:System.Data.DataView.RowFilter" />, <see cref="P:System.Data.DataView.Sort" /> y <see cref="T:System.Data.DataViewRowState" /> especificados.</summary>
      <param name="table">
        <see cref="T:System.Data.DataTable" /> que se va a agregar a la <see cref="T:System.Data.DataView" />.</param>
      <param name="RowFilter">
        <see cref="P:System.Data.DataView.RowFilter" /> que se va a aplicar a la <see cref="T:System.Data.DataView" />.</param>
      <param name="Sort">
        <see cref="P:System.Data.DataView.Sort" /> que se va a aplicar a la <see cref="T:System.Data.DataView" />.</param>
      <param name="RowState">
        <see cref="T:System.Data.DataViewRowState" /> que se va a aplicar a la <see cref="T:System.Data.DataView" />.</param>
    </member>
    <member name="M:System.Data.DataView.AddNew">
      <summary>Agrega una nueva fila a <see cref="T:System.Data.DataView" />.</summary>
      <returns>Un nuevo objeto <see cref="T:System.Data.DataRowView" />.</returns>
    </member>
    <member name="M:System.Data.DataView.BeginInit">
      <summary>Activa la inicialización de un objeto <see cref="T:System.Data.DataView" /> que se emplea en un formulario o que usa otro componente. La inicialización se produce en tiempo de ejecución.</summary>
    </member>
    <member name="M:System.Data.DataView.Close">
      <summary>Cierra el objeto <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataView.ColumnCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Ocurre después de modificar correctamente una <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="sender">Origen del evento.</param>
      <param name="e">
        <see cref="T:System.ComponentModel.ListChangedEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Data.DataView.CopyTo(System.Array,System.Int32)">
      <summary>Copia los elementos en una matriz. Solo para interfaces de Web Forms.</summary>
      <param name="array">matriz en la que copiar.</param>
      <param name="index">Índice en el que empezar.</param>
    </member>
    <member name="M:System.Data.DataView.Delete(System.Int32)">
      <summary>Elimina una fila en el índice especificado.</summary>
      <param name="index">Índice de la fila que se va a eliminar.</param>
    </member>
    <member name="M:System.Data.DataView.Dispose(System.Boolean)">
      <summary>Se deshace de los recursos (distintos de la memoria) usados por el objeto <see cref="T:System.Data.DataView" />.</summary>
      <param name="disposing">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="M:System.Data.DataView.EndInit">
      <summary>Finaliza la inicialización de un objeto <see cref="T:System.Data.DataView" /> que se emplea en un formulario o que utiliza otro componente. La inicialización se produce en tiempo de ejecución.</summary>
    </member>
    <member name="M:System.Data.DataView.Equals(System.Data.DataView)">
      <summary>Determina si las instancias de <see cref="T:System.Data.DataView" /> especificadas se consideran iguales.</summary>
      <param name="view">
        <see cref="T:System.Data.DataView" /> que se va a comparar.</param>
      <returns>Es <see langword="true" /> si las dos instancias <see cref="T:System.Data.DataView" /> son iguales; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataView.Find(System.Object)">
      <summary>Encuentra una fila en la <see cref="T:System.Data.DataView" /> por el valor de clave de ordenación especificado.</summary>
      <param name="key">Objeto que se va a buscar.</param>
      <returns>El índice de la fila del <see cref="T:System.Data.DataView" /> que contiene el valor de clave de ordenación especificado; en caso contrario, -1 si el valor de clave de ordenación no existe.</returns>
    </member>
    <member name="M:System.Data.DataView.Find(System.Object[])">
      <summary>Encuentra una fila en la <see cref="T:System.Data.DataView" /> por los valores de clave de ordenación especificados.</summary>
      <param name="key">Matriz de valores de tipo <see cref="T:System.Object" />.</param>
      <returns>El índice de la posición de la primera fila de <see cref="T:System.Data.DataView" /> que coincide con los valores de clave de ordenación especificados; en caso contrario, -1 si no hay ningún valor de criterio de ordenación coincidente.</returns>
    </member>
    <member name="M:System.Data.DataView.FindRows(System.Object)">
      <summary>Devuelve una matriz de <see cref="T:System.Data.DataRowView" /> objetos cuyas columnas coinciden con el valor de criterio de ordenación especificado.</summary>
      <param name="key">Valores de columna, establecido como <see cref="T:System.Object" />, para buscar.</param>
      <returns>Matriz de objetos <see langword="DataRowView" /> cuyas columnas coinciden con el valor de criterio de ordenación especificado; o, si ninguna fila contiene los valores de clave de ordenación especificados, una matriz <see langword="DataRowView" /> vacía.</returns>
    </member>
    <member name="M:System.Data.DataView.FindRows(System.Object[])">
      <summary>Devuelve una matriz de <see cref="T:System.Data.DataRowView" /> objetos cuyas columnas coinciden con el valor de criterio de ordenación especificado.</summary>
      <param name="key">Matriz de valores de columna, establecido como del tipo <see cref="T:System.Object" />, para buscar.</param>
      <returns>Matriz de objetos <see langword="DataRowView" /> cuyas columnas coinciden con el valor de criterio de ordenación especificado; o, si ninguna fila contiene los valores de clave de ordenación especificados, una matriz <see langword="DataRowView" /> vacía.</returns>
    </member>
    <member name="M:System.Data.DataView.GetEnumerator">
      <summary>Obtiene un enumerador para este elemento <see cref="T:System.Data.DataView" />.</summary>
      <returns>Un elemento <see cref="T:System.Collections.IEnumerator" /> para desplazarse por la lista.</returns>
    </member>
    <member name="M:System.Data.DataView.IndexListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
      <summary>Ocurre después de modificar correctamente una <see cref="T:System.Data.DataView" />.</summary>
      <param name="sender">Origen del evento.</param>
      <param name="e">
        <see cref="T:System.ComponentModel.ListChangedEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Data.DataView.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary>Genera el evento <see cref="E:System.Data.DataView.ListChanged" />.</summary>
      <param name="e">
        <see cref="T:System.ComponentModel.ListChangedEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Data.DataView.Open">
      <summary>Abre un <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataView.Reset">
      <summary>Reservado para uso interno.</summary>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Add(System.Object)">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <param name="value">Valor <see cref="T:System.Object" />.</param>
      <returns>Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Add(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Clear">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Contains(System.Object)">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <param name="value">Valor <see cref="T:System.Object" />.</param>
      <returns>Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Contains(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#IndexOf(System.Object)">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <param name="value">Valor <see cref="T:System.Object" />.</param>
      <returns>Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">Valor <see cref="T:System.Int32" />.</param>
      <param name="value">Valor <see cref="T:System.Object" /> que se va a insertar.</param>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Remove(System.Object)">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">Valor <see cref="T:System.Object" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />.</summary>
      <param name="index">Valor <see cref="T:System.Int32" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)" />.</summary>
      <param name="property">Un objeto <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#AddNew">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</summary>
      <returns>El elemento agregado a la lista.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />.</summary>
      <param name="property">Un objeto <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <param name="direction">Un objeto <see cref="T:System.ComponentModel.ListSortDirection" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />.</summary>
      <param name="property">Un objeto <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <param name="key">Valor <see cref="T:System.Object" />.</param>
      <returns>Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)" />.</summary>
      <param name="property">Un objeto <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveSort">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.IBindingList.RemoveSort" />.</summary>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingListView#ApplySort(System.ComponentModel.ListSortDescriptionCollection)">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)" />.</summary>
      <param name="sorts">Un objeto <see cref="T:System.ComponentModel.ListSortDescriptionCollection" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingListView#RemoveFilter">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.IBindingListView.RemoveFilter" />.</summary>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />.</summary>
      <param name="listAccessors">Matriz de objetos <see cref="T:System.ComponentModel.PropertyDescriptor" /> que se encuentran en la colección como enlazables. Puede ser <see langword="null" />.</param>
      <returns>El <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que representa las propiedades de cada elemento utilizado para enlazar datos.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />.</summary>
      <param name="listAccessors">Matriz de objetos <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <returns>Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable">
      <summary>Crea y devuelve una nueva <see cref="T:System.Data.DataTable" /> basándose en las filas de una <see cref="T:System.Data.DataView" /> existente.</summary>
      <returns>Nueva instancia de <see cref="T:System.Data.DataTable" /> que contiene las filas y columnas solicitadas.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.Boolean,System.String[])">
      <summary>Crea y devuelve una nueva <see cref="T:System.Data.DataTable" /> basándose en las filas de una <see cref="T:System.Data.DataView" /> existente.</summary>
      <param name="distinct">Si <see langword="true" />, el <see cref="T:System.Data.DataTable" /> devuelto contiene filas que tienen valores distintos para todas sus columnas. El valor predeterminado es <see langword="false" />.</param>
      <param name="columnNames">Matriz de cadenas que contiene una lista de los nombres de las columnas que se incluirán en el <see cref="T:System.Data.DataTable" /> devuelto. El <see cref="T:System.Data.DataTable" /> contiene las columnas especificadas en el orden en que aparecen en esta matriz.</param>
      <returns>Nueva instancia de <see cref="T:System.Data.DataTable" /> que contiene las filas y columnas solicitadas.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.String)">
      <summary>Crea y devuelve una nueva <see cref="T:System.Data.DataTable" /> basándose en las filas de una <see cref="T:System.Data.DataView" /> existente.</summary>
      <param name="tableName">Nombre del objeto <see cref="T:System.Data.DataTable" /> devuelto.</param>
      <returns>Nueva instancia de <see cref="T:System.Data.DataTable" /> que contiene las filas y columnas solicitadas.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.String,System.Boolean,System.String[])">
      <summary>Crea y devuelve una nueva <see cref="T:System.Data.DataTable" /> basándose en las filas de una <see cref="T:System.Data.DataView" /> existente.</summary>
      <param name="tableName">Nombre del objeto <see cref="T:System.Data.DataTable" /> devuelto.</param>
      <param name="distinct">Si <see langword="true" />, el <see cref="T:System.Data.DataTable" /> devuelto contiene filas que tienen valores distintos para todas sus columnas. El valor predeterminado es <see langword="false" />.</param>
      <param name="columnNames">Matriz de cadenas que contiene una lista de los nombres de las columnas que se incluirán en el <see cref="T:System.Data.DataTable" /> devuelto. El <see langword="DataTable" /> contiene las columnas especificadas en el orden en que aparecen en esta matriz.</param>
      <returns>Nueva instancia de <see cref="T:System.Data.DataTable" /> que contiene las filas y columnas solicitadas.</returns>
    </member>
    <member name="M:System.Data.DataView.UpdateIndex">
      <summary>Reservado para uso interno.</summary>
    </member>
    <member name="M:System.Data.DataView.UpdateIndex(System.Boolean)">
      <summary>Reservado para uso interno.</summary>
      <param name="force">Reservado para uso interno.</param>
    </member>
    <member name="P:System.Data.DataView.AllowDelete">
      <summary>Obtiene o establece un valor que indica si se permiten las eliminaciones.</summary>
      <returns>
        <see langword="true" /> si se permiten las eliminaciones; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.AllowEdit">
      <summary>Obtiene o establece un valor que indica si se permiten las ediciones.</summary>
      <returns>
        <see langword="true" /> si se permiten las ediciones; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.AllowNew">
      <summary>Obtiene o establece un valor que indica si las nuevas filas se pueden agregar con el método <see cref="M:System.Data.DataView.AddNew" />.</summary>
      <returns>
        <see langword="true" /> si las nuevas filas se pueden agregar; si no, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.ApplyDefaultSort">
      <summary>Obtiene o establece un valor que indica si se usará el orden predeterminado. El orden predeterminado (ascendente) por todas las claves principales según se especifica por <see cref="P:System.Data.DataTable.PrimaryKey" />.</summary>
      <returns>
        <see langword="true" />, si se usa el orden predeterminado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.Count">
      <summary>Obtiene el número de registros de la <see cref="T:System.Data.DataView" /> después de aplicarse <see cref="P:System.Data.DataView.RowFilter" /> y <see cref="P:System.Data.DataView.RowStateFilter" />.</summary>
      <returns>Número de registros de la <see cref="T:System.Data.DataView" />.</returns>
    </member>
    <member name="P:System.Data.DataView.DataViewManager">
      <summary>Obtiene el objeto <see cref="T:System.Data.DataViewManager" /> asociado a esta vista.</summary>
      <returns>El <see langword="DataViewManager" /> que creó esta vista. Si este es el <see cref="T:System.Data.DataView" /> predeterminado para un <see cref="T:System.Data.DataTable" />, la propiedad <see langword="DataViewManager" /> devuelve el <see langword="DataViewManager" /> predeterminado para el <see langword="DataSet" />. De lo contrario, si <see langword="DataView" /> se creó sin un <see langword="DataViewManager" />, esta propiedad es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Data.DataView.IsInitialized">
      <summary>Obtiene un valor que indica si se ha inicializado el componente.</summary>
      <returns>
        <see langword="true" /> para indicar que el componente ha completado la inicialización; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.IsOpen">
      <summary>Obtiene un valor que indica si el origen de datos está abierto actualmente y proyecta vistas de datos en la <see cref="T:System.Data.DataTable" />.</summary>
      <returns>
        <see langword="true" /> si el origen está abierto; si no, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.Item(System.Int32)">
      <summary>Obtiene una fila de datos de una tabla especificada.</summary>
      <param name="recordIndex">Índice de un registro de la <see cref="T:System.Data.DataTable" />.</param>
      <returns>
        <see cref="T:System.Data.DataRowView" /> de la fila que desee.</returns>
    </member>
    <member name="P:System.Data.DataView.RowFilter">
      <summary>Obtiene o establece la expresión usada para filtrar las filas que se deben mostrar en <see cref="T:System.Data.DataView" />.</summary>
      <returns>Cadena que especifica cómo se van a filtrar las filas.</returns>
    </member>
    <member name="P:System.Data.DataView.RowStateFilter">
      <summary>Obtiene o establece el filtro de estado de la fila que se usa en la <see cref="T:System.Data.DataView" />.</summary>
      <returns>Uno de los valores de <see cref="T:System.Data.DataViewRowState" />.</returns>
    </member>
    <member name="P:System.Data.DataView.Sort">
      <summary>Obtiene o establece el criterio de ordenación de columnas y el criterio de ordenación para el <see cref="T:System.Data.DataView" />.</summary>
      <returns>Cadena que contiene el nombre de columna seguido de "ASC" (ascendente) o "DESC" (descendente). Las columnas están ordenadas por orden ascendente de forma predeterminada. Varias columnas pueden estar separadas por comas.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#ICollection#IsSynchronized">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.ICollection.IsSynchronized" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#ICollection#SyncRoot">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.ICollection.SyncRoot" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#IsFixedSize">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.IList.IsFixedSize" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#IsReadOnly">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.IList.IsReadOnly" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#Item(System.Int32)">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <param name="recordIndex">Valor <see cref="T:System.Int32" />.</param>
      <returns>Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.IList.Item(System.Int32)" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowEdit">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</summary>
      <returns>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowNew">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</summary>
      <returns>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowRemove">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</summary>
      <returns>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#IsSorted">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</summary>
      <returns>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SortDirection">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</summary>
      <returns>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SortProperty">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</summary>
      <returns>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsChangeNotification">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</summary>
      <returns>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSearching">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</summary>
      <returns>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSorting">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</summary>
      <returns>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#Filter">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingListView.Filter" />.</summary>
      <returns>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingListView.Filter" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SortDescriptions">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingListView.SortDescriptions" />.</summary>
      <returns>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingListView.SortDescriptions" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsAdvancedSorting">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting" />.</summary>
      <returns>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsFiltering">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingListView.SupportsFiltering" />.</summary>
      <returns>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingListView.SupportsFiltering" />.</returns>
    </member>
    <member name="P:System.Data.DataView.Table">
      <summary>Obtiene o establece el <see cref="T:System.Data.DataTable" /> de origen.</summary>
      <returns>
        <see cref="T:System.Data.DataTable" /> que proporciona los datos para esta vista.</returns>
    </member>
    <member name="T:System.Data.DataViewManager">
      <summary>Contiene un valor predeterminado de <see cref="T:System.Data.DataViewSettingCollection" /> para cada <see cref="T:System.Data.DataTable" /> de <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="E:System.Data.DataViewManager.ListChanged">
      <summary>Se produce al agregar o eliminar una fila de <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataViewManager" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.#ctor(System.Data.DataSet)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataViewManager" /> para el objeto<see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataSet">Nombre del objeto <see cref="T:System.Data.DataSet" /> que se va a utilizar.</param>
    </member>
    <member name="M:System.Data.DataViewManager.CreateDataView(System.Data.DataTable)">
      <summary>Crea un <see cref="T:System.Data.DataView" /> para el <see cref="T:System.Data.DataTable" /> especificado.</summary>
      <param name="table">Nombre del <see cref="T:System.Data.DataTable" /> que se utiliza en el <see cref="T:System.Data.DataView" />.</param>
      <returns>Un objeto <see cref="T:System.Data.DataView" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary>Genera el evento <see cref="E:System.Data.DataViewManager.ListChanged" />.</summary>
      <param name="e">
        <see cref="T:System.ComponentModel.ListChangedEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Data.DataViewManager.RelationCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Genera un evento <see cref="E:System.Data.DataRelationCollection.CollectionChanged" /> cuando se agrega o se quita un objeto <see cref="T:System.Data.DataRelation" /> de <see cref="T:System.Data.DataRelationCollection" />.</summary>
      <param name="sender">Origen del evento.</param>
      <param name="e">
        <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia los elementos de <see cref="T:System.Collections.ICollection" /> en <see cref="T:System.Array" />, empezando por un índice determinado de <see cref="T:System.Array" />.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensional que constituye el destino de los elementos copiados de <see cref="T:System.Collections.ICollection" />. La matriz <see cref="T:System.Array" /> debe tener una indización de base cero.</param>
      <param name="index">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IEnumerable#GetEnumerator">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Add(System.Object)">
      <summary>Agrega un elemento a <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">
        <see cref="T:System.Object" /> que se va a agregar a <see cref="T:System.Collections.IList" />.</param>
      <returns>Posición en la que se insertó el nuevo elemento.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Clear">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Contains(System.Object)">
      <summary>Determina si <see cref="T:System.Collections.IList" /> contiene un valor específico.</summary>
      <param name="value">Objeto <see cref="T:System.Object" /> que se va a buscar en la interfaz <see cref="T:System.Collections.IList" />.</param>
      <returns>Es <see langword="true" /> si <see cref="T:System.Object" /> se encuentra en <see cref="T:System.Collections.IList" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#IndexOf(System.Object)">
      <summary>Determina el índice de un elemento específico de <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">Objeto <see cref="T:System.Object" /> que se va a buscar en la interfaz <see cref="T:System.Collections.IList" />.</param>
      <returns>Devuelve el índice de <paramref name="value" /> si se encuentra en la lista; de lo contrario, devuelve -1.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserta un elemento en la interfaz <see cref="T:System.Collections.IList" />, en el índice especificado.</summary>
      <param name="index">Índice basado en cero en el que debe insertarse <paramref name="value" />.</param>
      <param name="value">Objeto <see cref="T:System.Object" /> que se va a insertar en <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Remove(System.Object)">
      <summary>Quita la primera aparición de un objeto específico de la interfaz <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">
        <see cref="T:System.Object" /> que se va a quitar de <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Quita el elemento de la interfaz <see cref="T:System.Collections.IList" /> que se encuentra en el índice especificado.</summary>
      <param name="index">Índice de base cero del elemento que se va a quitar.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <summary>Agrega <see cref="T:System.ComponentModel.PropertyDescriptor" /> a los índices utilizados para las búsquedas.</summary>
      <param name="property">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> que se va a agregar a los índices utilizados para las búsquedas.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddNew">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</summary>
      <returns>Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary>Ordena la lista basándose en <see cref="T:System.ComponentModel.PropertyDescriptor" /> y <see cref="T:System.ComponentModel.ListSortDirection" />.</summary>
      <param name="property">Objeto <see cref="T:System.ComponentModel.PropertyDescriptor" /> por el que se ordena.</param>
      <param name="direction">Uno de los valores de <see cref="T:System.ComponentModel.ListSortDirection" />.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Devuelve el índice de la fila que tiene el <see cref="T:System.ComponentModel.PropertyDescriptor" /> especificado.</summary>
      <param name="property">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> por el que se realiza la búsqueda.</param>
      <param name="key">Valor del parámetro propiedad que se va a buscar.</param>
      <returns>Índice de la fila que tiene el <see cref="T:System.ComponentModel.PropertyDescriptor" /> especificado.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <summary>Quita el <see cref="T:System.ComponentModel.PropertyDescriptor" /> de los índices utilizados para las búsquedas.</summary>
      <param name="property">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> que se va a quitar de los índices utilizados para las búsquedas.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveSort">
      <summary>Quita cualquier ordenación aplicada mediante el <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <summary>Devuelve el <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que representa las propiedades de cada elemento utilizado para enlazar datos.</summary>
      <param name="listAccessors">Matriz de objetos <see cref="T:System.ComponentModel.PropertyDescriptor" /> que se encuentran en la colección como enlazables. Puede ser <see langword="null" />.</param>
      <returns>El <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que representa las propiedades de cada elemento utilizado para enlazar datos.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
      <summary>Devuelve el nombre de la lista.</summary>
      <param name="listAccessors">Matriz de objetos <see cref="T:System.ComponentModel.PropertyDescriptor" />, para la que se devuelve el nombre de lista. Puede ser <see langword="null" />.</param>
      <returns>Nombre de la lista.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.TableCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Genera un evento <see cref="E:System.Data.DataTableCollection.CollectionChanged" /> cuando se agrega o se quita un objeto <see cref="T:System.Data.DataTable" /> de <see cref="T:System.Data.DataTableCollection" />.</summary>
      <param name="sender">Origen del evento.</param>
      <param name="e">
        <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="P:System.Data.DataViewManager.DataSet">
      <summary>Obtiene o establece el objeto <see cref="T:System.Data.DataSet" /> que se va a usar con <see cref="T:System.Data.DataViewManager" />.</summary>
      <returns>Objeto <see cref="T:System.Data.DataSet" /> que se va a usar.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.DataViewSettingCollectionString">
      <summary>Obtiene o establece un valor utilizado para la persistencia de código.</summary>
      <returns>Un valor utilizado para la persistencia de código.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.DataViewSettings">
      <summary>Obtiene el <see cref="T:System.Data.DataViewSettingCollection" /> de cada <see cref="T:System.Data.DataTable" /> en el <see cref="T:System.Data.DataSet" />.</summary>
      <returns>
        <see cref="T:System.Data.DataViewSettingCollection" /> para cada <see langword="DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#Count">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.ICollection.Count" />.</summary>
      <returns>Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.ICollection.Count" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#IsSynchronized">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>Es <see langword="true" /> si el acceso a <see cref="T:System.Collections.ICollection" /> está sincronizado (es seguro para subprocesos); de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#SyncRoot">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>Objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#IsFixedSize">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>
        <see langword="true" /> si la <see cref="T:System.Collections.IList" /> tiene un tamaño fijo; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#IsReadOnly">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.IList.IsReadOnly" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#Item(System.Int32)">
      <summary>Obtiene o establece el elemento en el índice especificado.</summary>
      <param name="index">Índice de base cero del elemento que se va a obtener o establecer.</param>
      <returns>Elemento en el índice especificado.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowEdit">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</summary>
      <returns>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowNew">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</summary>
      <returns>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowRemove">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</summary>
      <returns>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#IsSorted">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</summary>
      <returns>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortDirection">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</summary>
      <returns>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortProperty">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</summary>
      <returns>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsChangeNotification">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</summary>
      <returns>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSearching">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</summary>
      <returns>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSorting">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</summary>
      <returns>Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</returns>
    </member>
    <member name="T:System.Data.DataViewRowState">
      <summary>Describe la versión de datos de un <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Added">
      <summary>Una fila nueva.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.CurrentRows">
      <summary>Filas actuales, incluidas las filas sin modificar, las nuevas y las modificadas. De manera predeterminada, <see cref="T:System.Data.DataViewRowState" /> se establece en CurrentRows.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Deleted">
      <summary>Una fila eliminada.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.ModifiedCurrent">
      <summary>Versión actual de los datos originales modificados (vea <see langword="ModifiedOriginal" />).</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.ModifiedOriginal">
      <summary>Versión original de los datos modificados. (Aunque se hayan modificado los datos posteriormente, están disponibles como <see langword="ModifiedCurrent" />).</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.None">
      <summary>Ninguno.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.OriginalRows">
      <summary>Filas originales, incluidas las filas sin modificar y las eliminadas.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Unchanged">
      <summary>Una fila sin modificar.</summary>
    </member>
    <member name="T:System.Data.DataViewSetting">
      <summary>Representa la configuración predeterminada para <see cref="P:System.Data.DataView.ApplyDefaultSort" />, <see cref="P:System.Data.DataView.DataViewManager" />, <see cref="P:System.Data.DataView.RowFilter" />, <see cref="P:System.Data.DataView.RowStateFilter" />, <see cref="P:System.Data.DataView.Sort" /> y <see cref="P:System.Data.DataView.Table" /> para los DataViews creados a partir de <see cref="T:System.Data.DataViewManager" />.</summary>
    </member>
    <member name="P:System.Data.DataViewSetting.ApplyDefaultSort">
      <summary>Obtiene o establece un valor que indica si se va a utilizar el orden predeterminado.</summary>
      <returns>Es <see langword="true" /> si se utiliza el orden predeterminado; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.DataViewManager">
      <summary>Obtiene el <see cref="T:System.Data.DataViewManager" /> que contiene este <see cref="T:System.Data.DataViewSetting" />.</summary>
      <returns>Un objeto <see cref="T:System.Data.DataViewManager" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.RowFilter">
      <summary>Obtiene o establece el filtro que se va a aplicar al <see cref="T:System.Data.DataView" />. Vea <see cref="P:System.Data.DataView.RowFilter" /> para un ejemplo de código que usa RowFilter.</summary>
      <returns>Cadena que contiene el filtro que se va a aplicar.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.RowStateFilter">
      <summary>Obtiene o establece un valor que indica si se deben mostrar las filas Current, Deleted, Modified Current, ModifiedOriginal, New, Original, Unchanged o ninguna de ellas en el <see cref="T:System.Data.DataView" />.</summary>
      <returns>Valor que indica qué filas se deben mostrar.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.Sort">
      <summary>Obtiene o establece un valor que indica qué orden se aplica en el <see cref="T:System.Data.DataView" />.</summary>
      <returns>Orden que se aplica en el <see cref="T:System.Data.DataView" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.Table">
      <summary>Obtiene el <see cref="T:System.Data.DataTable" /> al que se aplican las propiedades de <see cref="T:System.Data.DataViewSetting" />.</summary>
      <returns>Un objeto <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="T:System.Data.DataViewSettingCollection">
      <summary>Contiene una colección de sólo lectura de objetos <see cref="T:System.Data.DataViewSetting" /> para cada <see cref="T:System.Data.DataTable" /> de un <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copia los objetos de la colección en una instancia de <see cref="T:System.Array" /> unidimensional, comenzando a partir del índice especificado.</summary>
      <param name="ar">
        <see cref="T:System.Array" /> unidimensional que constituye el destino de los valores copiados de la colección.</param>
      <param name="index">Índice de la matriz donde va a comenzar la inserción.</param>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.CopyTo(System.Data.DataViewSetting[],System.Int32)">
      <summary>Copia los objetos de la colección en una instancia de <see cref="T:System.Array" /> unidimensional, comenzando a partir del índice especificado.</summary>
      <param name="ar">
        <see cref="T:System.Array" /> unidimensional que constituye el destino de los valores copiados de la colección.</param>
      <param name="index">Índice de la matriz donde va a comenzar la inserción.</param>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.GetEnumerator">
      <summary>Obtiene un <see cref="T:System.Collections.IEnumerator" /> para la colección.</summary>
      <returns>Un objeto <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Count">
      <summary>Obtiene el número de objetos <see cref="T:System.Data.DataViewSetting" /> de la colección <see cref="T:System.Data.DataViewSettingCollection" />.</summary>
      <returns>El número de objetos <see cref="T:System.Data.DataViewSetting" /> de la colección.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.IsReadOnly">
      <summary>Obtiene un valor que indica si <see cref="T:System.Data.DataViewSettingCollection" /> es de solo lectura.</summary>
      <returns>Siempre devuelve <see langword="true" /> para indicar que la colección es de solo lectura.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.IsSynchronized">
      <summary>Obtiene un valor que indica si el acceso a <see cref="T:System.Data.DataViewSettingCollection" /> está sincronizado (es seguro para subprocesos).</summary>
      <returns>Esta propiedad es siempre <see langword="false" />, a menos que se reemplace por una clase derivada.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.Data.DataTable)">
      <summary>Obtiene los objetos <see cref="T:System.Data.DataViewSetting" /> del <see cref="T:System.Data.DataTable" /> especificado de la colección.</summary>
      <param name="table">
        <see cref="T:System.Data.DataTable" /> que se va a buscar.</param>
      <returns>Una colección de objetos <see cref="T:System.Data.DataViewSetting" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.Int32)">
      <summary>Obtiene los objetos <see cref="T:System.Data.DataViewSetting" /> del <see cref="T:System.Data.DataTable" /> especificados por su índice.</summary>
      <param name="index">El índice de base cero de <see cref="T:System.Data.DataTable" /> que se va a buscar.</param>
      <returns>Una colección de objetos <see cref="T:System.Data.DataViewSetting" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.String)">
      <summary>Obtiene el <see cref="T:System.Data.DataViewSetting" /> del <see cref="T:System.Data.DataTable" /> especificado por su nombre.</summary>
      <param name="tableName">Nombre de <see cref="T:System.Data.DataTable" /> que se va a buscar.</param>
      <returns>Una colección de objetos <see cref="T:System.Data.DataViewSetting" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.SyncRoot">
      <summary>Obtiene un objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Data.DataViewSettingCollection" />.</summary>
      <returns>Un objeto que se puede usar para sincronizar el acceso a la clase <see cref="T:System.Data.DataViewSettingCollection" />.</returns>
    </member>
    <member name="T:System.Data.DBConcurrencyException">
      <summary>Excepción que inicia <see cref="T:System.Data.Common.DataAdapter" /> durante una operación de inserción, actualización o eliminación si el número de filas afectadas es igual a cero.</summary>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DBConcurrencyException" />.</summary>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <param name="message">Cadena de texto que describe los detalles de la excepción.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <param name="message">Cadena de texto que describe los detalles de la excepción.</param>
      <param name="inner">Referencia a una excepción interna.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <param name="message">Mensaje de error que explica la razón de esta excepción.</param>
      <param name="inner">La excepción que es la causa de la excepción actual o una referencia nula (<see langword="Nothing" /> en Visual Basic) si no se especifica ninguna excepción interna.</param>
      <param name="dataRows">Matriz que contiene los objetos <see cref="T:System.Data.DataRow" /> respecto de los que un error en la actualización ha generado esta excepción.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])">
      <summary>Copia  en la matriz especificada de objetos <see cref="T:System.Data.DataRow" /> los objetos <see cref="T:System.Data.DataRow" /> respecto de los que un error en la actualización ha generado esta excepción.</summary>
      <param name="array">Matriz unidimensional de objetos <see cref="T:System.Data.DataRow" /> en la que se van a copiar los objetos <see cref="T:System.Data.DataRow" />.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
      <summary>Copia en la matriz de objetos <see cref="T:System.Data.DataRow" /> especificada, comenzando en el índice especificado de la matriz de destino, los objetos <see cref="T:System.Data.DataRow" /> respecto de los que un error en la actualización ha generado esta excepción.</summary>
      <param name="array">Matriz unidimensional de objetos <see cref="T:System.Data.DataRow" /> en la que se van a copiar los objetos <see cref="T:System.Data.DataRow" />.</param>
      <param name="arrayIndex">Índice de la matriz de destino en el que se empieza a copiar.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Rellena un objeto de información de serialización especificado con los datos necesarios para serializar la excepción <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos serializados asociados a la excepción <see cref="T:System.Data.DBConcurrencyException" />.</param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene el origen y el destino de la secuencia serializada asociada a la <see cref="T:System.Data.DBConcurrencyException" />.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="info" /> es una referencia nula (<see langword="Nothing" /> en Visual Basic).</exception>
    </member>
    <member name="P:System.Data.DBConcurrencyException.Row">
      <summary>Obtiene o establece el valor del objeto <see cref="T:System.Data.DataRow" /> que ha generado la excepción <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <returns>Valor del objeto <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="P:System.Data.DBConcurrencyException.RowCount">
      <summary>Obtiene el número de filas respecto de las que se ha producido un error al actualizar, generando esta excepción.</summary>
      <returns>Entero que contiene un recuento del número de filas respecto de las que se ha producido un error al actualizar.</returns>
    </member>
    <member name="T:System.Data.DbType">
      <summary>Especifica el tipo de datos de un campo, una propiedad o un objeto <see langword="Parameter" /> de un proveedor de datos de .NET Framework.</summary>
    </member>
    <member name="F:System.Data.DbType.AnsiString">
      <summary>Secuencia de longitud variable de caracteres no Unicode comprendida entre 1 y 8.000 caracteres.</summary>
    </member>
    <member name="F:System.Data.DbType.AnsiStringFixedLength">
      <summary>Secuencia de longitud fija de caracteres no Unicode.</summary>
    </member>
    <member name="F:System.Data.DbType.Binary">
      <summary>Secuencia de longitud variable de datos binarios comprendida entre 1 y 8.000 bytes.</summary>
    </member>
    <member name="F:System.Data.DbType.Boolean">
      <summary>Tipo simple que representa los valores booleanos <see langword="true" /> o <see langword="false" />.</summary>
    </member>
    <member name="F:System.Data.DbType.Byte">
      <summary>Entero de 8 bits sin signo cuyo valor está comprendido entre 0 y 255.</summary>
    </member>
    <member name="F:System.Data.DbType.Currency">
      <summary>Valor de moneda comprendido entre -2 63 (o -922.337.203.685.477,5808) y 2 63 -1 (o +922.337.203.685.477,5807), con una precisión de una diezmilésima de unidad de moneda.</summary>
    </member>
    <member name="F:System.Data.DbType.Date">
      <summary>Tipo que representa un valor de fecha.</summary>
    </member>
    <member name="F:System.Data.DbType.DateTime">
      <summary>Tipo que representa un valor de fecha y hora.</summary>
    </member>
    <member name="F:System.Data.DbType.DateTime2">
      <summary>Datos de fecha y hora. El intervalo de valores de fecha comprende desde el 1 de enero de 1 d.C. hasta el 31 de diciembre de 9999 d.C. El intervalo de valor horario está comprendido entre 00:00:00 y 23:59:59,9999999 con una precisión de 100 nanosegundos.</summary>
    </member>
    <member name="F:System.Data.DbType.DateTimeOffset">
      <summary>Datos de fecha y hora con conocimiento de la zona horaria. El intervalo de valores de fecha comprende desde el 1 de enero de 1 d.C. hasta el 31 de diciembre de 9999 d.C. El intervalo de valor horario está comprendido entre 00:00:00 y 23:59:59,9999999 con una precisión de 100 nanosegundos. El intervalo horario es -14: 00 hasta +14:00.</summary>
    </member>
    <member name="F:System.Data.DbType.Decimal">
      <summary>Tipo simple que representa los valores comprendidos entre 1,0 x 10 -28 y aproximadamente 7,9 x 10 28, con 28-29 dígitos significativos.</summary>
    </member>
    <member name="F:System.Data.DbType.Double">
      <summary>Tipo de punto flotante que representa los valores comprendidos entre aproximadamente 5,0 x 10 -324 y 1,7 x 10 308, con una precisión de 15-16 dígitos.</summary>
    </member>
    <member name="F:System.Data.DbType.Guid">
      <summary>Identificador único global (GUID).</summary>
    </member>
    <member name="F:System.Data.DbType.Int16">
      <summary>Tipo entero que representa enteros de 16 bits con signo con valores comprendidos entre -32768 y 32767.</summary>
    </member>
    <member name="F:System.Data.DbType.Int32">
      <summary>Tipo entero que representa enteros con signo de 32 bits con valores comprendidos entre -2147483648 y 2147483647.</summary>
    </member>
    <member name="F:System.Data.DbType.Int64">
      <summary>Tipo entero que representa enteros de 64 bits con signo con valores comprendidos entre -9223372036854775808 y 9223372036854775807.</summary>
    </member>
    <member name="F:System.Data.DbType.Object">
      <summary>Tipo general que representa cualquier tipo de valor o referencia no representado de forma explícita por otro valor <see langword="DbType" />.</summary>
    </member>
    <member name="F:System.Data.DbType.SByte">
      <summary>Tipo entero que representa enteros de 8 bits con signo con valores comprendidos entre -128 y 127.</summary>
    </member>
    <member name="F:System.Data.DbType.Single">
      <summary>Tipo de punto flotante que representa los valores comprendidos entre aproximadamente 1,5 x 10 -45 y 3,4 x 10 38, con una precisión de 7 dígitos.</summary>
    </member>
    <member name="F:System.Data.DbType.String">
      <summary>Tipo que representa cadenas de caracteres Unicode.</summary>
    </member>
    <member name="F:System.Data.DbType.StringFixedLength">
      <summary>Cadena de longitud fija de caracteres Unicode.</summary>
    </member>
    <member name="F:System.Data.DbType.Time">
      <summary>Tipo que representa un valor <see langword="DateTime" /> de SQL Server. Si desea utilizar un valor <see langword="time" /> de SQL Server, use <see cref="F:System.Data.SqlDbType.Time" />.</summary>
    </member>
    <member name="F:System.Data.DbType.UInt16">
      <summary>Tipo entero que representa enteros de 16 bits sin signo con valores comprendidos entre 0 y 65 535.</summary>
    </member>
    <member name="F:System.Data.DbType.UInt32">
      <summary>Tipo entero que representa enteros sin signo de 32 bits con valores comprendidos entre 0 y 4294967295.</summary>
    </member>
    <member name="F:System.Data.DbType.UInt64">
      <summary>Tipo entero que representa enteros de 64 bits sin signo con valores comprendidos entre 0 y 18446744073709551615.</summary>
    </member>
    <member name="F:System.Data.DbType.VarNumeric">
      <summary>Valor numérico de longitud variable.</summary>
    </member>
    <member name="F:System.Data.DbType.Xml">
      <summary>Representación analizada de un documento o fragmento XML.</summary>
    </member>
    <member name="T:System.Data.DeletedRowInaccessibleException">
      <summary>Representa la excepción que se produce al intentar realizar una acción en un objeto <see cref="T:System.Data.DataRow" /> que se ha eliminado.</summary>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DeletedRowInaccessibleException" />.</summary>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DeletedRowInaccessibleException" /> con información de serialización.</summary>
      <param name="info">Datos necesarios para serializar o deserializar un objeto.</param>
      <param name="context">Descripción del origen y el destino de la secuencia serializada especificada.</param>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DeletedRowInaccessibleException" /> con la cadena especificada.</summary>
      <param name="s">Cadena que se muestra cuando se produce la excepción.</param>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DeletedRowInaccessibleException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message">Mensaje de error que explica el motivo de la excepción.</param>
      <param name="innerException">La excepción que es la causa de la excepción actual o una referencia nula (<see langword="Nothing" /> en Visual Basic) si no se especifica ninguna excepción interna.</param>
    </member>
    <member name="T:System.Data.DuplicateNameException">
      <summary>Representa la excepción que se produce cuando se encuentra un nombre de objeto de base de datos duplicado durante una operación de agregar en un objeto relacionado con <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DuplicateNameException" />.</summary>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DuplicateNameException" /> con información de serialización.</summary>
      <param name="info">Datos necesarios para serializar o deserializar un objeto.</param>
      <param name="context">Descripción del origen y el destino de la secuencia serializada especificada.</param>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DuplicateNameException" /> con la cadena especificada.</summary>
      <param name="s">Cadena que se muestra cuando se produce la excepción.</param>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.DuplicateNameException" /> con la cadena y la excepción especificadas.</summary>
      <param name="message">Mensaje de error que explica el motivo de la excepción.</param>
      <param name="innerException">La excepción que es la causa de la excepción actual o una referencia nula (<see langword="Nothing" /> en Visual Basic) si no se especifica ninguna excepción interna.</param>
    </member>
    <member name="T:System.Data.EnumerableRowCollection">
      <summary>Representa una colección de objetos <see cref="T:System.Data.DataRow" /> devuelta desde una consulta de LINQ to DataSet. Esta API es compatible con la infraestructura de .NET Framework y no está diseñada para utilizarse directamente desde el código.</summary>
    </member>
    <member name="M:System.Data.EnumerableRowCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Devuelve un enumerador para la colección de objetos <see cref="T:System.Data.DataRow" />. Esta API es compatible con la infraestructura de .NET Framework y no está diseñada para utilizarse directamente desde el código.</summary>
      <returns>Un objeto <see cref="T:System.Collections.IEnumerator" /> que se puede usar para recorrer la colección de objetos <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="T:System.Data.EnumerableRowCollection`1">
      <summary>Representa una colección de los objetos <see cref="T:System.Data.DataRow" /> que devuelve una consulta.</summary>
      <typeparam name="TRow">Tipo de objetos de la secuencia de origen, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="M:System.Data.EnumerableRowCollection`1.GetEnumerator">
      <summary>Devuelve un enumerador para la colección de los objetos de fila contenidos.</summary>
      <returns>Un <see cref="T:System.Collections.Generic.IEnumerator`1" /> fuertemente tipado que se puede utilizar para recorrer la colección de los objetos <paramref name="TRow" />.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Devuelve un enumerador para la colección de objetos <see cref="T:System.Data.DataRow" />.</summary>
      <returns>Un objeto <see cref="T:System.Collections.IEnumerator" /> que se puede usar para recorrer la colección de objetos <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="T:System.Data.EnumerableRowCollectionExtensions">
      <summary>Contiene los métodos de extensión para las clases de colección de filas de datos.</summary>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)">
      <summary>Convierte los elementos de <see cref="T:System.Data.EnumerableRowCollection" /> en el tipo especificado.</summary>
      <param name="source">
        <see cref="T:System.Data.EnumerableRowCollection" /> que contiene los elementos que se van a convertir.</param>
      <typeparam name="TResult">Tipo al que se van a convertir los elementos del origen.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException">Un elemento de la secuencia no se puede convertir al tipo <paramref name="TResult" />.</exception>
      <returns>
        <see cref="T:System.Data.EnumerableRowCollection" /> que contiene cada elemento de la secuencia de origen convertido en el tipo especificado.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary>Ordena las filas de una colección <see cref="T:System.Data.EnumerableRowCollection" /> en orden ascendente según la clave especificada.</summary>
      <param name="source">
        <see cref="T:System.Data.EnumerableRowCollection" /> que contiene los elementos de <see cref="T:System.Data.DataRow" /> que se van a ordenar.</param>
      <param name="keySelector">Función para extraer una clave a partir de un elemento.</param>
      <typeparam name="TRow">Tipo de los elementos de fila de <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Tipo de la clave devuelta por <paramref name="keySelector" />.</typeparam>
      <returns>
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cuyos elementos se ordenan según la clave especificada.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Ordena las filas de una colección <see cref="T:System.Data.EnumerableRowCollection" /> en orden ascendente según la clave y el comparador especificados.</summary>
      <param name="source">
        <see cref="T:System.Data.EnumerableRowCollection" /> que contiene los elementos de <see cref="T:System.Data.DataRow" /> que se van a ordenar.</param>
      <param name="keySelector">Función para extraer una clave a partir de un elemento.</param>
      <param name="comparer">
        <see cref="T:System.Collections.Generic.IComparer`1" /> para comparar claves.</param>
      <typeparam name="TRow">Tipo de los elementos de fila de <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Tipo de la clave devuelta por <paramref name="keySelector" />.</typeparam>
      <returns>
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cuyos elementos se ordenan según la clave y el comparador especificados.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary>Ordena las filas de una colección <see cref="T:System.Data.EnumerableRowCollection" /> en orden descendente según la clave especificada.</summary>
      <param name="source">
        <see cref="T:System.Data.EnumerableRowCollection" /> que contiene los elementos de <see cref="T:System.Data.DataRow" /> que se van a ordenar.</param>
      <param name="keySelector">Función para extraer una clave a partir de un elemento.</param>
      <typeparam name="TRow">Tipo de los elementos de fila de <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Tipo de la clave devuelta por <paramref name="keySelector" />.</typeparam>
      <returns>
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cuyos elementos se ordenan según la clave especificada.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Ordena las filas de una colección <see cref="T:System.Data.EnumerableRowCollection" /> en orden descendente según la clave y el comparador especificados.</summary>
      <param name="source">
        <see cref="T:System.Data.EnumerableRowCollection" /> que contiene los elementos de <see cref="T:System.Data.DataRow" /> que se van a ordenar.</param>
      <param name="keySelector">Función para extraer una clave a partir de un elemento.</param>
      <param name="comparer">
        <see cref="T:System.Collections.Generic.IComparer`1" /> para comparar claves.</param>
      <typeparam name="TRow">Tipo de los elementos de fila de <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Tipo de la clave devuelta por <paramref name="keySelector" />.</typeparam>
      <returns>
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cuyos elementos se ordenan según la clave y el comparador especificados.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary>Proyecta cada elemento de una colección <see cref="T:System.Data.EnumerableRowCollection`1" /> en un nuevo formulario.</summary>
      <param name="source">
        <see cref="T:System.Data.EnumerableRowCollection`1" /> que contiene los elementos de <see cref="T:System.Data.DataRow" /> en los que se va a invocar una función de transformación.</param>
      <param name="selector">Función de transformación que se va a aplicar a cada elemento.</param>
      <typeparam name="TRow">Tipo de los elementos de fila de <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="S">Tipo en el que se transformará <paramref name="TRow" />.</typeparam>
      <returns>
        <see cref="T:System.Data.EnumerableRowCollection`1" /> cuyos elementos son el resultado de invocar una función de transformación en cada elemento de <paramref name="source" />.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary>Realiza una ordenación secundaria de las filas de una colección <see cref="T:System.Data.EnumerableRowCollection" /> en orden ascendente y según la clave especificada.</summary>
      <param name="source">
        <see cref="T:System.Data.EnumerableRowCollection" /> que contiene los elementos de <see cref="T:System.Data.DataRow" /> que se van a ordenar.</param>
      <param name="keySelector">Función para extraer una clave a partir de un elemento.</param>
      <typeparam name="TRow">Tipo de los elementos de fila de <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Tipo de la clave devuelta por <paramref name="keySelector" />.</typeparam>
      <returns>
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cuyos elementos se ordenan según la clave especificada.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Realiza una ordenación secundaria de las filas de una colección <see cref="T:System.Data.EnumerableRowCollection" /> en orden ascendente y según la clave y el comparador especificados.</summary>
      <param name="source">
        <see cref="T:System.Data.EnumerableRowCollection" /> que contiene los elementos de <see cref="T:System.Data.DataRow" /> que se van a ordenar.</param>
      <param name="keySelector">Función para extraer una clave a partir de un elemento.</param>
      <param name="comparer">
        <see cref="T:System.Collections.Generic.IComparer`1" /> para comparar claves.</param>
      <typeparam name="TRow">Tipo de los elementos de fila de <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Tipo de la clave devuelta por <paramref name="keySelector" />.</typeparam>
      <returns>
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cuyos elementos se ordenan según la clave y el comparador especificados.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary>Realiza una ordenación secundaria de las filas de una colección <see cref="T:System.Data.EnumerableRowCollection" /> en orden descendente y según la clave especificada.</summary>
      <param name="source">
        <see cref="T:System.Data.EnumerableRowCollection" /> que contiene los elementos de <see cref="T:System.Data.DataRow" /> que se van a ordenar.</param>
      <param name="keySelector">Función para extraer una clave a partir de un elemento.</param>
      <typeparam name="TRow">Tipo de los elementos de fila de <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Tipo de la clave devuelta por <paramref name="keySelector" />.</typeparam>
      <returns>
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cuyos elementos se ordenan según la clave especificada.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Realiza una ordenación secundaria de las filas de una colección <see cref="T:System.Data.EnumerableRowCollection" /> en orden descendente y según la clave y el comparador especificados.</summary>
      <param name="source">
        <see cref="T:System.Data.EnumerableRowCollection" /> que contiene los elementos de <see cref="T:System.Data.DataRow" /> que se van a ordenar.</param>
      <param name="keySelector">Función para extraer una clave a partir de un elemento.</param>
      <param name="comparer">
        <see cref="T:System.Collections.Generic.IComparer`1" /> para comparar claves.</param>
      <typeparam name="TRow">Tipo de los elementos de fila de <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Tipo de la clave devuelta por <paramref name="keySelector" />.</typeparam>
      <returns>
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cuyos elementos se ordenan según la clave y el comparador especificados.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})">
      <summary>Filtra una secuencia de filas basándose en el predicado especificado.</summary>
      <param name="source">
        <see cref="T:System.Data.EnumerableRowCollection" /> que contiene los elementos de <see cref="T:System.Data.DataRow" /> que se van a filtrar.</param>
      <param name="predicate">Función para probar cada elemento de una condición.</param>
      <typeparam name="TRow">Tipo de los elementos de fila de <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <returns>
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> que contiene las filas de la secuencia de entrada que cumplen la condición.</returns>
    </member>
    <member name="T:System.Data.EvaluateException">
      <summary>Representa la excepción que se produce cuando no se puede evaluar la propiedad <see cref="P:System.Data.DataColumn.Expression" /> de <see cref="T:System.Data.DataColumn" />.</summary>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.EvaluateException" />.</summary>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.EvaluateException" /> con el objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y la estructura <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Los datos necesarios para serializar o deserializar un objeto.</param>
      <param name="context">Origen y destino de una secuencia de serialización concreta.</param>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.EvaluateException" /> con la cadena especificada.</summary>
      <param name="s">Cadena que se muestra cuando se produce la excepción.</param>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.EvaluateException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message">Mensaje de error que explica el motivo de la excepción.</param>
      <param name="innerException">La excepción que es la causa de la excepción actual o una referencia nula (<see langword="Nothing" /> en Visual Basic) si no se especifica ninguna excepción interna.</param>
    </member>
    <member name="T:System.Data.FillErrorEventArgs">
      <summary>Proporciona datos para el evento <see cref="E:System.Data.Common.DataAdapter.FillError" /> de <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
    </member>
    <member name="M:System.Data.FillErrorEventArgs.#ctor(System.Data.DataTable,System.Object[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.FillErrorEventArgs" />.</summary>
      <param name="dataTable">
        <see cref="T:System.Data.DataTable" /> que se está actualizando.</param>
      <param name="values">Valores de la fila que se está actualizando.</param>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Continue">
      <summary>Obtiene o establece un valor que indica si debe continuar la operación de relleno a pesar del error.</summary>
      <returns>
        <see langword="true" /> si debe continuar la operación de relleno; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.DataTable">
      <summary>Obtiene el <see cref="T:System.Data.DataTable" /> que se está actualizando al producirse el error.</summary>
      <returns>
        <see cref="T:System.Data.DataTable" /> que se está actualizando.</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Errors">
      <summary>Obtiene los errores que se están controlando.</summary>
      <returns>Errores que se están controlando.</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Values">
      <summary>Obtiene los valores de la fila que se está actualizando al producirse el error.</summary>
      <returns>Valores de la fila que se está actualizando.</returns>
    </member>
    <member name="T:System.Data.FillErrorEventHandler">
      <summary>Representa el método que controlará el evento <see cref="E:System.Data.Common.DataAdapter.FillError" />.</summary>
      <param name="sender">Origen del evento.</param>
      <param name="e">Objeto <see cref="T:System.Data.FillErrorEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="T:System.Data.ForeignKeyConstraint">
      <summary>Representa la restricción de una acción impuesta a un conjunto de columnas en una relación entre clave principal y clave externa cuando se elimina o actualiza un valor o una fila.</summary>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.ForeignKeyConstraint" /> con los objetos <see cref="T:System.Data.DataColumn" /> primarios y secundarios especificados.</summary>
      <param name="parentColumn">
        <see cref="T:System.Data.DataColumn" /> primario de la restricción.</param>
      <param name="childColumn">
        <see cref="T:System.Data.DataColumn" /> secundario de la restricción.</param>
      <exception cref="T:System.ArgumentNullException">Una o ambas columnas son <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Las columnas tienen tipos de datos diferentes.  
  
- O bien- 
Las tablas no pertenecen al mismo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.ForeignKeyConstraint" /> con las matrices especificadas de objetos <see cref="T:System.Data.DataColumn" /> primarios y secundarios.</summary>
      <param name="parentColumns">Matriz de un <see cref="T:System.Data.DataColumn" /> primario de la restricción.</param>
      <param name="childColumns">Matriz de un <see cref="T:System.Data.DataColumn" /> secundario de la restricción.</param>
      <exception cref="T:System.ArgumentNullException">Una o ambas columnas son <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Las columnas tienen tipos de datos diferentes.  
  
- O bien- 
Las tablas no pertenecen al mismo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.ForeignKeyConstraint" /> con el nombre especificado para los objetos <see cref="T:System.Data.DataColumn" /> primarios y secundarios.</summary>
      <param name="constraintName">Nombre de la restricción.</param>
      <param name="parentColumn">
        <see cref="T:System.Data.DataColumn" /> primario de la restricción.</param>
      <param name="childColumn">
        <see cref="T:System.Data.DataColumn" /> secundario de la restricción.</param>
      <exception cref="T:System.ArgumentNullException">Una o ambas columnas son <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Las columnas tienen tipos de datos diferentes.  
  
- O bien- 
Las tablas no pertenecen al mismo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.ForeignKeyConstraint" /> con el nombre y matrices especificados de objetos <see cref="T:System.Data.DataColumn" /> primarios y secundarios.</summary>
      <param name="constraintName">Nombre del objeto <see cref="T:System.Data.ForeignKeyConstraint" />. Si el valor es <see langword="null" /> o una cadena vacía, se le dará un nombre predeterminado cuando se agregue a la colección de restricciones.</param>
      <param name="parentColumns">Matriz de un <see cref="T:System.Data.DataColumn" /> primario de la restricción.</param>
      <param name="childColumns">Matriz de un <see cref="T:System.Data.DataColumn" /> secundario de la restricción.</param>
      <exception cref="T:System.ArgumentNullException">Una o ambas columnas son <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Las columnas tienen tipos de datos diferentes.  
  
- O bien- 
Las tablas no pertenecen al mismo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)">
      <summary>Este constructor proporciona compatibilidad en tiempo de diseño en el entorno de Visual Studio. Los objetos <see cref="T:System.Data.ForeignKeyConstraint" /> que se creen utilizando este constructor deben agregarse a la colección mediante <see cref="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" />. Deben existir tablas o columnas con los nombres especificados en el momento de llamar al método, o bien si se ha llamado a <see cref="M:System.Data.DataTable.BeginInit" /> antes de llamar a este constructor, deben existir tablas o columnas con los nombres especificados en el momento de llamar a <see cref="M:System.Data.DataTable.EndInit" />.</summary>
      <param name="constraintName">Nombre de la restricción.</param>
      <param name="parentTableName">Nombre del <see cref="T:System.Data.DataTable" /> primario que contiene objetos <see cref="T:System.Data.DataColumn" /> primarios de la restricción.</param>
      <param name="parentTableNamespace">Nombre del objeto <see cref="P:System.Data.DataTable.Namespace" />.</param>
      <param name="parentColumnNames">Matriz de nombres de objetos <see cref="T:System.Data.DataColumn" /> primarios de la restricción.</param>
      <param name="childColumnNames">Matriz de nombres de objetos <see cref="T:System.Data.DataColumn" /> secundarios de la restricción.</param>
      <param name="acceptRejectRule">Uno de los valores de <see cref="T:System.Data.AcceptRejectRule" />. Entre los posibles valores se incluyen <see langword="None" />, <see langword="Cascade" /> y <see langword="Default" />.</param>
      <param name="deleteRule">Uno de los valores de <see cref="T:System.Data.Rule" /> que se va a utilizar cuando se elimina una fila. De manera predeterminada, es <see langword="Cascade" />. Entre los posibles valores se incluyen <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> y <see langword="Default" />.</param>
      <param name="updateRule">Uno de los valores de <see cref="T:System.Data.Rule" /> que se va a utilizar cuando se actualiza una fila. De manera predeterminada, es <see langword="Cascade" />. Entre los posibles valores se incluyen <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> y <see langword="Default" />.</param>
      <exception cref="T:System.ArgumentNullException">Una o ambas columnas son <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Las columnas tienen tipos de datos diferentes.  
  
- O bien- 
Las tablas no pertenecen al mismo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)">
      <summary>Este constructor proporciona compatibilidad en tiempo de diseño en el entorno de Visual Studio. Los objetos <see cref="T:System.Data.ForeignKeyConstraint" /> que se creen utilizando este constructor deben agregarse a la colección mediante <see cref="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" />. Deben existir tablas o columnas con los nombres especificados en el momento de llamar al método, o bien si se ha llamado a <see cref="M:System.Data.DataTable.BeginInit" /> antes de llamar a este constructor, deben existir tablas o columnas con los nombres especificados en el momento de llamar a <see cref="M:System.Data.DataTable.EndInit" />.</summary>
      <param name="constraintName">Nombre de la restricción.</param>
      <param name="parentTableName">Nombre del <see cref="T:System.Data.DataTable" /> primario que contiene objetos <see cref="T:System.Data.DataColumn" /> primarios de la restricción.</param>
      <param name="parentColumnNames">Matriz de nombres de objetos <see cref="T:System.Data.DataColumn" /> primarios de la restricción.</param>
      <param name="childColumnNames">Matriz de nombres de objetos <see cref="T:System.Data.DataColumn" /> secundarios de la restricción.</param>
      <param name="acceptRejectRule">Uno de los valores de <see cref="T:System.Data.AcceptRejectRule" />. Entre los posibles valores se incluyen <see langword="None" />, <see langword="Cascade" /> y <see langword="Default" />.</param>
      <param name="deleteRule">Uno de los valores de <see cref="T:System.Data.Rule" /> que se va a utilizar cuando se elimina una fila. De manera predeterminada, es <see langword="Cascade" />. Entre los posibles valores se incluyen <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> y <see langword="Default" />.</param>
      <param name="updateRule">Uno de los valores de <see cref="T:System.Data.Rule" /> que se va a utilizar cuando se actualiza una fila. De manera predeterminada, es <see langword="Cascade" />. Entre los posibles valores se incluyen <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> y <see langword="Default" />.</param>
      <exception cref="T:System.ArgumentNullException">Una o ambas columnas son <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Las columnas tienen tipos de datos diferentes.  
  
- O bien- 
Las tablas no pertenecen al mismo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.Equals(System.Object)">
      <summary>Obtiene un valor que indica si la clase <see cref="T:System.Data.ForeignKeyConstraint" /> actual es idéntica al objeto especificado.</summary>
      <param name="key">Objeto con el que se compara este <see cref="T:System.Data.ForeignKeyConstraint" />. Dos <see cref="T:System.Data.ForeignKeyConstraint" /> son iguales si restringen las mismas columnas.</param>
      <returns>
        <see langword="true" /> si los objetos son idénticos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.GetHashCode">
      <summary>Obtiene el código hash de esta instancia del objeto <see cref="T:System.Data.ForeignKeyConstraint" />.</summary>
      <returns>Código hash de un entero con signo de 32 bits.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.AcceptRejectRule">
      <summary>Indica la acción que se debe llevar a cabo en esta restricción cuando se llama a <see cref="M:System.Data.DataTable.AcceptChanges" />.</summary>
      <returns>Uno de los valores de <see cref="T:System.Data.AcceptRejectRule" />. Entre los posibles valores se incluyen <see langword="None" /> y <see langword="Cascade" />. De manera predeterminada, es <see langword="None" />.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.Columns">
      <summary>Obtiene las columnas secundarias de esta restricción.</summary>
      <returns>Matriz de objetos <see cref="T:System.Data.DataColumn" /> que son las columnas secundarias de la restricción.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.DeleteRule">
      <summary>Obtiene o establece la acción que se produce en esta restricción cuando se elimina una fila.</summary>
      <returns>Uno de los valores de <see cref="T:System.Data.Rule" />. De manera predeterminada, es <see langword="Cascade" />.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.RelatedColumns">
      <summary>Columnas primarias de esta restricción.</summary>
      <returns>Matriz de objetos <see cref="T:System.Data.DataColumn" /> que son las columnas primarias de la restricción.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.RelatedTable">
      <summary>Obtiene la tabla primaria de esta restricción.</summary>
      <returns>
        <see cref="T:System.Data.DataTable" /> primario de esta restricción.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.Table">
      <summary>Obtiene la tabla secundaria de esta restricción.</summary>
      <returns>
        <see cref="T:System.Data.DataTable" /> que es la tabla secundaria de la restricción.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.UpdateRule">
      <summary>Obtiene o establece la acción que se produce en esta restricción cuando se actualiza una fila.</summary>
      <returns>Uno de los valores de <see cref="T:System.Data.Rule" />. De manera predeterminada, es <see langword="Cascade" />.</returns>
    </member>
    <member name="T:System.Data.IColumnMapping">
      <summary>Asocia una columna del origen de datos a una columna de un <see cref="T:System.Data.DataSet" />. La implementa la clase <see cref="T:System.Data.Common.DataColumnMapping" />, que utilizan todos los proveedores de datos de .NET Framework.</summary>
    </member>
    <member name="P:System.Data.IColumnMapping.DataSetColumn">
      <summary>Obtiene o establece el nombre de la columna de <see cref="T:System.Data.DataSet" /> al que se va a asignar.</summary>
      <returns>Nombre de la columna del <see cref="T:System.Data.DataSet" /> al que se va a asignar. El nombre no distingue entre mayúsculas y minúsculas.</returns>
    </member>
    <member name="P:System.Data.IColumnMapping.SourceColumn">
      <summary>Obtiene o establece el nombre de la columna del origen de datos desde el que se va a asignar. El nombre distingue entre mayúsculas y minúsculas.</summary>
      <returns>Nombre de la columna del origen de datos (con distinción entre mayúsculas y minúsculas).</returns>
    </member>
    <member name="T:System.Data.IColumnMappingCollection">
      <summary>Contiene una colección de objetos DataColumnMapping y la implementa <see cref="T:System.Data.Common.DataColumnMappingCollection" />, que utiliza todos los proveedores de datos de .NET Framework.</summary>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.Add(System.String,System.String)">
      <summary>Agrega un objeto ColumnMapping a la colección ColumnMapping mediante los nombres de la columna de origen y de columna de <see cref="T:System.Data.DataSet" />.</summary>
      <param name="sourceColumnName">Nombre de la columna de origen con distinción entre mayúsculas y minúsculas.</param>
      <param name="dataSetColumnName">Nombre de la columna del <see cref="T:System.Data.DataSet" />.</param>
      <returns>Objeto ColumnMapping que se ha agregado a la colección.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.Contains(System.String)">
      <summary>Obtiene un valor que indica si <see cref="T:System.Data.Common.DataColumnMappingCollection" /> contiene un objeto <see cref="T:System.Data.Common.DataColumnMapping" /> con el nombre de columna de origen especificado.</summary>
      <param name="sourceColumnName">Nombre de la columna de origen con distinción entre mayúsculas y minúsculas.</param>
      <returns>
        <see langword="true" /> si existe un objeto <see cref="T:System.Data.Common.DataColumnMapping" /> con el nombre de columna de origen especificado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.GetByDataSetColumn(System.String)">
      <summary>Obtiene el objeto ColumnMapping con el nombre de columna del <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataSetColumnName">Nombre de la columna del <see cref="T:System.Data.DataSet" /> dentro de la colección.</param>
      <returns>Objeto ColumnMapping con el nombre de columna del <see langword="DataSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.IndexOf(System.String)">
      <summary>Obtiene la ubicación del objeto <see cref="T:System.Data.Common.DataColumnMapping" /> con el nombre de columna de origen especificado. El nombre distingue entre mayúsculas y minúsculas.</summary>
      <param name="sourceColumnName">Nombre de la columna de origen con distinción entre mayúsculas y minúsculas.</param>
      <returns>Ubicación de base cero del objeto <see langword="DataColumnMapping" /> con el nombre de columna de origen especificado.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.RemoveAt(System.String)">
      <summary>Quita de la colección el objeto <see cref="T:System.Data.IColumnMapping" /> con el nombre de <see cref="P:System.Data.IColumnMapping.SourceColumn" /> especificado.</summary>
      <param name="sourceColumnName">Nombre de <see langword="SourceColumn" />, que distingue entre mayúsculas y minúsculas.</param>
      <exception cref="T:System.IndexOutOfRangeException">Objeto <see cref="T:System.Data.Common.DataColumnMapping" /> que no existe con el nombre de <see langword="SourceColumn" /> especificado.</exception>
    </member>
    <member name="P:System.Data.IColumnMappingCollection.Item(System.String)">
      <summary>Obtiene o establece el objeto <see cref="T:System.Data.IColumnMapping" /> con el nombre de <see langword="SourceColumn" /> especificado.</summary>
      <param name="index">Nombre de <see langword="SourceColumn" /> del objeto <see langword="IColumnMapping" /> que se desea encontrar.</param>
      <returns>Objeto <see langword="IColumnMapping" /> con el nombre de <see langword="SourceColumn" /> especificado.</returns>
    </member>
    <member name="T:System.Data.IDataAdapter">
      <summary>Permite que un objeto implemente un DataAdapter. Representa un conjunto de métodos y propiedades relacionadas con acciones de asignación que se usan para rellenar y actualizar un <see cref="T:System.Data.DataSet" /> y actualizar un origen de datos.  
  
 Las instancias <see cref="T:System.Data.IDbDataAdapter" /> son para los orígenes de datos que son (o se asemejan a) bases de datos relacionales con comandos textuales (como Transact-SQL), mientras que las instancias <see cref="T:System.Data.IDataAdapter" /> pueden usar cualquier tipo de origen de datos.</summary>
    </member>
    <member name="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
      <summary>Agrega filas a la clase <see cref="T:System.Data.DataSet" /> o las actualiza para hacerlas coincidir con las del origen de datos mediante el nombre de <see cref="T:System.Data.DataSet" /> y crea un objeto <see cref="T:System.Data.DataTable" /> denominado "Table".</summary>
      <param name="dataSet">Clase <see cref="T:System.Data.DataSet" /> que se va a rellenar con registros y, si es necesario, con un esquema.</param>
      <returns>Número de filas agregadas o actualizadas correctamente en la clase <see cref="T:System.Data.DataSet" />. No se incluyen las filas afectadas por instrucciones que no devuelven filas.</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary>Agrega una <see cref="T:System.Data.DataTable" /> denominada "Table" para el <see cref="T:System.Data.DataSet" /> especificado y configura el esquema para que coincida con el origen de datos basado en el <see cref="T:System.Data.SchemaType" /> especificado.</summary>
      <param name="dataSet">
        <see cref="T:System.Data.DataSet" /> que se debe rellenar con el esquema del origen de datos.</param>
      <param name="schemaType">Uno de los valores de <see cref="T:System.Data.SchemaType" />.</param>
      <returns>Matriz de objetos <see cref="T:System.Data.DataTable" /> que contienen la información de esquema devuelta a partir del origen de datos.</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.GetFillParameters">
      <summary>Obtiene los parámetros establecidos por el usuario al ejecutar una instrucción SELECT de SQL.</summary>
      <returns>Matriz de objetos <see cref="T:System.Data.IDataParameter" /> que contienen los parámetros establecidos por el usuario.</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
      <summary>Llama a las instrucciones INSERT, UPDATE o DELETE respectivas para cada fila insertada, actualizada o eliminada en la clase <see cref="T:System.Data.DataSet" /> especificada a partir de un objeto <see cref="T:System.Data.DataTable" /> denominado "Table".</summary>
      <param name="dataSet">Clase <see cref="T:System.Data.DataSet" /> que se utiliza para actualizar el origen de datos.</param>
      <exception cref="T:System.Data.DBConcurrencyException">El hecho de intentar ejecutar una instrucción INSERT, UPDATE o DELETE no ha afectado a ningún registro.</exception>
      <returns>Número de filas del <see cref="T:System.Data.DataSet" /> actualizadas correctamente.</returns>
    </member>
    <member name="P:System.Data.IDataAdapter.MissingMappingAction">
      <summary>Indica o especifica si las tablas o columnas de origen no asignadas se pasan con sus nombres de origen, para que se filtren o para generar un error.</summary>
      <exception cref="T:System.ArgumentException">El valor establecido no es ninguno de los valores de <see cref="T:System.Data.MissingMappingAction" />.</exception>
      <returns>Uno de los valores de <see cref="T:System.Data.MissingMappingAction" />. De manera predeterminada, es <see langword="Passthrough" />.</returns>
    </member>
    <member name="P:System.Data.IDataAdapter.MissingSchemaAction">
      <summary>Indica o especifica si las tablas y columnas de origen y las relaciones entre ellas que faltan se agregan al esquema del conjunto de datos, se omiten o hacen que se genere un error.</summary>
      <exception cref="T:System.ArgumentException">El valor establecido no es ninguno de los valores de <see cref="T:System.Data.MissingSchemaAction" />.</exception>
      <returns>Uno de los valores de <see cref="T:System.Data.MissingSchemaAction" />. De manera predeterminada, es <see langword="Add" />.</returns>
    </member>
    <member name="P:System.Data.IDataAdapter.TableMappings">
      <summary>Indica cómo se asigna una tabla de origen a una tabla de conjuntos de datos.</summary>
      <returns>Colección que proporciona la asignación maestra entre los registros devueltos y la clase <see cref="T:System.Data.DataSet" />. El valor predeterminado es una colección vacía.</returns>
    </member>
    <member name="T:System.Data.IDataParameter">
      <summary>Representa un parámetro para un objeto Command y, opcionalmente, sus asignaciones a columnas <see cref="T:System.Data.DataSet" />; además, se implementa mediante proveedores de datos .NET Framework que acceden a orígenes de datos.</summary>
    </member>
    <member name="P:System.Data.IDataParameter.DbType">
      <summary>Obtiene o establece el <see cref="T:System.Data.DbType" /> del parámetro.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">La propiedad no se estableció a un <see cref="T:System.Data.DbType" /> válido.</exception>
      <returns>Uno de los valores de <see cref="T:System.Data.DbType" />. De manera predeterminada, es <see cref="F:System.Data.DbType.String" />.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.Direction">
      <summary>Obtiene o establece un valor que indica si el parámetro es solo de entrada, solo de salida, bidireccional o un parámetro de valor devuelto de un procedimiento almacenado.</summary>
      <exception cref="T:System.ArgumentException">La propiedad no se ha establecido en uno de los valores de <see cref="T:System.Data.ParameterDirection" /> válidos.</exception>
      <returns>Uno de los valores de <see cref="T:System.Data.ParameterDirection" />. De manera predeterminada, es <see langword="Input" />.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.IsNullable">
      <summary>Obtiene un valor que indica si el parámetro acepta valores null.</summary>
      <returns>
        <see langword="true" /> si se aceptan valores null; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.ParameterName">
      <summary>Obtiene o establece el nombre de <see cref="T:System.Data.IDataParameter" />.</summary>
      <returns>Nombre del objeto <see cref="T:System.Data.IDataParameter" />. El valor predeterminado es una cadena vacía.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.SourceColumn">
      <summary>Obtiene o establece el nombre de la columna de origen asignada a <see cref="T:System.Data.DataSet" /> y que se usa para cargar o devolver <see cref="P:System.Data.IDataParameter.Value" />.</summary>
      <returns>Nombre de la columna de origen asignada a <see cref="T:System.Data.DataSet" />. El valor predeterminado es una cadena vacía.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.SourceVersion">
      <summary>Obtiene o establece <see cref="T:System.Data.DataRowVersion" /> que se va a utilizar al cargar <see cref="P:System.Data.IDataParameter.Value" />.</summary>
      <exception cref="T:System.ArgumentException">La propiedad no se ha establecido en uno de los valores de <see cref="T:System.Data.DataRowVersion" />.</exception>
      <returns>Uno de los valores de <see cref="T:System.Data.DataRowVersion" />. De manera predeterminada, es <see langword="Current" />.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.Value">
      <summary>Obtiene o establece el valor del parámetro.</summary>
      <returns>
        <see cref="T:System.Object" /> que es el valor del parámetro. El valor predeterminado es null.</returns>
    </member>
    <member name="T:System.Data.IDataParameterCollection">
      <summary>Recopila todos los parámetros relevantes para un objeto Command y sus asignaciones a columnas <see cref="T:System.Data.DataSet" /> y se implementa mediante proveedores de datos .NET Framework que acceden a orígenes de datos.</summary>
    </member>
    <member name="M:System.Data.IDataParameterCollection.Contains(System.String)">
      <summary>Obtiene un valor que indica si un parámetro de la colección tiene el nombre especificado.</summary>
      <param name="parameterName">Nombre del parámetro.</param>
      <returns>
        <see langword="true" /> si la colección contiene el parámetro; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.IDataParameterCollection.IndexOf(System.String)">
      <summary>Obtiene la ubicación del objeto <see cref="T:System.Data.IDataParameter" /> dentro de la colección.</summary>
      <param name="parameterName">Nombre del parámetro.</param>
      <returns>Ubicación basada en cero del objeto <see cref="T:System.Data.IDataParameter" /> dentro de la colección.</returns>
    </member>
    <member name="M:System.Data.IDataParameterCollection.RemoveAt(System.String)">
      <summary>Quita el objeto <see cref="T:System.Data.IDataParameter" /> de la colección.</summary>
      <param name="parameterName">Nombre del parámetro.</param>
    </member>
    <member name="P:System.Data.IDataParameterCollection.Item(System.String)">
      <summary>Obtiene o establece el parámetro en el índice especificado.</summary>
      <param name="parameterName">Nombre del parámetro que se va a recuperar.</param>
      <returns>Un objeto <see cref="T:System.Object" /> en el índice especificado.</returns>
    </member>
    <member name="T:System.Data.IDataReader">
      <summary>Proporciona un medio para leer una o más secuencias de solo hacia delante de conjuntos de resultados que se obtienen al ejecutar un comando en un origen de datos y se implementa mediante proveedores de datos .NET Framework que tienen acceso a bases de datos relacionales.</summary>
    </member>
    <member name="M:System.Data.IDataReader.Close">
      <summary>Cierra el objeto <see cref="T:System.Data.IDataReader" />.</summary>
    </member>
    <member name="M:System.Data.IDataReader.GetSchemaTable">
      <summary>Devuelve un objeto <see cref="T:System.Data.DataTable" /> que describe los metadatos de columna del <see cref="T:System.Data.IDataReader" />.</summary>
      <exception cref="T:System.InvalidOperationException">La clase <see cref="T:System.Data.IDataReader" /> está cerrada.</exception>
      <returns>
        <see cref="T:System.Data.DataTable" /> que describe los metadatos de columna.</returns>
    </member>
    <member name="M:System.Data.IDataReader.NextResult">
      <summary>Hace avanzar el lector de datos hasta el resultado siguiente, cuando se leen los resultados instrucciones SQL por lotes.</summary>
      <returns>
        <see langword="true" /> si hay más filas; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.IDataReader.Read">
      <summary>Desplaza <see cref="T:System.Data.IDataReader" /> al siguiente registro.</summary>
      <returns>
        <see langword="true" /> si hay más filas; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.IDataReader.Depth">
      <summary>Obtiene un valor que indica la profundidad de anidamiento de la fila actual.</summary>
      <returns>El nivel de anidamiento.</returns>
    </member>
    <member name="P:System.Data.IDataReader.IsClosed">
      <summary>Obtiene un valor que indica si el lector de datos está cerrado.</summary>
      <returns>
        <see langword="true" /> si el lector de datos está cerrado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.IDataReader.RecordsAffected">
      <summary>Obtiene el número de filas cambiadas, insertadas o eliminadas mediante la ejecución de la instrucción SQL.</summary>
      <returns>El número de filas cambiadas, insertadas o eliminadas; 0 si no hay filas afectadas o instrucción dio error; -1 para instrucciones SELECT.</returns>
    </member>
    <member name="T:System.Data.IDataRecord">
      <summary>Proporciona acceso a los valores de columna dentro de cada fila para <see langword="DataReader" /> y se implementa mediante proveedores de datos .NET Framework que acceden a bases de datos relacionales.</summary>
    </member>
    <member name="M:System.Data.IDataRecord.GetBoolean(System.Int32)">
      <summary>Obtiene el valor de la columna especificada como tipo Boolean.</summary>
      <param name="i">Índice de la columna de base cero.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Valor de la columna.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetByte(System.Int32)">
      <summary>Obtiene el valor del entero con signo de 8 bits de la columna especificada.</summary>
      <param name="i">Índice de la columna de base cero.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Valor entero de 8 bits sin signo de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Lee una secuencia de bytes del desplazamiento de columna especificado en el búfer como una matriz, comenzando en el desplazamiento de búfer dado.</summary>
      <param name="i">Índice de la columna de base cero.</param>
      <param name="fieldOffset">Índice del campo a partir del cual se va a comenzar la operación de lectura.</param>
      <param name="buffer">Búfer en el que se va a leer la secuencia de bytes.</param>
      <param name="bufferoffset">Índice de <paramref name="buffer" /> para iniciar la operación de lectura.</param>
      <param name="length">Número de bytes que se va a leer.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>El número real de bytes que se leen.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetChar(System.Int32)">
      <summary>Obtiene el valor de carácter de la columna especificada.</summary>
      <param name="i">Índice de la columna de base cero.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Valor de carácter de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Lee una secuencia de caracteres del desplazamiento de columna especificado en el búfer como una matriz, comenzando en el desplazamiento de búfer dado.</summary>
      <param name="i">Índice de la columna de base cero.</param>
      <param name="fieldoffset">Índice de la fila desde el que se va a comenzar la operación de lectura.</param>
      <param name="buffer">Búfer en el que se va a leer la secuencia de bytes.</param>
      <param name="bufferoffset">Índice de <paramref name="buffer" /> para iniciar la operación de lectura.</param>
      <param name="length">Número de bytes que se va a leer.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Número real de caracteres que se leen.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetData(System.Int32)">
      <summary>Devuelve un <see cref="T:System.Data.IDataReader" /> para el ordinal de columna especificado.</summary>
      <param name="i">Índice del campo para buscar.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>
        <see cref="T:System.Data.IDataReader" /> para el índice de columna.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetDataTypeName(System.Int32)">
      <summary>Obtiene la información de tipo de datos para el campo especificado.</summary>
      <param name="i">Índice del campo para buscar.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Información de tipo de datos para el campo especificado.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetDateTime(System.Int32)">
      <summary>Obtiene el valor de datos de fecha y hora del campo especificado.</summary>
      <param name="i">Índice del campo para buscar.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>El valor de los datos de fecha y hora del campo especificado.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetDecimal(System.Int32)">
      <summary>Obtiene el valor numérico de posición fija del campo especificado.</summary>
      <param name="i">Índice del campo para buscar.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Valor numérico de posición fija del campo especificado.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetDouble(System.Int32)">
      <summary>Obtiene número de punto flotante de doble precisión del campo especificado.</summary>
      <param name="i">Índice del campo para buscar.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Número de punto flotante de precisión doble del campo especificado.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetFieldType(System.Int32)">
      <summary>Obtiene la información <see cref="T:System.Type" /> correspondiente al tipo de <see cref="T:System.Object" /> que sería devuelto desde <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />.</summary>
      <param name="i">Índice del campo para buscar.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Información de <see cref="T:System.Type" /> correspondiente al tipo de <see cref="T:System.Object" /> que se devolverá desde <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetFloat(System.Int32)">
      <summary>Obtiene número de punto flotante de precisión sencilla del campo especificado.</summary>
      <param name="i">Índice del campo para buscar.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Número de punto flotante de precisión sencilla del campo especificado.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetGuid(System.Int32)">
      <summary>Devuelve el valor GUID del campo especificado.</summary>
      <param name="i">Índice del campo para buscar.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Valor GUID del campo especificado.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt16(System.Int32)">
      <summary>Obtiene el valor del entero con signo de 16 bits del campo especificado.</summary>
      <param name="i">Índice del campo para buscar.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Valor entero de 16 bits con signo del campo especificado.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt32(System.Int32)">
      <summary>Obtiene el valor del entero con signo de 32 bits del campo especificado.</summary>
      <param name="i">Índice del campo para buscar.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Valor del entero con signo de 32 bits del campo especificado.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt64(System.Int32)">
      <summary>Obtiene el valor del entero con signo de 64 bits del campo especificado.</summary>
      <param name="i">Índice del campo para buscar.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Valor del entero con signo de 64 bits del campo especificado.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetName(System.Int32)">
      <summary>Obtiene el nombre del campo para buscar.</summary>
      <param name="i">Índice del campo para buscar.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Nombre del campo o cadena vacía (""), si no hay ningún valor que devolver.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetOrdinal(System.String)">
      <summary>Devuelve el índice del campo con nombre.</summary>
      <param name="name">Nombre del campo para buscar.</param>
      <returns>Índice del campo con nombre.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetString(System.Int32)">
      <summary>Obtiene el valor de cadena del campo especificado.</summary>
      <param name="i">Índice del campo para buscar.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Valor de cadena del campo especificado.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetValue(System.Int32)">
      <summary>Devuelve el valor del campo especificado.</summary>
      <param name="i">Índice del campo para buscar.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>
        <see cref="T:System.Object" /> que contendrá el valor del campo cuando se devuelva.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetValues(System.Object[])">
      <summary>Rellena una matriz de objetos con los valores de columna del registro actual.</summary>
      <param name="values">Matriz de <see cref="T:System.Object" /> en la que copiar los campos de atributos.</param>
      <returns>El número de instancias de <see cref="T:System.Object" /> en la matriz.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.IsDBNull(System.Int32)">
      <summary>Devuelve si el campo especificado está establecido en null.</summary>
      <param name="i">Índice del campo para buscar.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>
        <see langword="true" /> si el campo especificado se establece en null; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.IDataRecord.FieldCount">
      <summary>Obtiene el número de columnas de la fila actual.</summary>
      <returns>Si no se posiciona en un conjunto de registros válido, 0; de lo contrario, el número de columnas en el registro actual. El valor predeterminado es -1.</returns>
    </member>
    <member name="P:System.Data.IDataRecord.Item(System.Int32)">
      <summary>Obtiene la columna que está ubicada en el índice especificado.</summary>
      <param name="i">Índice de base cero de la columna que se va a obtener.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Columna que está ubicada en el índice especificado como <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:System.Data.IDataRecord.Item(System.String)">
      <summary>Obtiene la columna con el nombre especificado.</summary>
      <param name="name">Nombre de la columna para buscar.</param>
      <exception cref="T:System.IndexOutOfRangeException">No se ha encontrado la columna con el nombre especificado.</exception>
      <returns>Columna con el nombre especificado como <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:System.Data.IDbCommand">
      <summary>Representa una instrucción SQL que se ejecuta mientras hay conexión con un origen de datos y se implementa mediante proveedores de datos .NET Framework que acceden a bases de datos relacionales.</summary>
    </member>
    <member name="M:System.Data.IDbCommand.Cancel">
      <summary>Intenta cancelar la ejecución de <see cref="T:System.Data.IDbCommand" />.</summary>
    </member>
    <member name="M:System.Data.IDbCommand.CreateParameter">
      <summary>Crea una nueva instancia de un objeto <see cref="T:System.Data.IDbDataParameter" /> .</summary>
      <returns>Un objeto <see langword="IDbDataParameter" />.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteNonQuery">
      <summary>Ejecuta una instrucción SQL contra el objeto <see langword="Connection" /> de un proveedor de datos .NET Framework y devuelve el número de filas afectadas.</summary>
      <exception cref="T:System.InvalidOperationException">La conexión no existe.  
  
 o bien  
  
 La conexión no está abierta.</exception>
      <returns>El número de filas afectadas.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteReader">
      <summary>Ejecuta <see cref="P:System.Data.IDbCommand.CommandText" /> contra <see cref="P:System.Data.IDbCommand.Connection" /> y genera <see cref="T:System.Data.IDataReader" />.</summary>
      <returns>Un objeto <see cref="T:System.Data.IDataReader" />.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary>Ejecuta <see cref="P:System.Data.IDbCommand.CommandText" /> contra <see cref="P:System.Data.IDbCommand.Connection" /> y genera <see cref="T:System.Data.IDataReader" /> mediante uno de los valores de <see cref="T:System.Data.CommandBehavior" />.</summary>
      <param name="behavior">Uno de los valores de <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns>Un objeto <see cref="T:System.Data.IDataReader" />.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteScalar">
      <summary>Ejecuta la consulta y devuelve la primera columna de la primera fila del conjunto de resultados devuelto por la consulta. Las columnas o filas adicionales no se tienen en cuenta.</summary>
      <returns>Primera columna de la primera fila del conjunto de resultados.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.Prepare">
      <summary>Crea una versión preparada (o compilada) del comando en el origen de datos.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> no está establecido.  
  
o bien 
<see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> no es <see cref="M:System.Data.OleDb.OleDbConnection.Open" />.</exception>
    </member>
    <member name="P:System.Data.IDbCommand.CommandText">
      <summary>Obtiene o establece el comando de texto para ejecutar con el origen de datos.</summary>
      <returns>Comando de texto para ejecutar. El valor predeterminado es una cadena vacía ("").</returns>
    </member>
    <member name="P:System.Data.IDbCommand.CommandTimeout">
      <summary>Obtiene o establece el tiempo de espera (en segundos) hasta que se interrumpe el intento de ejecutar un comando y se genera un error.</summary>
      <exception cref="T:System.ArgumentException">El valor de propiedad asignado es menor que 0.</exception>
      <returns>Tiempo (en segundos) que se esperará para que el comando se ejecute. El valor predeterminado es 30 segundos.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.CommandType">
      <summary>Indica o especifica cómo se interpreta la propiedad <see cref="P:System.Data.IDbCommand.CommandText" /> .</summary>
      <returns>Uno de los valores de <see cref="T:System.Data.CommandType" />. De manera predeterminada, es <see langword="Text" />.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.Connection">
      <summary>Obtiene o establece la interfaz <see cref="T:System.Data.IDbConnection" /> que usa esta instancia de <see cref="T:System.Data.IDbCommand" />.</summary>
      <returns>La conexión con el origen de datos.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.Parameters">
      <summary>Obtiene la estructura <see cref="T:System.Data.IDataParameterCollection" />.</summary>
      <returns>Parámetros de la instrucción SQL o procedimiento almacenado.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.Transaction">
      <summary>Obtiene o establece la transacción dentro de la cual se ejecuta el objeto <see langword="Command" /> de un proveedor de datos .NET Framework.</summary>
      <returns>Objeto <see langword="Command" /> de un proveedor de datos .NET Framework que se ejecuta. El valor predeterminado es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.UpdatedRowSource">
      <summary>Obtiene o establece la manera en que se aplican los resultados a <see cref="T:System.Data.DataRow" /> cuando lo utiliza el método <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> de <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <exception cref="T:System.ArgumentException">El valor insertado no era ninguno de los valores de <see cref="T:System.Data.UpdateRowSource" />.</exception>
      <returns>Uno de los valores de <see cref="T:System.Data.UpdateRowSource" />. El valor predeterminado es <see langword="Both" /> a menos que el comando se genere automáticamente. Entonces, el valor predeterminado es <see langword="None" />.</returns>
    </member>
    <member name="T:System.Data.IDbConnection">
      <summary>Representa una conexión abierta a un origen de datos y se implementa mediante proveedores de datos .NET Framework que acceden a bases de datos relacionales.</summary>
    </member>
    <member name="M:System.Data.IDbConnection.BeginTransaction">
      <summary>Inicia una transacción de base de datos.</summary>
      <returns>Objeto que representa la nueva transacción.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>Inicia una transacción de base de datos con el valor de <see cref="T:System.Data.IsolationLevel" /> especificado.</summary>
      <param name="il">Uno de los valores de <see cref="T:System.Data.IsolationLevel" />.</param>
      <returns>Objeto que representa la nueva transacción.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.ChangeDatabase(System.String)">
      <summary>Cambia la base de datos actual para un objeto <see langword="Connection" /> abierto.</summary>
      <param name="databaseName">Nombre de la base de datos que se utiliza en lugar de la base de datos actual.</param>
    </member>
    <member name="M:System.Data.IDbConnection.Close">
      <summary>Cierra la conexión con la base de datos.</summary>
    </member>
    <member name="M:System.Data.IDbConnection.CreateCommand">
      <summary>Crea y devuelve un objeto Command asociado a la conexión.</summary>
      <returns>Objeto Command asociado a la conexión.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.Open">
      <summary>Abre una conexión de base de datos con la configuración especificada por la propiedad <see langword="ConnectionString" /> del objeto Connection específico del proveedor.</summary>
    </member>
    <member name="P:System.Data.IDbConnection.ConnectionString">
      <summary>Obtiene o establece la cadena que se utiliza para abrir una base de datos.</summary>
      <returns>Una cadena que contiene configuración de conexión.</returns>
    </member>
    <member name="P:System.Data.IDbConnection.ConnectionTimeout">
      <summary>Obtiene el tiempo de espera (en segundos) mientras se intenta establecer una conexión antes de que se interrumpa el intento y se genere un error.</summary>
      <returns>El tiempo (en segundos) que se debe esperar para que se abra una conexión. El valor predeterminado es 15 segundos.</returns>
    </member>
    <member name="P:System.Data.IDbConnection.Database">
      <summary>Obtiene el nombre de la base de datos actual o de la que se va a utilizar una vez que se abre la conexión.</summary>
      <returns>Nombre de la base de datos actual o de la que se va a utilizar tras abrir una conexión. El valor predeterminado es una cadena vacía.</returns>
    </member>
    <member name="P:System.Data.IDbConnection.State">
      <summary>Obtiene el estado actual de la conexión.</summary>
      <returns>Uno de los valores de <see cref="T:System.Data.ConnectionState" />.</returns>
    </member>
    <member name="T:System.Data.IDbDataAdapter">
      <summary>Representa un conjunto de propiedades relacionadas con comandos que se utilizan para rellenar <see cref="T:System.Data.DataSet" /> y actualizar un origen de datos, y la implementan los proveedores de datos de .NET Framework que tienen acceso a bases de datos relacionales.</summary>
    </member>
    <member name="P:System.Data.IDbDataAdapter.DeleteCommand">
      <summary>Obtiene o establece una instrucción SQL para eliminar registros del conjunto de datos.</summary>
      <returns>
        <see cref="T:System.Data.IDbCommand" /> utilizado mientras opera <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para eliminar registros del origen de datos para filas eliminadas en el conjunto de datos.</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.InsertCommand">
      <summary>Obtiene o establece una instrucción SQL utilizada para insertar nuevos registros en el origen de datos.</summary>
      <returns>
        <see cref="T:System.Data.IDbCommand" /> utilizado mientras opera <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para insertar registros en el origen de datos para nuevas filas en el conjunto de datos.</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.SelectCommand">
      <summary>Obtiene o establece una instrucción SQL utilizada para seleccionar registros en el origen de datos.</summary>
      <returns>
        <see cref="T:System.Data.IDbCommand" /> que se utiliza mientras opera <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para seleccionar registros del origen de datos para su colocación en el conjunto de datos.</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.UpdateCommand">
      <summary>Obtiene o establece una instrucción SQL utilizada para actualizar registros en el origen de datos.</summary>
      <returns>
        <see cref="T:System.Data.IDbCommand" /> utilizado mientras opera <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para actualizar registros del origen de datos para filas modificadas en el conjunto de datos.</returns>
    </member>
    <member name="T:System.Data.IDbDataParameter">
      <summary>Lo utilizan los diseñadores de datos de Visual Basic .NET para representar un parámetro a un objeto de comando y, opcionalmente, su asignación a columnas <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="P:System.Data.IDbDataParameter.Precision">
      <summary>Indica la precisión de los parámetros numéricos.</summary>
      <returns>Número máximo de dígitos utilizados para representar la propiedad Value del objeto Parameter de un proveedor de datos. El valor predeterminado es 0, que indica que un proveedor de datos establece la precisión para Value.</returns>
    </member>
    <member name="P:System.Data.IDbDataParameter.Scale">
      <summary>Indica la escala de los parámetros numéricos.</summary>
      <returns>Número de posiciones decimales a las que se resuelve <see cref="P:System.Data.OleDb.OleDbParameter.Value" />. El valor predeterminado es 0.</returns>
    </member>
    <member name="P:System.Data.IDbDataParameter.Size">
      <summary>Tamaño del parámetro.</summary>
      <returns>Tamaño máximo, en bytes, de los datos de la columna. El valor predeterminado se deduce del valor del parámetro.</returns>
    </member>
    <member name="T:System.Data.IDbTransaction">
      <summary>Representa una transacción para realizar en un origen de datos y se implementa mediante proveedores de datos de .NET Framework que acceden a bases de datos relacionales.</summary>
    </member>
    <member name="M:System.Data.IDbTransaction.Commit">
      <summary>Confirma la transacción de base de datos.</summary>
      <exception cref="T:System.Exception">Error al intentar confirmar la transacción.</exception>
      <exception cref="T:System.InvalidOperationException">Ya se confirmó o revirtió la transacción.  
  
 o bien  
  
 Se interrumpió la conexión.</exception>
    </member>
    <member name="M:System.Data.IDbTransaction.Rollback">
      <summary>Revierte una transacción desde un estado pendiente.</summary>
      <exception cref="T:System.Exception">Error al intentar confirmar la transacción.</exception>
      <exception cref="T:System.InvalidOperationException">Ya se confirmó o revirtió la transacción.  
  
 o bien  
  
 Se interrumpió la conexión.</exception>
    </member>
    <member name="P:System.Data.IDbTransaction.Connection">
      <summary>Especifica el objeto Connection para asociar a la transacción.</summary>
      <returns>El objeto Connection para asociar a la transacción.</returns>
    </member>
    <member name="P:System.Data.IDbTransaction.IsolationLevel">
      <summary>Especifica <see cref="T:System.Data.IsolationLevel" /> para esta transacción.</summary>
      <returns>
        <see cref="T:System.Data.IsolationLevel" /> para esta transacción. De manera predeterminada, es <see langword="ReadCommitted" />.</returns>
    </member>
    <member name="T:System.Data.InRowChangingEventException">
      <summary>Representa la excepción que se produce al llamar al método <see cref="M:System.Data.DataRow.EndEdit" /> en el evento <see cref="E:System.Data.DataTable.RowChanging" />.</summary>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.InRowChangingEventException" />.</summary>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.InRowChangingEventException" /> con información de serialización.</summary>
      <param name="info">Datos necesarios para serializar o deserializar un objeto.</param>
      <param name="context">Descripción del origen y el destino de la secuencia serializada especificada.</param>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.InRowChangingEventException" /> con la cadena especificada.</summary>
      <param name="s">Cadena que se muestra cuando se produce la excepción.</param>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.InRowChangingEventException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message">Mensaje de error que explica el motivo de la excepción.</param>
      <param name="innerException">La excepción que es la causa de la excepción actual o una referencia nula (<see langword="Nothing" /> en Visual Basic) si no se especifica ninguna excepción interna.</param>
    </member>
    <member name="T:System.Data.InternalDataCollectionBase">
      <summary>Proporciona la funcionalidad base para crear colecciones.</summary>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.InternalDataCollectionBase" />.</summary>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)">
      <summary>Copia todos los elementos del <see cref="T:System.Data.InternalDataCollectionBase" /> actual en un <see cref="T:System.Array" /> unidimensional, empezando por el índice del <see cref="T:System.Data.InternalDataCollectionBase" /> especificado.</summary>
      <param name="ar">
        <see cref="T:System.Array" /> unidimensional en la que se copian los elementos del objeto <see cref="T:System.Data.InternalDataCollectionBase" /> actual.</param>
      <param name="index">Índice de destino del <see cref="T:System.Array" /> en el que se empieza a copiar.</param>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.GetEnumerator">
      <summary>Obtiene un <see cref="T:System.Collections.IEnumerator" /> para la colección.</summary>
      <returns>Interfaz <see cref="T:System.Collections.IEnumerator" /> para la colección.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.Count">
      <summary>Obtiene el número total de elementos de una colección.</summary>
      <returns>Número total de elementos de una colección.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.IsReadOnly">
      <summary>Obtiene un valor que indica si <see cref="T:System.Data.InternalDataCollectionBase" /> es de solo lectura.</summary>
      <returns>
        <see langword="true" /> si la colección es de solo lectura; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.IsSynchronized">
      <summary>Obtiene un valor que indica si el objeto <see cref="T:System.Data.InternalDataCollectionBase" /> está sincronizado.</summary>
      <returns>
        <see langword="true" /> si la colección está sincronizada; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.List">
      <summary>Obtiene los elementos de una colección en forma de lista.</summary>
      <returns>
        <see cref="T:System.Collections.ArrayList" /> que contiene la colección.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.SyncRoot">
      <summary>Obtiene un objeto que se puede utilizar para sincronizar la colección.</summary>
      <returns>Objeto <see cref="T:System.Object" /> que se utiliza para sincronizar la colección.</returns>
    </member>
    <member name="T:System.Data.InvalidConstraintException">
      <summary>Representa la excepción que se produce al intentar crear una relación u obtener acceso a la misma de forma incorrecta.</summary>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.InvalidConstraintException" />.</summary>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.InvalidConstraintException" /> con información de serialización.</summary>
      <param name="info">Datos necesarios para serializar o deserializar un objeto.</param>
      <param name="context">Descripción del origen y el destino de la secuencia serializada especificada.</param>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.InvalidConstraintException" /> con la cadena especificada.</summary>
      <param name="s">Cadena que se muestra cuando se produce la excepción.</param>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.InvalidConstraintException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message">Mensaje de error que explica el motivo de la excepción.</param>
      <param name="innerException">La excepción que es la causa de la excepción actual o una referencia nula (<see langword="Nothing" /> en Visual Basic) si no se especifica ninguna excepción interna.</param>
    </member>
    <member name="T:System.Data.InvalidExpressionException">
      <summary>Representa la excepción que se produce al intentar agregar a una colección <see cref="T:System.Data.DataColumn" /> un objeto <see cref="P:System.Data.DataColumn.Expression" /> que contiene una propiedad <see cref="T:System.Data.DataColumnCollection" /> no válida.</summary>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.InvalidExpressionException" />.</summary>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.InvalidExpressionException" /> con el objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y la estructura <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Los datos necesarios para serializar o deserializar un objeto.</param>
      <param name="context">Origen y destino de una secuencia de serialización dada.</param>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.InvalidExpressionException" /> con la cadena especificada.</summary>
      <param name="s">Cadena que se muestra cuando se produce la excepción.</param>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.InvalidExpressionException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message">Mensaje de error que explica el motivo de la excepción.</param>
      <param name="innerException">La excepción que es la causa de la excepción actual o una referencia nula (<see langword="Nothing" /> en Visual Basic) si no se especifica ninguna excepción interna.</param>
    </member>
    <member name="T:System.Data.IsolationLevel">
      <summary>Especifica el comportamiento de bloqueo de transacción para la conexión.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Chaos">
      <summary>Los cambios pendientes de las transacciones más aisladas no se pueden sobrescribir.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.ReadCommitted">
      <summary>Los bloqueos compartidos se mantienen mientras se están leyendo los datos para evitar lecturas erróneas. Sin embargo, es posible cambiar los datos antes del fin de la transacción, lo que provoca lecturas no repetibles o datos fantasma.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.ReadUncommitted">
      <summary>Se pueden producir lecturas erróneas, lo que implica que no se emitan bloqueos compartidos y que no se cumplan los bloqueos exclusivos.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.RepeatableRead">
      <summary>Los bloqueos se realizan sobre todos los datos usados en una consulta para evitar que otros usuarios actualicen dichos datos. Esto evita las lecturas no repetibles pero sigue existiendo la posibilidad de que se produzcan filas fantasma.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Serializable">
      <summary>Se realiza un bloqueo de intervalo en <see cref="T:System.Data.DataSet" />, lo que impide que otros usuarios actualicen o inserten filas en el conjunto de datos hasta que la transacción haya terminado.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Snapshot">
      <summary>Reduce el bloqueo almacenando una versión de los datos que una aplicación puede leer mientras otra los está modificando. Indica que de una transacción no se pueden ver los cambios realizados en otras transacciones, aunque se vuelva a realizar una consulta.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Unspecified">
      <summary>Se utiliza un nivel de aislamiento distinto al especificado, pero no se puede determinar el nivel.</summary>
    </member>
    <member name="T:System.Data.ITableMapping">
      <summary>Asocia una tabla de origen a una tabla de <see cref="T:System.Data.DataSet" />. La implementa la clase <see cref="T:System.Data.Common.DataTableMapping" />, que utilizan todos los proveedores de datos de .NET Framework.</summary>
    </member>
    <member name="P:System.Data.ITableMapping.ColumnMappings">
      <summary>Obtiene el <see cref="T:System.Data.Common.DataColumnMappingCollection" /> derivado para el <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Colección de asignaciones de columnas de datos.</returns>
    </member>
    <member name="P:System.Data.ITableMapping.DataSetTable">
      <summary>Obtiene o establece el nombre, sin distinguir entre mayúsculas y minúsculas, de la tabla incluida en el <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Nombre, sin distinguir entre mayúsculas y minúsculas, de la tabla incluida en el <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.ITableMapping.SourceTable">
      <summary>Obtiene o establece el nombre, sin distinguir entre mayúsculas y minúsculas, de la tabla de origen.</summary>
      <returns>Nombre, con distinción entre mayúsculas y minúsculas, de la tabla de origen.</returns>
    </member>
    <member name="T:System.Data.ITableMappingCollection">
      <summary>Contiene una colección de objetos TableMapping. La implementa la clase <see cref="T:System.Data.Common.DataTableMappingCollection" />, que utilizan todos los proveedores de datos de .NET Framework.</summary>
    </member>
    <member name="M:System.Data.ITableMappingCollection.Add(System.String,System.String)">
      <summary>Agrega una asignación de tabla a la colección.</summary>
      <param name="sourceTableName">Nombre, con distinción entre mayúsculas y minúsculas, de la tabla de origen.</param>
      <param name="dataSetTableName">Nombre de la tabla del <see cref="T:System.Data.DataSet" />.</param>
      <returns>Referencia al objeto <see cref="T:System.Data.ITableMapping" /> recién asignado.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.Contains(System.String)">
      <summary>Obtiene un valor que indica si la colección contiene una asignación de tabla con el nombre de tabla de origen especificado.</summary>
      <param name="sourceTableName">Nombre, con distinción entre mayúsculas y minúsculas, de la tabla de origen.</param>
      <returns>
        <see langword="true" /> si existe una asignación de tabla con el nombre de tabla de origen especificado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.GetByDataSetTable(System.String)">
      <summary>Obtiene el objeto TableMapping con el nombre de tabla del <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataSetTableName">Nombre de la tabla del <see langword="DataSet" /> dentro de la colección.</param>
      <returns>Objeto TableMapping con el nombre de tabla del <see langword="DataSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.IndexOf(System.String)">
      <summary>Obtiene la ubicación del objeto <see cref="T:System.Data.ITableMapping" /> dentro de la colección.</summary>
      <param name="sourceTableName">Nombre, con distinción entre mayúsculas y minúsculas, de la tabla de origen.</param>
      <returns>Ubicación basada en cero del objeto <see cref="T:System.Data.ITableMapping" /> dentro de la colección.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.RemoveAt(System.String)">
      <summary>Quita de la colección el objeto <see cref="T:System.Data.ITableMapping" /> con el nombre de <see cref="P:System.Data.ITableMapping.SourceTable" /> especificado.</summary>
      <param name="sourceTableName">Nombre, que distingue entre mayúsculas y minúsculas, de <see langword="SourceTable" />.</param>
    </member>
    <member name="P:System.Data.ITableMappingCollection.Item(System.String)">
      <summary>Obtiene o establece la instancia de <see cref="T:System.Data.ITableMapping" /> con el nombre de <see cref="P:System.Data.ITableMapping.SourceTable" /> especificado.</summary>
      <param name="index">Nombre de <see langword="SourceTable" /> de <see cref="T:System.Data.ITableMapping" />.</param>
      <returns>Instancia de <see cref="T:System.Data.ITableMapping" /> con el nombre de <see langword="SourceTable" /> especificado.</returns>
    </member>
    <member name="T:System.Data.KeyRestrictionBehavior">
      <summary>Identifica la lista de parámetros de cadena de conexión especificados por la propiedad <see langword="KeyRestrictions" /> que están permitidos o que no están permitidos.</summary>
    </member>
    <member name="F:System.Data.KeyRestrictionBehavior.AllowOnly">
      <summary>Predeterminada. Identifica los únicos parámetros de cadena de conexión adicionales que están permitidos.</summary>
    </member>
    <member name="F:System.Data.KeyRestrictionBehavior.PreventUsage">
      <summary>Identifica los parámetros de cadena de conexión adicionales que no están permitidos.</summary>
    </member>
    <member name="T:System.Data.LoadOption">
      <summary>Controla cómo los valores del origen de datos se aplicarán a las filas existentes al utilizar los métodos <see cref="Overload:System.Data.DataTable.Load" /> o <see cref="Overload:System.Data.DataSet.Load" />.</summary>
    </member>
    <member name="F:System.Data.LoadOption.OverwriteChanges">
      <summary>Los valores de entrada de esta fila se escribirán en las versiones de valores actuales y valores originales de los datos de cada columna.</summary>
    </member>
    <member name="F:System.Data.LoadOption.PreserveChanges">
      <summary>Los valores de entrada de esta fila se escribirán en la versión de valores originales de cada columna. La versión actual de los datos de cada columna no se modificará.  Este es el valor predeterminado.</summary>
    </member>
    <member name="F:System.Data.LoadOption.Upsert">
      <summary>Los valores de entrada de esta fila se escribirán en la versión actual de cada columna. La versión original de los datos de cada columna no se modificará.</summary>
    </member>
    <member name="T:System.Data.MappingType">
      <summary>Especifica cómo se asigna <see cref="T:System.Data.DataColumn" />.</summary>
    </member>
    <member name="F:System.Data.MappingType.Attribute">
      <summary>La columna se asigna a un atributo XML.</summary>
    </member>
    <member name="F:System.Data.MappingType.Element">
      <summary>La columna se asigna a un elemento XML.</summary>
    </member>
    <member name="F:System.Data.MappingType.Hidden">
      <summary>La columna se asigna a una estructura interna.</summary>
    </member>
    <member name="F:System.Data.MappingType.SimpleContent">
      <summary>La columna se asigna a un nodo <see cref="T:System.Xml.XmlText" />.</summary>
    </member>
    <member name="T:System.Data.MergeFailedEventArgs">
      <summary>Se produce cuando unos <see langword="DataRow" /> de origen y de destino tienen el mismo valor de clave principal, y la propiedad <see cref="P:System.Data.DataSet.EnforceConstraints" /> se establece en true.</summary>
    </member>
    <member name="M:System.Data.MergeFailedEventArgs.#ctor(System.Data.DataTable,System.String)">
      <summary>Inicializa una nueva instancia de una clase <see cref="T:System.Data.MergeFailedEventArgs" /> con el objeto <see cref="T:System.Data.DataTable" /> y una descripción del conflicto de combinación.</summary>
      <param name="table">Objeto <see cref="T:System.Data.DataTable" />.</param>
      <param name="conflict">Descripción del conflicto de combinación.</param>
    </member>
    <member name="P:System.Data.MergeFailedEventArgs.Conflict">
      <summary>Devuelve una descripción del conflicto de combinación.</summary>
      <returns>Descripción del conflicto de combinación.</returns>
    </member>
    <member name="P:System.Data.MergeFailedEventArgs.Table">
      <summary>Devuelve el objeto <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Objeto <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="T:System.Data.MergeFailedEventHandler">
      <summary>Representa el método que controlará el evento <see cref="E:System.Data.DataSet.MergeFailed" />.</summary>
      <param name="sender">Origen del evento.</param>
      <param name="e">Datos del evento.</param>
    </member>
    <member name="T:System.Data.MissingMappingAction">
      <summary>Determina la acción que se produce cuando falta una asignación en una tabla de origen o una columna de origen.</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Error">
      <summary>Si la asignación de columna especificada no existe, se genera <see cref="T:System.InvalidOperationException" />.</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Ignore">
      <summary>Se omite la columna o la tabla en la que falta una asignación. Devuelve <see langword="null" />.</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Passthrough">
      <summary>La columna de origen o la tabla de origen se crea y se agrega a <see cref="T:System.Data.DataSet" /> utilizando su nombre original.</summary>
    </member>
    <member name="T:System.Data.MissingPrimaryKeyException">
      <summary>Representa la excepción que se produce al intentar obtener acceso a una fila de una tabla que no tiene clave principal.</summary>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.MissingPrimaryKeyException" />.</summary>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.MissingPrimaryKeyException" /> con información de serialización.</summary>
      <param name="info">Datos necesarios para serializar o deserializar un objeto.</param>
      <param name="context">Descripción del origen y destino de la secuencia serializada especificada.</param>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.MissingPrimaryKeyException" /> con la cadena especificada.</summary>
      <param name="s">Cadena que se muestra cuando se produce la excepción.</param>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.MissingPrimaryKeyException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message">Mensaje de error que explica el motivo de la excepción.</param>
      <param name="innerException">La excepción que es la causa de la excepción actual o una referencia nula (<see langword="Nothing" /> en Visual Basic) si no se especifica ninguna excepción interna.</param>
    </member>
    <member name="T:System.Data.MissingSchemaAction">
      <summary>Especifica la acción que se debe realizar cuando se agregan datos al <see cref="T:System.Data.DataSet" /> y faltan el <see cref="T:System.Data.DataTable" /> o <see cref="T:System.Data.DataColumn" /> necesarios.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Add">
      <summary>Agrega las columnas necesarias para completar el esquema.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.AddWithKey">
      <summary>Agrega las columnas necesarias e información sobre la clave principal para completar el esquema. Para obtener más información sobre cómo se agrega la información de clave principal a <see cref="T:System.Data.DataTable" />, vea <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />. Para funcionar correctamente con el proveedor de datos de .NET Framework para OLE DB, <see langword="AddWithKey" /> requiere que el proveedor OLE DB nativo obtenga la información de clave principal necesaria mediante el establecimiento de la propiedad DBPROP_UNIQUEROWS y, a continuación, determine las columnas que son de clave principal mediante el examen de DBCOLUMN_KEYCOLUMN en el IColumnsRowset. Como alternativa, el usuario puede establecer de forma explícita las restricciones de clave principal en cada <see cref="T:System.Data.DataTable" />. De este modo se garantiza que los registros entrantes que coincidan con los ya existentes se actualicen en lugar de agregarse. Cuando se utiliza el método <see langword="AddWithKey" />, el proveedor de datos de .NET Framework para SQL Server agrega una cláusula FOR BROWSE a la instrucción que se está ejecutando. El usuario debe tener en cuenta los posibles efectos secundarios, como las interferencias con el uso de las instrucciones SET FMTONLY ON. Para obtener más información, vea SET FMTONLY (Transact-SQL).</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Error">
      <summary>Si la asignación de columna especificada no existe, se genera <see cref="T:System.InvalidOperationException" />.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Ignore">
      <summary>Omite las columnas adicionales.</summary>
    </member>
    <member name="T:System.Data.NoNullAllowedException">
      <summary>Representa la excepción que se produce cuando se intenta insertar un valor null en una columna donde el valor de <see cref="P:System.Data.DataColumn.AllowDBNull" /> está establecido en <see langword="false" />.</summary>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.NoNullAllowedException" />.</summary>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.NoNullAllowedException" /> con información de serialización.</summary>
      <param name="info">Datos necesarios para serializar o deserializar un objeto.</param>
      <param name="context">Descripción del origen y el destino de la secuencia serializada especificada.</param>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.NoNullAllowedException" /> con la cadena especificada.</summary>
      <param name="s">Cadena que se muestra cuando se produce la excepción.</param>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.NoNullAllowedException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message">Mensaje de error que explica el motivo de la excepción.</param>
      <param name="innerException">La excepción que es la causa de la excepción actual o una referencia nula (<see langword="Nothing" /> en Visual Basic) si no se especifica ninguna excepción interna.</param>
    </member>
    <member name="T:System.Data.OrderedEnumerableRowCollection`1">
      <summary>Representa una colección de objetos <see cref="T:System.Data.DataRow" /> ordenados devueltos desde una consulta.</summary>
      <typeparam name="TRow">Tipo de objetos de la secuencia de origen, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="T:System.Data.ParameterDirection">
      <summary>Especifica el tipo de un parámetro dentro de una consulta relativa al <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.Input">
      <summary>Se trata de un parámetro de entrada.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.InputOutput">
      <summary>El parámetro puede ser de entrada o de salida.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.Output">
      <summary>Se trata de un parámetro de salida.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.ReturnValue">
      <summary>El parámetro representa un valor devuelto de una operación como, por ejemplo, un procedimiento almacenado, una función integrada o una función definida por el usuario.</summary>
    </member>
    <member name="T:System.Data.PropertyCollection">
      <summary>Representa una colección de propiedades que se pueden agregar al <see cref="T:System.Data.DataColumn" />, <see cref="T:System.Data.DataSet" /> o <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.PropertyCollection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.PropertyCollection" />.</summary>
    </member>
    <member name="M:System.Data.PropertyCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.PropertyCollection" />.</summary>
      <param name="info">Los datos necesarios para serializar o deserializar un objeto.</param>
      <param name="context">Origen y destino de una secuencia de serialización dada.</param>
    </member>
    <member name="M:System.Data.PropertyCollection.Clone">
      <summary>Crea una copia superficial del objeto <see cref="T:System.Data.PropertyCollection" />.</summary>
      <returns>Devuelve una copia del objeto <see cref="T:System.Object" />, una instantánea del objeto <see cref="T:System.Data.PropertyCollection" />.</returns>
    </member>
    <member name="T:System.Data.ReadOnlyException">
      <summary>Representa la excepción que se produce al intentar cambiar el valor de una columna de sólo lectura.</summary>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.ReadOnlyException" />.</summary>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.ReadOnlyException" /> con información de serialización.</summary>
      <param name="info">Datos necesarios para serializar o deserializar un objeto.</param>
      <param name="context">Descripción del origen y el destino de la secuencia serializada especificada.</param>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.ReadOnlyException" /> con la cadena especificada.</summary>
      <param name="s">Cadena que se muestra cuando se produce la excepción.</param>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.ReadOnlyException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message">Mensaje de error que explica el motivo de la excepción.</param>
      <param name="innerException">La excepción que es la causa de la excepción actual o una referencia nula (<see langword="Nothing" /> en Visual Basic) si no se especifica ninguna excepción interna.</param>
    </member>
    <member name="T:System.Data.RowNotInTableException">
      <summary>Representa la excepción que se produce al intentar realizar una operación en un objeto <see cref="T:System.Data.DataRow" /> que no se encuentra en un objeto <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.RowNotInTableException" />.</summary>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.RowNotInTableException" /> con información de serialización.</summary>
      <param name="info">Datos necesarios para serializar o deserializar un objeto.</param>
      <param name="context">Descripción del origen y el destino de la secuencia serializada especificada.</param>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.RowNotInTableException" /> con la cadena especificada.</summary>
      <param name="s">Cadena que se muestra cuando se produce la excepción.</param>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.RowNotInTableException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message">Mensaje de error que explica el motivo de la excepción.</param>
      <param name="innerException">La excepción que es la causa de la excepción actual o una referencia nula (<see langword="Nothing" /> en Visual Basic) si no se especifica ninguna excepción interna.</param>
    </member>
    <member name="T:System.Data.Rule">
      <summary>Indica la acción que se produce cuando se fuerza <see cref="T:System.Data.ForeignKeyConstraint" />.</summary>
    </member>
    <member name="F:System.Data.Rule.Cascade">
      <summary>Elimina o actualiza las filas relacionadas. Este es el valor predeterminado.</summary>
    </member>
    <member name="F:System.Data.Rule.None">
      <summary>No realiza ninguna acción en las filas relacionadas.</summary>
    </member>
    <member name="F:System.Data.Rule.SetDefault">
      <summary>Establece los valores de las filas relacionadas en el valor contenido en la propiedad <see cref="P:System.Data.DataColumn.DefaultValue" />.</summary>
    </member>
    <member name="F:System.Data.Rule.SetNull">
      <summary>Establece los valores de las filas relacionadas en <see langword="DBNull" />.</summary>
    </member>
    <member name="T:System.Data.SchemaSerializationMode">
      <summary>Indica el modo de serialización del esquema de un objeto <see cref="T:System.Data.DataSet" /> con tipo.</summary>
    </member>
    <member name="F:System.Data.SchemaSerializationMode.ExcludeSchema">
      <summary>Omite la serialización del esquema de un objeto <see cref="T:System.Data.DataSet" /> con tipo.</summary>
    </member>
    <member name="F:System.Data.SchemaSerializationMode.IncludeSchema">
      <summary>Incluye la serialización del esquema de un objeto <see cref="T:System.Data.DataSet" /> con tipo. El valor predeterminado.</summary>
    </member>
    <member name="T:System.Data.SchemaType">
      <summary>Especifica cómo controlar las asignaciones de esquema existentes al realizar una operación <see cref="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />.</summary>
    </member>
    <member name="F:System.Data.SchemaType.Mapped">
      <summary>Aplica las asignaciones de tabla existentes al esquema de entrada. Configura el <see cref="T:System.Data.DataSet" /> con el esquema transformado.</summary>
    </member>
    <member name="F:System.Data.SchemaType.Source">
      <summary>Pasa por alto las asignaciones de tabla de DataAdapter. Configura el <see cref="T:System.Data.DataSet" /> mediante el esquema de entrada sin aplicar transformaciones.</summary>
    </member>
    <member name="T:System.Data.SerializationFormat">
      <summary>Determina el formato de serialización para un objeto <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.SerializationFormat.Binary">
      <summary>Serializa como contenido binario. Sólo está disponible en ADO.NET 2.0.</summary>
    </member>
    <member name="F:System.Data.SerializationFormat.Xml">
      <summary>Serializa como contenido XML. El valor predeterminado.</summary>
    </member>
    <member name="T:System.Data.SqlDbType">
      <summary>Especifica el tipo de datos específico de SQL Server de un campo o una propiedad para su uso en <see cref="T:System.Data.SqlClient.SqlParameter" />.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.BigInt">
      <summary>
        <see cref="T:System.Int64" />. Entero de 64 bits con signo.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Binary">
      <summary>
        <see cref="T:System.Array" /> de tipo <see cref="T:System.Byte" />. Secuencia de longitud fija de datos binarios comprendida entre 1 y 8.000 bytes.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Bit">
      <summary>
        <see cref="T:System.Boolean" />. Valor numérico sin signo que puede ser 0, 1 o <see langword="null" />.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Char">
      <summary>
        <see cref="T:System.String" />. Secuencia de longitud fija de caracteres no Unicode comprendida entre 1 y 8.000 caracteres.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Date">
      <summary>Datos de fechas que van desde el 1 de enero del año 1 d.C. hasta el 31 de diciembre de 9999 d.C.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime">
      <summary>
        <see cref="T:System.DateTime" />. Datos de fecha y hora cuyo valor está comprendido entre el 1 de enero de 1753 y el 31 de diciembre de 9999, con una precisión de 3,33 milisegundos.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime2">
      <summary>Datos de fecha y hora. El intervalo de valores de fecha comprende desde el 1 de enero de 1 d.C. hasta el 31 de diciembre de 9999 d.C. El intervalo de valor horario está comprendido entre 00:00:00 y 23:59:59,9999999 con una precisión de 100 nanosegundos.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTimeOffset">
      <summary>Datos de fecha y hora con conocimiento de la zona horaria. El intervalo de valores de fecha comprende desde el 1 de enero de 1 d.C. hasta el 31 de diciembre de 9999 d.C. El intervalo de valor horario está comprendido entre 00:00:00 y 23:59:59,9999999 con una precisión de 100 nanosegundos. El intervalo horario es -14: 00 hasta +14:00.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Decimal">
      <summary>
        <see cref="T:System.Decimal" />. Valor numérico de precisión y escala fijas comprendido entre -10 38 -1 y 10 38 -1.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Float">
      <summary>
        <see cref="T:System.Double" />. Número de punto flotante comprendido entre -1,79E +308 y 1,79E +308.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Image">
      <summary>
        <see cref="T:System.Array" /> de tipo <see cref="T:System.Byte" />. Secuencia de longitud variable de datos binarios comprendida entre 0 y 2 31 -1 (o 2.147.483.647) bytes.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Int">
      <summary>
        <see cref="T:System.Int32" />. Entero de 32 bits con signo.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Money">
      <summary>
        <see cref="T:System.Decimal" />. Valor de moneda comprendido entre -2 63 (o -9.223.372.036.854.775.808) y 2 63 -1 (o +9.223.372.036.854.775.807), con una precisión de una diezmilésima de unidad de moneda.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NChar">
      <summary>
        <see cref="T:System.String" />. Secuencia de longitud fija de caracteres Unicode comprendida entre 1 y 4.000 caracteres.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NText">
      <summary>
        <see cref="T:System.String" />. Secuencia de longitud variable de datos Unicode con una longitud máxima de 2 30 - 1 (o 1.073.741.823) caracteres.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NVarChar">
      <summary>
        <see cref="T:System.String" />. Secuencia de longitud variable de caracteres Unicode comprendida entre 1 y 4.000 caracteres. Se produce un error en las conversiones implícitas si la cadena tiene más de 4.000 caracteres. Establezca explícitamente el objeto cuando trabaje con cadenas de más de 4.000 caracteres. Utilice <see cref="F:System.Data.SqlDbType.NVarChar" /> cuando la columna de base de datos sea <see langword="nvarchar(max)" />.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Real">
      <summary>
        <see cref="T:System.Single" />. Número de punto flotante comprendido entre -3,40E +38 y 3,40E +38.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallDateTime">
      <summary>
        <see cref="T:System.DateTime" />. Datos de fecha y hora cuyo valor está comprendido entre el 1 de enero de 1900 y el 6 de junio de 2079, con una precisión de un minuto.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallInt">
      <summary>
        <see cref="T:System.Int16" />. Entero de 16 bits con signo.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallMoney">
      <summary>
        <see cref="T:System.Decimal" />. Valor de divisa comprendido entre -214.748,3648 y +214.748,3647, con una precisión de una diezmilésima de unidad de divisa.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Structured">
      <summary>Un tipo de datos especial para especificar datos estructurados contenidos en parámetros con valores de tabla.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Text">
      <summary>
        <see cref="T:System.String" />. Secuencia de longitud variable de datos no Unicode con una longitud máxima de 2 31 -1 (o 2.147.483.647) caracteres.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Time">
      <summary>Datos horarios basados en un reloj de 24 horas. El intervalo de valor horario está comprendido entre 00:00:00 y 23:59:59,9999999 con una precisión de 100 nanosegundos. Corresponde a un valor <see langword="time" /> de SQL Server.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Timestamp">
      <summary>
        <see cref="T:System.Array" /> de tipo <see cref="T:System.Byte" />. Números binarios generados automáticamente de los que se garantiza que son únicos en una base de datos. <see langword="timestamp" /> se usa normalmente como un mecanismo para agregar marcas de versión a las filas de tabla. El tamaño de almacenamiento es de 8 bytes.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.TinyInt">
      <summary>
        <see cref="T:System.Byte" />. Entero de 8 bits sin signo.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Udt">
      <summary>Tipo definido por el usuario (UDT) de SQL Server.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.UniqueIdentifier">
      <summary>
        <see cref="T:System.Guid" />. Identificador único global (GUID).</summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarBinary">
      <summary>
        <see cref="T:System.Array" /> de tipo <see cref="T:System.Byte" />. Secuencia de longitud variable de datos binarios comprendida entre 1 y 8.000 bytes. Se produce un error en las conversiones implícitas si la matriz de bytes tiene más de 8.000 caracteres. Establezca explícitamente el objeto cuando trabaje con matrices de bytes de más de 8.000 bytes.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarChar">
      <summary>
        <see cref="T:System.String" />. Secuencia de longitud variable de caracteres no Unicode comprendida entre 1 y 8.000 caracteres. Utilice <see cref="F:System.Data.SqlDbType.VarChar" /> cuando la columna de base de datos sea <see langword="varchar(max)" />.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Variant">
      <summary>
        <see cref="T:System.Object" />. Tipo especial de datos que puede contener datos numéricos, de cadena, binarios o de fecha, así como los valores Empty y Null de SQL Server, que se supone si no se declara otro tipo.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Xml">
      <summary>Valor XML. Obtenga el XML como una cadena utilizando el método <see cref="M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)" /> o la propiedad <see cref="P:System.Data.SqlTypes.SqlXml.Value" /> o como un <see cref="T:System.Xml.XmlReader" /> llamando al método <see cref="M:System.Data.SqlTypes.SqlXml.CreateReader" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.INullable">
      <summary>Todos los objetos y estructuras de <see cref="N:System.Data.SqlTypes" /> implementan la interfaz <see langword="INullable" />.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.INullable.IsNull">
      <summary>Indica si una estructura es null. Esta propiedad es de sólo lectura.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />
        <see langword="true" /> Si el valor de este objeto es NULL. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlAlreadyFilledException">
      <summary>La clase <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" /> no está diseñada para utilizarla como componente independiente, sino como clase de la que otras derivan una funcionalidad estándar.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" />.</summary>
      <param name="message">Cadena que se muestra cuando se produce la excepción.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" />.</summary>
      <param name="message">Cadena que se muestra cuando se produce la excepción.</param>
      <param name="e">Referencia a una excepción interna.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBinary">
      <summary>Representa un flujo de datos binarios de longitud variable que se va a almacenar en una base de datos o se va a recuperar de una base de datos.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBinary.Null">
      <summary>Representa una clase <see cref="T:System.DBNull" /> que se puede asignar a esta instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.#ctor(System.Byte[])">
      <summary>Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />, estableciendo el valor de la propiedad <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> en el contenido de la matriz de bytes proporcionada.</summary>
      <param name="value">Matriz de bytes que se va a almacenar o recuperar.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Add(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Concatena dos valores <see cref="T:System.Data.SqlTypes.SqlBinary" /> especificados para crear una nueva estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x">Objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> que es el valor concatenado de x e y.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.CompareTo(System.Data.SqlTypes.SqlBinary)">
      <summary>Compara este objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> con el objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> especificado y devuelve una indicación de sus valores relativos.</summary>
      <param name="value">Objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> que se va a comparar con esta estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Un número con signo que indica los valores relativos de esta estructura <see cref="T:System.Data.SqlTypes.SqlBinary" /> y del objeto.  
  
 <list type="table"><listheader><term> Valor devuelto</term><description> Condición</description></listheader><item><term> Menor que cero</term><description> El valor de este objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> es menor que el objeto.</description></item><item><term> Cero</term><description> Este objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> es igual que el objeto.</description></item><item><term> Mayor que cero</term><description> Este <see cref="T:System.Data.SqlTypes.SqlBinary" /> objeto es mayor que el objeto o el objeto es una referencia nula.</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.CompareTo(System.Object)">
      <summary>Compara este objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> con el objeto proporcionado y devuelve una indicación de sus valores relativos.</summary>
      <param name="value">Objeto que se va a comparar con esta estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Un número con signo que indica los valores relativos de esta estructura <see cref="T:System.Data.SqlTypes.SqlBinary" /> y del objeto.  
  
 <list type="table"><listheader><term> Valor devuelto</term><description> Condición</description></listheader><item><term> Menor que cero</term><description> El valor de este objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> es menor que el objeto.</description></item><item><term> Cero</term><description> Este objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> es igual que el objeto.</description></item><item><term> Mayor que cero</term><description> Este <see cref="T:System.Data.SqlTypes.SqlBinary" /> objeto es mayor que el objeto o el objeto es una referencia nula.</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Concat(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Concatena dos estructuras <see cref="T:System.Data.SqlTypes.SqlBinary" /> para crear una nueva estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Valores concatenados de los parámetros <paramref name="x" /> e <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar si son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Es <see langword="true" /> si los dos valores son iguales. En caso contrario, es <see langword="false" />. Si alguna de las instancias es null, el valor de <see langword="SqlBinary" /> será null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Object)">
      <summary>Compara el parámetro del objeto especificado con la propiedad <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> del objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="value">Objeto que se va a comparar.</param>
      <returns>
        <see langword="true" /> si el objeto es una instancia de <see cref="T:System.Data.SqlTypes.SqlBinary" /> y ambos son iguales; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GetHashCode">
      <summary>Devuelve el código hash de esta estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <returns>Código hash de un entero con signo de 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Devuelve el lenguaje de definición de esquemas XML (XSD) del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet">Una clase <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Un objeto <see langword="string" /> que indica el esquema XSD del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar si la primera es mayor que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. De lo contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar si la primera es mayor o igual que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. De lo contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar si la primera es menor que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. De lo contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar si la primera es menor o igual que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. De lo contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.NotEquals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar si no son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Addition(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Concatena los dos parámetros <see cref="T:System.Data.SqlTypes.SqlBinary" /> para crear una nueva estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x">Un objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Un objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Valores concatenados de los parámetros <paramref name="x" /> e <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Equality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar si son iguales.</summary>
      <param name="x">Un objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Un objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias no son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Byte[]">
      <summary>Convierte una estructura <see cref="T:System.Data.SqlTypes.SqlBinary" /> en una matriz de <see cref="T:System.Byte" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlBinary" /> que se va a convertir.</param>
      <returns>Una matriz de <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlBinary">
      <summary>Convierte una estructura <see cref="T:System.Data.SqlTypes.SqlGuid" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlGuid" /> que se va a convertir.</param>
      <returns>Estructura <see cref="T:System.Data.SqlTypes.SqlGuid" /> que se va a convertir.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar si la primera es mayor que la segunda.</summary>
      <param name="x">Un objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Un objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. De lo contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar si la primera es mayor o igual que la segunda.</summary>
      <param name="x">Un objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Un objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. De lo contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Implicit(System.Byte[])~System.Data.SqlTypes.SqlBinary">
      <summary>Convierte una matriz de bytes en una estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x">Matriz de bytes que se va a convertir.</param>
      <returns>Estructura <see cref="T:System.Data.SqlTypes.SqlBinary" /> que representa la matriz de bytes convertida.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Inequality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar si no son iguales.</summary>
      <param name="x">Un objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Un objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar si la primera es menor que la segunda.</summary>
      <param name="x">Un objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Un objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. De lo contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar si la primera es menor o igual que la segunda.</summary>
      <param name="x">Un objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Un objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. De lo contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns>Instancia de <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader">Objeto <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer">Objeto <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToSqlGuid">
      <summary>Convierte esta instancia de <see cref="T:System.Data.SqlTypes.SqlBinary" /> en <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <returns>Un estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToString">
      <summary>Convierte este objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> en una cadena.</summary>
      <returns>Una cadena que contiene la propiedad <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBinary" />. Si <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> es null, la cadena contendrá "null".</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.IsNull">
      <summary>Indica si esta estructura <see cref="T:System.Data.SqlTypes.SqlBinary" /> es null. Esta propiedad es de sólo lectura.</summary>
      <returns>
        <see langword="true" /> si <see langword="null" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Item(System.Int32)">
      <summary>Obtiene el único byte de la propiedad <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> ubicado en la posición indicada por el parámetro de número entero, <paramref name="index" />. Si <paramref name="index" /> indica una posición fuera de la matriz de bytes, se inicia una excepción <see cref="T:System.Data.SqlTypes.SqlNullValueException" />. Esta propiedad es de sólo lectura.</summary>
      <param name="index">Posición del byte que se va a recuperar.</param>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">La propiedad se lee cuando la propiedad <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> contiene <see cref="F:System.Data.SqlTypes.SqlBinary.Null" />  
  
o bien 
El parámetro <paramref name="index" /> indica una posición que excede la longitud de la matriz de bytes especificada por la propiedad <see cref="P:System.Data.SqlTypes.SqlBinary.Length" />.</exception>
      <returns>El byte ubicado en la posición indicada por el parámetro de entero.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Length">
      <summary>Obtiene la longitud en bytes de la propiedad <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />. Esta propiedad es de sólo lectura.</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">La propiedad <see cref="P:System.Data.SqlTypes.SqlBinary.Length" /> se lee cuando la propiedad <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> contiene <see cref="F:System.Data.SqlTypes.SqlBinary.Null" />.</exception>
      <returns>Longitud de los datos binarios de la propiedad <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Value">
      <summary>Obtiene el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />. Esta propiedad es de sólo lectura.</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">La propiedad <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> se lee cuando la propiedad contiene <see cref="F:System.Data.SqlTypes.SqlBinary.Null" />.</exception>
      <returns>Valor de la estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBoolean">
      <summary>Representa un valor entero, 1 ó 0, que se almacena en una base de datos o se recupera de una base de datos.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.False">
      <summary>Representa un valor false que se puede asignar a la propiedad <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de una instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Null">
      <summary>Representa una clase <see cref="T:System.DBNull" /> que se puede asignar a esta instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.One">
      <summary>Representa un valor uno que se puede asignar a la propiedad <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> de una instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.True">
      <summary>Representa un valor true que se puede asignar a la propiedad <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de una instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Zero">
      <summary>Representa un valor cero que se puede asignar a la propiedad <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> de una instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Boolean)">
      <summary>Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> utilizando el valor booleano especificado.</summary>
      <param name="value">El valor de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />, <see langword="true" /> o <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Int32)">
      <summary>Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> utilizando el valor entero especificado.</summary>
      <param name="value">Entero cuyo valor se va a utilizar para la nueva estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.And(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Calcula el valor de la operación AND bit a bit de dos estructuras <see cref="T:System.Data.SqlTypes.SqlBoolean" /> especificadas.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Resultado de la operación AND lógica.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.CompareTo(System.Data.SqlTypes.SqlBoolean)">
      <summary>Compara este objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> con el objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> especificado y devuelve una indicación de sus valores relativos.</summary>
      <param name="value">Objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /><see cref="T:System.Data.SqlTypes.SqlBoolean" /> que se va a comparar, o bien, una referencia nula (<see langword="Nothing" /> en Visual Basic).</param>
      <returns>Un número con signo que indica los valores relativos de la instancia y del valor.  
  
 <list type="table"><listheader><term> Valor</term><description> Descripción</description></listheader><item><term> Un entero negativo</term><description> Esta instancia es menor que <paramref name="value" />.</description></item><item><term> Cero</term><description> Esta instancia es igual a <paramref name="value" />.</description></item><item><term> Un entero positivo.</term><description> Esta instancia es mayor que <paramref name="value" /> o <paramref name="value" /> es una referencia nula ( <see langword="Nothing" /> en Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.CompareTo(System.Object)">
      <summary>Compara esta estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> con un objeto especificado y devuelve una indicación de sus valores relativos.</summary>
      <param name="value">Objeto que se va a comparar, o una referencia nula (<see langword="Nothing" /> en Visual Basic).</param>
      <returns>Un número con signo que indica los valores relativos de la instancia y del valor.  
  
 <list type="table"><listheader><term> Valor</term><description> Descripción</description></listheader><item><term> Un entero negativo</term><description> Esta instancia es menor que <paramref name="value" />.</description></item><item><term> Cero</term><description> Esta instancia es igual a <paramref name="value" />.</description></item><item><term> Un entero positivo.</term><description> Esta instancia es mayor que <paramref name="value" /> o <paramref name="value" /> es una referencia nula ( <see langword="Nothing" /> en Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar si son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias son iguales o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si no lo son. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Object)">
      <summary>Compara el parámetro de objeto especificado con <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="value">Objeto que se va a comparar.</param>
      <returns>Es <see langword="true" /> si el objeto es una instancia de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> y ambos son iguales; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GetHashCode">
      <summary>Devuelve el código hash de esta instancia.</summary>
      <returns>Código hash de un entero con signo de 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Devuelve el lenguaje de definición de esquemas XML (XSD) del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet">Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Un valor de tipo <see langword="string" /> que indica el esquema XSD del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar si la primera es mayor que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda; de lo contrario, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GreaterThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar si la primera es mayor o igual que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar si la primera es menor que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda; de lo contrario, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.LessThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar si la primera es menor o igual que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda; de lo contrario, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.NotEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar si son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si sí lo son. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary>Realiza una operación de complemento de uno en las estructuras <see cref="T:System.Data.SqlTypes.SqlBoolean" /> proporcionadas.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>El complemento de uno de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> proporcionada.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Calcula el valor de la operación AND bit a bit de dos estructuras <see cref="T:System.Data.SqlTypes.SqlBoolean" /> especificadas.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Resultado de la operación AND lógica.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Calcula el valor de la operación OR bit a bit de sus operandos.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Resultados de la operación OR lógica.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Equality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar si son iguales.</summary>
      <param name="x">Objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias son iguales o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si no lo son. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Realiza una operación OR exclusiva (XOR) bit a bit en los parámetros proporcionados.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Resultado de la operación XOR lógica.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Boolean">
      <summary>Convierte una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en un valor booleano.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que se va a convertir.</param>
      <returns>Valor booleano establecido en la <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlBoolean">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlByte" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> que se va a convertir en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> cuyo valor es igual que la propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlBoolean">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que se va a convertir en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuyo valor es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlBoolean">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlDouble" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> que se va a convertir en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> cuyo valor es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlBoolean">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlInt16" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> que se va a convertir en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> cuyo valor es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlBoolean">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> que se va a convertir en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> cuyo valor es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlBoolean">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> que se va a convertir en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> cuyo valor es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlBoolean">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> que se va a convertir en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuyo valor es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlBoolean">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlSingle" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> que se va a convertir en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> cuyo valor es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlBoolean">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlString" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" /> que se va a convertir en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuyo valor es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_False(System.Data.SqlTypes.SqlBoolean)">
      <summary>Se puede utilizar el operador false para probar la propiedad <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> y determinar si su valor es false.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que se va a probar.</param>
      <returns>
        <see langword="true" /> si el parámetro proporcionado es <see cref="T:System.Data.SqlTypes.SqlBoolean" /> y <see langword="false" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar si la primera es mayor que la segunda.</summary>
      <param name="x">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda; de lo contrario, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar si la primera es mayor o igual que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Implicit(System.Boolean)~System.Data.SqlTypes.SqlBoolean">
      <summary>Convierte el valor de byte proporcionado en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Valor de byte que se va a convertir en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Un valor de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que contiene 0 ó 1.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Inequality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar si no son iguales.</summary>
      <param name="x">Objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si sí lo son. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar si la primera es menor que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar si la primera es menor o igual que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LogicalNot(System.Data.SqlTypes.SqlBoolean)">
      <summary>Realiza una operación NOT en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> donde se va a realizar la operación NOT.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> con <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /><see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si el argumento era true; <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> si el argumento era NULL y, en caso contrario, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary>Realiza una operación de complemento de uno en las estructuras <see cref="T:System.Data.SqlTypes.SqlBoolean" /> proporcionadas.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>El complemento de uno de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> proporcionada.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_True(System.Data.SqlTypes.SqlBoolean)">
      <summary>Se puede utilizar el operador true para probar la propiedad <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> y determinar si su valor es true.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que se va a probar.</param>
      <returns>
        <see langword="true" /> si el parámetro proporcionado es <see cref="T:System.Data.SqlTypes.SqlBoolean" /> y <see langword="true" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Or(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Realiza una operación OR bit a bit en las dos estructuras <see cref="T:System.Data.SqlTypes.SqlBoolean" /> especificadas.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> cuyo valor es el resultado de la operación OR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Parse(System.String)">
      <summary>Convierte la representación de un valor lógico de tipo <see cref="T:System.String" /> en el valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> equivalente.</summary>
      <param name="s">
        <see cref="T:System.String" /> que va a convertirse.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que contiene el valor analizado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <returns>Una clase <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlByte">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuyo valor es 1 ó 0. Si el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> es igual a <see langword="true" />, el nuevo valor de la estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> es 1. De lo contrario, el valor de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> es 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDecimal">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuyo valor es 1 ó 0. Si el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> es igual a <see langword="true" />, el nuevo valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> es 1. De lo contrario, el valor de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> es 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDouble">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> cuyo valor es 1 ó 0. Si el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> es igual a <see langword="true" />, el nuevo valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> es 1. De lo contrario, el valor de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> es 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt16">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Una nueva estructura <see langword="SqlInt16" /> cuyo valor es 1 ó 0. Si el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> es igual a <see langword="true" />, el nuevo valor de la estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> es 1. De lo contrario, el valor de la nueva estructura <see langword="SqlInt16" /> es 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt32">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Una nueva estructura <see langword="SqlInt32" /> cuyo valor es 1 ó 0. Si el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> es igual a <see langword="true" />, el nuevo valor de la estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> es 1. De lo contrario, el valor de la nueva estructura <see langword="SqlInt32" /> es 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt64">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Una nueva estructura <see langword="SqlInt64" /> cuyo valor es 1 ó 0. Si el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> es igual a <see langword="true" />, el nuevo valor de la estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> es 1. De lo contrario, el valor de la nueva estructura <see langword="SqlInt64" /> es 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlMoney">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuyo valor es 1 ó 0. Si el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> es igual a <see langword="true" />, el nuevo valor de <see cref="T:System.Data.SqlTypes.SqlMoney" /> es 1. Si el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> es igual a <see langword="false" />, el nuevo valor de <see cref="T:System.Data.SqlTypes.SqlMoney" /> es 0. Si el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> no es 1 ni 0, el nuevo valor de <see cref="T:System.Data.SqlTypes.SqlMoney" /> es <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlSingle">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cuyo valor es 1 ó 0.  
  
Si el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> es igual a true, el nuevo valor de la estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> es 1; de lo contrario, el nuevo valor de la estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> es 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlString">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlString" /> cuyo valor es 1 ó 0. Si el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> es igual a <see langword="true" />, el nuevo valor de la estructura <see cref="T:System.Data.SqlTypes.SqlString" /> es 1. De lo contrario, el valor de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlString" /> es 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToString">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en una cadena.</summary>
      <returns>Una cadena que contiene el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />. Si el valor es null, la cadena contendrá "null".</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Xor(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Realiza una operación OR exclusiva bit a bit en los parámetros proporcionados.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Resultado de la operación XOR lógica.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.ByteValue">
      <summary>Obtiene el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en forma de byte.</summary>
      <returns>Byte que representa el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsFalse">
      <summary>Indica si la propiedad <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> actual es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</summary>
      <returns>
        <see langword="true" /> si <see langword="Value" /> es <see langword="False" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsNull">
      <summary>Indica si esta estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> es null.</summary>
      <returns>
        <see langword="true" /> Si la <see cref="T:System.Data.SqlTypes.SqlBoolean" /> estructura es null; en caso contrario, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsTrue">
      <summary>Obtiene un valor que indica si el elemento <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> actual es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />.</summary>
      <returns>
        <see langword="true" /> si <see langword="Value" /> es <see langword="true" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.Value">
      <summary>Obtiene el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />. Esta propiedad es de sólo lectura.</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">La propiedad se ha establecido en null.</exception>
      <returns>Es <see langword="true" /> si el <see cref="T:System.Data.SqlTypes.SqlBoolean" /> es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />; si no, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlByte">
      <summary>Representa un entero de 8 bits sin signo, comprendido en el intervalo de 0 a 255, que se almacena en una base de datos o se recupera de una base de datos.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MaxValue">
      <summary>Constante que representa el mayor valor posible de una estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MinValue">
      <summary>Constante que representa el menor valor posible de una estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Null">
      <summary>Representa una clase <see cref="T:System.DBNull" /> que se puede asignar a esta instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Zero">
      <summary>Representa un valor cero que se puede asignar a la propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> de una instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.#ctor(System.Byte)">
      <summary>Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> utilizando el valor de bytes especificado.</summary>
      <param name="value">Valor de bytes que se va a almacenar en la propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Add(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Calcula la suma de las dos estructuras <see cref="T:System.Data.SqlTypes.SqlByte" /> especificadas.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see langword="Value" /> contiene el resultado de la suma.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Calcula el valor de la operación AND bit a bit de sus operandos <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Resultados de la operación AND bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Calcula el valor de la operación OR bit a bit de sus dos operandos <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Resultados de la operación OR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.CompareTo(System.Data.SqlTypes.SqlByte)">
      <summary>Compara esta instancia con el objeto <see cref="T:System.Data.SqlTypes.SqlByte" /> proporcionado y devuelve una indicación de los valores relativos.</summary>
      <param name="value">Objeto <see cref="T:System.Data.SqlTypes.SqlByte" /> que se va a comparar.</param>
      <returns>Un número con signo que indica los valores relativos de la instancia y del objeto.  
  
 <list type="table"><listheader><term> Valor devuelto</term><description> Condición</description></listheader><item><term> Menor que cero</term><description> El valor de esta instancia es menor que el valor del objeto.</description></item><item><term> Cero</term><description> El valor de esta instancia es igual al valor del objeto.</description></item><item><term> Mayor que cero</term><description> El valor de esta instancia es mayor que el valor del objeto. 
o bien 
El objeto es una referencia nula (<see langword="Nothing" /> en Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.CompareTo(System.Object)">
      <summary>Compara esta instancia con el <see cref="T:System.Object" /> proporcionado y devuelve una indicación de los valores relativos.</summary>
      <param name="value">
        <see cref="T:System.Object" /> que se va a comparar.</param>
      <returns>Un número con signo que indica los valores relativos de la instancia y del objeto.  
  
 <list type="table"><listheader><term> Valor devuelto</term><description> Condición</description></listheader><item><term> Menor que cero</term><description> El valor de esta instancia es menor que el valor del objeto.</description></item><item><term> Cero</term><description> El valor de esta instancia es igual al valor del objeto.</description></item><item><term> Mayor que cero</term><description> El valor de esta instancia es mayor que el valor del objeto. 
o bien 
El objeto es una referencia nula (<see langword="Nothing" /> en Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Divide(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Divide el primer operando <see cref="T:System.Data.SqlTypes.SqlByte" /> por el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contiene el resultado de la división.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Realiza una comparación lógica de dos estructuras <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar si son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Es <see langword="true" /> si los dos valores son iguales. En caso contrario, es <see langword="false" />. Si alguna de las instancias es null, el valor de <see langword="SqlByte" /> será null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Object)">
      <summary>Compara el parámetro del <see cref="T:System.Object" /> proporcionado con la propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> del objeto <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="value">
        <see cref="T:System.Object" /> que se va a comparar.</param>
      <returns>
        <see langword="true" /> si el objeto es una instancia de <see cref="T:System.Data.SqlTypes.SqlByte" /> y ambos son iguales; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GetHashCode">
      <summary>Devuelve el código hash de esta instancia.</summary>
      <returns>Código hash de un entero con signo de 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Devuelve el lenguaje de definición de esquemas XML (XSD) del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet">Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Un valor de tipo <see langword="string" /> que indica el esquema XSD del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar si la primera es mayor que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar si la primera es mayor o igual que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar si la primera es menor que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar si la primera es menor o igual que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Mod(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Calcula el resto después de dividir el primer operando <see cref="T:System.Data.SqlTypes.SqlByte" /> por el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contiene el resto.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Divide dos valores de <see cref="T:System.Data.SqlTypes.SqlByte" /> y devuelve el resto.</summary>
      <param name="x">Objeto <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Objeto <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>El resto resultante de la división de <paramref name="x" /> por <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Calcula el producto de los dos operandos <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contiene el producto de la multiplicación.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.NotEquals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar si no son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary>El operador de complemento de uno realiza una operación de complemento de uno bit a bit en el operando <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contiene el complemento de uno del parámetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Addition(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Calcula la suma de las dos estructuras <see cref="T:System.Data.SqlTypes.SqlByte" /> especificadas.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contiene la suma de los dos operandos.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Calcula el valor de la operación AND bit a bit de sus operandos <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Resultados de la operación AND bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Calcula el valor de la operación OR bit a bit de sus dos operandos <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Resultados de la operación OR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Division(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Divide el primer operando <see cref="T:System.Data.SqlTypes.SqlByte" /> por el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contiene el resultado de la división.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Equality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Realiza una comparación lógica de dos estructuras <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar si son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias no son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_ExclusiveOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Realiza una operación OR exclusiva bit a bit en los parámetros proporcionados.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Resultados de la operación XOR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlByte">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Parámetro <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que se va a convertir en <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlBoolean" /> proporcionado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Byte">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> proporcionada en un byte.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> que se va a convertir en un byte.</param>
      <returns>Byte cuyo valor es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlByte">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlByte">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlByte">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlInt16" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlByte">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlByte">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> del parámetro <see langword="SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlByte">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Un estructura <see langword="SqlMoney" />.</param>
      <returns>Estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlByte">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlByte">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlString" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Instancia de la clase <see langword="SqlString" />.</param>
      <returns>Estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> es igual al valor numérico representado por <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar si la primera es mayor que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar si la primera es mayor o igual que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see langword="SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Implicit(System.Byte)~System.Data.SqlTypes.SqlByte">
      <summary>Convierte el valor de byte proporcionado en una estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Valor de byte que se va a convertir en <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> es igual al parámetro proporcionado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Inequality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar si no son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar si la primera es menor que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar si la primera es menor o igual que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Calcula el resto después de dividir el primer operando <see cref="T:System.Data.SqlTypes.SqlByte" /> por el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contiene el resto.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Calcula el producto de los dos operandos <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contiene el producto de la multiplicación.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary>El operador de complemento de uno realiza una operación de complemento de uno bit a bit en el operando <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contiene el complemento de uno del parámetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Subtraction(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Resta el segundo operando <see cref="T:System.Data.SqlTypes.SqlByte" /> del primero.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Resultado de restar el segundo operando <see cref="T:System.Data.SqlTypes.SqlByte" /> del primero.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Parse(System.String)">
      <summary>Convierte la representación de tipo <see cref="T:System.String" /> de un número en el entero de 8 bits sin signo equivalente.</summary>
      <param name="s">
        <see langword="String" /> que se va a analizar.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> que contiene el número de 8 bits representado por el parámetro <see langword="String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Subtract(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Resta el segundo operando <see cref="T:System.Data.SqlTypes.SqlByte" /> del primero.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Resultado de restar el segundo operando <see cref="T:System.Data.SqlTypes.SqlByte" /> del primero.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <returns>Una clase <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlBoolean">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>Es <see langword="true" /> si el valor de la propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> es distinto de cero; es <see langword="false" /> si es cero; en caso contrario, es Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDecimal">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Una estructura <see langword="SqlDecimal" /> cuyo <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> es igual al <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> de esta estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDouble">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Una estructura <see langword="SqlDouble" /> con el mismo valor que <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt16">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Una estructura <see langword="SqlInt16" /> con el mismo valor que <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt32">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Una estructura <see langword="SqlInt32" /> con el mismo valor que <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt64">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Estructura <see langword="SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> de <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlMoney">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Una estructura <see langword="SqlMoney" /> cuyo <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> es igual al <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> de esta estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlSingle">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Estructura <see langword="SqlSingle" /> que tiene la misma propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> que la estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> en cuestión.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlString">
      <summary>Convierte esta instancia de <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Una <see langword="SqlString" /> que contiene la representación en forma de cadena de la propiedad <see cref="T:System.Data.SqlTypes.SqlByte" /> de la estructura <see cref="P:System.Data.SqlTypes.SqlByte.Value" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToString">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.String" />.</summary>
      <returns>Una cadena que contiene la propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> de <see cref="T:System.Data.SqlTypes.SqlByte" />. Si <see langword="Value" /> es null, <see langword="String" /> será una cadena null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Xor(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Realiza una operación OR exclusiva bit a bit en los parámetros proporcionados.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Resultados de la operación XOR.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.IsNull">
      <summary>Obtiene un valor booleano que indica si esta estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> es NULL.</summary>
      <returns>
        <see langword="true" /> si es NULL. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.Value">
      <summary>Obtiene el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlByte" />. Esta propiedad es de sólo lectura.</summary>
      <returns>Valor de la estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBytes">
      <summary>Representa un tipo de referencia mutable que ajusta un <see cref="P:System.Data.SqlTypes.SqlBytes.Buffer" /> o una <see cref="P:System.Data.SqlTypes.SqlBytes.Stream" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.Byte[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlBytes" /> de acuerdo con la matriz de bytes especificada.</summary>
      <param name="buffer">Matriz de bytes sin signo.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.Data.SqlTypes.SqlBinary)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlBytes" /> basándose en el valor de <see cref="T:System.Data.SqlTypes.SqlBinary" /> especificado.</summary>
      <param name="value">Valor <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.IO.Stream)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlBytes" /> basándose en el valor de <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="s">Objeto <see cref="T:System.IO.Stream" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Devuelve el lenguaje de definición de esquemas XML (XSD) del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet">Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Un objeto <see langword="string" /> que indica el esquema XSD del objeto <see langword="XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlBytes">
      <summary>Convierte una estructura <see cref="T:System.Data.SqlTypes.SqlBinary" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <param name="value">Estructura <see cref="T:System.Data.SqlTypes.SqlBinary" /> que se va a convertir.</param>
      <returns>Un estructura <see cref="T:System.Data.SqlTypes.SqlBytes" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBytes)~System.Data.SqlTypes.SqlBinary">
      <summary>Convierte una estructura <see cref="T:System.Data.SqlTypes.SqlBytes" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="value">Estructura <see cref="T:System.Data.SqlTypes.SqlBytes" /> que se va a convertir.</param>
      <returns>Un estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.Read(System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Copia los bytes de esta instancia de <see cref="T:System.Data.SqlTypes.SqlBytes" /> al búfer que se ha pasado y devuelve el número de bytes copiados.</summary>
      <param name="offset">Desplazamiento de un valor largo <see cref="T:System.Int64" /> en el valor que contiene la instancia de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</param>
      <param name="buffer">Búfer de la matriz de bytes al que se va a copiar.</param>
      <param name="offsetInBuffer">Desplazamiento de un entero <see cref="T:System.Int32" /> en el búfer en el que se empieza a copiar.</param>
      <param name="count">Entero <see cref="T:System.Int32" /> que representa el número de bytes que se van a copiar.</param>
      <returns>Un valor largo <see cref="T:System.Int64" /> que representa el número de bytes copiados.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.SetLength(System.Int64)">
      <summary>Establece la longitud de esta instancia de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <param name="value">Valor largo <see cref="T:System.Int64" /> que representa la longitud.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.SetNull">
      <summary>Establece el valor de esta instancia de <see cref="T:System.Data.SqlTypes.SqlBytes" /> en null.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Obtiene la información de serialización con todos los datos necesarios para crear una nueva instancia de esta instancia de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <param name="info">Objeto que debe llenarse con información de serialización.</param>
      <param name="context">Contexto de destino de la serialización.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <returns>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="r">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.ToSqlBinary">
      <summary>Genera y devuelve una estructura <see cref="T:System.Data.SqlTypes.SqlBinary" /> de esta instancia de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> de esta instancia.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.Write(System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Copia los bytes del búfer pasado a esta instancia de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <param name="offset">Desplazamiento de un valor largo <see cref="T:System.Int64" /> en el valor que contiene la instancia de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</param>
      <param name="buffer">Búfer de la matriz de bytes al que se va a copiar.</param>
      <param name="offsetInBuffer">Desplazamiento de un entero <see cref="T:System.Int32" /> en el búfer en el que se empieza a copiar.</param>
      <param name="count">Entero <see cref="T:System.Int32" /> que representa el número de bytes que se van a copiar.</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Buffer">
      <summary>Devuelve una referencia al búfer interno.</summary>
      <returns>Referencia al búfer interno. Para las instancias de <see cref="T:System.Data.SqlTypes.SqlBytes" /> creadas encima de los punteros no administrados, devuelve una copia administrada del búfer interno.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.IsNull">
      <summary>Obtiene un valor booleano que indica si el valor de <see cref="T:System.Data.SqlTypes.SqlBytes" /> es NULL.</summary>
      <returns>Es <see langword="true" /> si el valor de <see cref="T:System.Data.SqlTypes.SqlBytes" /> es null; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Item(System.Int64)">
      <summary>Obtiene o establece la instancia de <see cref="T:System.Data.SqlTypes.SqlBytes" /> situada en el índice especificado.</summary>
      <param name="offset">Valor <see cref="T:System.Int64" />.</param>
      <returns>Valor <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Length">
      <summary>Obtiene la longitud del valor incluido en la instancia de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns>Un valor de <see cref="T:System.Int64" /> que representa la longitud del valor que contiene la instancia de <see cref="T:System.Data.SqlTypes.SqlBytes" />.  
  
Devuelve -1 si no hay ningún búfer disponible para la instancia o si el valor es null.  
  
Devuelve un valor de <see cref="P:System.IO.Stream.Length" /> para una instancia ajustada por secuencia.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.MaxLength">
      <summary>Obtiene la longitud máxima del valor del búfer interno de esta instancia de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns>Un valor largo que representa la longitud máxima del valor del búfer interno. Devuelve -1 para un tipo <see cref="T:System.Data.SqlTypes.SqlBytes" /> ajustado por secuencia.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Null">
      <summary>Obtiene una instancia null de este elemento <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns>Instancia de cuya <see cref="P:System.Data.SqlTypes.SqlBytes.IsNull" /> propiedad devuelve <see langword="true" /> .</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Storage">
      <summary>Devuelve información sobre el estado de almacenamiento de esta instancia de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns>Enumeración <see cref="T:System.Data.SqlTypes.StorageState" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Stream">
      <summary>Obtiene o establece los datos de esta instancia de <see cref="T:System.Data.SqlTypes.SqlBytes" /> como una secuencia.</summary>
      <returns>Secuencia que contiene los datos SqlBytes.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Value">
      <summary>Devuelve una copia administrada del valor que contiene <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns>El valor de esta instancia de <see cref="T:System.Data.SqlTypes.SqlBytes" /> como una matriz de bytes.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlChars">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlChars" /> es un tipo de referencia mutable que ajusta una matriz de <see cref="T:System.Char" /> o una instancia de <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor(System.Char[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlChars" /> de acuerdo con la matriz de caracteres especificada.</summary>
      <param name="buffer">Una matriz de <see cref="T:System.Char" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor(System.Data.SqlTypes.SqlString)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlChars" /> basándose en el valor de <see cref="T:System.Data.SqlTypes.SqlString" /> especificado.</summary>
      <param name="value">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Devuelve el lenguaje de definición de esquemas XML (XSD) del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet">Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Un valor de tipo <see langword="string" /> que indica el esquema XSD del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlChars)~System.Data.SqlTypes.SqlString">
      <summary>Convierte una estructura <see cref="T:System.Data.SqlTypes.SqlChars" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="value">Estructura <see cref="T:System.Data.SqlTypes.SqlChars" /> que se va a convertir.</param>
      <returns>Un estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlChars">
      <summary>Convierte una estructura <see cref="T:System.Data.SqlTypes.SqlString" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <param name="value">Estructura <see cref="T:System.Data.SqlTypes.SqlString" /> que se va a convertir.</param>
      <returns>Un estructura <see cref="T:System.Data.SqlTypes.SqlChars" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.Read(System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Copia los caracteres de esta instancia de <see cref="T:System.Data.SqlTypes.SqlChars" /> al búfer que se ha pasado y devuelve el número de caracteres copiados.</summary>
      <param name="offset">Un desplazamiento de valor <see cref="T:System.Int64" /><see langword="long" /> en el valor que contiene la instancia de <see cref="T:System.Data.SqlTypes.SqlChars" />.</param>
      <param name="buffer">Búfer de la matriz de caracteres al que se va a copiar.</param>
      <param name="offsetInBuffer">Desplazamiento de un entero <see cref="T:System.Int32" /> en el búfer en el que se empieza a copiar.</param>
      <param name="count">Un valor entero <see cref="T:System.Int32" /> que representa el número de caracteres que se van a copiar.</param>
      <returns>Un valor <see cref="T:System.Int64" /><see langword="long" /> que representa el número de bytes copiados.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.SetLength(System.Int64)">
      <summary>Establece la longitud de esta instancia de <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <param name="value">Valor <see cref="T:System.Int64" /><see langword="long" /> que representa la longitud.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.SetNull">
      <summary>Establece el valor de esta instancia de <see cref="T:System.Data.SqlTypes.SqlChars" /> en null.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Obtiene la información de serialización con todos los datos necesarios para crear una nueva instancia de esta instancia de <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <param name="info">Objeto que debe llenarse con información de serialización.</param>
      <param name="context">Contexto de destino de la serialización.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <returns>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="r">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.ToSqlString">
      <summary>Convierte esta instancia de <see cref="T:System.Data.SqlTypes.SqlChars" /> en su representación de tipo <see cref="T:System.Data.SqlTypes.SqlString" /> equivalente.</summary>
      <returns>Representación <see cref="T:System.Data.SqlTypes.SqlString" /> de este tipo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.Write(System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Copia los caracteres del búfer pasado a esta instancia de <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <param name="offset">Un desplazamiento de valor <see langword="long" /> en el valor que contiene la instancia de <see cref="T:System.Data.SqlTypes.SqlChars" />.</param>
      <param name="buffer">Búfer de la matriz de caracteres al que se va a copiar.</param>
      <param name="offsetInBuffer">Desplazamiento de un entero <see cref="T:System.Int32" /> en el búfer en el que se empieza a copiar.</param>
      <param name="count">Entero <see cref="T:System.Int32" /> que representa el número de caracteres que se van a copiar.</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Buffer">
      <summary>Devuelve una referencia al búfer interno.</summary>
      <returns>Referencia al búfer interno. Para las instancias de <see cref="T:System.Data.SqlTypes.SqlChars" /> creadas encima de los punteros no administrados, devuelve una copia administrada del búfer interno.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.IsNull">
      <summary>Obtiene un valor booleano que indica si el valor de <see cref="T:System.Data.SqlTypes.SqlChars" /> es NULL.</summary>
      <returns>Es <see langword="true" /> si el valor de <see cref="T:System.Data.SqlTypes.SqlChars" /> es null. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Item(System.Int64)">
      <summary>Obtiene o establece la instancia de <see cref="T:System.Data.SqlTypes.SqlChars" /> situada en el índice especificado.</summary>
      <param name="offset">Valor <see cref="T:System.Int64" />.</param>
      <returns>Valor <see cref="T:System.Char" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Length">
      <summary>Obtiene la longitud del valor incluido en la instancia de <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <returns>Un valor <see cref="T:System.Int64" /> que indica la longitud en caracteres del valor contenido en la instancia de <see cref="T:System.Data.SqlTypes.SqlChars" />.  
  
Devuelve -1 si no hay ningún búfer disponible para la instancia o si el valor es null.  
  
Devuelve un valor de <see cref="P:System.IO.Stream.Length" /> para una instancia ajustada por secuencia.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.MaxLength">
      <summary>Obtiene la longitud máxima en caracteres de 2 bytes del valor que el búfer interno puede contener.</summary>
      <returns>Un valor <see cref="T:System.Int64" /> que representa la longitud máxima en caracteres de 2 bytes del valor del búfer interno.  
  
Devuelve -1 para un tipo <see cref="T:System.Data.SqlTypes.SqlChars" /> ajustado por secuencia.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Null">
      <summary>Devuelve una instancia nula de esta clase <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <returns>Instancia de cuya <see cref="P:System.Data.SqlTypes.SqlChars.IsNull" /> propiedad devuelve <see langword="true" /> . Para obtener más información, vea administrar valores NULL.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Storage">
      <summary>Devuelve información sobre el estado de almacenamiento de esta instancia de <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <returns>Enumeración <see cref="T:System.Data.SqlTypes.StorageState" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Value">
      <summary>Devuelve una copia administrada del valor que contiene <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <returns>El valor de <see cref="T:System.Data.SqlTypes.SqlChars" /> como una matriz de caracteres.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlCompareOptions">
      <summary>Especifica los valores de la opción de comparación para una estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.BinarySort">
      <summary>Especifica que la ordenación debe basarse en un valor numérico de caracteres y no en un valor alfabético.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.BinarySort2">
      <summary>Realiza una ordenación binaria.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreCase">
      <summary>Especifica que en las comparaciones de <see cref="T:System.Data.SqlTypes.SqlString" /> no debe tenerse en cuenta la distinción entre mayúsculas y minúsculas.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreKanaType">
      <summary>Especifica que en las comparaciones de <see cref="T:System.Data.SqlTypes.SqlString" /> no debe tenerse en cuenta el tipo Kana. El tipo Kana hace referencia a los caracteres japoneses hiragana y katakana, que representan sonidos fonéticos del idioma japonés. Los caracteres hiragana se utilizan en expresiones y palabras propias del idioma japonés, mientras que los caracteres katakana se utilizan para préstamos léxicos, como "Internet". Un sonido fonético puede expresarse tanto en caracteres hiragana como katakana. Si se selecciona este valor, el carácter hiragana de un sonido se considera equivalente al carácter katakana del mismo sonido.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreNonSpace">
      <summary>Especifica que en las comparaciones de <see cref="T:System.Data.SqlTypes.SqlString" /> no deben tenerse en cuenta los caracteres combinables sin espaciado, como los diacríticos. El estándar Unicode define los caracteres combinables como aquellos que se combinan con caracteres base para producir un nuevo carácter. Los caracteres combinables sin espaciado no ocupan por sí mismos un espacio cuando se representan. Para obtener más información sobre los caracteres combinables sin espaciado, vea el sitio web sobre el estándar Unicode en la dirección https://www.unicode.org.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreWidth">
      <summary>Especifica que en las comparaciones de <see cref="T:System.Data.SqlTypes.SqlString" /> no debe tenerse en cuenta el ancho de los caracteres. Por ejemplo, los caracteres japoneses katakana se pueden escribir como caracteres de dos bytes o de un byte; si se selecciona este valor, los caracteres katakana de dos bytes se consideran iguales que los caracteres de un byte equivalentes.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.None">
      <summary>Especifica la configuración predeterminada de las opciones para la comparación de <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDateTime">
      <summary>Representa los datos de fecha y hora con valores que abarcan desde el 1 de enero de 1753 hasta el 31 de diciembre de 9999, con una exactitud de 3,33 milisegundos, que se van a almacenar en una base de datos o recuperar de una base de datos. La estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> tiene una estructura de datos subyacente diferente de su tipo correspondiente de .NET Framework, <see cref="T:System.DateTime" />, que puede representar cualquiera hora comprendida entre las 12:00:00 a.m. del 1/1/0001 y las 11:59:59 p.m. del 31/12/9999, con una precisión de 100 nanosegundos. <see cref="T:System.Data.SqlTypes.SqlDateTime" /> almacena realmente la diferencia relativa a las 00:00:00 a.m. del 1/1/1900. Por consiguiente, una conversión de "00:00:00 a.m. del 1/1/1900" en un entero devolverá 0.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MaxValue">
      <summary>Representa el máximo valor de fecha válido para una estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MinValue">
      <summary>Representa el valor mínimo de fecha válido para una estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.Null">
      <summary>Representa una clase <see cref="T:System.DBNull" /> que se puede asignar a esta instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerHour">
      <summary>Constante cuyo valor es el número de pasos equivalente a una hora.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerMinute">
      <summary>Constante cuyo valor es el número de pasos equivalente a un minuto.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerSecond">
      <summary>Constante cuyo valor es el número de pasos equivalente a un segundo.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.DateTime)">
      <summary>Initializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> mediante el valor <see cref="T:System.DateTime" /> especificado.</summary>
      <param name="value">Un estructura <see langword="DateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32)">
      <summary>Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> utilizando los parámetros especificados.</summary>
      <param name="dayTicks">Valor entero que representa la fecha como pasos.</param>
      <param name="timeTicks">Valor entero que representa la hora como pasos.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> utilizando los parámetros especificados para inicializar el año, el mes y el día.</summary>
      <param name="year">Entero que representa el año de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="month">Valor de número entero que representa el mes de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="day">Valor entero que representa el día del mes de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> utilizando los parámetros especificados para inicializar el año, el mes, el día, la hora, el minuto y el segundo de la nueva estructura.</summary>
      <param name="year">Valor de número entero que representa el año de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="month">Valor de número entero que representa el mes de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="day">Valor de número entero que representa el día del mes de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="hour">Valor de número entero que representa la hora de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="minute">Valor de número entero que representa el minuto de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="second">Valor de número entero que representa el segundo de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
      <summary>Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> utilizando los parámetros especificados para inicializar el año, el mes, el día, la hora, el minuto, el segundo y el milisegundo de la nueva estructura.</summary>
      <param name="year">Valor de número entero que representa el año de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="month">Valor de número entero que representa el mes de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="day">Valor de número entero que representa el día del mes de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="hour">Valor de número entero que representa la hora de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="minute">Valor de número entero que representa el minuto de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="second">Valor de número entero que representa el segundo de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="millisecond">Valor Double que representa el milisegundo de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> utilizando los parámetros especificados para inicializar el año, el mes, el día, la hora, el minuto, el segundo y el microsegundo de la nueva estructura.</summary>
      <param name="year">Valor de número entero que representa el año de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="month">Valor de número entero que representa el mes de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="day">Valor entero que representa el día de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="hour">Valor de número entero que representa la hora de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="minute">Valor de número entero que representa el minuto de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="second">Valor de número entero que representa el segundo de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="bilisecond">Valor de número entero que representa el microsegundo (milésimas de un milisegundo) de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Add(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>Agrega un objeto <see cref="T:System.Data.SqlTypes.SqlDateTime" /> al objeto <see langword="TimeSpan" /> especificado.</summary>
      <param name="x">Valor <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="t">Valor <see langword="Timespan" />.</param>
      <returns>Valor <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Data.SqlTypes.SqlDateTime)">
      <summary>Compara la estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> con la estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> proporcionada y devuelve una indicación de sus valores relativos.</summary>
      <param name="value">Estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> que se va a comparar.</param>
      <returns>Un número con signo que indica los valores relativos de la instancia y del objeto.  
  
 <list type="table"><listheader><term> Valor devuelto</term><description> Condición</description></listheader><item><term> Menor que cero</term><description> Esta instancia es menor que <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</description></item><item><term> Cero</term><description> Esta instancia es la misma que <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</description></item><item><term> Mayor que cero</term><description> Esta instancia es mayor que <see cref="T:System.Data.SqlTypes.SqlDateTime" />.  
  
o bien 
 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> es una referencia nula (<see langword="Nothing" /> en Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Object)">
      <summary>Compara esta estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> con el objeto <see cref="T:System.Object" /> especificado y devuelve una indicación de sus valores relativos.</summary>
      <param name="value">
        <see cref="T:System.Object" /> que se va a comparar.</param>
      <returns>Un número con signo que indica los valores relativos de la instancia y del objeto.  
  
 <list type="table"><listheader><term> Valor devuelto</term><description> Condición</description></listheader><item><term> Menor que cero</term><description> El valor de esta instancia es menor que el valor del objeto.</description></item><item><term> Cero</term><description> El valor de esta instancia es igual al valor del objeto.</description></item><item><term> Mayor que cero</term><description> El valor de esta instancia es mayor que el valor del objeto. 
o bien 
El objeto es una referencia null (<see langword="Nothing" /> en Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Realiza una comparación lógica de dos estructuras <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar si son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Es <see langword="true" /> si los dos valores son iguales. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Object)">
      <summary>Compara el parámetro del objeto especificado con la propiedad <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> del objeto <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="value">Objeto que se va a comparar.</param>
      <returns>
        <see langword="true" /> si el objeto es una instancia de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> y los dos son iguales; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GetHashCode">
      <summary>Obtiene el código hash de esta instancia.</summary>
      <returns>Código hash de un entero con signo de 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Devuelve el lenguaje de definición de esquemas XML (XSD) del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet">Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Un valor de tipo <see langword="string" /> que indica el esquema XSD del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar si la primera es mayor que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar si la primera es mayor o igual que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar si la primera es menor que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar si la primera es menor o igual que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.NotEquals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Realiza una comparación lógica de dos instancias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar si no son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Addition(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>Agrega el período de tiempo indicado por el parámetro <see cref="T:System.TimeSpan" /> proporcionado, <paramref name="t" />, a la estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> especificada.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="t">Un estructura <see cref="T:System.TimeSpan" />.</param>
      <returns>Un nuevo objeto <see cref="T:System.Data.SqlTypes.SqlDateTime" />. Si algún argumento es <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" />, el nuevo valor de la propiedad <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> será <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Equality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Realiza una comparación lógica de dos estructuras <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar si son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Es <see langword="true" /> si los dos valores son iguales. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.DateTime">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> en una estructura <see cref="T:System.DateTime" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Un objeto <see cref="T:System.DateTime" /> cuyas propiedades <see cref="P:System.DateTime.Date" /> y <see cref="P:System.DateTime.TimeOfDay" /> contienen los mismos valores de fecha y hora que la propiedad <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> especificada.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDateTime">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlString" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="x">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> es igual a la fecha y hora representadas por el parámetro <see cref="T:System.Data.SqlTypes.SqlString" />. Si <see cref="T:System.Data.SqlTypes.SqlString" /> es null, la propiedad <see langword="Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> recién creada será null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar si la primera es mayor que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar si la primera es mayor o igual que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Implicit(System.DateTime)~System.Data.SqlTypes.SqlDateTime">
      <summary>Convierte una estructura <see cref="T:System.DateTime" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="value">Un estructura <see langword="DateTime" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> es igual a la combinación de las propiedades <see cref="P:System.DateTime.Date" /> y <see cref="P:System.DateTime.TimeOfDay" /> de la estructura <see cref="T:System.DateTime" /> especificada.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Inequality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Realiza una comparación lógica de dos instancias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar si no son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar si la primera es menor que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar si la primera es menor o igual que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Subtraction(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>Resta el valor de la estructura <see cref="T:System.TimeSpan" /> proporcionada, <paramref name="t" />, del valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> proporcionada.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="t">Un estructura <see cref="T:System.TimeSpan" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> que representa los resultados de la resta.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Parse(System.String)">
      <summary>Convierte la representación especificada en <see cref="T:System.String" /> de una fecha y hora en su estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> equivalente.</summary>
      <param name="s">
        <see langword="string" /> que se va a analizar.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> igual a la fecha y la hora representadas por el valor de tipo <see langword="string" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Subtract(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>Resta el valor de la estructura <see langword="Timespan" /> especificada de esta instancia de <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="x">Valor <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="t">Valor <see langword="Timespan" />.</param>
      <returns>Valor <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <returns>Una clase <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToSqlString">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Una estructura <see langword="SqlString" /> cuyo valor es una cadena que representa la fecha y la hora incluidas en esta estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToString">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> en <see cref="T:System.String" />.</summary>
      <returns>
        <see langword="String" /> que representa la propiedad <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> de esta estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.DayTicks">
      <summary>Obtiene el número de pasos que representa la fecha de esta estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Excepción que se produce cuando la propiedad <see langword="Value" /> de una estructura <see cref="N:System.Data.SqlTypes" /> se establece en null.</exception>
      <returns>Número de pasos que representa la fecha incluida en la propiedad <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> de esta estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.IsNull">
      <summary>Indica si esta estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> es null.</summary>
      <returns>
        <see langword="true" /> si es NULL. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.TimeTicks">
      <summary>Obtiene el número de pasos que representa la hora de esta estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <returns>El número de pasos que representa la hora de esta estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.Value">
      <summary>Obtiene el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />. Esta propiedad es de sólo lectura.</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Excepción que se produce cuando la propiedad <see langword="Value" /> de una estructura <see cref="N:System.Data.SqlTypes" /> se establece en null.</exception>
      <returns>Valor de esta estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDecimal">
      <summary>Representa un valor numérico entre - 10^38 +1 y 10^38 -1, con escala y precisión fijas.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxPrecision">
      <summary>Constante que representa el valor mayor posible de la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Precision" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxScale">
      <summary>Constante que representa el valor máximo de la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Scale" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxValue">
      <summary>Constante que representa el valor máximo de una estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MinValue">
      <summary>Constante que representa el valor mínimo de una estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.Null">
      <summary>Representa una clase <see cref="T:System.DBNull" /> que se puede asignar a esta instancia de la clase <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> utilizando los parámetros especificados.</summary>
      <param name="bPrecision">Número máximo de dígitos que se pueden utilizar para representar la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="bScale">Número de posiciones decimales utilizado para resolver la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="fPositive">Valor booleano que indica si la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> representa un número positivo o negativo.</param>
      <param name="data1">Entero de 32 bits sin signo que se combina con data2, data3 y data4 para formar el entero de 128 bits sin signo que representa el valor de las nuevas estructuras <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="data2">Entero de 32 bits sin signo que se combina con data1, data3 y data4 para formar el entero de 128 bits sin signo que representa el valor de las nuevas estructuras <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="data3">Entero de 32 bits sin signo que se combina con data1, data2 y data4 para formar el entero de 128 bits sin signo que representa el valor de las nuevas estructuras <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="data4">Entero de 32 bits sin signo que se combina con data1, data2 y data3 para formar el entero de 128 bits sin signo que representa el valor de las nuevas estructuras <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32[])">
      <summary>Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> utilizando los parámetros especificados.</summary>
      <param name="bPrecision">Número máximo de dígitos que se pueden utilizar para representar la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="bScale">Número de posiciones decimales utilizado para resolver la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="fPositive">Valor booleano que indica si la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> representa un número positivo o negativo.</param>
      <param name="bits">Entero de 128 bits sin signo que proporciona el valor de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Decimal)">
      <summary>Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> utilizando el valor <see cref="T:System.Decimal" /> proporcionado.</summary>
      <param name="value">Valor <see cref="T:System.Decimal" /> que se va a almacenar como una estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Double)">
      <summary>Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> utilizando el parámetro Double especificado.</summary>
      <param name="dVal">Valor Double que representa el valor de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int32)">
      <summary>Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> utilizando el valor de número entero especificado.</summary>
      <param name="value">Valor entero proporcionado que se utilizará como valor de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int64)">
      <summary>Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> utilizando el valor de entero largo especificado.</summary>
      <param name="value">Valor de entero largo especificado que se utilizará como valor de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Abs(System.Data.SqlTypes.SqlDecimal)">
      <summary>El método Abs obtiene el valor absoluto del parámetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="n">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contiene el número sin signo que representa el valor absoluto del parámetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Add(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Calcula la suma de los dos operandos <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contiene la suma.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.AdjustScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Boolean)">
      <summary>La escala del operando <see cref="T:System.Data.SqlTypes.SqlDecimal" /> se ajusta al número de dígitos indicado por el parámetro de dígitos. Dependiendo del valor del parámetro fRound, el valor se redondeará al número de dígitos correspondiente o se truncará.</summary>
      <param name="n">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que se va a ajustar.</param>
      <param name="digits">Número de dígitos de la estructura ajustada.</param>
      <param name="fRound">Si este parámetro es <see langword="true" />, el nuevo valor se redondeará; si es <see langword="false" />, se truncará.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contiene el número ajustado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Ceiling(System.Data.SqlTypes.SqlDecimal)">
      <summary>Devuelve el número entero más pequeño que sea mayor o igual que la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> especificada.</summary>
      <param name="n">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para la que se va a calcular el valor superior.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que representa el número entero más pequeño mayor o igual que la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> especificada.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Data.SqlTypes.SqlDecimal)">
      <summary>Compara esta instancia de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> con el objeto <see cref="T:System.Data.SqlTypes.SqlDecimal" /> proporcionado y devuelve una indicación de los valores relativos.</summary>
      <param name="value">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que se va a comparar.</param>
      <returns>Un número con signo que indica los valores relativos de la instancia y del objeto.  
  
 <list type="table"><listheader><term> Valor devuelto</term><description> Condición</description></listheader><item><term> Menor que cero</term><description> El valor de esta instancia es menor que el valor del objeto.</description></item><item><term> Cero</term><description> El valor de esta instancia es igual al valor del objeto.</description></item><item><term> Mayor que cero</term><description> El valor de esta instancia es mayor que el valor del objeto. 
o bien 
El objeto es una referencia nula (<see langword="Nothing" /> en Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Object)">
      <summary>Compara esta instancia de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> con el <see cref="T:System.Object" /> especificado y devuelve una indicación de los valores relativos.</summary>
      <param name="value">
        <see cref="T:System.Object" /> que se va a comparar.</param>
      <returns>Un número con signo que indica los valores relativos de la instancia y del objeto.  
  
 <list type="table"><listheader><term> Valor devuelto</term><description> Condición</description></listheader><item><term> Menor que cero</term><description> El valor de esta instancia es menor que el valor del objeto.</description></item><item><term> Cero</term><description> El valor de esta instancia es igual al valor del objeto.</description></item><item><term> Mayor que cero</term><description> El valor de esta instancia es mayor que el valor del objeto. 
o bien 
El objeto es una referencia nula (<see langword="Nothing" /> en Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Int32)">
      <summary>Ajusta el valor del operando <see cref="T:System.Data.SqlTypes.SqlDecimal" /> a la precisión y escala indicadas.</summary>
      <param name="n">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuyo valor se debe ajustar.</param>
      <param name="precision">Precisión de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="scale">Precisión de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuyo valor se ha ajustado a la precisión y escala indicadas en los parámetros.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Divide(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>El operador de división calcula el resultado de dividir el primer operando <see cref="T:System.Data.SqlTypes.SqlDecimal" /> por el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contiene el resultado de la división.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Realiza una comparación lógica de los dos operandos <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar si son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Es <see langword="true" /> si los dos valores son iguales. En caso contrario, es <see langword="false" />. Si alguna de las instancias es null, el valor de <see langword="SqlDecimal" /> será null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Object)">
      <summary>Compara el parámetro <see cref="T:System.Object" /> proporcionado con la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> de la instancia de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="value">
        <see cref="T:System.Object" /> que se va a comparar.</param>
      <returns>
        <see langword="true" /> si el objeto es una instancia de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> y los dos son iguales. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Floor(System.Data.SqlTypes.SqlDecimal)">
      <summary>Redondea un número <see cref="T:System.Data.SqlTypes.SqlDecimal" /> especificado al siguiente número entero más pequeño.</summary>
      <param name="n">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para la que se va a calcular el valor inferior.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que contiene la parte de número entero de esta estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GetHashCode">
      <summary>Devuelve el código hash de esta instancia.</summary>
      <returns>Código hash de un entero con signo de 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Devuelve el lenguaje de definición de esquemas XML (XSD) del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet">Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Un valor de tipo <see langword="string" /> que indica el esquema XSD del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Realiza una comparación lógica de dos estructuras <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar si la primera es mayor que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar si el primero es mayor o igual que el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Realiza una comparación lógica de dos estructuras <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar si la primera es menor que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar si el primero es menor o igual que el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>El operador de multiplicación calcula el producto de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contiene el producto de la multiplicación.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.NotEquals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar si no son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Addition(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Calcula la suma de los dos operandos <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contiene la suma.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Division(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>El operador de división calcula el resultado de dividir el primer operando <see cref="T:System.Data.SqlTypes.SqlDecimal" /> por el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contiene el resultado de la división.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Equality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Realiza una comparación lógica de los dos operandos <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar si son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias no son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDecimal">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que se va a convertir.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Decimal">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Decimal" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que se va a convertir.</param>
      <returns>Una nueva estructura <see langword="Decimal" /> cuyo valor es igual que la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlDecimal">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> que se va a convertir.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> es igual que la propiedad <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDecimal">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que se va a convertir.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDecimal">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlString" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">El objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que se va a convertir.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> es igual al valor representado por el parámetro <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Double)~System.Data.SqlTypes.SqlDecimal">
      <summary>Convierte el parámetro <see cref="T:System.Double" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Estructura <see cref="T:System.Double" /> que se va a convertir.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuyo valor es igual al valor del parámetro <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Realiza una comparación lógica de dos estructuras <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar si la primera es mayor que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar si el primero es mayor o igual que el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDecimal">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> que se va a convertir.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDecimal">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> especificada en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> que se va a convertir.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDecimal">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que se va a convertir.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDecimal">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> especificada en SqlDecimal.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> que se va a convertir.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> es igual que la propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDecimal">
      <summary>Convierte el operando <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> que se va a convertir.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> es igual que la propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlDecimal">
      <summary>Convierte el valor <see cref="T:System.Decimal" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Valor <see cref="T:System.Decimal" /> que se va a convertir.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> es igual al valor del parámetro <see langword="Decimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlDecimal">
      <summary>Convierte la estructura <see cref="T:System.Int64" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Estructura <see cref="T:System.Int64" /> que se va a convertir.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> es igual al valor del parámetro <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Inequality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar si no son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Realiza una comparación lógica de dos estructuras <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar si la primera es menor que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar si el primero es menor o igual que el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>El operador de multiplicación calcula el producto de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contiene el producto de la multiplicación.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Subtraction(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Calcula el resultado de restar el segundo operando <see cref="T:System.Data.SqlTypes.SqlDecimal" /> del primero.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad Value contiene el resultado de la resta.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_UnaryNegation(System.Data.SqlTypes.SqlDecimal)">
      <summary>El operador unario menos niega el parámetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que se va a negar.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuyo valor contiene el resultado de la negación.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Parse(System.String)">
      <summary>Convierte la representación de tipo <see cref="T:System.String" /> de un número en su estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> equivalente.</summary>
      <param name="s">
        <see langword="String" /> que se va a analizar.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que equivale al valor incluido en el objeto <see cref="T:System.String" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Power(System.Data.SqlTypes.SqlDecimal,System.Double)">
      <summary>Eleva el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> especificada a la potencia exponencial indicada.</summary>
      <param name="n">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que se va a elevar a una potencia.</param>
      <param name="exp">Valor Double que indica la potencia a la que debe elevarse el número.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que contiene los resultados.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Round(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary>Obtiene el número más próximo al valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> especificada con la precisión indicada.</summary>
      <param name="n">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que se va a redondear.</param>
      <param name="position">Número de dígitos fraccionarios significativos (precisión) del valor devuelto.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que contiene los resultados de la operación de redondeo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Sign(System.Data.SqlTypes.SqlDecimal)">
      <summary>Obtiene un valor que indica el signo de la propiedad <see cref="T:System.Data.SqlTypes.SqlDecimal" /> de una estructura <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />.</summary>
      <param name="n">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuyo signo se va a evaluar.</param>
      <returns>Un número que indica el signo de la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Subtract(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Calcula el resultado de restar el segundo operando <see cref="T:System.Data.SqlTypes.SqlDecimal" /> del primero.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad Value contiene el resultado de la resta.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <returns>Una clase <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToDouble">
      <summary>Devuelve el valor Double equivalente al contenido de la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> de esta instancia.</summary>
      <returns>Representación decimal de la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlBoolean">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>Es <see langword="true" /> si el valor de la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> es distinto de cero; es <see langword="false" /> si es cero; en caso contrario, es Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlByte">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuyo <see langword="Value" /> es igual al <see langword="Value" /> de esta estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />. Si el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> es <see langword="true" />, el <see langword="Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> será 1. De lo contrario, el <see langword="Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> será 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlDouble">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> con el mismo valor que esta instancia de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt16">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> con el mismo valor que esta instancia de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt32">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> con el mismo valor que esta instancia de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt64">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> con el mismo valor que esta instancia de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlMoney">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> con el mismo valor que esta instancia de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlSingle">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> con el mismo valor que esta instancia de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlString">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Estructura <see cref="T:System.Data.SqlTypes.SqlString" /> cuyo valor es una cadena que representa el valor incluido en esta estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToString">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.String" />.</summary>
      <returns>Un nuevo objeto <see cref="T:System.String" /> que contiene la representación en forma de cadena de la propiedad <see cref="T:System.Data.SqlTypes.SqlDecimal" /> de la estructura <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Truncate(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary>Trunca el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> especificada en la posición deseada.</summary>
      <param name="n">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que se va a truncar.</param>
      <param name="position">Posición decimal en la que se va a truncar el número.</param>
      <returns>Especifique un valor negativo para el parámetro <paramref name="position" /> si desea truncar el valor en la posición correspondiente a la izquierda del separador decimal.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.BinData">
      <summary>Obtiene la representación binaria del valor de esta estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> como una matriz de bytes.</summary>
      <returns>Una matriz de bytes que contiene la representación binaria del valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Data">
      <summary>Obtiene la representación binaria de la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en forma de matriz de enteros.</summary>
      <returns>Una matriz de enteros que contiene la representación binaria de esta estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsNull">
      <summary>Indica si esta estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> es null.</summary>
      <returns>
        <see langword="true" /> si esta estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> es NULL. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsPositive">
      <summary>Indica si la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> de esta estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> es mayor que cero.</summary>
      <returns>Es <see langword="true" /> si <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> tiene asignado un valor null. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Precision">
      <summary>Obtiene el número máximo de dígitos utilizados para representar la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />.</summary>
      <returns>Número máximo de dígitos utilizados para representar la propiedad <see langword="Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Scale">
      <summary>Obtiene el número de posiciones decimales hasta donde se resuelve <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />.</summary>
      <returns>Número de posiciones decimales utilizadas para resolver la propiedad <see langword="Value" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Value">
      <summary>Obtiene el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />. Esta propiedad es de sólo lectura.</summary>
      <returns>Número comprendido en el intervalo que abarca desde -79.228.162.514.264.337.593.543.950.335 hasta 79.228.162.514.162.514.264.337.593.543.950.335.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDouble">
      <summary>Representa un número de punto flotante, comprendido en el intervalo de -1,79E +308 a 1,79E +308, que se almacena en una base de datos o se recupera de una base de datos.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MaxValue">
      <summary>Constante que representa el valor mínimo de una estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MinValue">
      <summary>Constante que representa el valor mínimo posible de una estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Null">
      <summary>Representa una clase <see cref="T:System.DBNull" /> que se puede asignar a esta instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Zero">
      <summary>Representa un valor cero que se puede asignar a la propiedad <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> de una instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.#ctor(System.Double)">
      <summary>Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> utilizando el parámetro Double proporcionado para establecer el valor de la propiedad <see cref="T:System.Data.SqlTypes.SqlDouble" /> de la nueva estructura <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />.</summary>
      <param name="value">Double cuyo valor se utilizará para la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Add(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>El operador de suma calcula la suma de los dos operandos <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Suma de los dos operandos <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Data.SqlTypes.SqlDouble)">
      <summary>Compara esta instancia de <see cref="T:System.Data.SqlTypes.SqlDouble" /> con el <see cref="T:System.Data.SqlTypes.SqlDouble" /> especificado y devuelve una indicación de los valores relativos.</summary>
      <param name="value">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> que se va a comparar.</param>
      <returns>Un número con signo que indica los valores relativos de la instancia y del objeto.  
  
 <list type="table"><listheader><term> Valor devuelto</term><description> Condición</description></listheader><item><term> Menor que cero</term><description> El valor de esta instancia es menor que el valor del objeto.</description></item><item><term> Cero</term><description> El valor de esta instancia es igual al valor del objeto.</description></item><item><term> Mayor que cero</term><description> El valor de esta instancia es mayor que el valor del objeto. 
o bien 
El objeto es una referencia nula (<see langword="Nothing" /> en Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Object)">
      <summary>Compara esta instancia de <see cref="T:System.Data.SqlTypes.SqlDouble" /> con el <see cref="T:System.Object" /> especificado y devuelve una indicación de los valores relativos.</summary>
      <param name="value">
        <see cref="T:System.Object" /> que se va comparar.</param>
      <returns>Un número con signo que indica los valores relativos de la instancia y del objeto.  
  
 <list type="table"><listheader><term> Valor devuelto</term><description> Condición</description></listheader><item><term> Menor que cero</term><description> El valor de esta instancia es menor que el valor del objeto.</description></item><item><term> Cero</term><description> El valor de esta instancia es igual al valor del objeto.</description></item><item><term> Mayor que cero</term><description> El valor de esta instancia es mayor que el valor del objeto. 
o bien 
El objeto es una referencia nula (<see langword="Nothing" /> en Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Divide(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>El operador de división divide el primer operando <see cref="T:System.Data.SqlTypes.SqlDouble" /> por el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> que contiene el resultado de la división.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Realiza una comparación lógica de dos instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar si son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Es <see langword="true" /> si los dos valores son iguales. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Object)">
      <summary>Compara el parámetro del objeto especificado con la propiedad <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> del objeto <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="value">Objeto que se va a comparar.</param>
      <returns>Es <see langword="true" /> si los dos valores son iguales. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GetHashCode">
      <summary>Devuelve el código hash de esta estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Código hash de un entero con signo de 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Devuelve el lenguaje de definición de esquemas XML (XSD) del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet">Una clase <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Un valor de tipo <see langword="string" /> que indica el esquema XSD del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar si la primera es mayor que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar si la primera es mayor o igual que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar si la primera es menor que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar si la primera es menor o igual que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>El operador de multiplicación calcula el producto de los dos operandos <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Producto de los dos operandos <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.NotEquals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar si no son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Addition(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>El operador de suma calcula la suma de los dos operandos <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Suma de los dos operandos <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Division(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>El operador de división divide el primer operando <see cref="T:System.Data.SqlTypes.SqlDouble" /> por el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> que contiene el resultado de la división.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Equality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Realiza una comparación lógica de dos instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar si son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Es <see langword="true" /> si los dos valores son iguales. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDouble">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlBoolean" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que va a convertirse.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> es 0 o 1, dependiendo de la propiedad <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlBoolean" />. Si el valor de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> es <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />, el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> será <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Double">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> especificada en un valor Double.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Valor Double equivalente al valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> especificada.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDouble">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlString" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Un objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> es igual al valor del número representado por <see cref="T:System.Data.SqlTypes.SqlString" />. Si el valor de <see cref="T:System.Data.SqlTypes.SqlString" /> es <see cref="F:System.Data.SqlTypes.SqlString.Null" />, el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> será <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar si la primera es mayor que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar si la primera es mayor o igual que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDouble">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlByte" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlByte" />. Si el valor de <see cref="T:System.Data.SqlTypes.SqlByte" /> es <see cref="F:System.Data.SqlTypes.SqlByte.Null" />, el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> será <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlDouble">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlDecimal" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />. Si el valor de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> es <see cref="F:System.Data.SqlTypes.SqlDecimal.Null" />, el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> será <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDouble">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlInt16" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt16" />. Si el valor de <see cref="T:System.Data.SqlTypes.SqlInt16" /> es <see cref="F:System.Data.SqlTypes.SqlInt16.Null" />, el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> será <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDouble">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" />. Si el valor de <see cref="T:System.Data.SqlTypes.SqlInt32" /> es <see cref="F:System.Data.SqlTypes.SqlInt32.Null" />, el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> será <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDouble">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" />. Si el valor de <see cref="T:System.Data.SqlTypes.SqlInt64" /> es <see cref="F:System.Data.SqlTypes.SqlInt64.Null" />, el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> será <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDouble">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" />. Si el valor de <see cref="T:System.Data.SqlTypes.SqlMoney" /> es <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />, el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> será <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDouble">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlSingle" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlSingle" />. Si el valor de <see cref="T:System.Data.SqlTypes.SqlSingle" /> es <see cref="F:System.Data.SqlTypes.SqlSingle.Null" />, el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> será <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Double)~System.Data.SqlTypes.SqlDouble">
      <summary>Convierte el valor Double proporcionado en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Valor Double que se va a convertir.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> con el mismo valor que el parámetro de tipo Double especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Inequality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar si no son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar si la primera es menor que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar si la primera es menor o igual que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>El operador de multiplicación calcula el producto de los dos operandos <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Producto de los dos operandos <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Subtraction(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>El operador de resta sustrae el segundo operando <see cref="T:System.Data.SqlTypes.SqlDouble" /> del primero.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Resultado de la operación de resta.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_UnaryNegation(System.Data.SqlTypes.SqlDouble)">
      <summary>Devuelve el valor negado de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> especificada.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> que contiene el valor negado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Parse(System.String)">
      <summary>Convierte la representación de tipo <see cref="T:System.String" /> de un número en el número de punto flotante de precisión doble equivalente.</summary>
      <param name="s">
        <see langword="String" /> que se va a analizar.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> que contiene el valor representado por <see langword="String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Subtract(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>El operador de resta sustrae el segundo operando <see cref="T:System.Data.SqlTypes.SqlDouble" /> del primero.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Resultado de la operación de resta.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <returns>Un esquema XML utilizado por .NET Framework.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="reader">Objeto <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="writer">Objeto <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlBoolean">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>Estructura <see langword="SqlBoolean" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la propiedad <see cref="T:System.Data.SqlTypes.SqlDouble" /> de la estructura <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> es distinta de cero, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si <see cref="T:System.Data.SqlTypes.SqlDouble" /> es cero y <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> si la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> es <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlByte">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Una estructura <see langword="SqlByte" /> cuyo <see langword="Value" /> es igual al <see langword="Value" /> de esta estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlDecimal">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Una nueva estructura <see langword="SqlDecimal" /> cuyo valor al convertirse es igual al valor redondeado de <see langword="SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt16">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see langword="Value" /> es igual a la parte de entero del valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt32">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see langword="Value" /> es igual a la parte de entero del valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt64">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see langword="Value" /> es igual a la parte de entero del valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlMoney">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Una nueva estructura <see langword="SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> es igual al valor de <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlSingle">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Una nueva estructura <see langword="SqlSingle" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> de <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlString">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>
        <see langword="SqlString" /> que representa el valor de la propiedad <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> de esta estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToString">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> en una cadena.</summary>
      <returns>Cadena que representa la propiedad <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.IsNull">
      <summary>Devuelve un valor booleano que indica si esta instancia de <see cref="T:System.Data.SqlTypes.SqlDouble" /> es NULL.</summary>
      <returns>Es <see langword="true" /> si <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> es null. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.Value">
      <summary>Obtiene el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />. Esta propiedad es de sólo lectura.</summary>
      <returns>Valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlGuid">
      <summary>Representa un identificador GUID que se va a almacenar en una base de datos o recuperar de una base de datos.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlGuid.Null">
      <summary>Representa una clase <see cref="T:System.DBNull" /> que se puede asignar a esta instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Byte[])">
      <summary>Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlGuid" /> utilizando el parámetro de matriz de bytes especificado.</summary>
      <param name="value">Una matriz de tipo byte.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Guid)">
      <summary>Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlGuid" /> utilizando el parámetro <see cref="T:System.Guid" /> especificado.</summary>
      <param name="g">
        <see cref="T:System.Guid" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary>Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlGuid" /> utilizando los valores especificados.</summary>
      <param name="a">Los cuatro primeros bytes de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="b">Los siguientes dos bytes de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="c">Los siguientes dos bytes de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="d">El siguiente byte de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="e">El siguiente byte de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="f">El siguiente byte de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="g">El siguiente byte de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="h">El siguiente byte de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="i">El siguiente byte de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="j">El siguiente byte de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="k">El siguiente byte de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlGuid" /> utilizando el parámetro <see cref="T:System.String" /> especificado.</summary>
      <param name="s">Un objeto <see cref="T:System.String" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Data.SqlTypes.SqlGuid)">
      <summary>Compara esta estructura <see cref="T:System.Data.SqlTypes.SqlGuid" /> con el objeto <see cref="T:System.Data.SqlTypes.SqlGuid" /> especificado y devuelve una indicación de sus valores relativos. Compara más bytes que los 6 últimos, pero trata estos 6 últimos bytes como los más significativos en las comparaciones.</summary>
      <param name="value">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> que se va a comparar.</param>
      <returns>Un número con signo que indica los valores relativos de la instancia y del objeto.  
  
 <list type="table"><listheader><term> Valor devuelto</term><description> Condición</description></listheader><item><term> Menor que cero</term><description> El valor de la instancia en cuestión es menor que el valor del objeto.</description></item><item><term> Cero</term><description> El valor de la instancia en cuestión es igual que el valor del objeto.</description></item><item><term> Mayor que cero</term><description> El valor de la instancia en cuestión es mayor que el valor del objeto. 
o bien 
El objeto es una referencia nula (<see langword="Nothing" />).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Object)">
      <summary>Compara la estructura <see cref="T:System.Data.SqlTypes.SqlGuid" /> con el objeto especificado y devuelve una indicación de sus valores relativos. Compara más bytes que los 6 últimos, pero trata estos 6 últimos bytes como los más significativos en las comparaciones.</summary>
      <param name="value">
        <see cref="T:System.Object" /> que se va a comparar.</param>
      <returns>Un número con signo que indica los valores relativos de la instancia y del objeto.  
  
 <list type="table"><listheader><term> Valor devuelto</term><description> Condición</description></listheader><item><term> Menor que cero</term><description> El valor de la instancia en cuestión es menor que el valor del objeto.</description></item><item><term> Cero</term><description> El valor de la instancia en cuestión es igual que el valor del objeto.</description></item><item><term> Mayor que cero</term><description> El valor de la instancia en cuestión es mayor que el valor del objeto. 
o bien 
El objeto es una referencia nula (<see langword="Nothing" />).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Realiza una comparación lógica de dos estructuras <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar si son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Es <see langword="true" /> si los dos valores son iguales. En caso contrario, es <see langword="false" />. Si alguna de las instancias es null, el valor de <see langword="SqlGuid" /> será null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Object)">
      <summary>Compara el parámetro del objeto especificado con la propiedad <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> del objeto <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="value">Objeto que se va a comparar.</param>
      <returns>
        <see langword="true" /> si el objeto es una instancia de <see cref="T:System.Data.SqlTypes.SqlGuid" /> y ambos son iguales; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GetHashCode">
      <summary>Devuelve el código hash de esta estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <returns>Código hash de un entero con signo de 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Devuelve el lenguaje de definición de esquemas XML (XSD) del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet">Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Un valor de tipo <see langword="string" /> que indica el esquema XSD del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar si la primera es mayor que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar si la primera es mayor o igual que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar si la primera es menor que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar si la primera es menor o igual que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.NotEquals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Realiza una comparación lógica de dos estructuras <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar si no son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Equality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Realiza una comparación lógica de dos estructuras <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar si son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias no son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlGuid">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlBinary" /> en <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="x">Un objeto <see langword="SqlBinary" />.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlGuid" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlBinary" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Guid">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlGuid" /> proporcionado en <see cref="T:System.Guid" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Nueva estructura <see cref="T:System.Guid" /> igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlGuid">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlString" /> especificada en <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="x">Un objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> es igual al valor representado por el parámetro <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar si la primera es mayor que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar si la primera es mayor o igual que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Implicit(System.Guid)~System.Data.SqlTypes.SqlGuid">
      <summary>Convierte el parámetro <see cref="T:System.Guid" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="x">Objeto <see cref="T:System.Guid" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlGuid" /> cuyo <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> es igual al parámetro <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Inequality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Realiza una comparación lógica de dos estructuras <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar si no son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar si la primera es menor que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar si la primera es menor o igual que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Parse(System.String)">
      <summary>Convierte la estructura <see cref="T:System.String" /> especificada en <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="s">
        <see langword="String" /> que se va a analizar.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlGuid" /> que equivale al valor incluido en el objeto <see cref="T:System.String" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <returns>Una clase <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToByteArray">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlGuid" /> en una matriz de bytes.</summary>
      <returns>Matriz de bytes que representa la propiedad <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlBinary">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlGuid" /> en <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <returns>Una estructura <see langword="SqlBinary" /> que contiene los bytes de la estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlString">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlGuid" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlString" /> que contiene la representación en forma de cadena de la estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToString">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlGuid" /> en <see cref="T:System.String" />.</summary>
      <returns>Una <see cref="T:System.String" /> que contiene la representación en forma de cadena de la estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.IsNull">
      <summary>Obtiene un valor booleano que indica si esta estructura <see cref="T:System.Data.SqlTypes.SqlGuid" /> es NULL.</summary>
      <returns>
        <see langword="true" /> si <see langword="null" />. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.Value">
      <summary>Obtiene el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />. Esta propiedad es de sólo lectura.</summary>
      <returns>Un estructura <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt16">
      <summary>Representa un entero de 16 bits con signo que se almacena en una base de datos o se recupera de una base de datos.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MaxValue">
      <summary>Constante que representa el mayor valor posible de una estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MinValue">
      <summary>Constante que representa el menor valor posible de una estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Null">
      <summary>Representa una clase <see cref="T:System.DBNull" /> que se puede asignar a esta instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Zero">
      <summary>Representa un valor cero que se puede asignar a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> de una instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.#ctor(System.Int16)">
      <summary>Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> utilizando el parámetro de entero corto especificado.</summary>
      <param name="value">Entero corto.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Add(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Calcula la suma de los dos operandos <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contiene la suma de los dos operandos <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Calcula el valor de la operación AND bit a bit de sus operandos <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contiene el resultado de la operación AND bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Calcula el valor de la operación OR bit a bit de sus dos operandos <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contiene el resultado de la operación OR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Data.SqlTypes.SqlInt16)">
      <summary>Compara esta instancia de <see cref="T:System.Data.SqlTypes.SqlInt16" /> con el <see cref="T:System.Data.SqlTypes.SqlInt16" /> especificado y devuelve una indicación de los valores relativos.</summary>
      <param name="value">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> que se va a comparar.</param>
      <returns>Un número con signo que indica los valores relativos de la instancia y del objeto.  
  
 <list type="table"><listheader><term> Valor devuelto</term><description> Condición</description></listheader><item><term> Menor que cero</term><description> El valor de esta instancia es menor que el valor del objeto.</description></item><item><term> Cero</term><description> El valor de esta instancia es igual al valor del objeto.</description></item><item><term> Mayor que cero</term><description> Esta instancia es mayor que el objeto o el objeto es una referencia null (<see langword="Nothing" /> en Visual Basic)</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Object)">
      <summary>Compara esta instancia de <see cref="T:System.Data.SqlTypes.SqlInt16" /> con el <see cref="T:System.Object" /> especificado y devuelve una indicación de los valores relativos.</summary>
      <param name="value">
        <see cref="T:System.Object" /> que se va a comparar.</param>
      <returns>Un número con signo que indica los valores relativos de la instancia y del objeto.  
  
 <list type="table"><listheader><term> Valor devuelto</term><description> Condición</description></listheader><item><term> Menor que cero</term><description> El valor de esta instancia es menor que el valor del objeto.</description></item><item><term> Cero</term><description> El valor de esta instancia es igual al valor del objeto.</description></item><item><term> Mayor que cero</term><description> El valor de esta instancia es mayor que el valor del objeto. 
o bien 
El objeto es una referencia nula (<see langword="Nothing" /> en Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Divide(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Divide el primer operando <see cref="T:System.Data.SqlTypes.SqlInt16" /> por el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contiene el resultado de la división.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Realiza una comparación lógica de dos estructuras <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar si son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Es <see langword="true" /> si los dos valores son iguales. En caso contrario, es <see langword="false" />. Si alguna de las instancias es null, el valor de <see langword="SqlInt16" /> será null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Object)">
      <summary>Compara el objeto especificado con la propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> del objeto <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="value">Objeto que se va a comparar.</param>
      <returns>
        <see langword="true" /> si el objeto es una instancia de <see cref="T:System.Data.SqlTypes.SqlInt16" /> y ambos son iguales; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GetHashCode">
      <summary>Devuelve el código hash de esta instancia.</summary>
      <returns>Código hash de un entero con signo de 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Devuelve el lenguaje de definición de esquemas XML (XSD) del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet">Una clase <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Un valor de tipo <see cref="T:System.String" /> que indica el esquema XSD del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar si la primera es mayor que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar si la primera es mayor o igual que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar si la primera es menor que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar si la primera es menor o igual que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Mod(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Calcula el resto después de dividir el primer operando <see cref="T:System.Data.SqlTypes.SqlInt16" /> por el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contiene el resto.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Divide dos valores de <see cref="T:System.Data.SqlTypes.SqlInt16" /> y devuelve el resto.</summary>
      <param name="x">Valor <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Valor <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>El resto resultante de la división de <paramref name="x" /> por <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Calcula el producto de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contiene el producto de los dos parámetros.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.NotEquals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Realiza una comparación lógica de dos estructuras <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar si no son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary>El operador ~ realiza una operación de complemento de uno bit a bit en el operando <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contiene el complemento de la estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> especificada.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Addition(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Calcula la suma de los dos operandos <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contiene la suma de los dos operandos <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Calcula el valor de la operación AND bit a bit de sus operandos <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contiene el resultado de la operación AND bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Calcula el valor de la operación OR bit a bit de sus dos operandos <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contiene el resultado de la operación OR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Division(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Divide el primer operando <see cref="T:System.Data.SqlTypes.SqlInt16" /> por el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contiene el resultado de la división.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Equality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Realiza una comparación lógica de dos estructuras <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar si son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias no son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_ExclusiveOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Realiza una operación OR exclusiva bit a bit en los parámetros proporcionados.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contiene el resultado de la operación XOR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt16">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt16">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt16">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> es igual a la parte de entero del parámetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Int16">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> especificada en un entero corto.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Entero corto cuyo valor es el valor del parámetro <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt16">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt16">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt16">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt16">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> es igual a la parte de entero del parámetro <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt16">
      <summary>Convierte el objeto <see cref="T:System.Data.SqlTypes.SqlString" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Un objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> es igual al valor representado por el parámetro del objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar si la primera es mayor que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar si la primera es mayor o igual que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt16">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Int16)~System.Data.SqlTypes.SqlInt16">
      <summary>Convierte el entero corto especificado en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Valor de entero corto.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> con el mismo valor que el entero corto especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Inequality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Realiza una comparación lógica de dos estructuras <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar si no son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar si la primera es menor que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar si la primera es menor o igual que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Calcula el resto después de dividir el primer operando <see cref="T:System.Data.SqlTypes.SqlInt16" /> por el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contiene el resto.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Calcula el producto de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contiene el producto de los dos parámetros.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary>El operador ~ realiza una operación de complemento de uno bit a bit en el operando <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contiene el complemento de la estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> especificada.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Subtraction(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Resta el segundo parámetro <see cref="T:System.Data.SqlTypes.SqlInt16" /> del primero.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contiene el resultado de la resta.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_UnaryNegation(System.Data.SqlTypes.SqlInt16)">
      <summary>El operador unario menos niega la propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> del operando <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> que contiene el valor negado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Parse(System.String)">
      <summary>Convierte la representación de <see cref="T:System.String" /> de un número en el entero de 16 bits con signo equivalente.</summary>
      <param name="s">
        <see langword="String" /> que se va a analizar.</param>
      <returns>Un entero de 16 bits con signo equivalente al valor incluido en el objeto <see cref="T:System.String" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Subtract(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Resta el segundo parámetro <see cref="T:System.Data.SqlTypes.SqlInt16" /> del primero.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contiene el resultado de la resta.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <returns>Un esquema XML utilizado por .NET Framework.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlBoolean">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>Es <see langword="true" /> si el valor de la propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> es distinto de cero; es <see langword="false" /> si es cero; en caso contrario, es Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlByte">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuyo <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> es igual al <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> de esta estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />. Si el valor de <see cref="T:System.Data.SqlTypes.SqlInt16" /> es menor que 0 o mayor que 255, se inicia una excepción <see cref="T:System.OverflowException" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDecimal">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see langword="Value" /> es igual al valor de esta estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDouble">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> cuya propiedad <see langword="Value" /> es igual al valor de esta estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt32">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see langword="Value" /> es igual al valor de esta estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt64">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see langword="Value" /> es igual al valor de esta estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlMoney">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see langword="Value" /> es igual al valor de esta estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlSingle">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cuya propiedad <see langword="Value" /> es igual al valor de esta estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlString">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> que representa el valor de <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> de esta instancia de <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToString">
      <summary>Convierte una estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.String" />.</summary>
      <returns>Un objeto <see cref="T:System.String" /> que representa la propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> de esta instancia de <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Xor(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Realiza una operación OR exclusiva bit a bit en los parámetros proporcionados.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> que contiene los resultados de la operación XOR.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.IsNull">
      <summary>Indica si esta estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> es null.</summary>
      <returns>
        <see langword="true" /> si es NULL. En caso contrario, es <see langword="false" />. Para obtener más información, vea administrar valores NULL.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.Value">
      <summary>Obtiene el valor de esta instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />. Esta propiedad es de sólo lectura.</summary>
      <returns>Entero corto que representa el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt32">
      <summary>Representa un entero de 32 bits con signo que se almacena en una base de datos o se recupera de una base de datos.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MaxValue">
      <summary>Constante que representa el mayor valor posible de una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MinValue">
      <summary>Constante que representa el menor valor posible de una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Null">
      <summary>Representa una clase <see cref="T:System.DBNull" /> que se puede asignar a esta instancia de la clase <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Zero">
      <summary>Representa un valor cero que se puede asignar a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> de una instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.#ctor(System.Int32)">
      <summary>Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> utilizando el valor de número entero especificado.</summary>
      <param name="value">Entero que se va a convertir.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Add(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Calcula la suma de las dos estructuras <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificadas.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contiene la suma de las estructuras <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificadas.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Calcula el valor de la operación AND bit a bit de sus operandos <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que contiene el resultado de la operación AND bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Calcula el valor de la operación OR bit a bit de las estructuras <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificadas.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que contiene el resultado de la operación OR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.CompareTo(System.Data.SqlTypes.SqlInt32)">
      <summary>Compara esta instancia de <see cref="T:System.Data.SqlTypes.SqlInt32" /> con el <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificado y devuelve una indicación de los valores relativos.</summary>
      <param name="value">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> que se va a comparar.</param>
      <returns>Un número con signo que indica los valores relativos de la instancia y del objeto.  
  
 <list type="table"><listheader><term> Valor devuelto</term><description> Condición</description></listheader><item><term> Menor que cero</term><description> El valor de esta instancia es menor que el valor del objeto.</description></item><item><term> Cero</term><description> El valor de esta instancia es igual al valor del objeto.</description></item><item><term> Mayor que cero</term><description> El valor de esta instancia es mayor que el valor del objeto. 
o bien 
El objeto es una referencia nula (<see langword="Nothing" /> en Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.CompareTo(System.Object)">
      <summary>Compara esta instancia de <see cref="T:System.Data.SqlTypes.SqlInt32" /> con el <see cref="T:System.Object" /> especificado y devuelve una indicación de los valores relativos.</summary>
      <param name="value">
        <see cref="T:System.Object" /> que se va a comparar.</param>
      <returns>Un número con signo que indica los valores relativos de la instancia y del objeto.  
  
 <list type="table"><listheader><term> Valor devuelto</term><description> Condición</description></listheader><item><term> Menor que cero</term><description> El valor de esta instancia es menor que el valor del objeto.</description></item><item><term> Cero</term><description> El valor de esta instancia es igual al valor del objeto.</description></item><item><term> Mayor que cero</term><description> El valor de esta instancia es mayor que el valor del objeto. 
o bien 
El objeto es una referencia nula (<see langword="Nothing" /> en Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Divide(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Divide el primer parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> por el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contiene el resultado de la división.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Realiza una comparación lógica de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar si son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Es <see langword="true" /> si los dos valores son iguales. En caso contrario, es <see langword="false" />. Si alguna de las instancias es null, el valor de <see langword="SqlInt32" /> será null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Object)">
      <summary>Compara el parámetro del objeto especificado con la propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> del objeto <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="value">Objeto que se va a comparar.</param>
      <returns>
        <see langword="true" /> si el objeto es una instancia de <see cref="T:System.Data.SqlTypes.SqlInt32" /> y ambos son iguales; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GetHashCode">
      <summary>Devuelve el código hash de esta instancia.</summary>
      <returns>Código hash de un entero con signo de 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Devuelve el lenguaje de definición de esquemas XML (XSD) del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet">Una clase <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Un valor de tipo <see langword="string" /> que indica el esquema XSD del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Compara los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar si el primero es mayor que el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Compara los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar si el primero es igual o mayor que el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Compara los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar si el primero es menor que el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Compara los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar si el primero es igual o menor que el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Mod(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Calcula el resto después de dividir el primer parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> por el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contiene el resto.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Modulus(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Divide dos valores de <see cref="T:System.Data.SqlTypes.SqlInt32" /> y devuelve el resto.</summary>
      <param name="x">Valor <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Valor <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>El resto resultante de la división de <paramref name="x" /> por <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Calcula el producto de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contiene el producto de los dos parámetros.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.NotEquals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar si no son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary>Realiza una operación de complemento de uno bit a bit en la estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificada.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que contiene el resultado de la operación de complemento de uno.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Addition(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Calcula la suma de las dos estructuras <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificadas.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contiene la suma de las estructuras <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificadas.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Calcula el valor de la operación AND bit a bit de sus operandos <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que contiene el resultado de la operación AND bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Calcula el valor de la operación OR bit a bit de las estructuras <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificadas.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que contiene el resultado de la operación OR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Division(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Divide el primer parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> por el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contiene el resultado de la división.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Equality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Realiza una comparación lógica de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar si son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias no son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_ExclusiveOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Realiza una operación OR exclusiva bit a bit en las estructuras <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificadas.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que contiene el resultado de la operación XOR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt32">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt32">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt32">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> es igual a la parte de entero del parámetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Int32">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> proporcionada en un entero.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Valor entero convertido.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt32">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> del parámetro <see langword="SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt32">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt32">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> es igual a la parte de entero del parámetro <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt32">
      <summary>Convierte el objeto <see cref="T:System.Data.SqlTypes.SqlString" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Un objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> es igual al valor representado por el parámetro <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Compara los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar si el primero es mayor que el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Compara los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar si el primero es igual o mayor que el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt32">
      <summary>Convierte la propiedad <see cref="T:System.Data.SqlTypes.SqlByte" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt32">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Int32)~System.Data.SqlTypes.SqlInt32">
      <summary>Convierte el entero proporcionado en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Valor de entero.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad Value es igual al parámetro de número entero.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Inequality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar si no son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Compara los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar si el primero es menor que el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Compara los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar si el primero es igual o menor que el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Modulus(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Calcula el resto después de dividir el primer parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> por el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contiene el resto.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Calcula el producto de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contiene el producto de los dos parámetros.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary>Realiza una operación de complemento de uno bit a bit en la estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificada.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que contiene el resultado de la operación de complemento de uno.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Subtraction(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Resta el segundo parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> del primero.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contiene el resultado de la resta.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_UnaryNegation(System.Data.SqlTypes.SqlInt32)">
      <summary>Niega la propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> del operando <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que contiene el valor negado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Parse(System.String)">
      <summary>Convierte la representación de <see cref="T:System.String" /> de un número en el entero de 32 bits con signo equivalente.</summary>
      <param name="s">
        <see cref="T:System.String" /> que se va a analizar.</param>
      <returns>Un entero de 32 bits con signo equivalente al valor incluido en el objeto <see cref="T:System.String" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Subtract(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Resta el segundo parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> del primero.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contiene el resultado de la resta.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <returns>Una clase <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlBoolean">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>Es <see langword="true" /> si el valor de la propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> es distinto de cero; es <see langword="false" /> si es cero; en caso contrario, es Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlByte">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuyo <see langword="Value" /> es igual al <see langword="Value" /> de esta estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />. Si el valor de <see langword="SqlInt32" /> es menor que 0 o mayor que 255, se inicia una excepción <see cref="T:System.OverflowException" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDecimal">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDouble">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt16">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt64">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlMoney">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlSingle">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlString">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlString" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToString">
      <summary>Convierte una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.String" />.</summary>
      <returns>Nueva estructura <see cref="T:System.String" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Xor(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Realiza una operación OR exclusiva bit a bit en las estructuras <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificadas.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que contiene el resultado de la operación XOR bit a bit.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.IsNull">
      <summary>Indica si esta estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> es null.</summary>
      <returns>Esta propiedad es <see langword="true" /> si <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> es NULL. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.Value">
      <summary>Obtiene el valor de esta estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />. Esta propiedad es de sólo lectura.</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">La propiedad contiene <see cref="F:System.Data.SqlTypes.SqlInt32.Null" />.</exception>
      <returns>Entero que representa el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt64">
      <summary>Representa un entero de 64 bits con signo que se almacena en una base de datos o se recupera de una base de datos.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MaxValue">
      <summary>Constante que representa el valor mayor de una estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MinValue">
      <summary>Constante que representa el valor menor de una estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Null">
      <summary>Representa una clase <see cref="T:System.DBNull" /> que se puede asignar a esta instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Zero">
      <summary>Representa un valor cero que se puede asignar a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> de una instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.#ctor(System.Int64)">
      <summary>Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> utilizando el valor de entero largo especificado.</summary>
      <param name="value">Entero largo.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Add(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Calcula la suma de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es igual a la suma de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Calcula el valor de la operación AND bit a bit de sus operandos <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> que contiene el resultado de la operación AND bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Calcula el valor de la operación OR bit a bit de sus dos operandos <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> que contiene el resultado de la operación OR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Data.SqlTypes.SqlInt64)">
      <summary>Compara esta instancia de <see cref="T:System.Data.SqlTypes.SqlInt64" /> con el <see cref="T:System.Data.SqlTypes.SqlInt64" /> especificado y devuelve una indicación de los valores relativos.</summary>
      <param name="value">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> que se va a comparar.</param>
      <returns>Un número con signo que indica los valores relativos de la instancia y del objeto.  
  
 <list type="table"><listheader><term> Valor devuelto</term><description> Condición</description></listheader><item><term> Menor que cero</term><description> El valor de esta instancia es menor que el valor del objeto.</description></item><item><term> Cero</term><description> El valor de esta instancia es igual al valor del objeto.</description></item><item><term> Mayor que cero</term><description> El valor de esta instancia es mayor que el valor del objeto. 
o bien 
El objeto es una referencia nula (<see langword="Nothing" /> en Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)">
      <summary>Compara esta instancia de <see cref="T:System.Data.SqlTypes.SqlInt64" /> con el <see cref="T:System.Object" /> especificado y devuelve una indicación de los valores relativos.</summary>
      <param name="value">
        <see cref="T:System.Object" /> que se va a comparar.</param>
      <returns>Un número con signo que indica los valores relativos de la instancia y del objeto.  
  
 <list type="table"><listheader><term> Valor devuelto</term><description> Condición</description></listheader><item><term> Menor que cero</term><description> El valor de esta instancia es menor que el valor del objeto.</description></item><item><term> Cero</term><description> El valor de esta instancia es igual al valor del objeto.</description></item><item><term> Mayor que cero</term><description> El valor de esta instancia es mayor que el valor del objeto. 
o bien 
El objeto es una referencia nula (<see langword="Nothing" /> en Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Divide(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Divide el primer parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> por el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> contiene el resultado de la operación de división.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Realiza una comparación lógica de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar si son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Es <see langword="true" /> si los dos valores son iguales. En caso contrario, es <see langword="false" />. Si alguna de las instancias es null, el valor de <see langword="SqlInt64" /> será null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Object)">
      <summary>Compara el parámetro del objeto especificado con la propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> del objeto <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="value">Objeto que se va a comparar.</param>
      <returns>
        <see langword="true" /> si el objeto es una instancia de <see cref="T:System.Data.SqlTypes.SqlInt64" /> y ambos son iguales; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GetHashCode">
      <summary>Devuelve el código hash de esta instancia.</summary>
      <returns>Código hash de un entero con signo de 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Devuelve el lenguaje de definición de esquemas XML (XSD) del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet">Una clase <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Un objeto <see langword="string" /> que indica el esquema XSD del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Realiza una comparación lógica de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar si el primero es mayor que el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar si el primero es mayor o igual que el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Realiza una comparación lógica de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar si el primero es menor que el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Realiza una comparación lógica de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar si el primero es menor o igual que el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Mod(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Calcula el resto después de dividir el primer parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> por el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> contiene el resto.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Divide dos valores de <see cref="T:System.Data.SqlTypes.SqlInt64" /> y devuelve el resto.</summary>
      <param name="x">Valor <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Valor <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>El resto resultante de la división de <paramref name="x" /> por <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Calcula el producto de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es igual al producto de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.NotEquals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Realiza una comparación lógica de los dos parámetros de SqlInt64 para determinar si no son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary>Realiza una operación de complemento de uno bit a bit en el operando <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es igual al complemento de uno del parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Addition(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Calcula la suma de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es igual a la suma de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Calcula el valor de la operación AND bit a bit de sus operandos <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> que contiene el resultado de la operación AND bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Calcula el valor de la operación OR bit a bit de sus dos operandos <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> que contiene el resultado de la operación OR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Division(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Divide el primer parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> por el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> contiene el resultado de la operación de división.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Equality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Realiza una comparación lógica de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar si son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias no son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_ExclusiveOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Realiza una operación OR exclusiva bit a bit en los parámetros proporcionados.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> que contiene el resultado de la operación XOR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt64">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlBoolean" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que se va a convertir.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt64">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlDecimal" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que se va a convertir.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es igual a la parte de entero del parámetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt64">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> que se va a convertir.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es igual a la parte de entero del parámetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Int64">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> en un valor largo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Nuevo valor largo equivalente a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> de <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt64">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> que se va a convertir.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es igual a la parte de entero del parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt64">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlSingle" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que se va a convertir.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> contiene la parte de entero del parámetro <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt64">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlString" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">El objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que se va a convertir.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es igual al valor representado por el parámetro <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Realiza una comparación lógica de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar si el primero es mayor que el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar si el primero es mayor o igual que el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt64">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlByte" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> que se va a convertir.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt64">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlInt16" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> que se va a convertir.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt64">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que se va a convertir.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlInt64">
      <summary>Convierte el parámetro largo en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Valor de entero largo.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es igual al valor del parámetro largo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Inequality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Realiza una comparación lógica de los dos parámetros de SqlInt64 para determinar si no son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Realiza una comparación lógica de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar si el primero es menor que el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Realiza una comparación lógica de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar si el primero es menor o igual que el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Calcula el resto después de dividir el primer parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> por el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> contiene el resto.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Calcula el producto de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es igual al producto de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary>Realiza una operación de complemento de uno bit a bit en el operando <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es igual al complemento de uno del parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Subtraction(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Resta el segundo parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> del primero.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es igual al resultado de la operación de resta.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_UnaryNegation(System.Data.SqlTypes.SqlInt64)">
      <summary>El operador unario menos niega la propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> del operando <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> negada del parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Parse(System.String)">
      <summary>Convierte la representación de <see cref="T:System.String" /> de un número en el entero de 64 bits con signo equivalente.</summary>
      <param name="s">
        <see cref="T:System.String" /> que se va a analizar.</param>
      <returns>Un entero de 64 bits con signo equivalente al valor incluido en el objeto <see cref="T:System.String" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Subtract(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Resta el segundo parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> del primero.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es igual al resultado de la operación de resta.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <returns>Una clase <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlBoolean">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>Es <see langword="true" /> si el valor de la propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es distinto de cero; es <see langword="false" /> si es cero; en caso contrario, es Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlByte">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuyo <see langword="Value" /> es igual al <see langword="Value" /> de esta estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDecimal">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDouble">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt16">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt32">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlMoney">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlSingle">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlString">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> que representa el valor de <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToString">
      <summary>Convierte esta instancia de <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.String" />.</summary>
      <returns>
        <see cref="T:System.String" /> que representa el valor de <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Xor(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Realiza una operación OR exclusiva bit a bit en los parámetros proporcionados.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> que contiene el resultado de la operación XOR bit a bit.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.IsNull">
      <summary>Obtiene un valor booleano que indica si esta estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> es NULL.</summary>
      <returns>
        <see langword="true" /> si es NULL. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.Value">
      <summary>Obtiene el valor de esta estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />. Esta propiedad es de sólo lectura.</summary>
      <returns>Entero largo que representa el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlMoney">
      <summary>Representa un valor de moneda comprendido entre -2 63 (o -922.337.203.685.477,5808) y 2 63 -1 (o +922.337.203.685.477,5807), con una precisión de una diezmilésima de unidad de moneda, que se almacena en una base de datos o se recupera de una base de datos.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MaxValue">
      <summary>Representa el valor máximo que se puede asignar a la propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> de una instancia de la clase <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MinValue">
      <summary>Representa el valor mínimo que se puede asignar a la propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> de una instancia de la clase <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Null">
      <summary>Representa una clase <see cref="T:System.DBNull" /> que se puede asignar a esta instancia de la clase <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Zero">
      <summary>Representa el valor cero que se puede asignar a la propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> de una instancia de la clase <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Decimal)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlMoney" /> con el valor <see cref="T:System.Decimal" /> especificado.</summary>
      <param name="value">Valor monetario que se va a inicializar.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Double)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlMoney" /> con el valor Double especificado.</summary>
      <param name="value">Valor monetario que se va a inicializar.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlMoney" /> con el valor de entero especificado.</summary>
      <param name="value">Valor monetario que se va a inicializar.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int64)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlMoney" /> con el valor de entero largo especificado.</summary>
      <param name="value">Valor monetario que se va a inicializar.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Add(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Calcula la suma de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contiene la suma de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.CompareTo(System.Data.SqlTypes.SqlMoney)">
      <summary>Compara esta instancia de <see cref="T:System.Data.SqlTypes.SqlMoney" /> con el <see cref="T:System.Data.SqlTypes.SqlMoney" /> especificado y devuelve una indicación de los valores relativos.</summary>
      <param name="value">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> que se va a comparar.</param>
      <returns>Un número con signo que indica los valores relativos de la instancia y del objeto.  
  
 <list type="table"><listheader><term> Valor devuelto</term><description> Condición</description></listheader><item><term> Menor que cero</term><description> El valor de esta instancia es menor que el valor del objeto.</description></item><item><term> Cero</term><description> El valor de esta instancia es igual al valor del objeto.</description></item><item><term> Mayor que cero</term><description> El valor de esta instancia es mayor que el valor del objeto. 
o bien 
El objeto es una referencia nula (<see langword="Nothing" /> en Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.CompareTo(System.Object)">
      <summary>Compara esta instancia de <see cref="T:System.Data.SqlTypes.SqlMoney" /> con el <see cref="T:System.Object" /> especificado y devuelve una indicación de los valores relativos.</summary>
      <param name="value">
        <see cref="T:System.Object" /> que se va a comparar.</param>
      <returns>Un número con signo que indica los valores relativos de la instancia y del objeto.  
  
 <list type="table"><listheader><term> Valor devuelto</term><description> Condición</description></listheader><item><term> Menor que cero</term><description> El valor de esta instancia es menor que el valor del objeto.</description></item><item><term> Cero</term><description> El valor de esta instancia es igual al valor del objeto.</description></item><item><term> Mayor que cero</term><description> El valor de esta instancia es mayor que el valor del objeto. 
o bien 
El objeto es una referencia nula (<see langword="Nothing" /> en Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Divide(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>El operador de división divide el primer parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" /> por el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contiene el resultado de la división.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Realiza una comparación lógica de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar si son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Es <see langword="true" /> si los dos valores son iguales. En caso contrario, es <see langword="false" />. Si alguna de las instancias es null, el valor de <see langword="SqlMoney" /> será null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Object)">
      <summary>Compara el parámetro del objeto especificado con la propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> del objeto <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="value">Objeto que se va a comparar.</param>
      <returns>
        <see langword="true" /> si el objeto es una instancia de <see cref="T:System.Data.SqlTypes.SqlMoney" /> y los dos son iguales; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GetHashCode">
      <summary>Obtiene el código hash de esta instancia.</summary>
      <returns>Código hash de un entero con signo de 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Devuelve el lenguaje de definición de esquemas XML (XSD) del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet">Una clase <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Un objeto <see langword="string" /> que indica el esquema XSD del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Realiza una comparación lógica de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar si el primero es mayor que el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar si el primero es mayor o igual que el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Realiza una comparación lógica de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar si el primero es menor que el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar si el primero es menor o igual que el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>El operador de multiplicación calcula el producto de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contiene el producto de la multiplicación.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.NotEquals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar si no son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Addition(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Calcula la suma de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contiene la suma de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Division(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>El operador de división divide el primer parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" /> por el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contiene el resultado de la división.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Equality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Realiza una comparación lógica de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar si son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias no son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlMoney">
      <summary>Este operador implícito convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlBoolean" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que se va a convertir.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlMoney">
      <summary>Este operador convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlDecimal" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que se va a convertir.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlMoney">
      <summary>Este operador convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlDouble" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> que se va a convertir.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Decimal">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> especificada en <see cref="T:System.Decimal" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Una nueva estructura <see cref="T:System.Decimal" /> cuyo valor es igual que la propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlMoney">
      <summary>Este operador convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlSingle" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que se va a convertir.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlMoney">
      <summary>Este operador convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">El objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que se va a convertir.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> es igual al valor representado por el parámetro <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Double)~System.Data.SqlTypes.SqlMoney">
      <summary>Este operador implícito convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlDouble" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> que se va a convertir.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Realiza una comparación lógica de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar si el primero es mayor que el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar si el primero es mayor o igual que el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlMoney">
      <summary>Este operador implícito convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlByte" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> que se va a convertir.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlMoney">
      <summary>Este operador implícito convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlInt16" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> que se va a convertir.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlMoney">
      <summary>Este operador implícito convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que se va a convertir.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlMoney">
      <summary>Este operador implícito convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> que se va a convertir.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlMoney">
      <summary>Convierte el parámetro <see cref="T:System.Decimal" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Valor <see cref="T:System.Decimal" /> que se va a convertir.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> es igual al valor del parámetro <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlMoney">
      <summary>Este operador implícito convierte el parámetro <see cref="T:System.Int64" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Estructura <see cref="T:System.Int64" /> que se va a convertir.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> es igual al valor del parámetro <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Inequality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar si no son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Realiza una comparación lógica de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar si el primero es menor que el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar si el primero es menor o igual que el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>El operador de multiplicación calcula el producto de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contiene el producto de la multiplicación.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Subtraction(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>El operador de sustracción resta el segundo parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" /> del primero.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> que contiene los resultados de la resta.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_UnaryNegation(System.Data.SqlTypes.SqlMoney)">
      <summary>El operador unario menos niega el parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> que se va a negar.</param>
      <returns>Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contiene el resultado de la negación.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Parse(System.String)">
      <summary>Convierte la representación de tipo <see cref="T:System.String" /> de un número en su estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> equivalente.</summary>
      <param name="s">
        <see langword="String" /> que se va a analizar.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> que equivale al valor incluido en el objeto <see cref="T:System.String" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Subtract(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>El operador de sustracción resta el segundo parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" /> del primero.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> que contiene los resultados de la resta.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <returns>Una clase <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDecimal">
      <summary>Convierte el valor de esta instancia de <see cref="T:System.Data.SqlTypes.SqlMoney" /> en una estructura <see cref="T:System.Decimal" />.</summary>
      <returns>Estructura <see cref="T:System.Decimal" /> cuyo valor es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> de esta estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDouble">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Double" />.</summary>
      <returns>Double con un valor equivalente a la estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt32">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Int32" />.</summary>
      <returns>Un entero de 32 bits cuyo valor es igual a la parte de entero de esta estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt64">
      <summary>Convierte el valor de esta estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Int64" />.</summary>
      <returns>Un entero de 64 bits cuyo valor es igual a la parte de entero de esta estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlBoolean">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>Un estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />. Si el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> es cero, el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlByte">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDecimal">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDouble">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt16">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt32">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt64">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlSingle">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlString">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Estructura <see cref="T:System.Data.SqlTypes.SqlString" /> cuyo valor es una cadena que representa el valor de <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToString">
      <summary>Convierte esta instancia de <see cref="T:System.Data.SqlTypes.SqlMoney" /> en una cadena.</summary>
      <returns>Cadena cuyo valor es la representación de cadena del valor de <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.IsNull">
      <summary>Devuelve un valor booleano que indica si esta estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> es NULL.</summary>
      <returns>
        <see langword="true" /> si es NULL. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.Value">
      <summary>Obtiene el valor monetario de una instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />. Esta propiedad es de sólo lectura.</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">La propiedad se ha establecido en null.</exception>
      <returns>Valor monetario de una instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlNotFilledException">
      <summary>La clase <see cref="T:System.Data.SqlTypes.SqlNotFilledException" /> no está diseñada para utilizarla como componente independiente, sino como clase de la que otras derivan una funcionalidad estándar.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlNotFilledException" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlNotFilledException" />.</summary>
      <param name="message">Cadena que se muestra cuando se produce la excepción.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlNotFilledException" />.</summary>
      <param name="message">Cadena que se muestra cuando se produce la excepción.</param>
      <param name="e">Referencia a una excepción interna.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlNullValueException">
      <summary>Excepción que se produce cuando la propiedad <see langword="Value" /> de una estructura <see cref="N:System.Data.SqlTypes" /> se establece en null.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> con un mensaje proporcionado por el sistema que describe el error.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> con un mensaje especificado que describe el error.</summary>
      <param name="message">Mensaje que describe la excepción. El autor de llamada de este constructor debe asegurarse de que esta cadena se ha adaptado para la referencia cultural del sistema actual.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message">Mensaje que describe la excepción. El autor de llamada de este constructor debe asegurarse de que esta cadena se ha adaptado para la referencia cultural del sistema actual.</param>
      <param name="e">Excepción que es la causa de la excepción actual. Si el parámetro <c>innerException</c> no es <see langword="null" />, se genera la excepción actual en un bloque <see langword="catch" /> que controla la excepción interna.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlSingle">
      <summary>Representa un número de punto flotante, comprendido en el intervalo de -3,40E +38 a 3,40E +38, que se almacena en una base de datos o se recupera de una base de datos.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MaxValue">
      <summary>Representa el valor máximo que se puede asignar a la propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> de una instancia de la clase <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MinValue">
      <summary>Representa el valor mínimo que se puede asignar a la propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> de una instancia de la clase <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Null">
      <summary>Representa una clase <see cref="T:System.DBNull" /> que se puede asignar a esta instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Zero">
      <summary>Representa el valor cero que se puede asignar a la propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> de una instancia de la clase <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Double)">
      <summary>Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> utilizando el parámetro Double especificado.</summary>
      <param name="value">Valor Double que se utilizará como <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Single)">
      <summary>Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="value">Número de punto flotante que se utilizará como <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Add(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Calcula la suma de las dos estructuras <see cref="T:System.Data.SqlTypes.SqlSingle" /> especificadas.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que contiene la suma de las dos estructuras <see cref="T:System.Data.SqlTypes.SqlSingle" /> especificadas.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Data.SqlTypes.SqlSingle)">
      <summary>Compara esta instancia de <see cref="T:System.Data.SqlTypes.SqlSingle" /> con el <see cref="T:System.Data.SqlTypes.SqlSingle" /> especificado y devuelve una indicación de los valores relativos.</summary>
      <param name="value">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> que se va a comparar.</param>
      <returns>Un número con signo que indica los valores relativos de la instancia y del objeto.  
  
 <list type="table"><listheader><term> Valor devuelto</term><description> Condición</description></listheader><item><term> Menor que cero</term><description> El valor de esta instancia es menor que el valor del objeto.</description></item><item><term> Cero</term><description> El valor de esta instancia es igual al valor del objeto.</description></item><item><term> Mayor que cero</term><description> El valor de esta instancia es mayor que el valor del objeto. 
o bien 
El objeto es una referencia nula (<see langword="Nothing" /> en Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Object)">
      <summary>Compara esta instancia de <see cref="T:System.Data.SqlTypes.SqlSingle" /> con el <see cref="T:System.Object" /> especificado y devuelve una indicación de los valores relativos.</summary>
      <param name="value">
        <see cref="T:System.Object" /> que se va a comparar.</param>
      <returns>Un número con signo que indica los valores relativos de la instancia y del objeto.  
  
 <list type="table"><listheader><term> Valor devuelto</term><description> Condición</description></listheader><item><term> Menor que cero</term><description> El valor de esta instancia es menor que el valor del objeto.</description></item><item><term> Cero</term><description> El valor de esta instancia es igual al valor del objeto.</description></item><item><term> Mayor que cero</term><description> El valor de esta instancia es mayor que el valor del objeto. 
o bien 
El objeto es una referencia nula (<see langword="Nothing" /> en Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Divide(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Divide la primera estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> por la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Una estructura <see langword="SqlInt64" /> que contiene el resultado de la división.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Realiza una comparación lógica de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar si son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Es <see langword="true" /> si los dos valores son iguales. En caso contrario, es <see langword="false" />. Si alguna de las instancias es null, el valor de <see langword="SqlSingle" /> será null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Object)">
      <summary>Compara el parámetro del objeto especificado con la propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> del objeto <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="value">Objeto que se va a comparar.</param>
      <returns>Es <see langword="true" /> si el objeto es una instancia de <see cref="T:System.Data.SqlTypes.SqlSingle" /> y los dos son iguales. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GetHashCode">
      <summary>Obtiene el código hash de esta instancia.</summary>
      <returns>Código hash de un entero con signo de 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Devuelve el lenguaje de definición de esquemas XML (XSD) del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet">Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Un valor de tipo <see langword="string" /> que indica el esquema XSD del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Realiza una comparación lógica de los dos operandos <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar si el primero es mayor que el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Realiza una comparación lógica de las dos estructuras <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar si la primera es mayor o igual que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Realiza una comparación lógica de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar si el primero es menor que el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar si el primero es menor o igual que el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Calcula el producto de las dos estructuras <see cref="T:System.Data.SqlTypes.SqlSingle" /> especificadas.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que contiene el producto de la multiplicación.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.NotEquals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar si no son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Addition(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Calcula la suma de las dos estructuras <see cref="T:System.Data.SqlTypes.SqlSingle" /> especificadas.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que contiene la suma de las dos estructuras <see cref="T:System.Data.SqlTypes.SqlSingle" /> especificadas.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Division(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Divide la primera estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> por la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que contiene el resultado de la división.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Equality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Realiza una comparación lógica de los dos parámetros SqlSingle para determinar si son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias no son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlSingle">
      <summary>Este operador implícito convierte el <see cref="T:System.Data.SqlTypes.SqlBoolean" /> especificado en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que se va a convertir.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlSingle">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlDouble" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Parámetro <see cref="T:System.Data.SqlTypes.SqlDouble" /> que se va a convertir.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Single">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> especificada en un valor flotante.</summary>
      <param name="x">Valor <see cref="T:System.Data.SqlTypes.SqlSingle" /> que se va a convertir en flotante.</param>
      <returns>Un valor de punto flotante que contiene el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlSingle">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlString" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">El objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que se va a convertir.</param>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> es igual al valor representado por el parámetro <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Realiza una comparación lógica de los dos operandos <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar si el primero es mayor que el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Realiza una comparación lógica de las dos estructuras <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar si la primera es mayor o igual que la segunda.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlSingle">
      <summary>Este operador implícito convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> que va a convertirse.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlSingle">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlDecimal" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que se va a convertir.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlSingle">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlInt16" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> que se va a convertir.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlSingle">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que se va a convertir.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlSingle">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> que se va a convertir.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlSingle">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> que se va a convertir.</param>
      <returns>Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Single)~System.Data.SqlTypes.SqlSingle">
      <summary>Convierte el valor de punto flotante especificado en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Valor de punto flotante que se va a convertir en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que contiene el valor de punto flotante especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Inequality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar si no son iguales.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Realiza una comparación lógica de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar si el primero es menor que el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar si el primero es menor o igual que el segundo.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Calcula el producto de las dos estructuras <see cref="T:System.Data.SqlTypes.SqlSingle" /> especificadas.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que contiene el producto de la multiplicación.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Subtraction(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Resta la segunda estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> de la primera.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que contiene los resultados de la resta.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_UnaryNegation(System.Data.SqlTypes.SqlSingle)">
      <summary>Niega la propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> especificada.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que contiene el valor negado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Parse(System.String)">
      <summary>Convierte la estructura <see cref="T:System.String" /> especificada en una estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="s">
        <see cref="T:System.String" /> que se va a analizar.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que equivale al valor incluido en el objeto <see cref="T:System.String" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Subtract(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Resta la segunda estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> de la primera.</summary>
      <param name="x">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Un estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que contiene los resultados de la resta.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <returns>Una clase <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlBoolean">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>Es <see langword="true" /> si el valor de la propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> es distinto de cero; es <see langword="false" /> si es cero; en caso contrario, es Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlByte">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuyo <see langword="Value" /> es igual al <see langword="Value" /> de esta estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />. Si el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> es <see langword="true" />, el <see langword="Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> será 1. De lo contrario, el <see langword="Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> será 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDecimal">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Nueva estructura <see langword="SqlDecimal" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDouble">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Nueva estructura <see langword="SqlDouble" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt16">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Nueva estructura <see langword="SqlInt16" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt32">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt64">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlMoney">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlString">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> que representa el valor de <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToString">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.String" />.</summary>
      <returns>Objeto <see langword="String" /> que representa el valor de esta estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.IsNull">
      <summary>Indica si esta estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> es null.</summary>
      <returns>
        <see langword="true" /> si es NULL. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.Value">
      <summary>Obtiene el valor de esta estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />. Esta propiedad es de sólo lectura.</summary>
      <returns>Valor de punto flotante comprendido en el intervalo que abarca desde –3,40E+38 hasta 3,40E+38.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlString">
      <summary>Representa una secuencia de caracteres de longitud variable que se va a almacenar en una base de datos o se va a recuperar de una base de datos. <see cref="T:System.Data.SqlTypes.SqlString" /> tiene una estructura de datos subyacente diferente de su correspondiente tipo de datos <see cref="T:System.String" /> de .NET Framework.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.BinarySort">
      <summary>Especifica que la ordenación debe basarse en un valor numérico de caracteres y no en un valor alfabético.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.BinarySort2">
      <summary>Especifica que la ordenación debe basarse en un valor numérico de caracteres y no en un valor alfabético.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreCase">
      <summary>Especifica que en las comparaciones de <see cref="T:System.Data.SqlTypes.SqlString" /> no debe tenerse en cuenta la distinción entre mayúsculas y minúsculas.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreKanaType">
      <summary>Especifica que en la comparación de cadenas no se debe tener en cuenta el tipo Kana.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreNonSpace">
      <summary>Especifica que en las comparaciones de cadenas no deben tenerse en cuenta los caracteres combinables sin espaciado, como los diacríticos.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreWidth">
      <summary>Especifica que en la comparación de cadenas no se debe tener en cuenta el ancho de los caracteres.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.Null">
      <summary>Representa una clase <see cref="T:System.DBNull" /> que se puede asignar a esta instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])">
      <summary>Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlString" /> utilizando el identificador de configuración regional, las opciones de comparación y los datos especificados.</summary>
      <param name="lcid">Especifica el idioma y la región geográfica de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions">Especifica las opciones de comparación de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="data">Matriz de datos que se va a almacenar.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="lcid">Especifica el idioma y la región geográfica de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions">Especifica las opciones de comparación de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="data">Matriz de datos que se va a almacenar.</param>
      <param name="fUnicode">Es <see langword="true" /> si se ha codificado en Unicode. En caso contrario, es <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="lcid">Especifica el idioma y la región geográfica de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions">Especifica las opciones de comparación de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="data">Matriz de datos que se va a almacenar.</param>
      <param name="index">Índice inicial de la matriz.</param>
      <param name="count">Número de caracteres a partir del índice que se van a copiar.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="lcid">Especifica el idioma y la región geográfica de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions">Especifica las opciones de comparación de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="data">Matriz de datos que se va a almacenar.</param>
      <param name="index">Índice inicial de la matriz.</param>
      <param name="count">Número de caracteres a partir del índice que se van a copiar.</param>
      <param name="fUnicode">Es <see langword="true" /> si se ha codificado en Unicode. En caso contrario, es <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlString" /> utilizando la cadena especificada.</summary>
      <param name="data">Cadena que se va a almacenar.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32)">
      <summary>Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlString" /> utilizando la cadena especificada y los valores del identificador de configuración regional.</summary>
      <param name="data">Cadena que se va a almacenar.</param>
      <param name="lcid">Especifica el idioma y la región geográfica de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)">
      <summary>Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlString" /> utilizando la cadena, el identificador de configuración regional y los valores de las opciones de comparación especificados.</summary>
      <param name="data">Cadena que se va a almacenar.</param>
      <param name="lcid">Especifica el idioma y la región geográfica de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions">Especifica las opciones de comparación de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Add(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Concatena dos valores <see cref="T:System.Data.SqlTypes.SqlString" /> especificados para crear una nueva estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Una estructura <see cref="T:System.Data.SqlTypes.SqlString" /> que es el valor concatenado de <paramref name="x" /> e <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Clone">
      <summary>Crea una copia de este objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Nuevo objeto <see cref="T:System.Data.SqlTypes.SqlString" /> en el que todos los valores de propiedad coinciden con los originales.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)">
      <summary>Obtiene la enumeración <see cref="T:System.Globalization.CompareOptions" /> equivalente del valor <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> especificado.</summary>
      <param name="compareOptions">Valor <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> que describe las opciones de comparación de la estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Valor <see langword="CompareOptions" /> que corresponde al <see langword="SqlCompareOptions" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)">
      <summary>Compara esta instancia de <see cref="T:System.Data.SqlTypes.SqlString" /> con el <see cref="T:System.Data.SqlTypes.SqlString" /> especificado y devuelve una indicación de los valores relativos.</summary>
      <param name="value">
        <see cref="T:System.Data.SqlTypes.SqlString" /> que se va a comparar.</param>
      <returns>Un número con signo que indica los valores relativos de la instancia y del objeto.  
  
 <list type="table"><listheader><term> Valor devuelto</term><description> Condición</description></listheader><item><term> Menor que cero</term><description> El valor de esta instancia es menor que el valor del objeto.</description></item><item><term> Cero</term><description> El valor de esta instancia es igual al valor del objeto.</description></item><item><term> Mayor que cero</term><description> El valor de esta instancia es mayor que el valor del objeto. 
o bien 
El objeto es una referencia nula (<see langword="Nothing" /> en Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareTo(System.Object)">
      <summary>Compara este objeto <see cref="T:System.Data.SqlTypes.SqlString" /> con el <see cref="T:System.Object" /> proporcionado y devuelve una indicación de sus valores relativos.</summary>
      <param name="value">
        <see cref="T:System.Object" /> que se va a comparar.</param>
      <returns>Un número con signo que indica los valores relativos de la instancia y del objeto.  
  
 <list type="table"><listheader><term> Valor devuelto</term><description> Condición</description></listheader><item><term> Menor que cero</term><description> El valor de esta instancia es menor que el valor del objeto.</description></item><item><term> Cero</term><description> El valor de esta instancia es igual al valor del objeto.</description></item><item><term> Mayor que cero</term><description> El valor de esta instancia es mayor que el valor del objeto. 
o bien 
El objeto es una referencia nula (<see langword="Nothing" /> en Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Concatena las dos estructuras <see cref="T:System.Data.SqlTypes.SqlString" /> especificadas.</summary>
      <param name="x">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que contiene el valor recién concatenado que representa el contenido de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Realiza una comparación lógica de los dos operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar si son iguales.</summary>
      <param name="x">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Es <see langword="true" /> si los dos valores son iguales. En caso contrario, es <see langword="false" />. Si alguna de las instancias es null, el valor de <see langword="SqlString" /> será null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Object)">
      <summary>Compara el parámetro del objeto especificado con la propiedad <see cref="P:System.Data.SqlTypes.SqlString.Value" /> del objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="value">Objeto que se va a comparar.</param>
      <returns>
        <see langword="true" /> si el objeto es una instancia de <see cref="T:System.Data.SqlTypes.SqlString" /> y los dos son iguales; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetHashCode">
      <summary>Obtiene el código hash de esta instancia.</summary>
      <returns>Código hash de un entero con signo de 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetNonUnicodeBytes">
      <summary>Obtiene una matriz de bytes, que incluye el contenido del objeto <see cref="T:System.Data.SqlTypes.SqlString" /> en formato ANSI.</summary>
      <returns>Una matriz de bytes, que incluye el contenido del objeto <see cref="T:System.Data.SqlTypes.SqlString" /> en formato ANSI.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetUnicodeBytes">
      <summary>Obtiene una matriz de bytes, que incluye el contenido del objeto <see cref="T:System.Data.SqlTypes.SqlString" /> en formato Unicode.</summary>
      <returns>Una matriz de bytes, que incluye el contenido del objeto <see cref="T:System.Data.SqlTypes.SqlString" /> en formato Unicode.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Devuelve el lenguaje de definición de esquemas XML (XSD) del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet">Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Un valor de tipo <see langword="string" /> que indica el esquema XSD del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Realiza una comparación lógica de los dos operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar si el primero es mayor que el segundo.</summary>
      <param name="x">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlString" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Realiza una comparación lógica de los dos operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar si el primero es mayor o igual que el segundo.</summary>
      <param name="x">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlString" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Realiza una comparación lógica de los dos operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar si el primero es menor que el segundo.</summary>
      <param name="x">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlString" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Realiza una comparación lógica de los dos operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar si el primero es menor o igual que el segundo.</summary>
      <param name="x">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlString" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Realiza una comparación lógica de los dos operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar si no son iguales.</summary>
      <param name="x">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlString" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Concatena las dos estructuras <see cref="T:System.Data.SqlTypes.SqlString" /> especificadas.</summary>
      <param name="x">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que contiene el valor recién concatenado que representa el contenido de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Realiza una comparación lógica de los dos operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar si son iguales.</summary>
      <param name="x">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias no son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlString" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlString">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> especificada en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que se va a convertir.</param>
      <returns>Un nuevo objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que contiene la representación en forma de cadena del parámetro <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlString">
      <summary>Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> especificada en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> que se va a convertir.</param>
      <returns>Un nuevo objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que contiene la representación en forma de cadena del parámetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.Data.SqlTypes.SqlString">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlDateTime" /> especificado en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> que se va a convertir.</param>
      <returns>Un nuevo objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que contiene la representación en forma de cadena del parámetro <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlString">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlDecimal" /> especificado en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Estructura <see langword="SqlDecimal" /> que se va a convertir.</param>
      <returns>Un nuevo objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que contiene la representación en forma de cadena del parámetro <see langword="SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlString">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlDouble" /> especificado en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> que se va a convertir.</param>
      <returns>Un nuevo objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que contiene la representación en forma de cadena del parámetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlString">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlGuid" /> especificado en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlGuid" /> que se va a convertir.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> cuyo valor corresponde a la representación en forma de cadena del <see cref="T:System.Data.SqlTypes.SqlGuid" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlString">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlInt16" /> especificado en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> que se va a convertir.</param>
      <returns>Un nuevo objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que contiene la representación en forma de cadena del parámetro <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlString">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificado en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Estructura SqlInt32 que se va a convertir.</param>
      <returns>Un nuevo objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que contiene la representación en forma de cadena del parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlString">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> especificado en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> que se va a convertir.</param>
      <returns>Un nuevo objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que contiene la representación en forma de cadena del parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlString">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" /> especificado en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> que se va a convertir.</param>
      <returns>Un nuevo objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que contiene la representación en forma de cadena del parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlString">
      <summary>Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlSingle" /> especificado en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que se va a convertir.</param>
      <returns>Un nuevo objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que contiene la representación en forma de cadena del parámetro <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlString)~System.String">
      <summary>Convierte una estructura <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.String" />.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" /> que va a convertirse.</param>
      <returns>Un valor de tipo <see langword="String" /> cuyo contenido es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlString.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Realiza una comparación lógica de los dos operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar si el primero es mayor que el segundo.</summary>
      <param name="x">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlString" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Realiza una comparación lógica de los dos operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar si el primero es mayor o igual que el segundo.</summary>
      <param name="x">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlString" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Implicit(System.String)~System.Data.SqlTypes.SqlString">
      <summary>Convierte el parámetro <see cref="T:System.String" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">
        <see cref="T:System.String" /> que va a convertirse.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> que contiene el valor de la estructura <see langword="String" /> especificada.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Realiza una comparación lógica de los dos operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar si no son iguales.</summary>
      <param name="x">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlString" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Realiza una comparación lógica de los dos operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar si el primero es menor que el segundo.</summary>
      <param name="x">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlString" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Realiza una comparación lógica de los dos operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar si el primero es menor o igual que el segundo.</summary>
      <param name="x">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlString" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <returns>Una clase <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlBoolean">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>Es <see langword="true" /> si el valor de la propiedad <see cref="P:System.Data.SqlTypes.SqlString.Value" /> es distinto de cero; es <see langword="false" /> si es cero; en caso contrario, es Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlByte">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Nueva estructura <see langword="SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> es igual al número representado por la estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDateTime">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <returns>Nueva estructura <see langword="SqlDateTime" /> que contiene el valor de datos representado por esta estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDecimal">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que contiene el valor de <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDouble">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> cuyo valor es igual al valor numérico de <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlGuid">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlGuid" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> corresponde al <see langword="Guid" /> representado por la estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt16">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuyo valor es igual al valor numérico de <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt32">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuyo valor es igual al valor numérico de <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt64">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuyo valor es igual al valor numérico de <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlMoney">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuyo valor es igual al valor numérico de <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlSingle">
      <summary>Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Nueva estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cuyo valor es igual al valor numérico de <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToString">
      <summary>Convierte un objeto <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.String" />.</summary>
      <returns>Una <see cref="T:System.String" /> con el mismo valor que la estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CompareInfo">
      <summary>Obtiene el objeto <see cref="T:System.Globalization.CompareInfo" /> que define el modo en que se realiza la comparación de cadenas de la estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Objeto <see langword="CompareInfo" /> que define la comparación de cadenas para la estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CultureInfo">
      <summary>Obtiene la estructura <see cref="T:System.Globalization.CultureInfo" /> que representa la información sobre la referencia cultural de este objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Una estructura <see cref="T:System.Globalization.CultureInfo" /> que describe la información sobre la referencia cultural de esta estructura SqlString, incluidos el nombre de la referencia cultural, el sistema de escritura y el calendario utilizado, así como el acceso a los objetos específicos de la referencia cultural que proporcionan métodos para operaciones comunes, como la aplicación de formato a fechas y la ordenación de cadenas.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.IsNull">
      <summary>Indica si esta estructura <see cref="T:System.Data.SqlTypes.SqlString" /> es null.</summary>
      <returns>
        <see langword="true" /> si <see cref="P:System.Data.SqlTypes.SqlString.Value" /> es <see cref="F:System.Data.SqlTypes.SqlString.Null" />. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.LCID">
      <summary>Especifica el idioma y la región geográfica de la estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Identificador de configuración regional de la cadena almacenada en la propiedad <see cref="P:System.Data.SqlTypes.SqlString.Value" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.SqlCompareOptions">
      <summary>Combinación de uno o varios valores de la enumeración <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> que representan el modo en que <see cref="T:System.Data.SqlTypes.SqlString" /> debe compararse con otras estructuras <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Valor que especifica cómo debe compararse la estructura <see cref="T:System.Data.SqlTypes.SqlString" /> en cuestión con otras estructuras <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.Value">
      <summary>Obtiene la cadena almacenada en la estructura <see cref="T:System.Data.SqlTypes.SqlString" />. Esta propiedad es de sólo lectura.</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">El valor de la cadena es <see cref="F:System.Data.SqlTypes.SqlString.Null" />.</exception>
      <returns>Cadena que se ha almacenado.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTruncateException">
      <summary>La excepción que se produce cuando establece un valor de una estructura <see cref="N:System.Data.SqlTypes" /> trunca este valor.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlTruncateException" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlTruncateException" /> con el mensaje de error especificado.</summary>
      <param name="message">Mensaje de error que explica el motivo de la excepción.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlTruncateException" /> con el mensaje de error especificado y una referencia a <see cref="T:System.Exception" />.</summary>
      <param name="message">Mensaje de error que explica el motivo de la excepción.</param>
      <param name="e">Referencia a una <see cref="T:System.Exception" /> interna.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTypeException">
      <summary>Clase de excepción base de <see cref="N:System.Data.SqlTypes" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlTypeException" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlTypeException" /> con datos serializados.</summary>
      <param name="si">Objeto que contiene los datos del objeto serializados.</param>
      <param name="sc">Información contextual acerca del origen o del destino.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlTypeException" /> con el mensaje de error especificado.</summary>
      <param name="message">Mensaje de error que explica el motivo de la excepción.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlTypeException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message">Mensaje que describe la excepción. El autor de llamada de este constructor debe asegurarse de que esta cadena se ha adaptado para la referencia cultural del sistema actual.</param>
      <param name="e">Excepción que es la causa de la excepción actual. Si el parámetro <c>innerException</c> no es <see langword="null" />, se genera la excepción actual en un bloque <see langword="catch" /> que controla la excepción interna.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlXml">
      <summary>Representa datos XML almacenados en un servidor o recuperados de un servidor.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor">
      <summary>Crea una nueva instancia de <see cref="T:System.Data.SqlTypes.SqlXml" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor(System.IO.Stream)">
      <summary>Crea una nueva instancia de <see cref="T:System.Data.SqlTypes.SqlXml" />, que proporciona el valor XML de la instancia derivada de la <see cref="T:System.IO.Stream" /> proporcionada.</summary>
      <param name="value">Instancia derivada de <see cref="T:System.IO.Stream" /> (como <see cref="T:System.IO.FileStream" />) desde la que se va a cargar el contenido XML de la instancia de <see cref="T:System.Data.SqlTypes.SqlXml" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor(System.Xml.XmlReader)">
      <summary>Crea una nueva instancia de <see cref="T:System.Data.SqlTypes.SqlXml" /> y la asocia al contenido del <see cref="T:System.Xml.XmlReader" /> proporcionado.</summary>
      <param name="value">Instancia de clase derivada de <see cref="T:System.Xml.XmlReader" /> que se va a utilizar como el valor de la nueva instancia de <see cref="T:System.Data.SqlTypes.SqlXml" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.CreateReader">
      <summary>Obtiene el valor del contenido XML de esta instancia de <see cref="T:System.Data.SqlTypes.SqlXml" /> como <see cref="T:System.Xml.XmlReader" />.</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Se ha intentado obtener acceso a esta propiedad en una instancia null de <see cref="T:System.Data.SqlTypes.SqlXml" />.</exception>
      <returns>Una instancia derivada de <see cref="T:System.Xml.XmlReader" /> que contiene el contenido XML. El tipo real puede variar en el servidor (por ejemplo, el valor devuelto podría ser <see cref="T:System.Xml.XmlTextReader" />), dependiendo de cómo se represente internamente la información.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Devuelve el lenguaje de definición de esquemas XML (XSD) del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet">Una clase <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Una cadena que indica el esquema XSD del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns>Clase <see cref="T:System.Xml.Schema.XmlSchema" /> que describe la representación XML del objeto generado por el método <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> y usado por el método <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="r">XmlReader.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer">XMLWriter.</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.IsNull">
      <summary>Indica si esta instancia representa un valor null de <see cref="T:System.Data.SqlTypes.SqlXml" />.</summary>
      <returns>Es <see langword="true" /> si <see langword="Value" /> es null. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.Null">
      <summary>Representa una instancia null del tipo <see cref="T:System.Data.SqlTypes.SqlXml" />.</summary>
      <returns>Instancia null de tipo <see cref="T:System.Data.SqlTypes.SqlXml" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.Value">
      <summary>Obtiene la representación en forma de cadena del contenido de esta instancia de <see cref="T:System.Data.SqlTypes.SqlXml" />.</summary>
      <returns>La representación en forma de cadena del contenido XML.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.StorageState">
      <summary>La enumeración <see cref="T:System.Data.SqlTypes.StorageState" /> no está diseñada para utilizarla como componente independiente, sino como enumeración de la que otras clases derivan una funcionalidad estándar.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.Buffer">
      <summary>Tamaño del búfer.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.Stream">
      <summary>Secuencia.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.UnmanagedBuffer">
      <summary>Búfer no administrado.</summary>
    </member>
    <member name="T:System.Data.StateChangeEventArgs">
      <summary>Proporciona los datos para el evento de cambio de estado de un proveedor de datos de .NET Framework.</summary>
    </member>
    <member name="M:System.Data.StateChangeEventArgs.#ctor(System.Data.ConnectionState,System.Data.ConnectionState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.StateChangeEventArgs" /> cuando se especifican los estados original y actual del objeto.</summary>
      <param name="originalState">Uno de los valores de <see cref="T:System.Data.ConnectionState" />.</param>
      <param name="currentState">Uno de los valores de <see cref="T:System.Data.ConnectionState" />.</param>
    </member>
    <member name="P:System.Data.StateChangeEventArgs.CurrentState">
      <summary>Obtiene el nuevo estado de la conexión. El objeto de conexión ya se encontrará en el nuevo estado cuando se desencadene el evento.</summary>
      <returns>Uno de los valores de <see cref="T:System.Data.ConnectionState" />.</returns>
    </member>
    <member name="P:System.Data.StateChangeEventArgs.OriginalState">
      <summary>Obtiene el estado original de la conexión.</summary>
      <returns>Uno de los valores de <see cref="T:System.Data.ConnectionState" />.</returns>
    </member>
    <member name="T:System.Data.StateChangeEventHandler">
      <summary>Representa el método que controlará el evento <see cref="E:System.Data.Common.DbConnection.StateChange" />.</summary>
      <param name="sender">Origen del evento.</param>
      <param name="e">Objeto <see cref="T:System.Data.StateChangeEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="T:System.Data.StatementCompletedEventArgs">
      <summary>Proporciona información adicional del evento <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />.</summary>
    </member>
    <member name="M:System.Data.StatementCompletedEventArgs.#ctor(System.Int32)">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.Data.StatementCompletedEventArgs" />.</summary>
      <param name="recordCount">Indica el número de filas afectadas por la instrucción que provocó el evento <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />.</param>
    </member>
    <member name="P:System.Data.StatementCompletedEventArgs.RecordCount">
      <summary>Indica el número de filas afectadas por la instrucción que provocó el evento <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />.</summary>
      <returns>El número de filas afectadas.</returns>
    </member>
    <member name="T:System.Data.StatementCompletedEventHandler">
      <summary>El tipo de delegado para los controladores de eventos del evento <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />.</summary>
      <param name="sender">Origen del evento.</param>
      <param name="e">Datos del evento.</param>
    </member>
    <member name="T:System.Data.StatementType">
      <summary>Especifica el tipo de consulta SQL que utilizarán las clases <see cref="T:System.Data.OleDb.OleDbRowUpdatedEventArgs" />, <see cref="T:System.Data.OleDb.OleDbRowUpdatingEventArgs" />, <see cref="T:System.Data.SqlClient.SqlRowUpdatedEventArgs" /> o <see cref="T:System.Data.SqlClient.SqlRowUpdatingEventArgs" />.</summary>
    </member>
    <member name="F:System.Data.StatementType.Batch">
      <summary>Consulta SQL que es una instrucción por lotes.</summary>
    </member>
    <member name="F:System.Data.StatementType.Delete">
      <summary>Consulta SQL que es una instrucción DELETE.</summary>
    </member>
    <member name="F:System.Data.StatementType.Insert">
      <summary>Consulta SQL que es una instrucción INSERT.</summary>
    </member>
    <member name="F:System.Data.StatementType.Select">
      <summary>Consulta SQL que es una instrucción SELECT.</summary>
    </member>
    <member name="F:System.Data.StatementType.Update">
      <summary>Consulta SQL que es una instrucción UPDATE.</summary>
    </member>
    <member name="T:System.Data.StrongTypingException">
      <summary>Excepción que produce un <see cref="T:System.Data.DataSet" /> fuertemente tipado cuando el usuario obtiene acceso a un valor <see langword="DBNull" />.</summary>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.StrongTypingException" />.</summary>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.StrongTypingException" /> con la información de serialización y el contexto de secuencia especificados.</summary>
      <param name="info">Un objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Un estructura <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.StrongTypingException" /> con la cadena especificada.</summary>
      <param name="message">Cadena que se muestra cuando se produce la excepción.</param>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.StrongTypingException" /> con la cadena y la excepción interna especificadas.</summary>
      <param name="s">Cadena que se muestra cuando se produce la excepción.</param>
      <param name="innerException">Referencia a una excepción interna.</param>
    </member>
    <member name="T:System.Data.SyntaxErrorException">
      <summary>Representa la excepción que se produce cuando la propiedad <see cref="P:System.Data.DataColumn.Expression" /> de un <see cref="T:System.Data.DataColumn" /> contiene un error de sintaxis.</summary>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SyntaxErrorException" />.</summary>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SyntaxErrorException" /> con el objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y la estructura <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Los datos necesarios para serializar o deserializar un objeto.</param>
      <param name="context">Origen y destino de una secuencia serializada específica.</param>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SyntaxErrorException" /> con la cadena especificada.</summary>
      <param name="s">Cadena que se muestra cuando se produce la excepción.</param>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SyntaxErrorException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message">Mensaje de error que explica el motivo de la excepción.</param>
      <param name="innerException">La excepción que es la causa de la excepción actual o una referencia nula (<see langword="Nothing" /> en Visual Basic) si no se especifica ninguna excepción interna.</param>
    </member>
    <member name="T:System.Data.TypedTableBase`1">
      <summary>Este tipo se usa como clase base para la generación de objetos de tipo <see cref="T:System.Data.DataTable" /> por parte de Visual Studio y la herramienta XSD.exe .NET Framework y no está pensado para usarse directamente desde el código.</summary>
      <typeparam name="T">El tipo de objetos de la secuencia de origen representada por la tabla, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="M:System.Data.TypedTableBase`1.#ctor">
      <summary>Inicializa un nuevo objeto <see cref="T:System.Data.TypedTableBase`1" />. Este método admite la generación de objetos <see cref="T:System.Data.DataTable" /> tipados mediante Visual Studio y la herramienta XSD.exe de .NET Framework. Este tipo no está pensado para utilizarse directamente desde el código.</summary>
    </member>
    <member name="M:System.Data.TypedTableBase`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa un nuevo objeto <see cref="T:System.Data.TypedTableBase`1" />. Este método admite la generación de objetos <see cref="T:System.Data.DataTable" /> tipados mediante Visual Studio y la herramienta XSD.exe de .NET Framework. Este método no está pensado para usarse directamente desde su código.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos para crear el objeto.</param>
      <param name="context">Contexto de transmisión por secuencias del objeto que se está deserializando.</param>
    </member>
    <member name="M:System.Data.TypedTableBase`1.Cast``1">
      <summary>Convierte los elementos de <see cref="T:System.Data.TypedTableBase`1" /> en el tipo especificado. Este método admite la generación de objetos <see cref="T:System.Data.DataTable" /> tipados mediante Visual Studio y la herramienta XSD.exe de .NET Framework. Este método no está pensado para usarse directamente desde su código.</summary>
      <typeparam name="TResult">Tipo en el que se van a convertir los elementos.</typeparam>
      <returns>
        <see cref="T:System.Data.EnumerableRowCollection" /> que contiene cada elemento de la secuencia de origen convertido en el tipo especificado.</returns>
    </member>
    <member name="M:System.Data.TypedTableBase`1.GetEnumerator">
      <summary>Devuelve un enumerador para el objeto <see cref="T:System.Data.DataRow" /> con establecimiento de tipos. Este método admite la generación de objetos <see cref="T:System.Data.DataTable" /> tipados mediante Visual Studio y la herramienta XSD.exe de .NET Framework. Este método no está pensado para usarse directamente desde su código.</summary>
      <returns>Objeto que implementa la interfaz <see cref="T:System.Collections.Generic.IEnumerator`1" />.</returns>
    </member>
    <member name="M:System.Data.TypedTableBase`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Devuelve un enumerador para el objeto <see cref="T:System.Data.DataRow" /> con establecimiento de tipos. Este método admite la generación de objetos <see cref="T:System.Data.DataTable" /> tipados mediante Visual Studio y la herramienta XSD.exe de .NET Framework. Este método no está pensado para usarse directamente desde su código.</summary>
      <returns>Objeto que implementa la interfaz <see cref="T:System.Collections.Generic.IEnumerator`1" />.</returns>
    </member>
    <member name="T:System.Data.TypedTableBaseExtensions">
      <summary>Contiene los métodos de extensión para la clase <see cref="T:System.Data.TypedTableBase`1" />.</summary>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})">
      <summary>Enumera los elementos de fila de datos de <see cref="T:System.Data.TypedTableBase`1" /> y devuelve un objeto <see cref="T:System.Data.EnumerableRowCollection`1" />, donde el parámetro <paramref name="T" /> genérico es <see cref="T:System.Data.DataRow" />. Este objeto puede usarse en una expresión LINQ o en una consulta de método.</summary>
      <param name="source">
        <see cref="T:System.Data.TypedTableBase`1" /> de origen que se va a volver enumerable.</param>
      <typeparam name="TRow">Tipo al que se van a convertir los elementos del origen.</typeparam>
      <returns>Objeto <see cref="T:System.Data.EnumerableRowCollection`1" />, donde el parámetro <paramref name="T" /> genérico es <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)">
      <summary>Devuelve el elemento situado en una fila especificada de una secuencia o un valor predeterminado si la fila está fuera del intervalo.</summary>
      <param name="source">Objeto enumerable del que se va a devolver un elemento.</param>
      <param name="index">Índice de base cero del elemento que se debe recuperar.</param>
      <typeparam name="TRow">Tipo de los elementos de la fila.</typeparam>
      <returns>Elemento situado en una fila especificada de una secuencia.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary>Ordena las filas de una colección <see cref="T:System.Data.TypedTableBase`1" /> en orden ascendente según la clave especificada.</summary>
      <param name="source">
        <see cref="T:System.Data.TypedTableBase`1" /> que contiene los elementos <see cref="T:System.Data.DataRow" /> que se van a ordenar.</param>
      <param name="keySelector">Función para extraer una clave a partir de un elemento.</param>
      <typeparam name="TRow">Tipo de los elementos de fila de <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Tipo de la clave devuelta por <paramref name="keySelector" />.</typeparam>
      <returns>
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cuyos elementos se ordenan según la clave especificada.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Ordena las filas de una colección <see cref="T:System.Data.TypedTableBase`1" /> en orden ascendente según la clave y el comparador especificados.</summary>
      <param name="source">
        <see cref="T:System.Data.TypedTableBase`1" /> que contiene los elementos <see cref="T:System.Data.DataRow" /> que se van a ordenar.</param>
      <param name="keySelector">Función para extraer una clave a partir de un elemento.</param>
      <param name="comparer">
        <see cref="T:System.Collections.Generic.IComparer`1" /> para comparar claves.</param>
      <typeparam name="TRow">Tipo de los elementos de fila de <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Tipo de la clave devuelta por <paramref name="keySelector" />.</typeparam>
      <returns>
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cuyos elementos se ordenan según la clave y el comparador especificados.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary>Ordena las filas de una colección <see cref="T:System.Data.TypedTableBase`1" /> en orden descendente según la clave especificada.</summary>
      <param name="source">
        <see cref="T:System.Data.TypedTableBase`1" /> que contiene los elementos <see cref="T:System.Data.DataRow" /> que se van a ordenar.</param>
      <param name="keySelector">Función para extraer una clave a partir de un elemento.</param>
      <typeparam name="TRow">Tipo de los elementos de fila de <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Tipo de la clave devuelta por <paramref name="keySelector" />.</typeparam>
      <returns>
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cuyos elementos se ordenan según la clave especificada.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Ordena las filas de una colección <see cref="T:System.Data.TypedTableBase`1" /> en orden descendente según la clave y el comparador especificados.</summary>
      <param name="source">
        <see cref="T:System.Data.TypedTableBase`1" /> que contiene los elementos <see cref="T:System.Data.DataRow" /> que se van a ordenar.</param>
      <param name="keySelector">Función para extraer una clave a partir de un elemento.</param>
      <param name="comparer">
        <see cref="T:System.Collections.Generic.IComparer`1" /> para comparar claves.</param>
      <typeparam name="TRow">Tipo de los elementos de fila de <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Tipo de la clave devuelta por <paramref name="keySelector" />.</typeparam>
      <returns>
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cuyos elementos se ordenan según la clave y el comparador especificados.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary>Proyecta cada elemento de <see cref="T:System.Data.TypedTableBase`1" /> en un nuevo formulario.</summary>
      <param name="source">
        <see cref="T:System.Data.TypedTableBase`1" /> que contiene los elementos de <see cref="T:System.Data.DataRow" /> en los que se va a invocar una función de transformación.</param>
      <param name="selector">Función de transformación que se va a aplicar a cada elemento.</param>
      <typeparam name="TRow">Tipo de los elementos de fila de <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="S" />
      <returns>
        <see cref="T:System.Data.EnumerableRowCollection`1" /> cuyos elementos son el resultado de invocar una función de transformación en cada elemento de <paramref name="source" />.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})">
      <summary>Filtra una secuencia de filas basándose en el predicado especificado.</summary>
      <param name="source">
        <see cref="T:System.Data.TypedTableBase`1" /> que contiene los elementos <see cref="T:System.Data.DataRow" /> que se van a filtrar.</param>
      <param name="predicate">Función para probar cada elemento de una condición.</param>
      <typeparam name="TRow">Tipo de los elementos de fila de <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <returns>
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> que contiene las filas de la secuencia de entrada que cumplen la condición.</returns>
    </member>
    <member name="T:System.Data.UniqueConstraint">
      <summary>Representa una restricción en un conjunto de columnas en el que todos los valores deben ser únicos.</summary>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.UniqueConstraint" /> con el objeto <see cref="T:System.Data.DataColumn" /> especificado.</summary>
      <param name="column">
        <see cref="T:System.Data.DataColumn" /> que se va a restringir.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.UniqueConstraint" /> con el <see cref="T:System.Data.DataColumn" /> que se va a restringir y un valor que especifica si la restricción es una clave principal.</summary>
      <param name="column">
        <see cref="T:System.Data.DataColumn" /> que se va a restringir.</param>
      <param name="isPrimaryKey">
        <see langword="true" /> para indicar que la restricción es una clave principal; en caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.UniqueConstraint" /> con la matriz de objetos dada <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="columns">Matriz de objetos <see cref="T:System.Data.DataColumn" /> que se va a restringir.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[],System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.UniqueConstraint" /> con una matriz de objetos <see cref="T:System.Data.DataColumn" /> que se va a restringir y un valor que especifica si la restricción es una clave principal.</summary>
      <param name="columns">Matriz de objetos <see cref="T:System.Data.DataColumn" /> que se va a restringir.</param>
      <param name="isPrimaryKey">
        <see langword="true" /> para indicar que la restricción es una clave principal; en caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.UniqueConstraint" /> con el nombre y <see cref="T:System.Data.DataColumn" /> especificados.</summary>
      <param name="name">Nombre de la restricción.</param>
      <param name="column">
        <see cref="T:System.Data.DataColumn" /> que se va a restringir.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.UniqueConstraint" /> con el nombre especificado, el <see cref="T:System.Data.DataColumn" /> que se va a restringir y un valor que especifica si la restricción es una clave principal.</summary>
      <param name="name">Nombre de la restricción.</param>
      <param name="column">
        <see cref="T:System.Data.DataColumn" /> que se va a restringir.</param>
      <param name="isPrimaryKey">
        <see langword="true" /> para indicar que la restricción es una clave principal; en caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.UniqueConstraint" /> con el nombre y la matriz de objetos <see cref="T:System.Data.DataColumn" /> especificados.</summary>
      <param name="name">Nombre de la restricción.</param>
      <param name="columns">Matriz de objetos <see cref="T:System.Data.DataColumn" /> que se va a restringir.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[],System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.UniqueConstraint" /> con el nombre especificado, una matriz de objetos <see cref="T:System.Data.DataColumn" /> que se va a restringir y un valor que especifica si la restricción es una clave principal.</summary>
      <param name="name">Nombre de la restricción.</param>
      <param name="columns">Matriz de objetos <see cref="T:System.Data.DataColumn" /> que se va a restringir.</param>
      <param name="isPrimaryKey">
        <see langword="true" /> para indicar que la restricción es una clave principal; en caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.String[],System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.UniqueConstraint" /> con el nombre especificado, una matriz de objetos <see cref="T:System.Data.DataColumn" /> que se va a restringir y un valor que especifica si la restricción es una clave principal.</summary>
      <param name="name">Nombre de la restricción.</param>
      <param name="columnNames">Matriz de objetos <see cref="T:System.Data.DataColumn" /> que se va a restringir.</param>
      <param name="isPrimaryKey">
        <see langword="true" /> para indicar que la restricción es una clave principal; en caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.Equals(System.Object)">
      <summary>Compara esta restricción con una segunda para determinar si ambas son idénticas.</summary>
      <param name="key2">Objeto con el que se compara este <see cref="T:System.Data.UniqueConstraint" />.</param>
      <returns>
        <see langword="true" /> si las restricciones son iguales; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.UniqueConstraint.GetHashCode">
      <summary>Obtiene el código hash de esta instancia del objeto <see cref="T:System.Data.UniqueConstraint" />.</summary>
      <returns>Código hash de un entero con signo de 32 bits.</returns>
    </member>
    <member name="P:System.Data.UniqueConstraint.Columns">
      <summary>Obtiene la matriz de columnas a la que afecta esta restricción.</summary>
      <returns>Matriz de objetos <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="P:System.Data.UniqueConstraint.IsPrimaryKey">
      <summary>Obtiene un valor que indica si la restricción está o no en una clave principal.</summary>
      <returns>
        <see langword="true" /> si la restricción está en una clave principal; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.UniqueConstraint.Table">
      <summary>Obtiene la tabla a la que pertenece esta restricción.</summary>
      <returns>Objeto <see cref="T:System.Data.DataTable" /> al que pertenece la restricción.</returns>
    </member>
    <member name="T:System.Data.UpdateRowSource">
      <summary>Especifica cómo se aplican los resultados del comando de consulta a la fila que se actualiza.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.Both">
      <summary>Tanto los parámetros de salida como la primera fila devuelta se asignan a la fila modificada en el <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.FirstReturnedRecord">
      <summary>Los datos de la primera fila devuelta se asignan a la fila modificada en el <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.None">
      <summary>Se pasan por alto todos los parámetros o filas devueltos.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.OutputParameters">
      <summary>Los parámetros de salida se asignan a la fila modificada en el <see cref="T:System.Data.DataSet" /> .</summary>
    </member>
    <member name="T:System.Data.UpdateStatus">
      <summary>Especifica la acción que se debe realizar sobre las filas actuales y pendientes mientras opera <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.Continue">
      <summary>
        <see cref="T:System.Data.Common.DataAdapter" /> debe continuar procesando filas.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.ErrorsOccurred">
      <summary>El controlador de eventos informa de que la actualización se debe tratar como un error.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.SkipAllRemainingRows">
      <summary>La fila actual y todas las filas pendientes no se deben actualizar.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.SkipCurrentRow">
      <summary>La fila actual no se debe actualizar.</summary>
    </member>
    <member name="T:System.Data.VersionNotFoundException">
      <summary>Representa la excepción que se produce al intentar devolver una versión de un objeto <see cref="T:System.Data.DataRow" /> que se ha eliminado.</summary>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.VersionNotFoundException" />.</summary>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.VersionNotFoundException" /> con información de serialización.</summary>
      <param name="info">Datos necesarios para serializar o deserializar un objeto.</param>
      <param name="context">Descripción del origen y el destino de la secuencia serializada especificada.</param>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.VersionNotFoundException" /> con la cadena especificada.</summary>
      <param name="s">Cadena que se muestra cuando se produce la excepción.</param>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.VersionNotFoundException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message">Mensaje de error que explica el motivo de la excepción.</param>
      <param name="innerException">La excepción que es la causa de la excepción actual o una referencia nula (<see langword="Nothing" /> en Visual Basic) si no se especifica ninguna excepción interna.</param>
    </member>
    <member name="T:System.Data.XmlReadMode">
      <summary>Especifica cómo leer datos XML y un esquema relacional en un <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.Auto">
      <summary>Modo de lectura predeterminado.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.DiffGram">
      <summary>Lee un DiffGram, aplicando los cambios del DiffGram a <see cref="T:System.Data.DataSet" />. La semántica es idéntica a la de una operación <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. Al igual que ocurre con la operación <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />, se conservan los valores <see cref="P:System.Data.DataRow.RowState" />. La entrada a <see cref="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)" /> mediante DiffGrams sólo se puede obtener si se utiliza la salida de <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> como un DiffGram.
        
El objeto <see cref="T:System.Data.DataSet" /> de destino debe tener el mismo esquema que el objeto <see cref="T:System.Data.DataSet" /> en el que se ha llamado a <see cref="Overload:System.Data.DataSet.WriteXml" /> como DiffGram. En caso contrario, se produce un error en la operación Merge de DiffGram y se inicia una excepción.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.Fragment">
      <summary>Lee fragmentos XML, como los que se generan al ejecutar consultas FOR XML, en una instancia de SQL Server. Al establecer <see cref="T:System.Data.XmlReadMode" /> en <see langword="Fragment" />, se lee el espacio de nombres predeterminado como el esquema en línea.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.IgnoreSchema">
      <summary>Omite cualquier esquema alineado y lee los datos del esquema del <see cref="T:System.Data.DataSet" /> existente. Si los datos no coinciden con el esquema existente, se descartan (incluidos los datos de espacios de nombres distintos definidos para el <see cref="T:System.Data.DataSet" />). Si los datos constituyen un DiffGram, <see langword="IgnoreSchema" /> tiene la misma funcionalidad que <see langword="DiffGram" />.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.InferSchema">
      <summary>Omite cualquier esquema en línea, deduce el esquema a partir de los datos y los carga. Si el <see cref="T:System.Data.DataSet" /> ya contiene un esquema, se extiende el esquema actual mediante la adición de nuevas tablas o la adición de columnas a las tablas existentes. Se producirá una excepción si la tabla deducida ya existe con un espacio de nombres distinto, o si cualquiera de las columnas deducidas entra en conflicto con las columnas existentes.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.InferTypedSchema">
      <summary>Omite cualquier esquema en línea, deduce el esquema fuertemente tipado a partir de los datos y los carga. Si el tipo no se puede deducir de los datos, se interpreta como datos de cadena. Si el <see cref="T:System.Data.DataSet" /> ya contiene un esquema, se extiende el esquema actual mediante la adición de nuevas tablas o columnas a las tablas existentes. Se producirá una excepción si la tabla deducida ya existe con un espacio de nombres distinto, o si cualquiera de las columnas deducidas entra en conflicto con las columnas existentes.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.ReadSchema">
      <summary>Lee cualquier esquema en línea y carga los datos. Si el <see cref="T:System.Data.DataSet" /> ya contiene un esquema, se pueden agregar al mismo las nuevas tablas, aunque se producirá una excepción si cualquier tabla del esquema en línea ya existe en el <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="T:System.Data.XmlWriteMode">
      <summary>Especifica cómo escribir datos XML y un esquema relacional a partir de un <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.DiffGram">
      <summary>Escribe el <see cref="T:System.Data.DataSet" /> completo como un DiffGram, incluidos los valores originales y actuales. Para generar un DiffGram que contenga únicamente valores modificados, llame a <see cref="M:System.Data.DataSet.GetChanges" /> y, a continuación, llame a <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> como un DiffGram del <see cref="T:System.Data.DataSet" /> devuelto.</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.IgnoreSchema">
      <summary>Escribe el contenido actual de <see cref="T:System.Data.DataSet" /> como datos XML, sin un esquema XSD. Si no se cargan datos en el <see cref="T:System.Data.DataSet" />, no se escribe nada.</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.WriteSchema">
      <summary>Escribe el contenido actual de <see cref="T:System.Data.DataSet" /> como datos XML con la estructura relacional como un esquema XSD en línea. Si el <see cref="T:System.Data.DataSet" /> sólo tiene un esquema sin datos, únicamente se escribe el esquema en línea. Si el <see cref="T:System.Data.DataSet" /> no tiene un esquema actual, no se escribe nada.</summary>
    </member>
    <member name="T:System.Xml.XmlDataDocument">
      <summary>Permite que los datos estructurados se almacenen, recuperen y manipulen mediante un <see cref="T:System.Data.DataSet" /> relacional.</summary>
    </member>
    <member name="M:System.Xml.XmlDataDocument.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlDataDocument" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlDataDocument" /> con el objeto <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataset">
        <see langword="DataSet" /> que se va a cargar en <see langword="XmlDataDocument" />.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
      <summary>Crea un duplicado del nodo actual.</summary>
      <param name="deep">
        <see langword="true" /> para clonar de forma recursiva el subárbol del nodo especificado; <see langword="false" /> solo para clonar el nodo en sí.</param>
      <returns>Nodo clonado.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
      <summary>Crea un elemento con los <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> y <see cref="P:System.Xml.XmlNode.NamespaceURI" /> especificados.</summary>
      <param name="prefix">Prefijo del elemento nuevo. Si es String.Empty o <see langword="null" />, no hay prefijo.</param>
      <param name="localName">Nombre local del nuevo elemento.</param>
      <param name="namespaceURI">Identificador de recursos uniforme (URI) del espacio de nombres del nuevo elemento. Si es String.Empty o <see langword="null" />, no hay URI del espacio de nombres.</param>
      <returns>Un nuevo objeto <see cref="T:System.Xml.XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
      <summary>Crea un objeto <see cref="T:System.Xml.XmlEntityReference" /> con el nombre especificado.</summary>
      <param name="name">Nombre de la referencia a entidad.</param>
      <exception cref="T:System.NotSupportedException">Llamada a este método.</exception>
      <returns>
        <see cref="T:System.Xml.XmlEntityReference" /> con el nombre especificado.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
      <summary>Crea un nuevo objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> para navegar por este documento. <see langword="XPathNavigator" /> se sitúa en el nodo que se especifica en el parámetro <paramref name="node" />.</summary>
      <param name="node">
        <see cref="T:System.Xml.XmlNode" /> en el que se desea que el explorador se sitúe inicialmente.</param>
      <returns>Objeto <see langword="XPathNavigator" /> que se utiliza para navegar por el documento.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
      <summary>Obtiene el <see cref="T:System.Xml.XmlElement" /> con el identificador especificado. La clase <see cref="T:System.Xml.XmlDataDocument" /> no admite este método. Si se llama a este método, se produce una excepción.</summary>
      <param name="elemId">Identificador de atributo con el que debe haber una coincidencia.</param>
      <exception cref="T:System.NotSupportedException">Llamada a este método.</exception>
      <returns>
        <see cref="T:System.Xml.XmlElement" /> con el Id. especificado.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)">
      <summary>Recupera el objeto <see cref="T:System.Xml.XmlElement" /> asociado al <see cref="T:System.Data.DataRow" /> especificado.</summary>
      <param name="r">Objeto <see langword="DataRow" /> cuyo <see langword="XmlElement" /> asociado se desea a recuperar.</param>
      <returns>
        <see langword="XmlElement" /> que contiene una representación del objeto <see langword="DataRow" /> especificado.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)">
      <summary>Devuelve un objeto <see cref="T:System.Xml.XmlNodeList" /> que contiene una lista de todos los elementos descendientes que coinciden con el <see cref="P:System.Xml.XmlDocument.Name" /> especificado.</summary>
      <param name="name">Nombre completo que se va a hacer coincidir. Se compara con la propiedad <see cref="P:System.Xml.XmlDocument.Name" /> del nodo coincidente. El valor especial "*" coincide con todas las etiquetas.</param>
      <returns>Objeto <see cref="T:System.Xml.XmlNodeList" /> que contiene una lista de todos los nodos coincidentes.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)">
      <summary>Recupera el objeto <see cref="T:System.Data.DataRow" /> asociado al <see cref="T:System.Xml.XmlElement" /> especificado.</summary>
      <param name="e">Objeto <see langword="XmlElement" /> cuyo <see langword="DataRow" /> asociado se desea a recuperar.</param>
      <returns>
        <see langword="DataRow" /> que contiene una representación de <see langword="XmlElement" />; <see langword="null" /> si no hay <see langword="DataRow" /> asociado a <see langword="XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
      <summary>Carga el objeto <see langword="XmlDataDocument" /> desde la secuencia especificada.</summary>
      <param name="inStream">Secuencia que contiene el documento XML que se va a cargar.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
      <summary>Carga <see langword="XmlDataDocument" /> desde el <see cref="T:System.IO.TextReader" /> especificado.</summary>
      <param name="txtReader">
        <see langword="TextReader" /> que se usa para introducir los datos XML en el documento.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.String)">
      <summary>Carga <see langword="XmlDataDocument" /> utilizando la dirección URL especificada.</summary>
      <param name="filename">Dirección URL del archivo que contiene el documento XML que se va a cargar.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
      <summary>Carga <see langword="XmlDataDocument" /> desde el <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="reader">
        <see langword="XmlReader" /> que contiene el documento XML que se va a cargar.</param>
      <exception cref="T:System.NotSupportedException">El documento XML que se está cargando contiene referencias a entidades y el lector no puede resolver entidades.</exception>
    </member>
    <member name="P:System.Xml.XmlDataDocument.DataSet">
      <summary>Obtiene un <see cref="T:System.Data.DataSet" /> que proporciona una representación relacional de los datos de <see langword="XmlDataDocument" />.</summary>
      <returns>
        <see langword="DataSet" /> que se puede utilizar para tener acceso a los datos de <see langword="XmlDataDocument" /> mediante un modelo relacional.</returns>
    </member>
  </members>
</doc>