<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Xaml</name>
  </assembly>
  <members>
    <member name="T:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute">
      <summary>Définit des types pour les rapports hérités relatifs aux caractéristiques d'extension de balisage XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute" />.</summary>
      <param name="type">Type de retour signalé par cet attribut.</param>
    </member>
    <member name="P:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute.Type">
      <summary>Obtient ou définit le type de retour que cet attribut signale.</summary>
      <returns>Type de retour signalé par cet attribut.</returns>
    </member>
    <member name="T:System.Windows.Markup.AmbientAttribute">
      <summary>Spécifie qu’une propriété ou un type doit être traité comme ambiant. Le concept de caractère ambiant renvoie à la façon dont les processeurs XAML déterminent les propriétaires de types des membres.</summary>
    </member>
    <member name="M:System.Windows.Markup.AmbientAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.AmbientAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.Markup.ArrayExtension">
      <summary>Implémente la prise en charge de <see langword="x:Array" /> pour les services XAML du .NET Framework.</summary>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.ArrayExtension" />. Un tableau vide est ainsi créé.</summary>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.#ctor(System.Array)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.ArrayExtension" /> selon le tableau brut fourni.</summary>
      <param name="elements">Contenu du tableau qui remplit le tableau créé.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.ArrayExtension" /> et initialise le type du tableau.</summary>
      <param name="arrayType">Type d’objet du nouveau tableau.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="arrayType" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.AddChild(System.Object)">
      <summary>Ajoute l’objet fourni à la fin du tableau.</summary>
      <param name="value">Objet à ajouter à la fin du tableau.</param>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.AddText(System.String)">
      <summary>Ajoute un nœud de texte comme nouvel élément de tableau.</summary>
      <param name="text">Texte à ajouter à la fin du tableau.</param>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.ProvideValue(System.IServiceProvider)">
      <summary>Retourne un tableau dont la taille correspond au nombre d’objets fournis dans les valeurs <see cref="P:System.Windows.Markup.ArrayExtension.Items" />.</summary>
      <param name="serviceProvider">Objet qui peut fournir des services pour l’extension de balisage.</param>
      <exception cref="T:System.InvalidOperationException">Un tableau qui ne fournissait pas de <see cref="P:System.Windows.Markup.ArrayExtension.Type" /> valide a été traité.  
  
- ou - 
Il existe une incompatibilité de type entre le <see cref="P:System.Windows.Markup.ArrayExtension.Type" /> déclaré du tableau et une ou plusieurs de ses valeurs <see cref="P:System.Windows.Markup.ArrayExtension.Items" />.</exception>
      <returns>Tableau créé, ou null.</returns>
    </member>
    <member name="P:System.Windows.Markup.ArrayExtension.Items">
      <summary>Obtient le contenu du tableau. Définissable en XAML via la syntaxe de collection XAML.</summary>
      <returns>Contenu du tableau.</returns>
    </member>
    <member name="P:System.Windows.Markup.ArrayExtension.Type">
      <summary>Obtient ou définit le type de tableau à créer lors de l’appel de <see cref="M:System.Windows.Markup.ArrayExtension.ProvideValue(System.IServiceProvider)" />.</summary>
      <returns>Type de tableau.</returns>
    </member>
    <member name="T:System.Windows.Markup.ConstructorArgumentAttribute">
      <summary>Spécifie qu’un objet peut être initialisé au moyen d’une syntaxe de constructeur autre qu’un constructeur sans paramètre, et qu’une propriété du nom spécifié fournit les informations de construction.  Ces informations sont principalement destinées à la sérialisation XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.ConstructorArgumentAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.ConstructorArgumentAttribute" />.</summary>
      <param name="argumentName">Nom du constructeur chargé d’initialiser la propriété associée.</param>
    </member>
    <member name="P:System.Windows.Markup.ConstructorArgumentAttribute.ArgumentName">
      <summary>Obtient le paramètre de nom du constructeur qui initialisera la propriété associée.</summary>
      <returns>Nom du constructeur. En supposant que le stockage CLR est utilisé, il correspond à <see cref="P:System.Reflection.ParameterInfo.Name" /> du paramètre de constructeur approprié.</returns>
    </member>
    <member name="T:System.Windows.Markup.ContentPropertyAttribute">
      <summary>Indique quelle propriété d’un type est la propriété de contenu XAML. Un processeur XAML utilise ces informations lors du traitement des éléments enfants XAML des représentations XAML du type attribué.</summary>
    </member>
    <member name="M:System.Windows.Markup.ContentPropertyAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.ContentPropertyAttribute" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.ContentPropertyAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.ContentPropertyAttribute" />, en utilisant le nom spécifié.</summary>
      <param name="name">Nom de la propriété qui est la propriété de contenu.</param>
    </member>
    <member name="P:System.Windows.Markup.ContentPropertyAttribute.Name">
      <summary>Obtient le nom de la propriété qui correspond à la propriété de contenu.</summary>
      <returns>Nom de la propriété qui correspond à la propriété de contenu.</returns>
    </member>
    <member name="T:System.Windows.Markup.ContentWrapperAttribute">
      <summary>Spécifie un ou plusieurs types sur le type de collection associé qui sera utilisé pour encapsuler le contenu étranger.</summary>
    </member>
    <member name="M:System.Windows.Markup.ContentWrapperAttribute.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.ContentWrapperAttribute" />.</summary>
      <param name="contentWrapper">
        <see cref="T:System.Type" /> qui est déclaré comme un wrapper de contenu pour le type de collection.</param>
    </member>
    <member name="M:System.Windows.Markup.ContentWrapperAttribute.Equals(System.Object)">
      <summary>Détermine si le <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> spécifié équivaut à ce <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> en comparant les propriétés <see cref="P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper" />.</summary>
      <param name="obj">
        <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> à comparer.</param>
      <returns>
        <see langword="true" /> si les propriétés <see cref="P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper" /> sont égales ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.ContentWrapperAttribute.GetHashCode">
      <summary>Obtient un code de hachage pour cette instance.</summary>
      <returns>Code de hachage entier.</returns>
    </member>
    <member name="P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper">
      <summary>Obtient le type qui est déclaré comme wrapper de contenu pour le type de collection associé à cet attribut.</summary>
      <returns>Type déclaré comme wrapper de contenu pour le type de collection.</returns>
    </member>
    <member name="P:System.Windows.Markup.ContentWrapperAttribute.TypeId">
      <summary>Obtient un identificateur unique pour cet attribut.</summary>
      <returns>Identificateur unique de l’attribut.</returns>
    </member>
    <member name="T:System.Windows.Markup.DateTimeValueSerializer">
      <summary>Convertit des instances de <see cref="T:System.String" /> en instances de <see cref="T:System.DateTime" /> et à partir de celles-ci.</summary>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.DateTimeValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Détermine si le <see cref="T:System.String" /> spécifié peut être converti en instance de <see cref="T:System.DateTime" />.</summary>
      <param name="value">Chaîne à évaluer pour la conversion.</param>
      <param name="context">Informations de contexte utilisées pour la conversion.</param>
      <returns>
        <see langword="true" /> si la valeur peut être convertie ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Détermine si l’objet spécifié peut être converti en <see cref="T:System.String" />.</summary>
      <param name="value">Objet à évaluer pour la conversion.</param>
      <param name="context">Informations de contexte utilisées pour la conversion.</param>
      <returns>
        <see langword="true" /> si <paramref name="value" /> peut être converti en <see cref="T:System.String" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Convertit un <see cref="T:System.String" /> en <see cref="T:System.DateTime" />.</summary>
      <param name="value">Chaîne à convertir en <see cref="T:System.DateTime" />.</param>
      <param name="context">Informations de contexte utilisées pour la conversion.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
      <returns>Nouvelle instance de <see cref="T:System.DateTime" /> basée sur le <paramref name="value" /> fourni.</returns>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Convertit une instance de <see cref="T:System.DateTime" /> en <see cref="T:System.String" />.</summary>
      <param name="value">Objet à convertir en chaîne.</param>
      <param name="context">Informations de contexte utilisées pour la conversion.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> n’est pas un <see cref="T:System.DateTime" /> ou est <see langword="null" />.</exception>
      <returns>Représentation sous forme de chaîne du <see cref="T:System.DateTime" /> spécifié.</returns>
    </member>
    <member name="T:System.Windows.Markup.DependsOnAttribute">
      <summary>Indique que la propriété avec attributs dépend de la valeur d’une autre propriété.</summary>
    </member>
    <member name="M:System.Windows.Markup.DependsOnAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.DependsOnAttribute" />.</summary>
      <param name="name">Propriété de laquelle dépend la propriété associée à ce <see cref="T:System.Windows.Markup.DependsOnAttribute" />.</param>
    </member>
    <member name="P:System.Windows.Markup.DependsOnAttribute.Name">
      <summary>Obtient le nom de la propriété associée déclarée dans <see cref="T:System.Windows.Markup.DependsOnAttribute" />.</summary>
      <returns>Nom de la propriété associée.</returns>
    </member>
    <member name="P:System.Windows.Markup.DependsOnAttribute.TypeId">
      <summary>Obtient un identificateur unique pour ce <see cref="T:System.Windows.Markup.DependsOnAttribute" />.</summary>
      <returns>Identificateur unique.</returns>
    </member>
    <member name="T:System.Windows.Markup.DictionaryKeyPropertyAttribute">
      <summary>Spécifie une propriété de la classe associée qui fournit la valeur de clé implicite. Les clés implicites sont utilisées pour les clés plutôt que pour les attributs <see langword="x:Key" /> explicites qui sont définis en XAML pour un élément dans les collections <see cref="T:System.Collections.IDictionary" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.DictionaryKeyPropertyAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.DictionaryKeyPropertyAttribute" />.</summary>
      <param name="name">Nom de la propriété qui fournit la valeur de clé implicite.</param>
    </member>
    <member name="P:System.Windows.Markup.DictionaryKeyPropertyAttribute.Name">
      <summary>Obtient le nom de la propriété qui fournit la valeur de clé implicite.</summary>
      <returns>Nom de la propriété qui fournit la valeur de clé implicite.</returns>
    </member>
    <member name="T:System.Windows.Markup.IComponentConnector">
      <summary>Assure une prise en charge des outils et de la compilation du balisage pour les éléments XAML nommés et pour attacher à ces derniers des gestionnaires d’événements.</summary>
    </member>
    <member name="M:System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)">
      <summary>Joint des événements et des noms au contenu compilé.</summary>
      <param name="connectionId">Jeton d’identificateur pour distinguer des appels.</param>
      <param name="target">Cible à laquelle connecter des événements et des noms.</param>
    </member>
    <member name="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
      <summary>Charge la page compilée d’un composant.</summary>
    </member>
    <member name="T:System.Windows.Markup.INameScope">
      <summary>Définit un contrat qui régit le mode d’accès aux noms d’éléments dans une portée de nom XAML déterminée et la façon dont l’unicité des noms est appliquée dans cette portée.</summary>
    </member>
    <member name="M:System.Windows.Markup.INameScope.FindName(System.String)">
      <summary>Retourne un objet qui a le nom d’identification fourni.</summary>
      <param name="name">Identificateur de nom de l’objet demandé.</param>
      <returns>Objet, s’il a été trouvé. Retourne <see langword="null" /> si aucun objet de ce nom n’a été trouvé.</returns>
    </member>
    <member name="M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)">
      <summary>Inscrit le nom fourni dans l’étendue de nom XAML actuelle.</summary>
      <param name="name">Nom à inscrire.</param>
      <param name="scopedElement">Élément spécifique auquel fait référence le <paramref name="name" /> fourni.</param>
    </member>
    <member name="M:System.Windows.Markup.INameScope.UnregisterName(System.String)">
      <summary>Désinscrit le nom fourni dans l’étendue de nom XAML actuelle.</summary>
      <param name="name">Nom à désinscrire.</param>
    </member>
    <member name="T:System.Windows.Markup.INameScopeDictionary">
      <summary>Unifie la prise en charge des objets énumérables, des collections et des dictionnaires qui est utile pour l'exposition d'un dictionnaire de noms dans une portée de nom XAML.</summary>
    </member>
    <member name="T:System.Windows.Markup.IProvideValueTarget">
      <summary>Représente un service qui fait état des relations de propriétés d’objet situationnelles pour l’évaluation de l’extension de balisage.</summary>
    </member>
    <member name="P:System.Windows.Markup.IProvideValueTarget.TargetObject">
      <summary>Obtient l’objet cible qui est signalé.</summary>
      <returns>Objet cible signalé.</returns>
    </member>
    <member name="P:System.Windows.Markup.IProvideValueTarget.TargetProperty">
      <summary>Obtient un identificateur pour la propriété cible qui est signalée.</summary>
      <returns>Identificateur de la propriété cible signalée.</returns>
    </member>
    <member name="T:System.Windows.Markup.IQueryAmbient">
      <summary>Demande si une propriété ambiante spécifiée doit être traitée comme étant ambiante dans la portée actuelle.</summary>
    </member>
    <member name="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)">
      <summary>Demande si une propriété nommée spécifiée peut être considérée comme ambiante dans la portée actuelle.</summary>
      <param name="propertyName">Nom de la propriété pour laquelle l'état ambiant doit être vérifié.</param>
      <returns>
        <see langword="true" /> si la propriété demandée peut être considérée comme ambiante ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Markup.IUriContext">
      <summary>Représente un service qui peut utiliser le contexte de l’application pour résoudre un URI relatif fourni en URI absolu.</summary>
    </member>
    <member name="P:System.Windows.Markup.IUriContext.BaseUri">
      <summary>Obtient ou définit l’URI de base du contexte d’application actuel.</summary>
      <returns>URI de base du contexte d’application.</returns>
    </member>
    <member name="T:System.Windows.Markup.IValueSerializerContext">
      <summary>Définit un contexte fourni à un <see cref="T:System.Windows.Markup.ValueSerializer" />. Le contexte peut être utilisé pour activer des cas spéciaux de sérialisation ou différents modes de sérialisation.</summary>
    </member>
    <member name="M:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor(System.ComponentModel.PropertyDescriptor)">
      <summary>Obtient <see cref="T:System.Windows.Markup.ValueSerializer" /> pour le descripteur de propriété donné.</summary>
      <param name="descriptor">Descripteur de la propriété en cours de conversion.</param>
      <returns>
        <see cref="T:System.Windows.Markup.ValueSerializer" /> capable de sérialiser la propriété spécifiée.</returns>
    </member>
    <member name="M:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor(System.Type)">
      <summary>Obtient le <see cref="T:System.Windows.Markup.ValueSerializer" /> associé au type spécifié.</summary>
      <param name="type">Type de la valeur convertie.</param>
      <returns>
        <see cref="T:System.Windows.Markup.ValueSerializer" /> capable de sérialiser le type spécifié.</returns>
    </member>
    <member name="T:System.Windows.Markup.IXamlTypeResolver">
      <summary>Représente un service qui résout des éléments nommés dans le balisage XAML en type CLR approprié.</summary>
    </member>
    <member name="M:System.Windows.Markup.IXamlTypeResolver.Resolve(System.String)">
      <summary>Résout un type XAML nommé en <see cref="T:System.Type" /> CLR correspondant.</summary>
      <param name="qualifiedTypeName">Nom du type XAML à résoudre. Le nom du type est éventuellement qualifié par le préfixe pour un espace de noms XML. Dans le cas contraire, il s’agit de l’espace de noms XML par défaut actuel.</param>
      <returns>
        <see cref="T:System.Type" /> dans lequel <paramref name="qualifiedTypeName" /> est résolu.</returns>
    </member>
    <member name="T:System.Windows.Markup.MarkupExtension">
      <summary>Fournit une classe de base pour les implémentations d’extension de balisage XAML qui peuvent être prises en charge par les services XAML .NET Framework et d’autres lecteurs et writers XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtension.#ctor">
      <summary>Initialise une nouvelle instance d’une classe dérivée de <see cref="T:System.Windows.Markup.MarkupExtension" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
      <summary>En cas d’implémentation dans une classe dérivée, retourne un objet qui est fourni comme valeur de la propriété cible de cette extension de balisage.</summary>
      <param name="serviceProvider">Assistance de fournisseur de service qui peut fournir des services pour l’extension de balisage.</param>
      <returns>Valeur d’objet à définir sur la propriété où l’extension est appliquée.</returns>
    </member>
    <member name="T:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute">
      <summary>Indique les caractères de crochet qu’une extension de balisage peut retourner.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute.#ctor(System.Char,System.Char)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute" /> à l’aide des caractères fournis.</summary>
      <param name="openingBracket">
        <see cref="T:System.Char" /> définissant le caractère de crochet d’ouverture.</param>
      <param name="closingBracket">
        <see cref="T:System.Char" /> définissant le caractère de crochet de fermeture.</param>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute.ClosingBracket">
      <summary>Spécifie le caractère à utiliser comme délimiteur de fermeture dans un <see cref="T:System.Windows.Markup.MarkupExtension" />.</summary>
      <returns>
        <see cref="T:System.Char" /> représentant le caractère.</returns>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute.OpeningBracket">
      <summary>Spécifie le caractère à utiliser comme délimiteur d’ouverture dans un <see cref="T:System.Windows.Markup.MarkupExtension" />.</summary>
      <returns>
        <see cref="T:System.Char" /> représentant le caractère.</returns>
    </member>
    <member name="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute">
      <summary>Indique le type qu’une extension de balisage peut retourner.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" /> à l'aide du <see cref="T:System.Type" /> fourni.</summary>
      <param name="returnType">Type de retour signalé par cet attribut.</param>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor(System.Type,System.Type)">
      <summary>Déprécié ; ne pas utiliser.</summary>
      <param name="returnType">Type de retour signalé par ce attribut .NET Framework.</param>
      <param name="expressionType">Déprécié ; ne pas utiliser.</param>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.ExpressionType">
      <summary>Déprécié ; ne pas utiliser.</summary>
      <returns>Déprécié ; ne pas utiliser.</returns>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.ReturnType">
      <summary>Obtient le type de retour de <see cref="T:System.Windows.Markup.MarkupExtension" /> signalé par cet attribut .NET Framework .</summary>
      <returns>Type de retour de type sécurisé de l' <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> implémentation spécifique de l’extension de balisage où <see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" /> attribut .NET Framework est appliqué.</returns>
    </member>
    <member name="T:System.Windows.Markup.MemberDefinition">
      <summary>Fournit la classe de base qui est utilisée par une technique de balisage permettant de définir les membres d'une classe au moyen du langage XAML déclaratif.</summary>
    </member>
    <member name="M:System.Windows.Markup.MemberDefinition.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.MemberDefinition" />.</summary>
    </member>
    <member name="P:System.Windows.Markup.MemberDefinition.Name">
      <summary>En cas d'implémentation dans une classe dérivée, obtient ou définit le nom du membre à spécifier.</summary>
      <returns>Nom du membre à spécifier.</returns>
    </member>
    <member name="T:System.Windows.Markup.NameReferenceConverter">
      <summary>Fournit la conversion de type permettant de convertir un nom de chaîne en une référence à l'objet portant ce nom ou de retourner le nom d'un objet à partir du graphique d'objet.</summary>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.NameReferenceConverter" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Retourne une valeur indiquant si ce convertisseur peut convertir un objet d'un certain type en un autre objet.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</param>
      <param name="sourceType">
        <see cref="T:System.Type" /> qui représente le type à partir duquel opérer la conversion.</param>
      <returns>
        <see langword="true" /> si ce convertisseur peut effectuer la conversion ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Retourne une valeur qui indique si le convertisseur peut convertir un objet vers le type de destination spécifié.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</param>
      <param name="destinationType">Type vers lequel effectuer la conversion.</param>
      <returns>
        <see langword="true" /> si le convertisseur peut effectuer la conversion ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Convertit l'objet fourni en un autre objet, à l'aide des informations de contexte et de culture spécifiées.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> à utiliser comme culture actuelle.</param>
      <param name="value">Chaîne de nom de référence à convertir.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="value" /> est une chaîne null ou vide.  
  
- ou - 
 Le service <see cref="T:System.Xaml.IXamlNameResolver" /> est absent ou non valide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> a la valeur <see langword="null" />.</exception>
      <returns>Objet retourné qui peut correspondre à tout objet mappé par type dans les assemblys de stockage appropriés et pouvant être déclaré en XAML avec une référence de nom XAML.</returns>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Convertit un objet dans le type spécifié. Cette méthode vise à retourner des noms de référence XAML pour les objets d'un graphique d'objet.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> à utiliser comme culture actuelle.</param>
      <param name="value">Objet pour lequel le nom de référence doit être récupéré.</param>
      <param name="destinationType">Type à retourner. Vous devez toujours référencer le type <see cref="T:System.String" />.</param>
      <exception cref="T:System.InvalidOperationException">Le service <see cref="T:System.Xaml.IXamlNameProvider" /> est absent ou non valide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> a la valeur <see langword="null" />.</exception>
      <returns>Nom de référence de l'objet <paramref name="value" /> d'entrée.</returns>
    </member>
    <member name="T:System.Windows.Markup.NameScopePropertyAttribute">
      <summary>Spécifie une propriété de la classe associée qui fournit la valeur de la portée de nom XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.NameScopePropertyAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.NameScopePropertyAttribute" /> avec le nom spécifié.</summary>
      <param name="name">Nom de la propriété du type avec attributs qui fournit la portée de noms XAML.</param>
    </member>
    <member name="M:System.Windows.Markup.NameScopePropertyAttribute.#ctor(System.String,System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.NameScopePropertyAttribute" /> avec le nom et le type spécifiés.</summary>
      <param name="name">Nom du membre pouvant être attaché qui fournit la portée de nom XAML.</param>
      <param name="type">Type de propriétaire du membre pouvant être attaché qui fournit la portée de nom XAML.</param>
    </member>
    <member name="P:System.Windows.Markup.NameScopePropertyAttribute.Name">
      <summary>Obtient le nom de la propriété qui fournit la portée de nom XAML.</summary>
      <returns>Valeur de chaîne qui est le nom de la propriété qui fournit la portée de nom XAML.</returns>
    </member>
    <member name="P:System.Windows.Markup.NameScopePropertyAttribute.Type">
      <summary>Obtient le type de propriétaire de la propriété jointe qui fournit la prise en charge du NameScope XAML.</summary>
      <returns>Valeur de <see cref="T:System.Type" /> qui est le type de propriétaire de la propriété jointe qui fournit la prise en charge du NameScope XAML, ou <see langword="null" />.</returns>
    </member>
    <member name="T:System.Windows.Markup.NullExtension">
      <summary>Implémente une extension de balisage XAML pour retourner un objet null. Vous pouvez vous en servir pour définir explicitement des valeurs null en XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.NullExtension.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.NullExtension" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.NullExtension.ProvideValue(System.IServiceProvider)">
      <summary>Fournit <see langword="null" /> à utiliser comme valeur de sortie de cette extension de balisage.</summary>
      <param name="serviceProvider">Objet qui peut fournir des services pour l’implémentation de l’extension de balisage.</param>
      <returns>Référence null.</returns>
    </member>
    <member name="T:System.Windows.Markup.PropertyDefinition">
      <summary>Prend en charge une technique de balisage permettant de définir les propriétés d'une classe dans le langage XAML déclaratif.</summary>
    </member>
    <member name="M:System.Windows.Markup.PropertyDefinition.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.PropertyDefinition" />.</summary>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Attributes">
      <summary>Obtient une liste des attributs CLR associés.</summary>
      <returns>Liste des attributs associés.</returns>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Modifier">
      <summary>Obtient ou définit le niveau d'accès de la propriété définie.</summary>
      <returns>Niveau d'accès de la propriété définie, sous forme de chaîne.</returns>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Name">
      <summary>Obtient ou définit le nom de la propriété à définir.</summary>
      <returns>Nom de la propriété à définir.</returns>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Type">
      <summary>Obtient ou définir le <see cref="T:System.Xaml.XamlType" /> de la propriété à définir.</summary>
      <returns>Identificateur de type XAML de la propriété à définir.</returns>
    </member>
    <member name="T:System.Windows.Markup.Reference">
      <summary>Implémente l’extension de balisage <c>{x:Reference}</c>.</summary>
    </member>
    <member name="M:System.Windows.Markup.Reference.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.Reference" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.Reference.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.Reference" /> avec l'argument <paramref name="name" />.</summary>
      <param name="name">Nom XAML de l'élément à référencer.</param>
    </member>
    <member name="M:System.Windows.Markup.Reference.ProvideValue(System.IServiceProvider)">
      <summary>Retourne un objet qui est la valeur de la propriété cible. Pour le type <see cref="T:System.Windows.Markup.Reference" />, il s’agit de l’objet auquel le <see cref="P:System.Windows.Markup.Reference.Name" /> fourni fait référence.</summary>
      <param name="serviceProvider">Classe qui implémente le service <see cref="T:System.Xaml.IXamlNameResolver" />.</param>
      <exception cref="T:System.InvalidOperationException">La valeur <paramref name="serviceProvider" /> n’implémente pas le service <see cref="T:System.Xaml.IXamlNameResolver" />.  
  
- ou - 
 La valeur <see cref="P:System.Windows.Markup.Reference.Name" /> n’a pas été définie via une utilisation de position ou de construction.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceProvider" /> a la valeur <see langword="null" />.</exception>
      <returns>Valeur de la propriété cible. Il s’agit potentiellement de tout objet mappé par type dans les assemblys de stockage appropriés.</returns>
    </member>
    <member name="P:System.Windows.Markup.Reference.Name">
      <summary>Obtient ou définit le nom XAML pour lequel la référence doit être obtenue.</summary>
      <returns>Nom XAML de l'élément pour lequel la référence doit être obtenue.</returns>
    </member>
    <member name="T:System.Windows.Markup.RootNamespaceAttribute">
      <summary>Représente un attribut de niveau assembly utilisé pour identifier la valeur de la propriété <see langword="RootNamespace" /> dans un fichier projet Visual Studio.</summary>
    </member>
    <member name="M:System.Windows.Markup.RootNamespaceAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.RootNamespaceAttribute" />.</summary>
      <param name="nameSpace">Valeur de l’espace de noms racine.</param>
    </member>
    <member name="P:System.Windows.Markup.RootNamespaceAttribute.Namespace">
      <summary>Obtient la chaîne qui correspond à la valeur de la propriété <see langword="RootNamespace" /> dans un fichier projet Visual Studio.</summary>
      <returns>Chaîne qui correspond à la valeur de la <see langword="RootNamespace" /> propriété dans un fichier projet Visual Studio.</returns>
    </member>
    <member name="T:System.Windows.Markup.RuntimeNamePropertyAttribute">
      <summary>Représente un attribut de niveau type qui signale quelle propriété du type correspond à l’attribut x:Name XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.RuntimeNamePropertyAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.RuntimeNamePropertyAttribute" />.</summary>
      <param name="name">Nom de la propriété à utiliser comme <see langword="x:Name" /> équivalent de la classe.</param>
    </member>
    <member name="P:System.Windows.Markup.RuntimeNamePropertyAttribute.Name">
      <summary>Obtient le nom de la propriété de nom d’exécution spécifiée par <see cref="T:System.Windows.Markup.RuntimeNamePropertyAttribute" />.</summary>
      <returns>Nom de la propriété.</returns>
    </member>
    <member name="T:System.Windows.Markup.StaticExtension">
      <summary>Implémente une extension de balisage qui retourne des références de champs et de propriétés statiques.</summary>
    </member>
    <member name="M:System.Windows.Markup.StaticExtension.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.StaticExtension" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.StaticExtension.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.StaticExtension" /> à l’aide de la chaîne <paramref name="member" /> fournie.</summary>
      <param name="member">Chaîne qui identifie le membre auquel faire référence. Cette chaîne utilise le format <c>préfixe:nom-type.nom_champ_ou_propriété</c>. <c>préfixe</c> est le préfixe de mappage pour un espace de noms XAML et est nécessaire seulement pour référencer des valeurs statiques non mappées à l’espace de noms XAML par défaut.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="member" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.StaticExtension.ProvideValue(System.IServiceProvider)">
      <summary>Retourne une valeur d’objet à définir sur la propriété où vous appliquez cette extension. Pour <see cref="T:System.Windows.Markup.StaticExtension" />, la valeur de retour est la valeur statique qui est évaluée pour le membre statique demandé.</summary>
      <param name="serviceProvider">Objet qui peut fournir des services pour l’extension de balisage. Le fournisseur de services est censé fournir un service qui implémente un résolveur de type (<see cref="T:System.Windows.Markup.IXamlTypeResolver" />).</param>
      <exception cref="T:System.InvalidOperationException">La valeur <paramref name="member" /> de l’extension est <see langword="null" /> au moment de l’évaluation.</exception>
      <exception cref="T:System.ArgumentException">Une partie de la chaîne <paramref name="member" /> n’a pas été analysée correctement 
- ou - 
 <paramref name="serviceProvider" /> n’a pas fourni de service pour <see cref="T:System.Windows.Markup.IXamlTypeResolver" />  
  
- ou - 
 La valeur <paramref name="member" /> n’a pas été résolue en un membre statique.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceProvider" /> a la valeur <see langword="null" />.</exception>
      <returns>Valeur statique à définir sur la propriété où l’extension est appliquée.</returns>
    </member>
    <member name="P:System.Windows.Markup.StaticExtension.Member">
      <summary>Obtient ou définit une chaîne de nom de membre utilisée pour résoudre une propriété ou un champ statique en fonction du programme de résolution de type fourni par le service.</summary>
      <exception cref="T:System.ArgumentNullException">Tentative d’affectation de la valeur <see langword="null" /> à <see cref="P:System.Windows.Markup.StaticExtension.Member" />.</exception>
      <returns>Chaîne qui identifie le membre auquel faire référence.</returns>
    </member>
    <member name="P:System.Windows.Markup.StaticExtension.MemberType">
      <summary>Obtient ou définit le <see cref="T:System.Type" /> qui définit le membre statique à retourner.</summary>
      <exception cref="T:System.ArgumentNullException">Tentative d’affectation de la valeur <see langword="null" /> à <see cref="P:System.Windows.Markup.StaticExtension.MemberType" />.</exception>
      <returns>
        <see cref="T:System.Type" /> qui définit le membre statique à retourner.</returns>
    </member>
    <member name="T:System.Windows.Markup.TrimSurroundingWhitespaceAttribute">
      <summary>Indique aux processeurs XAML que les espaces blancs encadrant les éléments de type dans le balisage doivent être supprimés au moment de la sérialisation.</summary>
    </member>
    <member name="M:System.Windows.Markup.TrimSurroundingWhitespaceAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.TrimSurroundingWhitespaceAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.Markup.TypeExtension">
      <summary>Implémente une extension de balisage qui retourne <see cref="T:System.Type" /> en fonction d’une entrée de chaîne.</summary>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.TypeExtension" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.TypeExtension" />, tout en initialisant la valeur <see cref="P:System.Windows.Markup.TypeExtension.TypeName" /> en fonction de la chaîne <paramref name="typeName" /> fournie.</summary>
      <param name="typeName">Chaîne qui identifie le type auquel faire référence. Cette chaîne utilise le format <c>préfixe:nom_classe</c>. <c>préfixe</c> est le préfixe de mappage pour un espace de noms XAML, nécessaire seulement pour référencer des types non mappés à l’espace de noms XAML par défaut.</param>
      <exception cref="T:System.ArgumentNullException">Tentative de spécification de <paramref name="typeName" /> comme <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.TypeExtension" /> en déclarant directement le type.</summary>
      <param name="type">Type devant être représenté par ce <see cref="T:System.Windows.Markup.TypeExtension" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
      <summary>Retourne un objet qui doit être défini sur la propriété où cette extension est appliquée. Pour <see cref="T:System.Windows.Markup.TypeExtension" />, il s’agit de la valeur de <see cref="T:System.Type" /> telle qu’évaluée pour le nom du type demandé.</summary>
      <param name="serviceProvider">Objet qui peut fournir des services pour l’extension de balisage. Le fournisseur est supposé fournir un service pour <see cref="T:System.Windows.Markup.IXamlTypeResolver" />.</param>
      <exception cref="T:System.InvalidOperationException">La valeur de <paramref name="member" /> pour l’extension est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Une partie de la chaîne <paramref name="typeName" /> n’a pas été analysée correctement.  
  
- ou - 
 <paramref name="serviceProvider" /> n’a pas fourni de service pour <see cref="T:System.Windows.Markup.IXamlTypeResolver" />  
  
- ou - 
 La valeur <paramref name="typeName" /> n’a pas été résolue en un type.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceProvider" /> a la valeur <see langword="null" />.</exception>
      <returns>
        <see cref="T:System.Type" /> à définir sur la propriété où l’extension est appliquée.</returns>
    </member>
    <member name="P:System.Windows.Markup.TypeExtension.Type">
      <summary>Obtient ou définit les informations de type pour cette extension.</summary>
      <exception cref="T:System.ArgumentNullException">Tentative d’affectation de la valeur <see langword="null" /></exception>
      <returns>Type établi. Pour l’exécution, ceci peut avoir la valeur <see langword="null" /> pour obtenir l’accès, mais ne peut pas être défini sur <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.TypeExtension.TypeName">
      <summary>Obtient ou définit le nom du type représenté par cette extension de balisage.</summary>
      <exception cref="T:System.ArgumentNullException">Tentative d’affectation de la valeur <see langword="null" /></exception>
      <returns>Chaîne qui identifie le type. Cette chaîne utilise le format préfixe<c>:</c>className. (lepréfixe est le préfixe de mappage pour un espace de noms XML et n’est requis que pour référencer des types qui ne sont pas mappés à l’espace de noms XML par défaut pour WPF ( <c>http://schemas.microsoft.com/winfx/2006/xaml/presentation</c> ).</returns>
    </member>
    <member name="T:System.Windows.Markup.UidPropertyAttribute">
      <summary>Indique la propriété CLR d’une classe qui fournit la valeur de la directive x:Uid.</summary>
    </member>
    <member name="M:System.Windows.Markup.UidPropertyAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.UidPropertyAttribute" />.</summary>
      <param name="name">Le nom de la propriété qui fournit la valeur <see langword="x:Uid" />.</param>
    </member>
    <member name="P:System.Windows.Markup.UidPropertyAttribute.Name">
      <summary>Obtient le nom de la propriété CLR qui représente la valeur de la directive x:Uid.</summary>
      <returns>Nom de la propriété CLR qui représente la valeur de la directive x:Uid.</returns>
    </member>
    <member name="T:System.Windows.Markup.UsableDuringInitializationAttribute">
      <summary>Indique si ce type est généré de haut en bas lors de la création d’un graphique d’objet XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.UsableDuringInitializationAttribute.#ctor(System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.UsableDuringInitializationAttribute" />.</summary>
      <param name="usable">Indique si la classe associée est utilisable pendant l’initialisation.</param>
    </member>
    <member name="P:System.Windows.Markup.UsableDuringInitializationAttribute.Usable">
      <summary>Obtient une valeur qui indique si la classe associée est utilisable lors de l’initialisation.</summary>
      <returns>
        <see langword="true" /> si la classe associée est utilisable lors de l’initialisation ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Markup.ValueSerializer">
      <summary>Classe abstraite qui définit le comportement de conversion pour la sérialisation à partir d’une représentation sous forme d’objet.</summary>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.ValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>En cas de substitution dans une classe dérivée, détermine si le <see cref="T:System.String" /> spécifié peut être converti en instance du type que l’implémentation de <see cref="T:System.Windows.Markup.ValueSerializer" /> prend en charge.</summary>
      <param name="value">Chaîne à évaluer pour la conversion.</param>
      <param name="context">Informations de contexte utilisées pour la conversion.</param>
      <returns>
        <see langword="true" /> si la valeur peut être convertie ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>En cas de remplacement dans une classe dérivée, détermine si l’objet spécifié peut être converti en <see cref="T:System.String" />.</summary>
      <param name="value">Objet à évaluer pour la conversion.</param>
      <param name="context">Informations de contexte utilisées pour la conversion.</param>
      <returns>
        <see langword="true" /> Si <paramref name="value" /> peut être converti en <see cref="T:System.String" /> ; sinon, <see langword="false" /> .</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>En cas de substitution dans une classe dérivée, convertit un <see cref="T:System.String" /> en une instance du type que l’implémentation de <see cref="T:System.Windows.Markup.ValueSerializer" /> prend en charge.</summary>
      <param name="value">Chaîne à convertir.</param>
      <param name="context">Informations de contexte utilisées pour la conversion.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> ne peut pas être converti.</exception>
      <returns>Nouvelle instance du type que l’implémentation de <see cref="T:System.Windows.Markup.ValueSerializer" /> prend en charge en fonction du <paramref name="value" /> fourni.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>En cas de substitution dans une classe dérivée, convertit l’objet spécifié en <see cref="T:System.String" />.</summary>
      <param name="value">Objet à convertir en chaîne.</param>
      <param name="context">Informations de contexte utilisées pour la conversion.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> ne peut pas être converti.</exception>
      <returns>Représentation sous forme de chaîne de l’objet spécifié.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetConvertFromException(System.Object)">
      <summary>Retourne une exception à lever quand une conversion ne peut pas être effectuée.</summary>
      <param name="value">Objet qui n’a pas pu être converti.</param>
      <returns>Objet <see cref="T:System.Exception" /> pour l’exception à lever quand une conversion <see langword="ConvertFrom" /> ne peut pas être effectuée.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetConvertToException(System.Object,System.Type)">
      <summary>Retourne une exception à lever quand une conversion ne peut pas être effectuée.</summary>
      <param name="value">Objet qui n’a pas pu être converti.</param>
      <param name="destinationType">Type qui représente le type cible de la tentative de conversion.</param>
      <returns>Objet <see cref="T:System.Exception" /> pour l’exception à lever quand une conversion <see langword="ConvertTo" /> ne peut pas être effectuée.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor)">
      <summary>Obtient le <see cref="T:System.Windows.Markup.ValueSerializer" /> déclaré pour une propriété, en passant un descripteur de propriété CLR pour la propriété.</summary>
      <param name="descriptor">Descripteur de propriété CLR pour la propriété à sérialiser.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="descriptor" /> a la valeur <see langword="null" />.</exception>
      <returns>Sérialiseur associé à la propriété spécifiée. Peut retourner la valeur <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor,System.Windows.Markup.IValueSerializerContext)">
      <summary>Obtient le <see cref="T:System.Windows.Markup.ValueSerializer" /> déclaré pour la propriété spécifiée en utilisant le contexte spécifié.</summary>
      <param name="descriptor">Descripteur de la propriété à sérialiser.</param>
      <param name="context">Informations de contexte utilisées pour la conversion.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="descriptor" /> a la valeur <see langword="null" />.</exception>
      <returns>Sérialiseur associé à la propriété spécifiée.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type)">
      <summary>Obtient le <see cref="T:System.Windows.Markup.ValueSerializer" /> déclaré pour le type spécifié.</summary>
      <param name="type">Type pour lequel obtenir <see cref="T:System.Windows.Markup.ValueSerializer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> a la valeur <see langword="null" />.</exception>
      <returns>Sérialiseur associé au type spécifié. Peut retourner la valeur <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type,System.Windows.Markup.IValueSerializerContext)">
      <summary>Obtient le <see cref="T:System.Windows.Markup.ValueSerializer" /> déclaré pour le type spécifié, à l’aide du contexte spécifié.</summary>
      <param name="type">Type pour lequel obtenir <see cref="T:System.Windows.Markup.ValueSerializer" />.</param>
      <param name="context">Informations de contexte utilisées pour la conversion.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> a la valeur <see langword="null" />.</exception>
      <returns>Sérialiseur associé au type spécifié.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.TypeReferences(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Obtient une énumération des types référencés par <see cref="T:System.Windows.Markup.ValueSerializer" />.</summary>
      <param name="value">Valeur en cours de sérialisation.</param>
      <param name="context">Informations de contexte utilisées pour la conversion.</param>
      <returns>Types convertis par ce sérialiseur.</returns>
    </member>
    <member name="T:System.Windows.Markup.WhitespaceSignificantCollectionAttribute">
      <summary>Indique qu’un type de collection doit être traité en tant que collection significative d’espaces blancs par un processeur XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.WhitespaceSignificantCollectionAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.WhitespaceSignificantCollectionAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.Markup.XamlDeferLoadAttribute">
      <summary>Indique qu'une classe ou une propriété utilise le chargement différé pour XAML (par exemple, dans un comportement de modèle), et signale la classe qui active le comportement de report et son type de destination/contenu.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlDeferLoadAttribute.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.XamlDeferLoadAttribute" /> à l'aide des noms de chaîne des types.</summary>
      <param name="loaderType">Nom de chaîne du type que l'implémentation doit utiliser pour le comportement de chargement différé.</param>
      <param name="contentType">Nom de chaîne du type de destination/contenu du comportement de chargement différé.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="loaderType" /> ou <paramref name="contentType" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlDeferLoadAttribute.#ctor(System.Type,System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.XamlDeferLoadAttribute" /> à l'aide des valeurs <see cref="T:System.Type" /> CLR.</summary>
      <param name="loaderType">Valeur <see cref="T:System.Type" /> CLR que l'implémentation doit utiliser pour le comportement de chargement différé.</param>
      <param name="contentType">Valeur <see cref="T:System.Type" /> CLR du type de destination/contenu du comportement de chargement différé.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="loaderType" /> ou <paramref name="contentType" /> est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.ContentType">
      <summary>Obtient la valeur <see cref="T:System.Type" /> CLR du type de destination/contenu du comportement de chargement différé.</summary>
      <returns>Valeur <see cref="T:System.Type" /> CLR du type de destination/contenu du comportement de chargement différé.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.ContentTypeName">
      <summary>Obtient le nom de chaîne du type que l'implémentation doit utiliser pour le comportement de chargement différé.</summary>
      <returns>Nom de chaîne du type que le convertisseur doit utiliser pour le comportement de chargement différé.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.LoaderType">
      <summary>Obtient la valeur <see cref="T:System.Type" /> CLR que l'implémentation doit utiliser pour le comportement de chargement différé.</summary>
      <returns>Valeur <see cref="T:System.Type" /> CLR que l'implémentation doit utiliser pour le comportement de chargement différé.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.LoaderTypeName">
      <summary>Obtient le nom de chaîne du type de destination/contenu du comportement de chargement différé.</summary>
      <returns>Nom de chaîne du type de destination/contenu du comportement de chargement différé.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute">
      <summary>Indique qu'une classe peut utiliser une extension de balisage pour fournir une valeur et référence un gestionnaire à utiliser pour les opérations ensemblistes d'extension de balisage.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetMarkupExtensionAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute" />.</summary>
      <param name="xamlSetMarkupExtensionHandler">Nom du gestionnaire à utiliser pour les opérations ensemblistes d'extension de balisage.</param>
    </member>
    <member name="P:System.Windows.Markup.XamlSetMarkupExtensionAttribute.XamlSetMarkupExtensionHandler">
      <summary>Obtient le nom du gestionnaire à utiliser pour les opérations ensemblistes d'extension de balisage.</summary>
      <returns>Nom du gestionnaire à utiliser pour les opérations ensemblistes d'extension de balisage.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs">
      <summary>Fournit des données pour les rappels qui sont effectués lorsqu'un writer d'objet XAML définit une valeur à l'aide d'une extension de balisage.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.#ctor(System.Xaml.XamlMember,System.Windows.Markup.MarkupExtension,System.IServiceProvider)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />.</summary>
      <param name="member">Informations de schéma/système de type XAML du membre qui est défini.</param>
      <param name="value">Référence d'extension de balisage à fournir pour le membre qui est défini.</param>
      <param name="serviceProvider">Informations sur le fournisseur de services passées à l'extension de balisage.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.CallBase">
      <summary>Permet d'effectuer un rappel tel qu'il est défini sur une classe de base du type actuel.</summary>
    </member>
    <member name="P:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.MarkupExtension">
      <summary>Obtient la référence <see cref="T:System.Windows.Markup.MarkupExtension" /> qui est appropriée pour ce <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />.</summary>
      <returns>Référence d'extension de balisage qui est appropriée pour ce <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.ServiceProvider">
      <summary>Obtient les informations sur le fournisseur de services qui ont été passées à l'extension de balisage.</summary>
      <returns>Informations de fournisseur de services qui ont été passées à l'extension de balisage.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetTypeConverterAttribute">
      <summary>Indique qu'une classe peut utiliser un convertisseur de type pour fournir une valeur et référence un gestionnaire à utiliser pour le paramétrage du convertisseur de type.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetTypeConverterAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" />.</summary>
      <param name="xamlSetTypeConverterHandler">Nom du gestionnaire à utiliser pour les opérations de paramétrage du convertisseur de type.</param>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterAttribute.XamlSetTypeConverterHandler">
      <summary>Obtient la valeur d'initialisation <paramref name="xamlSetTypeConverterHandler" /> (nom de gestionnaire) spécifiée dans le <see cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" />.</summary>
      <returns>Valeur <paramref name="xamlSetTypeConverterHandler" /> spécifiée dans le <see cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" />.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetTypeConverterEventArgs">
      <summary>Fournit des données pour les rappels effectués lorsqu'un writer XAML définit une valeur à l'aide d'un appel de convertisseur de type.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetTypeConverterEventArgs.#ctor(System.Xaml.XamlMember,System.ComponentModel.TypeConverter,System.Object,System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.XamlSetTypeConverterEventArgs" />.</summary>
      <param name="member">Informations de schéma/système de type XAML du membre qui est défini.</param>
      <param name="typeConverter">Instance de convertisseur de type spécifique qui est appelée.</param>
      <param name="value">Valeur à fournir pour le membre qui est défini.</param>
      <param name="serviceProvider">Informations sur le fournisseur de services qui peuvent être utilisées par la classe <paramref name="typeConverter" />.</param>
      <param name="cultureInfo">Informations de culture qui peuvent être utilisées par la classe <paramref name="typeConverter" /> lors de l'appel de <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" /> et d'autres méthodes.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlSetTypeConverterEventArgs.CallBase">
      <summary>Permet d'effectuer un rappel tel qu'il est défini sur une classe de base du type actuel.</summary>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterEventArgs.CultureInfo">
      <summary>Obtient des informations <see cref="T:System.Globalization.CultureInfo" /> qui peuvent être utilisées par la classe de convertisseur de type lors de l'appel de <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" /> et d'autres méthodes.</summary>
      <returns>Informations de culture qui peuvent être utilisées par la classe de convertisseur de type.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterEventArgs.ServiceProvider">
      <summary>Obtient des informations <see cref="T:System.IServiceProvider" /> qui peuvent être utilisées par la classe de convertisseur de type.</summary>
      <returns>Informations sur le fournisseur de services qui peuvent être utilisées par la classe <paramref name="typeConverter" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterEventArgs.TypeConverter">
      <summary>Obtient l'instance de <see cref="T:System.ComponentModel.TypeConverter" /> qui est appelée et fournit le comportement de conversion de type.</summary>
      <returns>Convertisseur de type qui fournit le comportement de conversion de type.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetValueEventArgs">
      <summary>Fournit des données pour les rappels qui sont effectués lorsqu'un <see cref="T:System.Xaml.XamlObjectWriter" /> définit certaines valeurs.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetValueEventArgs.#ctor(System.Xaml.XamlMember,System.Object)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</summary>
      <param name="member">Informations de schéma/système de type XAML du membre qui est défini.</param>
      <param name="value">Valeur à fournir pour le membre.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlSetValueEventArgs.CallBase">
      <summary>En cas de substitution dans une classe dérivée, permet d'effectuer un rappel <see langword="SetValue" /> tel qu'il est défini sur une classe de base du type actuel.</summary>
    </member>
    <member name="P:System.Windows.Markup.XamlSetValueEventArgs.Handled">
      <summary>Obtient ou définit une valeur qui détermine si un appelant utilisant le <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> peut employer les valeurs sans avoir à appeler la méthode <see cref="M:System.Windows.Markup.XamlSetValueEventArgs.CallBase" />.</summary>
      <returns>
        <see langword="true" /> si les valeurs sont utiles et que l'appel de la méthode <see cref="M:System.Windows.Markup.XamlSetValueEventArgs.CallBase" /> n'est pas nécessaire ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetValueEventArgs.Member">
      <summary>Obtient les informations de schéma XAML et de système de type XAML pour le membre qui est défini.</summary>
      <returns>Informations de schéma XAML et système de type XAML pour le membre qui est défini.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetValueEventArgs.Value">
      <summary>Obtient la valeur à fournir pour le membre qui est défini.</summary>
      <returns>Valeur à fournir pour le membre qui est défini.</returns>
    </member>
    <member name="T:System.Windows.Markup.XData">
      <summary>Représente les données littérales qui peuvent s'afficher comme valeur pour un nœud <see langword="Value" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.XData.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.XData" />.</summary>
    </member>
    <member name="P:System.Windows.Markup.XData.Text">
      <summary>Obtient ou définit la chaîne de valeur littérale que ce <see cref="T:System.Windows.Markup.XData" /> encapsule.</summary>
      <returns>Chaîne de valeur littérale.</returns>
    </member>
    <member name="P:System.Windows.Markup.XData.XmlReader">
      <summary>Obtient ou définit un lecteur pour les données littérales.</summary>
      <returns>Lecteur des données littérales.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlLangPropertyAttribute">
      <summary>Identifie la propriété à associer à l’attribut xml:lang.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlLangPropertyAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.XmlLangPropertyAttribute" />.</summary>
      <param name="name">Nom de propriété à associer à l’attribut <see langword="xml:lang" />.</param>
    </member>
    <member name="P:System.Windows.Markup.XmlLangPropertyAttribute.Name">
      <summary>Obtient le nom de la propriété spécifiée dans cet attribut.</summary>
      <returns>Nom de la propriété.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlnsCompatibleWithAttribute">
      <summary>Spécifie qu’un espace de noms XAML peut être inclus par un autre espace de noms XAML. En règle générale, l’espace de noms XAML inclus est indiqué dans un <see cref="T:System.Windows.Markup.XmlnsDefinitionAttribute" /> précédemment défini.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsCompatibleWithAttribute.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.XmlnsCompatibleWithAttribute" />.</summary>
      <param name="oldNamespace">Identificateur de l’espace de noms XAML de référence.</param>
      <param name="newNamespace">Identificateur de l’espace de noms XAML inclus.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="oldNamespace" /> ou <paramref name="newNamespace" /> sont <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsCompatibleWithAttribute.NewNamespace">
      <summary>Obtient l’identificateur de l’espace de noms inclus dont fait état cet attribut.</summary>
      <returns>Identificateur de l’espace de noms inclus dont fait état l’attribut.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsCompatibleWithAttribute.OldNamespace">
      <summary>Obtient l’identificateur de l’espace de noms de référence dont fait état cet attribut.</summary>
      <returns>Identificateur de l’espace de noms de référence.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlnsDefinitionAttribute">
      <summary>Spécifie un mappage par assembly entre un espace de noms XAML et un espace de noms CLR, qui est ensuite utilisé par un writer d’objet XAML ou un contexte de schéma XAML à des fins de résolution de type.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDefinitionAttribute.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.XmlnsDefinitionAttribute" />.</summary>
      <param name="xmlNamespace">Identificateur d’espace de noms XAML.</param>
      <param name="clrNamespace">Chaîne qui fait référence au nom d’un espace de noms CLR.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlNamespace" /> ou <paramref name="clrNamespace" /> sont <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.AssemblyName">
      <summary>Obtient ou définit le nom de l’assembly associé à l’attribut.</summary>
      <returns>Nom de l'assembly.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.ClrNamespace">
      <summary>Obtient le nom de chaîne de l’espace de noms CLR spécifié dans cet attribut.</summary>
      <returns>Espace de noms CLR, spécifié sous forme de chaîne.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.XmlNamespace">
      <summary>Obtient l’identificateur d’espace de noms XAML spécifié dans cet attribut.</summary>
      <returns>Identificateur d’espace de noms XAML.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlnsPrefixAttribute">
      <summary>Identifie un préfixe recommandé à associer à un espace de noms XAML pour l’utilisation XAML, lors de l’écriture d’éléments et d’attributs dans un fichier XAML (sérialisation) ou lors de l’interaction avec un environnement de conception qui offre des fonctionnalités d’édition XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsPrefixAttribute.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.XmlnsPrefixAttribute" />.</summary>
      <param name="xmlNamespace">Identificateur d’espace de noms XAML.</param>
      <param name="prefix">Chaîne de préfixe recommandée.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlNamespace" /> ou <paramref name="prefix" /> est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsPrefixAttribute.Prefix">
      <summary>Obtient le préfixe recommandé associé à cet attribut.</summary>
      <returns>Chaîne de préfixe recommandée.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsPrefixAttribute.XmlNamespace">
      <summary>Obtient l’identificateur d’espace de noms XAML associé à cet attribut.</summary>
      <returns>Identificateur d’espace de noms XAML.</returns>
    </member>
    <member name="T:System.Xaml.AmbientPropertyValue">
      <summary>Signale les informations relatives à une propriété ambiante, dans le cadre d'une implémentation de <see cref="T:System.Xaml.IAmbientProvider" />.</summary>
    </member>
    <member name="M:System.Xaml.AmbientPropertyValue.#ctor(System.Xaml.XamlMember,System.Object)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.AmbientPropertyValue" />.</summary>
      <param name="property">Identificateur qui représente la propriété ambiante.</param>
      <param name="value">Valeur à signaler.</param>
    </member>
    <member name="P:System.Xaml.AmbientPropertyValue.RetrievedProperty">
      <summary>Obtient l'identificateur du système de type XAML (<see cref="T:System.Xaml.XamlMember" />) qui représente la propriété ambiante.</summary>
      <returns>Identificateur qui représente la propriété ambiante.</returns>
    </member>
    <member name="P:System.Xaml.AmbientPropertyValue.Value">
      <summary>Obtient la valeur de la propriété ambiante.</summary>
      <returns>Valeur de la propriété ambiante.</returns>
    </member>
    <member name="T:System.Xaml.AttachableMemberIdentifier">
      <summary>Fournit une représentation de l'identificateur du système de type XAML pour les membres pouvant être attachés. La structure de l'identificateur correspond au format de chaîne <paramref name="declaringType" /><see langword="." /><paramref name="memberName" /> pour l'utilisation de membre pouvant être attaché.</summary>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.#ctor(System.Type,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <param name="declaringType">Composant <paramref name="declaringType" /> de l'identificateur, qui doit correspondre au nom du <see cref="P:System.Xaml.XamlMember.Type" /> déclarant.</param>
      <param name="memberName">Composant <paramref name="memberName" /> de l'identificateur, qui doit correspondre au <see cref="P:System.Xaml.XamlMember.Name" />.</param>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.Equals(System.Object)">
      <summary>Détermine si cette instance de <see cref="T:System.Xaml.AttachableMemberIdentifier" /> et un objet spécifié ont la même valeur.</summary>
      <param name="obj">Objet à comparer au <see cref="T:System.Xaml.AttachableMemberIdentifier" /> actif.</param>
      <returns>
        <see langword="true" /> si <paramref name="obj" /> est un <see cref="T:System.Xaml.AttachableMemberIdentifier" /> et si sa valeur est identique à la valeur de cette instance ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.Equals(System.Xaml.AttachableMemberIdentifier)">
      <summary>Détermine si cette instance et un autre objet <see cref="T:System.Xaml.AttachableMemberIdentifier" /> spécifié ont la même valeur.</summary>
      <param name="other">
        <see cref="T:System.Xaml.AttachableMemberIdentifier" /> à comparer avec l'objet <see cref="T:System.Xaml.AttachableMemberIdentifier" /> actuel.</param>
      <returns>
        <see langword="true" /> si les objets ont la même valeur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.GetHashCode">
      <summary>Retourne le code de hachage pour ce <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <returns>Code de hachage entier.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.op_Equality(System.Xaml.AttachableMemberIdentifier,System.Xaml.AttachableMemberIdentifier)">
      <summary>Détermine si deux objets <see cref="T:System.Xaml.AttachableMemberIdentifier" /> spécifiés ont la même valeur.</summary>
      <param name="left">
        <see cref="T:System.Xaml.AttachableMemberIdentifier" />, ou <see langword="null" />.</param>
      <param name="right">
        <see cref="T:System.Xaml.AttachableMemberIdentifier" />, ou <see langword="null" />.</param>
      <returns>
        <see langword="true" /> si la valeur de <paramref name="left" /> est égale à la valeur de <paramref name="right" /> ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.op_Inequality(System.Xaml.AttachableMemberIdentifier,System.Xaml.AttachableMemberIdentifier)">
      <summary>Détermine si deux objets <see cref="T:System.Xaml.AttachableMemberIdentifier" /> spécifiés ont des valeurs différentes.</summary>
      <param name="left">
        <see cref="T:System.Xaml.AttachableMemberIdentifier" />, ou <see langword="null" />.</param>
      <param name="right">
        <see cref="T:System.Xaml.AttachableMemberIdentifier" />, ou <see langword="null" />.</param>
      <returns>
        <see langword="true" /> si la valeur de <paramref name="left" /> est différente de la valeur de <paramref name="right" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.ToString">
      <summary>Retourne une valeur <see cref="T:System.String" /> qui représente le <see cref="T:System.Xaml.AttachableMemberIdentifier" /> actuel.</summary>
      <returns>
        <see cref="T:System.String" /> qui représente le <see cref="T:System.Xaml.AttachableMemberIdentifier" /> actuel.</returns>
    </member>
    <member name="P:System.Xaml.AttachableMemberIdentifier.DeclaringType">
      <summary>Obtient ou définit la valeur du composant <paramref name="declaringType" /> du <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <returns>Valeur du composant <paramref name="declaringType" /> du <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</returns>
    </member>
    <member name="P:System.Xaml.AttachableMemberIdentifier.MemberName">
      <summary>Obtient ou définit la valeur du composant <paramref name="memberName" /> du <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <returns>Valeur du composant <paramref name="memberName" /> du <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</returns>
    </member>
    <member name="T:System.Xaml.AttachablePropertyServices">
      <summary>Fournit des méthodes d'assistance statiques qui obtiennent des valeurs et des informations de méthode d'accesseur d'une propriété pouvant être attachée et qui peuvent être utilisées avec une banque de propriétés jointes.</summary>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
      <summary>Copie toutes les paires propriété/valeur pouvant être attachées issues d'une banque de propriétés pouvant être attachées spécifiée et les enregistre dans un tableau de destination.</summary>
      <param name="instance">Banque de propriétés pouvant être attachées spécifique qui implémente <see cref="T:System.Xaml.IAttachedPropertyStore" />, ou tout objet non null permettant d'accéder à une banque de propriétés pouvant être attachées par défaut statique.</param>
      <param name="array">Tableau de destination. Le tableau est un tableau générique qui doit être passé sans être dimensionné et doit avoir des composants de <see cref="T:System.Xaml.AttachableMemberIdentifier" /> et d'<see langword="object" />.</param>
      <param name="index">Index source au niveau duquel effectuer la copie.</param>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(System.Object)">
      <summary>Retourne le nombre d'entrées de propriété pouvant être attachée dans la banque spécifié.</summary>
      <param name="instance">Banque de propriétés pouvant être attachées spécifique qui implémente <see cref="T:System.Xaml.IAttachedPropertyStore" />, ou tout objet non null permettant d'accéder à une banque de propriétés pouvant être attachées par défaut statique.</param>
      <returns>Nombre entier d'entrées dans la banque.</returns>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)">
      <summary>Supprime de la banque spécifiée l'entrée de la propriété pouvant être attachée spécifiée.</summary>
      <param name="instance">Banque de propriétés pouvant être attachées spécifique qui implémente <see cref="T:System.Xaml.IAttachedPropertyStore" />, ou tout objet non null permettant d'accéder à une banque de propriétés pouvant être attachées par défaut statique.</param>
      <param name="name">Identificateur de l'entrée de propriété pouvant être attachée à supprimer de la banque.</param>
      <returns>
        <see langword="true" /> si une entrée de propriété pouvant être attachée pour <paramref name="name" /> a été trouvée dans la banque et en a été supprimée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)">
      <summary>Définit une valeur pour la propriété spécifiée pouvant être attachée dans le magasin spécifié.</summary>
      <param name="instance">Banque de propriétés pouvant être attachées spécifique qui implémente <see cref="T:System.Xaml.IAttachedPropertyStore" /> ; ou tout objet non null pour utiliser une banque de propriétés pouvant être attachées par défaut statique.</param>
      <param name="name">Identificateur de l'entrée de propriété pouvant être attachée pour laquelle définir une valeur.</param>
      <param name="value">Valeur à définir.</param>
      <exception cref="T:System.InvalidOperationException">Impossible de définir une valeur dans le magasin.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)">
      <summary>Essaie d'obtenir une valeur pour la propriété pouvant être attachée spécifiée dans la banque spécifiée. Ne lève pas d'exception si la propriété pouvant être attachée spécifique n'existe pas dans la banque.</summary>
      <param name="instance">Banque de propriétés pouvant être attachées spécifique qui implémente <see cref="T:System.Xaml.IAttachedPropertyStore" /> ; ou tout objet non null pour utiliser une banque de propriétés pouvant être attachées par défaut statique.</param>
      <param name="name">Identificateur de l'entrée de propriété pouvant être attachée pour laquelle obtenir une valeur.</param>
      <param name="value">Paramètre de sortie. Cette méthode retourne l'objet de destination pour la valeur si <paramref name="name" /> existe dans la banque et possède une valeur.</param>
      <returns>
        <see langword="true" /> si une entrée de propriété pouvant être attachée pour <paramref name="name" /> a été trouvée dans la banque et qu'une valeur a été publiée dans <paramref name="value" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)">
      <summary>Essaie d'obtenir une valeur pour la propriété pouvant être attachée spécifiée dans la banque spécifiée, en retournant un formulaire de sortie générique. Ne lève pas d'exception si la propriété pouvant être attachée spécifique n'existe pas dans la banque.</summary>
      <param name="instance">Banque de propriétés pouvant être attachées spécifique qui implémente <see cref="T:System.Xaml.IAttachedPropertyStore" />, ou tout objet non null permettant d'accéder à une banque de propriétés pouvant être attachées par défaut statique.</param>
      <param name="name">Identificateur de l'entrée de propriété pouvant être attachée pour laquelle obtenir une valeur.</param>
      <param name="value">Paramètre de sortie. Cette méthode retourne l'objet de destination pour la valeur si <paramref name="name" /> existe dans la banque et possède une valeur.</param>
      <typeparam name="T">Type attendu de la sortie.</typeparam>
      <returns>
        <see langword="true" /> si une entrée de propriété pouvant être attachée pour <paramref name="name" /> a été trouvée dans la banque et qu'une valeur a été publiée dans <paramref name="value" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.IAmbientProvider">
      <summary>Représente un service qui peut retourner des informations sur les propriétés ambiantes ou les types ambiants aux convertisseurs de type et aux extensions de balisage.</summary>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Boolean,System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])">
      <summary>Retourne un jeu énumérable d'éléments d'informations de propriété ambiante pour le jeu de types et de propriétés demandé.</summary>
      <param name="ceilingTypes">Spécifie un ou plusieurs types qui doivent arrêter l'évaluation lorsqu'ils sont rencontrés dans le cadre d'une traversée ascendante du graphique d'objet. Ce type contient la propriété ambiante souhaitée. Peut avoir la valeur <see langword="null" />.</param>
      <param name="searchLiveStackOnly">
        <see langword="true" /> pour ne pas utiliser de contexte enregistré ; <see langword="false" /> pour utiliser un contexte enregistré. La valeur par défaut est <see langword="false" />.</param>
      <param name="types">Spécifie un ou plusieurs objets d'identificateur de type qui identifient les types à considérer comme ambiants.</param>
      <param name="properties">Spécifie un ou plusieurs objets de type identificateur de propriété qui identifient les propriétés à considérer comme ambiantes.</param>
      <returns>Un jeu énumérable d'éléments d'informations de propriété ambiante pour le jeu de types et de propriétés demandé. Les informations de propriété de chaque <see cref="T:System.Xaml.AmbientPropertyValue" /> qui sont retournées correspondront à l'un des <paramref name="types" /> ou <paramref name="properties" /> d'entrée.</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])">
      <summary>Retourne un jeu énumérable d'éléments d'informations de propriété ambiante pour le jeu de propriétés demandé.</summary>
      <param name="ceilingTypes">Spécifie un ou plusieurs types qui doivent arrêter l'évaluation lorsqu'ils sont rencontrés dans le cadre d'une traversée ascendante du graphique d'objet. Ce type contient la propriété ambiante souhaitée. Peut avoir la valeur <see langword="null" />.</param>
      <param name="properties">Spécifie un ou plusieurs objets de type identificateur de propriété qui identifient les propriétés à considérer comme ambiantes.</param>
      <returns>Jeu énumérable d'éléments d'informations de propriété ambiante pour le jeu de propriétés demandé. Les informations de propriété de chaque <see cref="T:System.Xaml.AmbientPropertyValue" /> qui sont retournées correspondront à l'un des <paramref name="properties" /> d'entrée.</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Xaml.XamlType[])">
      <summary>Retourne un jeu énumérable d'instances d'objet des types ambiants possibles pour les types demandés.</summary>
      <param name="types">Jeu de types à partir duquel récupérer les informations de type ambiant.</param>
      <returns>Jeu énumérable d'objets qui représentent les valeurs du jeu demandé d'identificateurs <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])">
      <summary>Retourne un élément d'information de propriété ambiante unique à partir du jeu de propriétés demandé, en fonction de la première propriété rencontrée.</summary>
      <param name="ceilingTypes">Spécifie un ou plusieurs types qui doivent arrêter l'évaluation lorsqu'ils sont rencontrés dans le cadre d'une traversée ascendante du graphique d'objet. Ce type contient la propriété ambiante souhaitée.</param>
      <param name="properties">Spécifie un ou plusieurs objets qui identifient les propriétés à considérer comme ambiantes.</param>
      <returns>Élément d'information de propriété ambiante unique pour la première valeur de propriété ambiante trouvée dans la liste des <paramref name="properties" />.</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Xaml.XamlType[])">
      <summary>Retourne le premier objet correspondant qui est un type ambiant possible pour les types demandés.</summary>
      <param name="types">Jeu de types à partir duquel récupérer les informations de type ambiant.</param>
      <returns>Premier objet de résultat pour le jeu demandé.</returns>
    </member>
    <member name="T:System.Xaml.IAttachedPropertyStore">
      <summary>Représente une banque de membres pouvant être attachés pour un objet dans lequel les membres pouvant être attachés sont définis. Cette banque de membres pouvant être attachés peut ensuite être référencée avec <see cref="T:System.Xaml.AttachablePropertyServices" />.</summary>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.CopyPropertiesTo(System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
      <summary>Copie toutes les paires membre/valeur pouvant être attachées, à partir de cette banque de membres pouvant être attachés et vers un tableau de destination.</summary>
      <param name="array">Tableau de destination. Le tableau est un tableau générique qui doit être passé sans être dimensionné et doit avoir des composants de <see cref="T:System.Xaml.AttachableMemberIdentifier" /> et d'<see langword="object" />.</param>
      <param name="index">Index source où la copie doit commencer.</param>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.RemoveProperty(System.Xaml.AttachableMemberIdentifier)">
      <summary>Supprime l'entrée pour le membre pouvant être attaché spécifié de cette banque de membres pouvant être attachés.</summary>
      <param name="attachableMemberIdentifier">Identificateur du système de type XAML pour l'entrée de membre pouvant être attaché à supprimer.</param>
      <returns>
        <see langword="true" /> si une entrée de membre pouvant être attaché pour <paramref name="attachableMemberIdentifier" /> a été trouvée dans la banque et supprimée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.SetProperty(System.Xaml.AttachableMemberIdentifier,System.Object)">
      <summary>Définit une valeur pour le membre pouvant être attaché spécifié dans la banque spécifiée.</summary>
      <param name="attachableMemberIdentifier">Identificateur du système de type XAML pour l'entrée de membre pouvant être attaché à définir.</param>
      <param name="value">Valeur à définir.</param>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.TryGetProperty(System.Xaml.AttachableMemberIdentifier,System.Object@)">
      <summary>Essaie d'obtenir une valeur pour le membre pouvant être attaché spécifié dans la banque spécifiée.</summary>
      <param name="attachableMemberIdentifier">Identificateur du système de type XAML pour l'entrée de membre pouvant être attaché à obtenir.</param>
      <param name="value">Paramètre de sortie. Cette méthode retourne l'objet de destination pour la valeur si <paramref name="attachableMemberIdentifier" /> existe dans la banque et possède une valeur.</param>
      <returns>
        <see langword="true" /> si une entrée de membre pouvant être attaché pour <paramref name="attachableMemberIdentifier" /> a été trouvée dans la banque et qu'une valeur a été publiée sous <paramref name="value" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.IAttachedPropertyStore.PropertyCount">
      <summary>Obtient le nombre d'entrées de membres pouvant être attachés dans cette banque de membres pouvant être attachés.</summary>
      <returns>Nombre entier d'entrées dans la banque.</returns>
    </member>
    <member name="T:System.Xaml.IDestinationTypeProvider">
      <summary>Représente un service qui peut retourner un identificateur de système de type CLR pour le type de destination. Le type de destination est pertinent lorsque celui défini pour une opération de définition de propriétés est indirectement signalé par une réflexion ou d'autres mécanismes.</summary>
    </member>
    <member name="M:System.Xaml.IDestinationTypeProvider.GetDestinationType">
      <summary>Retourne le CLR <see cref="T:System.Type" /> qui identifie le type de destination pour le convertisseur de type pertinent ou l'extension de balisage.</summary>
      <returns>Valeur <see cref="T:System.Type" /> CLR pour le type de destination.</returns>
    </member>
    <member name="T:System.Xaml.INamespacePrefixLookup">
      <summary>Représente un service qui peut retourner le préfixe recommandé pour un mappage d'espace de noms XAML avec des consommateurs. Les consommateurs peuvent inclure des environnements de conception ou des sérialiseurs.</summary>
    </member>
    <member name="M:System.Xaml.INamespacePrefixLookup.LookupPrefix(System.String)">
      <summary>Retourne le préfixe recommandé pour un identificateur d'espace de noms XAML spécifié.</summary>
      <param name="ns">Chaîne de l'identificateur d'espace de noms XAML pour laquelle obtenir un préfixe.</param>
      <returns>Préfixe recommandé.</returns>
    </member>
    <member name="T:System.Xaml.IRootObjectProvider">
      <summary>Décrit un service qui peut retourner l'objet racine du balisage en cours d'analyse.</summary>
    </member>
    <member name="P:System.Xaml.IRootObjectProvider.RootObject">
      <summary>Obtient l'objet racine du balisage ou d'un graphique d'objet.</summary>
      <returns>Objet racine.</returns>
    </member>
    <member name="T:System.Xaml.IXamlIndexingReader">
      <summary>Fournit un service qui représente le contrôle de nœud indexé pour une implémentation simple d'un lecteur XAML basé sur un nœud.</summary>
    </member>
    <member name="P:System.Xaml.IXamlIndexingReader.Count">
      <summary>Obtient le nombre de nœuds dans le jeu de nœuds externes actuel.</summary>
      <returns>Nombre de nœuds dans le jeu de nœuds externes actuel.</returns>
    </member>
    <member name="P:System.Xaml.IXamlIndexingReader.CurrentIndex">
      <summary>Obtient ou définit le numéro d'index de la position actuelle du lecteur pour la vue Liste indexée des nœuds XAML.</summary>
      <returns>Numéro d'index de la position actuelle du lecteur.</returns>
    </member>
    <member name="T:System.Xaml.IXamlLineInfo">
      <summary>Décrit un service pour le signalement des informations de ligne de texte dans les implémentations de lecteur XAML.</summary>
    </member>
    <member name="P:System.Xaml.IXamlLineInfo.HasLineInfo">
      <summary>Obtient une valeur qui spécifie si des informations de ligne sont disponibles.</summary>
      <returns>
        <see langword="true" /> si des informations de ligne sont disponibles ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.IXamlLineInfo.LineNumber">
      <summary>Obtient le numéro de ligne à signaler.</summary>
      <returns>Numéro de ligne à signaler.</returns>
    </member>
    <member name="P:System.Xaml.IXamlLineInfo.LinePosition">
      <summary>Obtient la position de ligne à signaler.</summary>
      <returns>Position de ligne à signaler.</returns>
    </member>
    <member name="T:System.Xaml.IXamlLineInfoConsumer">
      <summary>Décrit un service dans lequel un writer XAML peut utiliser des informations de ligne rapportées, puis les inclure dans la sortie.</summary>
    </member>
    <member name="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)">
      <summary>Collecte les informations de ligne.</summary>
      <param name="lineNumber">Numéro de ligne à utiliser dans la sortie.</param>
      <param name="linePosition">Position de ligne à utiliser dans la sortie.</param>
    </member>
    <member name="P:System.Xaml.IXamlLineInfoConsumer.ShouldProvideLineInfo">
      <summary>Obtient une valeur qui détermine si un service d'informations de ligne doit fournir des valeurs et par conséquent appeler également <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> au besoin.</summary>
      <returns>
        <see langword="true" /> si les informations de ligne sont utilisées par l'implémentation ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.IXamlNameProvider">
      <summary>Fournit un service qui est utilisé lors des opérations d'enregistrement et d'écriture pour entrer un objet et retourner un nom XAML.</summary>
    </member>
    <member name="M:System.Xaml.IXamlNameProvider.GetName(System.Object)">
      <summary>Récupère le nom XAML de l'objet spécifié.</summary>
      <param name="value">Objet pour lequel obtenir le nom.</param>
      <returns>Valeur du nom XAML de l'objet demandé.</returns>
    </member>
    <member name="T:System.Xaml.IXamlNameResolver">
      <summary>Décrit un service qui peut retourner des objets spécifiés par leur nom XAML, ou retourne un jeton qui reporte la résolution de noms. Le service peut également retourner un jeu énumérable de tous les objets nommés figurant dans la portée de nom XAML.</summary>
    </member>
    <member name="E:System.Xaml.IXamlNameResolver.OnNameScopeInitializationComplete">
      <summary>Se produit lorsqu'un processeur XAML a inscrit tous les noms pertinents dans la portée de nom XAML de stockage.</summary>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope">
      <summary>Retourne un jeu énumérable de tous les objets nommés figurant dans la portée de nom XAML.</summary>
      <returns>Jeu énumérable d'objets <see cref="T:System.Collections.Generic.KeyValuePair`2" />. Pour chaque <see cref="T:System.Collections.Generic.KeyValuePair`2" />, le composant <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> est une chaîne, et le composant <see cref="P:System.Collections.Generic.KeyValuePair`2.Value" /> est l'objet qui utilise le nom <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> dans la portée de nom XAML.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Retourne un objet qui peut être correct pour certains modèles de balisage qui produisent des références vers l'avant.</summary>
      <param name="names">Collection des noms qui constituent des références possibles vers l'avant.</param>
      <returns>Objet qui fournit un jeton pour le comportement de recherche à évaluer ultérieurement.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
      <summary>Retourne un objet qui peut être correct pour certains modèles de balisage qui produisent des références vers l'avant.</summary>
      <param name="names">Collection des noms qui constituent des références possibles vers l'avant.</param>
      <param name="canAssignDirectly">
        <see langword="true" /> pour assigner immédiatement la référence de nom résolue à la propriété cible. <see langword="false" /> pour appeler le code utilisateur pour une nouvelle analyse. Le comportement par défaut est <see langword="false" />.</param>
      <returns>Objet qui fournit un jeton pour le comportement de recherche à évaluer ultérieurement.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.Resolve(System.String)">
      <summary>Résout un objet à partir d'une référence de nom.</summary>
      <param name="name">Référence de nom à résoudre.</param>
      <returns>Objet résolu ou valeur Null.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.Resolve(System.String,System.Boolean@)">
      <summary>Résout un objet à partir d'une référence de nom et fournit une valeur de suivi qui signale si l'objet est entièrement initialisé pour le graphique d'objet.</summary>
      <param name="name">Référence de nom à résoudre.</param>
      <param name="isFullyInitialized">
        <see langword="true" /> si l'objet retourné par la méthode comporte des dépendances avec des références non résolues ; sinon, <see langword="false" />.</param>
      <returns>Objet qui fournit un jeton pour le comportement de recherche à évaluer ultérieurement.</returns>
    </member>
    <member name="P:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable">
      <summary>Obtient une valeur qui détermine si l'appel de <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> est disponible pour résoudre un nom dans un jeton pour la résolution vers l'avant.</summary>
      <returns>
        <see langword="true" /> si <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> est disponible en tant qu'implémentation qui retourne un jeton utile pour la résolution vers l'avant ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.IXamlNamespaceResolver">
      <summary>Décrit un service qui peut retourner un espace de noms XAML basé sur son préfixe tel qu'il est mappé dans le balisage XAML.</summary>
    </member>
    <member name="M:System.Xaml.IXamlNamespaceResolver.GetNamespace(System.String)">
      <summary>Récupère un identificateur d'espace de noms XAML pour la chaîne de préfixe spécifiée.</summary>
      <param name="prefix">Préfixe pour lequel récupérer les informations d'espace de noms XAML.</param>
      <returns>Identificateur d'espace de noms XAML demandé, sous forme de chaîne.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNamespaceResolver.GetNamespacePrefixes">
      <summary>Retourne tous les mappages d'espaces de noms de préfixes XAML possibles (valeurs <see cref="T:System.Xaml.NamespaceDeclaration" />) qui sont disponibles dans le contexte de schéma XAML actif.</summary>
      <returns>Jeu énumérable de valeurs <see cref="T:System.Xaml.NamespaceDeclaration" />. Pour obtenir toutes les chaînes de préfixe, obtenez la valeur <see cref="P:System.Xaml.NamespaceDeclaration.Prefix" /> de chaque valeur du jeu retourné. Pour obtenir des préfixes pour les espaces de noms XAML spécifiques, traitez toutes les valeurs de retour comportant la valeur <see cref="P:System.Xaml.NamespaceDeclaration.Namespace" /> souhaitée.</returns>
    </member>
    <member name="T:System.Xaml.IXamlObjectWriterFactory">
      <summary>Représente un service qui génère un <see cref="T:System.Xaml.XamlObjectWriter" /> basé sur le contexte de l'analyseur interne actuel.</summary>
    </member>
    <member name="M:System.Xaml.IXamlObjectWriterFactory.GetParentSettings">
      <summary>Retourne les <see cref="T:System.Xaml.XamlObjectWriterSettings" /> du contexte de l'analyseur interne initial.</summary>
      <returns>Paramètres du contexte de l'analyseur interne initial.</returns>
    </member>
    <member name="M:System.Xaml.IXamlObjectWriterFactory.GetXamlObjectWriter(System.Xaml.XamlObjectWriterSettings)">
      <summary>Retourne un <see cref="T:System.Xaml.XamlObjectWriter" /> qui est basé sur le contexte de schéma XAML actif.</summary>
      <param name="settings">Paramètres à utiliser pour la construction et l'initialisation du <see cref="T:System.Xaml.XamlObjectWriter" />.</param>
      <returns>
        <see cref="T:System.Xaml.XamlObjectWriter" /> qui a les paramètres spécifiés.</returns>
    </member>
    <member name="T:System.Xaml.IXamlSchemaContextProvider">
      <summary>Représente un service qui fournit des informations de contexte de schéma XAML aux convertisseurs de type et aux extensions de balisage.</summary>
    </member>
    <member name="P:System.Xaml.IXamlSchemaContextProvider.SchemaContext">
      <summary>Obtient le <see cref="T:System.Xaml.XamlSchemaContext" /> qui est signalé par le contexte de service.</summary>
      <returns>Contexte de schéma XAML qui est signalé par le contexte de service.</returns>
    </member>
    <member name="T:System.Xaml.NamespaceDeclaration">
      <summary>Déclare l'identificateur et le préfixe d'un espace de noms XAML en stockant ces valeurs de chaîne sous forme de propriétés distinctes.</summary>
    </member>
    <member name="M:System.Xaml.NamespaceDeclaration.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.NamespaceDeclaration" /> en utilisant les valeurs de propriété initiales.</summary>
      <param name="ns">Identificateur d'espace de noms XAML, sous forme de chaîne.</param>
      <param name="prefix">Préfixe de chaîne qui est utilisé pour l'espace de noms dans les mappages de préfixe.</param>
    </member>
    <member name="P:System.Xaml.NamespaceDeclaration.Namespace">
      <summary>Obtient le composant d'identification d'un <see cref="T:System.Xaml.NamespaceDeclaration" />.</summary>
      <returns>Identificateur de la déclaration d'espace de noms XAML.</returns>
    </member>
    <member name="P:System.Xaml.NamespaceDeclaration.Prefix">
      <summary>Obtient le préfixe utilisé comme préfixe de mappage d'espace de noms XAML pour un <see cref="T:System.Xaml.NamespaceDeclaration" />.</summary>
      <returns>Chaîne de préfixe de ce <see cref="T:System.Xaml.NamespaceDeclaration" />.</returns>
    </member>
    <member name="T:System.Xaml.Schema.AllowedMemberLocations">
      <summary>Spécifie les restrictions de syntaxe appliquées sur une propriété lorsqu'elle est définie en XAML, comme indiqué par un <see cref="T:System.Xaml.XamlDirective" />.</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.Any">
      <summary>La propriété peut être définie dans l'emplacement <see cref="F:System.Xaml.Schema.AllowedMemberLocations.Attribute" /> ou <see cref="F:System.Xaml.Schema.AllowedMemberLocations.MemberElement" />. (Ce membre d'énumération est défini comme la combinaison de ces valeurs.)</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.Attribute">
      <summary>La propriété peut être définie dans la syntaxe d'attribut XAML.</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.MemberElement">
      <summary>La propriété peut être définie dans la syntaxe d'élément de propriété XAML.</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.None">
      <summary>La propriété ne peut pas être définie en XAML. Il s'agit de la valeur par défaut.</summary>
    </member>
    <member name="T:System.Xaml.Schema.ShouldSerializeResult">
      <summary>Définit le comportement de sérialisation comme signalé par un <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
    </member>
    <member name="F:System.Xaml.Schema.ShouldSerializeResult.Default">
      <summary>Inconnu, différer au type du membre.</summary>
    </member>
    <member name="F:System.Xaml.Schema.ShouldSerializeResult.False">
      <summary>Ne pas sérialiser le résultat.</summary>
    </member>
    <member name="F:System.Xaml.Schema.ShouldSerializeResult.True">
      <summary>Sérialiser le résultat.</summary>
    </member>
    <member name="T:System.Xaml.Schema.XamlCollectionKind">
      <summary>Décrit la métaphore de collection (le cas échéant) utilisée par un membre XAML.</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.Array">
      <summary>Le membre XAML prend en charge une collection de tableaux.</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.Collection">
      <summary>Le membre XAML prend en charge une liste ou une collection.</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.Dictionary">
      <summary>Le membre XAML prend en charge un dictionnaire (paires clé-valeur).</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.None">
      <summary>Le membre XAML ne prend pas en charge de collection.</summary>
    </member>
    <member name="T:System.Xaml.Schema.XamlMemberInvoker">
      <summary>Fournit un point d'extension qui peut accéder aux caractéristiques de membre d'un membre XAML via des techniques autres que la réflexion.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> en fonction d'un <see cref="T:System.Xaml.XamlMember" /> fourni.</summary>
      <param name="member">Valeur de <see cref="T:System.Xaml.XamlMember" /> pour le membre XAML spécifique pertinent à ce <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="member" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)">
      <summary>Obtient une valeur de la propriété pertinente à partir d'une instance.</summary>
      <param name="instance">Instance du type propriétaire pour le membre.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">A appelé cette méthode sur un <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> basé sur un <see cref="T:System.Xaml.XamlMember" /> inconnu.  
  
 -ou-  
  
Appelé cette méthode sur un membre en écriture seule.  
  
 -ou-  
  
 <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> a la valeur <see langword="null" />.</exception>
      <returns>Valeur de propriété demandée.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)">
      <summary>Définit une valeur de la propriété pertinente sur une instance.</summary>
      <param name="instance">Instance du type propriétaire pour le membre.</param>
      <param name="value">Valeur de propriété à définir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">A appelé cette méthode sur un <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> basé sur un <see cref="T:System.Xaml.XamlMember" /> inconnu.  
  
 -ou-  
  
Appelé cette méthode sur un membre en lecture seule.  
  
 -ou-  
  
 <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)">
      <summary>Indique si la valeur doit être rendue persistante par des processus de sérialisation.</summary>
      <param name="instance">Instance possédant la propriété dont la persistance doit être examinée.</param>
      <returns>Valeur de l’énumération.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter">
      <summary>Obtient le <see cref="T:System.Reflection.MethodInfo" /> pour la méthode CLR qui obtient des valeurs pour la propriété qui est pertinente pour ce <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <returns>
        <see cref="T:System.Reflection.MethodInfo" /> pour la méthode CLR qui obtient des valeurs pour la propriété qui est pertinente pour ce <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, ou <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter">
      <summary>Obtient le <see cref="T:System.Reflection.MethodInfo" /> pour la méthode CLR qui définit des valeurs pour la propriété qui est pertinente pour ce <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <returns>
        <see cref="T:System.Reflection.MethodInfo" /> pour la méthode CLR qui définit des valeurs pour la propriété qui est pertinente pour ce <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, ou <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker">
      <summary>Fournit une valeur statique qui représente un <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> inconnu et non  implémenté pleinement.</summary>
      <returns>Valeur statique qui représente un <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> inconnu et non  implémenté pleinement.</returns>
    </member>
    <member name="T:System.Xaml.Schema.XamlTypeInvoker">
      <summary>Fournit un point d'extension qui peut construire des instances d'un type XAML via des techniques autres que la réflexion et des constructeurs.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.#ctor(System.Xaml.XamlType)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> en fonction d'un <see cref="T:System.Xaml.XamlType" /> fourni.</summary>
      <param name="type">Valeur de <see cref="T:System.Xaml.XamlType" /> pour le type XAML spécifique pertinent à ce <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.AddToCollection(System.Object,System.Object)">
      <summary>Ajoute l’élément fourni à une instance du type adapté à ce <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
      <param name="instance">Instance du type spécifié par le <see cref="T:System.Xaml.XamlType" /> utilisé pour construire ce <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</param>
      <param name="item">Élément à ajouter.</param>
      <exception cref="T:System.NotSupportedException">A appelé cette méthode sur un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> basé sur un <see cref="T:System.Xaml.XamlType" /> inconnu.  
  
 -ou-  
  
A appelé cette méthode sur un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> où le type pertinent n’est pas une collection.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlSchemaException">
        <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> pour ce <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> retourne <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(System.Object,System.Object,System.Object)">
      <summary>Ajoute la valeur de clé et d’élément fournie à une instance du type adapté à ce <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
      <param name="instance">Instance du type spécifié par le <see cref="T:System.Xaml.XamlType" /> utilisé pour construire ce <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</param>
      <param name="key">Clé de dictionnaire pour l’élément à ajouter.</param>
      <param name="item">La valeur d’élément à ajouter.</param>
      <exception cref="T:System.NotSupportedException">A appelé cette méthode sur un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> basé sur un <see cref="T:System.Xaml.XamlType" /> inconnu.  
  
 -ou-  
  
A appelé cette méthode sur un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> où le type pertinent n’est pas un dictionnaire.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlSchemaException">
        <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> pour ce <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> retourne <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object[])">
      <summary>Crée une instance d'objet basée sur le <see cref="T:System.Xaml.XamlType" /> initié par la construction pour ce <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
      <param name="arguments">Tableau d'objets qui fournissent <see langword="x:ConstructorArgs" /> pour l'instance. Peut être <see langword="null" /> pour les types qui ne requièrent pas ou n'utilisent pas <see langword="x:ConstructorArgs" />.</param>
      <exception cref="T:System.MissingMethodException">Impossible de résoudre le constructeur.</exception>
      <returns>Instance créée sur la base du<see cref="T:System.Xaml.XamlType" /> initié par construction pour ce <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)">
      <summary>Retourne la méthode <see langword="Add" /> pertinente pour un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> qui est pertinent à une collection ou un dictionnaire.</summary>
      <param name="contentType">
        <see cref="T:System.Xaml.XamlType" /> pour le type d'élément utilisé par la méthode <see langword="Add" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contentType" /> a la valeur <see langword="null" />.</exception>
      <returns>Informations de CLR <see cref="T:System.Reflection.MethodInfo" /> pour la méthode <see langword="Add" />, ou null.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod">
      <summary>Retourne un objet représentant une méthode qui peut effectuer une énumération sur des éléments.</summary>
      <returns>
        <see cref="T:System.Reflection.MethodInfo" /> pour une méthode d'énumérateur, ou <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.GetItems(System.Object)">
      <summary>Retourne un objet <see cref="T:System.Collections.IEnumerator" /> représentant le jeu d'éléments.</summary>
      <param name="instance">Instance du type spécifié par le <see cref="T:System.Xaml.XamlType" /> utilisé pour construire ce <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</param>
      <exception cref="T:System.NotSupportedException">A appelé cette méthode sur un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> basé sur un <see cref="T:System.Xaml.XamlType" /> inconnu.  
  
 -ou-  
  
Appelé cette méthode sur un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> où le type pertinent n'est pas une collection ni un dictionnaire.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> a la valeur <see langword="null" />.</exception>
      <returns>Objet <see cref="T:System.Collections.IEnumerator" />, ou <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler">
      <summary>Obtient le gestionnaire à utiliser lorsqu'un <see cref="T:System.Xaml.XamlObjectWriter" /> effectue un appel dans un <see cref="T:System.Windows.Markup.MarkupExtension" /> implémenté.</summary>
      <returns>Implémentation de gestionnaire qui gère ce cas.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler">
      <summary>Obtient le gestionnaire à utiliser lorsqu'un <see cref="T:System.Xaml.XamlObjectWriter" /> effectue un appel dans un <see cref="T:System.ComponentModel.TypeConverter" /> implémenté par le CLR.</summary>
      <returns>Implémentation de gestionnaire qui gère ce cas.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker">
      <summary>Fournit une valeur statique qui représente un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> inconnu et non  implémenté pleinement.</summary>
      <returns>Valeur statique qui représente un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> inconnu et non  implémenté pleinement.</returns>
    </member>
    <member name="T:System.Xaml.Schema.XamlTypeName">
      <summary>Fournit un moyen de spécifier un type XAML en termes de nom et d'espace de noms.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Schema.XamlTypeName" />, basée sur des chaînes de noms et d'espaces de noms.</summary>
      <param name="xamlNamespace">Espace de noms XAML qui contient le nom.</param>
      <param name="name">Nom du type pour lequel créer un <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName})">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Schema.XamlTypeName" />, basée sur des chaînes de noms et d'espaces de noms ainsi que sur un tableau d'arguments de type.</summary>
      <param name="xamlNamespace">Espace de noms XAML qui contient <paramref name="name" />.</param>
      <param name="name">Nom du type pour lequel créer un <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
      <param name="typeArguments">Tableau d'arguments de type, chacun devant être un <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor(System.Xaml.XamlType)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Schema.XamlTypeName" /> basée sur un <see cref="T:System.Xaml.XamlType" /> existant.</summary>
      <param name="xamlType">
        <see cref="T:System.Xaml.XamlType" /> existant.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xamlType" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.Parse(System.String,System.Xaml.IXamlNamespaceResolver)">
      <summary>Fournit une valeur <see cref="T:System.Xaml.Schema.XamlTypeName" /> basée sur un nom de type et un objet qui peut résoudre un préfixe de balise dans un espace de noms.</summary>
      <param name="typeName">Nom du type pour lequel créer une valeur <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
      <param name="namespaceResolver">Fournisseur d'objets ou de services qui implémente <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName" /> ou <paramref name="namespaceResolver" /> est <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">La chaîne ne peut pas être analysée.</exception>
      <returns>Élément <see cref="T:System.Xaml.Schema.XamlTypeName" /> créé.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ParseList(System.String,System.Xaml.IXamlNamespaceResolver)">
      <summary>Fournit une valeur <see cref="T:System.Xaml.Schema.XamlTypeName" /> basée sur une chaîne qui peut spécifier plusieurs noms de types et un objet qui peut résoudre un préfixe de balise dans un espace de noms.</summary>
      <param name="typeNameList">Chaîne qui contient plusieurs types.</param>
      <param name="namespaceResolver">Fournisseur d'objets ou de services qui implémente <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeNameList" /> ou <paramref name="namespaceResolver" /> est <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">La chaîne ne peut pas être analysée.</exception>
      <returns>Élément <see cref="T:System.Xaml.Schema.XamlTypeName" /> créé.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ToString">
      <summary>Convertit la valeur de ce <see cref="T:System.Xaml.Schema.XamlTypeName" /> en sa représentation sous forme de chaîne équivalente.</summary>
      <returns>Représentation sous forme de chaîne équivalente de ce <see cref="T:System.Xaml.Schema.XamlTypeName" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ToString(System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName},System.Xaml.INamespacePrefixLookup)">
      <summary>Convertit la valeur de ce <see cref="T:System.Xaml.Schema.XamlTypeName" /> en sa représentation sous forme de chaîne équivalente, qui peut être utilisée dans la syntaxe de balisage pour une utilisation d'élément objet de plusieurs types.</summary>
      <param name="typeNameList">Liste de types.</param>
      <param name="prefixLookup">Référence de service pour la recherche de préfixe.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefixLookup" /> ou <paramref name="typeNameList" /> est <see langword="null" />.</exception>
      <returns>Chaîne concaténée de tous les résultats de type.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ToString(System.Xaml.INamespacePrefixLookup)">
      <summary>Convertit la valeur de ce <see cref="T:System.Xaml.Schema.XamlTypeName" /> en sa représentation sous forme de chaîne équivalente, qui peut être utilisée dans la syntaxe de balisage pour une utilisation d'élément objet d'un seul type.</summary>
      <param name="prefixLookup">Référence de service pour la recherche de préfixe.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" /> pour ce  <see cref="T:System.Xaml.Schema.XamlTypeName" /> est <see langword="null" />.  
  
- ou - 
 <see cref="P:System.Xaml.Schema.XamlTypeName.Name" /> n'est pas valide.  
  
- ou - 
Impossible de rechercher le préfixe.</exception>
      <returns>Chaîne d'utilisation préfixée.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.TryParse(System.String,System.Xaml.IXamlNamespaceResolver,System.Xaml.Schema.XamlTypeName@)">
      <summary>Fournit une valeur <see cref="T:System.Xaml.Schema.XamlTypeName" /> basée sur un nom de type et un objet qui peut résoudre un préfixe de balise dans un espace de noms.</summary>
      <param name="typeName">Nom du type pour lequel créer une valeur <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
      <param name="namespaceResolver">Fournisseur d'objets ou de services qui implémente <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
      <param name="result">Paramètre de sortie qui contient le <see cref="T:System.Xaml.Schema.XamlTypeName" /> créé si la valeur de retour est <see langword="true" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName" /> ou <paramref name="namespaceResolver" /> est <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> si l'analyse a réussi et que <paramref name="result" /> contient une valeur utile ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.TryParseList(System.String,System.Xaml.IXamlNamespaceResolver,System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}@)">
      <summary>Fournit une valeur <see cref="T:System.Xaml.Schema.XamlTypeName" /> basée sur une chaîne qui peut spécifier plusieurs noms de types et un objet qui peut résoudre un préfixe de balise dans un espace de noms.</summary>
      <param name="typeNameList">Chaîne qui contient plusieurs types.</param>
      <param name="namespaceResolver">Fournisseur d'objets ou de services qui implémente <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
      <param name="result">Paramètre de sortie qui contient le <see cref="T:System.Xaml.Schema.XamlTypeName" /> créé si la valeur de retour est <see langword="true" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeNameList" /> ou <paramref name="namespaceResolver" /> est <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> si l'analyse a réussi et que <paramref name="result" /> contient une valeur utile ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeName.Name">
      <summary>Obtient le nom utilisé pour construire ce <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
      <returns>Nom du type.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeName.Namespace">
      <summary>Obtient l'identificateur d'espace de noms XAML utilisé pour construire ce <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
      <returns>Identificateur d’espace de noms XAML.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeName.TypeArguments">
      <summary>Obtient les arguments de type utilisés pour construire ce <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
      <returns>Arguments de type, le cas échéant. Ce paramètre peut être null.</returns>
    </member>
    <member name="T:System.Xaml.Schema.XamlTypeTypeConverter">
      <summary>Convertit un objet <see cref="T:System.Xaml.XamlType" /> vers et à partir d’une chaîne qui représente le nom de type. Cette fonctionnalité est utilisée pour l’extensibilité XAML par les définitions de balisage, via <see cref="T:System.Windows.Markup.PropertyDefinition" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Schema.XamlTypeTypeConverter" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Détermine si un objet du type spécifié peut être converti en une instance de <see cref="T:System.Xaml.XamlType" /> à l'aide du contexte indiqué.</summary>
      <param name="context">Contexte de format qui fournit des informations sur l'environnement à partir duquel ce convertisseur est appelé.</param>
      <param name="sourceType">Type évalué pour la conversion.</param>
      <returns>
        <see langword="true" /> si le convertisseur peut effectuer la conversion ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Détermine si une instance de <see cref="T:System.Xaml.XamlType" /> peut être convertie vers le type spécifié, à l'aide du contexte indiqué.</summary>
      <param name="context">Contexte de format qui fournit des informations sur l'environnement à partir duquel ce convertisseur est appelé.</param>
      <param name="destinationType">Type évalué pour la conversion.</param>
      <returns>
        <see langword="true" /> si le convertisseur peut effectuer la conversion ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Tente de convertir l'objet spécifié en <see cref="T:System.Xaml.XamlType" />, à l'aide du contexte indiqué.</summary>
      <param name="context">Contexte de format qui fournit des informations sur l'environnement à partir duquel ce convertisseur est appelé.</param>
      <param name="culture">Informations propres à la culture.</param>
      <param name="value">Objet à convertir.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> ne peut pas être converti.</exception>
      <returns>Objet converti.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Tente de convertir <see cref="T:System.Xaml.XamlType" /> vers le type spécifié, à l'aide du contexte indiqué.</summary>
      <param name="context">Contexte de format qui fournit des informations sur l'environnement à partir duquel ce convertisseur est appelé.</param>
      <param name="culture">Informations propres à la culture.</param>
      <param name="value">Objet à convertir.</param>
      <param name="destinationType">Type dans lequel convertir l'objet.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> ne peut pas être converti.</exception>
      <returns>Objet converti.</returns>
    </member>
    <member name="T:System.Xaml.Schema.XamlValueConverter`1">
      <summary>Fournit une surface d'API commune pour les techniques qui génèrent des valeurs d'initialisation ou de sérialisation pour XAML en fonction d'une autre entrée que le type de destination final. Cela inclut les extensions de balisage et les convertisseurs de type.</summary>
      <typeparam name="TConverterBase">Classe de base CLR pour le convertisseur particulier représenté par ce <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />. Il s'agit généralement de l'un des éléments suivants : <see cref="T:System.ComponentModel.TypeConverter" />, <see cref="T:System.Windows.Markup.MarkupExtension" /> ou <see cref="T:System.Windows.Markup.ValueSerializer" />.</typeparam>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, sur la base d'un convertisseur implémentant <see cref="T:System.Type" /> et du type cible/de destination de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <param name="converterType">
        <see cref="T:System.Type" /> qui implémente le comportement de convertisseur.</param>
      <param name="targetType">
        <see cref="T:System.Xaml.XamlType" /> cible/de destination de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</param>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, sur la base d'un convertisseur implémentant <see cref="T:System.Type" />, du type cible/de destination de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> et d'un nom de chaîne.</summary>
      <param name="converterType">
        <see cref="T:System.Type" /> qui implémente le comportement de convertisseur.</param>
      <param name="targetType">
        <see cref="T:System.Xaml.XamlType" /> cible/de destination de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</param>
      <param name="name">Nom de la chaîne.</param>
      <exception cref="T:System.ArgumentException">Les trois paramètres sont <see langword="null" /> (au moins l'un d'entre eux ne doit pas être NULL).</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.CreateInstance">
      <summary>Retourne une instance de l'implémentation de convertisseur.</summary>
      <exception cref="T:System.Xaml.XamlSchemaException">Le convertisseur n'a pas implémenté le type de base correct.</exception>
      <returns>Instance de l'implémentation de convertisseur ou <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Object)">
      <summary>Détermine si cette instance de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> et un objet spécifié, qui doit aussi être un objet <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, ont la même valeur.</summary>
      <param name="obj">Objet à comparer.</param>
      <returns>
        <see langword="true" /> si <paramref name="obj" /> est <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> et possède la même valeur que cette instance ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Xaml.Schema.XamlValueConverter{`0})">
      <summary>Détermine si cette instance de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> et un autre objet <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> ont la même valeur.</summary>
      <param name="other">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> à comparer.</param>
      <returns>
        <see langword="true" /> si <paramref name="other" /> est <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> et possède la même valeur que cette instance ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.GetHashCode">
      <summary>Retourne le code de hachage pour ce <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <returns>Code de hachage entier.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.op_Equality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})">
      <summary>Détermine si deux objets <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> spécifiés ont la même valeur.</summary>
      <param name="converter1">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> ou <see langword="null" />.</param>
      <param name="converter2">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> ou <see langword="null" />.</param>
      <returns>
        <see langword="true" /> si la valeur de <paramref name="converter1" /> est égale à la valeur de <paramref name="converter2" /> ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.op_Inequality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})">
      <summary>Détermine si deux objets <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> spécifiés ont des valeurs différentes.</summary>
      <param name="converter1">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> ou <see langword="null" />.</param>
      <param name="converter2">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> ou <see langword="null" />.</param>
      <returns>
        <see langword="true" /> si la valeur de <paramref name="converter1" /> est différente de la valeur de <paramref name="converter2" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.ToString">
      <summary>Retourne un <see cref="T:System.String" /> qui représente ce <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <returns>
        <see cref="T:System.String" /> qui représente ce <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.ConverterInstance">
      <summary>Obtient une instance créée de l'implémentation de convertisseur.</summary>
      <returns>Instance créée de l'implémentation de convertisseur ou <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.ConverterType">
      <summary>Obtient le <see cref="T:System.Type" /> pour la classe qui implémente le comportement de convertisseur.</summary>
      <returns>
        <see cref="T:System.Type" /> pour la classe qui implémente le comportement de convertisseur.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.Name">
      <summary>Obtient un nom de chaîne pour ce <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <returns>Nom de chaîne pour ce <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.TargetType">
      <summary>Obtient le <see cref="T:System.Xaml.XamlType" /> cible/de destination de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> cible/de destination de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlBackgroundReader">
      <summary>Implémente un <see cref="T:System.Xaml.XamlReader" /> mis deux en mémoire tampon qui peut répartir la lecture et l'écriture dans des threads différents.</summary>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.#ctor(System.Xaml.XamlReader)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlBackgroundReader" />.</summary>
      <param name="wrappedReader">
        <see cref="T:System.Xaml.XamlReader" /> sur lequel est basé ce <see cref="T:System.Xaml.XamlBackgroundReader" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="wrappedReader" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par <see cref="T:System.Xaml.XamlBackgroundReader" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer des ressources managées ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.Read">
      <summary>Fournit le nœud XAML suivant à partir de la source, si un nœud est disponible.</summary>
      <returns>
        <see langword="true" /> si un nœud est disponible ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.StartThread">
      <summary>Crée et démarre un nouveau <see cref="T:System.Threading.Thread" /> (construit à partir de <see cref="T:System.Threading.ParameterizedThreadStart" />) qui gère un thread nommé pour le <see cref="T:System.Xaml.XamlReader" />.</summary>
      <exception cref="T:System.InvalidOperationException">Le thread a déjà démarré.</exception>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.StartThread(System.String)">
      <summary>Crée et démarre un nouveau <see cref="T:System.Threading.Thread" /> (construit à partir de <see cref="T:System.Threading.ParameterizedThreadStart" />) qui gère un thread nommé pour le <see cref="T:System.Xaml.XamlReader" />. Vous spécifiez le nom de thread comme un paramètre.</summary>
      <param name="threadName">Nom du thread.</param>
      <exception cref="T:System.InvalidOperationException">Le thread a déjà démarré.</exception>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.HasLineInfo">
      <summary>Obtient une valeur qui spécifie si des informations de ligne sont disponibles.</summary>
      <returns>
        <see langword="true" /> si des informations de ligne sont disponibles ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.IsEof">
      <summary>Obtient une valeur qui signale si la position du lecteur est à la fin du fichier.</summary>
      <returns>
        <see langword="true" /> si la position est à la fin du fichier ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.LineNumber">
      <summary>Obtient le numéro de ligne à signaler.</summary>
      <returns>Numéro de ligne à signaler.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.LinePosition">
      <summary>Obtient la position de ligne à signaler.</summary>
      <returns>Position de ligne à signaler.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Member">
      <summary>Obtient le membre actuel à la position du lecteur, si la position du lecteur est sur un <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
      <returns>Membre actuel ou <see langword="null" /> si la position n'est pas sur un membre.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Namespace">
      <summary>Obtient l'espace de noms XAML du nœud actuel.</summary>
      <returns>Espace de noms XAML, s'il est disponible ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.NodeType">
      <summary>Obtient le type du nœud actuel.</summary>
      <returns>Valeur de l'énumération <see cref="T:System.Xaml.XamlNodeType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.SchemaContext">
      <summary>Obtient un objet qui fournit les informations de contexte de schéma pour le jeu d'informations.</summary>
      <returns>Objet qui fournit les informations de contexte de schéma pour le jeu d'informations.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Type">
      <summary>Obtient le <see cref="T:System.Xaml.XamlType" /> du nœud actuel.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> du nœud actuel ; ou <see langword="null" /> si la position actuelle du lecteur n'est pas sur un objet.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Value">
      <summary>Obtient la valeur du nœud actuel.</summary>
      <returns>Valeur du nœud actuel ; ou <see langword="null" /> si la position actuelle du lecteur n'est pas sur un type de nœud <see cref="F:System.Xaml.XamlNodeType.Value" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlDeferringLoader">
      <summary>Représente un comportement de lecteur XAML qui charge et retourne le contenu différé.</summary>
    </member>
    <member name="M:System.Xaml.XamlDeferringLoader.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlDeferringLoader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlDeferringLoader.Load(System.Xaml.XamlReader,System.IServiceProvider)">
      <summary>Charge le contenu XAML en mode différé, en fonction d'un <see cref="T:System.Xaml.XamlReader" /> et de certains services obligatoires d'un fournisseur de services.</summary>
      <param name="xamlReader">Lecteur d'amorçage qui est retourné dans les appels à <see cref="M:System.Xaml.XamlDeferringLoader.Save(System.Object,System.IServiceProvider)" />.</param>
      <param name="serviceProvider">Fournisseur de services pour les services requis.</param>
      <returns>Objet racine produit par le <see cref="T:System.Xaml.XamlReader" /> d'entrée.</returns>
    </member>
    <member name="M:System.Xaml.XamlDeferringLoader.Save(System.Object,System.IServiceProvider)">
      <summary>Valide une valeur pour le chargement différé.</summary>
      <param name="value">Valeur d'entrée à valider pour le chargement différé.</param>
      <param name="serviceProvider">Fournisseur de services pour les services requis.</param>
      <returns>Lecteur XAML qui peut être utilisé pour obtenir la valeur différée sous la forme d'informations de nœud XAML.</returns>
    </member>
    <member name="T:System.Xaml.XamlDirective">
      <summary>Fournit l'identificateur de système de type XAML pour un membre si le membre est également une directive XAML. Les lecteurs XAML et les writers XAML utilisent l'identificateur <see cref="T:System.Xaml.XamlDirective" /> pendant le traitement des nœuds membres. L'identificateur est utilisé lorsque le lecteur XAML est positionné sur un <see cref="F:System.Xaml.XamlNodeType.StartMember" /> et que <see cref="P:System.Xaml.XamlMember.IsDirective" /> a la valeur <see langword="true" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlDirective" />, en spécifiant des valeurs pour chacune des valeurs en fonction du cas d'un <see cref="T:System.Xaml.XamlDirective" />.</summary>
      <param name="xamlNamespaces">Jeu d'espaces de noms XAML où ce <see cref="T:System.Xaml.XamlDirective" /> peut exister, passé en tant que jeu énumérable des chaînes d'identification.</param>
      <param name="name">Nom identifiant du <see cref="T:System.Xaml.XamlDirective" />.</param>
      <param name="xamlType">Type XAML qui stocke le <see cref="T:System.Xaml.XamlDirective" />.</param>
      <param name="typeConverter">Convertisseur de type utilisé par ce <see cref="T:System.Xaml.XamlDirective" /> pour la conversion de la syntaxe du texte.</param>
      <param name="allowedLocation">Valeur de l'énumération <see cref="T:System.Xaml.Schema.AllowedMemberLocations" />.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="xamlType" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlDirective" />, en spécifiant des valeurs pour un nom et un espace de noms XAML unique. Utilisez cette signature uniquement lorsque vous souhaitez ou attendez que <see cref="P:System.Xaml.XamlMember.IsUnknown" /> indique <see langword="true" /> pour la directive.</summary>
      <param name="xamlNamespace">Espace de noms XAML principal dans lequel ce <see cref="T:System.Xaml.XamlDirective" /> peut exister.</param>
      <param name="name">Nom identifiant du <see cref="T:System.Xaml.XamlDirective" />.</param>
    </member>
    <member name="M:System.Xaml.XamlDirective.GetHashCode">
      <summary>Retourne le code de hachage pour cet objet.</summary>
      <returns>Code de hachage entier.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.GetXamlNamespaces">
      <summary>Retourne une liste d'espaces de noms XAML dans lesquels ce membre XAML peut exister.</summary>
      <returns>Liste d'identificateurs d'espace de noms XAML, sous forme de chaînes.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupCustomAttributeProvider">
      <summary>Retourne une implémentation de <see cref="T:System.Reflection.ICustomAttributeProvider" />. Cette implémentation retourne toujours <see langword="null" />.</summary>
      <returns>Retourne toujours <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupDeferringLoader">
      <summary>Retourne un objet <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, lequel est utilisé pendant le chargement différé des objets XAML déclarés. Cette implémentation retourne toujours <see langword="null" />.</summary>
      <returns>Retourne toujours <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupDependsOn">
      <summary>Retourne une liste d'objets <see cref="T:System.Xaml.XamlMember" />. Cette liste répertorie les membres pour lesquels il existe des relations de dépendance pour l'ordre d'initialisation concernant ce <see cref="T:System.Xaml.XamlMember" />. Cette implémentation retourne toujours <see langword="null" />.</summary>
      <returns>Retourne toujours <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupInvoker">
      <summary>Retourne le <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> associé à un <see cref="T:System.Xaml.XamlDirective" />.</summary>
      <returns>Informations <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> pour ce <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsAmbient">
      <summary>Retourne une valeur indiquant si ce <see cref="T:System.Xaml.XamlMember" /> est signalé comme étant une propriété ambiante.</summary>
      <returns>Retourne toujours <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsEvent">
      <summary>Retourne une valeur indiquant si ce <see cref="T:System.Xaml.XamlDirective" /> représente un événement.</summary>
      <returns>Retourne toujours <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsReadOnly">
      <summary>Retourne une valeur indiquant si ce <see cref="T:System.Xaml.XamlDirective" /> représente une propriété en lecture seule escomptée.</summary>
      <returns>Retourne toujours <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsReadPublic">
      <summary>Retourne une valeur indiquant si ce <see cref="T:System.Xaml.XamlDirective" /> représente une propriété qui a un accesseur <see langword="get" /> public.</summary>
      <returns>Retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsUnknown">
      <summary>Retourne une valeur indiquant si ce <see cref="T:System.Xaml.XamlDirective" /> représente un membre qui ne peut pas être résolu par le système de stockage utilisé pour la résolution du type et du membre.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlDirective" /> représente un membre qui ne peut pas être résolu ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsWriteOnly">
      <summary>Retourne une valeur indiquant si ce <see cref="T:System.Xaml.XamlDirective" /> représente une propriété en écriture seule escomptée.</summary>
      <returns>Retourne toujours <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsWritePublic">
      <summary>Retourne une valeur indiquant si ce <see cref="T:System.Xaml.XamlDirective" /> représente une propriété qui a un accesseur <see langword="set" /> public.</summary>
      <returns>Retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupTargetType">
      <summary>Retourne le <see cref="T:System.Xaml.XamlType" /> du type dans lequel le <see cref="T:System.Xaml.XamlMember" /> peut exister. Cette implémentation retourne toujours <see langword="null" />.</summary>
      <returns>Retourne toujours <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupType">
      <summary>Retourne le <see cref="T:System.Xaml.XamlType" /> du type qui est utilisé par le membre.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> du type qui est utilisé par le membre.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupTypeConverter">
      <summary>Retourne une implémentation de convertisseur de type qui est associée à ce <see cref="T:System.Xaml.XamlDirective" />.</summary>
      <returns>Instance de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> qui comporte une contrainte <see cref="T:System.ComponentModel.TypeConverter" /> ; ou <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupUnderlyingGetter">
      <summary>Retourne un accesseur <see langword="get" /> associé à ce <see cref="T:System.Xaml.XamlDirective" />. Cette implémentation retourne toujours <see langword="null" />.</summary>
      <returns>Retourne toujours <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupUnderlyingMember">
      <summary>Retourne une réflexion <see cref="T:System.Reflection.MemberInfo" /> CLR associée à ce <see cref="T:System.Xaml.XamlDirective" />. Cette implémentation retourne toujours <see langword="null" />.</summary>
      <returns>Retourne toujours <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupUnderlyingSetter">
      <summary>Retourne un accesseur <see langword="set" /> associé à ce <see cref="T:System.Xaml.XamlDirective" />. Cette implémentation retourne toujours <see langword="null" />.</summary>
      <returns>Retourne toujours <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.ToString">
      <summary>Retourne une représentation sous forme de chaîne de <see cref="T:System.Xaml.XamlDirective" />.</summary>
      <returns>Représentation sous forme de chaîne de <see cref="T:System.Xaml.XamlDirective" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlDirective.AllowedLocation">
      <summary>Obtient une valeur qui spécifie les types de nœud XAML pour lesquels la directive peut être spécifiée.</summary>
      <returns>Valeur de l’énumération. La valeur par défaut est l'énumération par défaut, laquelle est <see cref="F:System.Xaml.Schema.AllowedMemberLocations.None" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlDuplicateMemberException">
      <summary>Exception levée lorsqu'un writer XAML essaie d'écrire une valeur pour un membre en double dans le même nœud d'objet.</summary>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlDuplicateMemberException" /> avec un message fourni par le système qui décrit l'erreur.</summary>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlDuplicateMemberException" /> avec des données sérialisées.</summary>
      <param name="info">Objet qui contient les données sérialisées de l'objet.</param>
      <param name="context">Informations contextuelles sur la source ou la destination.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlDuplicateMemberException" /> avec un message spécifié qui décrit l'erreur.</summary>
      <param name="message">Message décrivant l'exception. L'appelant de ce constructeur est requis pour vérifier que cette chaîne a été localisée pour la culture système actuelle.</param>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlDuplicateMemberException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message décrivant l'exception. L'appelant de ce constructeur est requis pour vérifier que cette chaîne a été localisée pour la culture système actuelle.</param>
      <param name="innerException">Exception ayant provoqué l'exception actuelle. Si le paramètre <paramref name="innerException" /> n'est pas <see langword="null" />, l'exception actuelle est levée dans un bloc <see langword="catch" /> qui gère l'exception interne.</param>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.Xaml.XamlMember,System.Xaml.XamlType)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlDuplicateMemberException" /> avec le membre pertinent et les informations de type à signaler.</summary>
      <param name="member">Identificateur de membre XAML à signaler.</param>
      <param name="type">Identificateur de type XAML à signaler en tant que type parent.</param>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlDuplicateMemberException" /> avec des données sérialisées.</summary>
      <param name="info">Objet qui contient les données sérialisées de l'objet.</param>
      <param name="context">Informations contextuelles sur la source ou la destination.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlDuplicateMemberException.DuplicateMember">
      <summary>Obtient ou définit l'identificateur de membre XAML pour la propriété à signaler en tant que doublon.</summary>
      <returns>Objet <see cref="T:System.Xaml.XamlMember" /> (identificateur de membre XAML) à signaler.</returns>
    </member>
    <member name="P:System.Xaml.XamlDuplicateMemberException.ParentType">
      <summary>Obtient ou définit l'identificateur de type XAML à signaler en tant que type parent.</summary>
      <returns>Objet <see cref="T:System.Xaml.XamlType" /> (identificateur de type XAML) à signaler comme type parent.</returns>
    </member>
    <member name="T:System.Xaml.XamlException">
      <summary>Exception levée pour une exception générale affectant le lecteur XAML ou le writer XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlException" />. L'instance contient un message système qui décrit l'erreur.</summary>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlException" /> avec des données sérialisées.</summary>
      <param name="info">Objet qui contient les données sérialisées de l'objet.</param>
      <param name="context">Informations contextuelles sur la source ou la destination.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlException" />. L'instance contient un message spécifié qui décrit l'erreur.</summary>
      <param name="message">Message décrivant l'exception. L’appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture système actuelle.</param>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlException" />. L'instance contient un message d'erreur spécifié et une référence à l'exception interne qui est à l'origine de cette exception.</summary>
      <param name="message">Message décrivant l'exception. L’appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture système actuelle.</param>
      <param name="innerException">Exception ayant provoqué l'exception actuelle. Si le paramètre <paramref name="innerException" /> n'est pas <see langword="null" />, l'exception actuelle est levée dans un bloc <see langword="catch" /> qui gère l'exception interne.</param>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlException" />. L'instance contient un message d'erreur spécifié, une exception interne et des informations de ligne.</summary>
      <param name="message">Message décrivant l'exception. L’appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture système actuelle.</param>
      <param name="innerException">Exception ayant provoqué l'exception actuelle.</param>
      <param name="lineNumber">Numéro de ligne à signaler aux consommateurs de débogage ou d'informations de ligne.</param>
      <param name="linePosition">Position de ligne à signaler aux consommateurs de débogage ou d'informations de ligne.</param>
    </member>
    <member name="M:System.Xaml.XamlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Implémente <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> et assure la prise en charge de la sérialisation pour les données d'informations de ligne.</summary>
      <param name="info">Objet qui contient les données sérialisées de l'objet.</param>
      <param name="context">Informations contextuelles sur la source ou la destination.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlException.LineNumber">
      <summary>Obtient ou définit le composant de numéro de ligne des informations de ligne de texte XAML que l'exception signale.</summary>
      <returns>Composant de numéro de ligne des informations de ligne de texte XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlException.LinePosition">
      <summary>Obtient ou définit le composant de position de ligne des informations de ligne de texte XAML que l'exception signale.</summary>
      <returns>Composant de position de ligne des informations de ligne de texte XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlException.Message">
      <summary>Obtient ou définit le message d'exception, et si des informations de ligne sont disponibles, ajoute ces dernières au message.</summary>
      <returns>Message d'exception qui inclut les informations de ligne ajoutées.</returns>
    </member>
    <member name="T:System.Xaml.XamlInternalException">
      <summary>Exception levée en cas d'incohérences internes qui se produisent pendant la lecture et l'écriture de code XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlInternalException" /> avec un message fourni par le système qui décrit l'erreur.</summary>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlInternalException" /> avec des données sérialisées.</summary>
      <param name="info">Objet qui contient les données sérialisées de l'objet.</param>
      <param name="context">Informations contextuelles sur la source ou la destination.</param>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlInternalException" /> avec un message spécifié qui décrit l'erreur.</summary>
      <param name="message">Message décrivant l'exception.</param>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlInternalException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message décrivant l'exception.</param>
      <param name="innerException">Exception ayant provoqué l'exception actuelle. Si le paramètre <paramref name="innerException" /> n'est pas <see langword="null" />, l'exception actuelle est levée dans un bloc <see langword="catch" /> qui gère l'exception interne.</param>
    </member>
    <member name="T:System.Xaml.XamlLanguage">
      <summary>Définit des constantes qui fournissent des chaînes ou des objets utiles pour le balisage XAML ou pour la programmation à l'aide de types XAML. Ces chaînes ou objets sont pertinents pour les concepts du langage XAML, pour l'implémentation de concepts du langage XAML dans les services XAML .NET Framework, ou pour les deux.</summary>
    </member>
    <member name="F:System.Xaml.XamlLanguage.Xaml2006Namespace">
      <summary>Obtient une valeur de chaîne pour la chaîne qui identifie l'espace de noms de langage XAML (2006). Cet espace de noms correspond à l’espace de noms XAML (2006) préfixé « x », conformément à la définition donnée dans [MS-XAML] Section 5.1.1.</summary>
    </member>
    <member name="F:System.Xaml.XamlLanguage.Xml1998Namespace">
      <summary>Obtient une valeur de chaîne pour la chaîne qui identifie l'espace de noms de langage XML (1998). Cet espace de noms correspond à l’espace de noms XML préfixé « xml », conformément aux références fournies dans [MS-XAML] Section 5.1.2.</summary>
    </member>
    <member name="P:System.Xaml.XamlLanguage.AllDirectives">
      <summary>Obtient une collection générique en lecture seule de chaque identificateur <see cref="T:System.Xaml.XamlDirective" /> défini par les services XAML .NET Framework.</summary>
      <returns>Collection générique en lecture seule de chaque identificateur <see cref="T:System.Xaml.XamlDirective" /> défini par les services XAML .NET Framework.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.AllTypes">
      <summary>Obtient une collection générique en lecture seule de valeurs <see cref="T:System.Xaml.XamlType" /> individuelles qui correspondent à un intrinsèque en langage XAML, ou sont des alias, et qui sont définies par les services XAML .NET Framework.</summary>
      <returns>Collection générique en lecture seule de chaque <see cref="T:System.Xaml.XamlType" /> qui correspond à un intrinsèque en langage XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Arguments">
      <summary>Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour les <see langword="Arguments" /> d'une méthode de fabrique ou une utilisation générique.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> pour les <see langword="Arguments" /> d'une méthode de fabrique ou une utilisation générique.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Array">
      <summary>Obtient un <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see langword="Array" /> en langage XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see langword="Array" /> en langage XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.AsyncRecords">
      <summary>Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour le pseudo-membre <see langword="AsyncRecords" />.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> pour le pseudo-membre <see langword="AsyncRecords" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Base">
      <summary>Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="base" /> de XML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="base" /> de XML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Boolean">
      <summary>Obtient un <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see langword="Boolean" /> en langage XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see langword="Boolean" /> en langage XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Byte">
      <summary>Obtient un <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see langword="Byte" /> en langage XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see langword="Byte" /> en langage XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Char">
      <summary>Obtient un <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see langword="Char" /> en langage XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see langword="Char" /> en langage XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Class">
      <summary>Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="Class" /> à partir de XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="Class" /> à partir de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.ClassAttributes">
      <summary>Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="ClassAttributes" /> à partir de XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="ClassAttributes" /> à partir de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.ClassModifier">
      <summary>Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="ClassModifier" /> à partir de XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="ClassModifier" /> à partir de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Code">
      <summary>Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour <see langword="Code" />, comme détaillé dans [MS-XAML].</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> pour <see langword="Code" />, comme détaillé dans [MS-XAML].</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.ConnectionId">
      <summary>Obtient un <see cref="T:System.Xaml.XamlDirective" /> qui identifie un point de connexion pour la connexion des événements aux gestionnaires.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> qui identifie un point de connexion pour la connexion des événements aux gestionnaires.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Decimal">
      <summary>Obtient un <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see langword="Decimal" /> en langage XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see langword="Decimal" /> en langage XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Double">
      <summary>Obtient un <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see langword="Double" /> en langage XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see langword="Double" /> en langage XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.FactoryMethod">
      <summary>Obtient un <see cref="T:System.Xaml.XamlDirective" /> qui identifie une méthode de fabrique pour XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> qui identifie une méthode de fabrique pour XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.FieldModifier">
      <summary>Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="FieldModifier" /> à partir de XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="FieldModifier" /> à partir de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Initialization">
      <summary>Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="Initialization" /> à partir de XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="Initialization" /> à partir de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Int16">
      <summary>Obtient un <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see cref="T:System.Int16" /> en langage XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see cref="T:System.Int16" /> en langage XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Int32">
      <summary>Obtient un <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see cref="T:System.Int32" /> en langage XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see cref="T:System.Int32" /> en langage XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Int64">
      <summary>Obtient un <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see cref="T:System.Int64" /> en langage XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see cref="T:System.Int64" /> en langage XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Items">
      <summary>Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="Items" /> à partir de XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="Items" /> à partir de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Key">
      <summary>Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="Key" /> à partir de XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="Key" /> à partir de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Lang">
      <summary>Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="lang" /> de XML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="lang" /> de XML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Member">
      <summary>Obtient un <see cref="T:System.Xaml.XamlType" /> pour le type d'élément de <see cref="P:System.Xaml.XamlLanguage.Members" />.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> pour le type d'élément de <see cref="P:System.Xaml.XamlLanguage.Members" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Members">
      <summary>Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour le concept <see langword="Members" /> en XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> pour le concept <see langword="Members" /> en XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Name">
      <summary>Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="Name" /> à partir de XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="Name" /> à partir de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Null">
      <summary>Obtient un <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see langword="Null" /> ou <see langword="NullExtension" /> en langage XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" />Pour l' <see langword="Null" /> / <see langword="NullExtension" /> intrinsèque en langage XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Object">
      <summary>Obtient un <see cref="T:System.Xaml.XamlType" /> pour le concept <see langword="Object" /> en langage XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> pour le concept <see langword="Object" /> en langage XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.PositionalParameters">
      <summary>Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="PositionalParameters" /> à partir de XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="PositionalParameters" /> à partir de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Property">
      <summary>Obtient un <see cref="T:System.Xaml.XamlType" /> pour le concept <see langword="Property" /> en XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> pour le concept <see langword="Property" /> en XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Reference">
      <summary>Obtient un <see cref="T:System.Xaml.XamlType" /> représentant une <see langword="Reference" /> pour XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> qui représente une <see langword="Reference" /> pour XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Shared">
      <summary>Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="Shared" /> pour XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="Shared" /> pour XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Single">
      <summary>Obtient un <see cref="T:System.Xaml.XamlType" /> pour l’intrinsèque du langage XAML <c>unique</c> .</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" />Pour l’intrinsèque du langage XAML <c>unique</c> .</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Space">
      <summary>Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="space" /> de XML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="space" /> de XML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Static">
      <summary>Obtient un <see cref="T:System.Xaml.XamlType" /> pour l’intrinsèque <see langword="Static" />/<see langword="StaticExtension" /> en langage XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" />Pour l' <see langword="Static" /> / <see langword="StaticExtension" /> intrinsèque en langage XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.String">
      <summary>Obtient un <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see langword="String" /> en langage XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see langword="String" /> en langage XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Subclass">
      <summary>Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="Subclass" /> à partir de XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="Subclass" /> à partir de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.SynchronousMode">
      <summary>Obtient un <see cref="T:System.Xaml.XamlDirective" /> qui autorise le chargement XAML asynchrone si le processeur XAML prend en charge un tel mode.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> qui autorise le chargement XAML asynchrone.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.TimeSpan">
      <summary>Obtient un <see cref="T:System.Xaml.XamlType" /> pour le concept <see langword="TimeSpan" /> en langage XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> pour le concept <see langword="TimeSpan" /> en langage XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Type">
      <summary>Obtient un <see cref="T:System.Xaml.XamlType" /> pour l’intrinsèque <see langword="Type" />/<see langword="TypeExtension" /> en langage XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" />Pour l' <see langword="Type" /> / <see langword="TypeExtension" /> intrinsèque en langage XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.TypeArguments">
      <summary>Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="TypeArguments" /> à partir de XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="TypeArguments" /> à partir de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Uid">
      <summary>Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="Uid" /> à partir de XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="Uid" /> à partir de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.UnknownContent">
      <summary>Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="UnknownContent" /> à partir de XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="UnknownContent" /> à partir de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Uri">
      <summary>Obtient un <see cref="T:System.Xaml.XamlType" /> pour le concept <see langword="Uri" /> en langage XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> pour le concept <see langword="Uri" /> en langage XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.XamlNamespaces">
      <summary>Obtient une collection des identificateurs d'espace de noms pour XAML.</summary>
      <returns>Collection des identificateurs d'espace de noms pour XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.XData">
      <summary>Obtient un <see cref="T:System.Xaml.XamlType" /> pour le type XAML qui stocke un bloc <see langword="XData" /> en XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> pour le type XAML qui stocke un bloc <see langword="XData" />. Consultez [MS-XAML] section 5.2.23.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.XmlNamespaces">
      <summary>Obtient une collection des identificateurs d'espace de noms pour XML.</summary>
      <returns>Collection des identificateurs d'espace de noms pour XML.</returns>
    </member>
    <member name="T:System.Xaml.XamlMember">
      <summary>Fournit l'identificateur du système de type XAML pour les membres de types XAML. L'identificateur est utilisé par les lecteurs et les writers XAML lors du traitement des nœuds membres (lorsque le lecteur XAML est positionné sur un <see cref="F:System.Xaml.XamlNodeType.StartMember" />) de même que pour la logique du système de type XAML général.</summary>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlMember" /> avec le système de type CLR <see cref="T:System.Reflection.EventInfo" /> et un <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
      <param name="eventInfo">Système de type CLR <see cref="T:System.Reflection.EventInfo" /> qui représente le membre d'événement.</param>
      <param name="schemaContext">Contexte <see cref="T:System.Xaml.XamlSchemaContext" /> qui qualifie le membre.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlMember" /> avec le système de type CLR <see cref="T:System.Reflection.EventInfo" /> et un <see cref="T:System.Xaml.XamlSchemaContext" />, notamment les informations sur <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <param name="eventInfo">Système de type CLR <see cref="T:System.Reflection.EventInfo" /> qui représente le membre d'événement.</param>
      <param name="schemaContext">Contexte <see cref="T:System.Xaml.XamlSchemaContext" /> qui qualifie le membre.</param>
      <param name="invoker">Implémentation de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> qui gère les appels de réflexion au moment de l'exécution en fonction du <see cref="T:System.Xaml.XamlMember" />.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlMember" /> avec le système de type CLR <see cref="T:System.Reflection.PropertyInfo" /> et un <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
      <param name="propertyInfo">Système de type CLR <see cref="T:System.Reflection.PropertyInfo" /> qui représente le membre de propriété.</param>
      <param name="schemaContext">Contexte <see cref="T:System.Xaml.XamlSchemaContext" /> qui qualifie le membre.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlMember" /> avec la réflexion <see cref="T:System.Reflection.PropertyInfo" /> et un <see cref="T:System.Xaml.XamlSchemaContext" />, notamment les informations sur <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <param name="propertyInfo">Système de type CLR <see cref="T:System.Reflection.PropertyInfo" /> qui représente le membre de propriété.</param>
      <param name="schemaContext">Contexte <see cref="T:System.Xaml.XamlSchemaContext" /> qui qualifie le membre.</param>
      <param name="invoker">Implémentation de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> qui gère les appels de réflexion au moment de l'exécution en fonction du <see cref="T:System.Xaml.XamlMember" />.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlMember" /> pour un <see cref="T:System.Xaml.XamlMember" /> qui représente une propriété pouvant être jointe.</summary>
      <param name="attachablePropertyName">Nom sous forme de chaîne de la propriété pouvant être attachée.</param>
      <param name="getter">
        <see cref="T:System.Reflection.MethodInfo" /> du système de type CLR pour l'accesseur <see langword="get" /> de l'implémentation de stockage du membre pouvant être attaché.</param>
      <param name="setter">
        <see cref="T:System.Reflection.MethodInfo" /> du système de type CLR pour l'accesseur <see langword="set" /> de l'implémentation de stockage du membre pouvant être attaché.</param>
      <param name="schemaContext">Contexte <see cref="T:System.Xaml.XamlSchemaContext" /> qui qualifie le membre.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlMember" /> pour un <see cref="T:System.Xaml.XamlMember" /> qui représente une propriété pouvant être jointe, notamment les informations sur <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <param name="attachablePropertyName">Nom sous forme de chaîne de la propriété pouvant être attachée.</param>
      <param name="getter">
        <see cref="T:System.Reflection.MethodInfo" /> du système de type CLR pour l'accesseur <see langword="get" /> de l'implémentation de stockage du membre pouvant être attaché.</param>
      <param name="setter">
        <see cref="T:System.Reflection.MethodInfo" /> du système de type CLR pour l'accesseur <see langword="set" /> de l'implémentation de stockage du membre pouvant être attaché.</param>
      <param name="schemaContext">Contexte <see cref="T:System.Xaml.XamlSchemaContext" /> qui qualifie le membre.</param>
      <param name="invoker">Implémentation de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> qui gère les appels de réflexion au moment de l'exécution en fonction du <see cref="T:System.Xaml.XamlMember" />.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlMember" /> pour un <see cref="T:System.Xaml.XamlMember" /> qui représente un événement pouvant être attaché.</summary>
      <param name="attachableEventName">Nom sous forme de chaîne de l'événement pouvant être attaché.</param>
      <param name="adder">
        <see cref="T:System.Reflection.MethodInfo" /> du système de type CLR pour la méthode <see langword="Add" /> du gestionnaire de l'implémentation de stockage du membre pouvant être attaché.</param>
      <param name="schemaContext">Contexte <see cref="T:System.Xaml.XamlSchemaContext" /> qui qualifie le membre.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlMember" /> pour un <see cref="T:System.Xaml.XamlMember" /> qui représente un événement pouvant être attaché, notamment des informations sur <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <param name="attachableEventName">Nom sous forme de chaîne de l'événement pouvant être attaché.</param>
      <param name="adder">
        <see cref="T:System.Reflection.MethodInfo" /> du système de type CLR pour la méthode <see langword="Add" /> du gestionnaire de l'implémentation de stockage du membre pouvant être attaché.</param>
      <param name="schemaContext">Contexte <see cref="T:System.Xaml.XamlSchemaContext" /> qui qualifie le membre.</param>
      <param name="invoker">Implémentation de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> qui gère les appels de réflexion au moment de l'exécution en fonction du <see cref="T:System.Xaml.XamlMember" />.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlMember" />, en utilisant un nom de chaîne et des informations sur le <see cref="T:System.Xaml.XamlType" /> déclarant. Un <see cref="T:System.Xaml.XamlMember" /> construit avec cette signature présente des limitations importantes.</summary>
      <param name="name">Nom sous forme de chaîne du membre.</param>
      <param name="declaringType">Informations <see cref="T:System.Xaml.XamlType" /> pour le type déclarant.</param>
      <param name="isAttachable">
        <see langword="true" /> pour indiquer que le membre peut être attaché ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> ou <paramref name="declaringType" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlMember.Equals(System.Object)">
      <summary>Indique si l'objet actif est égal à un autre objet.</summary>
      <param name="obj">Objet à comparer à cet objet.</param>
      <returns>
        <see langword="true" /> si l'objet actuel est égal au paramètre <paramref name="obj" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)">
      <summary>Indique si l'objet actuel est égal à un autre objet du même type.</summary>
      <param name="other">Objet à comparer à cet objet.</param>
      <returns>
        <see langword="true" /> si l'objet actuel est égal au paramètre <paramref name="other" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.GetHashCode">
      <summary>Retourne le code de hachage pour cet objet.</summary>
      <returns>Code de hachage entier.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.GetXamlNamespaces">
      <summary>Retourne une liste d'espaces de noms XAML dans lesquels ce membre XAML peut exister.</summary>
      <returns>Liste d'identificateurs d'espace de noms XAML sous forme de chaînes.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupCustomAttributeProvider">
      <summary>En cas d'implémentation dans une classe dérivée, retourne une implémentation de <see cref="T:System.Reflection.ICustomAttributeProvider" />.</summary>
      <returns>Implémentation de <see cref="T:System.Reflection.ICustomAttributeProvider" /></returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupDeferringLoader">
      <summary>Retourne un objet <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, lequel est utilisé pour le chargement différé des objets XAML déclarés.</summary>
      <returns>
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> qui a une contrainte <see cref="T:System.Xaml.XamlDeferringLoader" /> sur le générique.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupDependsOn">
      <summary>Retourne une liste d'objets <see cref="T:System.Xaml.XamlMember" />. Cette liste répertorie les membres pour lesquels il existe des relations de dépendance pour l'ordre d'initialisation concernant ce <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Liste des objets <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupInvoker">
      <summary>Retourne un <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> associé à ce <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Informations <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> pour ce <see cref="T:System.Xaml.XamlMember" />, ou <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsAmbient">
      <summary>Retourne une valeur indiquant si ce <see cref="T:System.Xaml.XamlMember" /> est signalé comme étant une propriété ambiante.</summary>
      <returns>
        <see langword="true" /> pour signaler ce <see cref="T:System.Xaml.XamlMember" /> comme une propriété ambiante ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsEvent">
      <summary>Retourne une valeur indiquant si ce <see cref="T:System.Xaml.XamlMember" /> représente un événement.</summary>
      <returns>
        <see langword="true" /> pour signaler que ce <see cref="T:System.Xaml.XamlMember" /> représente un événement ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsReadOnly">
      <summary>Retourne une valeur indiquant si ce <see cref="T:System.Xaml.XamlMember" /> représente une propriété en lecture seule escomptée.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlMember" /> représente une propriété prévue en lecture seule ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsReadPublic">
      <summary>Retourne une valeur indiquant si ce <see cref="T:System.Xaml.XamlMember" /> représente une propriété qui a un accesseur <see langword="get" /> public.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlMember" /> représente une propriété comportant un accesseur <see langword="get" /> public ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsUnknown">
      <summary>Retourne une valeur indiquant si ce <see cref="T:System.Xaml.XamlMember" /> représente un membre qui ne peut pas être résolu par le système de stockage utilisé pour la résolution du type et du membre.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlMember" /> représente un membre qui ne peut pas être résolu ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsWriteOnly">
      <summary>Retourne une valeur indiquant si ce <see cref="T:System.Xaml.XamlMember" /> représente un membre comportant un accesseur <see langword="set" /> public mais pas d'accesseur <see langword="get" /> public.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlMember" /> représente un membre en écriture seule ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsWritePublic">
      <summary>Retourne une valeur indiquant si ce <see cref="T:System.Xaml.XamlMember" /> représente un membre comportant un accesseur <see langword="set" /> public.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlMember" /> représente un membre accessible en écriture ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupMarkupExtensionBracketCharacters">
      <summary>Retourne le crochet ouvrant et le crochet fermant d’une extension de balisage.</summary>
      <returns>Collection contenant le crochet ouvrant et le crochet fermant.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupTargetType">
      <summary>Retourne le <see cref="T:System.Xaml.XamlType" /> du type dans lequel le <see cref="T:System.Xaml.XamlMember" /> peut exister.</summary>
      <returns>Type dans lequel le <see cref="T:System.Xaml.XamlMember" /> peut exister.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupType">
      <summary>Retourne le <see cref="T:System.Xaml.XamlType" /> du type qui est utilisé par le membre.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> du type qui est utilisé par le membre.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupTypeConverter">
      <summary>Retourne une implémentation de convertisseur de type qui est associée à ce <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Instance de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> avec une contrainte <see cref="T:System.ComponentModel.TypeConverter" />, ou <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupUnderlyingGetter">
      <summary>Retourne un accesseur <see langword="get" /> associé à ce <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>
        <see cref="T:System.Reflection.MethodInfo" /> pour l'accesseur <see langword="get" /> associé , sinon <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupUnderlyingMember">
      <summary>Retourne un <see cref="T:System.Reflection.MemberInfo" /> de système de type CLR associé à ce <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Objet <see cref="T:System.Reflection.MemberInfo" /> de système de type CLR associé à ce <see cref="T:System.Xaml.XamlMember" /> ; sinon <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupUnderlyingSetter">
      <summary>Retourne un accesseur <see langword="set" /> associé à ce <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>
        <see cref="T:System.Reflection.MethodInfo" /> pour l'accesseur <see langword="set" /> associé , sinon <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupValueSerializer">
      <summary>Retourne une implémentation du sérialiseur de valeur associée à ce <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Instance de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> avec une contrainte <see cref="T:System.Windows.Markup.ValueSerializer" />, ou <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)">
      <summary>Détermine si deux objets <see cref="T:System.Xaml.XamlMember" /> spécifiés ont la même valeur.</summary>
      <param name="xamlMember1">
        <see cref="T:System.Xaml.XamlMember" /> ou <see langword="null" />.</param>
      <param name="xamlMember2">
        <see cref="T:System.Xaml.XamlMember" /> ou <see langword="null" />.</param>
      <returns>
        <see langword="true" /> si la valeur de <paramref name="xamlMember1" /> est égale à la valeur de <paramref name="xamlMember2" /> ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)">
      <summary>Détermine si deux objets <see cref="T:System.Xaml.XamlMember" /> spécifiés ont des valeurs différentes.</summary>
      <param name="xamlMember1">
        <see cref="T:System.Xaml.XamlMember" /> ou <see langword="null" />.</param>
      <param name="xamlMember2">
        <see cref="T:System.Xaml.XamlMember" /> ou <see langword="null" />.</param>
      <returns>
        <see langword="true" /> si la valeur de <paramref name="xamlMember1" /> est différente de la valeur de <paramref name="xamlMember2" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.ToString">
      <summary>Retourne une représentation sous forme de chaîne de <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Représentation sous forme de chaîne de <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.DeclaringType">
      <summary>Obtient le <see cref="T:System.Xaml.XamlType" /> du type qui déclare le membre associé à ce <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> du type qui déclare le membre associé à ce <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.DeferringLoader">
      <summary>Obtient un objet <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> utilisé pour le chargement différé des objets XAML déclarés.</summary>
      <returns>
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> avec la contrainte <see cref="T:System.Xaml.XamlDeferringLoader" /> sur le générique.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.DependsOn">
      <summary>Obtient une liste d'objets <see cref="T:System.Xaml.XamlMember" />. Cette liste répertorie les membres pour lesquels il existe des relations de dépendance pour l'ordre d'initialisation concernant ce <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Liste des objets <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.Invoker">
      <summary>Obtient l'implémentation de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> associée à ce <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Implémentation de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> associée à ce <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsAmbient">
      <summary>Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlMember" /> est signalé comme étant une propriété ambiante.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlMember" /> est signalé comme étant une propriété ambiante ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsAttachable">
      <summary>Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlMember" /> est un membre pouvant être attaché.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlMember" /> est un membre pouvant être attaché ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsDirective">
      <summary>Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlMember" /> est une directive XAML.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlMember" /> est une directive XAML ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsEvent">
      <summary>Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlMember" /> représente un membre d'événement.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlMember" /> représente un événement ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsNameValid">
      <summary>Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlMember" /> est initialisé avec une chaîne <see langword="xamlName" /> valide en tant que <see cref="P:System.Xaml.XamlMember.Name" />.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlMember" /> est initialisé avec une chaîne <see langword="xamlName" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsReadOnly">
      <summary>Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlMember" /> représente un membre en lecture seule.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlMember" /> représente un membre en lecture seule ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsReadPublic">
      <summary>Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlMember" /> représente un membre avec un accesseur <see langword="get" /> public pouvant être appelé.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlMember" /> représente un accesseur <see langword="get" /> public pouvant être appelé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsUnknown">
      <summary>Obtient une valeur qui indique si le membre ne peut pas être résolu par le système de stockage utilisé pour la résolution du type et du membre.</summary>
      <returns>
        <see langword="true" /> si le membre ne peut pas être résolu ; <see langword="false" /> si le membre peut être résolu.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsWriteOnly">
      <summary>Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlMember" /> représente un membre en écriture seule.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlMember" /> représente un membre en écriture seule ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsWritePublic">
      <summary>Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlMember" /> représente un membre comportant un accesseur <see langword="set" /> public pouvant être appelé.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlMember" /> représente un accesseur <see langword="set" /> public pouvant être appelé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.MarkupExtensionBracketCharacters">
      <summary>Définit le crochet ouvrant et le crochet fermant d’une extension de balisage.</summary>
      <returns>Collection contenant le crochet ouvrant et le crochet fermant.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.Name">
      <summary>Obtient la chaîne de nom <see langword="xamlName" /> qui déclare ce <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Chaîne de nom <see langword="xamlName" /> qui déclare ce <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.PreferredXamlNamespace">
      <summary>Obtient l'URI d'espace de noms XAML qui identifie l'espace de noms XAML principal de ce <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Identificateur pour l'espace de noms XAML principal de ce <see cref="T:System.Xaml.XamlMember" />, sous forme de chaîne.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.SerializationVisibility">
      <summary>Obtient une valeur <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> qui indique comment un concepteur visuel doit traiter le membre.</summary>
      <returns>Valeur de l'énumération <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />. La valeur par défaut est <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.TargetType">
      <summary>Obtient le <see cref="T:System.Xaml.XamlType" /> du type dans lequel le <see cref="T:System.Xaml.XamlMember" /> peut exister.</summary>
      <returns>Type dans lequel le <see cref="T:System.Xaml.XamlMember" /> peut exister.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.Type">
      <summary>Obtient le <see cref="T:System.Xaml.XamlType" /> du type qui est utilisé par le membre.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> du type qui est utilisé par le membre.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.TypeConverter">
      <summary>Obtient un objet <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, qui peut être utilisé pour la construction de conversion de type des objets XAML déclarés.</summary>
      <returns>Valeur <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> avec une contrainte <see cref="T:System.ComponentModel.TypeConverter" /> sur le générique.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.UnderlyingMember">
      <summary>Obtient le <see cref="T:System.Reflection.MemberInfo" /> du système de type CLR qui est disponible pour un membre construit par <see cref="T:System.Reflection.PropertyInfo" />, <see cref="T:System.Reflection.MethodInfo" /> ou <see cref="T:System.Reflection.EventInfo" />.</summary>
      <returns>Informations <see cref="T:System.Reflection.MemberInfo" /> du système de type CLR utilisées pour le transtypage à partir des paramètres du constructeur initial. Un<see cref="T:System.Xaml.XamlMember" /> construit avec la signature <see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" /> retourne <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.ValueSerializer">
      <summary>Obtient un objet <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> utilisé pour la sérialisation de valeur des objets XAML déclarés.</summary>
      <returns>
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> avec la contrainte <see cref="T:System.Windows.Markup.ValueSerializer" /> sur le générique.</returns>
    </member>
    <member name="T:System.Xaml.XamlNodeList">
      <summary>Fournit une liste de nœuds XAML, lesquels peuvent être utilisés pour des scénarios tels que l'écriture différée de nœuds XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlNodeList.#ctor(System.Xaml.XamlSchemaContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlNodeList" /> avec un contexte de schéma fourni.</summary>
      <param name="schemaContext">Contexte de schéma à utiliser pour les opérations de nœud.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemaContext" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlNodeList.#ctor(System.Xaml.XamlSchemaContext,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlNodeList" /> avec un contexte de schéma et une taille de liste fournis.</summary>
      <param name="schemaContext">Contexte de schéma à utiliser pour les opérations de nœud.</param>
      <param name="size">Nombre d'éléments prévu de la liste.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemaContext" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlNodeList.Clear">
      <summary>Efface les éléments contenus dans cette liste.</summary>
    </member>
    <member name="M:System.Xaml.XamlNodeList.GetReader">
      <summary>Retourne un délégué d'implémentation de lecteur XAML.</summary>
      <exception cref="T:System.Xaml.XamlException">
        <see cref="T:System.Xaml.XamlNodeList" /> est encore en mode écriture.  
  
- ou - 
Le writer qui est utilisé pour la liste de nœuds n'a pas de contexte de schéma.</exception>
      <returns>Délégué d'implémentation de lecteur XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlNodeList.Count">
      <summary>Obtient le nombre de nœuds dans ce <see cref="T:System.Xaml.XamlNodeList" />.</summary>
      <returns>Nombre de nœuds dans ce <see cref="T:System.Xaml.XamlNodeList" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlNodeList.Writer">
      <summary>Obtient le writer XAML associé.</summary>
      <returns>Writer XAML associé.</returns>
    </member>
    <member name="T:System.Xaml.XamlNodeQueue">
      <summary>Fournit une mémoire tampon pour l'écriture de nœuds et leur relecture ultérieure.</summary>
    </member>
    <member name="M:System.Xaml.XamlNodeQueue.#ctor(System.Xaml.XamlSchemaContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlNodeQueue" /> avec le contexte de schéma XAML fourni.</summary>
      <param name="schemaContext">Contexte de schéma à utiliser pour les opérations de nœud.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xamlSchemaContext" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.Count">
      <summary>Obtient le nombre de nœuds dans le <see cref="T:System.Xaml.XamlNodeQueue" />.</summary>
      <returns>Nombre de nœuds dans le <see cref="T:System.Xaml.XamlNodeQueue" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.IsEmpty">
      <summary>Obtient une valeur qui détermine si ce <see cref="T:System.Xaml.XamlNodeQueue" /> ne contient pas de nœuds.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlNodeQueue" /> ne contient pas de nœuds ; <see langword="false" /> si ce <see cref="T:System.Xaml.XamlNodeQueue" /> contient des nœuds.</returns>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.Reader">
      <summary>Obtient un délégué d'implémentation de lecteur XAML.</summary>
      <exception cref="T:System.Xaml.XamlException">Le writer XAML qui est utilisé pour la liste de nœuds n'a pas de contexte de schéma XAML valide.</exception>
      <returns>Délégué d'implémentation de lecteur XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.Writer">
      <summary>Obtient le writer XAML associé.</summary>
      <returns>Writer XAML associé.</returns>
    </member>
    <member name="T:System.Xaml.XamlNodeType">
      <summary>Décrit le type du nœud qui est en cours de traitement par un lecteur XAML.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.EndMember">
      <summary>Le lecteur est à la fin d'un nœud membre.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.EndObject">
      <summary>Le lecteur est à la fin d'un nœud d'objet.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.GetObject">
      <summary>Le lecteur se trouve dans un nœud d'objet et écrit une valeur par défaut ou implicite, au lieu d'être une valeur d'objet spécifiée.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.NamespaceDeclaration">
      <summary>Le lecteur est dans une déclaration d'espace de noms XML.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.None">
      <summary>Le lecteur n'est pas positionné au niveau d'un véritable nœud (par exemple, le lecteur peut se trouver à la fin d'un fichier).</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.StartMember">
      <summary>Le lecteur est au début d'un nœud membre.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.StartObject">
      <summary>Le lecteur est au début d'un nœud d'objet.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.Value">
      <summary>Le lecteur est dans un nœud et traite une valeur.</summary>
    </member>
    <member name="T:System.Xaml.XamlObjectEventArgs">
      <summary>Fournit des données pour les rappels qui peuvent être insérées dans la séquence d’initialisation et la valeur de propriété de l’objet. Ceci influence le graphique de l’objet qui est généré par <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectEventArgs.#ctor(System.Object)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlObjectEventArgs" />.</summary>
      <param name="instance">Instance d’objet qui correspond aux données d’événement.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.ElementLineNumber">
      <summary>Obtient ou définit le numéro de ligne de l’instance d’objet appropriée.</summary>
      <returns>Numéro de ligne de l’élément.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.ElementLinePosition">
      <summary>Obtient ou définit la position dans la ligne de l’instance d’objet appropriée.</summary>
      <returns>Position dans la ligne de l’élément.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.Instance">
      <summary>Obtient l’instance d’objet qui correspond aux données d’événement.</summary>
      <returns>Instance d’objet qui correspond aux données d’événement.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.SourceBamlUri">
      <summary>Obtient ou définit l’URI BAML de l’instance d’objet appropriée.</summary>
      <returns>URI BAML de l’instance d’objet appropriée.</returns>
    </member>
    <member name="T:System.Xaml.XamlObjectReader">
      <summary>Fournit une implémentation de <see cref="T:System.Xaml.XamlReader" /> qui lit les graphiques d'objets et génère un flux de données de nœud XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlObjectReader" />.</summary>
      <param name="instance">Racine de l'arborescence d'objets / du graphique d'objets à lire.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlObjectReaderSettings)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlObjectReader" /> avec les paramètres de lecteur spécifiés.</summary>
      <param name="instance">Racine de l'arborescence d'objets à lire.</param>
      <param name="settings">Objet de paramètres.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlSchemaContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlObjectReader" /> avec le contexte de schéma spécifié.</summary>
      <param name="instance">Racine de l'arborescence d'objets à lire.</param>
      <param name="schemaContext">Contexte de schéma du lecteur à utiliser.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemaContext" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectReaderSettings)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlObjectReader" /> avec le schéma de contexte et les paramètres de lecteur spécifiés.</summary>
      <param name="instance">Racine de l'arborescence d'objets à lire.</param>
      <param name="schemaContext">Contexte de schéma du lecteur à utiliser.</param>
      <param name="settings">Objet de paramètres.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemaContext" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.Read">
      <summary>Fournit le nœud XAML suivant à partir du graphique d'objet source, si un nœud est disponible.</summary>
      <returns>
        <see langword="true" /> si un nœud est disponible ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Instance">
      <summary>Obtient l'instance d'objet qui est disponible à la position actuelle du lecteur.</summary>
      <returns>Instance d'objet à la position actuelle du lecteur ; ou <see langword="null" /> si la position du lecteur n'est pas sur un objet.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.IsEof">
      <summary>Obtient une valeur qui signale si la position du lecteur est à la fin du fichier.</summary>
      <returns>
        <see langword="true" /> si la position du lecteur est à la fin du fichier ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Member">
      <summary>Obtient le membre <see cref="T:System.Xaml.XamlMember" /> actuel à la position du lecteur, si la position du lecteur est sur un <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
      <returns>Membre actuel ; ou <see langword="null" /> si la position du lecteur ne se trouve pas sur un membre.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Namespace">
      <summary>Obtient la déclaration d'espace de noms XAML depuis la position actuelle du lecteur.</summary>
      <returns>Déclaration d'espace de noms XAML si le lecteur est positionné sur un <see cref="F:System.Xaml.XamlNodeType.NamespaceDeclaration" /> ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.NodeType">
      <summary>Obtient le type du nœud actuel.</summary>
      <returns>Type du nœud actuel.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.SchemaContext">
      <summary>Obtient un objet qui fournit les informations de schéma pour le jeu d'informations.</summary>
      <returns>Objet qui fournit les informations de schéma pour le jeu d'informations.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Type">
      <summary>Obtient le <see cref="T:System.Xaml.XamlType" /> de l'objet à la position actuelle du lecteur.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> de l'objet à la position actuelle du lecteur ; ou <see langword="null" /> si la position n'est pas sur un objet.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Value">
      <summary>Obtient la valeur du nœud à la position actuelle du lecteur.</summary>
      <returns>Valeur du nœud actuel ; ou <see langword="null" /> si la position du lecteur n'est pas sur un type de nœud <see cref="F:System.Xaml.XamlNodeType.Value" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlObjectReaderException">
      <summary>Exception levée par plusieurs API d'assistance internes <see cref="T:System.Xaml.XamlObjectReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlObjectReaderException" /> avec un message fourni par le système qui décrit l'erreur.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlObjectReaderException" /> avec des données sérialisées.</summary>
      <param name="info">Objet qui contient les données sérialisées de l'objet.</param>
      <param name="context">Informations contextuelles sur la source ou la destination.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlObjectReaderException" /> avec un message spécifié qui décrit l'erreur.</summary>
      <param name="message">Message décrivant l'exception. L'appelant de ce constructeur est requis pour vérifier que cette chaîne a été localisée pour la culture système actuelle.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlObjectReaderException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message décrivant l'exception. L'appelant de ce constructeur est requis pour vérifier que cette chaîne a été localisée pour la culture système actuelle.</param>
      <param name="innerException">Exception ayant provoqué l'exception actuelle. Si le paramètre <paramref name="innerException" /> n'est pas <see langword="null" />, l'exception actuelle est levée dans un bloc <see langword="catch" /> qui gère l'exception interne.</param>
    </member>
    <member name="T:System.Xaml.XamlObjectReaderSettings">
      <summary>Spécifie les règles de traitement ou les paramètres d'option pour un <see cref="T:System.Xaml.XamlObjectReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderSettings.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlObjectReaderSettings" />.</summary>
    </member>
    <member name="P:System.Xaml.XamlObjectReaderSettings.RequireExplicitContentVisibility">
      <summary>Obtient ou définit une valeur qui détermine si les writers qui utilisent le <see cref="T:System.Xaml.XamlObjectReader" /> associé pour le contexte doivent utiliser les paramètres du concepteur pour écrire le contenu explicitement.</summary>
      <returns>
        <see langword="true" /> pour spécifier que les writers qui utilisent ce contexte doivent utiliser les paramètres du concepteur pour écrire n'importe quel contenu de sortie dans les cas où <see cref="P:System.Xaml.XamlMember.IsWritePublic" /> a la valeur <see langword="false" /> ; <see langword="false" /> si les paramètres du concepteur doivent être ignorés.</returns>
    </member>
    <member name="T:System.Xaml.XamlObjectWriter">
      <summary>Crée un graphique d'objet à partir d'un flux de données de nœud XAML source.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlObjectWriter" /> à l’aide du contexte de schéma XAML utilisé par un <see cref="T:System.Xaml.XamlReader" />.</summary>
      <param name="schemaContext">Contexte de schéma XAML partagé avec le lecteur XAML qui fournit des nœuds pour l'écriture.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemaContext" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlObjectWriter" /> à l'aide du contexte utilisé par un <see cref="T:System.Xaml.XamlReader" /> et ses paramètres.</summary>
      <param name="schemaContext">Contexte de schéma XAML partagé avec le lecteur XAML qui fournit des nœuds pour l'écriture.</param>
      <param name="settings">Objet de paramètres qui spécifie certaines options pour le comportement et la sortie de <see cref="T:System.Xaml.XamlObjectWriter" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemaContext" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.Clear">
      <summary>Réinitialise toutes les images possibles et efface le graphique d'objet.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par <see cref="T:System.Xaml.XamlObjectWriter" />, et libère éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)">
      <summary>Appelle une méthode <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler" /> associée à <see cref="T:System.Xaml.XamlObjectWriterSettings" /> pour ce <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <param name="value">Objet à signaler. L'objet est empaqueté dans <see cref="T:System.Xaml.XamlObjectEventArgs" /> lorsque le gestionnaire est appelé.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)">
      <summary>Appelle une méthode <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler" /> associée à <see cref="T:System.Xaml.XamlObjectWriterSettings" /> pour ce <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <param name="value">Objet à signaler. La valeur est empaquetée dans <see cref="T:System.Xaml.XamlObjectEventArgs" /> lorsque le gestionnaire est appelé.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)">
      <summary>Appelle une méthode référencée <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler" /> associée à <see cref="T:System.Xaml.XamlObjectWriterSettings" /> pour ce <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <param name="value">Objet à signaler. Il est empaqueté dans <see cref="T:System.Xaml.XamlObjectEventArgs" /> lorsque le gestionnaire est appelé.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)">
      <summary>Appelle une méthode référencée <see cref="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler" /> associée à <see cref="T:System.Xaml.XamlObjectWriterSettings" /> pour ce <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <param name="value">Valeur à passer via <see cref="T:System.Xaml.XamlObjectEventArgs" /> lorsque le gestionnaire est appelé.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)">
      <summary>Appelle une méthode référencée <see cref="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler" /> associée à <see cref="T:System.Xaml.XamlObjectWriterSettings" /> pour ce writer, dans la mesure où <paramref name="handled" /> dans les données d'événement <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> n'a pas la valeur <see langword="true" />.</summary>
      <param name="eventSender">Objet à signaler en tant que source au gestionnaire.</param>
      <param name="member">Nom de la propriété à définir, qui est passée au gestionnaire dans le cadre de <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</param>
      <param name="value">Valeur à fournir pour la propriété qui est nommée par <paramref name="property" />. La valeur est passée au gestionnaire dans le cadre de <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</param>
      <returns>Valeur booléenne définie par un gestionnaire associé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)">
      <summary>Implémente <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> et fournit les informations de ligne pour les exceptions.</summary>
      <param name="lineNumber">Numéro de ligne du lecteur.</param>
      <param name="linePosition">Position de ligne du lecteur.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteEndMember">
      <summary>Ferme la portée de membres actuelle et écrit éventuellement la valeur de la portée de membres pendant qu'elle se ferme. La nouvelle portée devient la portée d'objets parents du membre.</summary>
      <exception cref="T:System.Xaml.XamlObjectWriterException">Échec de la création de la valeur d'un membre à partir d'un nœud de valeur qui est rencontré entre cet appel et un <see langword="StartMember" /> précédent.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteEndObject">
      <summary>Ferme la portée d'objets actuelle dans le writer. La nouvelle portée d'objets devient la portée de membres parents.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteGetObject">
      <summary>Écrit le <see langword="StartObject" /> conceptuel dans le graphique d'objet lorsque l'objet spécifié est une valeur par défaut ou implicite de la propriété parente. La valeur implicite provient des informations obtenues du contexte de schéma XAML et des informations de type de stockage, au lieu d'être spécifiée en tant que valeur d'objet dans le jeu de nœuds XAML d'entrée.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
      <summary>Définit une déclaration d'espace de noms qui s'applique à la portée d'objets ou de membres suivante.</summary>
      <param name="namespaceDeclaration">Déclaration d'espace de noms à écrire.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceDeclaration" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Un composant de <paramref name="namespaceDeclaration" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlObjectReaderException">Tentative d'écriture d'un nœud d'espaces de noms XAML dans une portée non valide.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)">
      <summary>Écrit un nouveau nœud membre dans la portée d'objets actuelle, et la portée devient une nouvelle portée de membres.</summary>
      <param name="property">Propriété XAML à écrire. En général, vous obtenez cette valeur d'un lecteur XAML via le flux de nœud XAML intermédiaire.</param>
      <exception cref="T:System.Xaml.XamlObjectWriterException">
        <paramref name="property" /> a <see cref="P:System.Xaml.XamlMember.IsUnknown" /> défini à <see langword="true" />.  
  
- ou - 
 <see cref="P:System.Xaml.XamlLanguage.UnknownContent" /> passé, ce qui indique que le contenu du flux de nœud XAML pour un objet ne prend pas en charge le contenu.  
  
- ou - 
Tentative d'écriture d'un membre de démarrage dans une portée non valide.</exception>
      <exception cref="T:System.Xaml.XamlDuplicateMemberException">
        <paramref name="property" /> spécifie une propriété qui est déjà définie explicitement dans la portée d'objet parent.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="property" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)">
      <summary>Écrit un nouveau nœud objet dans la portée actuelle et définit la portée sur une nouvelle portée d'objets.</summary>
      <param name="xamlType">Type à écrire. En général, vous obtenez cette valeur d'un lecteur XAML.</param>
      <exception cref="T:System.Xaml.XamlObjectWriterException">Traitement d'un type <see cref="P:System.Xaml.XamlType.IsUnknown" />, et impossible de créer un objet.  
  
- ou - 
Tentative d'écriture d'un objet de démarrage dans une portée non valide.</exception>
      <exception cref="T:System.Xaml.XamlParseException">Tentative d'écriture d'un objet racine lorsque l'objet racine a déjà été fourni dans les paramètres.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xamlType" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteValue(System.Object)">
      <summary>Écrit une valeur dans la portée de membres actuelle. Si la portée actuelle est à l'intérieur d'une collection, d'un dictionnaire ou d'un objet tableau, la valeur doit être ajoutée à la collection, au dictionnaire ou au tableau.</summary>
      <param name="value">Valeur à écrire.</param>
      <exception cref="T:System.Xaml.XamlObjectWriterException">Tentative d'écriture d'une valeur dans une portée non valide.</exception>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.Result">
      <summary>Obtient le dernier objet qui a été écrit. En général, appelé uniquement lorsque le flux de nœud est à sa fin et que le graphique d'objet est terminé.</summary>
      <returns>Dernier objet écrit, ou <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.RootNameScope">
      <summary>Obtient le service <see cref="T:System.Windows.Markup.INameScope" /> qui maintient la portée de nom XAML pour le nœud racine absolu du writer d'objet XAML.</summary>
      <returns>Service <see cref="T:System.Windows.Markup.INameScope" /> qui maintient la portée de nom XAML pour la racine actuelle du writer d'objet.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.SchemaContext">
      <summary>Obtient le contexte de schéma XAML actif.</summary>
      <returns>Contexte du schéma XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.ShouldProvideLineInfo">
      <summary>Obtient une valeur qui indique si un service d'informations de ligne doit fournir des valeurs et par conséquent également appeler la méthode <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> si nécessaire.</summary>
      <returns>
        <see langword="true" /> si les informations de ligne sont utilisées par le writer ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlObjectWriterException">
      <summary>Exception levée lorsqu'un writer XAML (tel que la classe <see cref="T:System.Xaml.XamlObjectWriter" />) rencontre une erreur en essayant de produire des graphiques d'objets à partir d'un flux de nœud XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlObjectWriterException" /> avec un message fourni par le système qui décrit l'erreur.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlObjectWriterException" /> avec des données sérialisées.</summary>
      <param name="info">Objet qui contient les données sérialisées de l'objet.</param>
      <param name="context">Informations contextuelles sur la source ou la destination.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlObjectWriterException" /> avec un message spécifié qui décrit l'erreur.</summary>
      <param name="message">Message décrivant l'exception. L'appelant de ce constructeur est requis pour vérifier que cette chaîne a été localisée pour la culture système actuelle.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlObjectWriterException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message décrivant l'exception. L'appelant de ce constructeur est requis pour vérifier que cette chaîne a été localisée pour la culture système actuelle.</param>
      <param name="innerException">Exception ayant provoqué l'exception actuelle. Si le paramètre <paramref name="innerException" /> n'est pas <see langword="null" />, l'exception actuelle est levée dans un bloc <see langword="catch" /> qui gère l'exception interne.</param>
    </member>
    <member name="T:System.Xaml.XamlObjectWriterSettings">
      <summary>Fournit des paramètres de writer XAML spécifiques pour <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterSettings.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlObjectWriterSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterSettings.#ctor(System.Xaml.XamlObjectWriterSettings)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlObjectWriterSettings" />, qui est basée sur la copie d'une instance existante.</summary>
      <param name="settings">Instance de paramètres à copier.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="settings" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AccessLevel">
      <summary>Obtient ou définit les autorisations <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> que le writer XAML observe.</summary>
      <returns>Autorisations <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler">
      <summary>Obtient ou définit une référence à un rappel appelé par le writer XAML à la phase <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /> de la durée de vie de chaque objet créé.</summary>
      <returns>Rappel appelé par le writer XAML à la phase <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /> de la durée de vie d'objet.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler">
      <summary>Obtient ou définit une référence à un rappel appelé par le writer XAML à la phase <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /> de la durée de vie de chaque objet créé.</summary>
      <returns>Rappel appelé par le writer XAML à la phase <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /> de la durée de vie d'objet.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler">
      <summary>Obtient ou définit une référence à un rappel appelé par le writer XAML à la phase d'écriture post-membre de la durée de vie de chaque objet créé.</summary>
      <returns>Rappel appelé par le writer XAML à la phase d'écriture post-membre de la durée de vie d'objet.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler">
      <summary>Obtient ou définit une référence à un rappel appelé par le writer XAML à la phase d'écriture pré-membre de la durée de vie de chaque objet créé.</summary>
      <returns>Rappel appelé par le writer XAML à la phase d'écriture pré-membre de la durée de vie d'objet.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
      <summary>Obtient ou définit la portée de nom XAML à utiliser pour l'inscription de noms à partir du writer XAML si <see cref="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope" /> a la valeur <see langword="true" />.</summary>
      <returns>Portée de nom XAML à utiliser pour l'inscription de noms. La valeur par défaut est <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
      <summary>Obtient ou définit une valeur qui spécifie si le writer XAML doit ignorer (ne pas appeler) les implémentations de <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /> sur un <see cref="T:System.ComponentModel.TypeConverter" /> dans les situations de convertisseur de type.</summary>
      <returns>
        <see langword="true" /> si le writer XAML ignore des implémentations de <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /> ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys">
      <summary>Obtient ou définit une valeur qui détermine s'il convient de désactiver une fonctionnalité <see cref="T:System.Xaml.XamlObjectWriter" /> par défaut qui exécute la conversion de type sur le composant <paramref name="K" /> d'un <see cref="T:System.Collections.Generic.Dictionary`2" /> avant d'écrire la représentation de graphique d'objet.</summary>
      <returns>
        <see langword="true" /> si la conversion de type <paramref name="K" /> pour un objet <see cref="T:System.Collections.Generic.Dictionary`2" /> doit être désactivée. <see langword="false" /> si la conversion de type <paramref name="K" /> pour un objet <see cref="T:System.Collections.Generic.Dictionary`2" /> s'applique. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope">
      <summary>Obtient ou définit une valeur qui détermine si l'inscription des noms doit se faire par rapport au <see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" /> spécifié.</summary>
      <returns>
        <see langword="true" /> si l'inscription des noms doit se faire par rapport au <see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" /> ; <see langword="false" /> si l'inscription des noms doit se faire dans la portée de nom XAML parente. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.RootObjectInstance">
      <summary>Obtient ou définit un objet racine préexistant pour les opérations <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <returns>Objet racine préexistant pour les opérations <see cref="T:System.Xaml.XamlObjectWriter" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.SkipDuplicatePropertyCheck">
      <summary>Obtient ou définit une valeur qui détermine si le writer XAML omet de rechercher le chemin du code qui recherche les propriétés en double.</summary>
      <returns>
        <see langword="true" /> si la recherche de propriétés en double doit être omise ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.SkipProvideValueOnRoot">
      <summary>Obtient ou définit une valeur qui indique si <see cref="T:System.Xaml.XamlObjectWriter" /> doit omettre d'appeler <see langword="ProvideValue" /> sur une extension de balisage, ce qui est pertinent lorsque l'extension de balisage représente la racine d'un graphique d'objet.</summary>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Xaml.XamlObjectWriter" /> doit omettre l'appel à <see langword="ProvideValue" /> sur une extension de balisage ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.SourceBamlUri">
      <summary>Utilisé dans <see langword="BeginInitHandler" /> à la place du <see langword="BaseUri" /> réel.</summary>
      <returns>
        <see cref="T:System.Uri" /> à utiliser à la place de l'<see langword="BaseUri" /> réel.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler">
      <summary>Obtient ou définit le gestionnaire à utiliser lorsque le writer d'objet appelle un <see langword="SetValue" /> implémenté CLR pour rechercher les propriétés de dépendance.</summary>
      <returns>Implémentation de gestionnaire qui gère ce cas.</returns>
    </member>
    <member name="T:System.Xaml.XamlParseException">
      <summary>Exception levée lorsqu'un lecteur XAML ne peut pas traiter les éléments de la source de lecteur XAML dans un flux de nœud XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlParseException" /> avec un message fourni par le système qui décrit l'erreur.</summary>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlParseException" /> avec des données sérialisées.</summary>
      <param name="info">Objet qui contient les données sérialisées de l'objet.</param>
      <param name="context">Informations contextuelles sur la source ou la destination.</param>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlParseException" /> avec un message spécifié qui décrit l'erreur.</summary>
      <param name="message">Message décrivant l'exception. L'appelant de ce constructeur est requis pour vérifier que cette chaîne a été localisée pour la culture système actuelle.</param>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlParseException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message décrivant l'exception. L'appelant de ce constructeur est requis pour vérifier que cette chaîne a été localisée pour la culture système actuelle.</param>
      <param name="innerException">Exception ayant provoqué l'exception actuelle. Si le paramètre <paramref name="innerException" /> n'est pas <see langword="null" />, l'exception actuelle est levée dans un bloc <see langword="catch" /> qui gère l'exception interne.</param>
    </member>
    <member name="T:System.Xaml.XamlReader">
      <summary>Fournit les définitions de base des classes qui consomment des entrées XAML et produisent des flux de données de nœud XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.#ctor">
      <summary>Initialise la classe <see cref="T:System.Xaml.XamlReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.Close">
      <summary>Ferme le flux de données de nœud XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par <see cref="T:System.Xaml.XamlReader" />, et libère éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xaml.XamlReader.Read">
      <summary>En cas d'implémentation dans une classe dérivée, fournit le nœud XAML suivant depuis la source, si un nœud est disponible.</summary>
      <returns>
        <see langword="true" /> si un nœud est disponible ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlReader.ReadSubtree">
      <summary>Retourne un <see cref="T:System.Xaml.XamlReader" /> qui est basé sur le <see cref="T:System.Xaml.XamlReader" />actuel, où le <see cref="T:System.Xaml.XamlReader" /> retourné est utilisé pour itérer au sein d'une sous-arborescence de la structure de nœud XAML.</summary>
      <returns>Nouvelle instance de lecteur XAML pour la sous-arborescence.</returns>
    </member>
    <member name="M:System.Xaml.XamlReader.Skip">
      <summary>Ignore le nœud actuel et avance la position du lecteur au nœud suivant.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.System#IDisposable#Dispose">
      <summary>Libère toutes les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.Xaml.XamlReader" />.</summary>
    </member>
    <member name="P:System.Xaml.XamlReader.IsDisposed">
      <summary>Obtient une valeur indiquant si <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /> a été appelé.</summary>
      <returns>
        <see langword="true" /> si <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /> a été appelé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.IsEof">
      <summary>En cas d'implémentation dans une classe dérivée, obtient une valeur qui indique si la position du lecteur est à la fin du fichier.</summary>
      <returns>
        <see langword="true" /> si la position est à la fin conceptuelle du fichier du flux de nœud XAML ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.Member">
      <summary>En cas d'implémentation dans une classe dérivée, obtient le membre actuel à la position du lecteur, si la position du lecteur est sur un <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
      <returns>Membre actuel ; ou <see langword="null" /> si la position du lecteur ne se trouve pas sur un membre.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.Namespace">
      <summary>En cas d'implémentation dans une classe dérivée, obtient des informations sur l'espace de noms XAML du nœud actuel.</summary>
      <returns>Informations sur l'espace de noms XAML, si elles sont disponibles ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.NodeType">
      <summary>En cas d'implémentation dans une classe dérivée, obtient le type du nœud actuel.</summary>
      <returns>Valeur de l'énumération <see cref="T:System.Xaml.XamlNodeType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.SchemaContext">
      <summary>En cas d'implémentation dans une classe dérivée, obtient un objet qui fournit des informations de contexte de schéma XAML pour le jeu d'informations.</summary>
      <returns>Objet qui fournit des informations de contexte de schéma XAML pour le jeu d'informations.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.Type">
      <summary>En cas d'implémentation dans une classe dérivée, obtient le <see cref="T:System.Xaml.XamlType" /> du nœud actuel.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> du nœud actuel ; ou <see langword="null" /> si la position actuelle du lecteur n'est pas sur un objet.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.Value">
      <summary>En cas d'implémentation dans une classe dérivée, obtient la valeur du nœud actuel.</summary>
      <returns>Valeur du nœud actuel ; ou <see langword="null" /> si la position actuelle du lecteur n'est pas sur un type de nœud <see cref="F:System.Xaml.XamlNodeType.Value" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlReaderSettings">
      <summary>Spécifie les règles de traitement ou les paramètres d'option pour une implémentation de <see cref="T:System.Xaml.XamlReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlReaderSettings.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlReaderSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlReaderSettings.#ctor(System.Xaml.XamlReaderSettings)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlReaderSettings" /> en fonction des valeurs contenues dans un autre objet <see cref="T:System.Xaml.XamlReaderSettings" />.</summary>
      <param name="settings">Objet <see cref="T:System.Xaml.XamlReaderSettings" /> existant.</param>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.AllowProtectedMembersOnRoot">
      <summary>Obtient ou définit une valeur qui indique si l'objet racine peut inclure des membres associés à un modèle d'accès au code protégé lorsqu'il fait état de la représentation de type XAML.</summary>
      <returns>
        <see langword="true" /> si l'objet racine peut inclure des membres associés à un modèle d'accès au code protégé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.BaseUri">
      <summary>Obtient ou définit l'URI de base utilisé pour résoudre les chemins d'accès relatifs.</summary>
      <returns>URI de base à utiliser. La valeur par défaut est <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.IgnoreUidsOnPropertyElements">
      <summary>Obtient ou définit une valeur qui spécifie si le lecteur XAML doit ignorer les valeurs des attributs <see langword="x:Uid" /> qui existent sur les éléments de propriété.</summary>
      <returns>
        <see langword="true" /> si le lecteur doit ignorer les valeurs des attributs <see langword="x:Uid" /> placés sur les éléments de propriété. <see langword="false" /> si le lecteur doit traiter les attributs <see langword="x:Uid" /> placés sur les éléments de propriété. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.LocalAssembly">
      <summary>Obtient ou définit l'objet qui représente l'assembly local actuel pour le traitement. Ces informations d'assembly sont utilisées pour les appels aux API d'assistance telles que <see cref="M:System.Xaml.XamlType.GetAllMembers" />.</summary>
      <returns>Objet <see cref="T:System.Reflection.Assembly" /> de réflexion CLR.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.ProvideLineInfo">
      <summary>Obtient ou définit une valeur qui spécifie si le lecteur peut fournir des numéros et des positions de ligne.</summary>
      <returns>
        <see langword="true" /> si le lecteur peut fournir des numéros et des positions de ligne ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.ValuesMustBeString">
      <summary>Obtient ou définit une valeur qui spécifie si le lecteur considère que tous les nœuds <see langword="Value" /> doivent être traités comme étant de type <see langword="String" />.</summary>
      <returns>
        <see langword="true" /> si le lecteur fait en sorte que seule une <see langword="String" /> soit contenue dans les nœuds <see langword="Value" /> ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlSchemaContext">
      <summary>Définit un contexte réutilisable pour l'interprétation ou le mappage des types XAML, ainsi que des types sous-jacents dans les assemblys.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlSchemaContext" /> en fonction d'un jeu d'assemblys de référence.</summary>
      <param name="referenceAssemblies">Jeu énumérable d'éléments d'informations sur l'assembly. Chaque élément d'informations de l'assembly est spécifié par une valeur <see cref="T:System.Reflection.Assembly" />.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlSchemaContext" /> en fonction d'un jeu d'assemblys de référence et d'un objet de paramètres.</summary>
      <param name="referenceAssemblies">Jeu énumérable d'informations sur l'assembly. Chaque élément d'informations de l'assembly est spécifié par une valeur <see cref="T:System.Reflection.Assembly" />.</param>
      <param name="settings">Objet de paramètres à utiliser pour construire le <see cref="T:System.Xaml.XamlSchemaContext" />.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlSchemaContext" /> en fonction d'un objet de paramètres.</summary>
      <param name="settings">Objet de paramètres à utiliser pour construire le <see cref="T:System.Xaml.XamlSchemaContext" />.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.Finalize">
      <summary>Fournit une implémentation <see langword="Finalize" /> non standard qui n'appelle pas <see langword="Dispose" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces">
      <summary>Recherche les assemblys qui sont détenus par ce <see cref="T:System.Xaml.XamlSchemaContext" /> et retourne un jeu d'espaces de noms.</summary>
      <returns>Jeu énumérable d'identificateurs d'espace de noms. Ces identificateurs sont fournis sous forme de chaînes.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)">
      <summary>Recherche les assemblys qui sont détenus par ce <see cref="T:System.Xaml.XamlSchemaContext" /> et retourne un jeu de types à partir de l'espace de noms XAML spécifié.</summary>
      <param name="xamlNamespace">Espace de noms XAML pour lequel retourner les types.</param>
      <returns>Jeu énumérable de types XAML. Chaque type XAML du jeu est représenté par un objet <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)">
      <summary>Obtient une chaîne signalée comme préfixe préféré à utiliser par les consommateurs lorsqu'ils mappent l'espace de noms XAML spécifié.</summary>
      <param name="xmlns">Espace de noms XAML pour lequel obtenir le préfixe préféré.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlns" /> a la valeur null.</exception>
      <returns>Chaîne que les consommateurs doivent utiliser lorsqu'ils mappent l'espace de noms XAML spécifié pour l'utilisation de balises.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)">
      <summary>Retourne un convertisseur de valeurs qui peut effectuer une conversion dans le <paramref name="targetType" /> demandé.</summary>
      <param name="converterType">Implémentation du convertisseur.</param>
      <param name="targetType">Type de destination souhaité pour le convertisseur.</param>
      <typeparam name="TConverterBase">Classe de base du convertisseur spécifique.</typeparam>
      <returns>
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> comportant une contrainte qui correspond à la contrainte mise sur l'appel de méthode.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)">
      <summary>Retourne une valeur <see cref="T:System.Xaml.XamlDirective" /> qui représente une directive, pour le langage XAML ou pour une implémentation particulière.</summary>
      <param name="xamlNamespace">Espace de noms XAML qui contient la directive nommée.</param>
      <param name="name">Nom de la directive à obtenir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xamlNamespace" /> ou <paramref name="name" /> est <see langword="null" />.</exception>
      <returns>Objet <see cref="T:System.Xaml.XamlDirective" /> qui représente la directive demandée.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])">
      <summary>Retourne un <see cref="T:System.Xaml.XamlType" /> basé sur un espace de noms XAML et une chaîne de nom de type. Cette signature peut spécifier les arguments de type dans les cas où le type souhaité est un type générique.</summary>
      <param name="xamlNamespace">Espace de noms XAML qui contient le type souhaité.</param>
      <param name="name">Nom de chaîne du type souhaité.</param>
      <param name="typeArguments">Arguments de type d'initialisation pour un type générique.</param>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> qui correspond aux critères d'entrée.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)">
      <summary>Retourne un <see cref="T:System.Xaml.XamlType" /> qui est basé sur un identificateur de type CLR.</summary>
      <param name="type">Type pour lequel obtenir un <see cref="T:System.Xaml.XamlType" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> a la valeur <see langword="null" />.</exception>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> qui correspond au <paramref name="type" /> d'entrée.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)">
      <summary>Retourne un <see cref="T:System.Xaml.XamlType" /> qui est basé sur un nom de type de système XAML.</summary>
      <param name="xamlTypeName">Nom de type XAML pour lequel obtenir un <see cref="T:System.Xaml.XamlType" />.</param>
      <exception cref="T:System.ArgumentException">Un composant de <paramref name="xamlTypeName" /> (<see cref="P:System.Xaml.Schema.XamlTypeName.Name" /> ou <see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" />) est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xamlTypeName" /> a la valeur <see langword="null" />.</exception>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> qui correspond au <paramref name="xamlTypeName" /> d'entrée.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)">
      <summary>Appelé lorsque les opérations utilisent ce contexte de schéma pour résoudre un assembly requis pour résoudre les espaces de noms XAML qu'il contient.</summary>
      <param name="assemblyName">Nom de l'assembly à charger.</param>
      <returns>Assembly résolu.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
      <summary>Retourne des informations indiquant la réussite ou l'échec d'une demande d'espace de noms XAML compatible. Une demande réussie signale cet espace de noms XAML en tant que paramètre de sortie.</summary>
      <param name="xamlNamespace">Chaîne <see langword="xmlns" /> de l'espace de noms XAML pour lequel rechercher un résultat compatible.</param>
      <param name="compatibleNamespace">Cette méthode retourne la chaîne <see langword="xmlns" /> pour une demande d'espace de noms XAML compatible. Peut être identique à <paramref name="xamlNamespace" /> si la méthode retourne la valeur <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xamlNamespace" /> a la valeur <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> si <paramref name="compatibleNamespace" /> contient un résultat utilisable ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces">
      <summary>Obtient une valeur qui spécifie si un schéma XAML et son contexte utilisent des noms d'assembly qualifiés complets dans les valeurs qui sont retournées par l'API de recherche.</summary>
      <returns>
        <see langword="true" /> si un schéma XAML et son contexte utilisent des noms d'assembly qualifiés complets dans les valeurs qui sont retournées par les API de recherche ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlSchemaContext.ReferenceAssemblies">
      <summary>Obtient un jeu énumérable d'assemblys de référence pour le contexte de schéma XAML.</summary>
      <returns>Jeu énumérable d'assemblys de référence pour le contexte de schéma. Chaque élément d'informations de l'assembly est spécifié par une valeur <see cref="T:System.Reflection.Assembly" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
      <summary>Obtient une valeur qui spécifie si un schéma XAML et son contexte prennent en charge les extensions de balisage qui comportent deux constructeurs avec la même arité (nombre de paramètres d'entrée).</summary>
      <returns>
        <see langword="true" /> si le contexte de schéma autorise les extensions de balisage avec arité en double ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlSchemaContextSettings">
      <summary>Fournit des paramètres facultatifs pour un <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContextSettings.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlSchemaContextSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContextSettings.#ctor(System.Xaml.XamlSchemaContextSettings)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlSchemaContextSettings" /> en copiant les valeurs d'une instance de <see cref="T:System.Xaml.XamlSchemaContextSettings" /> existante.</summary>
      <param name="settings">
        <see cref="T:System.Xaml.XamlSchemaContextSettings" /> existant.</param>
    </member>
    <member name="P:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces">
      <summary>Obtient ou définit une valeur qui spécifie si un schéma XAML et son contexte utilisent des noms d'assembly qualifiés complets dans les valeurs qui sont retournées par l'API de recherche.</summary>
      <returns>
        <see langword="true" /> si un schéma XAML et son contexte utilisent des noms d'assembly qualifiés complets dans les valeurs qui sont retournées par les API de recherche ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity">
      <summary>Obtient ou définit une valeur qui spécifie si un contexte de schéma XAML autorise les extensions de balisage qui comportent deux constructeurs avec la même arité (nombre de paramètres d'entrée).</summary>
      <returns>
        <see langword="true" /> si le contexte de schéma autorise les extensions de balisage qui ont une arité en double ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlSchemaException">
      <summary>Exception levée lorsqu'un système de liaison ou un autre système de représentation de schéma pour XAML signale une exception au contexte de schéma.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlSchemaException" /> avec un message fourni par le système qui décrit l'erreur.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlSchemaException" /> avec des données sérialisées.</summary>
      <param name="info">Objet qui contient les données sérialisées de l'objet.</param>
      <param name="context">Informations contextuelles sur la source ou la destination.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlSchemaException" /> avec un message spécifié qui décrit l'erreur.</summary>
      <param name="message">Message décrivant l'exception. L'appelant de ce constructeur est requis pour vérifier que cette chaîne a été localisée pour la culture système actuelle.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlSchemaException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message décrivant l'exception. L'appelant de ce constructeur est requis pour vérifier que cette chaîne a été localisée pour la culture système actuelle.</param>
      <param name="innerException">Exception ayant provoqué l'exception actuelle. Si le paramètre <paramref name="innerException" /> n'est pas <see langword="null" />, l'exception actuelle est levée dans un bloc <see langword="catch" /> qui gère l'exception interne.</param>
    </member>
    <member name="T:System.Xaml.XamlServices">
      <summary>Fournit des services de niveau supérieur (méthodes statiques) pour les tâches XAML communes de lecture XAML et d'écriture d'un graphique d'objet, ou la lecture d'un graphique d'objet et l'écriture de la sortie de fichier XAML à des fins de sérialisation.</summary>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.IO.Stream)">
      <summary>Charge une source <see cref="T:System.IO.Stream" /> pour un lecteur XAML et écrit sa sortie sous la forme d'un graphique d'objet.</summary>
      <param name="stream">Flux de données à charger en tant qu'entrée.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> a la valeur <see langword="null" />.</exception>
      <returns>Graphique d'objet écrit en tant que sortie.</returns>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.IO.TextReader)">
      <summary>Crée un lecteur XAML à partir d'un <see cref="T:System.IO.TextReader" />, et retourne un graphique d'objet.</summary>
      <param name="textReader">
        <see cref="T:System.IO.TextReader" /> à utiliser en tant que base pour le <see cref="T:System.Xml.XmlReader" /> créé.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textReader" /> a la valeur <see langword="null" />.</exception>
      <returns>Graphique d'objet retourné.</returns>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.String)">
      <summary>Charge une source <see cref="T:System.IO.Stream" /> pour un lecteur XAML et retourne un graphique d'objet.</summary>
      <param name="fileName">Nom de fichier à charger et à utiliser en tant que source.</param>
      <exception cref="T:System.ArgumentNullException">L'entrée <paramref name="fileName" /> est <see langword="null" />.</exception>
      <returns>Graphique d'objet retourné.</returns>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.Xaml.XamlReader)">
      <summary>Charge une implémentation de lecteur XAML spécifique et retourne un graphique d'objet.</summary>
      <param name="xamlReader">Implémentation du lecteur XAML à utiliser comme lecteur pour cette opération <see langword="Load" />.</param>
      <exception cref="T:System.ArgumentNullException">L'entrée <paramref name="xamlReader" /> est <see langword="null" />.</exception>
      <returns>Graphique d'objet retourné.</returns>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.Xml.XmlReader)">
      <summary>Charge une implémentation de lecteur XML spécifique et retourne un graphique d'objet.</summary>
      <param name="xmlReader">Implémentation de <see cref="T:System.Xml.XmlReader" /> à utiliser comme lecteur pour cette opération <see langword="Load" />.</param>
      <exception cref="T:System.ArgumentNullException">L'entrée <paramref name="xamlReader" /> est <see langword="null" />.</exception>
      <returns>Graphique d'objet de sortie.</returns>
    </member>
    <member name="M:System.Xaml.XamlServices.Parse(System.String)">
      <summary>Lit le code XAML comme sortie de chaîne et retourne un graphique d'objet.</summary>
      <param name="xaml">Entrée de chaîne XAML à analyser.</param>
      <exception cref="T:System.ArgumentNullException">L'entrée <paramref name="xaml" /> est <see langword="null" />.</exception>
      <returns>Graphique d'objet retourné.</returns>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)">
      <summary>Traite un graphique d'objet pour en faire une représentation de nœud XAML, puis un flux de sortie pour la sérialisation.</summary>
      <param name="stream">Flux de données de destination.</param>
      <param name="instance">Racine du graphique d'objet à traiter.</param>
      <exception cref="T:System.ArgumentNullException">L'entrée <paramref name="stream" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.IO.TextWriter,System.Object)">
      <summary>Traite un graphique d'objet fourni pour en faire une représentation de nœud XAML, puis une sortie transmise au <see cref="T:System.IO.TextWriter" /> fourni.</summary>
      <param name="writer">
        <see cref="T:System.IO.TextWriter" /> qui écrit la sortie.</param>
      <param name="instance">Racine du graphique d'objet à traiter.</param>
      <exception cref="T:System.ArgumentNullException">L'entrée <paramref name="writer" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.Object)">
      <summary>Traite une arborescence d'objets fournie pour en faire une représentation de nœud XAML, puis retourne une représentation sous forme de chaîne du code XAML de sortie.</summary>
      <param name="instance">Racine du graphique d'objet à traiter.</param>
      <returns>Sortie de balisage XAML sous forme de chaîne.</returns>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.String,System.Object)">
      <summary>Traite un graphique d'objet fourni pour en faire une représentation de nœud XAML, puis l'écrit dans un fichier de sortie à un emplacement fourni.</summary>
      <param name="fileName">Nom et emplacement du fichier dans lequel écrire la sortie.</param>
      <param name="instance">Racine du graphique d'objet à traiter.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="fileName" /> est une chaîne vide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.Xaml.XamlWriter,System.Object)">
      <summary>Traite un graphique d'objet fourni dans une représentation de nœud XAML, puis l'écrit dans le writer XAML fourni.</summary>
      <param name="writer">Implémentation de <see cref="T:System.Xaml.XamlWriter" /> à utiliser.</param>
      <param name="instance">Racine du graphique d'objet à traiter.</param>
      <exception cref="T:System.ArgumentNullException">L'entrée <paramref name="writer" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.Xml.XmlWriter,System.Object)">
      <summary>Traite un graphique d'objet fourni pour en faire une représentation de nœud XAML, puis l'écrit dans le <see cref="T:System.Xml.XmlWriter" /> fourni.</summary>
      <param name="writer">Implémentation de <see cref="T:System.Xml.XmlWriter" /> à utiliser.</param>
      <param name="instance">Racine du graphique d'objet à traiter.</param>
      <exception cref="T:System.ArgumentNullException">L'entrée <paramref name="writer" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter)">
      <summary>Connecte un <see cref="T:System.Xaml.XamlReader" /> et un <see cref="T:System.Xaml.XamlWriter" /> pour utiliser un intermédiaire de jeu de nœuds XAML commun. Transforme potentiellement le contenu, en fonction des types de lecteurs et de writers fournis.</summary>
      <param name="xamlReader">Implémentation de <see cref="T:System.Xaml.XamlReader" /> à utiliser.</param>
      <param name="xamlWriter">
        <see cref="T:System.Xaml.XamlWriter" /> à utiliser.</param>
      <exception cref="T:System.ArgumentNullException">L'entrée de <paramref name="xamlReader" /> ou <paramref name="xamlWriter" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlException">Le contexte de schéma XAML ne correspond pas entre le <paramref name="xamlReader" /> fourni et <paramref name="xamlWriter" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter,System.Boolean)">
      <summary>Connecte un <see cref="T:System.Xaml.XamlReader" /> et un <see cref="T:System.Xaml.XamlWriter" /> pour utiliser un intermédiaire de jeu de nœuds XAML commun. Transforme potentiellement le contenu, en fonction des types de lecteurs et de writers fournis. Fournit un paramètre pour spécifier s'il faut fermer le writer une fois l'appel terminé.</summary>
      <param name="xamlReader">Implémentation de <see cref="T:System.Xaml.XamlReader" /> à utiliser.</param>
      <param name="xamlWriter">
        <see cref="T:System.Xaml.XamlWriter" /> à utiliser.</param>
      <param name="closeWriter">
        <see langword="true" /> pour fermer le writer une fois l'appel terminé ; <see langword="false" /> pour laisser le writer actif à la dernière position écrite.</param>
      <exception cref="T:System.ArgumentNullException">L'entrée de <paramref name="xamlReader" /> ou <paramref name="xamlWriter" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlException">Le contexte de schéma XAML ne correspond pas entre le <paramref name="xamlReader" /> fourni et <paramref name="xamlWriter" />.</exception>
    </member>
    <member name="T:System.Xaml.XamlType">
      <summary>Signale les informations relatives aux types XAML dans le cadre du système XAML général implémenté dans les services XAML .NET Framework.</summary>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlType" /> basée sur un nom de chaîne pour le type.</summary>
      <param name="typeName">Nom du type à créer.</param>
      <param name="typeArguments">Arguments de type pour un <see cref="T:System.Xaml.XamlType" /> qui représente un type générique. Peut être (et est souvent) <see langword="null" />, ce qui indique que le type représenté n'est pas un type générique.</param>
      <param name="schemaContext">Contexte de schéma XAML pour les lecteurs XAML et les writers XAML.</param>
      <exception cref="T:System.ArgumentNullException">Un ou plusieurs <paramref name="typeName" /> ou <paramref name="schemaContext" /> sont <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlType" /> basée sur l'espace de noms XAML et un nom de chaîne pour le type. Ce constructeur est exclusivement destiné à des fins d'analyse et d'enregistrement de nœuds XAML de types réputés pour ne pas avoir de stockage dans le système de type et le contexte de schéma XAML de prise en charge.</summary>
      <param name="unknownTypeNamespace">Espace de noms XAML du type, sous forme de chaîne.</param>
      <param name="unknownTypeName">Nom du type dans l'espace de noms XAML <paramref name="unknownTypeNamespace" /> fourni.</param>
      <param name="typeArguments">Arguments de type pour un <see cref="T:System.Xaml.XamlType" /> qui représente un type générique. Peut être (et est souvent) <see langword="null" />, ce qui indique que le type représenté n'est pas un type générique.</param>
      <param name="schemaContext">Contexte de schéma XAML pour les lecteurs XAML ou les writers XAML.</param>
      <exception cref="T:System.ArgumentNullException">Un ou plusieurs <paramref name="unknownTypeNamespace" />, <paramref name="unknownTypeName" /> ou <paramref name="schemaContext" /> sont <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlType" /> en fonction des informations de type CLR sous-jacentes.</summary>
      <param name="underlyingType">
        <see cref="T:System.Type" /> CLR sous-jacent pour le type XAML à construire.</param>
      <param name="schemaContext">Contexte de schéma XAML pour les lecteurs XAML ou les writers XAML.</param>
      <exception cref="T:System.ArgumentNullException">Un ou plusieurs <paramref name="underlyingType" /> ou <paramref name="schemaContext" /> sont <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlType" /> basée sur les informations de type sous-jacentes, ainsi qu'une implémentation de <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
      <param name="underlyingType">Type CLR sous-jacent pour le type XAML à construire.</param>
      <param name="schemaContext">Contexte de schéma XAML pour le lecteur XAML.</param>
      <param name="invoker">Implémentation de <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> qui gère les appels de réflexion au moment de l'exécution en fonction du <see cref="T:System.Xaml.XamlType" />.</param>
      <exception cref="T:System.ArgumentNullException">Un ou plusieurs <paramref name="underlyingType" /> ou <paramref name="schemaContext" /> sont <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)">
      <summary>Retourne une valeur qui indique si une instance de ce <see cref="T:System.Xaml.XamlType" /> a le <see cref="T:System.Xaml.XamlType" /> spécifié dans sa liste de types assignables.</summary>
      <param name="xamlType">Type avec lequel comparer le <see cref="T:System.Xaml.XamlType" /> actuel.</param>
      <returns>
        <see langword="true" /> si <paramref name="xamlType" /> figure dans la liste des types assignables ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.Equals(System.Object)">
      <summary>Indique si l'objet actif est égal à un autre objet.</summary>
      <param name="obj">Objet à comparer à cet objet.</param>
      <returns>
        <see langword="true" /> si l'objet actuel est égal au paramètre <paramref name="obj" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.Equals(System.Xaml.XamlType)">
      <summary>Indique si l'objet actuel est égal à un autre objet du même type.</summary>
      <param name="other">Objet à comparer à cet objet.</param>
      <returns>
        <see langword="true" /> si l'objet actuel est égal au paramètre <paramref name="other" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)">
      <summary>Retourne le membre XAML ajouté en alias à une directive XAML par ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="directive">Directive pour laquelle rechercher le membre ajouté en alias.</param>
      <returns>Membre ajouté en alias, s'il est trouvé ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAllAttachableMembers">
      <summary>Retourne une collection qui contient toutes les propriétés pouvant être attachées exposées par ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Collection qui contient zéro ou plusieurs valeurs <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAllMembers">
      <summary>Retourne une collection qui contient tous les membres exposés par ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Collection qui contient zéro ou plusieurs valeurs <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAttachableMember(System.String)">
      <summary>Retourne un objet <see cref="T:System.Xaml.XamlMember" /> représentant un membre spécifiquement nommé pouvant être attaché de ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="name">Nom du membre pouvant être attaché à obtenir, dans le formulaire <c>ownerTypeName.MemberName</c>.</param>
      <returns>Un objet <see cref="T:System.Xaml.XamlMember" /> pour le membre demandé pouvant être attaché ; sinon, <see langword="null" />, si aucun membre pouvant être attaché portant ce nom n’existe.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetHashCode">
      <summary>Retourne le code de hachage pour cet objet.</summary>
      <returns>Code de hachage entier.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetMember(System.String)">
      <summary>Retourne un <see cref="T:System.Xaml.XamlMember" /> pour un membre nommé spécifique de ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="name">Nom du membre à obtenir (sous forme de chaîne).</param>
      <returns>Informations <see cref="T:System.Xaml.XamlMember" /> du membre, si un membre de ce type a été trouvé ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)">
      <summary>Pour les types d'extension de balisage, retourne les types des paramètres positionnels pris en charge dans une utilisation de l'extension de balisage spécifique à ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="parameterCount">Nombre (arité) de la syntaxe ou du mode constructeur spécifique pour lequel ou laquelle vous voulez obtenir des informations.</param>
      <returns>Liste de valeurs <see cref="T:System.Xaml.XamlType" />, où chaque <see cref="T:System.Xaml.XamlType" /> correspond au type de cette position dans la syntaxe. Vous devez spécifier les types dans le même ordre lorsque vous fournissez l'entrée de balisage pour l'extension de balisage.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetXamlNamespaces">
      <summary>Retourne une liste d'identificateurs de chaîne pour les espaces de noms XAML dans lesquels le type est inclus.</summary>
      <returns>Liste de valeurs de chaînes où chaque chaîne est l'identificateur URI d'un espace de noms XAML.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)">
      <summary>Retourne le membre XAML ajouté en alias à une directive XAML par ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="directive">Directive pour laquelle rechercher le membre ajouté en alias.</param>
      <returns>Membre ajouté en alias, s'il est trouvé ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAllAttachableMembers">
      <summary>Retourne un jeu énumérable qui contient toutes les propriétés pouvant être attachées exposées par ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Jeu énumérable qui contient zéro, une ou plusieurs valeurs <see cref="T:System.Xaml.XamlMember" /> ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAllMembers">
      <summary>Retourne un jeu énumérable qui contient tous les membres exposés par ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Jeu énumérable qui contient zéro ou plusieurs valeurs <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAllowedContentTypes">
      <summary>Retourne une liste des types utilisables comme valeur <see cref="P:System.Xaml.XamlType.ContentProperty" /> pour ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Liste des types de contenu possibles.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAttachableMember(System.String)">
      <summary>Retourne un <see cref="T:System.Xaml.XamlMember" /> pour une valeur spécifique nommée pouvant être attachée à partir de ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="name">Nom du membre pouvant être attaché à obtenir, dans le formulaire <c>ownerTypeName.MemberName</c>.</param>
      <returns>Un objet <see cref="T:System.Xaml.XamlMember" /> pour le membre demandé pouvant être attaché ; sinon, <see langword="null" />, si aucun membre pouvant être attaché portant ce nom n’existe.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupBaseType">
      <summary>Retourne le <see cref="T:System.Xaml.XamlType" /> du type de base immédiat de ce type XAML. La détermination de cette valeur dépend du type sous-jacent de ce <see cref="T:System.Xaml.XamlType" /> et du contexte de schéma.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> du type de base immédiat de ce type XAML.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupCollectionKind">
      <summary>Retourne une valeur de l'énumération <see cref="T:System.Xaml.Schema.XamlCollectionKind" /> qui déclare le type de collection spécifique utilisé par ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Valeur de l'énumération <see cref="T:System.Xaml.Schema.XamlCollectionKind" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupConstructionRequiresArguments">
      <summary>Retourne une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> doit avoir des arguments (contraintes génériques par <see langword="x:TypeArguments" />, texte d'initialisation ou d'autres techniques XAML) pour construire une instance valide du type.</summary>
      <returns>
        <see langword="true" /> si la construction d'une instance requiert une valeur d'argument ; sinon,  <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupContentProperty">
      <summary>Retourne les informations <see cref="T:System.Xaml.XamlMember" /> de la propriété de contenu de ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Informations <see cref="T:System.Xaml.XamlMember" /> de la propriété de contenu de ce <see cref="T:System.Xaml.XamlType" />. Peut avoir la valeur <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupContentWrappers">
      <summary>Obtient une liste de valeurs <see cref="T:System.Xaml.XamlType" /> qui représentent les wrappers de contenu pour ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Liste de valeurs <see cref="T:System.Xaml.XamlType" /> qui représentent les wrappers de contenu pour ce <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupCustomAttributeProvider">
      <summary>En cas d'implémentation dans une classe dérivée, retourne une implémentation de <see cref="T:System.Reflection.ICustomAttributeProvider" />.</summary>
      <returns>Implémentation de <see cref="T:System.Reflection.ICustomAttributeProvider" /></returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupDeferringLoader">
      <summary>Retourne un objet <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> utilisé pour le chargement différé des objets déclarés par XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> qui a une contrainte <see cref="T:System.Xaml.XamlDeferringLoader" /> sur le générique.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupInvoker">
      <summary>Retourne un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> associé à ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Informations <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> pour ce <see cref="T:System.Xaml.XamlType" /> ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsAmbient">
      <summary>Retourne une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un type ambiant, selon la définition XAML.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente un type ambiant ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsConstructible">
      <summary>Retourne une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un type constructible, selon la définition XAML.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente un type constructible ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsMarkupExtension">
      <summary>Retourne une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente une extension de balisage.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente une extension de balisage ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsNameScope">
      <summary>Retourne une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente une portée de nom XAML, selon la définition XAML.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente une portée de nom XAML ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsNullable">
      <summary>Retourne une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un type Nullable, selon la définition XAML.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente un type Nullable ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsPublic">
      <summary>Retourne une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un type public dans le système de type approprié.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente un type public ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsUnknown">
      <summary>Retourne une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un type qui ne peut pas être résolu dans le système de type sous-jacent.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente un type qui ne peut pas être résolu ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection">
      <summary>Retourne une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente une collection d'espaces blancs significative, selon la définition XML.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente une collection d'espaces blancs significative ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsXData">
      <summary>Retourne une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un <see langword="XDATA" /> XML, selon la définition XAML.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente <see langword="XDATA" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupItemType">
      <summary>Retourne une valeur qui fournit les informations de type pour la propriété <see langword="Items" /> de ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Objet <see cref="T:System.Xaml.XamlType" /> pour le type des éléments de la collection ; sinon, <see langword="null" /> si ce <see cref="T:System.Xaml.XamlType" /> ne représente pas une collection.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupKeyType">
      <summary>Retourne une valeur qui fournit les informations de type pour la propriété de clé de ce <see cref="T:System.Xaml.XamlType" />, si le <see cref="T:System.Xaml.XamlType" /> représente un dictionnaire.</summary>
      <returns>Objet <see cref="T:System.Xaml.XamlType" /> pour le type de la clé pour l'utilisation de dictionnaire, ou <see langword="null" /> si ce <see cref="T:System.Xaml.XamlType" /> ne représente pas de dictionnaire.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupMarkupExtensionReturnType">
      <summary>Retourne une valeur qui fournit les informations de type pour le <see langword="ProvideValue" /> retourné de ce <see cref="T:System.Xaml.XamlType" />, s'il représente une extension de balisage.</summary>
      <returns>Objet <see cref="T:System.Xaml.XamlType" /> pour le type de retour pour l'utilisation d'une extension de balisage ; sinon, <see langword="null" /> si ce <see cref="T:System.Xaml.XamlType" /> ne représente pas une extension de balisage.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupMember(System.String,System.Boolean)">
      <summary>Retourne le <see cref="T:System.Xaml.XamlMember" /> pour un membre nommé spécifique de ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="name">Nom du membre à obtenir (sous forme de chaîne).</param>
      <param name="skipReadOnlyCheck">
        <see langword="true" /> pour retourner un membre même si ce membre a une valeur <see langword="true" /> pour <see cref="P:System.Xaml.XamlMember.IsReadOnly" /> ; <see langword="false" /> pour ne pas retourner de membre <see cref="P:System.Xaml.XamlMember.IsReadOnly" />. La valeur par défaut est <see langword="false" />.</param>
      <returns>Informations <see cref="T:System.Xaml.XamlMember" /> du membre, s'il a été trouvé ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)">
      <summary>Pour les types d'extension de balisage, retourne les types des paramètres positionnels pris en charge dans une utilisation de l'extension de balisage spécifique à ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="parameterCount">Nombre (arité) de la syntaxe ou du mode constructeur spécifique pour lequel ou laquelle vous voulez obtenir des informations.</param>
      <returns>Liste de valeurs <see cref="T:System.Xaml.XamlType" /> où chaque <see cref="T:System.Xaml.XamlType" /> est le type de cette position dans la syntaxe. Vous devez spécifier ces types dans le même ordre lorsque vous fournissez l'entrée de balisage pour l'extension de balisage.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupSetMarkupExtensionHandler">
      <summary>Retourne un rappel du gestionnaire à utiliser pour les opérations ensemblistes d'extensions de balisage.</summary>
      <returns>Rappel du gestionnaire à utiliser pour les opérations ensemblistes d'extensions de balisage.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupSetTypeConverterHandler">
      <summary>Retourne un gestionnaire à utiliser pour le paramétrage du convertisseur de type.</summary>
      <returns>Gestionnaire à utiliser pour le paramétrage du convertisseur de type.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupTrimSurroundingWhitespace">
      <summary>Retourne une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> doit être sérialisé en utilisant un mode qui tronque l’espace blanc l’entourant.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> doit être sérialisé en utilisant un mode qui tronque l'espace blanc autour ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupTypeConverter">
      <summary>Retourne un <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> qui a une contrainte <see cref="T:System.ComponentModel.TypeConverter" />, laquelle représente le comportement de conversion de type pour les valeurs de ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> avec la contrainte <see cref="T:System.ComponentModel.TypeConverter" /> qui représente le comportement de conversion de type pour les valeurs de ce <see cref="T:System.Xaml.XamlType" /> ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupUnderlyingType">
      <summary>Retourne le <see cref="T:System.Type" /> CLR sous-jacent de ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>
        <see cref="T:System.Type" /> CLR sous-jacent de ce <see cref="T:System.Xaml.XamlType" /> ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupUsableDuringInitialization">
      <summary>Retourne une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> est développé de haut en bas pendant l'initialisation XAML.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> est développé de haut en bas pendant l'initialisation XAML ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupValueSerializer">
      <summary>Retourne un <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> qui a une contrainte <see cref="T:System.Windows.Markup.ValueSerializer" />, laquelle représente le comportement de sérialisation pour les valeurs de ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> avec la contrainte <see cref="T:System.Windows.Markup.ValueSerializer" /> qui représente le comportement de sérialisation pour les valeurs de ce <see cref="T:System.Xaml.XamlType" /> ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)">
      <summary>Détermine si deux objets <see cref="T:System.Xaml.XamlType" /> spécifiés ont la même valeur.</summary>
      <param name="xamlType1">
        <see cref="T:System.Xaml.XamlType" /> ou <see langword="null" />.</param>
      <param name="xamlType2">
        <see cref="T:System.Xaml.XamlType" /> ou <see langword="null" />.</param>
      <returns>
        <see langword="true" /> si la valeur de <paramref name="xamlType1" /> est égale à la valeur de <paramref name="xamlType2" /> ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)">
      <summary>Détermine si deux objets <see cref="T:System.Xaml.XamlType" /> spécifiés ont des valeurs différentes.</summary>
      <param name="xamlType1">
        <see cref="T:System.Xaml.XamlType" /> ou <see langword="null" />.</param>
      <param name="xamlType2">
        <see cref="T:System.Xaml.XamlType" /> ou <see langword="null" />.</param>
      <returns>
        <see langword="true" /> si la valeur de <paramref name="xamlType1" /> est différente de la valeur de <paramref name="xamlType2" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.ToString">
      <summary>Retourne une représentation sous forme de chaîne de <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Représentation sous forme de chaîne de <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.AllowedContentTypes">
      <summary>Obtient une collection en lecture seule des types utilisables comme valeur <see cref="P:System.Xaml.XamlType.ContentProperty" /> pour ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Collection en lecture seule des types de contenu possibles.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.BaseType">
      <summary>Obtient le <see cref="T:System.Xaml.XamlType" /> du type de base immédiat de ce type XAML. La détermination de cette valeur dépend du type sous-jacent de ce <see cref="T:System.Xaml.XamlType" /> et du contexte de schéma.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> du type de base immédiat de ce type XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ConstructionRequiresArguments">
      <summary>Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> doit avoir des arguments (contraintes génériques par <see langword="x:TypeArguments" />, texte d'initialisation ou d'autres techniques XAML) pour construire une instance valide du type.</summary>
      <returns>
        <see langword="true" /> si la construction d'une instance requiert une valeur d'argument ; sinon,  <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ContentProperty">
      <summary>Obtient les informations <see cref="T:System.Xaml.XamlMember" /> de la propriété de contenu de ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Informations <see cref="T:System.Xaml.XamlMember" /> de la propriété de contenu de ce <see cref="T:System.Xaml.XamlType" />. Peut être <see langword="null" /> en l'absence de propriété de contenu.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ContentWrappers">
      <summary>Obtient les types utilisés pour inclure dans un wrapper le contenu d'une propriété de contenu en l'absence de correspondance de type stricte, telle que les chaînes dans un <see langword="Collection&lt;T&gt;" />fortement typé.</summary>
      <returns>Collection en lecture seule des types de wrapper de contenu possibles ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.DeferringLoader">
      <summary>Obtient le <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> qui représente le comportement de conversion de chargement différé pour ce type.</summary>
      <returns>
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> avec la contrainte <see cref="T:System.Xaml.XamlDeferringLoader" /> qui représente le comportement de conversion de chargement différé pour ce type.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.Invoker">
      <summary>Obtient l'implémentation de <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> associée à ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Implémentation de <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> associée à ce <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsAmbient">
      <summary>Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un type ambiant, suivant la définition XAML.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente un type ambiant ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsArray">
      <summary>Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un tableau.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente un tableau ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsCollection">
      <summary>Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente une collection.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente une collection ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsConstructible">
      <summary>Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un type constructible, selon la définition XAML.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente un type constructible ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsDictionary">
      <summary>Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un dictionnaire, selon la définition XAML.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente un dictionnaire ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsGeneric">
      <summary>Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un type générique.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente un type générique ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsMarkupExtension">
      <summary>Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente une extension de balisage.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente une extension de balisage ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsNameScope">
      <summary>Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente une portée de nom XAML, selon la définition XAML.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente une portée de nom XAML ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsNameValid">
      <summary>Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> est initialisé en utilisant une chaîne <see langword="xamlName" /> valide comme <see cref="P:System.Xaml.XamlType.Name" />.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> est initialisé en utilisant une chaîne <see langword="xamlName" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsNullable">
      <summary>Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un type Nullable, selon la définition XAML.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente un type Nullable ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsPublic">
      <summary>Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un type public dans le système de type approprié.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente un type public ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsUnknown">
      <summary>Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un type qui ne peut pas être résolu dans le système de type sous-jacent.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente un type qui ne peut pas être résolu ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsUsableDuringInitialization">
      <summary>Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> est développé de haut en bas pendant l'initialisation XAML.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> est développé de haut en bas pendant l'initialisation XAML ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsWhitespaceSignificantCollection">
      <summary>Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente une collection d'espaces blancs significative, selon la définition XML.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente une collection d'espaces blancs significative ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsXData">
      <summary>Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un <see langword="XDATA" /> XML, selon la définition XAML.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente <see langword="XDATA" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ItemType">
      <summary>Obtient une valeur qui fournit les informations de type pour la propriété <see langword="Items" /> de ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Objet <see cref="T:System.Xaml.XamlType" /> pour le type des éléments de la collection ; sinon, <see langword="null" /> si ce <see cref="T:System.Xaml.XamlType" /> ne représente pas une collection.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.KeyType">
      <summary>Obtient une valeur qui fournit les informations de type pour la propriété de clé de ce <see cref="T:System.Xaml.XamlType" />, si le <see cref="T:System.Xaml.XamlType" /> représente un dictionnaire.</summary>
      <returns>Objet <see cref="T:System.Xaml.XamlType" /> pour le type de la clé pour l'utilisation de dictionnaire ; sinon, <see langword="null" /> si ce <see cref="T:System.Xaml.XamlType" /> ne représente pas un dictionnaire.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.MarkupExtensionReturnType">
      <summary>Obtient une valeur qui fournit les informations de type pour le <see langword="ProvideValue" /> retourné de ce <see cref="T:System.Xaml.XamlType" />, s'il représente une extension de balisage.</summary>
      <returns>Objet <see cref="T:System.Xaml.XamlType" /> pour le type de retour pour l'utilisation d'une extension de balisage ; sinon, <see langword="null" /> si ce <see cref="T:System.Xaml.XamlType" /> ne représente pas une extension de balisage.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.Name">
      <summary>Obtient le nom de chaîne du type que ce <see cref="T:System.Xaml.XamlType" /> représente.</summary>
      <returns>Nom de chaîne de ce type XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.PreferredXamlNamespace">
      <summary>Obtient l'espace de noms XAML unique qui est l'espace de noms XAML principal de ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Identificateur, sous forme de chaîne, de l'espace de noms XAML principal de ce type XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.SchemaContext">
      <summary>Obtient le <see cref="T:System.Xaml.XamlSchemaContext" /> actif pour le traitement de ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlSchemaContext" /> actif pour le traitement de ce <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.TrimSurroundingWhitespace">
      <summary>Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> a un comportement de gestion des espaces blancs pour la sérialisation qui tronque l'espace blanc autour du contenu.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente un type qui utilise la troncation des espaces blancs ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.TypeArguments">
      <summary>Obtient une liste d'arguments de type dans les cas où ce <see cref="T:System.Xaml.XamlType" /> représente un générique.</summary>
      <returns>Liste de types d'argument de type ; sinon, <see langword="null" /> si ce <see cref="T:System.Xaml.XamlType" /> ne représente pas un générique.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.TypeConverter">
      <summary>Obtient un <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> avec une contrainte <see cref="T:System.ComponentModel.TypeConverter" /> qui représente le comportement de conversion de type pour les valeurs de ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> avec une contrainte <see cref="T:System.ComponentModel.TypeConverter" /> qui représente le comportement de conversion de type pour les valeurs de ce <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.UnderlyingType">
      <summary>Obtient le <see cref="T:System.Type" /> CLR sous-jacent de ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>
        <see cref="T:System.Type" /> CLR sous-jacent de ce <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ValueSerializer">
      <summary>Obtient un <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> avec une contrainte <see cref="T:System.Windows.Markup.ValueSerializer" /> qui représente le comportement de sérialisation pour les valeurs de ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> avec la contrainte <see cref="T:System.Windows.Markup.ValueSerializer" /> qui représente le comportement de sérialisation pour les valeurs de ce <see cref="T:System.Xaml.XamlType" /> ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlWriter">
      <summary>Fournit l'implémentation par défaut et les définitions de classe de base pour un writer XAML. Il ne s'agit pas d'un writer XAML par défaut actif ; vous devez le dériver de <see cref="T:System.Xaml.XamlWriter" /> et implémenter ses membres abstraits ou utiliser une classe dérivée <see cref="T:System.Xaml.XamlWriter" /> existante.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.Close">
      <summary>Ferme l'objet writer XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par <see cref="T:System.Xaml.XamlWriter" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xaml.XamlWriter.System#IDisposable#Dispose">
      <summary>Consultez <see cref="M:System.IDisposable.Dispose" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteEndMember">
      <summary>En cas d'implémentation dans une classe dérivée, produit la représentation d'un nœud membre de fin.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteEndObject">
      <summary>En cas d'implémentation dans une classe dérivée, produit la représentation d'un nœud objet de fin.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteGetObject">
      <summary>En cas d'implémentation dans une classe dérivée, produit un objet dans les cas où l'objet est une valeur par défaut ou une valeur implicite de la propriété qui est définie, plutôt que de le spécifier en tant que valeur d'objet discrète dans le jeu de nœuds XAML d'entrée.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
      <summary>En cas d'implémentation dans une classe dérivée, écrit un nœud de déclaration d'espace de noms XAML.</summary>
      <param name="namespaceDeclaration">Déclaration d'espace de noms à écrire.</param>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader)">
      <summary>Exécute la commutation selon le type de nœud du lecteur XAML (<see cref="P:System.Xaml.XamlReader.NodeType" />) et appelle la méthode <see langword="Write" /> concernée pour l'implémentation du writer.</summary>
      <param name="reader">Lecteur à utiliser pour la détermination de nœud.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.NotImplementedException">L'implémentation par défaut a rencontré un <see cref="T:System.Xaml.XamlNodeType" /> qui n'est pas dans l'énumération par défaut.</exception>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteStartMember(System.Xaml.XamlMember)">
      <summary>En cas d'implémentation dans une classe dérivée, écrit la représentation d'un nœud membre de début.</summary>
      <param name="xamlMember">Nœud membre à écrire.</param>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteStartObject(System.Xaml.XamlType)">
      <summary>En cas d'implémentation dans une classe dérivée, écrit la représentation d'un nœud objet de début.</summary>
      <param name="type">Type XAML de l'objet à écrire.</param>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteValue(System.Object)">
      <summary>En cas d'implémentation dans une classe dérivée, écrit un nœud valeur.</summary>
      <param name="value">Valeur à écrire.</param>
    </member>
    <member name="P:System.Xaml.XamlWriter.IsDisposed">
      <summary>Obtient une valeur indiquant si <see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" /> a été appelé.</summary>
      <returns>
        <see langword="true" /> si <see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" /> a été appelé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlWriter.SchemaContext">
      <summary>En cas d'implémentation dans une classe dérivée, obtient le contexte de schéma XAML actif.</summary>
      <returns>Contexte de schéma XAML actif.</returns>
    </member>
    <member name="T:System.Xaml.XamlWriterSettings">
      <summary>Fournit les paramètres d'initialisation pour une implémentation de <see cref="T:System.Xaml.XamlWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriterSettings.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlWriterSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriterSettings.#ctor(System.Xaml.XamlWriterSettings)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlWriterSettings" /> à l'aide d'une instance d'autres paramètres existants.</summary>
      <param name="settings">Objet <see cref="T:System.Xaml.XamlWriterSettings" /> existant.</param>
    </member>
    <member name="T:System.Xaml.XamlXmlReader">
      <summary>Traite le balisage XAML des fichiers XML par le biais d'un intermédiaire de <see cref="T:System.Xml.XmlReader" /> et produit un flux de données de nœud XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" /> basée sur un flux.</summary>
      <param name="stream">Flux initial à charger dans le lecteur.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" />, en fonction d'un flux de données, à l'aide d'un contexte de schéma XAML fourni.</summary>
      <param name="stream">Flux initial à charger dans le lecteur.</param>
      <param name="schemaContext">Contexte du schéma XAML pour le traitement XAML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ou <paramref name="schemaContext" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" />, en fonction d'un flux de données, avec un contexte de schéma XAML fourni et des paramètres spécifiques au langage XAML.</summary>
      <param name="stream">Flux initial à charger dans le lecteur.</param>
      <param name="schemaContext">Contexte du schéma XAML pour le traitement XAML.</param>
      <param name="settings">Paramètres de lecteur spécifiques.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ou <paramref name="schemaContext" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlXmlReaderSettings)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" /> basée sur un flux de données, avec des paramètres spécifiques au langage XAML.</summary>
      <param name="stream">Flux initial à charger dans le lecteur.</param>
      <param name="settings">Paramètres de lecteur spécifiques.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" /> basée sur un <see cref="T:System.IO.TextReader" />.</summary>
      <param name="textReader">
        <see cref="T:System.IO.TextReader" /> à utiliser pour l'initialisation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textReader" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlSchemaContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" /> basée sur un<see cref="T:System.IO.TextReader" /> avec un contexte de schéma fourni et des paramètres spécifiques au langage XAML.</summary>
      <param name="textReader">
        <see cref="T:System.IO.TextReader" /> à utiliser pour l'initialisation.</param>
      <param name="schemaContext">Contexte du schéma XAML pour le traitement XAML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textReader" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="schemaContext" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" /> en fonction d'un<see cref="T:System.IO.TextReader" /> à l'aide du contexte de schéma fourni et des paramètres spécifiques au langage XAML.</summary>
      <param name="textReader">
        <see cref="T:System.IO.TextReader" /> à utiliser pour l'initialisation.</param>
      <param name="schemaContext">Contexte du schéma XAML pour le traitement XAML.</param>
      <param name="settings">Paramètres de lecteur spécifiques.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textReader" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="schemaContext" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlXmlReaderSettings)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" /> en fonction d'un <see cref="T:System.IO.TextReader" />, à l'aide des paramètres spécifiques au langage XAML.</summary>
      <param name="textReader">
        <see cref="T:System.IO.TextReader" /> à utiliser pour l'initialisation.</param>
      <param name="settings">Paramètres de lecteur spécifiques.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textReader" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" />, en fonction du nom d'un fichier à charger dans un lecteur XML par défaut.</summary>
      <param name="fileName">Nom du fichier XML à charger.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String,System.Xaml.XamlSchemaContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" />, en fonction du nom d'un fichier à charger dans un lecteur XML par défaut, avec un contexte de schéma XAML fourni.</summary>
      <param name="fileName">Nom du fichier à charger.</param>
      <param name="schemaContext">Contexte du schéma XAML pour le traitement XAML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> ou <paramref name="schemaContext" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" />, en fonction du nom d'un fichier à charger dans un lecteur XML par défaut, à l'aide du contexte de schéma XAML fourni et des paramètres de lecteur spécifiques au langage XAML.</summary>
      <param name="fileName">Nom du fichier XML à charger.</param>
      <param name="schemaContext">Contexte du schéma XAML pour le traitement XAML.</param>
      <param name="settings">Paramètres de lecteur spécifiques.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="schemaContext" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String,System.Xaml.XamlXmlReaderSettings)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" />, en fonction du nom d'un fichier à charger dans un lecteur XML par défaut, à l'aide des paramètres de lecteur spécifiques au langage XAML.</summary>
      <param name="fileName">Nom du fichier XML à charger.</param>
      <param name="settings">Paramètres de lecteur spécifiques.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" /> à l'aide du <see cref="T:System.Xml.XmlReader" /> fourni.</summary>
      <param name="xmlReader">
        <see cref="T:System.Xml.XmlReader" /> à utiliser comme processeur XML intermédiaire.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlReader" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlSchemaContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" /> en utilisant le <see cref="T:System.Xml.XmlReader" /> et le contexte de schéma fournis.</summary>
      <param name="xmlReader">
        <see cref="T:System.Xml.XmlReader" /> à utiliser comme processeur XML intermédiaire.</param>
      <param name="schemaContext">Contexte du schéma XAML pour le traitement XAML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlReader" /> ou <paramref name="schemaContext" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" /> à l'aide du <see cref="T:System.Xml.XmlReader" />, du contexte de schéma et des paramètres de lecteur fournis.</summary>
      <param name="xmlReader">
        <see cref="T:System.Xml.XmlReader" /> à utiliser comme processeur XML intermédiaire.</param>
      <param name="schemaContext">Contexte du schéma XAML pour le traitement XAML.</param>
      <param name="settings">Paramètres de lecteur XAML spécifiques.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlReader" /> ou <paramref name="schemaContext" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlXmlReaderSettings)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" /> à l'aide du <see cref="T:System.Xml.XmlReader" /> et des paramètres de lecteur fournis.</summary>
      <param name="xmlReader">
        <see cref="T:System.Xml.XmlReader" /> à utiliser comme processeur XML intermédiaire.</param>
      <param name="settings">Paramètres de lecteur XAML spécifiques.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlReader" /> ou <paramref name="schemaContext" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.Read">
      <summary>Fournit le nœud XAML suivant de la source chargée, si un nœud XAML est disponible.</summary>
      <returns>
        <see langword="true" /> si un nœud est disponible ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.HasLineInfo">
      <summary>Obtient une valeur qui spécifie si des informations de ligne sont disponibles.</summary>
      <returns>
        <see langword="true" /> si des informations de ligne sont disponibles ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.IsEof">
      <summary>Obtient une valeur qui signale si la position du lecteur dans le flux de nœud XAML est à la fin du fichier.</summary>
      <returns>
        <see langword="true" /> si la position est à la fin conceptuelle du fichier du flux de nœud XAML ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.LineNumber">
      <summary>Obtient le numéro de ligne à signaler.</summary>
      <returns>Numéro de ligne à signaler.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.LinePosition">
      <summary>Obtient la position de ligne à signaler.</summary>
      <returns>Position de ligne à signaler.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Member">
      <summary>Obtient le membre actuel à la position du lecteur, si la position actuelle du lecteur est sur un <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
      <returns>Membre actuel ou <see langword="null" /> si la position actuelle du lecteur n'est pas sur un membre.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Namespace">
      <summary>Obtient l'espace de noms XAML du nœud actuel.</summary>
      <returns>Espace de noms XAML du nœud actuel, s'il est disponible ; sinon <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.NodeType">
      <summary>Obtient le type du nœud actuel.</summary>
      <returns>Valeur de l'énumération <see cref="T:System.Xaml.XamlNodeType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.SchemaContext">
      <summary>Obtient un objet qui fournit les informations de schéma pour le jeu d'informations.</summary>
      <returns>Objet qui fournit les informations de schéma pour le jeu d'informations.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Type">
      <summary>Obtient le <see cref="T:System.Xaml.XamlType" /> du nœud actuel.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> du nœud actuel, ou <see langword="null" /> si la position n'est pas sur un objet.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Value">
      <summary>Obtient la valeur du nœud actuel.</summary>
      <returns>Valeur du nœud actuel ou <see langword="null" /> si la position n'est pas sur un type de nœud <see cref="F:System.Xaml.XamlNodeType.Value" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlXmlReaderSettings">
      <summary>Spécifie les règles de traitement ou les paramètres d'option pour l'implémentation du lecteur XAML <see cref="T:System.Xaml.XamlXmlReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlReaderSettings.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReaderSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlReaderSettings.#ctor(System.Xaml.XamlXmlReaderSettings)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReaderSettings" /> en copiant les paramètres d'un objet <see cref="T:System.Xaml.XamlXmlReaderSettings" /> existant.</summary>
      <param name="settings">Objet <see cref="T:System.Xaml.XamlXmlReaderSettings" /> existant à copier.</param>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.CloseInput">
      <summary>Obtient ou définit une valeur qui indique si le flux ou le lecteur de texte sous-jacent doit être fermé à la fermeture du <see cref="T:System.Xaml.XamlXmlReader" />.</summary>
      <returns>
        <see langword="true" /> pour fermer le flux ou le lecteur sous-jacent à la fermeture du <see cref="T:System.Xaml.XamlXmlReader" /> ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.SkipXmlCompatibilityProcessing">
      <summary>Obtient ou définit une valeur qui détermine si le lecteur doit se démarquer du comportement par défaut du <see cref="T:System.Xaml.XamlXmlReader" /> en matière de traitement du contenu de la compatibilité du balisage.</summary>
      <returns>
        <see langword="true" /> si le lecteur d'amorçage est utilisé directement, ce qui signifie que le balisage de compatibilité XML pris séparément est traité comme partie intégrante du flux de données principal et que la compatibilité n'est pas prise en considération. <see langword="false" /> si le comportement par défaut est utilisé, ce qui traite la compatibilité XML séparément. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.XmlLang">
      <summary>Obtient ou définit la valeur du paramètre de langue que le lecteur peut promouvoir dans les writers qui écrivent des attributs <see langword="xml:lang" /> dans les nœuds.</summary>
      <returns>Chaîne à utiliser pour toute sortie <see langword="xml:lang" /> possible basée sur le lecteur.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.XmlSpacePreserve">
      <summary>Obtient ou définit une valeur qui détermine si le lecteur XAML indique aux writers XAML d'écrire des attributs <see langword="xml:space" /> dans les nœuds. Si ce comportement est souhaité, ces informations sont passées via contexte de schéma XAML partagé.</summary>
      <returns>
        <see langword="true" /> Si les enregistreurs qui traitent le flux de nœud XAML peuvent écrire <c>XML : Space = « Preserve »</c> dans la sortie ; <see langword="false" /> si les <see langword="xml:space" /> attributs ne peuvent pas être écrits dans des nœuds.</returns>
    </member>
    <member name="T:System.Xaml.XamlXmlWriter">
      <summary>Utilise une classe de prise en charge <see cref="T:System.IO.TextWriter" /> ou <see cref="T:System.Xml.XmlWriter" /> pour écrire un flux de nœud XAML dans une forme sérialisée de balisage ou de texte.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlWriter" /> à partir d'un flux de données.</summary>
      <param name="stream">Flux de données à écrire.</param>
      <param name="schemaContext">Contexte de schéma XAML pour le writer XAML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="schemaContext" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlWriter" /> à partir d'un flux à l'aide d'un objet de paramètres de writer.</summary>
      <param name="stream">Flux de données à écrire.</param>
      <param name="schemaContext">Contexte de schéma XAML pour le writer XAML.</param>
      <param name="settings">Instance de <see cref="T:System.Xaml.XamlXmlWriterSettings" />, qui possède généralement des paramètres spécifiques non définis par défaut.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ou <paramref name="schemaContext" /> a la valeur <see langword="null" /></exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlWriter" /> à partir d'une base <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="textWriter">
        <see cref="T:System.IO.TextWriter" /> qui écrit la sortie.</param>
      <param name="schemaContext">Contexte de schéma XAML pour le writer XAML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textWriter" /> ou <paramref name="schemaContext" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlWriter" /> à partir d'une base <see cref="T:System.IO.TextWriter" />, à l'aide d'un objet de paramètres.</summary>
      <param name="textWriter">
        <see cref="T:System.IO.TextWriter" /> qui écrit la sortie.</param>
      <param name="schemaContext">Contexte de schéma XAML pour le writer XAML.</param>
      <param name="settings">Instance de <see cref="T:System.Xaml.XamlXmlWriterSettings" />, qui possède généralement des paramètres spécifiques non définis par défaut.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textWriter" /> ou <paramref name="schemaContext" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlWriter" /> à partir d'une base <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="xmlWriter">
        <see cref="T:System.Xml.XmlWriter" /> qui écrit la sortie.</param>
      <param name="schemaContext">Contexte de schéma XAML pour le writer XAML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlWriter" /> ou <paramref name="schemaContext" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlWriter" /> à partir d'une base <see cref="T:System.Xml.XmlWriter" />, à l'aide d'un objet de paramètres.</summary>
      <param name="xmlWriter">
        <see cref="T:System.Xml.XmlWriter" /> qui écrit la sortie.</param>
      <param name="schemaContext">Contexte de schéma XAML pour le writer XAML.</param>
      <param name="settings">Instance de <see cref="T:System.Xaml.XamlXmlWriterSettings" />, qui possède généralement des paramètres spécifiques non définis par défaut.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlWriter" /> ou <paramref name="schemaContext" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par <see cref="T:System.Xaml.XamlXmlWriter" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources non managées ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.Flush">
      <summary>Appelle la méthode <see langword="Flush" /> du <see cref="T:System.Xml.XmlWriter" /> ou <see cref="T:System.IO.TextWriter" /> sous-jacent, ce qui a pour effet d'écrire toutes les données en mémoire tampon, puis de fermer le writer.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteEndMember">
      <summary>Écrit un nœud membre de fin XAML dans le <see cref="T:System.Xml.XmlWriter" /> ou <see cref="T:System.IO.TextWriter" /> sous-jacent. Lève une exception si la position actuelle du flux de données de nœud XAML n'est pas dans un membre ou si l'état du writer interne ne prend pas en charge l'écriture dans un membre de fin.</summary>
      <exception cref="T:System.InvalidOperationException">La position actuelle du flux de nœud XAML n'est pas dans un membre.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException">L'état du writer actuel ne prend pas en charge l'écriture d'un membre de fin.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteEndObject">
      <summary>Écrit un nœud objet de fin XAML dans le <see cref="T:System.Xml.XmlWriter" /> ou <see cref="T:System.IO.TextWriter" /> sous-jacent. Lève une exception si la position actuelle du flux de nœud XAML en cours de traitement est incompatible avec l'écriture d'un objet de fin.</summary>
      <exception cref="T:System.InvalidOperationException">La position actuelle du flux de nœud XAML n'est pas dans une portée où un membre de fin peut être écrit.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException">L'état du writer actuel ne prend pas en charge l'écriture d'un objet de fin.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteGetObject">
      <summary>Écrit un objet dans les cas où l'objet spécifié est une valeur par défaut ou implicite de la propriété écrite, au lieu d'être spécifié en tant que valeur d'objet dans le jeu de nœuds XAML d'entrée.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
      <summary>Écrit les informations d'espace de noms dans le <see cref="T:System.Xml.XmlWriter" /><see cref="T:System.IO.TextWriter" /> sous-jacent. Peut lever une exception pour certains états ; toutefois, peut à la place différer l'écriture des informations d'espace de noms jusqu'à ce que le writer et le flux de données de nœud XAML en cours de traitement aient atteint une position à laquelle une déclaration d'espace de noms XAML peut être insérée.</summary>
      <param name="namespaceDeclaration">Déclaration d'espace de noms XAML à écrire.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceDeclaration" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="namespaceDeclaration" /> n'est pas une déclaration d'espace de noms XAML valide (possède un préfixe null ou un composant d'identificateur null).</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException">L'état du writer actuel ne prend pas en charge l'écriture d'une déclaration d'espace de noms XAML.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
      <summary>Écrit un nœud membre de début XAML dans le <see cref="T:System.Xml.XmlWriter" /> ou <see cref="T:System.IO.TextWriter" /> sous-jacent. Lève une exception si la position actuelle du flux de données de nœud XAML est dans un autre membre ou si elle n'est pas dans une portée ou un état de writer dans laquelle/lequel un membre de début peut être écrit.</summary>
      <param name="property">Identificateur de membre XAML du membre à écrire.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="property" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="property" /> n’est pas un <see cref="T:System.Xaml.XamlMember" /> valide.</exception>
      <exception cref="T:System.InvalidOperationException">La position actuelle du flux de nœud XAML n'est pas valide pour l'écriture d'un membre de début.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException">L'état du writer n'est pas valide pour l'écriture d'un membre de début.  
  
 - ou -  
  
 Le writer XAML a essayé d'écrire dans un membre dupliqué. Cette exception peut avoir une exception interne plus précise.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteStartObject(System.Xaml.XamlType)">
      <summary>Écrit un nœud objet de début XAML dans le <see cref="T:System.Xml.XmlWriter" /> ou <see cref="T:System.IO.TextWriter" /> sous-jacent. Lève une exception si la position actuelle du flux de données de nœud XAML n'est pas dans une portée dans laquelle un objet de début peut être écrit ou si l'état du writer ne permet pas l'écriture d'un objet de début.</summary>
      <param name="type">
        <see cref="T:System.Xaml.XamlType" /> (identificateur de type XAML) pour l'objet à écrire.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> n’est pas un <see cref="T:System.Xaml.XamlType" /> valide.</exception>
      <exception cref="T:System.InvalidOperationException">La position actuelle du flux de nœud XAML n'est pas valide pour l'écriture d'un nouvel objet de début.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException">L'état du writer XAML n'est pas valide pour l'écriture d'un nouvel objet de début.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)">
      <summary>Écrit un nœud de valeur XAML dans le <see cref="T:System.Xml.XmlWriter" /> ou <see cref="T:System.IO.TextWriter" /> sous-jacent. Lève une exception si la position actuelle du flux de nœud XAML n'est pas valide pour l'écriture d'une valeur ou si l'état du writer ne permet pas l'écriture d'une valeur.</summary>
      <param name="value">Informations de valeur à écrire.</param>
      <exception cref="T:System.InvalidOperationException">La position actuelle du flux de nœud XAML n'est pas valide pour l'écriture d'une valeur.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException">L'état du writer XAML ne prend pas en charge l'écriture d'un nœud de valeur.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> spécifie une valeur qui n'est pas null ou une chaîne.</exception>
    </member>
    <member name="P:System.Xaml.XamlXmlWriter.SchemaContext">
      <summary>Obtient le contexte de schéma XAML utilisé par ce <see cref="T:System.Xaml.XamlXmlWriter" /> pour le traitement.</summary>
      <returns>Contexte de schéma XAML utilisé par ce <see cref="T:System.Xaml.XamlXmlWriter" /> pour le traitement XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlWriter.Settings">
      <summary>Obtient les paramètres de writer utilisés par ce <see cref="T:System.Xaml.XamlXmlWriter" /> pour le traitement XAML.</summary>
      <returns>Paramètres de writer utilisés par ce <see cref="T:System.Xaml.XamlXmlWriter" /> pour le traitement XAML.</returns>
    </member>
    <member name="T:System.Xaml.XamlXmlWriterException">
      <summary>Exception levée par certaines API <see cref="T:System.Xaml.XamlXmlWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlWriterException" /> avec un message fourni par le système qui décrit l'erreur.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlWriterException" /> avec des données sérialisées.</summary>
      <param name="info">Objet qui contient les données sérialisées de l'objet.</param>
      <param name="context">Informations contextuelles sur la source ou la destination.</param>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlWriterException" /> avec un message spécifié qui décrit l'erreur.</summary>
      <param name="message">Message décrivant l'exception. L'appelant de ce constructeur est requis pour vérifier que cette chaîne a été localisée pour la culture système actuelle.</param>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlWriterException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message décrivant l'exception. L'appelant de ce constructeur est requis pour vérifier que cette chaîne a été localisée pour la culture système actuelle.</param>
      <param name="innerException">Exception ayant provoqué l'exception actuelle. Si le paramètre <paramref name="innerException" /> n'est pas <see langword="null" />, l'exception actuelle est levée dans un bloc <see langword="catch" /> qui gère l'exception interne.</param>
    </member>
    <member name="T:System.Xaml.XamlXmlWriterSettings">
      <summary>Fournit des paramètres d'initialisation pour l'implémentation du writer XAML <see cref="T:System.Xaml.XamlXmlWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterSettings.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlWriterSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterSettings.Copy">
      <summary>Retourne une copie de cette instance de <see cref="T:System.Xaml.XamlXmlWriterSettings" />.</summary>
      <returns>Copie retournée.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlWriterSettings.AssumeValidInput">
      <summary>Obtient ou définit une valeur qui spécifie si le <see cref="T:System.Xaml.XamlXmlWriter" /> doit toujours utiliser une entrée XAML valide à des fins de résolution des doublons ou d'autres contrôles d'erreurs.</summary>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Xaml.XamlXmlWriter" /> ignore certains contrôles de validation ou d'erreurs, tels que la levée d'exceptions pour les membres en doublon. <see langword="false" /> si le <see cref="T:System.Xaml.XamlXmlWriter" /> lève des exceptions lorsque du code XAML non valide est rencontré. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlWriterSettings.CloseOutput">
      <summary>Obtient ou définit une valeur qui spécifie si le <see cref="T:System.Xaml.XamlXmlWriter" /> doit se fermer immédiatement après l'opération <see langword="Dispose" /> ou d'autres opérations, ou s'il doit au contraire écrire dans la sortie de la mémoire tampon avant de se fermer. Utilisez ce paramètre avec précaution ; la fermeture immédiate peut provoquer du code XAML non valide qui ne peut plus être chargé.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Xaml.XamlXmlWriter" /> se ferme immédiatement après l'opération <see langword="Dispose" /> ou des opérations similaires. <see langword="false" /> si la sortie restante de la mémoire tampon est écrite avant de libérer le <see cref="T:System.Xaml.XamlXmlWriter" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
  </members>
</doc>