<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Windows.Extensions</name>
  </assembly>
  <members>
    <member name="T:System.Media.SoundPlayer">
      <summary>控制 .wav 文件中的声音播放。</summary>
    </member>
    <member name="E:System.Media.SoundPlayer.LoadCompleted">
      <summary>当成功或未成功加载 .wav 文件时出现。</summary>
    </member>
    <member name="E:System.Media.SoundPlayer.SoundLocationChanged">
      <summary>当已设置此 <see cref="T:System.Media.SoundPlayer" /> 的新音频源路径时出现。</summary>
    </member>
    <member name="E:System.Media.SoundPlayer.StreamChanged">
      <summary>当已设置此 <see cref="T:System.IO.Stream" /> 的新 <see cref="T:System.Media.SoundPlayer" /> 音频源时出现。</summary>
    </member>
    <member name="M:System.Media.SoundPlayer.#ctor">
      <summary>初始化 <see cref="T:System.Media.SoundPlayer" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Media.SoundPlayer.#ctor(System.IO.Stream)">
      <summary>初始化 <see cref="T:System.Media.SoundPlayer" /> 类的新实例，并在指定的 <see cref="T:System.IO.Stream" /> 内附加 .wav 文件。</summary>
      <param name="stream">.wav 文件的 <see cref="T:System.IO.Stream" />。</param>
    </member>
    <member name="M:System.Media.SoundPlayer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>初始化 <see cref="T:System.Media.SoundPlayer" /> 类的新实例。</summary>
      <param name="serializationInfo">要用于反序列化的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">用于反序列化的目标。</param>
      <exception cref="T:System.UriFormatException">无法解析 <paramref name="serializationInfo" /> 中指定的 <see cref="P:System.Media.SoundPlayer.SoundLocation" />。</exception>
    </member>
    <member name="M:System.Media.SoundPlayer.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Media.SoundPlayer" /> 类的新实例，并附加指定的 .wav 文件。</summary>
      <param name="soundLocation">要加载的 .wav 文件的位置。</param>
      <exception cref="T:System.UriFormatException">无法解析由 <paramref name="soundLocation" /> 指定的 URL 值。</exception>
    </member>
    <member name="M:System.Media.SoundPlayer.Load">
      <summary>同步加载声音。</summary>
      <exception cref="T:System.ServiceProcess.TimeoutException">加载所用的时间超出了 <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> 指定的时间（以毫秒为单位）。</exception>
      <exception cref="T:System.IO.FileNotFoundException">找不到 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的文件。</exception>
    </member>
    <member name="M:System.Media.SoundPlayer.LoadAsync">
      <summary>使用新线程从流或 Web 资源中加载 .wav 文件。</summary>
      <exception cref="T:System.ServiceProcess.TimeoutException">加载所用的时间超出了 <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> 指定的时间（以毫秒为单位）。</exception>
      <exception cref="T:System.IO.FileNotFoundException">找不到 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的文件。</exception>
    </member>
    <member name="M:System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)">
      <summary>引发 <see cref="E:System.Media.SoundPlayer.LoadCompleted" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />。</param>
    </member>
    <member name="M:System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)">
      <summary>引发 <see cref="E:System.Media.SoundPlayer.SoundLocationChanged" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)">
      <summary>引发 <see cref="E:System.Media.SoundPlayer.StreamChanged" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Media.SoundPlayer.Play">
      <summary>使用新线程播放 .wav 文件，如果尚未加载 .wav 文件，则先加载该文件。</summary>
      <exception cref="T:System.ServiceProcess.TimeoutException">加载所用的时间超出了 <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> 指定的时间（以毫秒为单位）。</exception>
      <exception cref="T:System.IO.FileNotFoundException">找不到 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的文件。</exception>
      <exception cref="T:System.InvalidOperationException">.wav 标头已损坏；由 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的文件不是 PCM .wav 文件。</exception>
    </member>
    <member name="M:System.Media.SoundPlayer.PlayLooping">
      <summary>使用新线程循环播放 .wav 文件，如果尚未加载 .wav 文件，则先加载该文件。</summary>
      <exception cref="T:System.ServiceProcess.TimeoutException">加载所用的时间超出了 <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> 指定的时间（以毫秒为单位）。</exception>
      <exception cref="T:System.IO.FileNotFoundException">找不到 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的文件。</exception>
      <exception cref="T:System.InvalidOperationException">.wav 标头已损坏；由 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的文件不是 PCM .wav 文件。</exception>
    </member>
    <member name="M:System.Media.SoundPlayer.PlaySync">
      <summary>播放 .wav 文件，如果尚未加载 .wav 文件，则先加载该文件。</summary>
      <exception cref="T:System.ServiceProcess.TimeoutException">加载所用的时间超出了 <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> 指定的时间（以毫秒为单位）。</exception>
      <exception cref="T:System.IO.FileNotFoundException">找不到 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的文件。</exception>
      <exception cref="T:System.InvalidOperationException">.wav 标头已损坏；由 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的文件不是 PCM .wav 文件。</exception>
    </member>
    <member name="M:System.Media.SoundPlayer.Stop">
      <summary>如果播放正在进行，则停止播放声音。</summary>
    </member>
    <member name="M:System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> 方法。</summary>
      <param name="info">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">此序列化的目标（请参见 <see cref="T:System.Runtime.Serialization.StreamingContext" />）。</param>
    </member>
    <member name="P:System.Media.SoundPlayer.IsLoadCompleted">
      <summary>获取一个值，该值指示 .wav 文件的加载是否已经成功完成。</summary>
      <returns>如果加载了 .wav 文件，则为 <see langword="true" />，如果还没有加载 .wav 文件，则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Media.SoundPlayer.LoadTimeout">
      <summary>获取或设置 .wav 文件的加载必须完成的时间（以毫秒为单位）。</summary>
      <returns>要等待的毫秒数。 默认值为 10000（10 秒）。</returns>
    </member>
    <member name="P:System.Media.SoundPlayer.SoundLocation">
      <summary>获取或设置要加载的 .wav 文件的文件路径或 URL。</summary>
      <returns>从中加载 .wav 文件的文件路径或 URL，如果不存在文件路径，则为 <see cref="F:System.String.Empty" />。 默认值为 <see cref="F:System.String.Empty" />。</returns>
    </member>
    <member name="P:System.Media.SoundPlayer.Stream">
      <summary>获取或设置从中加载 .wav 文件的 <see cref="T:System.IO.Stream" />。</summary>
      <returns>从中加载 .wav 文件的 <see cref="T:System.IO.Stream" />，如果没有可用的流，则为 <see langword="null" />。 默认值为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Media.SoundPlayer.Tag">
      <summary>获取或设置包含有关 <see cref="T:System.Object" /> 的数据的 <see cref="T:System.Media.SoundPlayer" />。</summary>
      <returns>一个 <see cref="T:System.Object" />，包含有关 <see cref="T:System.Media.SoundPlayer" /> 的数据。</returns>
    </member>
    <member name="T:System.Media.SystemSound">
      <summary>表示一个系统声音类型。</summary>
    </member>
    <member name="M:System.Media.SystemSound.Play">
      <summary>播放系统声音类型。</summary>
    </member>
    <member name="T:System.Media.SystemSounds">
      <summary>检索与一组 Windows 操作系统声音事件类型关联的声音。 此类不能被继承。</summary>
    </member>
    <member name="P:System.Media.SystemSounds.Asterisk">
      <summary>获取与当前 Windows 声音方案中的 <see langword="Asterisk" /> 程序事件关联的声音。</summary>
      <returns>与当前 Windows 声音方案中的 <see langword="Asterisk" /> 程序事件关联的 <see cref="T:System.Media.SystemSound" />。</returns>
    </member>
    <member name="P:System.Media.SystemSounds.Beep">
      <summary>获取与当前 Windows 声音方案中的 <see langword="Beep" /> 程序事件关联的声音。</summary>
      <returns>与当前 Windows 声音方案中的 <see langword="Beep" /> 程序事件关联的 <see cref="T:System.Media.SystemSound" />。</returns>
    </member>
    <member name="P:System.Media.SystemSounds.Exclamation">
      <summary>获取与当前 Windows 声音方案中的 <see langword="Exclamation" /> 程序事件关联的声音。</summary>
      <returns>与当前 Windows 声音方案中的 <see langword="Exclamation" /> 程序事件关联的 <see cref="T:System.Media.SystemSound" />。</returns>
    </member>
    <member name="P:System.Media.SystemSounds.Hand">
      <summary>获取与当前 Windows 声音方案中的 <see langword="Hand" /> 程序事件关联的声音。</summary>
      <returns>与当前 Windows 声音方案中的 <see langword="Hand" /> 程序事件关联的 <see cref="T:System.Media.SystemSound" />。</returns>
    </member>
    <member name="P:System.Media.SystemSounds.Question">
      <summary>获取与当前 Windows 声音方案中的 <see langword="Question" /> 程序事件关联的声音。</summary>
      <returns>与当前 Windows 声音方案中的 <see langword="Question" /> 程序事件关联的 <see cref="T:System.Media.SystemSound" />。</returns>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509Certificate2UI">
      <summary>显示的用户界面对话框使您可以选择和查看 X.509 证书。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2UI.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2UI" /> 类的实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2UI.DisplayCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>显示一个对话框，其中包含 X.509 证书及其关联证书链的属性。</summary>
      <param name="certificate">要显示的 X.509 证书。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="certificate" /> 参数无效。</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2UI.DisplayCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IntPtr)">
      <summary>使用父窗口的句柄显示一个对话框，其中包含 X.509 证书及其关联证书链的属性。</summary>
      <param name="certificate">要显示的 X.509 证书。</param>
      <param name="hwndParent">用于显示对话框的父窗口的句柄。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="certificate" /> 参数无效。</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2UI.SelectFromCollection(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.String,System.String,System.Security.Cryptography.X509Certificates.X509SelectionFlag)">
      <summary>显示一个从证书集合中选择 X.509 证书的对话框。</summary>
      <param name="certificates">X.509 证书的集合，从中选择相应的证书。</param>
      <param name="title">对话框的标题。</param>
      <param name="message">指导用户的描述性消息。  该消息显示在对话框中。</param>
      <param name="selectionFlag">
        <see cref="T:System.Security.Cryptography.X509Certificates.X509SelectionFlag" /> 值之一，用于指定允许单项选择还是允许多项选择。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="selectionFlag" /> 参数不是有效的标志。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificates" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="certificates" /> 参数无效。</exception>
      <returns>一个 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> 对象，包含选定的一个或多个证书。</returns>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2UI.SelectFromCollection(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.String,System.String,System.Security.Cryptography.X509Certificates.X509SelectionFlag,System.IntPtr)">
      <summary>使用父窗口的句柄显示一个从证书集合中选择 X.509 证书的对话框。</summary>
      <param name="certificates">X.509 证书的集合，从中选择相应的证书。</param>
      <param name="title">对话框的标题。</param>
      <param name="message">指导用户的描述性消息。  该消息显示在对话框中。</param>
      <param name="selectionFlag">
        <see cref="T:System.Security.Cryptography.X509Certificates.X509SelectionFlag" /> 值之一，用于指定允许单项选择还是允许多项选择。</param>
      <param name="hwndParent">用于显示对话框的父窗口的句柄。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="selectionFlag" /> 参数不是有效的标志。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificates" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="certificates" /> 参数无效。</exception>
      <returns>一个 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> 对象，包含选定的一个或多个证书。</returns>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509SelectionFlag">
      <summary>指定使用 <see cref="Overload:System.Security.Cryptography.X509Certificates.X509Certificate2UI.SelectFromCollection" /> 方法请求的选择类型。</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509SelectionFlag.MultiSelection">
      <summary>多重选择。 用户可以使用 Shift 或 Ctrl 键选择多个 X.509 证书。</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509SelectionFlag.SingleSelection">
      <summary>单项选择。 该用户界面允许用户选择一个 X.509 证书。</summary>
    </member>
    <member name="T:System.Xaml.Permissions.XamlAccessLevel">
      <summary>定义对程序集和类型的访问控制以用于 XAML 加载。</summary>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.Assembly)">
      <summary>基于 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 请求的程序集返回 <see cref="T:System.Reflection.Assembly" /> 实例。</summary>
      <param name="assembly">请求的程序集。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assembly" /> 为 <see langword="null" />。</exception>
      <returns>一个用 <paramref name="assembly" /> 值作为 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 的源信息的 <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> 实例。</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.AssemblyName)">
      <summary>基于 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 请求的程序集返回 <see cref="T:System.Reflection.AssemblyName" /> 实例。</summary>
      <param name="assemblyName">请求的程序集名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyName" /> 不是有效的完全限定程序集名称。</exception>
      <returns>一个用 <paramref name="assemblyName" /> 值作为 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 的源信息的 <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> 实例。</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.String)">
      <summary>基于按限定名称指定的特定类型返回 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 实例。</summary>
      <param name="assemblyQualifiedTypeName">一个作为程序集限定类型名称分析的字符串。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyQualifiedTypeName" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyQualifiedTypeName" /> 不是有效的程序集限定的类型名称。  
  
- 或 - 
<paramref name="assemblyQualifiedTypeName" /> 内的程序集名称不是有效的程序集名称。</exception>
      <returns>一个用 <paramref name="assemblyQualifiedTypeName" /> 值作为 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 和 <see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" />（由对类型的反射来确定）的源信息的 <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> 实例。</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.Type)">
      <summary>基于 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 指定的特定类型返回 <see cref="T:System.Type" /> 实例。</summary>
      <param name="type">请求对其进行访问的 <see cref="T:System.Type" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 为 <see langword="null" />。</exception>
      <returns>一个用 <paramref name="type" /> 值作为 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 和 <see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" />（由对类型的反射来确定）的源信息的 <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> 实例。</returns>
    </member>
    <member name="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName">
      <summary>获取权限由此 <see cref="T:System.Reflection.AssemblyName" /> 来确定的程序集的 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />。</summary>
      <returns>权限由此 <see cref="T:System.Reflection.AssemblyName" /> 来确定的程序集的 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />。</returns>
    </member>
    <member name="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName">
      <summary>获取权限由此 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 来确定的类型的非限定字符串名称。</summary>
      <returns>权限由此 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 来确定的类型的非限定字符串名称。</returns>
    </member>
  </members>
</doc>