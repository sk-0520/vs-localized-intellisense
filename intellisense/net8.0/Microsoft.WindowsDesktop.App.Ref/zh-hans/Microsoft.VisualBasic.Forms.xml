<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualBasic.Forms</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase">
      <summary>提供与当前应用程序相关的属性、方法和事件。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeCulture(System.String)">
      <summary>更改当前线程用于字符串操作和字符串格式设置的区域性。</summary>
      <param name="cultureName">
        <see langword="String" />. 字符串形式的区域性名称。 有关可能名称的列表，请参见 <see cref="T:System.Globalization.CultureInfo" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cultureName" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="cultureName" /> 不是有效的区域性名称。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeUICulture(System.String)">
      <summary>更改当前线程用来检索特定于区域性的资源的区域性。</summary>
      <param name="cultureName">
        <see langword="String" />. 字符串形式的区域性名称。 有关可能名称的列表，请参见 <see cref="T:System.Globalization.CultureInfo" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cultureName" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="cultureName" /> 不是有效的区域性名称。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.GetEnvironmentVariable(System.String)">
      <summary>返回指定环境变量的值。</summary>
      <param name="name">一个 <see langword="String" />，包含环境变量名。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 指定的环境变量不存在。</exception>
      <exception cref="T:System.Security.SecurityException">调用代码没有访问权限为 <see langword="Read" /> 的 <see cref="T:System.Security.Permissions.EnvironmentPermission" />。</exception>
      <returns>一个 <see langword="String" />，包含名为 <paramref name="name" /> 的环境变量的值。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Culture">
      <summary>获取当前线程用于字符串操作和字符串格式设置的区域性。</summary>
      <returns>一个 <see cref="T:System.Globalization.CultureInfo" /> 对象，它表示当前线程用于字符串操作和字符串格式设置的区域性。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info">
      <summary>获取一个对象，该对象提供用来获取有关应用程序的程序集的信息（如版本号、说明等等）的属性。</summary>
      <returns>当前应用程序的 <see cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Log">
      <summary>获取一个对象，该对象提供用来将事件和异常信息写入应用程序的日志侦听器的属性和方法。</summary>
      <returns>当前应用程序的 <see cref="T:Microsoft.VisualBasic.Logging.Log" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.UICulture">
      <summary>获取当前线程用来检索特定于区域性的资源的区域性。</summary>
      <returns>一个 <see cref="T:System.Globalization.CultureInfo" /> 对象，它表示当前线程用来检索特定于区域性的资源的区域性。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo">
      <summary>提供用来获取应用程序信息（如版本号、说明、加载的程序集等）的属性。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor(System.Reflection.Assembly)">
      <summary>使用指定的程序集信息初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" /> 类的新实例。</summary>
      <param name="currentAssembly">
        <see cref="T:System.Reflection.Assembly" />. 要获取其信息的程序集。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName">
      <summary>获取应用程序的程序集文件的名称（不含扩展名）。</summary>
      <returns>一个包含文件名的 <see langword="String" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName">
      <summary>获取与该应用程序关联的公司名称。</summary>
      <exception cref="T:System.InvalidOperationException">程序集没有 <see cref="T:System.Reflection.AssemblyCompanyAttribute" /> 特性。</exception>
      <returns>一个 <see langword="String" /> 值，包含与应用程序关联的公司名称。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright">
      <summary>获取与应用程序关联的版权声明。</summary>
      <exception cref="T:System.InvalidOperationException">程序集没有 <see cref="T:System.Reflection.AssemblyCopyrightAttribute" /> 特性。</exception>
      <returns>一个 <see langword="String" /> 值，包含与应用程序关联的版权声明。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description">
      <summary>获取与应用程序关联的说明。</summary>
      <exception cref="T:System.InvalidOperationException">程序集没有 <see cref="T:System.Reflection.AssemblyDescriptionAttribute" /> 特性。</exception>
      <returns>一个 <see langword="String" /> 值，包含与应用程序关联的说明。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath">
      <summary>获取应用程序的存储目录。</summary>
      <returns>一个 <see langword="String" /> 值，包含应用程序的存储目录。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies">
      <summary>获取由应用程序加载的所有程序集的集合。</summary>
      <exception cref="T:System.AppDomainUnloadedException">未加载应用程序域。</exception>
      <returns>
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 的 <see cref="T:System.Reflection.Assembly" />，包含由应用程序加载的所有程序集。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName">
      <summary>获取与应用程序关联的产品名称。</summary>
      <exception cref="T:System.InvalidOperationException">程序集没有 <see cref="T:System.Reflection.AssemblyProductAttribute" /> 特性。</exception>
      <returns>一个 <see langword="String" /> 值，包含与应用程序关联的产品名称。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace">
      <summary>获取当前的堆栈跟踪信息。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">请求的堆栈跟踪信息超出范围。</exception>
      <returns>一个 <see langword="String" /> 值，包含当前的堆栈跟踪信息。 返回值可能为 <see cref="F:System.String.Empty" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title">
      <summary>获取与应用程序关联的标题。</summary>
      <exception cref="T:System.InvalidOperationException">程序集没有 <see cref="T:System.Reflection.AssemblyTitleAttribute" /> 特性。</exception>
      <returns>一个 <see langword="String" /> 值，包含与应用程序关联的 <see cref="T:System.Reflection.AssemblyTitleAttribute" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark">
      <summary>获取与应用程序关联的商标声明。</summary>
      <exception cref="T:System.InvalidOperationException">程序集没有 <see cref="T:System.Reflection.AssemblyTrademarkAttribute" /> 特性。</exception>
      <returns>一个 <see langword="String" /> 值，包含与应用程序关联的商标声明。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version">
      <summary>获取应用程序的版本号。</summary>
      <exception cref="T:System.Security.SecurityException">应用程序没有足够的权限访问程序集版本。</exception>
      <returns>一个 <see cref="T:System.Version" /> 对象，包含应用程序的版本号。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet">
      <summary>获取映射到进程上下文的物理内存量。</summary>
      <exception cref="T:System.Security.SecurityException">存在部分信任的情况，用户缺少必要的权限。</exception>
      <returns>一个 <see langword="Long" /> 值，包含映射到进程上下文的物理内存的字节数。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode">
      <summary>指示 Visual Basic 应用程序如何为 <see langword="My.User" /> 对象对用户进行身份验证。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.ApplicationDefined">
      <summary>
        <see cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)" /> 构造函数不初始化该应用程序主线程的主体。 所以应用程序需要初始化其主线程的主体。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows">
      <summary>
        <see cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)" /> 构造函数使用当前用户的 Windows 用户信息初始化该应用程序主线程的主体。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException">
      <summary>当单实例应用程序的后续实例无法连接到第一个应用程序实例时，将引发此异常。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>用序列化数据初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException" /> 类的新实例。</summary>
      <param name="info">存放有关所引发异常的序列化对象数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> 对象，该对象包含有关源或目标的上下文信息。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException.#ctor(System.String)">
      <summary>用指定的错误消息初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException" /> 类的新实例。</summary>
      <param name="message">描述错误的消息。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException.#ctor(System.String,System.Exception)">
      <summary>使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException" /> 类的新实例。</summary>
      <param name="message">描述该错误的 <see cref="T:System.String" /> 对象。</param>
      <param name="inner">表示当前异常的产生原因的 <see cref="T:System.Exception" /> 对象。 如果 <see cref="P:System.Exception.InnerException" /> 参数不是 null 引用（在 Visual Basic 中为 <see langword="Nothing" />），则在处理内部异常的 <see langword="Catch" /> 块中引发当前异常。</param>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase">
      <summary>提供与当前应用程序相关的属性、方法和事件。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs">
      <summary>获取一个集合，该集合包含当前应用程序的字符串形式的命令行参数。</summary>
      <returns>
        <see langword="String" /> 类型的 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />，包含当前应用程序的命令行参数，参数形式为字符串。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.InternalCommandLine">
      <summary>设置要用作当前应用程序的命令行参数的值。</summary>
      <returns>一个 <see langword="String" /> 类型的 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />，包含要用作当前应用程序的命令行参数的字符串。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException">
      <summary>当未设置 <see cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm" /> 属性时，Visual Basic 应用程序模型会引发此异常。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>用序列化数据初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException" /> 类的新实例。</summary>
      <param name="info">存放有关所引发异常的序列化对象数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> 对象，该对象包含有关源或目标的上下文信息。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException.#ctor(System.String)">
      <summary>用指定的错误消息初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException" /> 类的新实例。</summary>
      <param name="message">描述错误的消息。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException.#ctor(System.String,System.Exception)">
      <summary>使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException" /> 类的新实例。</summary>
      <param name="message">描述该错误的 <see cref="T:System.String" /> 对象。</param>
      <param name="inner">表示当前异常的产生原因的 <see cref="T:System.Exception" /> 对象。 如果 <see cref="P:System.Exception.InnerException" /> 参数不是空引用（在 Visual Basic 中为 <see langword="Nothing" />），则在处理内部异常的 catch 块中引发当前异常。</param>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler">
      <summary>表示用来处理 <see langword="My.Application.Shutdown" /> 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 对象。</param>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ShutdownMode">
      <summary>指示哪个条件应使 Windows 窗体应用程序关闭。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterAllFormsClose">
      <summary>仅在最后一个窗体关闭之后关闭。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses">
      <summary>在主窗体关闭之后关闭。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs">
      <summary>为 <see langword="My.Application.Startup" /> 事件提供数据。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.String})">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" /> 类的新实例。</summary>
      <param name="args">一个 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 对象，包含应用程序的命令行参数。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine">
      <summary>获取应用程序的命令行参数。</summary>
      <returns>一个 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 对象，包含应用程序的命令行参数。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupEventHandler">
      <summary>表示用来处理 <see langword="My.Application.Startup" /> 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">包含事件数据的 <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" /> 对象。</param>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs">
      <summary>为 <see langword="My.Application.StartupNextInstance" /> 事件提供数据。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.String},System.Boolean)">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" /> 类的新实例。</summary>
      <param name="args">一个 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 对象，包含后续应用程序实例的命令行参数。</param>
      <param name="bringToForegroundFlag">一个 <see cref="T:System.Boolean" />，指示第一个应用程序实例是否应在退出异常处理程序时进入前台。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground">
      <summary>指示第一个应用程序实例是否应在退出异常处理程序时进入前台。</summary>
      <returns>一个 <see cref="T:System.Boolean" />，指示第一个应用程序实例是否应在退出异常处理程序时进入前台。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.CommandLine">
      <summary>获取后续应用程序实例的命令行参数。</summary>
      <returns>一个 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 对象，包含后续应用程序实例的命令行参数。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler">
      <summary>表示用来处理 <see langword="My.Application.StartupNextInstance" /> 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">包含事件数据的 <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" /> 对象。</param>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs">
      <summary>为 <see langword="My.Application.UnhandledException" /> 事件提供数据。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.#ctor(System.Boolean,System.Exception)">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" /> 类的新实例。</summary>
      <param name="exitApplication">一个 <see cref="T:System.Boolean" /> 值，指示应用程序是否应在退出异常处理程序时退出。</param>
      <param name="exception">已发生的 <see cref="T:System.Exception" />。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication">
      <summary>指示应用程序是否应在退出异常处理程序时退出。</summary>
      <returns>一个 <see cref="T:System.Boolean" /> 值，指示应用程序是否应在退出异常处理程序时退出。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler">
      <summary>表示用来处理 <see langword="My.Application.UnhandledException" /> 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">包含事件数据的 <see cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" /> 对象。</param>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.User">
      <summary>提供对有关当前用户的信息的访问。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.User.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.User" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)">
      <summary>确定当前用户是否属于指定的角色。</summary>
      <param name="role">要检查其成员资格的角色的名称。</param>
      <returns>如果当前用户是指定角色的成员，则为 <see langword="True" />；否则为 <see langword="False" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal">
      <summary>获取或设置当前主体（对基于角色的安全性而言）。</summary>
      <exception cref="T:System.Security.SecurityException">调用方没有设置该主体所需的权限。</exception>
      <returns>一个 <see cref="T:System.Security.Principal.IPrincipal" /> 值，表示安全上下文。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal">
      <summary>获取或设置表示当前用户的主体对象。</summary>
      <returns>一个表示当前用户的 <see cref="T:System.Security.Principal.IPrincipal" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated">
      <summary>获取一个值，该值指示是否验证了用户。</summary>
      <returns>如果用户已经过验证，则为 <see langword="True" />；否则为 <see langword="False" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.Name">
      <summary>获取当前用户的名称。</summary>
      <returns>
        <see langword="String" />. 当前用户的名称。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase">
      <summary>提供与当前应用程序相关的属性、方法和事件。</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.NetworkAvailabilityChanged">
      <summary>在网络可用性更改时发生。</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown">
      <summary>在应用程序关闭时发生。</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup">
      <summary>在应用程序启动时发生。</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance">
      <summary>在尝试启动单实例应用程序，而该应用程序已处于活动状态时发生。</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException">
      <summary>在应用程序遇到未经处理的异常时发生。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)">
      <summary>使用指定的身份验证模式初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" /> 类的新实例。</summary>
      <param name="authenticationMode">用于指定应用程序的身份验证模式的枚举值之一。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents">
      <summary>处理当前在消息队列中的所有 Windows 消息。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen">
      <summary>隐藏应用程序的初始屏幕。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm">
      <summary>在派生类中重写后，允许设计器发出配置初始屏幕和主窗体的代码。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen">
      <summary>在派生类中重写后，允许设计器发出初始化初始屏幕的代码。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(System.Collections.ObjectModel.ReadOnlyCollection{System.String})">
      <summary>设置可视样式、文本显示样式以及应用程序主线程的当前主体（如果应用程序使用 Windows 身份验证），如果定义了初始屏幕，还要初始化初始屏幕。</summary>
      <param name="commandLineArgs">只读集合，包含命令行参数作为当前应用程序的字符串。</param>
      <returns>
        <see cref="T:System.Boolean" />，指示是否应继续启动应用程序。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun">
      <summary>在初始化完成后，提供主应用程序准备好开始运行时可运行的起点。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown">
      <summary>在派生类中重写后，允许代码在应用程序关闭时运行。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup(Microsoft.VisualBasic.ApplicationServices.StartupEventArgs)">
      <summary>在派生类中重写后，允许代码在应用程序启动时运行。</summary>
      <param name="eventArgs">应用程序的命令行参数，指示是否应取消应用程序启动。</param>
      <returns>
        <see cref="T:System.Boolean" />，指示应用程序是否应继续启动。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance(Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs)">
      <summary>在派生类中重写后，允许代码在单实例应用程序的后续实例启动时运行。</summary>
      <param name="eventArgs">后续应用程序实例的命令行参数，并且指示第一个应用程序实例是否应在退出异常处理程序后进入前台。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException(Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs)">
      <summary>在派生类中重写后，允许代码在应用程序中出现未经处理的异常时运行。</summary>
      <param name="e">事件的数据。</param>
      <returns>一个 <see cref="T:System.Boolean" />，它指示是否已引发 <see cref="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException" /> 事件。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run(System.String[])">
      <summary>设置或启动 Visual Basic 应用程序模型。</summary>
      <param name="commandLine">
        <see langword="Sub Main" /> 中的命令行。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen">
      <summary>确定应用程序是否定义了初始屏幕，如果进行了定义，则显示该初始屏幕。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext">
      <summary>获取 Windows 窗体应用程序当前线程的 <see cref="T:System.Windows.Forms.ApplicationContext" /> 对象。</summary>
      <returns>有关当前线程的上下文信息。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles">
      <summary>确定此应用程序是否将 Windows XP 样式用于窗口、控件等。</summary>
      <returns>
        <see cref="T:System.Boolean" /> 值，指示此应用程序是否将 XP Windows 样式用于窗口、控件等。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance">
      <summary>获取或设置一个值，该值指示此应用程序是否是单实例应用程序。</summary>
      <returns>
        <see langword="True" /> 指示此应用程序为单实例应用程序;否则为 <see langword="False" /> 。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm">
      <summary>获取或设置此应用程序的主窗体。</summary>
      <returns>此应用程序的主窗体。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime">
      <summary>获取或设置显示初始屏幕的最小时间长度（以毫秒为单位）。</summary>
      <returns>初始屏幕的最小显示时间长度（以毫秒为单位）。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms">
      <summary>获取应用程序中所有打开的窗体的集合。</summary>
      <returns>一个集合，其中包含应用程序的所有打开窗体。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit">
      <summary>确定应用程序在退出时是否保存用户设置。</summary>
      <returns>
        <see langword="True" /> 指示应用程序在退出时保存用户设置。 否则 <see langword="False" /> 为，表示不隐式保存设置。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle">
      <summary>确定应用程序的主窗体关闭时执行的操作。</summary>
      <returns>枚举值之一，它指示应用程序在主窗体关闭时应执行的操作。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen">
      <summary>获取或设置此应用程序的初始屏幕。</summary>
      <exception cref="T:System.ArgumentNullException">相同的值被赋予此属性和 <see cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm" /> 属性。</exception>
      <returns>应用程序的初始屏幕。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering">
      <summary>当在派生类中重写时，此属性允许设计器为应用程序窗体指定默认的文本呈现引擎。</summary>
      <returns>
        <see langword="Boolean" />. 值为 <see langword="False" /> 指示应用程序应使用 Visual Basic 2005 的默认文本呈现引擎。 如果该值为 <see langword="True" />，则指示应用程序应使用 Visual Basic .NET 2002 和 Visual Basic .NET 2003 的文本呈现引擎。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.AudioPlayMode">
      <summary>指示在调用音频方法时如何播放声音。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AudioPlayMode.Background">
      <summary>使 <see langword="My.Computer.Audio.Play" /> 方法在后台播放声音。 该调用代码继续执行。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AudioPlayMode.BackgroundLoop">
      <summary>使 <see langword="My.Computer.Audio.Play" /> 方法在后台播放声音，直至调用 <see cref="M:Microsoft.VisualBasic.Devices.Audio.Stop" /> 方法为止。 该调用代码继续执行。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AudioPlayMode.WaitToComplete">
      <summary>使 <see langword="My.Computer.Audio.Play" /> 方法播放声音，并等待，直至该方法完成后调用代码才可继续执行。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.HostServices">
      <summary>返回对当前 Visual Basic 宿主窗口的引用以及该宿主窗口的相关信息。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.HostServices.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.CompilerServices.HostServices" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.CompilerServices.HostServices.VBHost">
      <summary>获取当前的 Visual Basic 宿主对象。</summary>
      <returns>一个 <see cref="P:Microsoft.VisualBasic.CompilerServices.HostServices.VBHost" /> 对象，它返回对当前 Visual Basic 宿主窗口的引用以及该宿主窗口的相关信息。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IVbHost">
      <summary>表示一个 Visual Basic 宿主窗口。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IVbHost.GetParentWindow">
      <summary>获取当前 Visual Basic 环境的宿主窗口。</summary>
      <returns>当前 Visual Basic 环境的宿主窗口。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IVbHost.GetWindowTitle">
      <summary>获取当前 Visual Basic 环境的宿主窗口的标题。</summary>
      <returns>当前 Visual Basic 环境的宿主窗口的标题。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Audio">
      <summary>提供了用于播放音频的方法。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.Devices.Audio" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.Play(System.Byte[],Microsoft.VisualBasic.AudioPlayMode)">
      <summary>播放 .wav 声音文件。</summary>
      <param name="data">表示声音文件的 <see langword="Byte" /> 数组。</param>
      <param name="playMode">用于播放声音的 <see cref="T:Microsoft.VisualBasic.AudioPlayMode" /> 模式。 默认为 <see langword="AudioPlayMode.Background" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="playMode" /> 不是 <see cref="T:Microsoft.VisualBasic.AudioPlayMode" /> 枚举值之一。</exception>
      <exception cref="T:System.Security.SecurityException">存在部分信任的情况，此时用户缺少足够的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.Play(System.IO.Stream,Microsoft.VisualBasic.AudioPlayMode)">
      <summary>播放 .wav 声音文件。</summary>
      <param name="stream">表示声音文件的 <see cref="T:System.IO.Stream" />。</param>
      <param name="playMode">用于播放声音的 <see cref="T:Microsoft.VisualBasic.AudioPlayMode" /> 模式。 默认为 <see langword="AudioPlayMode.Background" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="playMode" /> 不是 <see cref="T:Microsoft.VisualBasic.AudioPlayMode" /> 枚举值之一。</exception>
      <exception cref="T:System.Security.SecurityException">存在部分信任的情况，此时用户缺少足够的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.Play(System.String)">
      <summary>播放 .wav 声音文件。</summary>
      <param name="location">一个包含声音文件的名称的 <see langword="String" /></param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="location" /> 是一个空字符串。</exception>
      <exception cref="T:System.IO.IOException">用户没有足够的权限访问由 <paramref name="location" /> 命名的文件。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">文件路径在 <paramref name="location" /> 中的格式不正确。</exception>
      <exception cref="T:System.IO.PathTooLongException">
        <paramref name="location" /> 中的路径名太长。</exception>
      <exception cref="T:System.Security.SecurityException">存在部分信任的情况，此时用户缺少足够的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.Play(System.String,Microsoft.VisualBasic.AudioPlayMode)">
      <summary>播放 .wav 声音文件。</summary>
      <param name="location">一个包含声音文件的名称的 <see langword="String" /></param>
      <param name="playMode">用于播放声音的 <see cref="T:Microsoft.VisualBasic.AudioPlayMode" /> 模式。 默认为 <see langword="AudioPlayMode.Background" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="location" /> 是一个空字符串。</exception>
      <exception cref="T:System.IO.IOException">用户没有足够的权限访问由 <paramref name="location" /> 命名的文件。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">文件路径在 <paramref name="location" /> 中的格式不正确。</exception>
      <exception cref="T:System.IO.PathTooLongException">
        <paramref name="location" /> 中的路径名太长。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="playMode" /> 不是 <see cref="T:Microsoft.VisualBasic.AudioPlayMode" /> 枚举值之一。</exception>
      <exception cref="T:System.Security.SecurityException">存在部分信任的情况，此时用户缺少足够的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.PlaySystemSound(System.Media.SystemSound)">
      <summary>播放系统声音。</summary>
      <param name="systemSound">表示要播放的系统声音的 <see cref="T:System.Media.SystemSound" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="systemSound" /> 为 <see langword="Nothing" />。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.Stop">
      <summary>停止在后台播放声音。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Clock">
      <summary>提供了用于从系统时钟访问当前本地时间和协调世界时（相当于格林威治标准时间）的属性。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Clock.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.Devices.Clock" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.GmtTime">
      <summary>获取一个 <see langword="Date" /> 对象，该对象包含以 UTC (GMT) 时间表示的计算机的当前本地日期和时间。</summary>
      <returns>一个 <see langword="Date" /> 对象，包含以 UTC (GMT) 时间表示的当前日期和时间。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.LocalTime">
      <summary>获取一个 <see langword="Date" /> 对象，该对象包含此计算机上的当前本地日期和时间。</summary>
      <returns>一个 <see langword="Date" /> 对象，包含当前本地日期和时间。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.TickCount">
      <summary>获取来自计算机的系统计时器的毫秒计数。</summary>
      <returns>一个 <see langword="Integer" />，包含计算机系统计时器中以毫秒为单位的计数。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Computer">
      <summary>提供了用于操控计算机组件（如音频、时钟、键盘、文件系统等）的属性。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Computer.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.Devices.Computer" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Audio">
      <summary>获取一个对象，该对象为用于播放声音的方法提供属性。</summary>
      <returns>计算机的 <see langword="My.Computer.Audio" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Clipboard">
      <summary>获取一个对象，该对象提供用于操作剪贴板的方法。</summary>
      <returns>计算机的 <see langword="My.Computer.Clipboard" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Keyboard">
      <summary>获取一个对象，该对象提供了用于访问键盘当前状态（例如，当前按下了什么键）的属性，并提供了向活动窗口发送键击的方法。</summary>
      <returns>计算机的 <see langword="My.Computer.Keyboard" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Mouse">
      <summary>获取一个对象，该对象提供用于获取有关本地计算机中安装的鼠标的格式和配置信息的属性。</summary>
      <returns>计算机的 <see langword="My.Computer.Mouse" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Screen">
      <summary>获取表示计算机的主显示屏幕的 <see cref="T:System.Windows.Forms.Screen" /> 对象。</summary>
      <returns>表示计算机主屏幕的 <see cref="T:System.Windows.Forms.Screen" /> 对象。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.ComputerInfo">
      <summary>提供了用于获取计算机内存、已加载程序集、名称和操作系统相关信息的属性。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.ComputerInfo.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.Devices.ComputerInfo" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory">
      <summary>获取计算机的可用物理内存总量。</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">应用程序无法获取内存状态。</exception>
      <returns>一个 <see langword="ULong" /> 值，包含计算机的可用物理内存的字节数。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory">
      <summary>获取计算机的可用虚拟地址空间的总量。</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">应用程序无法获取内存状态。</exception>
      <returns>一个 <see langword="ULong" /> 值，包含计算机的可用虚拟地址空间的字节数。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture">
      <summary>获取随操作系统安装的当前用户界面区域性。</summary>
      <returns>表示在计算机上安装的 UI 区域性的 <see cref="T:System.Globalization.CultureInfo" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName">
      <summary>获取操作系统的全名。</summary>
      <exception cref="T:System.Security.SecurityException">调用代码没有完全信任权限。</exception>
      <returns>一个 <see langword="String" /> 值，包含操作系统名称。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform">
      <summary>获取计算机的操作系统的平台标识符。</summary>
      <exception cref="T:System.ExecutionEngineException">应用程序无法获取操作系统平台信息。</exception>
      <returns>一个包含计算机操作系统的平台标识符的 <see langword="String" />，此字符串是从 <see cref="T:System.PlatformID" /> 枚举的成员名称中选择的。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion">
      <summary>获取计算机操作系统的版本。</summary>
      <exception cref="T:System.ExecutionEngineException">应用程序无法获取操作系统版本信息。</exception>
      <returns>一个 <see langword="String" /> 值，包含操作系统的当前版本号。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory">
      <summary>获取计算机的物理内存总量。</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">应用程序无法获取内存状态。</exception>
      <returns>一个 <see langword="ULong" /> 值，包含计算机的物理内存的字节数。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory">
      <summary>获取计算机的可用虚拟地址空间的总量。</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">应用程序无法获取内存状态。</exception>
      <returns>一个 <see langword="ULong" /> 值，包含计算机的可用虚拟地址空间的字节数。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Keyboard">
      <summary>提供了用于访问键盘当前状态（如当前按下了哪些键）的属性，并提供了用于将击键发送到活动窗口的方法。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Keyboard.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.Devices.Keyboard" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String)">
      <summary>向活动窗口发送一个或多个键击，就像在键盘键入一样。</summary>
      <param name="keys">一个 <see langword="String" />，定义要发送的键。</param>
      <exception cref="T:System.Security.SecurityException">存在部分信任的情况，此时用户缺少足够的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String,System.Boolean)">
      <summary>向活动窗口发送一个或多个键击，就像在键盘键入一样。</summary>
      <param name="keys">一个 <see langword="String" />，定义要发送的键。</param>
      <param name="wait">可选。 一个 <see langword="Boolean" /> 值，指定在应用程序继续之前是否等待键击处理完成。 默认值为 <see langword="True" />。</param>
      <exception cref="T:System.Security.SecurityException">存在部分信任的情况，此时用户缺少足够的权限。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown">
      <summary>获取一个值，该值指示是否已按下 Alt。</summary>
      <returns>
        <see langword="True" /> 如果 ALT 键关闭，则为; 否则为。否则为 <see langword="False" /> 。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.CapsLock">
      <summary>获取一个值，该值指示是否已打开 Caps Lock。</summary>
      <returns>一个 <see langword="Boolean" /> 值： <see langword="True" /> 如果打开 Caps Lock，则为; 否则为 <see langword="False" /> 。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown">
      <summary>获取一个值，该值指示是否已按下 Ctrl。</summary>
      <returns>
        <see langword="True" /> 如果按下了 CTRL 键，则为;否则为 <see langword="False" /> 。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.NumLock">
      <summary>获取一个值，该值指示是否已打开 Num Lock。</summary>
      <returns>
        <see langword="True" /> 如果 NUM LOCK 已打开，则为;否则为 <see langword="False" /> 。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.ScrollLock">
      <summary>获取一个 <see langword="Boolean" />，该值指示 Scroll Lock 键是否已打开。</summary>
      <returns>
        <see langword="True" /> 如果滚动锁已打开，则为;否则为 <see langword="False" /> 。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown">
      <summary>获取一个值，该值指示是否已按下 Shift。</summary>
      <returns>
        <see langword="True" /> 如果 SHIFT 键关闭，则为; 否则为。否则为 <see langword="False" /> 。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Mouse">
      <summary>提供用于获取本地计算机中所安装鼠标的型号和配置信息的属性。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Mouse.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.Devices.Mouse" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped">
      <summary>获取一个 <see langword="Boolean" /> 值，该值指示是否交换了鼠标左右按钮的功能。</summary>
      <exception cref="T:System.InvalidOperationException">计算机未安装鼠标。</exception>
      <returns>如果已交换了鼠标左右按钮的功能，则返回值为 <see langword="Boolean" /> 的 <see langword="True" />；否则返回 <see langword="False" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Mouse.WheelExists">
      <summary>获取一个 <see langword="Boolean" /> 值，该值指示鼠标是否具有滚轮。</summary>
      <exception cref="T:System.InvalidOperationException">计算机未安装鼠标。</exception>
      <returns>如果鼠标具有滚轮，则返回值为 Boolean 值 <see langword="True" />；否则返回 <see langword="False" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines">
      <summary>鼠标滚轮旋转一个单位时的滚动量。</summary>
      <exception cref="T:System.InvalidOperationException">鼠标没有滚轮。</exception>
      <returns>一个 <see langword="Integer" /> 值，指示鼠标滚轮旋转一个单位时的滚动量。 正值表示按行数滚动，而负值表示一次滚动一个屏幕。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Network">
      <summary>提供用于与计算机所连接的网络进行交互的属性、事件和方法。</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged">
      <summary>在网络可用性更改时发生。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.Devices.Network" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String)">
      <summary>下载指定的远程文件，并将其保存到指定位置。</summary>
      <param name="address">要下载的文件的路径，包括文件名和主机地址。</param>
      <param name="destinationFileName">下载的文件的文件名和路径。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> 以尾随斜杠结尾。</exception>
      <exception cref="T:System.TimeoutException">服务器没有在指定的默认超时（100 秒）内响应。</exception>
      <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
      <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String)">
      <summary>下载指定的远程文件，并将其保存到指定位置。</summary>
      <param name="address">要下载的文件的路径，包括文件名和主机地址。</param>
      <param name="destinationFileName">下载的文件的文件名和路径。</param>
      <param name="userName">要进行身份验证的用户名。 默认值为空字符串 ""。</param>
      <param name="password">要进行身份验证的密码。 默认值为空字符串 ""。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> 以尾随斜杠结尾。</exception>
      <exception cref="T:System.TimeoutException">服务器没有在指定的默认超时（100 秒）内响应。</exception>
      <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
      <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)">
      <summary>下载指定的远程文件，并将其保存到指定位置。</summary>
      <param name="address">要下载的文件的路径，包括文件名和主机地址。</param>
      <param name="destinationFileName">下载的文件的文件名和路径。</param>
      <param name="userName">要进行身份验证的用户名。 默认值为空字符串 ""。</param>
      <param name="password">要进行身份验证的密码。 默认值为空字符串 ""。</param>
      <param name="showUI">要显示操作进度，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <param name="connectionTimeout">
        <see cref="T:System.Int32" />. 以毫秒为单位的超时间隔。 默认值为 100 秒。</param>
      <param name="overwrite">要覆盖现有文件，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> 以尾随斜杠结尾。</exception>
      <exception cref="T:System.IO.IOException">将 <paramref name="overwrite" /> 设置为 <see langword="False" />，而目标文件已存在。</exception>
      <exception cref="T:System.TimeoutException">服务器没有在指定的 <paramref name="connectionTimeout" /> 内响应。</exception>
      <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
      <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>下载指定的远程文件，并将其保存到指定位置。</summary>
      <param name="address">要下载的文件的路径，包括文件名和主机地址。</param>
      <param name="destinationFileName">下载的文件的文件名和路径。</param>
      <param name="userName">要进行身份验证的用户名。 默认值为空字符串 ""。</param>
      <param name="password">要进行身份验证的密码。 默认值为空字符串 ""。</param>
      <param name="showUI">要显示操作进度，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <param name="connectionTimeout">以毫秒为单位的超时间隔。 默认值为 100 秒。</param>
      <param name="overwrite">要覆盖现有文件，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <param name="onUserCancel">指定当用户在对话框（在 <c>ShowUI</c> 设置为 <see langword="True" /> 时将显示此对话框）上单击“取消”或“否”时的行为********。 默认值为 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> 以尾随斜杠结尾。</exception>
      <exception cref="T:System.IO.IOException">将 <paramref name="overwrite" /> 设置为 <see langword="False" />，而目标文件已存在。</exception>
      <exception cref="T:System.TimeoutException">服务器没有在指定的 <paramref name="connectionTimeout" /> 内响应。</exception>
      <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
      <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String)">
      <summary>下载指定的远程文件，并将其保存到指定位置。</summary>
      <param name="address">要下载的文件的路径，包括文件名和主机地址。</param>
      <param name="destinationFileName">下载的文件的文件名和路径。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> 以尾随斜杠结尾。</exception>
      <exception cref="T:System.TimeoutException">服务器没有在指定的默认超时（100 秒）内响应。</exception>
      <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
      <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean)">
      <summary>下载指定的远程文件，并将其保存到指定位置。</summary>
      <param name="address">
        <see langword="String" /> 或 <see cref="T:System.Uri" />。 要下载的文件的路径，包括文件名和主机地址。</param>
      <param name="destinationFileName">
        <see langword="String" />. 下载的文件的文件名和路径。</param>
      <param name="networkCredentials">
        <see cref="T:System.Net.ICredentials" />. 要提供的凭据。</param>
      <param name="showUI">要显示操作进度，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <param name="connectionTimeout">以毫秒为单位的超时间隔。 默认值为 100 秒。</param>
      <param name="overwrite">要覆盖现有文件，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> 以尾随斜杠结尾。</exception>
      <exception cref="T:System.IO.IOException">将 <paramref name="overwrite" /> 设置为 <see langword="False" />，而目标文件已存在。</exception>
      <exception cref="T:System.TimeoutException">服务器没有在指定的 <paramref name="connectionTimeout" /> 内响应。</exception>
      <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
      <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>下载指定的远程文件，并将其保存到指定位置。</summary>
      <param name="address">要下载的文件的路径，包括文件名和主机地址。</param>
      <param name="destinationFileName">下载的文件的文件名和路径。</param>
      <param name="networkCredentials">要提供的凭据。</param>
      <param name="showUI">要显示操作进度，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <param name="connectionTimeout">以毫秒为单位的超时间隔。 默认值为 100 秒。</param>
      <param name="overwrite">要覆盖现有文件，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <param name="onUserCancel">指定当用户在对话框（在 <paramref name="showUI" /> 设置为 <see langword="True" /> 时将显示此对话框）上单击“取消”或“否”时的行为********。 默认值为 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> 以尾随斜杠结尾。</exception>
      <exception cref="T:System.IO.IOException">将 <paramref name="overwrite" /> 设置为 <see langword="False" />，而目标文件已存在。</exception>
      <exception cref="T:System.TimeoutException">服务器没有在指定的 <paramref name="connectionTimeout" /> 内响应。</exception>
      <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
      <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String)">
      <summary>下载指定的远程文件，并将其保存到指定位置。</summary>
      <param name="address">要下载的文件的路径，包括文件名和主机地址。</param>
      <param name="destinationFileName">下载的文件的文件名和路径。</param>
      <param name="userName">要进行身份验证的用户名。 默认值为空字符串 ""。</param>
      <param name="password">要进行身份验证的密码。 默认值为空字符串 ""。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> 以尾随斜杠结尾。</exception>
      <exception cref="T:System.TimeoutException">服务器没有在指定的默认超时（100 秒）内响应。</exception>
      <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
      <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)">
      <summary>下载指定的远程文件，并将其保存到指定位置。</summary>
      <param name="address">要下载的文件的路径，包括文件名和主机地址。</param>
      <param name="destinationFileName">下载的文件的文件名和路径。</param>
      <param name="userName">要进行身份验证的用户名。 默认值为空字符串 ""。</param>
      <param name="password">要进行身份验证的密码。 默认值为空字符串 ""。</param>
      <param name="showUI">要显示操作进度，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <param name="connectionTimeout">以毫秒为单位的超时间隔。 默认值为 100 秒。</param>
      <param name="overwrite">要覆盖现有文件，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> 以尾随斜杠结尾。</exception>
      <exception cref="T:System.IO.IOException">将 <paramref name="overwrite" /> 设置为 <see langword="False" />，而目标文件已存在。</exception>
      <exception cref="T:System.TimeoutException">服务器没有在指定的 <paramref name="connectionTimeout" /> 内响应。</exception>
      <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
      <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>下载指定的远程文件，并将其保存到指定位置。</summary>
      <param name="address">要下载的文件的路径，包括文件名和主机地址。</param>
      <param name="destinationFileName">下载的文件的文件名和路径。</param>
      <param name="userName">要进行身份验证的用户名。 默认值为空字符串 ""。</param>
      <param name="password">要进行身份验证的密码。 默认值为空字符串 ""。</param>
      <param name="showUI">要显示操作进度，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <param name="connectionTimeout">以毫秒为单位的超时间隔。 默认值为 100 秒。</param>
      <param name="overwrite">要覆盖现有文件，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <param name="onUserCancel">指定当用户在对话框（在 <c>ShowUI</c> 设置为 <see langword="True" /> 时将显示此对话框）上单击“取消”或“否”时的行为********。 默认值为 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> 以尾随斜杠结尾。</exception>
      <exception cref="T:System.IO.IOException">将 <paramref name="overwrite" /> 设置为 <see langword="False" />，而目标文件已存在。</exception>
      <exception cref="T:System.TimeoutException">服务器没有在指定的 <paramref name="connectionTimeout" /> 内响应。</exception>
      <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
      <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String)">
      <summary>Ping 指定的服务器。</summary>
      <param name="hostNameOrAddress">要对其执行 ping 操作的服务器的 URL、计算机名称或 IP 号。</param>
      <exception cref="T:System.InvalidOperationException">没有可用的网络连接。</exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">URL 无效。</exception>
      <returns>如果操作已成功，则为 <see langword="True" />；否则为 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String,System.Int32)">
      <summary>Ping 指定的服务器。</summary>
      <param name="hostNameOrAddress">要对其执行 ping 操作的服务器的 URL、计算机名称或 IP 号。</param>
      <param name="timeout">用于联系目标的时间阈值（以毫秒为单位）。 默认值为 500。</param>
      <exception cref="T:System.InvalidOperationException">没有可用的网络连接。</exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">URL 无效。</exception>
      <returns>如果操作已成功，则为 <see langword="True" />；否则为 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri)">
      <summary>Ping 指定的服务器。</summary>
      <param name="address">要对其执行 ping 操作的服务器的 URI。</param>
      <exception cref="T:System.InvalidOperationException">没有可用的网络连接。</exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">URL 无效。</exception>
      <returns>如果操作已成功，则为 <see langword="True" />；否则为 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri,System.Int32)">
      <summary>Ping 指定的服务器。</summary>
      <param name="address">要对其执行 ping 操作的服务器的 URI。</param>
      <param name="timeout">用于联系目标的时间阈值（以毫秒为单位）。 默认值为 500。</param>
      <exception cref="T:System.InvalidOperationException">没有可用的网络连接。</exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">URL 无效。</exception>
      <returns>如果操作已成功，则为 <see langword="True" />；否则为 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String)">
      <summary>将指定的文件发送到指定的主机地址。</summary>
      <param name="sourceFileName">要上载的文件的路径和名称。</param>
      <param name="address">目标服务器的 URL、IP 地址或 URI。</param>
      <exception cref="T:System.ArgumentException">源文件路径无效。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" />不包括文件名。</exception>
      <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
      <exception cref="T:System.TimeoutException">服务器没有在指定的默认超时（100 秒）内响应。</exception>
      <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String)">
      <summary>将指定的文件发送到指定的主机地址。</summary>
      <param name="sourceFileName">要上载的文件的路径和名称。</param>
      <param name="address">目标服务器的 URL、IP 地址或 URI。</param>
      <param name="userName">要进行身份验证的用户名。 默认值为空字符串：<c>""</c>。</param>
      <param name="password">要进行身份验证的密码。 默认值为空字符串：<c>""</c>。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> 小于或等于零。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" />不包括文件名。</exception>
      <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
      <exception cref="T:System.TimeoutException">服务器没有在指定的默认超时（100 秒）内响应。</exception>
      <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32)">
      <summary>将指定的文件发送到指定的主机地址。</summary>
      <param name="sourceFileName">要上载的文件的路径和名称。</param>
      <param name="address">目标服务器的 URL、IP 地址或 URI。</param>
      <param name="userName">要进行身份验证的用户名。 默认值为空字符串：<c>""</c>。</param>
      <param name="password">要进行身份验证的密码。 默认值为空字符串：<c>""</c>。</param>
      <param name="showUI">要显示操作进度，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <param name="connectionTimeout">以毫秒为单位的超时间隔。 默认值为 100 秒。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> 小于或等于零。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" />不包括文件名。</exception>
      <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
      <exception cref="T:System.TimeoutException">服务器没有在指定的 <paramref name="connectionTimeout" /> 内响应。</exception>
      <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>将指定的文件发送到指定的主机地址。</summary>
      <param name="sourceFileName">要上载的文件的路径和名称。</param>
      <param name="address">目标服务器的 URL、IP 地址或 URI。</param>
      <param name="userName">要进行身份验证的用户名。 默认值为空字符串：<c>""</c>。</param>
      <param name="password">要进行身份验证的密码。 默认值为空字符串：<c>""</c>。</param>
      <param name="showUI">是否显示操作进度。 默认值为 <see langword="False" />。</param>
      <param name="connectionTimeout">以毫秒为单位的超时间隔。 默认值为 100 秒。</param>
      <param name="onUserCancel">当用户单击“取消”时要采取的操作****。 默认值为 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> 小于或等于零。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" />不包括文件名。</exception>
      <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
      <exception cref="T:System.TimeoutException">服务器没有在指定的 <paramref name="connectionTimeout" /> 内响应。</exception>
      <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri)">
      <summary>将指定的文件发送到指定的主机地址。</summary>
      <param name="sourceFileName">要上载的文件的路径和名称。</param>
      <param name="address">目标服务器的 URL、IP 地址或 URI。</param>
      <exception cref="T:System.ArgumentException">源文件路径无效。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" />不包括文件名。</exception>
      <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
      <exception cref="T:System.TimeoutException">服务器没有在指定的默认超时（100 秒）内响应。</exception>
      <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32)">
      <summary>将指定的文件发送到指定的主机地址。</summary>
      <param name="sourceFileName">要上载的文件的路径和名称。</param>
      <param name="address">目标服务器的 URL、IP 地址或 URI。</param>
      <param name="networkCredentials">身份验证的凭据。</param>
      <param name="showUI">要显示操作进度，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <param name="connectionTimeout">以毫秒为单位的超时间隔。 默认值为 100 秒。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> 小于或等于零。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" />不包括文件名。</exception>
      <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
      <exception cref="T:System.TimeoutException">服务器没有在指定的 <paramref name="connectionTimeout" /> 内响应。</exception>
      <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>将指定的文件发送到指定的主机地址。</summary>
      <param name="sourceFileName">要上载的文件的路径和名称。</param>
      <param name="address">目标服务器的 URL、IP 地址或 URI。</param>
      <param name="networkCredentials">身份验证的凭据。</param>
      <param name="showUI">要显示操作进度，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <param name="connectionTimeout">以毫秒为单位的超时间隔。 默认值为 100 秒。</param>
      <param name="onUserCancel">当用户单击“取消”时要采取的操作****。 默认值为 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> 小于或等于零。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" />不包括文件名。</exception>
      <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
      <exception cref="T:System.TimeoutException">服务器没有在指定的 <paramref name="connectionTimeout" /> 内响应。</exception>
      <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String)">
      <summary>将指定的文件发送到指定的主机地址。</summary>
      <param name="sourceFileName">要上载的文件的路径和名称。</param>
      <param name="address">目标服务器的 URL、IP 地址或 URI。</param>
      <param name="userName">要进行身份验证的用户名。 默认值为空字符串：<c>""</c>。</param>
      <param name="password">要进行身份验证的密码。 默认值为空字符串：<c>""</c>。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> 小于或等于零。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" />不包括文件名。</exception>
      <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
      <exception cref="T:System.TimeoutException">服务器没有在指定的默认超时（100 秒）内响应。</exception>
      <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32)">
      <summary>将指定的文件发送到指定的主机地址。</summary>
      <param name="sourceFileName">要上载的文件的路径和名称。</param>
      <param name="address">目标服务器的 URL、IP 地址或 URI。</param>
      <param name="userName">要进行身份验证的用户名。 默认值为空字符串：<c>""</c>。</param>
      <param name="password">要进行身份验证的密码。 默认值为空字符串：<c>""</c>。</param>
      <param name="showUI">要显示操作进度，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <param name="connectionTimeout">以毫秒为单位的超时间隔。 默认值为 100 秒。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> 小于或等于零。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" />不包括文件名。</exception>
      <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
      <exception cref="T:System.TimeoutException">服务器没有在指定的 <paramref name="connectionTimeout" /> 内响应。</exception>
      <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>将指定的文件发送到指定的主机地址。</summary>
      <param name="sourceFileName">要上载的文件的路径和名称。</param>
      <param name="address">目标服务器的 URL、IP 地址或 URI。</param>
      <param name="userName">要进行身份验证的用户名。 默认值为空字符串：<c>""</c>。</param>
      <param name="password">要进行身份验证的密码。 默认值为空字符串：<c>""</c>。</param>
      <param name="showUI">是否显示操作进度。 默认值为 <see langword="False" />。</param>
      <param name="connectionTimeout">以毫秒为单位的超时间隔。 默认值为 100 秒。</param>
      <param name="onUserCancel">当用户单击“取消”时要采取的操作****。 默认值为 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> 小于或等于零。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" />不包括文件名。</exception>
      <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
      <exception cref="T:System.TimeoutException">服务器没有在指定的 <paramref name="connectionTimeout" /> 内响应。</exception>
      <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Network.IsAvailable">
      <summary>指示计算机是否已连接至网络。</summary>
      <returns>如果将计算机连接到网络，则为 <see langword="True" />；否则为 <see langword="False" />。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs">
      <summary>提供有关 <see langword="My.Application.NetworkAvailabilityChanged" /> 和 <see langword="My.Computer.Network.NetworkAvailabilityChanged" /> 事件的数据。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.#ctor(System.Boolean)">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" /> 类的新实例。</summary>
      <param name="networkAvailable">一个 <see cref="T:System.Boolean" />，指示网络是否可供该应用程序使用。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable">
      <summary>获取一个值，该值指示网络是否可供该应用程序使用。</summary>
      <returns>一个 <see cref="T:System.Boolean" />，指示网络是否可供该应用程序使用。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler">
      <summary>表示将处理 <see langword="My.Application.NetworkAvailabilityChanged" /> 或 <see langword="My.Computer.Network.NetworkAvailabilityChanged" /> 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">包含事件数据的 <see cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs" /> 对象。</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.ServerComputer">
      <summary>提供了用于操控计算机组件（如音频、时钟、键盘、文件系统等）的属性。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.ServerComputer.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.Devices.ServerComputer" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Clock">
      <summary>获取一个对象，该对象可提供用于从系统时钟访问当前的本地时间和协调通用时间（与格林尼治标准时间相同）的属性。</summary>
      <returns>计算机的 <see langword="My.Computer.Clock" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.FileSystem">
      <summary>获取一个对象，该对象提供用于处理驱动器、文件和目录的属性和方法。</summary>
      <returns>计算机的 <see langword="My.Computer.FileSystem" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Info">
      <summary>获取一个对象，该对象提供用于获取有关计算机内存、已加载的程序集、名称和操作系统的信息的属性。</summary>
      <returns>计算机的 <see langword="My.Computer.Info" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Name">
      <summary>获取计算机名称。</summary>
      <returns>一个包含此计算机的名称的 <see langword="String" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Network">
      <summary>获取一个对象，该对象提供用于与计算机所连接的网络进行交互的属性和方法。</summary>
      <returns>计算机的 <see langword="My.Computer.Network" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry">
      <summary>获取一个对象，该对象提供用于操作注册表的属性和方法。</summary>
      <returns>计算机的 <see langword="My.Computer.Registry" /> 对象。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption">
      <summary>确定在 <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> 对象尝试写入日志而可用磁盘空间小于 <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> 属性所指定的空间时应采取的操作。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages">
      <summary>丢弃日志消息。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException">
      <summary>引发异常。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
      <summary>提供一个简单的侦听器，用于将日志记录输出指引至文件。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor">
      <summary>使用默认名称初始化 <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)">
      <summary>用提供的名称初始化 <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> 类的新实例。</summary>
      <param name="name">
        <see langword="String" />. 实例对象的名称。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close">
      <summary>关闭当前日志文件的基础流，并释放与当前流关联的所有资源。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)">
      <summary>关闭基础流，并可以选择释放托管资源。</summary>
      <param name="disposing">若为 <see langword="True" />，释放托管资源和非托管资源；若为 <see langword="False" />，则只释放非托管资源。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush">
      <summary>刷新写入当前日志文件的基础流。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes">
      <summary>获取跟踪侦听器支持的自定义 XML 配置特性。</summary>
      <returns>
        <see langword="String" /> 数组，包含此侦听器识别的 XML 配置特性。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
      <summary>向输出文件或流中写入跟踪信息、数据对象和事件信息。</summary>
      <param name="eventCache">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" /> 对象。</param>
      <param name="source">调用此方法的跟踪源的名称。</param>
      <param name="eventType">
        <see cref="T:System.Diagnostics.TraceEventType" /> 枚举值之一。</param>
      <param name="id">事件的数值标识符。</param>
      <param name="data">要发出的跟踪数据。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
      <summary>将跟踪信息、数据对象数组和事件信息写入输出文件或流中。</summary>
      <param name="eventCache">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" /> 对象。</param>
      <param name="source">调用此方法的跟踪源的名称。</param>
      <param name="eventType">
        <see cref="T:System.Diagnostics.TraceEventType" /> 枚举值之一。</param>
      <param name="id">事件的数值标识符。</param>
      <param name="data">要作为数据发出的对象数组。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
      <summary>将跟踪信息、消息和事件信息写入输出文件或流中。</summary>
      <param name="eventCache">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" /> 对象。</param>
      <param name="source">调用此方法的跟踪源的名称。</param>
      <param name="eventType">
        <see cref="T:System.Diagnostics.TraceEventType" /> 枚举值之一。</param>
      <param name="id">事件的数值标识符。</param>
      <param name="message">要写入的消息。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
      <summary>将跟踪信息、格式化对象数组和事件信息写入输出文件或流中。</summary>
      <param name="eventCache">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" /> 对象。</param>
      <param name="source">调用此方法的跟踪源的名称。</param>
      <param name="eventType">
        <see cref="T:System.Diagnostics.TraceEventType" /> 枚举值之一。</param>
      <param name="id">事件的数值标识符。</param>
      <param name="format">一个格式字符串，其中包含零个或多个格式项，它们对应于 <paramref name="args" /> 数组中的对象。</param>
      <param name="args">包含零个或多个要格式化的对象的 <see langword="Object" /> 数组。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)">
      <summary>将消息逐字写入磁盘，不带任何附加上下文信息。</summary>
      <param name="message">
        <see langword="String" />. 要写入的自定义消息。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)">
      <summary>将消息逐字写入磁盘，后跟当前行分隔符，不带任何附加上下文信息。</summary>
      <param name="message">
        <see langword="String" />. 要写入的自定义消息。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
      <summary>确定是将输出追加到当前文件还是将输出写入新文件或现有文件。</summary>
      <returns>
        <see langword="Boolean" />，<see langword="True" /> 指示将输出追加到当前文件，<see langword="False" /> 指示将输出写入新文件。 此属性的默认设置为 <see langword="True" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush">
      <summary>指示写入日志文件流时是否刷新缓冲区。</summary>
      <returns>
        <see langword="Boolean" />，<see langword="True" /> 指示每次写入之后都刷新日志文件流；否则将缓存日志条目，这样写入会更有效率。 此属性的默认设置为 <see langword="False" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
      <summary>获取或设置日志文件的基名称，该名称用于创建日志文件的完整名称。</summary>
      <returns>
        <see langword="String" />. 日志文件的基名称。 默认为应用程序的产品名称。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation">
      <summary>当 <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" /> 属性设置为 <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" /> 时获取或设置日志文件目录。</summary>
      <returns>
        <see langword="String" />，日志文件目录的名称。 此属性的默认设置是用户的应用程序数据目录。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter">
      <summary>获取或设置用于在日志消息中分隔字段的分隔符。</summary>
      <returns>
        <see langword="String" />，用作日志消息中字段的分隔符。 此属性的默认设置为制表符字符。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior">
      <summary>确定在写入日志文件时，如果可用磁盘空间小于 <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> 属性所指定的磁盘空间时应采取的操作。</summary>
      <returns>
        <see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />. 确定在尝试写入日志文件时，如果可用磁盘空间小于 <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> 属性所指定的磁盘空间，或日志文件大小大于 <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" /> 属性所允许的大小，应采取的操作。 默认值是 <see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding">
      <summary>获取或设置创建新日志文件时使用的编码。</summary>
      <returns>
        <see cref="T:System.Text.Encoding" />，创建新日志文件时使用的编码。 此属性的默认值为 <see cref="T:System.Text.UTF8Encoding" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
      <summary>获取当前日志文件的完整名称。</summary>
      <returns>
        <see langword="String" />，当前日志文件的完整名称。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName">
      <summary>指示输出中是否应包括日志记录计算机的主机名。</summary>
      <returns>
        <see langword="Boolean" />. 如果应包括主机标识符，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值是 <see langword="False" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
      <summary>获取或设置日志文件的位置。</summary>
      <returns>
        <see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />，日志文件的位置。 默认值是 <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
      <summary>确定要包括在日志文件名称中的日期。</summary>
      <returns>
        <see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />. 此项指示要包括在日志文件名称中的日期。 默认值是 <see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize">
      <summary>获取或设置所允许的日志文件的最大大小，以字节为单位。</summary>
      <exception cref="T:System.ArgumentException">当此属性被设置为一个小于 1000 的值时。</exception>
      <returns>
        <see langword="Long" />. 这是允许的日志文件的最大大小（以字节为单位）。 默认值为5000000。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace">
      <summary>获取或设置在将消息写入日志文件之前需要满足的可用磁盘空间量（以字节为单位）。</summary>
      <exception cref="T:System.ArgumentException">当此属性被设置为小于 0 的值时。</exception>
      <returns>
        <see langword="Long" />. 这是所需的可用磁盘空间量。 默认值为10000000。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Logging.Log">
      <summary>提供用于将事件和异常信息写入应用程序的日志侦听器中的属性和方法。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.Logging.Log" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.#ctor(System.String)">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.Logging.Log" /> 类的新实例。</summary>
      <param name="name">
        <see cref="T:System.String" />. 要指定给 <see cref="P:Microsoft.VisualBasic.Logging.Log.TraceSource" /> 属性对象的名称。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.InitializeWithDefaultsSinceNoConfigExists">
      <summary>创建一个新的 <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> 对象，然后将该对象添加到 <see cref="P:System.Diagnostics.TraceSource.Listeners" /> 集合中。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
      <summary>将消息写入应用程序的日志侦听器中。</summary>
      <param name="message">必需。 要记录的消息。 如果 <paramref name="message" /> 为 <see langword="Nothing" />，则返回一个空字符串。</param>
      <exception cref="T:System.Security.SecurityException">具有部分信任的代码调用该方法，但是写入到需要完全信任的事件日志侦听器。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
      <summary>将消息写入应用程序的日志侦听器中。</summary>
      <param name="message">必需。 要记录的消息。 如果 <paramref name="message" /> 为 <see langword="Nothing" />，则返回一个空字符串。</param>
      <param name="severity">消息的类型。 默认为 <see langword="TraceEventType.Information" />。</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">消息类型不是 <see cref="T:System.Diagnostics.TraceEventType" /> 枚举值之一。</exception>
      <exception cref="T:System.Security.SecurityException">具有部分信任的代码调用该方法，但是写入到需要完全信任的事件日志侦听器。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
      <summary>将消息写入应用程序的日志侦听器中。</summary>
      <param name="message">必需。 要记录的消息。 如果 <paramref name="message" /> 为 <see langword="Nothing" />，则返回一个空字符串。</param>
      <param name="severity">消息的类型。 默认为 <see langword="TraceEventType.Information" />。</param>
      <param name="id">消息标识符，通常用于相关。 默认情况下，与表中所述的 <c>entryType</c> 相关。</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">消息类型不是 <see cref="T:System.Diagnostics.TraceEventType" /> 枚举值之一。</exception>
      <exception cref="T:System.Security.SecurityException">具有部分信任的代码调用该方法，但是写入到需要完全信任的事件日志侦听器。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
      <summary>将异常信息写入应用程序的日志侦听器中。</summary>
      <param name="ex">必需。 要记录的异常。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ex" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.Security.SecurityException">具有部分信任的代码调用该方法，但是写入到需要完全信任的事件日志侦听器。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
      <summary>将异常信息写入应用程序的日志侦听器中。</summary>
      <param name="ex">必需。 要记录的异常。</param>
      <param name="severity">消息的类型。 默认为 <see cref="F:System.Diagnostics.TraceEventType.Error" />。</param>
      <param name="additionalInfo">要追加到消息的字符串。 默认情况下为空字符串。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ex" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">消息类型不是 <see cref="T:System.Diagnostics.TraceEventType" /> 枚举值之一。</exception>
      <exception cref="T:System.Security.SecurityException">具有部分信任的代码调用该方法，但是写入到需要完全信任的事件日志侦听器。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
      <summary>将异常信息写入应用程序的日志侦听器中。</summary>
      <param name="ex">必需。 要记录的异常。</param>
      <param name="severity">消息的类型。 默认为 <see cref="F:System.Diagnostics.TraceEventType.Error" />。</param>
      <param name="additionalInfo">要追加到消息的字符串。 默认情况下为空字符串。</param>
      <param name="id">消息标识符，通常用于相关。 默认情况下，与“备注”部分的表中所述的 <c>entryType</c> 相关。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ex" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">消息类型不是 <see cref="T:System.Diagnostics.TraceEventType" /> 枚举值之一。</exception>
      <exception cref="T:System.Security.SecurityException">具有部分信任的代码调用该方法，但是写入到需要完全信任的事件日志侦听器。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter">
      <summary>获取为 <see langword="Log" /> 对象提供支持的 <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> 对象。</summary>
      <returns>
        <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />对象的基础对象 <see langword="Log" /> 。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.Log.TraceSource">
      <summary>获取为 <see langword="Log" /> 对象提供支持的 <see cref="T:System.Diagnostics.TraceSource" /> 对象。</summary>
      <returns>
        <see cref="T:System.Diagnostics.TraceSource" />对象的基础对象 <see langword="Log" /> 。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption">
      <summary>确定要包括在 <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> 类日志文件名称中的日期。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily">
      <summary>将当前日期包括在日志文件名称中。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None">
      <summary>不要将日期包括在日志文件名称中。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly">
      <summary>将当前周的第一天包括在日志文件名称中。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Logging.LogFileLocation">
      <summary>确定 <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> 类用来写入其日志文件的预定义路径。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileLocation.CommonApplicationDirectory">
      <summary>使用所有用户共享的应用程序数据的路径。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom">
      <summary>如果 <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation" /> 指定的字符串不为空，则使用该字符串作为路径。 否则，使用用户的应用程序数据的路径。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileLocation.ExecutableDirectory">
      <summary>使用启动应用程序的可执行文件的路径。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory">
      <summary>使用用户的应用程序数据的路径。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileLocation.TempDirectory">
      <summary>使用当前系统的临时文件夹的路径。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.ClipboardProxy">
      <summary>提供了用于操控剪贴板的方法。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.Clear">
      <summary>清除剪贴板。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsAudio">
      <summary>指示剪贴板是否包含音频数据。</summary>
      <returns>如果剪贴板上存储有音频数据，则为 <see langword="True" />，否则为 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsData(System.String)">
      <summary>指示剪贴板是否包含指定的自定义格式的数据。</summary>
      <param name="format">
        <see langword="String" />. 要检查的自定义格式的名称。 必需。</param>
      <returns>如果剪贴板上存储有指定的自定义格式的数据，则为 <see langword="True" />，否则为 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsFileDropList">
      <summary>返回一个 <see langword="Boolean" />，该值指示剪贴板是否包含文件下拉列表。</summary>
      <returns>如果剪贴板中存储有文件下拉列表，为 <see langword="True" />；否则为 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsImage">
      <summary>返回一个 <see langword="Boolean" />，该值指示剪贴板上是否存储有图像。</summary>
      <returns>如果剪贴板上存储有图像，则为 <see langword="True" />，否则为 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText">
      <summary>确定剪贴板上是否有文本。</summary>
      <returns>如果剪贴板包含文本，则为 <see langword="True" />；否则为 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText(System.Windows.Forms.TextDataFormat)">
      <summary>确定剪贴板上是否有文本。</summary>
      <param name="format">
        <see cref="T:System.Windows.Forms.TextDataFormat" />. 如果指定，则标识要检查的文本格式。 必需。</param>
      <returns>如果剪贴板包含文本，则为 <see langword="True" />；否则为 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetAudioStream">
      <summary>检索剪贴板上的音频流。</summary>
      <returns>一个包含音频数据的 <see cref="T:System.IO.Stream" /> 对象；如果剪贴板不包含任何音频数据，则为 <see langword="Nothing" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetData(System.String)">
      <summary>检索剪贴板上的自定义格式的数据。</summary>
      <param name="format">
        <see langword="String" />. 数据格式的名称。 必需。</param>
      <returns>一个表示剪贴板数据的 <see langword="Object" />；如果剪贴板中包含的数据都不是指定的格式，也无法转换为该格式，则为 <see langword="Nothing" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetDataObject">
      <summary>检索剪贴板上形式为 <see cref="T:System.Windows.Forms.IDataObject" /> 的数据。</summary>
      <returns>一个表示剪贴板中当前的数据的 <see cref="T:System.Windows.Forms.IDataObject" /> 对象；如果剪贴板中没有数据，则为 <see langword="Nothing" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetFileDropList">
      <summary>从剪贴板上检索表示文件名的字符串的集合。</summary>
      <returns>包含文件名的 <see cref="T:System.Collections.Specialized.StringCollection" />；如果剪贴板中不包含任何格式为 <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> 或可转换为该格式的数据，则为 <see langword="Nothing" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetImage">
      <summary>检索剪贴板上的图像。</summary>
      <returns>表示剪贴板图像数据的 <see cref="T:System.Drawing.Image" />；如果剪贴板中不包含任何 <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> 格式或可转换成该格式的数据，则为 <see langword="Nothing" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText">
      <summary>检索剪贴板上的文本。</summary>
      <returns>剪贴板文本数据；如果剪贴板不包含 <see cref="F:System.Windows.Forms.DataFormats.Text" /> 或 <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> 格式的数据（取决于操作系统），则为空字符串。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText(System.Windows.Forms.TextDataFormat)">
      <summary>检索剪贴板上的文本。</summary>
      <param name="format">
        <see cref="T:System.Windows.Forms.TextDataFormat" />. 如果指定，则标识应检索的文本格式。 默认值为 <see cref="F:System.Windows.Forms.TextDataFormat.CommaSeparatedValue" />。 必需。</param>
      <returns>剪贴板文本数据；如果剪贴板中不包含指定格式的数据，则为空字符串。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio(System.Byte[])">
      <summary>将音频数据写入剪贴板。</summary>
      <param name="audioBytes">
        <see langword="Byte" /> 数组。 要写入剪贴板的音频数据。 必需。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio(System.IO.Stream)">
      <summary>将音频数据写入剪贴板。</summary>
      <param name="audioStream">
        <see cref="T:System.IO.Stream" />。要写入剪贴板的音频数据。 必需。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetData(System.String,System.Object)">
      <summary>将自定义格式的数据写入剪贴板。</summary>
      <param name="format">
        <see langword="String" />. 数据的格式。 必需。</param>
      <param name="data">
        <see langword="Object" />. 要写入剪贴板的数据对象。 必需。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetDataObject(System.Windows.Forms.DataObject)">
      <summary>将 <see cref="T:System.Windows.Forms.DataObject" /> 写入剪贴板。</summary>
      <param name="data">
        <see cref="T:System.Windows.Forms.DataObject" />. 要写入剪贴板的数据对象。 必需。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetFileDropList(System.Collections.Specialized.StringCollection)">
      <summary>将表示文件路径的字符串的集合写入剪贴板。</summary>
      <param name="filePaths">
        <see cref="T:System.Collections.Specialized.StringCollection" />. 文件名列表。 必需。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetImage(System.Drawing.Image)">
      <summary>将图像写入剪贴板。</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" />. 要写入的图像。 必需。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText(System.String)">
      <summary>将文本写入剪贴板。</summary>
      <param name="text">
        <see langword="String" />. 要写入的文本。 必需。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="text" /> 是一个空字符串。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> 为 <see langword="Nothing" />。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText(System.String,System.Windows.Forms.TextDataFormat)">
      <summary>将文本写入剪贴板。</summary>
      <param name="text">
        <see langword="String" />. 要写入的文本。 必需。</param>
      <param name="format">
        <see cref="T:System.Windows.Forms.TextDataFormat" />. 写入文本时要使用的格式。 默认值为 <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />。 必需。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="text" /> 是一个空字符串。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> 为 <see langword="Nothing" />。</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.FileSystemProxy">
      <summary>提供了用于处理驱动器、文件和目录的属性和方法。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CombinePath(System.String,System.String)">
      <summary>组合两个路径并返回一个格式正确的路径。</summary>
      <param name="baseDirectory">
        <see langword="String" />. 要组合的第一个路径。</param>
      <param name="relativePath">
        <see langword="String" />. 要组合的第二个路径。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="baseDirectory" /> 或 <paramref name="relativePath" /> 是格式不正确的路径。</exception>
      <returns>指定路径的组合。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String)">
      <summary>将一个目录复制到另一个目录中。</summary>
      <param name="sourceDirectoryName">要复制的目录。</param>
      <param name="destinationDirectoryName">应将目录复制到的位置。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> 或 <paramref name="sourceDirectoryName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">源目录不存在。</exception>
      <exception cref="T:System.IO.IOException">源路径和目标路径相同。</exception>
      <exception cref="T:System.InvalidOperationException">操作为循环。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件夹名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException">目标文件存在但无法访问。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>将一个目录复制到另一个目录中。</summary>
      <param name="sourceDirectoryName">要复制的目录。</param>
      <param name="destinationDirectoryName">应将目录复制到的位置。</param>
      <param name="showUI">是否对操作进度进行可视跟踪。 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> 或 <paramref name="sourceDirectoryName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">源目录不存在。</exception>
      <exception cref="T:System.IO.IOException">源路径和目标路径相同。</exception>
      <exception cref="T:System.InvalidOperationException">操作为循环。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件夹名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException">目标文件存在但无法访问。</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="ShowUI" /> 设置为 <see langword="UIOption.AllDialogs" /> 且用户取消了该操作，或者无法复制目录中的一个或多个文件。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>将一个目录复制到另一个目录中。</summary>
      <param name="sourceDirectoryName">要复制的目录。</param>
      <param name="destinationDirectoryName">应将目录复制到的位置。</param>
      <param name="showUI">是否对操作进度进行可视跟踪。 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="onUserCancel">指定当用户在操作过程中单击“取消”时应执行的操作****。 默认值为 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> 或 <paramref name="sourceDirectoryName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">源目录不存在。</exception>
      <exception cref="T:System.IO.IOException">源路径和目标路径相同。</exception>
      <exception cref="T:System.InvalidOperationException">操作为循环。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件夹名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException">目标文件存在但无法访问。</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="ShowUI" /> 设置为 <see langword="UIOption.AllDialogs" /> 且用户取消了该操作，或者无法复制目录中的一个或多个文件。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,System.Boolean)">
      <summary>将一个目录复制到另一个目录中。</summary>
      <param name="sourceDirectoryName">要复制的目录。</param>
      <param name="destinationDirectoryName">应将目录复制到的位置。</param>
      <param name="overwrite">要覆盖现有文件，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> 或 <paramref name="sourceDirectoryName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">源目录不存在。</exception>
      <exception cref="T:System.IO.IOException">源路径和目标路径相同。</exception>
      <exception cref="T:System.InvalidOperationException">操作为循环。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件夹名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException">目标文件存在但无法访问。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String)">
      <summary>将文件复制到新的位置。</summary>
      <param name="sourceFileName">要复制的文件。</param>
      <param name="destinationFileName">文件应复制到的位置。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> 包含路径信息。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> 或 <paramref name="sourceFileName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.FileNotFoundException">源文件无效或不存在。</exception>
      <exception cref="T:System.IO.IOException">目标目录中的同名文件正被使用。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户没有必需的权限。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>将文件复制到新的位置。</summary>
      <param name="sourceFileName">要复制的文件。</param>
      <param name="destinationFileName">文件应复制到的位置。</param>
      <param name="showUI">是否对操作进度进行可视跟踪。 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> 包含路径信息。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> 或 <paramref name="sourceFileName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.FileNotFoundException">源文件无效或不存在。</exception>
      <exception cref="T:System.IO.IOException">目标文件存在，并且 <paramref name="overwrite" /> 设置为 <see langword="False" />。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户没有必需的权限。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>将文件复制到新的位置。</summary>
      <param name="sourceFileName">要复制的文件。</param>
      <param name="destinationFileName">文件应复制到的位置。</param>
      <param name="showUI">是否对操作进度进行可视跟踪。 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="onUserCancel">指定当用户在操作过程中单击“取消”时应执行的操作****。 默认值为 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> 包含路径信息。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> 或 <paramref name="sourceFileName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.FileNotFoundException">源文件无效或不存在。</exception>
      <exception cref="T:System.IO.IOException">目标文件存在，并且 <paramref name="overwrite" /> 设置为 <see langword="False" />。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户没有必需的权限。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="UICancelOption" /> 设置为 <see langword="ThrowException" />，并且用户已经取消了该操作或者发生了未指定的 I/O 错误。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,System.Boolean)">
      <summary>将文件复制到新的位置。</summary>
      <param name="sourceFileName">要复制的文件。</param>
      <param name="destinationFileName">文件应复制到的位置。</param>
      <param name="overwrite">如果应覆盖现有文件，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> 包含路径信息。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> 或 <paramref name="sourceFileName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.FileNotFoundException">源文件无效或不存在。</exception>
      <exception cref="T:System.IO.IOException">目标文件存在，并且 <paramref name="overwrite" /> 设置为 <see langword="False" />。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户没有必需的权限。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CreateDirectory(System.String)">
      <summary>创建目录。</summary>
      <param name="directory">目录的名称和位置。</param>
      <exception cref="T:System.ArgumentException">目录名称格式不正确。 例如，它包含非法字符或仅包含空白。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.PathTooLongException">目录名太长。</exception>
      <exception cref="T:System.NotSupportedException">目录名只是一个冒号 (:)。</exception>
      <exception cref="T:System.IO.IOException">要创建的目录的父目录是只读的。</exception>
      <exception cref="T:System.UnauthorizedAccessException">用户没有创建目录的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)">
      <summary>删除目录。</summary>
      <param name="directory">要删除的目录。</param>
      <param name="onDirectoryNotEmpty">指定当要删除的目录中含有文件或目录时应采取的操作。 默认值为 <see langword="DeleteDirectoryOption.DeleteAllContents" />。</param>
      <exception cref="T:System.ArgumentException">路径是零长度字符串、格式不正确、仅包含空白，或者包含无效字符（包括通配符）。 路径是设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">目录不存在，或者目录是一个文件。</exception>
      <exception cref="T:System.IO.IOException">目录或子目录中的某个文件正被使用。</exception>
      <exception cref="T:System.NotSupportedException">目录名中包含冒号 (:)。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.Security.SecurityException">该用户没有必需的权限。</exception>
      <exception cref="T:System.OperationCanceledException">用户取消了操作，或无法删除该目录。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>删除目录。</summary>
      <param name="directory">要删除的目录。</param>
      <param name="showUI">指定是否对操作进度进行可视跟踪。 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="recycle">指定是否应将删除的文件发送到“回收站”****。 默认值为 <see langword="RecycleOption.DeletePermanently" />。</param>
      <exception cref="T:System.ArgumentException">路径是零长度字符串、格式不正确、仅包含空白，或者包含无效字符（包括通配符）。 路径是设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">目录不存在，或者目录是一个文件。</exception>
      <exception cref="T:System.IO.IOException">目录或子目录中的某个文件正被使用。</exception>
      <exception cref="T:System.NotSupportedException">目录名中包含冒号 (:)。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.Security.SecurityException">该用户没有必需的权限。</exception>
      <exception cref="T:System.OperationCanceledException">用户取消了操作，或无法删除该目录。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>删除目录。</summary>
      <param name="directory">要删除的目录。</param>
      <param name="showUI">指定是否对操作进度进行可视跟踪。 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="recycle">指定是否应将删除的文件发送到“回收站”****。 默认值为 <see langword="RecycleOption.DeletePermanently" />。</param>
      <param name="onUserCancel">指定在用户单击“取消”时是否引发异常****。</param>
      <exception cref="T:System.ArgumentException">路径是零长度字符串、格式不正确、仅包含空白，或者包含无效字符（包括通配符）。 路径是设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">目录不存在，或者目录是一个文件。</exception>
      <exception cref="T:System.IO.IOException">目录或子目录中的某个文件正被使用。</exception>
      <exception cref="T:System.NotSupportedException">目录名中包含冒号 (:)。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.Security.SecurityException">该用户没有必需的权限。</exception>
      <exception cref="T:System.OperationCanceledException">用户取消了操作，或无法删除该目录。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String)">
      <summary>删除文件。</summary>
      <param name="file">要删除的文件的名称和路径。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；带有必须指定文件的尾部反斜杠；是设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.IO.IOException">该文件正在使用。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.IO.FileNotFoundException">文件不存在。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户没有删除该文件的权限，或者该文件为只读。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>删除文件。</summary>
      <param name="file">要删除的文件的名称和路径。</param>
      <param name="showUI">是否对操作进度进行可视跟踪。 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="recycle">删除的文件是否应发送到“回收站”****。 默认值为 <see langword="RecycleOption.DeletePermanently" />。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；带有必须指定文件的尾部反斜杠；是设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.IO.IOException">该文件正在使用。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.IO.FileNotFoundException">文件不存在。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户没有删除该文件的权限，或者该文件为只读。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>删除文件。</summary>
      <param name="file">要删除的文件的名称和路径。</param>
      <param name="showUI">是否对操作进度进行可视跟踪。 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="recycle">删除的文件是否应发送到“回收站”****。 默认值为 <see langword="RecycleOption.DeletePermanently" />。</param>
      <param name="onUserCancel">指定用户取消操作时是否引发异常。 默认值为 <see langword="UICancelOption.ThrowException" />。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；带有必须指定文件的尾部反斜杠；是设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.IO.IOException">该文件正在使用。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.IO.FileNotFoundException">文件不存在。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户没有删除该文件的权限，或者该文件为只读。</exception>
      <exception cref="T:System.OperationCanceledException">用户已取消该操作并且 <paramref name="onUserCancel" /> 已设置为 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DirectoryExists(System.String)">
      <summary>如果指定目录存在，则返回 <see langword="True" />。</summary>
      <param name="directory">目录的路径。</param>
      <returns>如果目录存在，则为 <see langword="True" />；否则为 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FileExists(System.String)">
      <summary>如果指定文件存在，则返回 <see langword="True" />。</summary>
      <param name="file">文件的名称和路径。</param>
      <exception cref="T:System.ArgumentException">文件名称以反斜杠 (\) 结尾。</exception>
      <returns>如果文件存在，则返回 <see langword="True" />；否则此方法返回 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)">
      <summary>返回字符串的只读集合，这些字符串表示包含指定文本的文件的名称。</summary>
      <param name="directory">要搜索的目录。</param>
      <param name="containsText">搜索文本。</param>
      <param name="ignoreCase">如果搜索应区分大小写，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="True" />。</param>
      <param name="searchType">是否包含子文件夹。 默认值为 <see langword="SearchOption.SearchTopLevelOnly" />。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一而无效：是零长度字符串;它仅包含空格;它包含无效字符;或者是 (以<c> \\ . \</c>) 开头的设备路径。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定的目录不存在。</exception>
      <exception cref="T:System.IO.IOException">指定的目录指向某个现有文件。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">指定的目录路径中包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户缺少必要的权限。</exception>
      <returns>包含指定文本的文件名的只读集合。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>返回字符串的只读集合，这些字符串表示包含指定文本的文件的名称。</summary>
      <param name="directory">要搜索的目录。</param>
      <param name="containsText">搜索文本。</param>
      <param name="ignoreCase">如果搜索应区分大小写，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="True" />。</param>
      <param name="searchType">是否包含子文件夹。 默认值为 <see langword="SearchOption.SearchTopLevelOnly" />。</param>
      <param name="fileWildcards">要匹配的模式。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一而无效：是零长度字符串;它仅包含空格;它包含无效字符;或者是 (以<c> \\ . \</c>) 开头的设备路径。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定的目录不存在。</exception>
      <exception cref="T:System.IO.IOException">指定的目录指向某个现有文件。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">指定的目录路径中包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户缺少必要的权限。</exception>
      <returns>包含指定文本的文件名的只读集合。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String)">
      <summary>返回一个字符串集合，这些字符串表示目录内子目录的路径名。</summary>
      <param name="directory">目录的名称和路径。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定的目录不存在。</exception>
      <exception cref="T:System.IO.IOException">指定的目录指向某个现有文件。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户缺少必要的权限。</exception>
      <returns>所指定目录中，子目录路径名称的只读集合。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>返回一个字符串集合，这些字符串表示目录内子目录的路径名。</summary>
      <param name="directory">目录的名称和路径。</param>
      <param name="searchType">是否包含子文件夹。 默认值为 <see langword="SearchOption.SearchTopLevelOnly" />。</param>
      <param name="wildcards">用于匹配名称的模式。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">一个或多个指定的通配符为 <see langword="Nothing" />、空字符串，或者仅包含空格。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定的目录不存在。</exception>
      <exception cref="T:System.IO.IOException">指定的目录指向某个现有文件。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户缺少必要的权限。</exception>
      <returns>所指定目录中，子目录路径名称的只读集合。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectoryInfo(System.String)">
      <summary>返回指定路径的 <see cref="T:System.IO.DirectoryInfo" /> 对象。</summary>
      <param name="directory">
        <see langword="String" />. 目录的路径。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">目录路径中包含冒号 (:)，或者格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <returns>指定路径的 <see cref="T:System.IO.DirectoryInfo" /> 对象。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDriveInfo(System.String)">
      <summary>返回指定驱动器的 <see cref="T:System.IO.DriveInfo" /> 对象。</summary>
      <param name="drive">要检查的驱动器。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="drive" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <returns>指定驱动器的 <see cref="T:System.IO.DriveInfo" /> 对象。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFileInfo(System.String)">
      <summary>返回指定文件的 <see cref="T:System.IO.FileInfo" /> 对象。</summary>
      <param name="file">文件的名称和路径。</param>
      <exception cref="T:System.ArgumentException">路径名称格式不正确。 例如，包含无效字符或仅为空白。 文件名具有尾随斜杠标记。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.NotSupportedException">路径的字符串中间包含一个冒号。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径太长。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少必要的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户缺少对文件的 ACL（访问控制列表）的访问权限。</exception>
      <returns>指定文件的 <see cref="T:System.IO.FileInfo" /> 对象</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String)">
      <summary>返回字符串的只读集合，这些字符串表示目录内文件的名称。</summary>
      <param name="directory">要搜索的目录。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">要搜索的目录不存在。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="directory" /> 指向某个现有文件。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户缺少必要的权限。</exception>
      <returns>指定目录中的文件名的只读集合。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>返回字符串的只读集合，这些字符串表示目录内文件的名称。</summary>
      <param name="directory">要搜索的目录。</param>
      <param name="searchType">是否包含子文件夹。 默认值为 <see langword="SearchOption.SearchTopLevelOnly" />。</param>
      <param name="wildcards">要匹配的模式。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">要搜索的目录不存在。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="directory" /> 指向某个现有文件。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户缺少必要的权限。</exception>
      <returns>指定目录中的文件名的只读集合。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetName(System.String)">
      <summary>从提供的路径分析文件名。</summary>
      <param name="path">必需。 要分析的路径。 <see langword="String" />.</param>
      <returns>来自指定路径的文件名。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetParentPath(System.String)">
      <summary>返回所提供的路径的父路径。</summary>
      <param name="path">要检查的路径。</param>
      <exception cref="T:System.ArgumentException">路径是根路径，因此没有父路径。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <returns>所提供的路径的父路径。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetTempFileName">
      <summary>在磁盘上创建一个唯一命名的零字节临时文件并返回该文件的完整路径。</summary>
      <returns>包含该临时文件的完整路径的 <see langword="String" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String)">
      <summary>将目录从一个位置移动到另一个位置。</summary>
      <param name="sourceDirectoryName">要移动的目录的路径。</param>
      <param name="destinationDirectoryName">源目录将移到的目录的路径。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> 或 <paramref name="destinationDirectoryName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">该目录不存在。</exception>
      <exception cref="T:System.IO.IOException">源是根目录，或者，源路径与目标路径相同。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.InvalidOperationException">操作为循环。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户没有必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>将目录从一个位置移动到另一个位置。</summary>
      <param name="sourceDirectoryName">要移动的目录的路径。</param>
      <param name="destinationDirectoryName">源目录将移到的目录的路径。</param>
      <param name="showUI">指定是否对操作进度进行可视跟踪。 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> 或 <paramref name="destinationDirectoryName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">该目录不存在。</exception>
      <exception cref="T:System.IO.IOException">目标目录已存在，并且 <paramref name="overwrite" /> 设置为 <see langword="False" />。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.InvalidOperationException">操作为循环。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户没有必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>将目录从一个位置移动到另一个位置。</summary>
      <param name="sourceDirectoryName">要移动的目录的路径。</param>
      <param name="destinationDirectoryName">源目录将移到的目录的路径。</param>
      <param name="showUI">指定是否对操作进度进行可视跟踪。 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="onUserCancel">指定用户取消操作时是否引发异常。 默认值为 <see langword="UICancelOption.ThrowException" />。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> 或 <paramref name="destinationDirectoryName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">该目录不存在。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="onUserCancel" /> 设置为 <see langword="ThrowException" /> 并且无法复制子目录中的文件。</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="onUserCancel" /> 设置为 <see langword="ThrowException" />，并且用户取消了该操作，或者无法完成该操作。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.InvalidOperationException">操作为循环。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户没有必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,System.Boolean)">
      <summary>将目录从一个位置移动到另一个位置。</summary>
      <param name="sourceDirectoryName">要移动的目录的路径。</param>
      <param name="destinationDirectoryName">源目录将移到的目录的路径。</param>
      <param name="overwrite">如果应覆盖现有目录，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> 或 <paramref name="destinationDirectoryName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">该目录不存在。</exception>
      <exception cref="T:System.IO.IOException">目标目录已存在，并且 <paramref name="overwrite" /> 设置为 <see langword="False" />。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.InvalidOperationException">操作为循环。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户没有必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String)">
      <summary>将文件移动到一个新位置。</summary>
      <param name="sourceFileName">要移动的文件的路径。</param>
      <param name="destinationFileName">文件应移到的目录的路径。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）；以尾部反斜杠结尾。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.FileNotFoundException">源文件无效或不存在。</exception>
      <exception cref="T:System.IO.IOException">文件正由另一个进程使用，或者出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>将文件移动到一个新位置。</summary>
      <param name="sourceFileName">要移动的文件的路径。</param>
      <param name="destinationFileName">文件应移到的目录的路径。</param>
      <param name="showUI">指定是否对操作进度进行可视跟踪。 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）；以尾部反斜杠结尾。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.FileNotFoundException">源文件无效或不存在。</exception>
      <exception cref="T:System.IO.IOException">文件正由另一个进程使用，或者出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>将文件移动到一个新位置。</summary>
      <param name="sourceFileName">要移动的文件的路径。</param>
      <param name="destinationFileName">文件应移到的目录的路径。</param>
      <param name="showUI">指定是否对操作进度进行可视跟踪。 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="onUserCancel">指定用户取消操作时是否引发异常。 默认值为 <see langword="UICancelOption.ThrowException" />。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）；以尾部反斜杠结尾。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.FileNotFoundException">源文件无效或不存在。</exception>
      <exception cref="T:System.IO.IOException">文件正由另一个进程使用，或者出现 I/O 错误。</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="onUserCancel" /> 设置为 <see langword="ThrowException" />，并且用户已经取消了该操作或者发生了未指定的 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,System.Boolean)">
      <summary>将文件移动到一个新位置。</summary>
      <param name="sourceFileName">要移动的文件的路径。</param>
      <param name="destinationFileName">文件应移到的目录的路径。</param>
      <param name="overwrite">要覆盖现有文件，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）；以尾部反斜杠结尾。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.FileNotFoundException">源文件无效或不存在。</exception>
      <exception cref="T:System.IO.IOException">文件正由另一个进程使用，或者出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String)">
      <summary>使用 <see langword="OpenTextFieldParser" /> 方法可以创建 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 对象，该对象为分析结构化文本文件（例如日志）提供了一种简单而有效的方法。 <see langword="TextFieldParser" /> 对象可用于读取分隔文件和固定宽度文件。</summary>
      <param name="file">要使用 <see langword="TextFieldParser" /> 打开的文件。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）；以尾部反斜杠结尾。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException">文件不存在。</exception>
      <exception cref="T:System.IO.IOException">文件正由另一个进程使用，或者出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">无法使用指定的格式分析某行 ()。 此异常消息指定导致发生异常的行，同时将 <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> 属性分配给该行中包含的文本。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <returns>用于读取指定文件的 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.Int32[])">
      <summary>使用 <see langword="OpenTextFieldParser" /> 方法可以创建 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 对象，该对象为分析结构化文本文件（例如日志）提供了一种简单而有效的方法。 <see langword="TextFieldParser" /> 对象可用于读取分隔文件和固定宽度文件。</summary>
      <param name="file">要使用 <see langword="TextFieldParser" /> 打开的文件。</param>
      <param name="fieldWidths">字段的宽度。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）；以尾部反斜杠结尾。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException">文件不存在。</exception>
      <exception cref="T:System.IO.IOException">文件正由另一个进程使用，或者出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">无法使用指定的格式分析某行 ()。 此异常消息指定导致发生异常的行，同时将 <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> 属性分配给该行中包含的文本。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <returns>用于读取指定文件的 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.String[])">
      <summary>使用 <see langword="OpenTextFieldParser" /> 方法可以创建 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 对象，该对象为分析结构化文本文件（例如日志）提供了一种简单而有效的方法。 <see langword="TextFieldParser" /> 对象可用于读取分隔文件和固定宽度文件。</summary>
      <param name="file">要使用 <see langword="TextFieldParser" /> 打开的文件。</param>
      <param name="delimiters">字段分隔符。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）；以尾部反斜杠结尾。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException">文件不存在。</exception>
      <exception cref="T:System.IO.IOException">文件正由另一个进程使用，或者出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">无法使用指定的格式分析某行 ()。 此异常消息指定导致发生异常的行，同时将 <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> 属性分配给该行中包含的文本。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <returns>用于读取指定文件的 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String)">
      <summary>打开要从文件中读取的 <see cref="T:System.IO.StreamReader" /> 对象。</summary>
      <param name="file">要读取的文件。</param>
      <exception cref="T:System.ArgumentException">文件名以反斜杠 (\) 结尾。</exception>
      <exception cref="T:System.IO.FileNotFoundException">无法找到指定的文件。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少从文件读取所必需的权限。</exception>
      <returns>要从文件中读取的 <see cref="T:System.IO.StreamReader" /> 对象</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String,System.Text.Encoding)">
      <summary>打开要从文件中读取的 <see cref="T:System.IO.StreamReader" /> 对象。</summary>
      <param name="file">要读取的文件。</param>
      <param name="encoding">要用于文件内容的编码。 默认值为 ASCII。</param>
      <exception cref="T:System.ArgumentException">文件名以反斜杠 (\) 结尾。</exception>
      <exception cref="T:System.IO.FileNotFoundException">无法找到指定的文件。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少从文件读取所必需的权限。</exception>
      <returns>要从文件中读取的 <see cref="T:System.IO.StreamReader" /> 对象</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean)">
      <summary>打开要写入指定文件的 <see cref="T:System.IO.StreamWriter" /> 对象。</summary>
      <param name="file">要写入的文件。</param>
      <param name="append">要追加到文件的内容中，则为 <see langword="True" />；要覆盖文件的内容，则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException">文件名以尾部反斜杠结尾。</exception>
      <returns>要写入指定文件的 <see cref="T:System.IO.StreamWriter" /> 对象。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)">
      <summary>打开要写入指定文件的 <see cref="T:System.IO.StreamWriter" />。</summary>
      <param name="file">要写入的文件。</param>
      <param name="append">若要追加到文件的内容中，则为 <see langword="True" />；若要覆盖文件的内容，则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <param name="encoding">写入文件时要使用的编码。 默认值为 ASCII。</param>
      <exception cref="T:System.ArgumentException">文件名以尾部反斜杠结尾。</exception>
      <returns>要写入指定文件的 <see cref="T:System.IO.StreamWriter" /> 对象。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllBytes(System.String)">
      <summary>以字节数组的形式返回文件的内容。</summary>
      <param name="file">要读取的文件。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）；以尾部反斜杠结尾。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException">文件不存在。</exception>
      <exception cref="T:System.IO.IOException">文件正由另一个进程使用，或者出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.OutOfMemoryException">内存不足，无法将字符串写入缓冲区。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <returns>包含文件内容的 <see langword="Byte" /> 数组。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String)">
      <summary>将文本文件的内容作为 <see langword="String" /> 返回。</summary>
      <param name="file">要读取的文件的名称和路径。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）；以尾部反斜杠结尾。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException">文件不存在。</exception>
      <exception cref="T:System.IO.IOException">文件正由另一个进程使用，或者出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.OutOfMemoryException">内存不足，无法将字符串写入缓冲区。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <returns>包含文件内容的 <see langword="String" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String,System.Text.Encoding)">
      <summary>将文本文件的内容作为 <see langword="String" /> 返回。</summary>
      <param name="file">要读取的文件的名称和路径。</param>
      <param name="encoding">读取文件时要使用的字符编码。 默认值为 UTF-8。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）；以尾部反斜杠结尾。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException">文件不存在。</exception>
      <exception cref="T:System.IO.IOException">文件正由另一个进程使用，或者出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.OutOfMemoryException">内存不足，无法将字符串写入缓冲区。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <returns>包含文件内容的 <see langword="String" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameDirectory(System.String,System.String)">
      <summary>重命名目录。</summary>
      <param name="directory">要重命名的目录的路径和名称。</param>
      <param name="newName">目录的新名称。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" /> 包含路径信息。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> 为 <see langword="Nothing" />。  
  
- 或 - 
 <paramref name="newName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">该目录不存在。</exception>
      <exception cref="T:System.IO.IOException">存在一个具有 <paramref name="newName" /> 中指定的名称的文件或目录。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户没有必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameFile(System.String,System.String)">
      <summary>重命名文件。</summary>
      <param name="file">要重命名的文件。</param>
      <param name="newName">文件的新名称。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" /> 包含路径信息或以反斜杠 (\) 结尾。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 为 <see langword="Nothing" />。  
  
- 或 - 
 <paramref name="newName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.FileNotFoundException">文件不存在。</exception>
      <exception cref="T:System.IO.IOException">存在一个具有 <paramref name="newName" /> 中指定的名称的文件或目录。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户没有必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllBytes(System.String,System.Byte[],System.Boolean)">
      <summary>将数据写入二进制文件。</summary>
      <param name="file">要写入的文件的路径和名称。</param>
      <param name="data">要写入文件的数据。</param>
      <param name="append">若要追加到文件内容中，则为 <see langword="True" />；若要覆盖文件内容，则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）；以尾部反斜杠结尾。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException">文件不存在。</exception>
      <exception cref="T:System.IO.IOException">文件正由另一个进程使用，或者出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.OutOfMemoryException">内存不足，无法将字符串写入缓冲区。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean)">
      <summary>向文件写入文本。</summary>
      <param name="file">要写入的文件。</param>
      <param name="text">要写入文件的文本。</param>
      <param name="append">要追加到文件的内容中，则为 <see langword="True" />；要覆盖文件的内容，则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）；以尾部反斜杠结尾。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException">文件不存在。</exception>
      <exception cref="T:System.IO.IOException">文件正由另一个进程使用，或者出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.OutOfMemoryException">内存不足，无法将字符串写入缓冲区。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)">
      <summary>向文件写入文本。</summary>
      <param name="file">要写入的文件。</param>
      <param name="text">要写入文件的文本。</param>
      <param name="append">要追加到文件的内容中，则为 <see langword="True" />；要覆盖文件的内容，则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <param name="encoding">写入文件时要使用的编码。 默认值为 UTF-8。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）；以尾部反斜杠结尾。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException">文件不存在。</exception>
      <exception cref="T:System.IO.IOException">文件正由另一个进程使用，或者出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.OutOfMemoryException">内存不足，无法将字符串写入缓冲区。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.CurrentDirectory">
      <summary>获取或设置当前目录。</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">该路径无效。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户缺少必要的权限。</exception>
      <returns>文件 I/O 操作的当前目录。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.Drives">
      <summary>返回所有可用驱动器名称的只读集合。</summary>
      <returns>作为 <see cref="T:System.IO.DriveInfo" /> 对象的所有可用驱动器的只读集合。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories">
      <summary>获取一个对象，该对象提供用于访问经常引用的目录的属性。</summary>
      <returns>此属性返回计算机的 <see cref="T:Microsoft.VisualBasic.FileIO.SpecialDirectories" /> 对象。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.Internal.ContextValue`1">
      <summary>此类在 Visual Basic 中支持 <see langword="My" />。</summary>
      <typeparam name="T">要存储的对象的类型。</typeparam>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.Internal.ContextValue`1.#ctor">
      <summary>此类在 Visual Basic 中支持 <see langword="My" />。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.Internal.ContextValue`1.Value">
      <summary>在 Visual Basic 中，此属性支持 <see langword="My" />。</summary>
      <returns>与此类关联的值。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.RegistryProxy">
      <summary>提供了用于操控注册表的属性和方法。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.RegistryProxy.GetValue(System.String,System.String,System.Object)">
      <summary>从注册表项中获取值。</summary>
      <param name="keyName">
        <see langword="String" />. 要从中检索值的项。 必需。</param>
      <param name="valueName">
        <see langword="String" />. 要检索的值。 必需。</param>
      <param name="defaultValue">
        <see langword="Object" />. 当值不存在时要提供的默认值。 必需。</param>
      <exception cref="T:System.Security.SecurityException">该用户没有读取注册表项所需的权限。</exception>
      <exception cref="T:System.IO.IOException">包含指定值的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已标记为删除。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="keyName" /> 未以有效注册表根开头。</exception>
      <returns>从注册表项中获取值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object)">
      <summary>向注册表项中写入值。</summary>
      <param name="keyName">
        <see langword="String" />. 要写入到的项的名称。 必需。</param>
      <param name="valueName">
        <see langword="String" />. 要写入的值的名称。 必需。</param>
      <param name="value">
        <see langword="Object" />. 要写入的值。 必需。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="keyName" /> 未以有效注册表根开头。  
  
- 或 - 
 <paramref name="valueName" /> 的长度超过了允许的最大长度（255 个字符）。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <see cref="T:Microsoft.Win32.RegistryKey" /> 是只读的，因此无法对其写入内容（例如，它是根级节点，或者未用写访问权限打开该项）。</exception>
      <exception cref="T:System.Security.SecurityException">用户没有创建或修改注册表项所需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
      <summary>向注册表项中写入值。</summary>
      <param name="keyName">
        <see langword="String" />. 要写入到的项的名称。 必需。</param>
      <param name="valueName">
        <see langword="String" />. 要写入的值的名称。 必需。</param>
      <param name="value">
        <see langword="Object" />. 要写入的值。 必需。</param>
      <param name="valueKind">
        <see cref="T:Microsoft.Win32.RegistryValueKind" />. 必需。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="keyName" /> 未以有效注册表根开头。  
  
- 或 - 
 <paramref name="keyName" /> 的长度超过了允许的最大长度（255 个字符）。  
  
- 或 - 
<paramref name="value" /> 的类型与 <paramref name="valueKind" /> 指定的注册表数据类型不匹配，因此，无法正确转换该数据。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <see cref="T:Microsoft.Win32.RegistryKey" /> 是只读的，因此无法对其写入（例如，它是根级节点，或者未用写访问权限打开该项）。</exception>
      <exception cref="T:System.Security.SecurityException">用户没有创建或修改注册表项所需的权限。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot">
      <summary>返回 <see cref="T:Microsoft.Win32.RegistryKey" /> 类型，该类型提供对 <see langword="HKEY_CLASSES_ROOT" /> 的访问。</summary>
      <returns>
        <see cref="T:Microsoft.Win32.RegistryKey" />
      </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig">
      <summary>返回 <see cref="T:Microsoft.Win32.RegistryKey" /> 类型，该类型提供对 <see langword="HKEY_CURRENT_CONFIG" /> 的访问。</summary>
      <returns>
        <see cref="T:Microsoft.Win32.RegistryKey" />
      </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser">
      <summary>返回 <see cref="T:Microsoft.Win32.RegistryKey" /> 类型，该类型提供对 <see langword="HKEY_CURRENT_USER" /> 的访问。</summary>
      <returns>
        <see cref="T:Microsoft.Win32.RegistryKey" />
      </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine">
      <summary>返回 <see cref="T:Microsoft.Win32.RegistryKey" /> 类型，该类型提供对 <see langword="HKEY_LOCAL_MACHINE" /> 的访问。</summary>
      <returns>
        <see cref="T:Microsoft.Win32.RegistryKey" />
      </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData">
      <summary>返回 <see cref="T:Microsoft.Win32.RegistryKey" /> 类型，该类型提供对 <see langword="HKEY_PERFORMANCE_DATA" /> 的访问。</summary>
      <returns>
        <see cref="T:Microsoft.Win32.RegistryKey" />
      </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.Users">
      <summary>返回 <see cref="T:Microsoft.Win32.RegistryKey" /> 类型，该类型提供对 <see langword="HKEY_USERS" /> 的访问。</summary>
      <returns>
        <see cref="T:Microsoft.Win32.RegistryKey" />
      </returns>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy">
      <summary>提供了用于访问经常引用的目录的属性。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.AllUsersApplicationData">
      <summary>获取指向所有用户的 Application Data 目录的路径名称。</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">路径为空，通常是因为操作系统不支持该目录。</exception>
      <returns>指向所有用户的 Application Data 目录的路径。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.CurrentUserApplicationData">
      <summary>获取指向当前用户的 Application Data 目录的路径名称。</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">路径为空，通常是因为操作系统不支持该目录。</exception>
      <returns>指向当前用户的 Application Data 目录的路径。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Desktop">
      <summary>获取指向 Desktop 目录的路径名称。</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">路径为空，通常是因为操作系统不支持该目录。</exception>
      <returns>Desktop 目录的路径。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyDocuments">
      <summary>获取指向 My Documents 目录的路径名称。</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">路径为空，通常是因为操作系统不支持该目录。</exception>
      <returns>指向 My Documents 目录的路径。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyMusic">
      <summary>获取指向 My Music 目录的路径名称。</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">路径为空，通常是因为操作系统不支持该目录。</exception>
      <returns>指向 My Music 目录的路径。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyPictures">
      <summary>获取指向 My Pictures 目录的路径名称。</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">路径为空，通常是因为操作系统不支持该目录。</exception>
      <returns>指向 My Pictures 目录的路径。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.ProgramFiles">
      <summary>获取指向 Program Files**** 目录的路径。</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">路径为空，通常是因为操作系统不支持该目录。</exception>
      <returns>Program Files目录的路径。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Programs">
      <summary>获取指向 Programs 目录的路径名称。</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">路径为空，通常是因为操作系统不支持该目录。</exception>
      <returns>指向 Programs 目录的路径。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Temp">
      <summary>获取指向 Temp 目录的路径名称。</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">路径为空，通常是因为操作系统不支持该目录。</exception>
      <returns>指向 Temp 目录的路径。</returns>
    </member>
  </members>
</doc>