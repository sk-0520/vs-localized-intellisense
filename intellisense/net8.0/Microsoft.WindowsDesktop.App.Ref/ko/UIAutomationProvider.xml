<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>UIAutomationProvider</name>
  </assembly>
  <members>
    <member name="T:System.Windows.Automation.Provider.AutomationInteropProvider">
      <summary>UI 자동화 공급자와 UI 자동화 클라이언트 애플리케이션 간의 통신을 지원합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.AutomationInteropProvider.AppendRuntimeId">
      <summary>UI 자동화 공급자가 <see cref="M:System.Windows.Automation.Provider.IRawElementProviderFragment.GetRuntimeId" />에 전달한 배열의 첫 번째 요소로 반환된 경우 ID가 부분적이므로 기본 공급자가 제공한 ID에 추가되어야 함을 나타내는 값이 포함되어 있습니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.AutomationInteropProvider.InvalidateLimit">
      <summary>일괄 처리를 수행하기 전에 보낼 최대 이벤트 개수를 지정합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.AutomationInteropProvider.ItemsInvalidateLimit">
      <summary>컨테이너의 항목을 일괄 처리하기 전에 보낼 최대 이벤트 수입니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.AutomationInteropProvider.RootObjectId">
      <summary>
        <see langword="lParam" /> 메시지의 <see langword="WM_GETOBJECT" /> 멤버에 사용되며 서버에서 루트 원시 요소 공급자에 대한 참조를 반환해야 함을 나타내는 값을 포함합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.AutomationInteropProvider.HostProviderFromHandle(System.IntPtr)">
      <summary>지정된 창을 나타내는 UI 자동화 공급자를 반환합니다.</summary>
      <param name="hwnd">창의 핸들입니다.</param>
      <returns>지정된 창에 대한 원시 요소 공급자입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.AutomationInteropProvider.RaiseAutomationEvent(System.Windows.Automation.AutomationEvent,System.Windows.Automation.Provider.IRawElementProviderSimple,System.Windows.Automation.AutomationEventArgs)">
      <summary>패턴 이벤트 또는 사용자 지정 이벤트를 발생시킵니다.</summary>
      <param name="eventId">이벤트 식별자입니다.</param>
      <param name="provider">이벤트와 연결된 요소입니다.</param>
      <param name="e">이벤트 정보입니다.</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.AutomationInteropProvider.RaiseAutomationPropertyChangedEvent(System.Windows.Automation.Provider.IRawElementProviderSimple,System.Windows.Automation.AutomationPropertyChangedEventArgs)">
      <summary>UI 자동화 속성이 변경되면 이벤트를 발생시킵니다.</summary>
      <param name="element">이벤트와 연결된 요소입니다.</param>
      <param name="e">이벤트 정보입니다.</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.AutomationInteropProvider.RaiseStructureChangedEvent(System.Windows.Automation.Provider.IRawElementProviderSimple,System.Windows.Automation.StructureChangedEventArgs)">
      <summary>UI 자동화 트리가 변경되면 이벤트를 발생시킵니다.</summary>
      <param name="provider">이벤트와 연결된 요소입니다.</param>
      <param name="e">이벤트 정보입니다.</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.AutomationInteropProvider.ReturnRawElementProvider(System.IntPtr,System.IntPtr,System.IntPtr,System.Windows.Automation.Provider.IRawElementProviderSimple)">
      <summary>
        <see langword="WM_GETOBJECT" /> 메시지에 따라 요소의 UI Automation 공급자를 반환합니다.</summary>
      <param name="hwnd">요소 창의 핸들입니다.</param>
      <param name="wParam">
        <see langword="WM_GETOBJECT" /> 메시지의 <see langword="wParam" /> 멤버입니다.</param>
      <param name="lParam">
        <see langword="WM_GETOBJECT" /> 메시지의 <see langword="lParam" /> 멤버입니다.</param>
      <param name="el">요소의 UI 자동화 공급자입니다.</param>
      <returns>기본 창 프로시저에 메시지를 전달하기 전에 <see cref="P:System.Windows.Forms.Message.Result" /> 에 할당해야 하는 데이터에 대한 포인터입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.AutomationInteropProvider.ClientsAreListening">
      <summary>UI 자동화 클라이언트 애플리케이션에서 UI 자동화 이벤트를 구독하는지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>클라이언트에서 이벤트를 구독하면 <see langword="true" />이고, 구독하지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IDockProvider">
      <summary>도킹 컨테이너 내의 해당 도킹 속성을 노출하는 컨트롤에 대한 UI 자동화 클라이언트 액세스를 지원하기 위해 메서드 및 속성을 노출합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IDockProvider.SetDockPosition(System.Windows.Automation.DockPosition)">
      <summary>도킹 컨테이너 내에 컨트롤을 도킹합니다.</summary>
      <param name="dockPosition">도킹 컨테이너의 경계 및 컨테이너 내 다른 요소에 상대적인 도킹 위치입니다.</param>
    </member>
    <member name="P:System.Windows.Automation.Provider.IDockProvider.DockPosition">
      <summary>도킹 컨테이너 내에 있는 컨트롤의 현재 <see cref="T:System.Windows.Automation.DockPosition" />을 가져옵니다.</summary>
      <returns>컨테이너 내에서 도킹 컨테이너 및 다른 요소의 경계를 기준으로 한 컨트롤의 <see cref="T:System.Windows.Automation.DockPosition" />입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IExpandCollapseProvider">
      <summary>콘텐츠를 표시하려고 시각적으로 확장하고 콘텐츠를 숨기려고 축소하는 컨트롤에 대한 UI 자동화 클라이언트 액세스를 지원하도록 메서드 및 속성을 공개합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IExpandCollapseProvider.Collapse">
      <summary>컨트롤의 하위 항목인 모든 노드, 컨트롤 또는 내용을 숨깁니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IExpandCollapseProvider.Expand">
      <summary>컨트롤의 모든 자식 노드, 컨트롤 또는 내용을 표시합니다.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IExpandCollapseProvider.ExpandCollapseState">
      <summary>컨트롤의 확장 또는 축소 상태를 가져옵니다.</summary>
      <returns>컨트롤의 확장 또는 축소 상태입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IGridItemProvider">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.IGridProvider" />를 구현하는 컨테이너의 개별 자식 컨트롤에 대한 UI 자동화 클라이언트 액세스를 지원하는 메서드 및 속성을 공개합니다.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridItemProvider.Column">
      <summary>셀 또는 항목을 포함하는 열의 서수를 가져옵니다.</summary>
      <returns>셀 또는 항목을 포함하는 열을 식별하는 서수(0부터 시작)입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridItemProvider.ColumnSpan">
      <summary>셀 또는 항목의 범위에 포함되는 열 수를 가져옵니다.</summary>
      <returns>범위에 포함되는 열 수입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridItemProvider.ContainingGrid">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.IGridProvider" />를 구현하고 셀 또는 항목의 컨테이너를 나타내는 UI 자동화 공급자를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Windows.Automation.GridPattern" />를 구현하고 셀 또는 항목 컨테이너를 나타내는 UI 자동화 공급자입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridItemProvider.Row">
      <summary>셀 또는 항목을 포함하는 행의 서수를 가져옵니다.</summary>
      <returns>셀 또는 항목을 포함하는 행을 식별하는 서수(0부터 시작)입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridItemProvider.RowSpan">
      <summary>셀 또는 항목의 범위에 포함되는 행 수를 가져옵니다.</summary>
      <returns>범위에 포함되는 행 수입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IGridProvider">
      <summary>자식 요소의 컬렉션에 대해 컨테이너 역할을 하는 컨트롤에 대한 UI 자동화 클라이언트 액세스를 지원하도록 메서드 및 속성을 공개합니다. 이 요소의 자식은 <see cref="T:System.Windows.Automation.Provider.IGridItemProvider" />를 구현해야 하며 키보드를 사용하여 트래버스될 수 있는(즉, UI 자동화 클라이언트가 인접한 컨트롤로 이동할 수 있음) 2차원의 논리적 좌표계로 구성되어야 합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IGridProvider.GetItem(System.Int32,System.Int32)">
      <summary>지정된 셀에 대한 UI 자동화 공급자를 검색합니다.</summary>
      <param name="row">관심 있는 행의 서수입니다.</param>
      <param name="column">관심 있는 열의 서수입니다.</param>
      <returns>지정된 셀에 대한 UI 자동화 공급자입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridProvider.ColumnCount">
      <summary>표에 있는 열의 총 개수를 가져옵니다.</summary>
      <returns>표에 있는 열의 총 개수입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridProvider.RowCount">
      <summary>그리드에 있는 행의 총수를 가져옵니다.</summary>
      <returns>그리드에 있는 행의 총수입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IInvokeProvider">
      <summary>모호하지 않은 단일 작업을 시작하거나 수행하는 컨트롤에 대한 UI 자동화 클라이언트 액세스를 지원하는 메서드 및 속성을 공개하지만 활성화되면 상태를 유지하지 않습니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke">
      <summary>요청을 보내 컨트롤을 활성화하고 해당하는 명확한 단일 작업을 시작합니다.</summary>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">컨트롤이 사용 설정되지 않은 경우.</exception>
    </member>
    <member name="T:System.Windows.Automation.Provider.IItemContainerProvider">
      <summary>가상화된 목록과 같은 요소를 컨테이너에서 찾기 위해 애플리케이션을 사용하도록 설정할 메서드를 노출합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IItemContainerProvider.FindItemByProperty(System.Windows.Automation.Provider.IRawElementProviderSimple,System.Int32,System.Object)">
      <summary>지정된 속성 값으로 요소를 검색합니다.</summary>
      <param name="startAfter">검색을 시작할 컨테이너의 항목입니다.</param>
      <param name="propertyId">검색할 값이 포함된 속성입니다.</param>
      <param name="value">검색할 값입니다.</param>
      <returns>검색 조건과 일치하는 첫 번째 항목이거나, 일치하는 항목이 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IMultipleViewProvider">
      <summary>동일한 정보 또는 자식 컨트롤 집합의 여러 표현을 제공하고 표현 간에 전환할 수 있는 컨트롤에 대한 UI 자동화 클라이언트 액세스를 지원할 메서드 및 속성을 노출합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IMultipleViewProvider.GetSupportedViews">
      <summary>컨트롤별 보기 식별자의 컬렉션을 검색합니다.</summary>
      <returns>UI 자동화 요소에 사용할 수 있는 보기를 식별하는 값의 컬렉션입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IMultipleViewProvider.GetViewName(System.Int32)">
      <summary>컨트롤별 뷰 이름을 검색합니다.</summary>
      <param name="viewId">뷰 식별자입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="viewId" />가 지원되는 뷰 컬렉션의 멤버가 아닌 경우.</exception>
      <returns>뷰의 지역화된 이름입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IMultipleViewProvider.SetCurrentView(System.Int32)">
      <summary>현재 컨트롤별 뷰를 설정합니다.</summary>
      <param name="viewId">뷰 식별자입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="viewId" />가 지원되는 뷰 컬렉션의 멤버가 아닌 경우.</exception>
    </member>
    <member name="P:System.Windows.Automation.Provider.IMultipleViewProvider.CurrentView">
      <summary>현재 컨트롤과 관련된 뷰를 가져옵니다.</summary>
      <returns>UI 자동화 요소의 현재 뷰에 대한 값입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IRangeValueProvider">
      <summary>범위 내 값으로 설정할 수 있는 컨트롤에 대한 UI 자동화 클라이언트 액세스를 지원하는 메서드 및 속성을 공개합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)">
      <summary>컨트롤의 값을 설정합니다.</summary>
      <param name="value">설정할 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" />가 컨트롤의 최소값보다 작거나 최대값보다 큰 경우입니다.</exception>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly">
      <summary>컨트롤의 값이 읽기 전용인지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>값이 읽기 전용이면 <see langword="true" />이고, 값을 수정할 수 있으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange">
      <summary>Page Down 키를 누르는 경우와 같이 화면이 크게 변경될 때 <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> 속성에서 가감되는 값을 가져옵니다.</summary>
      <returns>컨트롤에서 지 원하는 대량 변경 값 이거나, 컨트롤에서를 <see langword="Nothing" /> 지원 하지 않는 경우 null (Visual Basic) <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange" /> 입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum">
      <summary>컨트롤에서 지원하는 최대 범위 값을 가져옵니다.</summary>
      <returns>컨트롤에서 지 원하는 최대 값 이거나, 컨트롤에서를 <see langword="Nothing" /> 지원 하지 않는 경우 null (Visual Basic) <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum" /> 입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum">
      <summary>컨트롤에서 지원하는 최소 범위 값을 가져옵니다.</summary>
      <returns>컨트롤에서 지 원하는 최소값 이거나, 컨트롤에서를 <see langword="Nothing" /> 지원 하지 않는 경우 null (Visual Basic) <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum" /> 입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange">
      <summary>화살표 키를 누르는 경우와 같이 화면이 조금씩 변경될 때 <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> 속성에서 가감되는 값을 가져옵니다.</summary>
      <returns>작은 변경 값 이거나, 컨트롤에서를 <see langword="Nothing" /> 지원 하지 않는 경우 null (Visual Basic) <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange" /> 입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.Value">
      <summary>컨트롤의 값을 가져옵니다.</summary>
      <returns>컨트롤의 값 이거나, 컨트롤에서를 <see langword="Nothing" /> 지원 하지 않는 경우 null (Visual Basic)입니다 <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> .</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IRawElementProviderAdviseEvents">
      <summary>UI 자동화 클라이언트 애플리케이션이 이벤트 수신을 시작하거나 끝낼 때 조각의 루트 요소에 알리기 위해 호출되는 메서드를 표시합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderAdviseEvents.AdviseEventAdded(System.Int32,System.Int32[])">
      <summary>UI 자동화 클라이언트가 속성 변경 이벤트를 비롯하여 특정 이벤트에 대한 수신 대기를 시작한 경우 UI 자동화 공급자에 이를 알립니다.</summary>
      <param name="eventId">추가되는 이벤트의 식별자입니다.</param>
      <param name="properties">추가되는 속성의 식별자이거나, 추가되는 이벤트 수신기가 속성 이벤트를 수신 대기하지 않는 경우 <see langword="null" />입니다.</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderAdviseEvents.AdviseEventRemoved(System.Int32,System.Int32[])">
      <summary>UI 자동화 클라이언트가 속성 변경 이벤트를 비롯하여 특정 이벤트에 대한 수신 대기를 중지한 경우 UI 자동화 공급자에 이를 알립니다.</summary>
      <param name="eventId">제거되는 이벤트의 식별자</param>
      <param name="properties">제거되는 속성의 식별자이거나, 제거되는 이벤트 수신기가 속성 이벤트를 수신 대기하지 않는 경우 <see langword="null" />입니다.</param>
    </member>
    <member name="T:System.Windows.Automation.Provider.IRawElementProviderFragment">
      <summary>목록 상자 또는 목록 항목과 같이 수준이 둘 이상인 구조체의 일부인 UI(사용자 인터페이스) 요소에 대한 메서드 및 속성을 공개합니다. UI 자동화 공급자에서 구현했습니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderFragment.GetEmbeddedFragmentRoots">
      <summary>현재 요소에 루트가 있는 UI 자동화 요소 트리에 포함된 조각 루트의 배열을 검색합니다.</summary>
      <returns>루트 조각의 배열이거나 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderFragment.GetRuntimeId">
      <summary>요소의 런타임 식별자를 검색합니다.</summary>
      <returns>요소의 고유 런타임 식별자입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderFragment.Navigate(System.Windows.Automation.Provider.NavigateDirection)">
      <summary>트리 내에서 지정된 방향으로 UI 자동화 요소를 검색합니다.</summary>
      <param name="direction">탐색할 방향입니다.</param>
      <returns>지정된 방향의 요소이거나 해당 방향에 요소가 없는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderFragment.SetFocus">
      <summary>포커스를 이 요소로 설정합니다.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRawElementProviderFragment.BoundingRectangle">
      <summary>이 요소의 경계 사각형을 가져옵니다.</summary>
      <returns>화면 좌표로 나타낸 경계 사각형입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRawElementProviderFragment.FragmentRoot">
      <summary>조각의 루트 노드를 검색합니다.</summary>
      <returns>루트 노드입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot">
      <summary>루트 요소에 대한 메서드 및 속성을 조각에 노출합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot.ElementProviderFromPoint(System.Double,System.Double)">
      <summary>지정된 지점에 있는 이 조각에서 요소를 검색합니다.</summary>
      <param name="x">X 좌표입니다.</param>
      <param name="y">Y 좌표입니다.</param>
      <returns>존재하는 경우 지정된 지점에서 자식 요소의 공급자이거나 지점이 이 요소에 있지만 자식 요소에 없는 경우 루트 공급자입니다. 그렇지 않으면 <see langword="null" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot.GetFocus">
      <summary>이 조각에서 입력 포커스가 있는 요소를 검색합니다.</summary>
      <returns>이 조각에서 입력 포커스가 있는 요소에 대한 공급자이고(있는 경우), 그렇지 않으면 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IRawElementProviderHwndOverride">
      <summary>조각의 UI Automation 트리 내에서 창 기반 요소의 위치 변경을 가능하게 하는 메서드를 공개합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderHwndOverride.GetOverrideProviderForHwnd(System.IntPtr)">
      <summary>지정된 요소에 대한 UI 자동화 공급자를 검색합니다.</summary>
      <param name="hwnd">요소의 창 핸들입니다.</param>
      <returns>지정된 요소에 대한 공급자이거나 요소의 기본 공급자가 재정의되지 않은 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IRawElementProviderSimple">
      <summary>UI 요소에 대한 기본 정보를 노출하는 메서드 및 속성을 제공합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPatternProvider(System.Int32)">
      <summary>UI 자동화 요소에 대한 컨트롤 패턴을 지원하는 개체를 검색합니다.</summary>
      <param name="patternId">패턴의 식별자입니다.</param>
      <returns>패턴 인터페이스를 구현하는 개체 또는 패턴이 지원되지 않는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPropertyValue(System.Int32)">
      <summary>UI 자동화 공급자가 지원하는 속성 값을 검색합니다.</summary>
      <param name="propertyId">속성 식별자입니다.</param>
      <returns>속성 값 또는 이 공급자가 속성을 지원하지 않는 경우 <see langword="null" />, 전혀 지원되지 않는 경우 <see cref="F:System.Windows.Automation.AutomationElementIdentifiers.NotSupported" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRawElementProviderSimple.HostRawElementProvider">
      <summary>이 요소에 대한 기본 공급자를 가져옵니다.</summary>
      <returns>기본 공급자 또는 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRawElementProviderSimple.ProviderOptions">
      <summary>UI 자동화 공급자의 특성을 지정하는 값을 가져옵니다. 예를 들어 클라이언트 쪽 공급자인지 아니면 서버 쪽 공급자인지를 지정합니다.</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Provider.ProviderOptions.ClientSideProvider" /> 또는 <see cref="F:System.Windows.Automation.Provider.ProviderOptions.ServerSideProvider" />입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IScrollItemProvider">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.IScrollProvider" />를 구현하는 컨테이너의 개별 자식 컨트롤에 대한 UI 자동화 클라이언트 액세스를 지원하는 메서드 및 속성을 공개합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IScrollItemProvider.ScrollIntoView">
      <summary>컨테이너의 표시 영역(뷰포트) 내에 컨트롤을 표시하기 위해 컨테이너 개체의 내용 영역을 스크롤합니다.</summary>
      <exception cref="T:System.InvalidOperationException">항목을 스크롤하여 볼 수 없는 경우</exception>
    </member>
    <member name="T:System.Windows.Automation.Provider.IScrollProvider">
      <summary>자식 개체의 컬렉션에 대해 스크롤할 수 있는 컨테이너 역할을 하는 컨트롤에 대한 UI 자동화 클라이언트 액세스를 지원하는 메서드 및 속성을 공개합니다. 이 컨트롤의 자식 항목은 <see cref="T:System.Windows.Automation.Provider.IScrollItemProvider" />를 구현해야 합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IScrollProvider.Scroll(System.Windows.Automation.ScrollAmount,System.Windows.Automation.ScrollAmount)">
      <summary>콘텐츠 영역의 표시 영역을 가로 및 세로로 스크롤합니다.</summary>
      <param name="horizontalAmount">컨트롤의 가로 증가값입니다. 컨트롤을 이 방향으로 스크롤할 수 없는 경우<see cref="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll" /> 을 전달해야 합니다.</param>
      <param name="verticalAmount">컨트롤의 세로 증가값입니다. 컨트롤을 이 방향으로 스크롤할 수 없는 경우<see cref="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll" /> 을 전달해야 합니다.</param>
      <exception cref="T:System.ArgumentException">컨트롤이 가로 또는 세로 스크롤에 대해서만 <see cref="F:System.Windows.Automation.ScrollAmount.SmallIncrement" /> 값을 지원하지만 <see cref="F:System.Windows.Automation.ScrollAmount.LargeIncrement" /> 값이 전달되는 경우입니다.</exception>
      <exception cref="T:System.InvalidOperationException">지원되지 않는 방향으로 스크롤이 시도되었습니다.</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.IScrollProvider.SetScrollPercent(System.Double,System.Double)">
      <summary>컨트롤 내의 가로 및 세로 스크롤 위치를 전체 콘텐츠 영역의 백분율로 설정합니다.</summary>
      <param name="horizontalPercent">콘텐츠 영역 전체 범위에 대한 백분율로 나타낸 가로 위치입니다. 컨트롤을 이 방향으로 스크롤할 수 없는 경우<see cref="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll" /> 을 전달해야 합니다.</param>
      <param name="verticalPercent">콘텐츠 영역 전체 범위에 대한 백분율로 나타낸 세로 위치입니다. 컨트롤을 이 방향으로 스크롤할 수 없는 경우<see cref="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll" /> 을 전달해야 합니다.</param>
      <exception cref="T:System.ArgumentException">double로 변환할 수 없는 값인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">100보다 크거나 0보다 작은 값이 전달되는 경우입니다.(<see cref="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll" />에 해당하는 -1 제외) <see cref="P:System.Windows.Automation.Provider.IScrollProvider.HorizontalScrollPercent" /> 및 <see cref="P:System.Windows.Automation.Provider.IScrollProvider.VerticalScrollPercent" /> 값은 100% 또는 0%로 정규화됩니다.</exception>
      <exception cref="T:System.InvalidOperationException">지원되지 않는 방향으로 스크롤이 시도되었습니다.</exception>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.HorizontallyScrollable">
      <summary>컨트롤을 가로로 스크롤할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>컨트롤을 가로로 스크롤할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.HorizontalScrollPercent">
      <summary>현재 가로 스크롤 위치를 가져옵니다.</summary>
      <returns>컨트롤 내에서 전체 콘텐츠 영역의 백분율로 나타낸 가로 스크롤 위치입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.HorizontalViewSize">
      <summary>현재 가로 뷰 크기를 가져옵니다.</summary>
      <returns>컨트롤 내에서 전체 콘텐츠 영역의 백분율로 나타낸 표시 가능 영역의 가로 크기입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.VerticallyScrollable">
      <summary>컨트롤을 세로로 스크롤할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>컨트롤을 세로로 스크롤할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.VerticalScrollPercent">
      <summary>현재 세로 스크롤 위치를 가져옵니다.</summary>
      <returns>컨트롤 내에서 전체 콘텐츠 영역의 백분율로 나타낸 세로 스크롤 위치입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.VerticalViewSize">
      <summary>세로 뷰 크기를 가져옵니다.</summary>
      <returns>컨트롤 내에서 전체 콘텐츠 영역의 백분율로 나타낸 표시 가능 영역의 세로 크기입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ISelectionItemProvider">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" />를 구현하는 컨테이너의 선택 가능한 개별 자식 컨트롤에 대한 UI 자동화 클라이언트 액세스를 지원하는 메서드 및 속성을 공개합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ISelectionItemProvider.AddToSelection">
      <summary>선택한 항목 컬렉션에 현재 요소를 추가합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ISelectionItemProvider.RemoveFromSelection">
      <summary>선택한 항목 컬렉션에서 현재 요소를 제거합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ISelectionItemProvider.Select">
      <summary>선택한 항목을 선택 취소한 다음 현재 요소를 선택합니다.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.ISelectionItemProvider.IsSelected">
      <summary>항목이 선택되었는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>요소가 선택되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.ISelectionItemProvider.SelectionContainer">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" />를 구현하고 호출하는 개체에서 컨테이너 역할을 하는 UI 자동화 공급자를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" />를 지원하는 공급자입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ISelectionProvider">
      <summary>선택 가능한 개별 자식 항목의 컬렉션에 대한 컨테이너 역할을 하는 컨트롤에 대한 UI 자동화 클라이언트 액세스를 지원하도록 메서드 및 속성을 공개합니다. 이 컨트롤의 자식 항목은 <see cref="T:System.Windows.Automation.Provider.ISelectionItemProvider" />를 구현해야 합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ISelectionProvider.GetSelection">
      <summary>선택한 각 자식 요소에 대해 UI 자동화 공급자를 검색합니다.</summary>
      <returns>UI 자동화 공급자 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple">
      <summary>UI 자동화 공급자에서 둘 이상의 자식 요소가 동시에 선택되도록 하는지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>다중 선택이 허용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired">
      <summary>UI 자동화 공급자에서 하나 이상의 자식 요소를 선택해야 하는지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>선택해야 하면 <see langword="true" />이고, 선택할 필요가 없으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ISynchronizedInputProvider">
      <summary>동기화된 입력을 지원하는 컨트롤에 대한 UI 자동화 클라이언트 액세스를 용이하게 하는 메서드를 노출합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ISynchronizedInputProvider.Cancel">
      <summary>입력 수신 대기를 중지합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ISynchronizedInputProvider.StartListening(System.Windows.Automation.SynchronizedInputType)">
      <summary>공급자가 지정된 형식의 입력에 대한 수신 대기를 시작하도록 지정합니다.</summary>
      <param name="inputType">수신 대기할 입력의 형식입니다.</param>
    </member>
    <member name="T:System.Windows.Automation.Provider.ITableItemProvider">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.ITableProvider" />를 구현하는 컨테이너의 자식 컨트롤에 대한 UI 자동화 클라이언트 액세스를 지원하는 메서드 및 속성을 노출합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITableItemProvider.GetColumnHeaderItems">
      <summary>테이블 항목 또는 셀과 연결된 모든 열 머리글을 나타내는 UI 자동화 공급자의 컬렉션을 검색합니다.</summary>
      <returns>UI 자동화 공급자 컬렉션입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITableItemProvider.GetRowHeaderItems">
      <summary>테이블 항목 또는 셀과 연결된 모든 행 머리글을 나타내는 UI 자동화 공급자의 컬렉션을 검색합니다.</summary>
      <returns>UI 자동화 공급자 컬렉션입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ITableProvider">
      <summary>자식 요소의 컬렉션에 대해 컨테이너 역할을 하는 컨트롤에 대한 UI 자동화 클라이언트 액세스를 지원하도록 메서드 및 속성을 공개합니다. 이 요소의 자식은 <see cref="T:System.Windows.Automation.Provider.ITableItemProvider" />를 구현해야 하며 키보드를 사용하여 트래버스될 수 있는(즉, UI 자동화 클라이언트가 인접한 컨트롤로 이동할 수 있음) 2차원의 논리적 좌표계로 구성되어야 합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITableProvider.GetColumnHeaders">
      <summary>테이블의 모든 열 머리글을 나타내는 UI 자동화 공급자의 컬렉션을 가져옵니다.</summary>
      <returns>UI 자동화 공급자 컬렉션입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITableProvider.GetRowHeaders">
      <summary>테이블의 모든 행 머리글을 나타내는 UI 자동화 공급자의 컬렉션을 검색합니다.</summary>
      <returns>UI 자동화 공급자 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITableProvider.RowOrColumnMajor">
      <summary>테이블의 기본 탐색 방향을 검색합니다.</summary>
      <returns>기본 탐색 방향입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ITextProvider">
      <summary>텍스트가 포함된 컨트롤에 대한 UI 자동화 클라이언트 액세스를 지원하는 메서드 및 속성을 공개합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextProvider.GetSelection">
      <summary>하나 이상의 현재 텍스트 선택 영역과 관련된 서로 분리된 텍스트 범위의 컬렉션을 검색합니다.</summary>
      <exception cref="T:System.InvalidOperationException">UI 자동화 공급자가 텍스트 선택을 지원하지 않는 경우입니다.</exception>
      <returns>서로 분리된 텍스트 범위의 컬렉션입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextProvider.GetVisibleRanges">
      <summary>텍스트 컨테이너에서 각 텍스트 범위가 부분적으로 표시되는 첫 번째 줄로 시작되고 부분적으로 표시되는 마지막 줄의 끝까지 이어지는 서로 분리된 텍스트 범위의 배열을 검색합니다.</summary>
      <returns>컨테이너 내의 표시되는 텍스트 범위 컬렉션이거나 빈 배열입니다. null 참조(Visual Basic의 경우 <see langword="Nothing" />)는 반환되지 않습니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextProvider.RangeFromChild(System.Windows.Automation.Provider.IRawElementProviderSimple)">
      <summary>이미지, 하이퍼링크, 기타 포함된 개체 등의 자식 요소를 둘러싸는 텍스트 범위를 검색합니다.</summary>
      <param name="childElement">둘러싸인 개체입니다.</param>
      <exception cref="T:System.ArgumentException">자식 요소가 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</exception>
      <returns>자식 요소가 모두 포함된 범위입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextProvider.RangeFromPoint(System.Windows.Point)">
      <summary>지정된 화면 좌표와 가장 가까운 중복 제거 텍스트 범위(빈 범위)를 반환합니다.</summary>
      <param name="screenLocation">화면 좌표 위치입니다.</param>
      <exception cref="T:System.ArgumentException">해당 지점이 텍스트 패턴과 연결된 UI 자동화 요소 외부에 있는 경우</exception>
      <returns>지정된 위치와 가장 가까운 중복 제거 범위입니다. null 참조(Visual Basic의 경우 <see langword="Nothing" />)는 반환되지 않습니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITextProvider.DocumentRange">
      <summary>문서의 주 텍스트를 둘러싸는 텍스트 범위를 가져옵니다.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection">
      <summary>텍스트 공급자가 선택을 지원하는지 여부 및 지원되는 선택 유형을 지정하는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Windows.Automation.SupportedTextSelection" /> 값 중 하나입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ITextRangeProvider">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.ITextProvider" />를 구현하는 텍스트 컨테이너에 있는 연속 텍스트의 범위에 대한 UI 자동화 클라이언트 액세스를 지원하는 메서드 및 속성을 노출합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection">
      <summary>서로 분리된 여러 선택 영역을 지원하는 텍스트 컨테이너의 강조 표시된 텍스트 컬렉션에 추가합니다.</summary>
      <exception cref="T:System.InvalidOperationException">텍스트 공급자에서 서로 분리된 여러 선택 영역을 지원하지 않는 경우. 즉, <see cref="P:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection" />의 값이 <see langword="Multiple" />이어야 합니다.</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.Clone">
      <summary>원래 <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" />와 동일하고 원본의 모든 속성을 상속하는 새 <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" />를 반환합니다.</summary>
      <returns>새 텍스트 범위입니다. null 참조(Visual Basic의 경우 <see langword="Nothing" />)는 반환되지 않습니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.Compare(System.Windows.Automation.Provider.ITextRangeProvider)">
      <summary>텍스트의 범위(<see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> 엔드포인트에서 <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> 엔드포인트까지)가 다른 텍스트 범위와 동일한지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="range">비교할 텍스트 범위입니다.</param>
      <exception cref="T:System.ArgumentException">비교하는 범위를 같은 텍스트 공급자에서 가져오지 않은 경우</exception>
      <returns>두 텍스트 범위가 서로 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
      <summary>두 텍스트 범위의 엔드포인트이 동일한지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="endpoint">호출자의 <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> 또는 <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> 엔드포인트입니다.</param>
      <param name="targetRange">비교할 대상 범위입니다.</param>
      <param name="targetEndpoint">대상의 <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> 또는 <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> 엔드포인트입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetRange" />를 다른 텍스트 공급자에서 가져온 경우</exception>
      <returns>텍스트에서 호출자의 엔드포인트이 대상 엔드포인트보다 먼저 나타나면 음수 값을 반환합니다.  
  
 호출자의 엔드포인트이 대상 엔드포인트과 같은 위치에 있으면 0을 반환합니다.  
  
 텍스트에서 호출자의 엔드포인트이 대상 엔드포인트보다 나중에 나타나면 양수 값을 반환합니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
      <summary>텍스트 범위를 지정된 텍스트 단위로 확장합니다.</summary>
      <param name="unit">텍스트 단위입니다.</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(System.Int32,System.Object,System.Boolean)">
      <summary>지정된 특성 값을 갖는 텍스트 범위 하위 집합을 반환합니다.</summary>
      <param name="attribute">검색할 특성입니다.</param>
      <param name="value">검색할 특성 값입니다. 이 값은 특성에 지정된 형식과 일치해야 합니다.</param>
      <param name="backward">마지막으로 나타나는 텍스트 범위를 반환해야 하면 <see langword="true" />이고, 처음으로 나타나는 텍스트 범위를 반환해야 하면 <see langword="false" />입니다.</param>
      <returns>특성 및 특성 값이 일치하는 텍스트 범위이거나, 이러한 범위가 없으면 null(Visual Basic의 경우 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.FindText(System.String,System.Boolean,System.Boolean)">
      <summary>지정된 텍스트를 포함하는 텍스트 범위 하위 집합을 반환합니다.</summary>
      <param name="text">검색할 텍스트 문자열입니다.</param>
      <param name="backward">마지막으로 나타나는 텍스트 범위를 반환해야 하면 <see langword="true" />이고, 처음으로 나타나는 텍스트 범위를 반환해야 하면 <see langword="false" />입니다.</param>
      <param name="ignoreCase">대/소문자를 구분하지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns>지정된 텍스트와 일치하는 텍스트 범위이거나, 이러한 범위가 없으면 null(Visual Basic의 경우 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(System.Int32)">
      <summary>텍스트 범위에서 지정된 특성 값을 검색합니다.</summary>
      <param name="attribute">텍스트 특성입니다.</param>
      <exception cref="T:System.ArgumentException">지정된 특성이 유효하지 않은 경우</exception>
      <returns>지정된 특성의 값을 나타내는 개체를 검색합니다. 예를 들어 <c>GetAttributeValue(TextPattern.FontNameAttribute)</c>는 텍스트 범위에 글꼴이 하나만 사용되는 경우 해당 글꼴 이름을 나타내는 문자열을 반환하는 반면 <c>GetAttributeValue(TextPattern.IsItalicAttribute)</c>는 <see cref="T:System.Boolean" /> 형식의 값을 반환합니다.  
  
지정된 특성의 값이 텍스트 범위에서 일정하지 않게 변화하면 <see cref="F:System.Windows.Automation.TextPattern.MixedAttributeValue" />를 반환합니다.  
  
지정된 특성을 공급자 또는 컨트롤에서 지원하지 않으면 <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles">
      <summary>텍스트 범위에서 완전히 표시되거나 부분적으로 표시되는 각 텍스트 줄의 경계 사각형 컬렉션을 검색합니다.</summary>
      <returns>텍스트 범위에서 완전히 표시되거나 부분적으로 표시되는 각 텍스트 줄의 경계 사각형 배열입니다.  
  
 디제너레이트 범위의 경우 빈 배열이 반환됩니다.  
  
 텍스트 범위의 화면 좌표가 화면에서 완전히 벗어나거나, 스크롤되어 표시되지 않거나, 겹치는 창으로 가려진 경우 빈 배열이 반환됩니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.GetChildren">
      <summary>텍스트 범위 안에 있는 모든 포함된 개체의 컬렉션을 검색합니다.</summary>
      <returns>범위에 속하는 자식 개체의 컬렉션입니다. 텍스트 범위와 겹치지만 완전히 포함되지 않는 자식 개체도 컬렉션에 포함됩니다.  
  
 자식 개체가 없으면 빈 컬렉션을 반환합니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement">
      <summary>텍스트 범위를 포함하는 가장 안쪽의 컨트롤을 반환합니다.</summary>
      <returns>포함하는 컨트롤이며, 일반적으로 텍스트 범위를 제공하는 텍스트 공급자입니다. 그러나 텍스트 공급자에서 테이블 또는 하이퍼링크와 같은 자식 요소를 지원하는 경우 포함하는 요소가 텍스트 공급자의 하위 항목일 수도 있습니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.GetText(System.Int32)">
      <summary>범위의 일반 텍스트를 검색합니다.</summary>
      <param name="maxLength">반환할 문자열의 최대 길이입니다. 제한할 필요가 없으면 <c>-1</c>을 사용합니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxLength" />가 -1보다 작은 경우입니다.</exception>
      <returns>텍스트 범위의 일반 문자열이며, 지정된 <paramref name="maxLength" />로 잘릴 수 있습니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
      <summary>지정된 텍스트 단위 수만큼 텍스트 범위를 이동합니다.</summary>
      <param name="unit">텍스트 단위 경계입니다.</param>
      <param name="count">이동할 텍스트 단위 수입니다.  
  
 양수 값을 사용하면 텍스트 범위가 앞으로 이동하고, 음수 값을 사용하면 텍스트 범위가 뒤로 이동하며, 0은 효과가 없습니다.</param>
      <returns>실제로 이동한 단위 수입니다. 이 수는 새 텍스트 범위의 엔드포인트 중 하나가 <see cref="P:System.Windows.Automation.Provider.ITextProvider.DocumentRange" /> 엔드포인트보다 크거나 작으면 요청된 수보다 작을 수 있습니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
      <summary>텍스트 범위의 한 엔드포인트를 두 번째 텍스트 범위의 지정된 엔드포인트로 이동합니다.</summary>
      <param name="endpoint">이동할 엔드포인트입니다.</param>
      <param name="targetRange">같은 텍스트 공급자의 다른 범위입니다.</param>
      <param name="targetEndpoint">다른 범위의 엔드포인트입니다.</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
      <summary>텍스트 범위의 한 엔드포인트을 문서 범위 내에서 지정된 텍스트 단위 수만큼 이동합니다.</summary>
      <param name="endpoint">이동할 엔드포인트입니다.</param>
      <param name="unit">이동할 텍스트 단위입니다.</param>
      <param name="count">이동할 단위 수입니다. 양수 값을 사용하면 엔드포인트이 앞으로 이동합니다. 음수 값을 사용하면 뒤로 이동합니다. 0은 효과가 없습니다.</param>
      <returns>실제로 이동한 단위 수이며, 엔드포인트을 이동하면서 문서의 시작이나 끝과 만나게 되면 요청된 수보다 작을 수 있습니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection">
      <summary>서로 분리된 여러 선택 영역을 지원하는 텍스트 컨테이너의 강조 표시된 텍스트가 들어 있는 기존 컬렉션에서 호출자의 <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> 및 <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> 엔드포인트에 해당하는 강조 표시된 텍스트 섹션을 제거합니다.</summary>
      <exception cref="T:System.InvalidOperationException">텍스트 공급자에서 서로 분리된 여러 선택 영역을 지원하지 않는 경우. 예를 들어 <see cref="P:System.Windows.Automation.TextPattern.SupportedTextSelection" />의 값이 <see langword="Multiple" />이어야 합니다.</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView(System.Boolean)">
      <summary>뷰포트에 텍스트 범위가 보일 때까지 텍스트 컨트롤을 세로로 스크롤합니다.</summary>
      <param name="alignToTop">텍스트 범위를 스크롤하여 뷰포트 맨 위에 맞추려면 <see langword="true" />이고, 뷰포트 맨 아래에 맞추려면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.Select">
      <summary>텍스트 컨트롤에서 텍스트 범위의 <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> 및 <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> 엔드포인트에 해당하는 텍스트를 강조 표시합니다.</summary>
      <exception cref="T:System.InvalidOperationException">텍스트 선택을 텍스트 컨트롤에서 지원하지 않을 때 발생합니다.</exception>
    </member>
    <member name="T:System.Windows.Automation.Provider.IToggleProvider">
      <summary>상태 집합을 순환하고 상태를 유지할 수 있는 컨트롤에 대한 UI 자동화 클라이언트 액세스를 지원하기 위해 메서드 및 속성을 공개합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IToggleProvider.Toggle">
      <summary>컨트롤의 설정/해제 상태를 순환합니다.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IToggleProvider.ToggleState">
      <summary>컨트롤의 설정/해제 상태를 가져옵니다.</summary>
      <returns>컨트롤의 <see cref="T:System.Windows.Automation.ToggleState" />입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ITransformProvider">
      <summary>2차원 공간 내에서 이동되거나 크기 조정되거나 회전될 수 있는 컨트롤에 대한 UI 자동화 클라이언트 액세스를 지원하는 메서드 및 속성을 공개합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITransformProvider.Move(System.Double,System.Double)">
      <summary>컨트롤을 이동합니다.</summary>
      <param name="x">컨트롤 왼쪽의 절대 화면 좌표입니다.</param>
      <param name="y">컨트롤 위쪽의 절대 화면 좌표입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanMove" /> 속성이 false인 경우</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITransformProvider.Resize(System.Double,System.Double)">
      <summary>컨트롤의 크기를 조정합니다.</summary>
      <param name="width">창의 새 너비(픽셀)입니다.</param>
      <param name="height">창의 새 높이(픽셀)입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanResize" /> 속성이 false인 경우</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITransformProvider.Rotate(System.Double)">
      <summary>컨트롤을 회전합니다.</summary>
      <param name="degrees">컨트롤을 회전할 각도입니다. 양수이면 시계 방향으로 회전하고, 음수이면 시계 반대 방향으로 회전합니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanRotate" /> 속성이 false인 경우</exception>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITransformProvider.CanMove">
      <summary>컨트롤을 이동할 수 있는지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>요소를 이동할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITransformProvider.CanResize">
      <summary>UI 자동화 요소의 크기를 조정할 수 있는지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>요소의 크기를 조정할 수 있으면 <see langword="true" />이고, 조정할 수 없으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITransformProvider.CanRotate">
      <summary>컨트롤을 회전할 수 있는지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>요소를 회전할 수 있으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IValueProvider">
      <summary>UI 자동화 클라이언트가 범위에 걸쳐 있지 않고 문자열로 나타낼 수 있는 내장 값을 가진 컨트롤에 액세스할 수 있도록 지원하는 메서드 및 속성을 노출합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)">
      <summary>컨트롤의 값을 설정합니다.</summary>
      <param name="value">설정할 값입니다. 공급자는 적절한 데이터 형식으로 값을 변환합니다.</param>
      <exception cref="T:System.InvalidOperationException">로캘 관련 정보가 잘못된 형식(예: 올바르지 않은 형식의 날짜)으로 컨트롤에 전달되는 경우.</exception>
      <exception cref="T:System.ArgumentException">새 값을 문자열에서 컨트롤이 인식하는 형식으로 변환할 수 없는 경우.</exception>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">활성화되지 않은 컨트롤을 조작하려고 시도하는 경우.</exception>
    </member>
    <member name="P:System.Windows.Automation.Provider.IValueProvider.IsReadOnly">
      <summary>컨트롤의 값이 읽기 전용인지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>값이 읽기 전용이면 <see langword="true" />이고, 값을 수정할 수 있으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IValueProvider.Value">
      <summary>컨트롤의 값을 가져옵니다.</summary>
      <returns>문자열로 나타낸 컨트롤 값입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IVirtualizedItemProvider">
      <summary>가상화된 항목 컨트롤 패턴을 지원할 메서드를 노출합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IVirtualizedItemProvider.Realize">
      <summary>가상 항목을 UI 자동화 요소로 완전히 액세스할 수 있도록 만듭니다.</summary>
    </member>
    <member name="T:System.Windows.Automation.Provider.IWindowProvider">
      <summary>메서드 및 속성을 노출하여 기존 GUI(그래픽 사용자 인터페이스) 내에서 기본적인 창 기반 기능을 제공하는 컨트롤에 대한 UI Automation 클라이언트 액세스를 지원합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IWindowProvider.Close">
      <summary>창을 닫으려고 시도합니다.</summary>
      <exception cref="T:System.InvalidOperationException">컨트롤이 요청한 작업을 수행할 수 없는 경우</exception>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">대상 요소가 더 이상 사용 가능하지 않은 경우(예: 창이 닫힘)</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.IWindowProvider.SetVisualState(System.Windows.Automation.WindowVisualState)">
      <summary>창의 표시 상태를 변경합니다. 예를 들어 최소화하거나 최대화합니다.</summary>
      <param name="state">창의 요청된 표시 상태입니다.</param>
      <exception cref="T:System.InvalidOperationException">컨트롤이 요청된 동작을 지원하지 않는 경우.</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle(System.Int32)">
      <summary>지정된 시간 동안 또는 연결된 프로세스가 유휴 상태가 될 때까지 중 먼저 완료되는 시간 동안 코드 호출을 차단합니다.</summary>
      <param name="milliseconds">연결된 프로세스가 유휴 상태가 될 때까지 대기하는 시간(밀리초)입니다. 최대값은 <see cref="F:System.Int32.MaxValue" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">전달된 매개 변수가 유효한 숫자가 아닌 경우</exception>
      <returns>창이 유휴 상태가 되면 <see langword="true" />이고, 시간 초과가 발생하면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.InteractionState">
      <summary>창의 상호 작용 상태를 가져옵니다.</summary>
      <returns>컨트롤의 <see cref="T:System.Windows.Automation.WindowInteractionState" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.IsModal">
      <summary>창이 모달인지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>창이 모달이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.IsTopmost">
      <summary>창이 z-순서에서 맨 위에 있는 요소인지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>창이 맨 위에 있으면 <see langword="true" />이고, 없으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.Maximizable">
      <summary>창을 최대화할 수 있는지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>창을 최대화할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.Minimizable">
      <summary>창을 최소화할 수 있는지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>창을 최소화할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.VisualState">
      <summary>창의 표시 상태를 가져옵니다.</summary>
      <returns>창의 표시 상태입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.NavigateDirection">
      <summary>UI Automation 트리 내에서 탐색 방향을 지정하는 데 사용되는 값을 포함합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.NavigateDirection.FirstChild">
      <summary>첫 번째 자식 방향으로 탐색합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.NavigateDirection.LastChild">
      <summary>마지막 자식 방향으로 탐색합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.NavigateDirection.NextSibling">
      <summary>다음 형제 방향으로 탐색합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.NavigateDirection.Parent">
      <summary>부모 방향으로 탐색합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.NavigateDirection.PreviousSibling">
      <summary>이전 형제 방향으로 탐색합니다.</summary>
    </member>
    <member name="T:System.Windows.Automation.Provider.ProviderOptions">
      <summary>UI 자동화 공급자의 유형을 지정하는 값을 포함합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.ProviderOptions.ClientSideProvider">
      <summary>UI 자동화 공급자가 클라이언트 쪽 공급자입니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.ProviderOptions.NonClientAreaProvider">
      <summary>UI 자동화 공급자가 비클라이언트 영역의 공급자입니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.ProviderOptions.OverrideProvider">
      <summary>UI 자동화 공급자가 다른 공급자를 재정의합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.ProviderOptions.ProviderOwnsSetFocus">
      <summary>UI 자동화 공급자는 자체 포커스를 처리하며, UI 자동화 가 호출되는 경우 <see cref="M:System.Windows.Automation.AutomationElement.SetFocus" /> 에서 자동으로 가장 가까운 창으로 포커스를 설정하지 않도록 합니다. 일반적으로 이 옵션은 메뉴 및 드롭다운 메뉴와 같이 실제로 Win32 포커스를 받지 않고도 포커스가 있는 것처럼 보이는 창의 공급자가 사용합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.ProviderOptions.ServerSideProvider">
      <summary>UI 자동화 공급자가 서버 쪽 공급자입니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.ProviderOptions.UseComThreading">
      <summary>UI 자동화 공급자는 COM 스레딩 규칙에 따라 호출되어야 합니다. 공급자가 단일 스레드 아파트에 있는 경우 아파트 스레드에서만 호출됩니다. 서버 쪽 공급자만 이 옵션을 사용할 수 있습니다.</summary>
    </member>
  </members>
</doc>