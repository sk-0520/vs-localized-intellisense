<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Configuration.ConfigurationManager</name>
  </assembly>
  <members>
    <member name="T:System.Configuration.ApplicationScopedSettingAttribute">
      <summary>애플리케이션 설정 속성이 애플리케이션의 모든 사용자에 대해 같은 값을 갖도록 지정합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.ApplicationScopedSettingAttribute.#ctor">
      <summary>
        <see cref="T:System.Configuration.ApplicationScopedSettingAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Configuration.ApplicationSettingsBase">
      <summary>Window Forms 애플리케이션에서 애플리케이션 설정 기능을 구현하기 위해 구체적인 파생 래퍼 클래스의 기본 클래스 역할을 합니다.</summary>
    </member>
    <member name="E:System.Configuration.ApplicationSettingsBase.PropertyChanged">
      <summary>애플리케이션 설정 속성의 값이 변경된 후 발생합니다.</summary>
    </member>
    <member name="E:System.Configuration.ApplicationSettingsBase.SettingChanging">
      <summary>애플리케이션 설정 속성의 값이 변경되기 전에 발생합니다.</summary>
    </member>
    <member name="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded">
      <summary>애플리케이션 설정이 스토리지에서 검색된 후 발생합니다.</summary>
    </member>
    <member name="E:System.Configuration.ApplicationSettingsBase.SettingsSaving">
      <summary>값이 데이터 저장소에 저장되기 전에 발생합니다.</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.#ctor">
      <summary>
        <see cref="T:System.Configuration.ApplicationSettingsBase" /> 클래스의 인스턴스를 기본 상태로 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)">
      <summary>제공된 소유자 구성 요소를 사용하여 <see cref="T:System.Configuration.ApplicationSettingsBase" /> 클래스의 인스턴스를 초기화합니다.</summary>
      <param name="owner">애플리케이션 설정 개체의 소유자 역할을 할 구성 요소입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)">
      <summary>제공된 소유자 구성 요소와 설정 키를 사용하여 <see cref="T:System.Configuration.ApplicationSettingsBase" /> 클래스의 인스턴스를 초기화합니다.</summary>
      <param name="owner">애플리케이션 설정 개체의 소유자 역할을 할 구성 요소입니다.</param>
      <param name="settingsKey">래퍼 클래스의 개별 인스턴스를 고유하게 식별하는 <see cref="T:System.String" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.#ctor(System.String)">
      <summary>제공된 설정 키를 사용하여 <see cref="T:System.Configuration.ApplicationSettingsBase" /> 클래스의 인스턴스를 초기화합니다.</summary>
      <param name="settingsKey">래퍼 클래스의 개별 인스턴스를 고유하게 식별하는 <see cref="T:System.String" />입니다.</param>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)">
      <summary>이전 버전의 동일한 애플리케이션에 대한 명명된 설정 속성의 값을 반환합니다.</summary>
      <param name="propertyName">값이 반환될 설정 속성의 이름을 포함하는 <see cref="T:System.String" />입니다.</param>
      <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">속성이 없는 경우. 속성 개수가 0이거나 데이터 저장소에서 속성을 찾을 수 없습니다.</exception>
      <returns>지정된 <see cref="T:System.Object" />의 값이 있으면 해당 값을 포함하는 <see cref="T:System.Configuration.SettingsProperty" />이고, 그렇지 않으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
        <see cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" /> 이벤트를 발생시킵니다.</summary>
      <param name="sender">이벤트 소스입니다.</param>
      <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)">
      <summary>
        <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" /> 이벤트를 발생시킵니다.</summary>
      <param name="sender">이벤트 소스입니다.</param>
      <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Configuration.SettingChangingEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)">
      <summary>
        <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" /> 이벤트를 발생시킵니다.</summary>
      <param name="sender">이벤트 소스입니다.</param>
      <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Configuration.SettingsLoadedEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)">
      <summary>
        <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" /> 이벤트를 발생시킵니다.</summary>
      <param name="sender">이벤트 소스입니다.</param>
      <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.CancelEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.Reload">
      <summary>영구 스토리지에서 애플리케이션 설정 속성 값을 새로 고칩니다.</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.Reset">
      <summary>영구 애플리케이션 설정 값을 해당 기본 속성으로 복원합니다.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">구성 파일을 구문 분석할 수 없습니다.</exception>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.Save">
      <summary>애플리케이션 설정 속성의 현재 값을 저장합니다.</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.Upgrade">
      <summary>애플리케이션의 최신 설치를 반영하기 위해 애플리케이션 설정을 업데이트합니다.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">구성 파일을 구문 분석할 수 없습니다.</exception>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.Context">
      <summary>설정 그룹과 연결된 애플리케이션 설정 컨텍스트를 가져옵니다.</summary>
      <returns>설정 그룹과 연결된 <see cref="T:System.Configuration.SettingsContext" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.Item(System.String)">
      <summary>지정된 애플리케이션 설정 속성의 값을 가져오거나 설정합니다.</summary>
      <param name="propertyName">액세스할 속성의 이름을 포함하는 <see cref="T:System.String" />입니다.</param>
      <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">현재 래퍼와 연결된 속성이 없거나 지정된 속성을 찾을 수 없는 경우</exception>
      <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException">읽기 전용 속성을 설정하려고 한 경우</exception>
      <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException">set 작업 중 제공된 값이 설정 속성과 호환되지 않는 형식인 경우</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">구성 파일을 구문 분석할 수 없습니다.</exception>
      <returns>명명된 설정 속성의 값이 있으면 해당 값이고, 그렇지 않으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.Properties">
      <summary>래퍼에 있는 설정 속성의 컬렉션을 가져옵니다.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">연결된 설정 공급자를 찾을 수 없거나 인스턴스화하지 못한 경우</exception>
      <returns>현재 래퍼에서 사용되는 모든 <see cref="T:System.Configuration.SettingsPropertyCollection" /> 개체를 포함하는 <see cref="T:System.Configuration.SettingsProperty" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.PropertyValues">
      <summary>속성 값의 컬렉션을 가져옵니다.</summary>
      <returns>속성 값의 <see cref="T:System.Configuration.SettingsPropertyValueCollection" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.Providers">
      <summary>래퍼에서 사용하는 애플리케이션 설정 공급자의 컬렉션을 가져옵니다.</summary>
      <returns>현재 설정 래퍼의 설정 속성에서 사용하는 모든 <see cref="T:System.Configuration.SettingsProviderCollection" /> 개체를 포함하는 <see cref="T:System.Configuration.SettingsProvider" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.SettingsKey">
      <summary>애플리케이션 설정 그룹의 설정 키를 가져오거나 설정합니다.</summary>
      <returns>현재 설정 그룹의 설정 키를 포함하는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.ApplicationSettingsGroup">
      <summary>구성 파일에 있는 관련된 애플리케이션 설정 섹션의 그룹을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsGroup.#ctor">
      <summary>
        <see cref="T:System.Configuration.ApplicationSettingsGroup" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Configuration.AppSettingsReader">
      <summary>구성에서 특정 형식의 값을 읽는 데 사용할 수 있는 메서드를 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.AppSettingsReader.#ctor">
      <summary>
        <see cref="T:System.Configuration.AppSettingsReader" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.AppSettingsReader.GetValue(System.String,System.Type)">
      <summary>
        <see cref="P:System.Configuration.ConfigurationSettings.AppSettings" /> 속성에서 지정된 키의 값을 가져오고 구성에서 해당 값을 포함하는 지정된 형식의 개체를 반환합니다.</summary>
      <param name="key">값을 가져올 키입니다.</param>
      <param name="type">반환할 개체의 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="type" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <see langword="&lt;appSettings&gt;" /> 구성 섹션에 <paramref name="key" />가 없는 경우  
  
또는 
<paramref name="key" />에 대한 <see langword="&lt;appSettings&gt;" /> 구성 섹션의 값이 <paramref name="type" /> 형식이 아닌 경우</exception>
      <returns>지정된 키의 값입니다.</returns>
    </member>
    <member name="T:System.Configuration.AppSettingsSection">
      <summary>
        <see langword="appSettings" /> 구성 섹션에 대한 구성 시스템 지원 기능을 제공합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.AppSettingsSection.#ctor">
      <summary>
        <see cref="T:System.Configuration.AppSettingsSection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Configuration.AppSettingsSection.File">
      <summary>추가 설정을 제공하거나 <see langword="appSettings" /> 요소에 지정된 설정을 재정의하는 구성 파일을 가져오거나 설정합니다.</summary>
      <returns>추가 설정을 제공하거나 <see langword="appSettings" /> 요소에 지정된 설정을 재정의하는 구성 파일입니다.</returns>
    </member>
    <member name="P:System.Configuration.AppSettingsSection.Settings">
      <summary>애플리케이션 설정이 들어 있는 키/값 쌍 컬렉션을 가져옵니다.</summary>
      <returns>구성 파일에서 애플리케이션 설정을 포함하는 키/값 쌍의 컬렉션입니다.</returns>
    </member>
    <member name="T:System.Configuration.CallbackValidator">
      <summary>개체의 동적 유효성 검사를 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.CallbackValidator.#ctor(System.Type,System.Configuration.ValidatorCallback)">
      <summary>
        <see cref="T:System.Configuration.CallbackValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="type">유효성을 검사할 개체의 형식입니다.</param>
      <param name="callback">대리자로 사용되는 <see cref="T:System.Configuration.ValidatorCallback" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Configuration.CallbackValidator.CanValidate(System.Type)">
      <summary>개체 형식의 유효성을 검사할 수 있는지 여부를 확인합니다.</summary>
      <param name="type">개체의 형식입니다.</param>
      <returns>
        <see langword="true" /> 매개 변수가 <see cref="T:System.Configuration.CallbackValidator" />의 인스턴스를 만들 때 첫 번째 매개 변수로 사용되는 형식과 일치하면 <see langword="type" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.CallbackValidator.Validate(System.Object)">
      <summary>개체의 값이 유효한지 여부를 확인합니다.</summary>
      <param name="value">개체의 값입니다.</param>
    </member>
    <member name="T:System.Configuration.CallbackValidatorAttribute">
      <summary>코드 유효성 검사에 사용할 <see cref="T:System.Configuration.CallbackValidator" /> 개체를 지정합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.CallbackValidatorAttribute.#ctor">
      <summary>
        <see cref="T:System.Configuration.CallbackValidatorAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Configuration.CallbackValidatorAttribute.CallbackMethodName">
      <summary>콜백 메서드의 이름을 가져오거나 설정합니다.</summary>
      <returns>호출할 메서드의 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.CallbackValidatorAttribute.Type">
      <summary>유효성 검사기의 형식을 가져오거나 설정합니다.</summary>
      <returns>현재 유효성 검사기 특성 인스턴스의 <see cref="T:System.Type" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.CallbackValidatorAttribute.ValidatorInstance">
      <summary>유효성 검사기 인스턴스를 가져옵니다.</summary>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Configuration.CallbackValidatorAttribute.Type" /> 속성의 값이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Configuration.CallbackValidatorAttribute.CallbackMethodName" /> 속성이 하나의 개체 매개 변수가 있는 public static void 메서드로 설정되지 않은 경우</exception>
      <returns>현재 <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 인스턴스입니다.</returns>
    </member>
    <member name="T:System.Configuration.ClientSettingsSection">
      <summary>구성 파일에 있는 사용자 범위 애플리케이션 설정의 그룹을 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.ClientSettingsSection.#ctor">
      <summary>
        <see cref="T:System.Configuration.ClientSettingsSection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Configuration.ClientSettingsSection.Settings">
      <summary>섹션에 대한 클라이언트 설정의 컬렉션을 가져옵니다.</summary>
      <returns>현재 구성 섹션에 있는 모든 클라이언트 설정을 포함하는 <see cref="T:System.Configuration.SettingElementCollection" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.CommaDelimitedStringCollection">
      <summary>쉼표로 구분된 문자열 요소의 컬렉션을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.#ctor">
      <summary>
        <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> 클래스의 새 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Add(System.String)">
      <summary>쉼표로 구분된 컬렉션에 문자열을 추가합니다.</summary>
      <param name="value">문자열 값입니다.</param>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.AddRange(System.String[])">
      <summary>문자열 배열의 모든 문자열을 컬렉션에 추가합니다.</summary>
      <param name="range">컬렉션에 추가할 문자열 배열입니다.</param>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Clear">
      <summary>컬렉션을 지웁니다.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Clone">
      <summary>컬렉션의 복사본을 만듭니다.</summary>
      <returns>
        <see cref="T:System.Configuration.CommaDelimitedStringCollection" />의 복사본입니다.</returns>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Insert(System.Int32,System.String)">
      <summary>컬렉션의 지정된 인덱스에 문자열 요소를 추가합니다.</summary>
      <param name="index">새 요소가 추가될 컬렉션의 인덱스입니다.</param>
      <param name="value">컬렉션에 추가할 새 요소의 값입니다.</param>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Remove(System.String)">
      <summary>컬렉션에서 문자열 요소를 제거합니다.</summary>
      <param name="value">제거할 문자열입니다.</param>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.SetReadOnly">
      <summary>컬렉션 개체를 읽기 전용으로 설정합니다.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.ToString">
      <summary>개체의 문자열 표현을 반환합니다.</summary>
      <returns>개체의 문자열 표현입니다.</returns>
    </member>
    <member name="P:System.Configuration.CommaDelimitedStringCollection.IsModified">
      <summary>컬렉션이 수정되었는지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.CommaDelimitedStringCollection" />이 수정되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.CommaDelimitedStringCollection.IsReadOnly">
      <summary>컬렉션 개체가 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.CommaDelimitedStringCollection" />의 지정된 문자열 요소가 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.CommaDelimitedStringCollection.Item(System.Int32)">
      <summary>인덱스를 기반으로 컬렉션의 문자열 요소를 가져오거나 설정합니다.</summary>
      <param name="index">컬렉션에 있는 문자열 요소의 인덱스입니다.</param>
      <returns>컬렉션의 문자열 요소입니다.</returns>
    </member>
    <member name="T:System.Configuration.CommaDelimitedStringCollectionConverter">
      <summary>쉼표로 구분된 문자열 값과 <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> 개체 간의 변환을 수행합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollectionConverter.#ctor">
      <summary>
        <see cref="T:System.Configuration.CommaDelimitedStringCollectionConverter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
        <see cref="T:System.String" /> 개체를 <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> 개체로 변환합니다.</summary>
      <param name="ctx">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <param name="ci">변환하는 동안 사용되는 <see cref="T:System.Globalization.CultureInfo" />입니다.</param>
      <param name="data">쉼표로 구분된 변환할 <see cref="T:System.String" />입니다.</param>
      <returns>변환된 값을 포함하는 <see cref="T:System.Configuration.CommaDelimitedStringCollection" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> 개체를 <see cref="T:System.String" /> 개체로 변환합니다.</summary>
      <param name="ctx">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <param name="ci">변환하는 동안 사용되는 <see cref="T:System.Globalization.CultureInfo" />입니다.</param>
      <param name="value">변환할 값입니다.</param>
      <param name="type">변환 형식입니다.</param>
      <returns>변환된 <paramref name="value" /> 매개 변수를 나타내는 <see cref="T:System.String" />입니다. 이 매개 변수는 <see cref="T:System.Configuration.CommaDelimitedStringCollection" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.Configuration">
      <summary>특정 컴퓨터, 애플리케이션 또는 리소스에 적용할 수 있는 구성 파일을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.Configuration.GetSection(System.String)">
      <summary>지정된 <see cref="T:System.Configuration.ConfigurationSection" /> 개체를 반환합니다.</summary>
      <param name="sectionName">반환될 섹션의 경로입니다.</param>
      <returns>지정된 <see cref="T:System.Configuration.ConfigurationSection" /> 개체입니다. 또는 요청된 섹션이 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Configuration.GetSectionGroup(System.String)">
      <summary>지정된 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체를 가져옵니다.</summary>
      <param name="sectionGroupName">반환할 <see cref="T:System.Configuration.ConfigurationSectionGroup" />의 경로 이름입니다.</param>
      <returns>지정된 <see cref="T:System.Configuration.ConfigurationSectionGroup" />입니다. 또는 요청된 섹션 그룹이 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Configuration.Save">
      <summary>이 <see cref="T:System.Configuration.Configuration" /> 개체에 포함된 구성 설정을 현재 XML 구성 파일에 씁니다.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">구성 파일에 쓸 수 없는 경우  
  
또는
  
 구성 파일이 변경된 경우</exception>
    </member>
    <member name="M:System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode)">
      <summary>이 <see cref="T:System.Configuration.Configuration" /> 개체에 포함된 구성 설정을 현재 XML 구성 파일에 씁니다.</summary>
      <param name="saveMode">저장할 속성 값을 결정하는 <see cref="T:System.Configuration.ConfigurationSaveMode" /> 값입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">구성 파일에 쓸 수 없는 경우  
  
또는
  
 구성 파일이 변경된 경우</exception>
    </member>
    <member name="M:System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode,System.Boolean)">
      <summary>이 <see cref="T:System.Configuration.Configuration" /> 개체에 포함된 구성 설정을 현재 XML 구성 파일에 씁니다.</summary>
      <param name="saveMode">저장할 속성 값을 결정하는 <see cref="T:System.Configuration.ConfigurationSaveMode" /> 값입니다.</param>
      <param name="forceSaveAll">구성이 수정되지 않은 경우에도 저장하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">구성 파일에 쓸 수 없는 경우  
  
또는
  
 구성 파일이 변경된 경우</exception>
    </member>
    <member name="M:System.Configuration.Configuration.SaveAs(System.String)">
      <summary>이 <see cref="T:System.Configuration.Configuration" /> 개체에 포함된 구성 설정을 지정된 XML 구성 파일에 씁니다.</summary>
      <param name="filename">구성 파일을 저장할 경로와 파일 이름입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">구성 파일에 쓸 수 없는 경우  
  
또는
  
 구성 파일이 변경된 경우</exception>
    </member>
    <member name="M:System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode)">
      <summary>이 <see cref="T:System.Configuration.Configuration" /> 개체에 포함된 구성 설정을 지정된 XML 구성 파일에 씁니다.</summary>
      <param name="filename">구성 파일을 저장할 경로와 파일 이름입니다.</param>
      <param name="saveMode">저장할 속성 값을 결정하는 <see cref="T:System.Configuration.ConfigurationSaveMode" /> 값입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">구성 파일에 쓸 수 없는 경우  
  
또는
  
 구성 파일이 변경된 경우</exception>
    </member>
    <member name="M:System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode,System.Boolean)">
      <summary>이 <see cref="T:System.Configuration.Configuration" /> 개체에 포함된 구성 설정을 지정된 XML 구성 파일에 씁니다.</summary>
      <param name="filename">구성 파일을 저장할 경로와 파일 이름입니다.</param>
      <param name="saveMode">저장할 속성 값을 결정하는 <see cref="T:System.Configuration.ConfigurationSaveMode" /> 값입니다.</param>
      <param name="forceSaveAll">구성이 수정되지 않은 경우에도 저장하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="filename" />가 null이거나 빈 문자열("")인 경우</exception>
    </member>
    <member name="P:System.Configuration.Configuration.AppSettings">
      <summary>이 <see cref="T:System.Configuration.AppSettingsSection" /> 개체에 적용되는 <see cref="T:System.Configuration.Configuration" /> 개체 구성 섹션을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Configuration.AppSettingsSection" /> 개체에 적용되는 <see langword="appSettings" /> 구성 섹션을 나타내는 <see cref="T:System.Configuration.Configuration" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.AssemblyStringTransformer">
      <summary>구성 파일의 어셈블리 문자열을 변환하는 데 사용되는 함수 대리자를 지정합니다.</summary>
      <returns>서식 문자열을 변환하는 대리자입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.ConnectionStrings">
      <summary>이 <see cref="T:System.Configuration.ConnectionStringsSection" /> 개체에 적용되는 <see cref="T:System.Configuration.Configuration" /> 구성 섹션 개체를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Configuration.ConnectionStringsSection" /> 개체에 적용되는 <see langword="connectionStrings" /> 구성 섹션을 나타내는 <see cref="T:System.Configuration.Configuration" /> 구성 섹션 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.EvaluationContext">
      <summary>
        <see cref="T:System.Configuration.ContextInformation" /> 개체의 <see cref="T:System.Configuration.Configuration" /> 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.ContextInformation" /> 개체에 대한 <see cref="T:System.Configuration.Configuration" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.FilePath">
      <summary>이 <see cref="T:System.Configuration.Configuration" /> 개체가 나타내는 구성 파일에 대한 실제 경로를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Configuration.Configuration" /> 개체가 나타내는 구성 파일에 대한 실제 경로입니다.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.HasFile">
      <summary>이 <see cref="T:System.Configuration.Configuration" /> 개체가 나타내는 리소스에 대한 파일이 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>구성 파일이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.Locations">
      <summary>이 <see cref="T:System.Configuration.Configuration" /> 개체에 정의된 위치를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Configuration.ConfigurationLocationCollection" /> 개체에 정의된 위치를 포함하는 <see cref="T:System.Configuration.Configuration" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.NamespaceDeclared">
      <summary>구성 파일에 XML 네임스페이스가 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>구성 파일에 XML 네임스페이스가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.RootSectionGroup">
      <summary>이 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체의 루트 <see cref="T:System.Configuration.Configuration" />을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Configuration.Configuration" /> 개체의 루트 섹션 그룹입니다.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.SectionGroups">
      <summary>이 구성에서 정의하는 섹션 그룹의 컬렉션을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> 개체에 대한 섹션 그룹의 컬렉션을 나타내는 <see cref="T:System.Configuration.Configuration" /> 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.Sections">
      <summary>이 <see cref="T:System.Configuration.Configuration" /> 개체에서 정의하는 섹션의 컬렉션을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Configuration.Configuration" /> 개체에서 정의하는 섹션의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.TargetFramework">
      <summary>현재 버전보다 이전 버전을 대상으로 하는 경우 .NET Framework의 대상 버전을 지정합니다.</summary>
      <returns>.NET Framework의 대상 버전 이름입니다. 기본값은 <see langword="null" />로, 현재 버전이 대상으로 지정됨을 나타냅니다.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.TypeStringTransformer">
      <summary>구성 파일의 서식 문자열을 변환하는 데 사용되는 함수 대리자를 지정합니다.</summary>
      <returns>서식 문자열을 변환하는 대리자입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationAllowDefinition">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> 개체에 포함된 속성을 설정하거나 재정의할 수 있는 구성 파일 계층 구조의 위치를 지정합니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.Everywhere">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" />을 어느 위치에든 정의할 수 있습니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.MachineOnly">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" />을 Machine.config 파일에만 정의할 수 있습니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.MachineToApplication">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" />을 Machine.config 파일, Machine.config와 같은 디렉터리에 있는 컴퓨터 수준 Web.config 파일 또는 가상 디렉터리 루트에 있는 최상위 수준 애플리케이션 Web.config 파일에 정의할 수 있지만 가상 루트의 하위 디렉터리에는 정의할 수 없습니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.MachineToWebRoot">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" />을 Machine.config 파일이나 Machine.config와 같은 디렉터리에 있는 컴퓨터 수준 Web.config 파일에 정의할 수 있지만 애플리케이션 Web.config 파일에는 정의할 수 없습니다.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationAllowExeDefinition">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> 개체에 포함된 속성을 설정하거나 재정의할 수 있는 구성 파일 계층 구조의 위치를 지정합니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineOnly">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" />을 Machine.config 파일에만 정의할 수 있습니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToApplication">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" />을 Machine.config 파일이나 클라이언트 애플리케이션 디렉터리의 Exe.config 파일에 정의할 수 있습니다. 기본값입니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToLocalUser">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" />을 Machine.config 파일, 클라이언트 애플리케이션 디렉터리의 Exe.config 파일, 로밍 사용자 디렉터리의 User.config 파일 또는 로컬 사용자 디렉터리의 User.config 파일에 정의할 수 있습니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToRoamingUser">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" />을 Machine.config 파일, 클라이언트 애플리케이션 디렉터리의 Exe.config 파일 또는 로밍 사용자 디렉터리의 User.config 파일에 정의할 수 있습니다.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationCollectionAttribute">
      <summary>구성 요소 컬렉션의 인스턴스를 만들도록 .NET Framework에 선언적으로 지시합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationCollectionAttribute.#ctor(System.Type)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationCollectionAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="itemType">만들 속성 컬렉션의 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="itemType" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.AddItemName">
      <summary>
        <see langword="&lt;add&gt;" /> 구성 요소의 이름을 가져오거나 설정합니다.</summary>
      <returns>구성 항목의 표준 이름 "add"를 대체하는 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.ClearItemsName">
      <summary>
        <see langword="&lt;clear&gt;" /> 구성 요소의 이름을 가져오거나 설정합니다.</summary>
      <returns>구성 항목의 표준 이름 "clear"를 대체하는 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.CollectionType">
      <summary>
        <see cref="T:System.Configuration.ConfigurationCollectionAttribute" /> 특성의 형식을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationCollectionAttribute" />의 형식입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.ItemType">
      <summary>컬렉션 요소의 형식을 가져옵니다.</summary>
      <returns>컬렉션 요소의 형식입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.RemoveItemName">
      <summary>
        <see langword="&lt;remove&gt;" /> 구성 요소의 이름을 가져오거나 설정합니다.</summary>
      <returns>구성 요소의 표준 이름 "remove"를 대체하는 이름입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationConverterBase">
      <summary>구성 변환기 형식의 기본 클래스입니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationConverterBase.#ctor">
      <summary>
        <see cref="T:System.Configuration.ConfigurationConverterBase" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>변환이 허용되는지 여부를 확인합니다.</summary>
      <param name="ctx">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="type">변환할 <see cref="T:System.Type" />입니다.</param>
      <returns>변환이 허용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>변환이 허용되는지 여부를 확인합니다.</summary>
      <param name="ctx">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="type">변환할 대상 형식입니다.</param>
      <returns>변환이 허용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationElement">
      <summary>구성 파일의 구성 요소를 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.#ctor">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
      <summary>구성 파일에서 XML을 읽습니다.</summary>
      <param name="reader">구성 파일에서 읽는 <see cref="T:System.Xml.XmlReader" />입니다.</param>
      <param name="serializeCollectionKey">컬렉션 키 속성만 serialize하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">읽을 요소가 잠겨 있는 경우  
  
또는
  
 현재 노드의 특성이 인식되지 않는 경우  
  
또는
  
 현재 노드의 잠금 상태를 확인할 수 없는 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Equals(System.Object)">
      <summary>현재 <see cref="T:System.Configuration.ConfigurationElement" /> 인스턴스를 지정된 개체와 비교합니다.</summary>
      <param name="compareTo">비교할 개체입니다.</param>
      <returns>비교할 개체가 현재 <see cref="T:System.Configuration.ConfigurationElement" /> 인스턴스와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.GetHashCode">
      <summary>현재 <see cref="T:System.Configuration.ConfigurationElement" /> 인스턴스를 나타내는 고유 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Configuration.ConfigurationElement" /> 인스턴스를 나타내는 고유 값입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)">
      <summary>지정된 어셈블리 이름의 변환된 버전을 반환합니다.</summary>
      <param name="assemblyName">어셈블리의 이름입니다.</param>
      <returns>어셈블리 이름의 변환된 버전입니다. 변환기를 사용할 수 없으면 <paramref name="assemblyName" /> 매개 변수 값이 변경되지 않은 상태로 반환됩니다. 변환기를 사용할 수 없는 경우 <see cref="P:System.Configuration.Configuration.TypeStringTransformer" /> 속성은 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)">
      <summary>지정된 형식 이름의 변환된 버전을 반환합니다.</summary>
      <param name="typeName">형식의 이름입니다.</param>
      <returns>지정된 형식 이름의 변환된 버전입니다. 변환기를 사용할 수 없으면 <paramref name="typeName" /> 매개 변수 값이 변경되지 않은 상태로 반환됩니다. 변환기를 사용할 수 없는 경우 <see cref="P:System.Configuration.Configuration.TypeStringTransformer" /> 속성은 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Init">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElement" /> 개체를 초기 상태로 설정합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.InitializeDefault">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElement" /> 개체 값의 기본 집합을 초기화하는 데 사용됩니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.IsModified">
      <summary>파생 클래스에서 구현될 때 이 구성 요소가 마지막으로 저장되거나 로드된 이후 수정되었는지 여부를 나타냅니다.</summary>
      <returns>요소가 수정되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.IsReadOnly">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElement" /> 개체가 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationElement" /> 개체가 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)">
      <summary>이 <see cref="T:System.Configuration.ConfigurationElement" /> 개체와 모든 하위 요소의 잘못된 속성 오류를 전달된 목록에 추가합니다.</summary>
      <param name="errorList">
        <see cref="T:System.Collections.IList" /> 인터페이스를 구현하는 개체</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
      <summary>역직렬화하는 동안 알 수 없는 특성을 발견했는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="name">인식할 수 없는 특성의 이름입니다.</param>
      <param name="value">인식할 수 없는 특성의 값입니다.</param>
      <returns>역직렬화하는 동안 알 수 없는 특성을 발견하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
      <summary>역직렬화하는 동안 알 수 없는 요소를 발견했는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="elementName">알 수 없는 하위 요소의 이름입니다.</param>
      <param name="reader">deserialization에 사용되는 <see cref="T:System.Xml.XmlReader" />입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="elementName" />에 의해 식별된 요소가 잠겨 있는 경우  
  
또는 
요소의 특성이 하나 이상 잠겨 있는 경우  
  
또는 
 <paramref name="elementName" />이 인식되지 않거나 요소에 인식되지 않는 특성이 있는 경우  
  
또는 
요소에 잘못된 값을 가진 부울 특성이 있는 경우  
  
또는 
속성을 여러 번 역직렬화하려고 한 경우  
  
또는 
올바른 요소 멤버가 아닌 속성을 역직렬화하려고 한 경우  
  
또는 
요소에 CDATA 또는 텍스트 요소가 포함될 수 없는 경우</exception>
      <returns>역직렬화하는 동안 알 수 없는 요소를 발견하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)">
      <summary>필수 속성이 없으면 예외를 throw합니다.</summary>
      <param name="name">찾을 수 없는 필요한 특성의 이름입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">모든 경우</exception>
      <returns>없음</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.PostDeserialize">
      <summary>deserialization 후에 호출됩니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)">
      <summary>serialization 전에 호출됩니다.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />를 serialize하는 데 사용할 <see cref="T:System.Configuration.ConfigurationElement" />입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)">
      <summary>잠금 및 속성 컬렉션을 비롯하여 <see cref="T:System.Configuration.ConfigurationElement" /> 개체의 내부 상태를 다시 설정합니다.</summary>
      <param name="parentElement">구성 요소의 부모 노드입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.ResetModified">
      <summary>파생 클래스에서 구현되는 경우 <see cref="M:System.Configuration.ConfigurationElement.IsModified" /> 메서드의 값을 <see langword="false" />로 다시 설정합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
      <summary>파생 클래스에서 구현될 때 구성 요소의 내용을 구성 파일에 씁니다.</summary>
      <param name="writer">구성 파일에 작성하는 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
      <param name="serializeCollectionKey">컬렉션 키 속성만 serialize하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">현재 특성이 더 높은 구성 수준에서 잠겨 있는 경우</exception>
      <returns>데이터가 실제로 serialize되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
      <summary>파생 클래스에서 구현될 때 구성 요소의 외부 태그를 구성 파일에 씁니다.</summary>
      <param name="writer">구성 파일에 작성하는 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
      <param name="elementName">쓸 <see cref="T:System.Configuration.ConfigurationElement" />의 이름입니다.</param>
      <exception cref="T:System.Exception">요소에 자식 요소가 여러 개인 경우</exception>
      <returns>쓰기에 성공하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)">
      <summary>속성을 지정된 값으로 설정합니다.</summary>
      <param name="prop">설정할 요소 속성입니다.</param>
      <param name="value">속성에 할당할 값입니다.</param>
      <param name="ignoreLocks">속성에 대한 잠금이 무시되어야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">요소가 읽기 전용이거나 <paramref name="ignoreLocks" />가 <see langword="true" />이지만 잠금을 무시할 수 없는 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SetReadOnly">
      <summary>
        <see cref="M:System.Configuration.ConfigurationElement.IsReadOnly" /> 개체와 모든 하위 요소에 대한 <see cref="T:System.Configuration.ConfigurationElement" /> 속성을 설정합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElement" /> 개체를 수정하여 저장되지 않아야 하는 값을 모두 제거합니다.</summary>
      <param name="sourceElement">속성의 병합된 뷰를 포함하는 현재 수준의 <see cref="T:System.Configuration.ConfigurationElement" />입니다.</param>
      <param name="parentElement">부모 <see cref="T:System.Configuration.ConfigurationElement" />이거나, 최상위 수준인 경우 <see langword="null" />입니다.</param>
      <param name="saveMode">포함할 속성 값을 결정하는 열거형 값 중 하나입니다.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.CurrentConfiguration">
      <summary>현재 <see cref="T:System.Configuration.Configuration" /> 인스턴스가 속해 있는 구성 계층 구조를 나타내는 최상위 <see cref="T:System.Configuration.ConfigurationElement" /> 인스턴스에 대한 참조를 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Configuration.Configuration" /> 인스턴스가 속해 있는 최상위 <see cref="T:System.Configuration.ConfigurationElement" /> 인스턴스입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.ElementInformation">
      <summary>
        <see cref="T:System.Configuration.ElementInformation" /> 개체의 사용자 지정할 수 없는 정보와 기능을 포함하는 <see cref="T:System.Configuration.ConfigurationElement" /> 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.ElementInformation" />의 사용자 지정할 수 없는 정보와 기능을 포함하는 <see cref="T:System.Configuration.ConfigurationElement" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.ElementProperty">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElementProperty" /> 개체 자체를 나타내는 <see cref="T:System.Configuration.ConfigurationElement" /> 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationElementProperty" /> 자체를 나타내는 <see cref="T:System.Configuration.ConfigurationElement" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.EvaluationContext">
      <summary>
        <see cref="T:System.Configuration.ContextInformation" /> 개체의 <see cref="T:System.Configuration.ConfigurationElement" /> 개체를 가져옵니다.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">현재 요소가 컨텍스트와 연관이 없는 경우</exception>
      <returns>
        <see cref="T:System.Configuration.ContextInformation" />에 대한 <see cref="T:System.Configuration.ConfigurationElement" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.HasContext">
      <summary>
        <see cref="P:System.Configuration.ConfigurationElement.CurrentConfiguration" /> 속성이 <see langword="null" />인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="P:System.Configuration.ConfigurationElement.CurrentConfiguration" /> 속성이 <see langword="null" />이면 false이고, 그렇지 않으면 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)">
      <summary>이 구성 요소의 속성이나 특성을 가져오거나 설정합니다.</summary>
      <param name="prop">액세스할 속성입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationException">
        <paramref name="prop" />가 <see langword="null" />이거나 요소 내에 없는 경우</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="prop" />가 읽기 전용이거나 잠겨 있는 경우</exception>
      <returns>지정된 속성, 특성 또는 자식 요소입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.Item(System.String)">
      <summary>이 구성 요소의 속성, 특성 또는 자식 요소를 가져오거나 설정합니다.</summary>
      <param name="propertyName">액세스할 <see cref="T:System.Configuration.ConfigurationProperty" />의 이름입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="prop" />가 읽기 전용이거나 잠겨 있는 경우</exception>
      <returns>지정된 속성, 특성 또는 자식 요소입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept">
      <summary>잠긴 특성의 컬렉션을 가져옵니다.</summary>
      <returns>요소에 대한 잠긴 특성(속성)의 <see cref="T:System.Configuration.ConfigurationLockCollection" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockAllElementsExcept">
      <summary>잠긴 요소의 컬렉션을 가져옵니다.</summary>
      <returns>잠긴 요소의 <see cref="T:System.Configuration.ConfigurationLockCollection" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockAttributes">
      <summary>잠긴 특성의 컬렉션을 가져옵니다.</summary>
      <returns>요소에 대한 잠긴 특성(속성)의 <see cref="T:System.Configuration.ConfigurationLockCollection" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockElements">
      <summary>잠긴 요소의 컬렉션을 가져옵니다.</summary>
      <returns>잠긴 요소의 <see cref="T:System.Configuration.ConfigurationLockCollection" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockItem">
      <summary>요소가 잠겨 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">요소가 더 높은 구성 수준에서 이미 잠겨 있는 경우</exception>
      <returns>요소가 잠겨 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.Properties">
      <summary>속성 컬렉션을 가져옵니다.</summary>
      <returns>요소에 대한 속성의 <see cref="T:System.Configuration.ConfigurationPropertyCollection" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationElementCollection">
      <summary>자식 요소의 컬렉션을 포함하는 구성 요소를 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.#ctor">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElementCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.#ctor(System.Collections.IComparer)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElementCollection" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="comparer">사용할 <see cref="T:System.Collections.IComparer" /> 비교자입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comparer" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)">
      <summary>구성 요소를 <see cref="T:System.Configuration.ConfigurationElementCollection" />에 추가합니다.</summary>
      <param name="element">추가할 <see cref="T:System.Configuration.ConfigurationElement" />입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)">
      <summary>구성 요소를 구성 요소 컬렉션에 추가합니다.</summary>
      <param name="element">추가할 <see cref="T:System.Configuration.ConfigurationElement" />입니다.</param>
      <param name="throwIfExists">지정된 <see cref="T:System.Configuration.ConfigurationElement" />가 <see cref="T:System.Configuration.ConfigurationElementCollection" />에 포함되어 있는 경우 예외를 throw하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.Exception">추가할 <see cref="T:System.Configuration.ConfigurationElement" />가 <see cref="T:System.Configuration.ConfigurationElementCollection" />에 이미 있고 <paramref name="throwIfExists" /> 매개 변수가 <see langword="true" />인 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)">
      <summary>구성 요소를 구성 요소 컬렉션에 추가합니다.</summary>
      <param name="index">지정된 <see cref="T:System.Configuration.ConfigurationElement" />를 추가할 인덱스 위치입니다.</param>
      <param name="element">추가할 <see cref="T:System.Configuration.ConfigurationElement" />입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseClear">
      <summary>컬렉션에서 구성 요소 개체를 모두 제거합니다.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">구성이 읽기 전용인 경우  
  
또는
  
 컬렉션 항목이 상위 수준 구성에서 잠긴 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)">
      <summary>지정된 인덱스 위치에 있는 구성 요소를 가져옵니다.</summary>
      <param name="index">반환할 <see cref="T:System.Configuration.ConfigurationElement" />의 인덱스 위치입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="index" />가 <see langword="0" />보다 작은 경우  
  
또는 
지정된 <paramref name="index" />에 <see cref="T:System.Configuration.ConfigurationElement" />가 없습니다.</exception>
      <returns>지정한 인덱스에 있는 <see cref="T:System.Configuration.ConfigurationElement" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)">
      <summary>지정된 키가 있는 구성 요소를 반환합니다.</summary>
      <param name="key">반환할 요소의 키입니다.</param>
      <returns>지정된 키가 있는 <see cref="T:System.Configuration.ConfigurationElement" />가 있으면 해당 요소이거나, 그렇지 않으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElementCollection" />에 포함된 모든 구성 요소의 키 배열을 반환합니다.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationElement" />에 포함된 모든 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 개체의 키를 포함하는 배열입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)">
      <summary>지정된 인덱스 위치에 있는 <see cref="T:System.Configuration.ConfigurationElement" />의 키를 가져옵니다.</summary>
      <param name="index">
        <see cref="T:System.Configuration.ConfigurationElement" />의 인덱스 위치입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="index" />가 <see langword="0" />보다 작은 경우  
  
또는 
지정된 <paramref name="index" />에 <see cref="T:System.Configuration.ConfigurationElement" />가 없습니다.</exception>
      <returns>지정된 <see cref="T:System.Configuration.ConfigurationElement" />의 키입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)">
      <summary>지정된 <see cref="T:System.Configuration.ConfigurationElement" />의 인덱스를 나타냅니다.</summary>
      <param name="element">지정된 인덱스 위치에 대한 <see cref="T:System.Configuration.ConfigurationElement" />입니다.</param>
      <returns>지정된 <see cref="T:System.Configuration.ConfigurationElement" />의 인덱스이거나, -1입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)">
      <summary>지정된 키가 있는 <see cref="T:System.Configuration.ConfigurationElement" />가 <see cref="T:System.Configuration.ConfigurationElementCollection" />에서 제거되었는지 여부를 나타냅니다.</summary>
      <param name="key">확인할 요소의 키입니다.</param>
      <returns>지정된 키가 있는 <see cref="T:System.Configuration.ConfigurationElement" />가 제거되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)">
      <summary>컬렉션에서 <see cref="T:System.Configuration.ConfigurationElement" />를 제거합니다.</summary>
      <param name="key">제거할 <see cref="T:System.Configuration.ConfigurationElement" />의 키입니다.</param>
      <exception cref="T:System.Exception">지정된 키가 있는 <see cref="T:System.Configuration.ConfigurationElement" />가 컬렉션에 없거나, 요소가 이미 제거되었거나, 요소의 <see cref="P:System.Configuration.ConfigurationProperty.Type" /> 값이 <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" />이 아니기 때문에 요소를 제거할 수 없는 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)">
      <summary>지정된 인덱스 위치에서 <see cref="T:System.Configuration.ConfigurationElement" />를 제거합니다.</summary>
      <param name="index">제거할 <see cref="T:System.Configuration.ConfigurationElement" />의 인덱스 위치입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">구성이 읽기 전용인 경우  
  
또는 
 <paramref name="index" />가 <see langword="0" />보다 작거나 컬렉션의 <see cref="T:System.Configuration.ConfigurationElement" /> 개체 수보다 큰 경우  
  
또는 
<see cref="T:System.Configuration.ConfigurationElement" /> 개체가 이미 제거된 경우  
  
또는 
<see cref="T:System.Configuration.ConfigurationElement" /> 개체의 값이 더 높은 수준에서 잠긴 경우  
  
또는 
<see cref="T:System.Configuration.ConfigurationElement" /> 개체가 상속된 경우  
  
또는 
<see cref="T:System.Configuration.ConfigurationElement" /> 개체의 <see cref="P:System.Configuration.ConfigurationProperty.Type" /> 값이 <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" /> 또는 <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate" />가 아닌 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElementCollection" />의 내용을 배열에 복사합니다.</summary>
      <param name="array">
        <see cref="T:System.Configuration.ConfigurationElementCollection" />의 내용을 복사할 배열입니다.</param>
      <param name="index">복사를 시작할 인덱스 위치입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.CreateNewElement">
      <summary>파생 클래스에서 재정의할 때 새 <see cref="T:System.Configuration.ConfigurationElement" />를 만듭니다.</summary>
      <returns>새로 만든 <see cref="T:System.Configuration.ConfigurationElement" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)">
      <summary>파생 클래스에서 재정의될 때 새 <see cref="T:System.Configuration.ConfigurationElement" />를 만듭니다.</summary>
      <param name="elementName">만들 <see cref="T:System.Configuration.ConfigurationElement" />의 이름입니다.</param>
      <returns>지정된 이름을 가진 새 <see cref="T:System.Configuration.ConfigurationElement" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElementCollection" />을 지정된 개체와 비교합니다.</summary>
      <param name="compareTo">비교할 개체입니다.</param>
      <returns>비교할 개체가 현재 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 인스턴스와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary>파생 클래스에서 재정의될 때 지정된 구성 요소의 요소 키를 가져옵니다.</summary>
      <param name="element">키를 반환할 <see cref="T:System.Configuration.ConfigurationElement" />입니다.</param>
      <returns>지정된 <see cref="T:System.Object" />의 키로 사용되는 <see cref="T:System.Configuration.ConfigurationElement" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.GetEnumerator">
      <summary>
        <see cref="T:System.Collections.IEnumerator" />을 반복하는 데 사용되는 <see cref="T:System.Configuration.ConfigurationElementCollection" />를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" />을 반복하는 데 사용되는 <see cref="T:System.Configuration.ConfigurationElementCollection" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.GetHashCode">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElementCollection" /> 인스턴스를 나타내는 고유 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 인스턴스를 나타내는 고유 값입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)">
      <summary>지정된 <see cref="T:System.Configuration.ConfigurationElement" />가 <see cref="T:System.Configuration.ConfigurationElementCollection" />에 있는지 여부를 나타냅니다.</summary>
      <param name="elementName">확인할 요소의 이름입니다.</param>
      <returns>요소가 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)">
      <summary>지정한 <see cref="T:System.Configuration.ConfigurationElement" />를 <see cref="T:System.Configuration.ConfigurationElementCollection" />에서 제거할 수 있는지 여부를 나타냅니다.</summary>
      <param name="element">확인할 요소입니다.</param>
      <returns>지정된 <see cref="T:System.Configuration.ConfigurationElement" />를 이 <see cref="T:System.Configuration.ConfigurationElementCollection" />에서 제거할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsModified">
      <summary>파생 클래스에서 재정의될 때 이 <see cref="T:System.Configuration.ConfigurationElementCollection" />이 마지막으로 저장되거나 로드된 후 수정되었는지 여부를 나타냅니다.</summary>
      <returns>포함된 요소가 수정되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsReadOnly">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElementCollection" /> 개체가 읽기 전용인지 여부를 나타냅니다.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationElementCollection" /> 개체가 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
      <summary>구성 시스템에서 예외를 throw하도록 합니다.</summary>
      <param name="elementName">인식할 수 없는 요소의 이름입니다.</param>
      <param name="reader">구성 파일에서 XML을 읽는 입력 스트림입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="elementName" />에 지정된 요소가 <see langword="&lt;clear&gt;" /> 요소인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elementName" />이 예약된 접두사 "config" 또는 "lock"으로 시작하는 경우</exception>
      <returns>인식할 수 없는 요소가 성공적으로 역직렬화되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)">
      <summary>파생 클래스에서 재정의될 때 <see cref="T:System.Configuration.ConfigurationElementCollection" />을 수정되지 않은 상태로 다시 설정합니다.</summary>
      <param name="parentElement">컬렉션 부모 요소를 나타내는 <see cref="T:System.Configuration.ConfigurationElement" />가 있으면 해당 요소이고, 그렇지 않으면 <see langword="null" />입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.ResetModified">
      <summary>파생 클래스에서 재정의될 때 <see cref="M:System.Configuration.ConfigurationElementCollection.IsModified" /> 속성의 값을 <see langword="false" />로 다시 설정합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
      <summary>파생 클래스에서 재정의될 때 구성 파일의 XML 요소에 구성 데이터를 씁니다.</summary>
      <param name="writer">구성 파일에 XML을 기록하는 출력 스트림입니다.</param>
      <param name="serializeCollectionKey">컬렉션 키를 serialize하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.ArgumentException">컬렉션에 있는 요소 중 하나가 추가 또는 대체되었고 예약된 접두사 "config" 또는 "lock"으로 시작하는 경우</exception>
      <returns>
        <see cref="T:System.Configuration.ConfigurationElementCollection" />이 구성 파일에 성공적으로 쓰여졌으면 <see langword="true" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.SetReadOnly">
      <summary>
        <see cref="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" /> 개체와 모든 하위 요소에 대해 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 속성을 설정합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElementCollection" />을 배열에 복사합니다.</summary>
      <param name="arr">이 <see cref="T:System.Configuration.ConfigurationElementCollection" />을 복사할 배열입니다.</param>
      <param name="index">복사를 시작할 인덱스 위치입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
      <summary>구성 계층 구조의 여러 수준에서 구성 정보를 병합한 결과를 되돌립니다.</summary>
      <param name="sourceElement">속성의 병합된 뷰를 포함하는 현재 수준의 <see cref="T:System.Configuration.ConfigurationElement" /> 개체입니다.</param>
      <param name="parentElement">현재 요소의 부모 <see cref="T:System.Configuration.ConfigurationElement" /> 개체이거나, 현재 요소가 최상위이면 <see langword="null" />입니다.</param>
      <param name="saveMode">포함할 속성 값을 결정하는 열거형 값 중 하나입니다.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.AddElementName">
      <summary>파생 클래스에서 재정의될 때 <see cref="T:System.Configuration.ConfigurationElement" />의 추가 작업과 연결할 <see cref="T:System.Configuration.ConfigurationElementCollection" />의 이름을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException">선택한 값이 예약된 접두사 "config" 또는 "lock"으로 시작하는 경우</exception>
      <returns>요소 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.ClearElementName">
      <summary>파생 클래스에서 재정의될 때 <see cref="T:System.Configuration.ConfigurationElement" />의 지우기 작업과 연결할 <see cref="T:System.Configuration.ConfigurationElementCollection" />의 이름을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException">선택한 값이 예약된 접두사 "config" 또는 "lock"으로 시작하는 경우</exception>
      <returns>요소 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.CollectionType">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElementCollection" />의 형식을 가져옵니다.</summary>
      <returns>이 컬렉션의 <see cref="T:System.Configuration.ConfigurationElementCollectionType" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.Count">
      <summary>컬렉션의 요소 수를 가져옵니다.</summary>
      <returns>컬렉션에 있는 요소의 수입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.ElementName">
      <summary>파생 클래스에서 재정의될 때 구성 파일에서 이 요소 컬렉션을 식별하는 데 사용되는 이름을 가져옵니다.</summary>
      <returns>컬렉션의 이름이거나, 빈 문자열입니다. 기본값은 빈 문자열입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.EmitClear">
      <summary>컬렉션이 지워졌는지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">구성이 읽기 전용인 경우</exception>
      <returns>컬렉션이 지워졌으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.IsSynchronized">
      <summary>컬렉션에 대한 액세스가 동기화되었는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationElementCollection" />에 대한 액세스가 동기화되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.RemoveElementName">
      <summary>파생 클래스에서 재정의될 때 <see cref="T:System.Configuration.ConfigurationElement" />의 제거 작업과 연결할 <see cref="T:System.Configuration.ConfigurationElementCollection" />의 이름을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException">선택한 값이 예약된 접두사 "config" 또는 "lock"으로 시작하는 경우</exception>
      <returns>요소 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.SyncRoot">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElementCollection" />에 대한 액세스를 동기화하는 데 사용되는 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationElementCollection" />에 대한 액세스를 동기화하는 데 사용되는 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElement" />에 중복 <see cref="T:System.Configuration.ConfigurationElementCollection" />를 추가하려고 하면 예외가 throw되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Configuration.ConfigurationElement" />에 중복 <see cref="T:System.Configuration.ConfigurationElementCollection" />를 추가하려고 할 때 예외가 throw되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationElementCollectionType">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> 개체의 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElementCollection" />의 기본 형식입니다. 이 형식의 컬렉션에는 구성 파일의 계층 구조 전체에서 병합할 수 있는 요소가 포함되어 있습니다. 이러한 계층 구조의 특정 수준에서 <see langword="add" />, <see langword="remove" /> 및 <see langword="clear" /> 지시문을 사용하여 상속된 속성을 수정하고 새 속성을 지정할 수 있습니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate">
      <summary>상속된 요소가 마지막에 나열되도록 <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" /> 개체의 내용이 정렬되는 점을 제외하고 <see cref="T:System.Configuration.ConfigurationElementCollection" />과 같습니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.BasicMap">
      <summary>이 형식의 컬렉션에는 지정된 수준과 모든 자식 수준에 적용되는 요소가 포함되어 있습니다. 자식 수준에서는 이 형식의 부모 요소에서 지정하는 속성을 수정할 수 없습니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate">
      <summary>상속된 요소가 마지막에 나열되도록 <see cref="F:System.Configuration.ConfigurationElementCollectionType.BasicMap" /> 개체의 내용이 정렬되는 점을 제외하고 <see cref="T:System.Configuration.ConfigurationElementCollection" />과 같습니다.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationElementProperty">
      <summary>구성 요소의 속성을 지정합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementProperty.#ctor(System.Configuration.ConfigurationValidatorBase)">
      <summary>제공된 매개 변수에 따라 <see cref="T:System.Configuration.ConfigurationElementProperty" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="validator">
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="validator" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElementProperty.Validator">
      <summary>
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 개체의 유효성을 검사하는 데 사용되는 <see cref="T:System.Configuration.ConfigurationElementProperty" /> 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationErrorsException">
      <summary>구성 오류가 발생한 경우 throw되는 예외입니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor">
      <summary>
        <see cref="T:System.Configuration.ConfigurationErrorsException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationErrorsException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info">역직렬화할 정보를 보유하는 개체입니다.</param>
      <param name="context">소스 또는 대상에 대한 컨텍스트 정보입니다.</param>
      <exception cref="T:System.InvalidOperationException">현재 형식이 <see cref="T:System.Configuration.ConfigurationException" /> 또는 <see cref="T:System.Configuration.ConfigurationErrorsException" />이 아닌 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationErrorsException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">이 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 예외가 throw된 이유를 설명하는 메시지입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationErrorsException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">이 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 예외가 throw된 이유를 설명하는 메시지입니다.</param>
      <param name="inner">이 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 예외를 throw시킨 예외입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.String,System.Int32)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationErrorsException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">이 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 예외가 throw된 이유를 설명하는 메시지입니다.</param>
      <param name="inner">이 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 예외를 throw시킨 내부 예외입니다.</param>
      <param name="filename">이 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 예외를 throw시킨 구성 파일에 대한 경로입니다.</param>
      <param name="line">이 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 예외가 throw된 구성 파일의 줄 번호입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.Xml.XmlNode)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationErrorsException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">이 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 예외가 throw된 이유를 설명하는 메시지입니다.</param>
      <param name="inner">이 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 예외를 throw시킨 내부 예외입니다.</param>
      <param name="node">이 <see cref="T:System.Xml.XmlNode" /> 예외를 throw시킨 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.Xml.XmlReader)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationErrorsException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">이 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 예외가 throw된 이유를 설명하는 메시지입니다.</param>
      <param name="inner">이 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 예외를 throw시킨 내부 예외입니다.</param>
      <param name="reader">이 <see cref="T:System.Xml.XmlReader" /> 예외를 throw시킨 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.String,System.Int32)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationErrorsException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">이 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 예외가 throw된 이유를 설명하는 메시지입니다.</param>
      <param name="filename">이 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 예외를 throw시킨 구성 파일에 대한 경로입니다.</param>
      <param name="line">이 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 예외가 throw된 구성 파일의 줄 번호입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Xml.XmlNode)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationErrorsException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">이 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 예외가 throw된 이유를 설명하는 메시지입니다.</param>
      <param name="node">이 <see cref="T:System.Xml.XmlNode" /> 예외를 throw시킨 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Xml.XmlReader)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationErrorsException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">이 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 예외가 throw된 이유를 설명하는 메시지입니다.</param>
      <param name="reader">이 <see cref="T:System.Xml.XmlReader" /> 예외를 throw시킨 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetFilename(System.Xml.XmlNode)">
      <summary>이 구성 예외가 throw되었을 때 내부 <see cref="T:System.Xml.XmlNode" /> 개체를 로드한 구성 파일에 대한 경로를 가져옵니다.</summary>
      <param name="node">이 <see cref="T:System.Xml.XmlNode" /> 예외를 throw시킨 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 개체입니다.</param>
      <returns>이 구성 예외가 throw되었을 때 내부 <see cref="T:System.Xml.XmlNode" /> 개체를 로드한 구성 파일에 대한 경로입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetFilename(System.Xml.XmlReader)">
      <summary>이 구성 예외가 throw되었을 때 내부 <see cref="T:System.Xml.XmlReader" />가 읽고 있던 구성 파일에 대한 경로를 가져옵니다.</summary>
      <param name="reader">이 <see cref="T:System.Xml.XmlReader" /> 예외를 throw시킨 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 개체입니다.</param>
      <returns>예외가 발생했을 때 내부 <see cref="T:System.Xml.XmlReader" /> 개체가 액세스하고 있던 구성 파일의 경로입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetLineNumber(System.Xml.XmlNode)">
      <summary>이 구성 예외가 throw되었을 때 내부 <see cref="T:System.Xml.XmlNode" /> 개체가 나타낸 구성 파일의 줄 번호를 가져옵니다.</summary>
      <param name="node">이 <see cref="T:System.Xml.XmlNode" /> 예외를 throw시킨 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 개체입니다.</param>
      <returns>이 구성 예외가 throw되었을 때 구문 분석되고 있던 <see cref="T:System.Xml.XmlNode" /> 개체를 포함하는 구성 파일의 줄 번호입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetLineNumber(System.Xml.XmlReader)">
      <summary>이 구성 예외가 throw되었을 때 내부 <see cref="T:System.Xml.XmlReader" /> 개체가 처리하고 있던 구성 파일의 줄 번호를 가져옵니다.</summary>
      <param name="reader">이 <see cref="T:System.Xml.XmlReader" /> 예외를 throw시킨 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 개체입니다.</param>
      <returns>예외가 발생했을 때 <see cref="T:System.Xml.XmlReader" /> 개체가 액세스하고 있던 구성 파일의 줄 번호입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>이 구성 예외가 발생한 파일 이름과 줄 번호를 사용하여 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체를 설정합니다.</summary>
      <param name="info">serialize할 정보를 보유하는 개체입니다.</param>
      <param name="context">원본 또는 대상에 대한 컨텍스트 정보입니다.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.BareMessage">
      <summary>이 구성 예외가 throw된 이유에 대한 설명을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Configuration.ConfigurationErrorsException" />이 throw된 이유에 대한 설명입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Errors">
      <summary>이 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 예외가 throw된 이유를 설명하는 오류 컬렉션을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Collections.ICollection" /> 예외가 throw된 이유를 식별하는 오류가 포함된 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Filename">
      <summary>이 구성 예외를 throw시킨 구성 파일에 대한 경로를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Configuration.ConfigurationErrorsException" />을 throw시킨 구성 파일에 대한 경로입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Line">
      <summary>이 구성 예외가 throw된 구성 파일의 줄 번호를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 예외가 throw된 구성 파일의 줄 번호입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Message">
      <summary>이 구성 예외가 throw된 이유에 대한 자세한 설명을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 예외가 throw된 이유에 대한 자세한 설명입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationException">
      <summary>구성 시스템 오류가 발생한 경우 throw되는 예외입니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor">
      <summary>
        <see cref="T:System.Configuration.ConfigurationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info">역직렬화할 정보를 보유하는 개체입니다.</param>
      <param name="context">소스 또는 대상에 대한 컨텍스트 정보입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">이 <see cref="T:System.Configuration.ConfigurationException" /> 예외가 throw된 이유를 설명하는 메시지입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Exception)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">이 <see cref="T:System.Configuration.ConfigurationException" /> 예외가 throw된 이유를 설명하는 메시지입니다.</param>
      <param name="inner">이 <see cref="T:System.Configuration.ConfigurationException" />을 throw시킨 내부 예외가 있으면 해당 예외입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Exception,System.String,System.Int32)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">이 <see cref="T:System.Configuration.ConfigurationException" /> 예외가 throw된 이유를 설명하는 메시지입니다.</param>
      <param name="inner">이 <see cref="T:System.Configuration.ConfigurationException" />을 throw시킨 내부 예외가 있으면 해당 예외입니다.</param>
      <param name="filename">이 <see cref="T:System.Configuration.ConfigurationException" />을 throw시킨 구성 파일에 대한 경로입니다.</param>
      <param name="line">이 <see cref="T:System.Configuration.ConfigurationException" />이 throw된 구성 파일의 줄 번호입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Exception,System.Xml.XmlNode)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">이 <see cref="T:System.Configuration.ConfigurationException" /> 예외가 throw된 이유를 설명하는 메시지입니다.</param>
      <param name="inner">이 <see cref="T:System.Configuration.ConfigurationException" />을 throw시킨 내부 예외가 있으면 해당 예외입니다.</param>
      <param name="node">이 <see cref="T:System.Xml.XmlNode" />이 throw되도록 만든 <see cref="T:System.Configuration.ConfigurationException" />입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.String,System.Int32)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">이 <see cref="T:System.Configuration.ConfigurationException" /> 예외가 throw된 이유를 설명하는 메시지입니다.</param>
      <param name="filename">이 <see cref="T:System.Configuration.ConfigurationException" />을 throw시킨 구성 파일에 대한 경로입니다.</param>
      <param name="line">이 <see cref="T:System.Configuration.ConfigurationException" />이 throw된 구성 파일의 줄 번호입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Xml.XmlNode)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">이 <see cref="T:System.Configuration.ConfigurationException" /> 예외가 throw된 이유를 설명하는 메시지입니다.</param>
      <param name="node">이 <see cref="T:System.Xml.XmlNode" />이 throw되도록 만든 <see cref="T:System.Configuration.ConfigurationException" />입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>이 구성 예외가 발생한 파일 이름과 줄 번호를 사용하여 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체를 설정합니다.</summary>
      <param name="info">serialize할 정보를 보유하는 개체입니다.</param>
      <param name="context">원본 또는 대상에 대한 컨텍스트 정보입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.GetXmlNodeFilename(System.Xml.XmlNode)">
      <summary>이 구성 예외가 throw되었을 때 내부 <see cref="T:System.Xml.XmlNode" /> 개체를 로드한 구성 파일에 대한 경로를 가져옵니다.</summary>
      <param name="node">이 <see cref="T:System.Xml.XmlNode" /> 예외를 throw시킨 <see cref="T:System.Configuration.ConfigurationException" />입니다.</param>
      <returns>노드 파일 이름을 나타내는 <see langword="string" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationException.GetXmlNodeLineNumber(System.Xml.XmlNode)">
      <summary>이 구성 예외가 throw되었을 때 내부 <see cref="T:System.Xml.XmlNode" /> 개체가 나타낸 구성 파일의 줄 번호를 가져옵니다.</summary>
      <param name="node">이 <see cref="T:System.Xml.XmlNode" /> 예외를 throw시킨 <see cref="T:System.Configuration.ConfigurationException" />입니다.</param>
      <returns>노드 줄 번호를 나타내는 <see langword="int" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationException.BareMessage">
      <summary>이 구성 예외가 throw된 이유에 대한 설명을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Configuration.ConfigurationException" /> 예외가 throw된 이유에 대한 설명입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationException.Filename">
      <summary>이 구성 예외를 throw시킨 구성 파일에 대한 경로를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Configuration.ConfigurationException" /> 예외를 throw시킨 구성 파일에 대한 경로입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationException.Line">
      <summary>이 구성 예외가 throw된 구성 파일의 줄 번호를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Configuration.ConfigurationException" /> 예외가 throw된 구성 파일의 줄 번호입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationException.Message">
      <summary>이 구성 예외가 throw된 이유에 대한 자세한 설명을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Configuration.ConfigurationException" /> 예외가 throw된 이유에 대한 자세한 설명입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationFileMap">
      <summary>컴퓨터 구성 파일의 구성 파일 매핑을 정의합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationFileMap.#ctor">
      <summary>
        <see cref="T:System.Configuration.ConfigurationFileMap" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationFileMap.#ctor(System.String)">
      <summary>제공된 매개 변수를 기반으로 <see cref="T:System.Configuration.ConfigurationFileMap" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="machineConfigFilename">컴퓨터 구성 파일의 이름입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationFileMap.Clone">
      <summary>기존 <see cref="T:System.Configuration.ConfigurationFileMap" /> 개체의 복사본을 만듭니다.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationFileMap" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationFileMap.MachineConfigFilename">
      <summary>컴퓨터 구성 파일의 이름을 가져오거나 설정합니다.</summary>
      <returns>컴퓨터 구성 파일의 이름입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationLocation">
      <summary>구성 파일에 있는 <see langword="location" /> 요소를 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationLocation.OpenConfiguration">
      <summary>Configuration 개체의 인스턴스를 만듭니다.</summary>
      <returns>Configuration 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLocation.Path">
      <summary>이 <see cref="T:System.Configuration.ConfigurationLocation" /> 개체가 나타내는 구성 설정이 있는 리소스에 대한 상대 경로를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Configuration.ConfigurationLocation" />이 나타내는 구성 설정이 있는 리소스에 대한 상대 경로입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationLocationCollection">
      <summary>
        <see cref="T:System.Configuration.ConfigurationLocationCollection" /> 개체의 컬렉션을 포함합니다.</summary>
    </member>
    <member name="P:System.Configuration.ConfigurationLocationCollection.Item(System.Int32)">
      <summary>지정된 인덱스의 <see cref="T:System.Configuration.ConfigurationLocationCollection" /> 개체를 가져옵니다.</summary>
      <param name="index">반환할 <see cref="T:System.Configuration.ConfigurationLocationCollection" />의 인덱스 위치입니다.</param>
      <returns>지정한 인덱스에 있는 <see cref="T:System.Configuration.ConfigurationLocationCollection" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationLockCollection">
      <summary>잠긴 구성 개체의 컬렉션을 포함합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Add(System.String)">
      <summary>구성 개체를 컬렉션에 추가하여 잠급니다.</summary>
      <param name="name">구성 개체의 이름입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="name" />이 컬렉션의 기존 구성 개체와 일치하지 않는 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Clear">
      <summary>컬렉션에서 구성 개체를 모두 지웁니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Contains(System.String)">
      <summary>특정 구성 개체가 잠겨 있는지 여부를 확인합니다.</summary>
      <param name="name">확인할 구성 개체의 이름입니다.</param>
      <returns>
        <see cref="T:System.Configuration.ConfigurationLockCollection" />에 지정된 구성 개체가 포함되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.CopyTo(System.String[],System.Int32)">
      <summary>대상 배열의 지정된 인덱스에서 시작하여 전체 <see cref="T:System.Configuration.ConfigurationLockCollection" /> 컬렉션을 호환되는 1차원 <see cref="T:System.Array" />에 복사합니다.</summary>
      <param name="array">
        <see cref="T:System.Array" />에서 복사한 요소의 대상인 1차원 <see cref="T:System.Configuration.ConfigurationLockCollection" />입니다. <see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index">
        <paramref name="array" />에서 복사가 시작되는 0부터 시작하는 인덱스입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.GetEnumerator">
      <summary>이 <see cref="T:System.Collections.IEnumerator" /> 컬렉션을 반복하는 데 사용되는 <see cref="T:System.Configuration.ConfigurationLockCollection" /> 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.IsReadOnly(System.String)">
      <summary>특정 구성 개체가 읽기 전용인지 여부를 확인합니다.</summary>
      <param name="name">확인할 구성 개체의 이름입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">컬렉션에 지정된 구성 개체가 없는 경우</exception>
      <returns>
        <see cref="T:System.Configuration.ConfigurationLockCollection" /> 컬렉션의 지정된 구성 개체가 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Remove(System.String)">
      <summary>컬렉션에서 구성 개체를 제거합니다.</summary>
      <param name="name">구성 개체의 이름입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="name" />이 컬렉션의 기존 구성 개체와 일치하지 않는 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.SetFromList(System.String)">
      <summary>제공된 목록에 따라 구성 개체의 집합을 잠급니다.</summary>
      <param name="attributeList">쉼표로 구분된 문자열입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="attributeList" /> 매개 변수의 항목이 잠글 수 있는 유효한 구성 특성이 아닌 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>대상 배열의 지정된 인덱스에서 시작하여 전체 <see cref="T:System.Configuration.ConfigurationLockCollection" /> 컬렉션을 호환되는 1차원 <see cref="T:System.Array" />에 복사합니다.</summary>
      <param name="array">
        <see cref="T:System.Array" /> 컬렉션에서 복사한 요소의 대상인 1차원 <see cref="T:System.Configuration.ConfigurationLockCollection" />입니다. <see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index">
        <paramref name="array" />에서 복사가 시작되는 0부터 시작하는 인덱스입니다.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.AttributeList">
      <summary>컬렉션에 포함된 구성 개체의 목록을 가져옵니다.</summary>
      <returns>컬렉션에 있는 잠긴 구성 개체의 목록을 포함하는 쉼표로 구분된 문자열입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.Count">
      <summary>컬렉션에 포함된 잠긴 구성 개체의 수를 가져옵니다.</summary>
      <returns>컬렉션에 포함된 잠긴 구성 개체의 수입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.HasParentElements">
      <summary>잠긴 개체의 컬렉션에 부모 요소가 있는지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationLockCollection" /> 컬렉션에 부모 요소가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.IsModified">
      <summary>컬렉션이 수정되었는지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationLockCollection" /> 컬렉션이 수정되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.IsSynchronized">
      <summary>컬렉션이 동기화되는지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationLockCollection" /> 컬렉션이 동기화되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.SyncRoot">
      <summary>이 <see cref="T:System.Configuration.ConfigurationLockCollection" /> 컬렉션에 대한 액세스를 동기화하는 데 사용되는 개체를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Configuration.ConfigurationLockCollection" /> 컬렉션에 대한 액세스를 동기화하는 데 사용되는 개체입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationManager">
      <summary>클라이언트 애플리케이션의 구성 파일에 액세스할 수 있도록 합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.GetSection(System.String)">
      <summary>현재 애플리케이션의 기본 구성에 대한 지정된 구성 섹션을 검색합니다.</summary>
      <param name="sectionName">구성 섹션 경로와 이름입니다. 노드 이름은 슬래시(예: "system.net/mailSettings/smtp")로 구분됩니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">구성 파일을 로드할 수 없는 경우</exception>
      <returns>지정된 <see cref="T:System.Configuration.ConfigurationSection" /> 개체이거나, 섹션이 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.Configuration.ConfigurationUserLevel)">
      <summary>현재 애플리케이션의 구성 파일을 <see cref="T:System.Configuration.Configuration" /> 개체로 엽니다.</summary>
      <param name="userLevel">구성을 열 사용자 수준을 지정하는 열거형 값 중 하나입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">구성 파일을 로드할 수 없는 경우</exception>
      <returns>현재 애플리케이션의 구성 파일입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.String)">
      <summary>지정된 클라이언트 구성 파일을 <see cref="T:System.Configuration.Configuration" /> 개체로 엽니다.</summary>
      <param name="exePath">실행(exe) 파일의 경로입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">구성 파일을 로드할 수 없는 경우</exception>
      <returns>지정된 구성 파일입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenMachineConfiguration">
      <summary>현재 컨퓨터의 컴퓨터 구성 파일을 <see cref="T:System.Configuration.Configuration" /> 개체로 엽니다.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">구성 파일을 로드할 수 없는 경우</exception>
      <returns>컴퓨터 구성 파일입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel)">
      <summary>지정된 파일 매핑 및 사용자 수준을 사용하여 지정된 클라이언트 구성 파일을 <see cref="T:System.Configuration.Configuration" /> 개체로 엽니다.</summary>
      <param name="fileMap">애플리케이션 기본 구성 파일 대신 사용할 구성 파일입니다.</param>
      <param name="userLevel">구성을 열 사용자 수준을 지정하는 열거형 값 중 하나입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">구성 파일을 로드할 수 없는 경우</exception>
      <returns>구성 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel,System.Boolean)">
      <summary>지정된 파일 매핑, 사용자 수준 및 미리 로드 옵션을 사용하여 지정된 클라이언트 구성 파일을 <see cref="T:System.Configuration.Configuration" /> 개체로 엽니다.</summary>
      <param name="fileMap">기본 애플리케이션 구성 파일 대신 사용할 구성 파일입니다.</param>
      <param name="userLevel">구성을 열 사용자 수준을 지정하는 열거형 값 중 하나입니다.</param>
      <param name="preLoad">모든 섹션 그룹 및 섹션을 미리 로드하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">구성 파일을 로드할 수 없는 경우</exception>
      <returns>구성 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap)">
      <summary>컴퓨터 구성 파일을 지정된 파일 매핑을 사용하는 <see cref="T:System.Configuration.Configuration" /> 개체로 엽니다.</summary>
      <param name="fileMap">애플리케이션 기본 구성 파일 대신 사용할 구성 파일입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">구성 파일을 로드할 수 없는 경우</exception>
      <returns>컴퓨터 구성 파일입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.RefreshSection(System.String)">
      <summary>명명된 섹션을 새로 고쳐서 다음에 검색할 때 디스크에서 다시 읽도록 합니다.</summary>
      <param name="sectionName">구성 섹션 이름이거나 새로 고칠 섹션의 구성 경로 및 섹션 이름입니다.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationManager.AppSettings">
      <summary>현재 애플리케이션의 기본 구성에 대한 <see cref="T:System.Configuration.AppSettingsSection" /> 데이터를 가져옵니다.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">애플리케이션 설정 데이터가 포함된 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 개체를 검색할 수 없습니다.</exception>
      <returns>
        <see cref="T:System.Configuration.AppSettingsSection" />현재 응용 프로그램의 기본 구성에 대 한 개체의 내용입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationManager.ConnectionStrings">
      <summary>현재 애플리케이션의 기본 구성에 대한 <see cref="T:System.Configuration.ConnectionStringsSection" /> 데이터를 가져옵니다.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> 개체를 검색할 수 없습니다.</exception>
      <returns>
        <see cref="T:System.Configuration.ConnectionStringsSection" />현재 응용 프로그램의 기본 구성에 대 한 개체의 내용입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationProperty">
      <summary>특성 또는 구성 요소의 자식을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationProperty" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">구성 엔터티의 이름입니다.</param>
      <param name="type">구성 엔터티의 형식입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationProperty" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">구성 엔터티의 이름입니다.</param>
      <param name="type">구성 엔터티의 형식입니다.</param>
      <param name="defaultValue">구성 엔터티의 기본값입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationProperty" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">구성 엔터티의 이름입니다.</param>
      <param name="type">구성 엔터티의 형식입니다.</param>
      <param name="defaultValue">구성 엔터티의 기본값입니다.</param>
      <param name="typeConverter">적용할 변환기의 형식입니다.</param>
      <param name="validator">사용할 유효성 검사기입니다.</param>
      <param name="options">
        <see cref="T:System.Configuration.ConfigurationPropertyOptions" /> 열거형 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions,System.String)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationProperty" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">구성 엔터티의 이름입니다.</param>
      <param name="type">구성 엔터티의 형식입니다.</param>
      <param name="defaultValue">구성 엔터티의 기본값입니다.</param>
      <param name="typeConverter">적용할 변환기의 형식입니다.</param>
      <param name="validator">사용할 유효성 검사기입니다.</param>
      <param name="options">
        <see cref="T:System.Configuration.ConfigurationPropertyOptions" /> 열거형 값 중 하나입니다.</param>
      <param name="description">구성 엔터티에 대한 설명입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.Configuration.ConfigurationPropertyOptions)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationProperty" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">구성 엔터티의 이름입니다.</param>
      <param name="type">구성 엔터티의 형식입니다.</param>
      <param name="defaultValue">구성 엔터티의 기본값입니다.</param>
      <param name="options">
        <see cref="T:System.Configuration.ConfigurationPropertyOptions" /> 열거형 값 중 하나입니다.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Converter">
      <summary>이 <see cref="T:System.ComponentModel.TypeConverter" />를 구성 파일에 쓰기 위한 XML 표현으로 변환하는 데 사용되는 <see cref="T:System.Configuration.ConfigurationProperty" />를 가져옵니다.</summary>
      <exception cref="T:System.Exception">이 <see cref="T:System.Configuration.ConfigurationProperty" />를 변환할 수 없는 경우</exception>
      <returns>이 <see cref="T:System.ComponentModel.TypeConverter" />를 구성 파일에 쓰기 위한 XML 표현으로 변환하는 데 사용되는 <see cref="T:System.Configuration.ConfigurationProperty" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.DefaultValue">
      <summary>이 <see cref="T:System.Configuration.ConfigurationProperty" /> 속성의 기본값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Object" /> 속성에서 지정하는 형식으로 캐스팅될 수 있는 <see cref="P:System.Configuration.ConfigurationProperty.Type" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Description">
      <summary>
        <see cref="T:System.Configuration.ConfigurationProperty" />와 연결된 설명을 가져옵니다.</summary>
      <returns>속성을 설명하는 <see langword="string" /> 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsAssemblyStringTransformationRequired">
      <summary>이전 버전의 .NET Framework에 대해 serialize된 경우 구성 속성의 어셈블리 이름을 변환해야 하는지 여부를 나타냅니다.</summary>
      <returns>속성의 어셈블리 이름을 변환해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsDefaultCollection">
      <summary>속성이 요소의 기본 컬렉션인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>속성이 요소의 기본 컬렉션이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsKey">
      <summary>이 <see cref="T:System.Configuration.ConfigurationProperty" />가 포함하는 <see cref="T:System.Configuration.ConfigurationElement" /> 개체의 키인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Configuration.ConfigurationProperty" /> 개체가 포함하는 요소의 키이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsRequired">
      <summary>이 <see cref="T:System.Configuration.ConfigurationProperty" />가 필요한지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationProperty" />가 필요하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsTypeStringTransformationRequired">
      <summary>이전 버전의 .NET Framework에 대해 serialize된 경우 구성 속성의 형식 이름을 변환해야 하는지 여부를 나타냅니다.</summary>
      <returns>속성의 형식 이름을 변환해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsVersionCheckRequired">
      <summary>구성 속성을 XML로 serialize해야 하는지 확인하기 위해 serialization 시 구성 속성의 부모 구성 섹션을 쿼리할지 여부를 나타냅니다.</summary>
      <returns>부모 구성 섹션을 쿼리해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Name">
      <summary>이 <see cref="T:System.Configuration.ConfigurationProperty" />의 이름을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationProperty" />의 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Type">
      <summary>이 <see cref="T:System.Configuration.ConfigurationProperty" /> 개체의 형식을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Type" /> 개체의 형식을 나타내는 <see cref="T:System.Configuration.ConfigurationProperty" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Validator">
      <summary>이 <see cref="T:System.Configuration.ConfigurationValidatorAttribute" /> 개체의 유효성을 검사하는 데 사용되는 <see cref="T:System.Configuration.ConfigurationProperty" />를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Configuration.ConfigurationValidatorBase" />의 유효성을 검사하는 데 사용되는 <see cref="T:System.Configuration.ConfigurationProperty" /> 유효성 검사기입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationPropertyAttribute">
      <summary>구성 속성을 인스턴스화하도록 .NET Framework에 선언적으로 지시합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationPropertyAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">정의된 <see cref="T:System.Configuration.ConfigurationProperty" /> 개체의 이름입니다.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.DefaultValue">
      <summary>데코레이팅된 속성의 기본값을 가져오거나 설정합니다.</summary>
      <returns>데코레이팅된 구성 요소 속성의 기본값을 나타내는 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection">
      <summary>속성이 데코레이팅된 구성 속성의 기본 속성 컬렉션인지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>속성이 요소의 기본 컬렉션을 나타내면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.IsKey">
      <summary>속성이 데코레이팅된 요소 속성의 키 속성인지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>속성이 컬렉션의 요소에 대한 키 속성이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.IsRequired">
      <summary>데코레이팅된 요소 속성이 필요한지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>속성이 필요하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.Name">
      <summary>데코레이팅된 구성 요소 속성의 이름을 가져옵니다.</summary>
      <returns>데코레이팅된 구성 요소 속성의 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.Options">
      <summary>데코레이팅된 구성 요소 속성의 <see cref="T:System.Configuration.ConfigurationPropertyOptions" />를 가져오거나 설정합니다.</summary>
      <returns>속성과 연결된 <see cref="T:System.Configuration.ConfigurationPropertyOptions" /> 열거형 값 중 하나입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationPropertyCollection">
      <summary>구성 요소 속성의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.#ctor">
      <summary>
        <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Add(System.Configuration.ConfigurationProperty)">
      <summary>컬렉션에 구성 속성을 추가합니다.</summary>
      <param name="property">추가할 <see cref="T:System.Configuration.ConfigurationProperty" />입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Clear">
      <summary>컬렉션에서 구성 속성 개체를 모두 제거합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Contains(System.String)">
      <summary>구성 속성이 이 컬렉션에 포함되어 있는지 여부를 지정합니다.</summary>
      <param name="name">확인할 <see cref="T:System.Configuration.ConfigurationProperty" />의 식별자입니다.</param>
      <returns>지정한 <see cref="T:System.Configuration.ConfigurationProperty" />이 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.CopyTo(System.Configuration.ConfigurationProperty[],System.Int32)">
      <summary>이 ConfigurationPropertyCollection을 배열에 복사합니다.</summary>
      <param name="array">복사할 대상 배열입니다.</param>
      <param name="index">복사를 시작할 인덱스입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.GetEnumerator">
      <summary>컬렉션에 적용되는 <see cref="T:System.Collections.IEnumerator" /> 개체를 가져옵니다.</summary>
      <returns>컬렉션에 적용되는 <see cref="T:System.Collections.IEnumerator" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Remove(System.String)">
      <summary>컬렉션에서 구성 속성을 제거합니다.</summary>
      <param name="name">제거할 <see cref="T:System.Configuration.ConfigurationProperty" />입니다.</param>
      <returns>지정된 <see cref="T:System.Configuration.ConfigurationProperty" />가 제거되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>이 컬렉션을 배열에 복사합니다.</summary>
      <param name="array">복사할 대상 배열입니다.</param>
      <param name="index">복사를 시작할 인덱스 위치입니다.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.Count">
      <summary>컬렉션의 속성 수를 가져옵니다.</summary>
      <returns>컬렉션의 속성 수입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.IsSynchronized">
      <summary>해당 컬렉션에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationPropertyCollection" />에 대한 액세스가 동기화되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.Item(System.String)">
      <summary>지정된 이름을 갖는 컬렉션 항목을 가져옵니다.</summary>
      <param name="name">반환할 <see cref="T:System.Configuration.ConfigurationProperty" />입니다.</param>
      <returns>지정된 <paramref name="name" />의 <see cref="T:System.Configuration.ConfigurationProperty" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.SyncRoot">
      <summary>컬렉션에 대한 액세스를 동기화할 개체를 가져옵니다.</summary>
      <returns>컬렉션에 대한 액세스를 동기화할 개체입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationPropertyOptions">
      <summary>속성에 적용할 옵션을 지정합니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsAssemblyStringTransformationRequired">
      <summary>이전 버전의 .NET Framework에 대해 serialize된 경우 구성 속성의 어셈블리 이름을 변환해야 하는지 여부를 나타냅니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsDefaultCollection">
      <summary>속성이 기본 컬렉션임을 나타냅니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsKey">
      <summary>속성이 컬렉션 키임을 나타냅니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsRequired">
      <summary>속성이 필요함을 나타냅니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsTypeStringTransformationRequired">
      <summary>이전 버전의 .NET Framework에 대해 serialize된 경우 구성 속성의 형식 이름을 변환해야 하는지 여부를 나타냅니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsVersionCheckRequired">
      <summary>구성 속성을 XML로 serialize해야 하는지 확인하기 위해 serialization 시 구성 속성의 부모 구성 섹션을 쿼리할지 여부를 나타냅니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.None">
      <summary>속성에 옵션이 적용되지 않음을 나타냅니다.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationSaveMode">
      <summary>구성 파일에 기록되는 속성을 결정합니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationSaveMode.Full">
      <summary>모든 속성이 구성 파일에 기록되도록 합니다. 이것은 주로 구성 파일에 대한 정보를 만들거나 한 컴퓨터에서 다른 컴퓨터로 구성 값을 옮기는 데 유용합니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationSaveMode.Minimal">
      <summary>상속된 값과 다른 속성만 구성 파일에 기록되도록 합니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationSaveMode.Modified">
      <summary>속성 값이 상속된 값과 같은 경우에도 수정된 속성만 구성 파일에 기록되도록 합니다.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationSection">
      <summary>구성 파일 내의 섹션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.#ctor">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)">
      <summary>구성 파일에서 XML을 읽습니다.</summary>
      <param name="reader">구성 파일에서 읽는 <see cref="T:System.Xml.XmlReader" /> 개체입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="reader" />가 구성 파일에서 요소를 찾지 못한 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.GetRuntimeObject">
      <summary>파생 클래스에서 재정의될 때 사용자 지정 개체를 반환합니다.</summary>
      <returns>섹션을 나타내는 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.IsModified">
      <summary>이 구성 요소가 파생 클래스에서 구현되었을 때 마지막으로 저장되거나 로드된 이후 수정되었는지 여부를 나타냅니다.</summary>
      <returns>요소가 수정되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ResetModified">
      <summary>파생 클래스에서 구현되는 경우 <see cref="M:System.Configuration.ConfigurationElement.IsModified" /> 메서드의 값을 <see langword="false" />로 다시 설정합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> 개체의 병합되지 않은 뷰가 들어 있는 XML 문자열을 파일에 쓸 단일 섹션으로 만듭니다.</summary>
      <param name="parentElement">병합 취소를 수행할 때 부모로 사용할 <see cref="T:System.Configuration.ConfigurationElement" /> 인스턴스입니다.</param>
      <param name="name">만들 섹션의 이름입니다.</param>
      <param name="saveMode">문자열에 쓸 때 사용할 <see cref="T:System.Configuration.ConfigurationSaveMode" /> 인스턴스입니다.</param>
      <returns>
        <see cref="T:System.Configuration.ConfigurationSection" /> 개체의 병합되지 않은 뷰가 들어 있는 XML 문자열입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
      <summary>지정된 대상 버전의 .NET Framework에 대해 구성 개체 계층 구조가 serialize된 경우 지정된 요소를 serialize할지 여부를 나타냅니다.</summary>
      <param name="element">serialization 후보인 <see cref="T:System.Configuration.ConfigurationElement" /> 개체입니다.</param>
      <param name="elementName">XML에 표시되는 <see cref="T:System.Configuration.ConfigurationElement" /> 개체의 이름입니다.</param>
      <param name="targetFramework">.NET Framework의 대상 버전입니다.</param>
      <returns>
        <paramref name="element" />를 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
      <summary>지정된 대상 버전의 .NET Framework에 대해 구성 개체 계층 구조가 serialize된 경우 지정된 속성을 serialize할지 여부를 나타냅니다.</summary>
      <param name="property">serialization 후보인 <see cref="T:System.Configuration.ConfigurationProperty" /> 개체입니다.</param>
      <param name="propertyName">XML에 표시되는 <see cref="T:System.Configuration.ConfigurationProperty" /> 개체의 이름입니다.</param>
      <param name="targetFramework">.NET Framework의 대상 버전입니다.</param>
      <param name="parentConfigurationElement">속성의 부모 요소입니다.</param>
      <returns>
        <paramref name="property" />를 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)">
      <summary>지정된 대상 버전의 .NET Framework에 대해 구성 개체 계층 구조가 serialize된 경우 현재 <see cref="T:System.Configuration.ConfigurationSection" /> 인스턴스를 serialize할지 여부를 나타냅니다.</summary>
      <param name="targetFramework">.NET Framework의 대상 버전입니다.</param>
      <returns>현재 섹션을 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSection.SectionInformation">
      <summary>사용자가 지정할 수 없는 <see cref="T:System.Configuration.SectionInformation" /> 개체의 정보와 기능을 포함하는 <see cref="T:System.Configuration.ConfigurationSection" /> 개체를 가져옵니다.</summary>
      <returns>사용자가 지정할 수 없는 <see cref="T:System.Configuration.SectionInformation" /> 정보와 기능을 포함하는 <see cref="T:System.Configuration.ConfigurationSection" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationSectionCollection">
      <summary>구성 파일 내 관련 섹션의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Add(System.String,System.Configuration.ConfigurationSection)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> 개체를 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 개체에 추가합니다.</summary>
      <param name="name">추가할 섹션의 이름입니다.</param>
      <param name="section">추가할 섹션입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Clear">
      <summary>이 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 개체를 지웁니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.CopyTo(System.Configuration.ConfigurationSection[],System.Int32)">
      <summary>이 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 개체를 배열에 복사합니다.</summary>
      <param name="array">
        <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 개체를 복사할 배열입니다.</param>
      <param name="index">복사를 시작할 인덱스 위치입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="array" />의 길이가 <see cref="P:System.Configuration.ConfigurationSectionCollection.Count" />와 <paramref name="index" />의 합보다 작은 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Get(System.Int32)">
      <summary>이 <see cref="T:System.Configuration.ConfigurationSection" /> 개체에 있는 지정된 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 개체를 가져옵니다.</summary>
      <param name="index">반환할 <see cref="T:System.Configuration.ConfigurationSection" /> 개체의 인덱스입니다.</param>
      <returns>지정된 인덱스의 <see cref="T:System.Configuration.ConfigurationSection" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Get(System.String)">
      <summary>이 <see cref="T:System.Configuration.ConfigurationSection" /> 개체에 있는 지정된 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 개체를 가져옵니다.</summary>
      <param name="name">반환할 <see cref="T:System.Configuration.ConfigurationSection" /> 개체의 이름입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" />가 null이거나 빈 문자열("")인 경우</exception>
      <returns>지정된 이름을 가진 <see cref="T:System.Configuration.ConfigurationSection" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.GetEnumerator">
      <summary>이 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 개체를 반복할 수 있는 열거자를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Collections.IEnumerator" /> 개체를 반복하는 데 사용할 수 있는 <see cref="T:System.Configuration.ConfigurationSectionCollection" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.GetKey(System.Int32)">
      <summary>이 <see cref="T:System.Configuration.ConfigurationSection" /> 개체에 있는 지정된 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 개체의 키를 가져옵니다.</summary>
      <param name="index">반환될 키가 있는 <see cref="T:System.Configuration.ConfigurationSection" /> 개체의 인덱스입니다.</param>
      <returns>지정된 인덱스에 있는 <see cref="T:System.Configuration.ConfigurationSection" /> 개체의 키입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>serialization 중 시스템에서 사용됩니다.</summary>
      <param name="info">적용할 수 있는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="context">적용할 수 있는 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Remove(System.String)">
      <summary>이 <see cref="T:System.Configuration.ConfigurationSection" /> 개체에서 지정된 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 개체를 제거합니다.</summary>
      <param name="name">제거할 섹션의 이름입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.RemoveAt(System.Int32)">
      <summary>이 <see cref="T:System.Configuration.ConfigurationSection" /> 개체에서 지정된 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 개체를 제거합니다.</summary>
      <param name="index">제거할 섹션의 인덱스입니다.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Count">
      <summary>이 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 개체에 있는 섹션의 수를 가져옵니다.</summary>
      <returns>컬렉션에 있는 섹션의 수를 나타내는 정수입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Item(System.Int32)">
      <summary>지정된 <see cref="T:System.Configuration.ConfigurationSection" /> 개체를 가져옵니다.</summary>
      <param name="index">반환할 <see cref="T:System.Configuration.ConfigurationSection" /> 개체의 인덱스입니다.</param>
      <returns>지정된 인덱스의 <see cref="T:System.Configuration.ConfigurationSection" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Item(System.String)">
      <summary>지정된 <see cref="T:System.Configuration.ConfigurationSection" /> 개체를 가져옵니다.</summary>
      <param name="name">반환할 <see cref="T:System.Configuration.ConfigurationSection" /> 개체의 이름입니다.</param>
      <returns>지정된 이름을 가진 <see cref="T:System.Configuration.ConfigurationSection" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Keys">
      <summary>이 <see cref="T:System.Configuration.ConfigurationSection" />에개체에 있는 모든 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 개체에 대한 키를 가져옵니다.</summary>
      <returns>이 컬렉션에 있는 모든 섹션의 키를 포함하는 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationSectionGroup">
      <summary>구성 파일에 있는 관련된 섹션의 그룹을 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.#ctor">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration">
      <summary>이 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체를 강제로 선언합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration(System.Boolean)">
      <summary>이 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체를 강제로 선언합니다.</summary>
      <param name="force">
        <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체가 파일에 쓰여져야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체가 루트 섹션 그룹인 경우  
  
또는 
<see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체가 위치를 가지고 있는 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.ShouldSerializeSectionGroupInTargetVersion(System.Runtime.Versioning.FrameworkName)">
      <summary>지정된 대상 버전의 .NET Framework에 대해 구성 개체 계층 구조가 serialize된 경우 현재 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 인스턴스를 serialize할지 여부를 나타냅니다.</summary>
      <param name="targetFramework">.NET Framework의 대상 버전입니다.</param>
      <returns>현재 섹션 그룹을 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.IsDeclarationRequired">
      <summary>이 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체 선언이 필요한지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 선언이 필요하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.IsDeclared">
      <summary>이 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체가 선언되었는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Configuration.ConfigurationSectionGroup" />이 선언되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.Name">
      <summary>이 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체의 이름 속성을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체의 이름 속성입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.SectionGroupName">
      <summary>이 <see cref="T:System.Configuration.ConfigurationSectionGroup" />과 연결된 섹션 그룹 이름을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체의 섹션 그룹 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.SectionGroups">
      <summary>이 <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> 개체의 자식인 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체를 모두 포함하는 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> 개체의 자식인 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체를 모두 포함하는 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.Sections">
      <summary>이 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 개체 내에 모든 <see cref="T:System.Configuration.ConfigurationSection" /> 개체를 포함하는 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 개체 내에 <see cref="T:System.Configuration.ConfigurationSection" /> 개체를 모두 포함하는 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.Type">
      <summary>이 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체의 형식을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체가 루트 섹션 그룹인 경우  
  
또는 
<see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체가 위치를 가지고 있는 경우</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">섹션 또는 그룹이 이미 다른 수준에 정의되어 있는 경우</exception>
      <returns>이 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체의 형식입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationSectionGroupCollection">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Add(System.String,System.Configuration.ConfigurationSectionGroup)">
      <summary>이 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체에 <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> 개체를 추가합니다.</summary>
      <param name="name">추가할 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체의 이름입니다.</param>
      <param name="sectionGroup">추가할 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Clear">
      <summary>컬렉션을 지웁니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.CopyTo(System.Configuration.ConfigurationSectionGroup[],System.Int32)">
      <summary>이 <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> 개체를 배열에 복사합니다.</summary>
      <param name="array">개체를 복사할 대상 배열입니다.</param>
      <param name="index">복사를 시작할 인덱스 위치입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="array" />의 길이가 <see cref="P:System.Configuration.ConfigurationSectionGroupCollection.Count" />와 <paramref name="index" />의 합보다 작은 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Get(System.Int32)">
      <summary>컬렉션에 있는 지정된 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체를 가져옵니다.</summary>
      <param name="index">반환할 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체의 인덱스입니다.</param>
      <returns>지정된 인덱스의 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Get(System.String)">
      <summary>컬렉션에서 지정한 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체를 가져옵니다.</summary>
      <param name="name">반환할 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체의 이름입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" />가 null이거나 빈 문자열("")인 경우</exception>
      <returns>지정된 이름을 가진 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.GetEnumerator">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> 개체를 반복할 수 있는 열거자를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 개체를 반복하는 데 사용할 수 있는 <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.GetKey(System.Int32)">
      <summary>이 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체에 있는 지정된 <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> 개체의 키를 가져옵니다.</summary>
      <param name="index">반환될 키가 있는 섹션 그룹의 인덱스입니다.</param>
      <returns>지정된 인덱스에 있는 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체의 키입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>serialization 중 시스템에서 사용됩니다.</summary>
      <param name="info">적용할 수 있는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="context">적용할 수 있는 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Remove(System.String)">
      <summary>이 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체에서 지정된 이름의 <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> 개체를 제거합니다.</summary>
      <param name="name">제거할 섹션 그룹의 이름입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.RemoveAt(System.Int32)">
      <summary>이 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체에서 지정된 인덱스에 있는 <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> 개체를 제거합니다.</summary>
      <param name="index">제거할 섹션 그룹의 인덱스입니다.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Count">
      <summary>컬렉션의 섹션 그룹 수를 가져옵니다.</summary>
      <returns>컬렉션의 섹션 그룹 수를 나타내는 정수입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Item(System.Int32)">
      <summary>컬렉션에서 지정된 인덱스에 있는 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체를 가져옵니다.</summary>
      <param name="index">반환할 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체의 인덱스입니다.</param>
      <returns>지정된 인덱스의 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체입니다.  
  
C#에서 이 속성은 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 클래스의 인덱서입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Item(System.String)">
      <summary>컬렉션에서 지정된 이름의 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체를 가져옵니다.</summary>
      <param name="name">반환할 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체의 이름입니다.</param>
      <returns>지정된 이름을 가진 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체입니다.  
  
C#에서 이 속성은 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 클래스의 인덱서입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Keys">
      <summary>이 <see cref="T:System.Configuration.ConfigurationSectionGroup" />에개체에 있는 모든 <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> 개체에 대한 키를 가져옵니다.</summary>
      <returns>이 컬렉션에 있는 모든 섹션 그룹의 이름을 포함하는 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationSettings">
      <summary>구성 섹션과 일반 구성 설정을 읽을 수 있도록 런타임 버전 1.0 및 1.1 지원을 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSettings.GetConfig(System.String)">
      <summary>전달된 구성 섹션 이름과 경로에 대한 <see cref="T:System.Configuration.ConfigurationSection" /> 개체를 반환합니다.</summary>
      <param name="sectionName">"system.net/settings"와 같은 구성 이름과 경로입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationException">요청된 섹션을 검색할 수 없습니다.</exception>
      <returns>전달된 구성 섹션 이름과 경로에 대한 <see cref="T:System.Configuration.ConfigurationSection" /> 개체입니다.  
  
 <block subset="none" type="note"><para><see cref="T:System.Configuration.ConfigurationSettings" /> 클래스는 이전 버전과의 호환성만 제공합니다. 대신 <see cref="T:System.Configuration.ConfigurationManager" /> 클래스 또는 <see cref="T:System.Web.Configuration.WebConfigurationManager" /> 클래스를 사용합니다.</para></block></returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSettings.AppSettings">
      <summary>구성 파일에서 애플리케이션 설정의 읽기 전용 컬렉션을 가져옵니다.</summary>
      <returns>구성 파일의 응용 프로그램 설정에 대 한 읽기 전용 컬렉션입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationUserLevel">
      <summary>Configuration 개체가 나타낼 구성 파일을 지정하는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationUserLevel.None">
      <summary>모든 사용자에게 적용되는 <see cref="T:System.Configuration.Configuration" />을 가져옵니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationUserLevel.PerUserRoaming">
      <summary>현재 사용자에게 적용되는 로밍 <see cref="T:System.Configuration.Configuration" />을 가져옵니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationUserLevel.PerUserRoamingAndLocal">
      <summary>현재 사용자에게 적용되는 로컬 <see cref="T:System.Configuration.Configuration" />을 가져옵니다.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationValidatorAttribute">
      <summary>
        <see cref="N:System.Configuration" /> 유효성 검사기 특성 형식의 기본 클래스 역할을 합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorAttribute.#ctor">
      <summary>
        <see cref="T:System.Configuration.ConfigurationValidatorAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorAttribute.#ctor(System.Type)">
      <summary>지정된 유효성 검사기 형식을 사용하여 <see cref="T:System.Configuration.ConfigurationValidatorAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="validator">
        <see cref="T:System.Configuration.ConfigurationValidatorAttribute" />의 인스턴스를 만들 때 사용할 유효성 검사기 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="validator" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="validator" />이 <see cref="T:System.Configuration.ConfigurationValidatorBase" />에서 파생되지 않은 경우</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorInstance">
      <summary>유효성 검사기 특성 인스턴스를 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Configuration.ConfigurationValidatorBase" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorType">
      <summary>유효성 검사기 특성의 형식을 가져옵니다.</summary>
      <returns>현재 유효성 검사기 특성 인스턴스의 <see cref="T:System.Type" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationValidatorBase">
      <summary>개체 값이 확인될 수 있도록 유효성 검사 클래스를 파생시키기 위한 기본 클래스 역할을 합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorBase.#ctor">
      <summary>
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 클래스의 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorBase.CanValidate(System.Type)">
      <summary>형식에 따라 개체의 유효성을 검사할 수 있는지 여부를 확인합니다.</summary>
      <param name="type">개체 형식입니다.</param>
      <returns>
        <paramref name="type" /> 매개 변수 값이 예상되는 <see langword="true" />과 일치하면 <see langword="type" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorBase.Validate(System.Object)">
      <summary>개체의 값이 유효한지 여부를 확인합니다.</summary>
      <param name="value">개체 값입니다.</param>
    </member>
    <member name="T:System.Configuration.ConfigXmlDocument">
      <summary>해당 <see cref="T:System.Xml.XmlDocument" /> 형식을 래핑하고 파일 이름과 줄 번호를 보고하는 데 필요한 정보도 전달합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.#ctor">
      <summary>
        <see cref="T:System.Configuration.ConfigXmlDocument" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateAttribute(System.String,System.String,System.String)">
      <summary>구성 요소 특성을 만듭니다.</summary>
      <param name="prefix">접두사 정의입니다.</param>
      <param name="localName">로컬로 사용되는 이름입니다.</param>
      <param name="namespaceUri">네임스페이스에 할당된 URL입니다.</param>
      <returns>
        <see cref="P:System.Xml.Serialization.XmlAttributes.XmlAttribute" /> 특성입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateCDataSection(System.String)">
      <summary>XML CData 섹션을 만듭니다.</summary>
      <param name="data">사용할 데이터입니다.</param>
      <returns>
        <see cref="T:System.Xml.XmlCDataSection" /> 값입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateComment(System.String)">
      <summary>XML 주석을 만듭니다.</summary>
      <param name="data">주석 데이터입니다.</param>
      <returns>
        <see cref="T:System.Xml.XmlComment" /> 값입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateElement(System.String,System.String,System.String)">
      <summary>구성 요소를 만듭니다.</summary>
      <param name="prefix">접두사 정의입니다.</param>
      <param name="localName">로컬로 사용되는 이름입니다.</param>
      <param name="namespaceUri">URL의 네임스페이스입니다.</param>
      <returns>
        <see cref="T:System.Xml.XmlElement" /> 값입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateSignificantWhitespace(System.String)">
      <summary>공백을 만듭니다.</summary>
      <param name="data">사용할 데이터입니다.</param>
      <returns>
        <see cref="T:System.Xml.XmlSignificantWhitespace" /> 값입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateTextNode(System.String)">
      <summary>텍스트 노드를 만듭니다.</summary>
      <param name="text">사용할 텍스트입니다.</param>
      <returns>
        <see cref="T:System.Xml.XmlText" /> 값입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateWhitespace(System.String)">
      <summary>공백을 만듭니다.</summary>
      <param name="data">사용할 데이터입니다.</param>
      <returns>
        <see cref="T:System.Xml.XmlWhitespace" /> 값입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.Load(System.String)">
      <summary>구성 파일을 로드합니다.</summary>
      <param name="filename">파일 이름입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.LoadSingleElement(System.String,System.Xml.XmlTextReader)">
      <summary>단일 구성 요소를 로드합니다.</summary>
      <param name="filename">파일 이름입니다.</param>
      <param name="sourceReader">판독기의 소스입니다.</param>
    </member>
    <member name="P:System.Configuration.ConfigXmlDocument.Filename">
      <summary>구성 파일 이름을 가져옵니다.</summary>
      <returns>구성 파일 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigXmlDocument.LineNumber">
      <summary>현재 노드 줄 번호를 가져옵니다.</summary>
      <returns>현재 노드의 줄 번호입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigXmlDocument.System#Configuration#Internal#IConfigErrorInfo#Filename">
      <summary>구성 파일 이름을 가져옵니다.</summary>
      <returns>파일 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigXmlDocument.System#Configuration#Internal#IConfigErrorInfo#LineNumber">
      <summary>구성 줄 번호를 가져옵니다.</summary>
      <returns>줄 번호입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConnectionStringSettings">
      <summary>연결 문자열 구성 파일 섹션의 명명된 단일 연결 문자열을 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.#ctor">
      <summary>
        <see cref="T:System.Configuration.ConnectionStringSettings" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.#ctor(System.String,System.String)">
      <summary>
        <see cref="T:System.Configuration.ConnectionStringSettings" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">연결 문자열의 이름으로,</param>
      <param name="connectionString">연결 문자열입니다.</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.#ctor(System.String,System.String,System.String)">
      <summary>
        <see cref="T:System.Configuration.ConnectionStringSettings" /> 개체의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">연결 문자열의 이름으로,</param>
      <param name="connectionString">연결 문자열입니다.</param>
      <param name="providerName">연결 문자열에서 사용할 공급자의 이름입니다.</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.ToString">
      <summary>개체의 문자열 표현을 반환합니다.</summary>
      <returns>개체의 문자열 표현입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettings.ConnectionString">
      <summary>연결 문자열을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="P:System.Configuration.ConnectionStringSettings.ConnectionString" /> 속성에 할당된 문자열 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettings.Name">
      <summary>
        <see cref="T:System.Configuration.ConnectionStringSettings" /> 이름을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="P:System.Configuration.ConnectionStringSettings.Name" /> 속성에 할당된 문자열 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettings.ProviderName">
      <summary>공급자 이름 속성을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="P:System.Configuration.ConnectionStringSettings.ProviderName" /> 속성</returns>
    </member>
    <member name="T:System.Configuration.ConnectionStringSettingsCollection">
      <summary>
        <see cref="T:System.Configuration.ConnectionStringSettings" /> 개체의 컬렉션을 포함합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.#ctor">
      <summary>
        <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Add(System.Configuration.ConnectionStringSettings)">
      <summary>컬렉션에 <see cref="T:System.Configuration.ConnectionStringSettings" /> 개체를 추가합니다.</summary>
      <param name="settings">컬렉션에 추가할 <see cref="T:System.Configuration.ConnectionStringSettings" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Clear">
      <summary>컬렉션에서 <see cref="T:System.Configuration.ConnectionStringSettings" /> 개체를 모두 제거합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.IndexOf(System.Configuration.ConnectionStringSettings)">
      <summary>전달된 <see cref="T:System.Configuration.ConnectionStringSettings" /> 개체의 컬렉션 인덱스를 반환합니다.</summary>
      <param name="settings">컬렉션의 <see cref="T:System.Configuration.ConnectionStringSettings" /> 개체입니다.</param>
      <returns>지정된 <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> 개체의 컬렉션 인덱스입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Remove(System.Configuration.ConnectionStringSettings)">
      <summary>컬렉션에서 지정된 <see cref="T:System.Configuration.ConnectionStringSettings" /> 개체를 제거합니다.</summary>
      <param name="settings">컬렉션의 <see cref="T:System.Configuration.ConnectionStringSettings" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Remove(System.String)">
      <summary>컬렉션에서 지정된 <see cref="T:System.Configuration.ConnectionStringSettings" /> 개체를 제거합니다.</summary>
      <param name="name">컬렉션에 있는 <see cref="T:System.Configuration.ConnectionStringSettings" /> 개체의 이름입니다.</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.RemoveAt(System.Int32)">
      <summary>컬렉션의 지정된 인덱스에 있는 <see cref="T:System.Configuration.ConnectionStringSettings" /> 개체를 제거합니다.</summary>
      <param name="index">컬렉션에 있는 <see cref="T:System.Configuration.ConnectionStringSettings" /> 개체의 인덱스입니다.</param>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettingsCollection.Item(System.Int32)">
      <summary>컬렉션의 지정된 인덱스에 있는 연결 문자열을 가져오거나 설정합니다.</summary>
      <param name="index">컬렉션에 있는 <see cref="T:System.Configuration.ConnectionStringSettings" /> 개체의 인덱스입니다.</param>
      <returns>지정된 인덱스의 <see cref="T:System.Configuration.ConnectionStringSettings" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettingsCollection.Item(System.String)">
      <summary>컬렉션에서 지정된 이름을 가진 <see cref="T:System.Configuration.ConnectionStringSettings" /> 개체를 가져오거나 설정합니다.</summary>
      <param name="name">컬렉션에 있는 <see cref="T:System.Configuration.ConnectionStringSettings" /> 개체의 이름입니다.</param>
      <returns>지정된 이름의 <see cref="T:System.Configuration.ConnectionStringSettings" /> 개체 또는 <see langword="null" />(개체가 없는 경우)입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConnectionStringsSection">
      <summary>연결 문자열 구성 파일 섹션에 프로그래밍 방식으로 액세스할 수 있도록 합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringsSection.#ctor">
      <summary>
        <see cref="T:System.Configuration.ConnectionStringsSection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Configuration.ConnectionStringsSection.ConnectionStrings">
      <summary>
        <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> 개체의 <see cref="T:System.Configuration.ConnectionStringSettings" /> 컬렉션을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> 개체의 <see cref="T:System.Configuration.ConnectionStringSettings" /> 컬렉션입니다.</returns>
    </member>
    <member name="T:System.Configuration.ContextInformation">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElement" /> 개체와 연결된 컨텍스트 정보를 캡슐화합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.ContextInformation.GetSection(System.String)">
      <summary>지정된 섹션 이름에 따라 구성 섹션 정보를 포함하는 개체를 제공합니다.</summary>
      <param name="sectionName">구성 섹션의 이름입니다.</param>
      <returns>구성에 있는 지정된 섹션을 포함하는 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.ContextInformation.HostingContext">
      <summary>구성 속성이 확인되는 환경의 컨텍스트를 가져옵니다.</summary>
      <returns>구성 속성이 확인되는 환경을 지정하는 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.ContextInformation.IsMachineLevel">
      <summary>구성 속성이 컴퓨터 구성 수준에서 확인되는지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>구성 속성이 컴퓨터 구성 수준에서 확인되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.DefaultSection">
      <summary>읽기 및 쓰기 액세스를 위해 구성 섹션의 XML을 노출하는 기본 구성 섹션 처리기를 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.DefaultSection.#ctor">
      <summary>
        <see cref="T:System.Configuration.DefaultSection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Configuration.DefaultSettingValueAttribute">
      <summary>애플리케이션 설정 속성의 기본값을 지정합니다.</summary>
    </member>
    <member name="M:System.Configuration.DefaultSettingValueAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Configuration.DefaultSettingValueAttribute" /> 클래스의 인스턴스를 초기화합니다.</summary>
      <param name="value">속성의 기본값을 나타내는 <see cref="T:System.String" />입니다.</param>
    </member>
    <member name="P:System.Configuration.DefaultSettingValueAttribute.Value">
      <summary>애플리케이션 설정 속성의 기본값을 가져옵니다.</summary>
      <returns>속성의 기본값을 나타내는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.DefaultValidator">
      <summary>개체의 유효성을 검사합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.DefaultValidator.#ctor">
      <summary>
        <see cref="T:System.Configuration.DefaultValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.DefaultValidator.CanValidate(System.Type)">
      <summary>형식에 따라 개체의 유효성을 검사할 수 있는지 여부를 확인합니다.</summary>
      <param name="type">개체 형식입니다.</param>
      <returns>유효성이 검사되는 모든 형식에 대해 <see langword="true" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.DefaultValidator.Validate(System.Object)">
      <summary>개체의 값이 유효한지 여부를 확인합니다.</summary>
      <param name="value">개체 값입니다.</param>
    </member>
    <member name="T:System.Configuration.DictionarySectionHandler">
      <summary>구성 섹션의 키/값 쌍 구성 정보를 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.DictionarySectionHandler.#ctor">
      <summary>
        <see cref="T:System.Configuration.DictionarySectionHandler" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.DictionarySectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary>새 구성 처리기를 만들고 지정된 매개 변수에 따라 섹션 처리기 컬렉션에 추가합니다.</summary>
      <param name="parent">부모 개체입니다.</param>
      <param name="context">구성 컨텍스트 개체입니다.</param>
      <param name="section">섹션 XML 노드입니다.</param>
      <returns>구성 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.DictionarySectionHandler.KeyAttributeName">
      <summary>키/값 쌍에서 키로 사용할 XML 특성 이름을 가져옵니다.</summary>
      <returns>키 특성의 이름을 포함하는 문자열 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.DictionarySectionHandler.ValueAttributeName">
      <summary>키/값 쌍에서 값으로 사용할 XML 특성 이름을 가져옵니다.</summary>
      <returns>값 특성의 이름을 포함하는 문자열 값입니다.</returns>
    </member>
    <member name="T:System.Configuration.DpapiProtectedConfigurationProvider">
      <summary>Windows DPAPI(데이터 보호 API)를 사용하여 구성 데이터를 암호화하고 해독하는 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 개체를 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.#ctor">
      <summary>기본 설정을 사용하여 <see cref="T:System.Configuration.DpapiProtectedConfigurationProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
      <summary>전달된 <see cref="T:System.Xml.XmlNode" /> 개체를 해독합니다.</summary>
      <param name="encryptedNode">해독할 <see cref="T:System.Xml.XmlNode" /> 개체입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="encryptedNode" />가 "EncryptedData"로 설정된 <see cref="P:System.Xml.XmlNode.Name" /> 및 <see cref="T:System.Xml.XmlNodeType" />로 설정된 <see cref="F:System.Xml.XmlNodeType.Element" />이 없는 경우  
  
또는 
 <paramref name="encryptedNode" />가 자식 노드 이름이 "CipherValue"인 "CipherData"라는 자식 노드가 없는 경우  
  
또는 
"CipherData"라는 자식 노드가 빈 노드인 경우</exception>
      <returns>해독된 <see cref="T:System.Xml.XmlNode" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
      <summary>전달된 <see cref="T:System.Xml.XmlNode" /> 개체를 암호화합니다.</summary>
      <param name="node">암호화할 <see cref="T:System.Xml.XmlNode" /> 개체입니다.</param>
      <returns>암호화된 <see cref="T:System.Xml.XmlNode" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>기본 설정을 사용하여 공급자를 초기화합니다.</summary>
      <param name="name">개체에 사용할 공급자 이름입니다.</param>
      <param name="configurationValues">개체를 초기화할 때 사용할 값의 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 컬렉션입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="configurationValues" />에는 인식할 수 없는 구성 설정이 포함된 경우</exception>
    </member>
    <member name="P:System.Configuration.DpapiProtectedConfigurationProvider.UseMachineProtection">
      <summary>
        <see cref="T:System.Configuration.DpapiProtectedConfigurationProvider" /> 개체가 컴퓨터별 보호 기능을 사용하는지 아니면 사용자 계정별 보호 기능을 사용하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.DpapiProtectedConfigurationProvider" />가 컴퓨터별 보호 기능을 사용하면 <see langword="true" />이고, 사용자 계정별 보호 기능을 사용하면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.ElementInformation">
      <summary>구성의 개별 요소에 대한 메타 정보를 포함합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="P:System.Configuration.ElementInformation.Errors">
      <summary>연결된 요소와 하위 요소에 대한 오류를 가져옵니다.</summary>
      <returns>연결된 요소와 하위 요소에 대한 오류가 포함된 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.IsCollection">
      <summary>연결된 <see cref="T:System.Configuration.ConfigurationElement" /> 개체가 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 컬렉션인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>연결된 <see cref="T:System.Configuration.ConfigurationElement" /> 개체가 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 컬렉션이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.IsLocked">
      <summary>연결된 <see cref="T:System.Configuration.ConfigurationElement" /> 개체를 수정할 수 없는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>연결된 <see cref="T:System.Configuration.ConfigurationElement" /> 개체를 수정할 수 없으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.IsPresent">
      <summary>연결된 <see cref="T:System.Configuration.ConfigurationElement" /> 개체가 구성 파일에 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>연결된 <see cref="T:System.Configuration.ConfigurationElement" /> 개체가 구성 파일에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.LineNumber">
      <summary>연결된 <see cref="T:System.Configuration.ConfigurationElement" /> 개체가 정의되어 있는 구성 파일의 줄 번호를 가져옵니다.</summary>
      <returns>연결된 <see cref="T:System.Configuration.ConfigurationElement" /> 개체가 정의되어 있는 구성 파일의 줄 번호입니다.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Properties">
      <summary>연결된 <see cref="T:System.Configuration.PropertyInformationCollection" /> 개체에 있는 속성의 <see cref="T:System.Configuration.ConfigurationElement" /> 컬렉션을 가져옵니다.</summary>
      <returns>연결된 <see cref="T:System.Configuration.PropertyInformationCollection" /> 개체에 있는 속성의 <see cref="T:System.Configuration.ConfigurationElement" /> 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Source">
      <summary>연결된 <see cref="T:System.Configuration.ConfigurationElement" /> 개체를 처음으로 제공한 소스 파일을 가져옵니다.</summary>
      <returns>연결된 <see cref="T:System.Configuration.ConfigurationElement" /> 개체를 처음으로 제공한 소스 파일입니다.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Type">
      <summary>관련된 <see cref="T:System.Configuration.ConfigurationElement" /> 개체의 형식을 가져옵니다.</summary>
      <returns>관련된 <see cref="T:System.Configuration.ConfigurationElement" /> 개체의 형식입니다.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Validator">
      <summary>연결된 <see cref="T:System.Configuration.ConfigurationElement" /> 개체의 유효성을 검사하는 데 사용되는 개체를 가져옵니다.</summary>
      <returns>연결된 <see cref="T:System.Configuration.ConfigurationElement" /> 개체의 유효성을 검사하는 데 사용되는 개체입니다.</returns>
    </member>
    <member name="T:System.Configuration.ExeConfigurationFileMap">
      <summary>.exe 애플리케이션의 구성 파일 매핑을 정의합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.ExeConfigurationFileMap.#ctor">
      <summary>
        <see cref="T:System.Configuration.ExeConfigurationFileMap" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.ExeConfigurationFileMap.#ctor(System.String)">
      <summary>지정된 컴퓨터 구성 파일 이름을 사용하여 <see cref="T:System.Configuration.ExeConfigurationFileMap" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="machineConfigFileName">전체 물리적 경로를 포함하는 컴퓨터 구성 파일 이름입니다(예: <c>c:\Windows\Microsoft.NET\Framework\v2.0.50727\CONFIG\machine.config</c>).</param>
    </member>
    <member name="M:System.Configuration.ExeConfigurationFileMap.Clone">
      <summary>기존 <see cref="T:System.Configuration.ExeConfigurationFileMap" /> 개체의 복사본을 만듭니다.</summary>
      <returns>
        <see cref="T:System.Configuration.ExeConfigurationFileMap" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.ExeConfigurationFileMap.ExeConfigFilename">
      <summary>구성 파일의 이름을 가져오거나 설정합니다.</summary>
      <returns>구성 파일 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.ExeConfigurationFileMap.LocalUserConfigFilename">
      <summary>로컬 사용자의 구성 파일 이름을 가져오거나 설정합니다.</summary>
      <returns>구성 파일 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.ExeConfigurationFileMap.RoamingUserConfigFilename">
      <summary>로밍 사용자의 구성 파일 이름을 가져오거나 설정합니다.</summary>
      <returns>구성 파일 이름입니다.</returns>
    </member>
    <member name="T:System.Configuration.ExeContext">
      <summary>현재 애플리케이션의 경로 컨텍스트를 관리합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="P:System.Configuration.ExeContext.ExePath">
      <summary>애플리케이션에 대한 현재 경로를 가져옵니다.</summary>
      <returns>현재 경로를 포함하는 문자열 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.ExeContext.UserLevel">
      <summary>현재 애플리케이션의 경로 수준을 나타내는 개체를 가져옵니다.</summary>
      <returns>현재 애플리케이션의 경로 수준을 나타내는 <see cref="T:System.Configuration.ConfigurationUserLevel" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Configuration.GenericEnumConverter">
      <summary>문자열과 열거형 형식 간에 변환을 수행합니다.</summary>
    </member>
    <member name="M:System.Configuration.GenericEnumConverter.#ctor(System.Type)">
      <summary>
        <see cref="T:System.Configuration.GenericEnumConverter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="typeEnum">변환할 열거형 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeEnum" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Configuration.GenericEnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
        <see cref="T:System.String" />을 <see cref="T:System.Enum" /> 형식으로 변환합니다.</summary>
      <param name="ctx">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="ci">변환 중 사용되는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <param name="data">변환할 <see cref="T:System.String" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="data" />가 null이거나 빈 문자열("")인 경우  
  
또는 
 <paramref name="data" />가 숫자 문자로 시작하는 경우  
  
또는 
 <paramref name="data" />에 공백이 포함된 경우</exception>
      <returns>
        <paramref name="data" /> 매개 변수를 나타내는 <see cref="T:System.Enum" /> 형식입니다.</returns>
    </member>
    <member name="M:System.Configuration.GenericEnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <see cref="T:System.Enum" /> 형식을 <see cref="T:System.String" /> 값으로 변환합니다.</summary>
      <param name="ctx">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="ci">변환 중 사용되는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <param name="value">변환할 대상 값입니다.</param>
      <param name="type">변환할 대상 형식입니다.</param>
      <returns>
        <paramref name="value" /> 매개 변수를 나타내는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.IApplicationSettingsProvider">
      <summary>클라이언트 기반 애플리케이션 설정 공급자의 확장 기능을 정의합니다.</summary>
    </member>
    <member name="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)">
      <summary>이전 버전의 동일한 애플리케이션에 대한 지정된 설정 속성의 값을 반환합니다.</summary>
      <param name="context">현재 애플리케이션의 용도를 설명하는 <see cref="T:System.Configuration.SettingsContext" />입니다.</param>
      <param name="property">값이 반환될 <see cref="T:System.Configuration.SettingsProperty" />입니다.</param>
      <returns>이전 버전의 애플리케이션에서 마지막으로 설정된 지정된 속성 설정의 값을 포함하는 <see cref="T:System.Configuration.SettingsPropertyValue" />이거나, 설정을 찾을 수 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)">
      <summary>지정된 애플리케이션과 연결된 애플리케이션 설정을 기본값으로 다시 설정합니다.</summary>
      <param name="context">현재 애플리케이션의 용도를 설명하는 <see cref="T:System.Configuration.SettingsContext" />입니다.</param>
    </member>
    <member name="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <summary>애플리케이션이 업그레이드되었음을 공급자에게 알립니다. 이를 통해 공급자는 저장된 설정을 적절하게 업그레이드할 수 있습니다.</summary>
      <param name="context">현재 애플리케이션의 용도를 설명하는 <see cref="T:System.Configuration.SettingsContext" />입니다.</param>
      <param name="properties">값이 검색될 설정 속성 그룹을 포함하는 <see cref="T:System.Configuration.SettingsPropertyCollection" />입니다.</param>
    </member>
    <member name="T:System.Configuration.IConfigurationSectionHandler">
      <summary>특정 구성 섹션에 대한 액세스를 처리합니다.</summary>
    </member>
    <member name="M:System.Configuration.IConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary>구성 섹션 처리기를 만듭니다.</summary>
      <param name="parent">부모 개체입니다.</param>
      <param name="configContext">구성 컨텍스트 개체입니다.</param>
      <param name="section">섹션 XML 노드입니다.</param>
      <returns>만들어진 섹션 처리기 개체입니다.</returns>
    </member>
    <member name="T:System.Configuration.IConfigurationSystem">
      <summary>표준 구성 메서드를 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.IConfigurationSystem.GetConfig(System.String)">
      <summary>지정된 구성을 가져옵니다.</summary>
      <param name="configKey">구성 키입니다.</param>
      <returns>구성을 나타내는 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.IConfigurationSystem.Init">
      <summary>초기화에 사용됩니다.</summary>
    </member>
    <member name="T:System.Configuration.IdnElement">
      <summary>
        <see cref="T:System.Uri" /> 클래스에서 IDN(International Domain Name) 처리에 대한 구성 설정을 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.IdnElement.#ctor">
      <summary>
        <see cref="T:System.Configuration.IdnElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Configuration.IdnElement.Enabled">
      <summary>
        <see cref="T:System.Configuration.IdnElement" /> 구성 설정의 값을 가져오거나 설정합니다.</summary>
      <returns>IDN 처리에 대한 현재 구성 설정을 포함하는 <see cref="T:System.UriIdnScope" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.IgnoreSection">
      <summary>
        <see cref="N:System.Configuration" /> 형식으로 처리되지 않는 구성 섹션에 대한 래퍼 형식 정의를 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.IgnoreSection.#ctor">
      <summary>
        <see cref="T:System.Configuration.IgnoreSection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Configuration.IgnoreSectionHandler">
      <summary>
        <see cref="N:System.Configuration" /> 형식으로 처리되지 않는 구성 섹션에 대한 레거시 섹션 처리기 정의를 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.IgnoreSectionHandler.#ctor">
      <summary>
        <see cref="T:System.Configuration.IgnoreSectionHandler" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.IgnoreSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary>새 구성 처리기를 만들고 지정된 구성 개체를 섹션 처리기 컬렉션에 추가합니다.</summary>
      <param name="parent">해당 상위 구성 섹션의 구성 설정입니다.</param>
      <param name="configContext">구성 섹션 처리기가 해당 구성 값을 계산하는 가상 경로입니다. 보통 이 매개 변수는 예약되며 <see langword="null" />입니다.</param>
      <param name="section">처리할 구성 정보를 포함하는 <see cref="T:System.Xml.XmlNode" />입니다. 구성 섹션의 XML 내용에 직접 액세스할 수 있도록 합니다.</param>
      <returns>만들어진 구성 처리기 개체입니다.</returns>
    </member>
    <member name="T:System.Configuration.InfiniteIntConverter">
      <summary>문자열과 표준 무한 값 또는 정수 값 간에 변환을 수행합니다.</summary>
    </member>
    <member name="M:System.Configuration.InfiniteIntConverter.#ctor">
      <summary>
        <see cref="T:System.Configuration.InfiniteIntConverter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.InfiniteIntConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
        <see cref="T:System.String" />를 <see cref="T:System.Int32" />로 변환합니다.</summary>
      <param name="ctx">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="ci">변환 중 사용되는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <param name="data">변환할 <see cref="T:System.String" /> 개체입니다.</param>
      <returns>
        <paramref name="data" /> 매개 변수가 <see cref="F:System.Int32.MaxValue" /> "infinite"이면 <see cref="T:System.String" />이고, 그렇지 않으면 <paramref name="data" /> 매개 변수 정수 값을 나타내는 <see cref="T:System.Int32" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.InfiniteIntConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <see cref="T:System.Int32" />를 <see cref="T:System.String" />으로 변환합니다.</summary>
      <param name="ctx">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="ci">변환 중 사용되는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <param name="value">변환할 대상 값입니다.</param>
      <param name="type">변환할 대상 형식입니다.</param>
      <returns>
        <paramref name="value" />가 <see cref="T:System.String" />이면 <see cref="F:System.Int32.MaxValue" /> "infinite"이고, 그렇지 않으면 <paramref name="value" /> 매개 변수를 나타내는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.InfiniteTimeSpanConverter">
      <summary>문자열과 표준 무한 <see cref="T:System.TimeSpan" /> 값 간에 변환을 수행합니다.</summary>
    </member>
    <member name="M:System.Configuration.InfiniteTimeSpanConverter.#ctor">
      <summary>
        <see cref="T:System.Configuration.InfiniteTimeSpanConverter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.InfiniteTimeSpanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
        <see cref="T:System.String" /> 를 <see cref="T:System.TimeSpan" />로 변환합니다.</summary>
      <param name="ctx">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="ci">변환 중 사용되는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <param name="data">변환할 <see cref="T:System.String" /> 개체입니다.</param>
      <returns>
        <paramref name="data" /> 매개 변수가 <see cref="F:System.TimeSpan.MaxValue" /> infinite이면 <see cref="T:System.String" />이고, 그렇지 않으면 분 단위로 <paramref name="data" /> 매개 변수를 나타내는 <see cref="T:System.TimeSpan" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.InfiniteTimeSpanConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <see cref="T:System.TimeSpan" /> 를 <see cref="T:System.String" />로 변환합니다.</summary>
      <param name="ctx">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="ci">개체 변환 중 사용되는 <see cref="T:System.Globalization.CultureInfo" />입니다.</param>
      <param name="value">변환할 값입니다.</param>
      <param name="type">변환 형식입니다.</param>
      <returns>
        <paramref name="value" /> 매개 변수가 <see cref="T:System.String" />이면 <see cref="F:System.TimeSpan.MaxValue" /> "infinite"이고, 그렇지 않으면 분 단위로 <paramref name="value" /> 매개 변수를 나타내는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.IntegerValidator">
      <summary>
        <see cref="T:System.Int32" /> 값의 유효성을 검사합니다.</summary>
    </member>
    <member name="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Configuration.IntegerValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="minValue">최소값을 지정하는 <see cref="T:System.Int32" /> 개체입니다.</param>
      <param name="maxValue">최대값을 지정하는 <see cref="T:System.Int32" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)">
      <summary>
        <see cref="T:System.Configuration.IntegerValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="minValue">최소값을 지정하는 <see cref="T:System.Int32" /> 개체입니다.</param>
      <param name="maxValue">최대값을 지정하는 <see cref="T:System.Int32" /> 개체입니다.</param>
      <param name="rangeIsExclusive">유효성 검사 범위를 제외로 지정하려면 <see langword="true" />입니다. 포함은 유효성을 검사할 값이 지정된 범위 내에 있어야 함을 나타냅니다. 제외는 값이 최소값보다 작거나 최대값보다 커야 함을 나타냅니다.</param>
    </member>
    <member name="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)">
      <summary>
        <see cref="T:System.Configuration.IntegerValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="minValue">정수 값의 최소 길이를 지정하는 <see cref="T:System.Int32" /> 개체입니다.</param>
      <param name="maxValue">정수 값의 최대 길이를 지정하는 <see cref="T:System.Int32" /> 개체입니다.</param>
      <param name="rangeIsExclusive">유효성 검사 범위가 독점적인지 여부를 지정하는 <see cref="T:System.Boolean" /> 값입니다.</param>
      <param name="resolution">일치되어야 하는 값을 지정하는 <see cref="T:System.Int32" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="resolution" />가 <see langword="0" />보다 작은 경우  
  
또는 
 <paramref name="minValue" />가 <paramref name="maxValue" />보다 큰 경우</exception>
    </member>
    <member name="M:System.Configuration.IntegerValidator.CanValidate(System.Type)">
      <summary>개체 형식의 유효성을 검사할 수 있는지 여부를 확인합니다.</summary>
      <param name="type">개체의 형식입니다.</param>
      <returns>
        <paramref name="type" /> 매개 변수가 <see cref="T:System.Int32" />와 일치하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.IntegerValidator.Validate(System.Object)">
      <summary>개체의 값이 유효한지 여부를 확인합니다.</summary>
      <param name="value">유효성을 검사할 값입니다.</param>
    </member>
    <member name="T:System.Configuration.IntegerValidatorAttribute">
      <summary>구성 속성에 대한 정수의 유효성을 검사하도록 .NET Framework에 선언적으로 지시합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.IntegerValidatorAttribute.#ctor">
      <summary>
        <see cref="T:System.Configuration.IntegerValidatorAttribute" /> 클래스의 새 인스턴스를 만듭니다.</summary>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.ExcludeRange">
      <summary>
        <see cref="P:System.Configuration.IntegerValidatorAttribute.MinValue" /> 및 <see cref="P:System.Configuration.IntegerValidatorAttribute.MaxValue" /> 속성 값으로 정의된 범위에 정수를 포함시킬지 아니면 제외시킬지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>값을 제외해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.MaxValue">
      <summary>속성에 허용되는 최대값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">선택한 값이 <see cref="P:System.Configuration.IntegerValidatorAttribute.MinValue" />보다 작은 경우</exception>
      <returns>허용되는 최대값을 나타내는 정수입니다.</returns>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.MinValue">
      <summary>속성에 허용되는 최소값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">선택한 값이 <see cref="P:System.Configuration.IntegerValidatorAttribute.MaxValue" />보다 큰 경우</exception>
      <returns>허용되는 최소값을 나타내는 정수입니다.</returns>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.ValidatorInstance">
      <summary>
        <see cref="T:System.Configuration.IntegerValidator" /> 클래스의 인스턴스를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 유효성 검사기 인스턴스입니다.</returns>
    </member>
    <member name="T:System.Configuration.Internal.DelegatingConfigHost">
      <summary>
        <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> 인터페이스의 모든 멤버를 호스트의 다른 인스턴스에 위임합니다.</summary>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.#ctor">
      <summary>
        <see cref="T:System.Configuration.Internal.DelegatingConfigHost" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.CreateConfigurationContext(System.String,System.String)">
      <summary>새 구성 컨텍스트를 만듭니다.</summary>
      <param name="configPath">구성 파일의 경로를 나타내는 문자열입니다.</param>
      <param name="locationSubPath">위치 하위 경로를 나타내는 문자열입니다.</param>
      <returns>새 구성 컨텍스트를 나타내는 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.CreateDeprecatedConfigContext(System.String)">
      <summary>사용되지 않는 구성 컨텍스트를 만듭니다.</summary>
      <param name="configPath">구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns>사용되지 않는 구성 컨텍스트를 나타내는 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.DecryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary>암호화된 구성 섹션을 해독합니다.</summary>
      <param name="encryptedXml">구성 파일의 암호화된 섹션입니다.</param>
      <param name="protectionProvider">보호된 구성 데이터를 암호화하고 암호 해독하는 공급자를 포함하는 개체입니다.</param>
      <param name="protectedConfigSection">
        <c>configProtectedData</c> 구성 섹션에 프로그래밍 방식으로 액세스할 수 있는 개체입니다.</param>
      <returns>해독된 구성 섹션을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.DeleteStream(System.String)">
      <summary>구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체를 삭제합니다.</summary>
      <param name="streamName">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름입니다.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.EncryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary>구성 개체의 섹션을 암호화합니다.</summary>
      <param name="clearTextXml">암호화되지 않은 구성 섹션입니다.</param>
      <param name="protectionProvider">보호된 구성 데이터를 암호화하고 암호 해독하는 공급자를 포함하는 개체입니다.</param>
      <param name="protectedConfigSection">
        <c>configProtectedData</c> 구성 섹션에 프로그래밍 방식으로 액세스할 수 있는 개체입니다.</param>
      <returns>구성 개체의 암호화된 섹션을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetConfigPathFromLocationSubPath(System.String,System.String)">
      <summary>위치 하위 경로를 기반으로 구성 경로를 반환합니다.</summary>
      <param name="configPath">구성 파일의 경로를 나타내는 문자열입니다.</param>
      <param name="locationSubPath">위치 하위 경로를 나타내는 문자열입니다.</param>
      <returns>구성 경로를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetConfigType(System.String,System.Boolean)">
      <summary>구성의 형식을 나타내는 <see cref="T:System.Type" />을 반환합니다.</summary>
      <param name="typeName">구성 형식을 나타내는 문자열입니다.</param>
      <param name="throwOnError">오류가 발생하는 경우 예외가 throw되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns>구성의 형식을 나타내는 <see cref="T:System.Type" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetConfigTypeName(System.Type)">
      <summary>구성 개체의 형식 이름을 나타내는 문자열을 반환합니다.</summary>
      <param name="t">
        <see cref="T:System.Type" /> 개체입니다.</param>
      <returns>구성 개체의 형식 이름을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetRestrictedPermissions(System.Configuration.Internal.IInternalConfigRecord,System.Security.PermissionSet@,System.Boolean@)">
      <summary>호스트 개체에서 사용할 수 있는 경우 지정된 권한 집합을 설정합니다.</summary>
      <param name="configRecord">
        <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 개체입니다.</param>
      <param name="permissionSet">
        <see cref="T:System.Security.PermissionSet" /> 개체입니다.</param>
      <param name="isHostReady">호스트에서 초기화를 마쳤으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetStreamName(System.String)">
      <summary>구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름을 반환합니다.</summary>
      <param name="configPath">구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns>구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetStreamNameForConfigSource(System.String,System.String)">
      <summary>구성 소스에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름을 반환합니다.</summary>
      <param name="streamName">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름입니다.</param>
      <param name="configSource">구성 소스를 나타내는 문자열입니다.</param>
      <returns>구성 소스에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetStreamVersion(System.String)">
      <summary>구성 파일에서 I/O 작업을 수행하는 <see cref="P:System.Diagnostics.FileVersionInfo.FileVersion" /> 개체의 버전을 나타내는 <see cref="T:System.IO.Stream" /> 개체를 반환합니다.</summary>
      <param name="streamName">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름입니다.</param>
      <returns>구성 파일에서 I/O 작업을 수행하는 <see cref="P:System.Diagnostics.FileVersionInfo.FileVersion" /> 개체의 버전을 나타내는 <see cref="T:System.IO.Stream" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.Impersonate">
      <summary>가장하도록 호스트에 지시하고 .NET Framework에서 내부적으로 필요한 <see cref="T:System.IDisposable" /> 개체를 반환합니다.</summary>
      <returns>
        <see cref="T:System.IDisposable" /> 값입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.Init(System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary>구성 호스트를 초기화합니다.</summary>
      <param name="configRoot">
        <see cref="T:System.Configuration.Internal.IInternalConfigRoot" /> 개체입니다.</param>
      <param name="hostInitParams">구성 호스트 초기화에 사용되는 값을 포함하는 매개 변수 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.InitForConfiguration(System.String@,System.String@,System.String@,System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary>구성을 위해 호스트를 초기화합니다.</summary>
      <param name="locationSubPath">위치 하위 경로를 나타내는 문자열이며 참조로 전달됩니다.</param>
      <param name="configPath">구성 파일의 경로를 나타내는 문자열입니다.</param>
      <param name="locationConfigPath">위치 구성 경로입니다.</param>
      <param name="configRoot">구성 루트 요소입니다.</param>
      <param name="hostInitConfigurationParams">호스트를 초기화하는 데 사용되는 매개 변수를 나타내는 매개 변수 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsAboveApplication(System.String)">
      <summary>구성이 구성 계층 구조에서 애플리케이션 구성 위에 있는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="configPath">구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns>구성이 구성 계층 구조에서 애플리케이션 구성 위에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsConfigRecordRequired(System.String)">
      <summary>구성 레코드가 호스트 구성 초기화에 필요한지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="configPath">구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns>구성 레코드가 호스트 구성 초기화에 필요하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition)">
      <summary>호스트 구성에서 정의를 제한하거나 허용합니다.</summary>
      <param name="configPath">구성 파일의 경로를 나타내는 문자열입니다.</param>
      <param name="allowDefinition">
        <see cref="T:System.Configuration.ConfigurationAllowDefinition" /> 개체</param>
      <param name="allowExeDefinition">
        <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" /> 개체</param>
      <returns>호스트 구성에서 정의의 허용 또는 제한에 성공했으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsFile(System.String)">
      <summary>
        <see cref="T:System.IO.Stream" /> 개체에서 구성 파일을 읽는 데 사용하는 파일 경로가 올바른 경로인지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="streamName">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름입니다.</param>
      <returns>
        <see cref="T:System.IO.Stream" /> 개체에서 구성 파일을 읽는 데 사용하는 경로가 올바른 경로이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsFullTrustSectionWithoutAptcaAllowed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>구성 섹션에서 완전히 신뢰된 코드 액세스 보안 수준이 필요하고 <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> 특성을 통해 암시적 링크 요청을 사용하지 않는 것을 허용하지 않는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="configRecord">
        <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 개체</param>
      <returns>구성 섹션에서 완전히 신뢰된 코드 액세스 보안 수준이 필요하고 <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> 특성을 통해 암시적 링크 요청을 사용하지 않는 것을 허용하지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsInitDelayed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>구성 개체의 초기화가 지연되는 것으로 간주되는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="configRecord">
        <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 개체</param>
      <returns>구성 개체의 초기화가 지연되는 것으로 간주되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsLocationApplicable(System.String)">
      <summary>구성 개체에서 위치 태그를 지원하는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="configPath">구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns>구성 개체에서 위치 태그를 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsSecondaryRoot(System.String)">
      <summary>구성 경로가 루트로 내용을 처리해야 하는 구성 노드의 경로인지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="configPath">구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns>구성 경로가 루트로 내용을 처리해야 하는 구성 노드의 경로이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsTrustedConfigPath(System.String)">
      <summary>구성 경로가 신뢰되는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="configPath">구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns>구성 경로가 신뢰되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForRead(System.String)">
      <summary>구성 파일을 읽기 위해 <see cref="T:System.IO.Stream" /> 개체를 엽니다.</summary>
      <param name="streamName">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름입니다.</param>
      <returns>
        <paramref name="streamName" />에서 지정된 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForRead(System.String,System.Boolean)">
      <summary>구성 파일을 읽기 위해 <see cref="T:System.IO.Stream" /> 개체를 엽니다.</summary>
      <param name="streamName">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름입니다.</param>
      <param name="assertPermissions">사용 권한을 어설션하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns>
        <paramref name="streamName" />에서 지정된 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@)">
      <summary>구성 파일에 쓰거나 구성 파일을 만드는 데 사용되는 임시 파일에 쓰기 위해 <see cref="T:System.IO.Stream" /> 개체를 엽니다. <see cref="T:System.IO.Stream" /> 개체가 파일 특성을 복사하는 데 사용할 템플릿으로 지정될 수 있도록 합니다.</summary>
      <param name="streamName">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름입니다.</param>
      <param name="templateStreamName">파일 특성을 복사할 템플릿인 <see cref="T:System.IO.Stream" /> 개체의 이름입니다.</param>
      <param name="writeContext">
        <see cref="T:System.IO.Stream" /> 개체의 쓰기 컨텍스트이며 참조로 전달됩니다.</param>
      <returns>
        <see cref="T:System.IO.Stream" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@,System.Boolean)">
      <summary>구성 파일에 쓰기 위해 <see cref="T:System.IO.Stream" /> 개체를 엽니다. <see cref="T:System.IO.Stream" /> 개체가 파일 특성을 복사하는 데 사용할 템플릿으로 지정될 수 있도록 합니다.</summary>
      <param name="streamName">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름입니다.</param>
      <param name="templateStreamName">파일 특성을 복사할 템플릿인 <see cref="T:System.IO.Stream" /> 개체의 이름입니다.</param>
      <param name="writeContext">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 쓰기 컨텍스트이며 참조로 전달됩니다.</param>
      <param name="assertPermissions">사용 권한을 어설션하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns>
        <paramref name="streamName" /> 매개 변수에서 지정한 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.PrefetchAll(System.String,System.String)">
      <summary>전체 구성 파일을 지정된 <see cref="T:System.IO.Stream" /> 개체에서 읽을 수 있는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="configPath">구성 파일의 경로를 나타내는 문자열입니다.</param>
      <param name="streamName">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름입니다.</param>
      <returns>전체 구성 파일을 <paramref name="streamName" />으로 지정된 <see cref="T:System.IO.Stream" /> 개체에서 읽을 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.PrefetchSection(System.String,System.String)">
      <summary>연결된 구성 파일의 지정된 섹션을 읽도록 <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> 개체에 지시합니다.</summary>
      <param name="sectionGroupName">구성 파일에 있는 섹션 그룹의 이름을 나타내는 문자열입니다.</param>
      <param name="sectionName">구성 파일에 있는 섹션의 이름을 나타내는 문자열입니다.</param>
      <returns>
        <paramref name="sectionGroupName" /> 및 <paramref name="sectionName" /> 매개 변수로 지정된 구성 파일의 섹션을 <see cref="T:System.IO.Stream" /> 개체에서 읽을 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.RefreshConfigPaths">
      <summary>구성 경로를 새로 고치는 위임된 호스트의 메서드를 호출합니다.</summary>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.RequireCompleteInit(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>새 구성 레코드에 완전한 초기화가 필요함을 나타냅니다.</summary>
      <param name="configRecord">
        <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.StartMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary>연결된 <see cref="T:System.IO.Stream" /> 개체에서 구성 파일의 변경 사항을 모니터링하도록 호스트에 지시합니다.</summary>
      <param name="streamName">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름입니다.</param>
      <param name="callback">구성 파일의 변경 사항을 나타내는 반환된 데이터를 받을 <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> 개체입니다.</param>
      <returns>변경된 구성 설정을 포함하는 <see cref="T:System.Object" /> 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.StopMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary>연결된 <see cref="T:System.IO.Stream" /> 개체에서 구성 파일의 변경 사항을 모니터링하는 작업을 중지하도록 호스트에 지시합니다.</summary>
      <param name="streamName">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름입니다.</param>
      <param name="callback">
        <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.VerifyDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition,System.Configuration.Internal.IConfigErrorInfo)">
      <summary>구성 정의가 구성 레코드에 허용되는지 확인합니다.</summary>
      <param name="configPath">구성 파일의 경로를 나타내는 문자열입니다.</param>
      <param name="allowDefinition">
        <see cref="P:System.Configuration.SectionInformation.AllowDefinition" /> 개체입니다.</param>
      <param name="allowExeDefinition">
        <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" /> 개체입니다.</param>
      <param name="errorInfo">
        <see cref="T:System.Configuration.Internal.IConfigErrorInfo" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.WriteCompleted(System.String,System.Boolean,System.Object)">
      <summary>구성 파일에 대한 쓰기가 모두 완료되었음을 나타냅니다.</summary>
      <param name="streamName">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름입니다.</param>
      <param name="success">구성 파일에 대한 쓰기가 성공적으로 완료되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="writeContext">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 쓰기 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.WriteCompleted(System.String,System.Boolean,System.Object,System.Boolean)">
      <summary>구성 파일에 대한 쓰기가 모두 완료되었음을 나타내고 권한이 어설션되는지 여부를 지정합니다.</summary>
      <param name="streamName">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름입니다.</param>
      <param name="success">쓰기가 성공적으로 완료되었음을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="writeContext">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 쓰기 컨텍스트입니다.</param>
      <param name="assertPermissions">사용 권한을 어설션하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.HasLocalConfig">
      <summary>위임된 호스트에 로컬 구성이 있는지 여부를 확인합니다.</summary>
      <returns>
        <see langword="true" /> 현재 인스턴스에 로컬 구성이 있으면이 고, 그렇지 않으면입니다. 그렇지 않으면 <see langword="false" /> 입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.HasRoamingConfig">
      <summary>위임된 호스트에 로밍 구성이 있는지 여부를 확인합니다.</summary>
      <returns>
        <see langword="true" /> 현재 인스턴스에 로밍 구성이 있으면이 고, 그렇지 않으면입니다. 그렇지 않으면 <see langword="false" /> 입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.Host">
      <summary>
        <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> 개체를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.IsAppConfigHttp">
      <summary>애플리케이션 구성 파일이 로컬이 아닌 URI(즉, <c>http://</c>)에서 제공되는지 아니면 로컬 파일인지를 결정합니다.</summary>
      <returns>
        <see langword="true" /> 위임 된 호스트의 섹션이 <c>System.Net</c> 에 속하고 응용 프로그램의 구성 파일이를 사용 하 여 HTTP를 통해 다운로드 되 면 <see cref="T:System.Net.WebClient" /> 이 고, 그렇지 않으면 <see langword="false" /> 입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.IsRemote">
      <summary>구성이 원격 구성인지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>구성이 원격 구성이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsChangeNotifications">
      <summary>호스트 구성에서 변경 알림을 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>호스트에서 변경 알림을 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsLocation">
      <summary>호스트 구성에서 위치 태그를 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>호스트에서 위치 태그를 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsPath">
      <summary>호스트 구성에 경로 지원이 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>호스트 구성에 경로 지원이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsRefresh">
      <summary>호스트 구성에서 새로 고침을 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>호스트 구성에서 새로 고침을 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IConfigErrorInfo">
      <summary>.NET Framework에서 오류 구성 레코드 생성 작업을 지원하는 데 사용되는 인터페이스를 정의합니다.</summary>
    </member>
    <member name="P:System.Configuration.Internal.IConfigErrorInfo.Filename">
      <summary>구성 세부 정보와 관련된 파일 이름을 지정하는 문자열을 가져옵니다.</summary>
      <returns>파일 이름을 지정하는 문자열입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigErrorInfo.LineNumber">
      <summary>구성 세부 정보와 관련된 줄 번호를 지정하는 정수를 가져옵니다.</summary>
      <returns>줄 번호를 지정하는 정수입니다.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IConfigSystem">
      <summary>.NET Framework에서 구성 속성의 초기화를 지원하는 데 사용되는 인터페이스를 정의합니다.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IConfigSystem.Init(System.Type,System.Object[])">
      <summary>구성 개체를 초기화합니다.</summary>
      <param name="typeConfigHost">구성 호스트의 형식입니다.</param>
      <param name="hostInitParams">구성 호스트 매개 변수의 배열입니다.</param>
    </member>
    <member name="P:System.Configuration.Internal.IConfigSystem.Host">
      <summary>구성 호스트를 가져옵니다.</summary>
      <returns>.NET Framework에서 애플리케이션 구성 속성을 초기화하는 데 사용되는 <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigSystem.Root">
      <summary>구성 계층 구조의 루트를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.Internal.IInternalConfigRoot" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IConfigurationManagerHelper">
      <summary>.NET Framework에서 구성 관리를 지원하는 데 사용되는 인터페이스를 정의합니다.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IConfigurationManagerHelper.EnsureNetConfigLoaded">
      <summary>네트워킹 구성이 로드되었는지 확인합니다.</summary>
    </member>
    <member name="T:System.Configuration.Internal.IConfigurationManagerInternal">
      <summary>.NET Framework에서 구성 속성을 초기화하는 데 사용되는 인터페이스를 정의합니다.</summary>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ApplicationConfigUri">
      <summary>애플리케이션 경로와 관련된 구성 파일 이름을 가져옵니다.</summary>
      <returns>구성 파일 이름을 나타내는 문자열 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeLocalConfigDirectory">
      <summary>진입 어셈블리를 기준으로 애플리케이션의 로컬 구성 디렉터리를 가져옵니다.</summary>
      <returns>로컬 구성 디렉터리를 나타내는 문자열입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeLocalConfigPath">
      <summary>진입 어셈블리를 기준으로 애플리케이션의 로컬 구성 경로를 가져옵니다.</summary>
      <returns>애플리케이션의 로컬 구성 경로를 나타내는 문자열 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeProductName">
      <summary>진입 어셈블리를 기준으로 애플리케이션의 제품 이름을 가져옵니다.</summary>
      <returns>애플리케이션의 제품 이름을 나타내는 문자열 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeProductVersion">
      <summary>진입 어셈블리를 기준으로 애플리케이션의 제품 버전을 가져옵니다.</summary>
      <returns>애플리케이션의 제품 버전을 나타내는 문자열 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeRoamingConfigDirectory">
      <summary>진입 어셈블리를 기준으로 애플리케이션의 로밍 구성 디렉터리를 가져옵니다.</summary>
      <returns>애플리케이션의 로밍 구성 디렉터리를 나타내는 문자열 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeRoamingConfigPath">
      <summary>애플리케이션의 진입 어셈블리를 기준으로 로밍 사용자의 구성 경로를 가져옵니다.</summary>
      <returns>로밍 사용자의 구성 경로를 나타내는 문자열 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.MachineConfigPath">
      <summary>Machine.config 파일의 구성 경로를 가져옵니다.</summary>
      <returns>Machine.config 파일의 경로를 나타내는 문자열 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.SetConfigurationSystemInProgress">
      <summary>구성 시스템의 상태를 나타내는 값을 가져옵니다.</summary>
      <returns>구성 시스템이 초기화되고 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.SupportsUserConfig">
      <summary>사용자 구성 설정이 지원되는지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>구성 시스템에서 사용자 구성 설정을 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.UserConfigFilename">
      <summary>사용자 구성 설정을 저장하는 데 사용되는 파일의 이름을 가져옵니다.</summary>
      <returns>사용자 구성을 저장하는 데 사용되는 파일의 이름을 지정하는 문자열입니다.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigClientHost">
      <summary>내부 .NET Framework 인프라에서 구성을 사용자 지정하는 데 사용할 수 있는 인터페이스를 정의합니다.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.GetExeConfigPath">
      <summary>애플리케이션 구성 파일의 경로를 반환합니다.</summary>
      <returns>애플리케이션 구성 파일의 경로를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.GetLocalUserConfigPath">
      <summary>알려진 로컬 사용자 구성 파일의 경로를 나타내는 문자열을 반환합니다.</summary>
      <returns>알려진 로컬 사용자 구성 파일의 경로를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.GetRoamingUserConfigPath">
      <summary>알려진 로밍 사용자 구성 파일의 경로를 나타내는 문자열을 반환합니다.</summary>
      <returns>알려진 로밍 사용자 구성 파일의 경로를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.IsExeConfig(System.String)">
      <summary>구성 파일 경로가 현재 알려진 애플리케이션 구성 파일 경로와 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="configPath">애플리케이션 구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns>구성 경로를 나타내는 문자열이 애플리케이션 구성 파일의 경로와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.IsLocalUserConfig(System.String)">
      <summary>구성 파일 경로가 현재 알려진 로컬 사용자의 구성 파일 경로와 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="configPath">애플리케이션 구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns>구성 경로를 나타내는 문자열이 알려진 로컬 사용자 구성 파일의 경로와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.IsRoamingUserConfig(System.String)">
      <summary>구성 파일 경로가 현재 알려진 로밍 사용자의 구성 파일 경로와 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="configPath">애플리케이션 구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns>구성 경로를 나타내는 문자열이 알려진 로밍 사용자 구성 파일의 경로와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigConfigurationFactory">
      <summary>내부 디자인 타임 API에서 <see cref="T:System.Configuration.Configuration" /> 개체를 만드는 데 사용되는 인터페이스를 정의합니다.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigConfigurationFactory.Create(System.Type,System.Object[])">
      <summary>
        <see cref="T:System.Configuration.Configuration" /> 개체를 만들어 초기화합니다.</summary>
      <param name="typeConfigHost">만들 개체의 <see cref="T:System.Type" /> 개체의 <see cref="T:System.Configuration.Configuration" />입니다.</param>
      <param name="hostInitConfigurationParams">만들어진 <see cref="T:System.Object" /> 개체에 적용할 매개 변수를 포함하는 <see cref="T:System.Configuration.Configuration" />의 매개 변수 배열입니다.</param>
      <returns>
        <see cref="T:System.Configuration.Configuration" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigConfigurationFactory.NormalizeLocationSubPath(System.String,System.Configuration.Internal.IConfigErrorInfo)">
      <summary>구성 파일 경로의 위치 하위 경로를 정규화합니다.</summary>
      <param name="subPath">구성 파일의 경로를 나타내는 문자열입니다.</param>
      <param name="errorInfo">
        <see cref="T:System.Configuration.Internal.IConfigErrorInfo" />의 인스턴스이거나 <see langword="null" />입니다.</param>
      <returns>정규화된 하위 경로 문자열입니다.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigHost">
      <summary>내부 .NET 구조체에서 애플리케이션 구성 속성을 초기화하는 데 사용되는 인터페이스를 정의합니다.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.CreateConfigurationContext(System.String,System.String)">
      <summary>애플리케이션 구성의 <see cref="T:System.Configuration.ConfigurationElement" />에 대한 컨텍스트 개체를 만들어 반환합니다.</summary>
      <param name="configPath">애플리케이션 구성 파일의 경로를 나타내는 문자열입니다.</param>
      <param name="locationSubPath">구성 요소의 하위 경로 위치를 나타내는 문자열입니다.</param>
      <returns>애플리케이션 구성의 <see cref="T:System.Configuration.ConfigurationElement" /> 개체에 대한 컨텍스트 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.CreateDeprecatedConfigContext(System.String)">
      <summary>애플리케이션 구성의 사용되지 않는 컨텍스트 개체를 만들어 반환합니다.</summary>
      <param name="configPath">애플리케이션 구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns>애플리케이션 구성의 사용되지 않는 컨텍스트 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.DecryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary>암호화된 구성 섹션을 해독하고 문자열로 반환합니다.</summary>
      <param name="encryptedXml">구성 섹션을 나타내는 암호화된 XML 문자열입니다.</param>
      <param name="protectionProvider">
        <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 개체</param>
      <param name="protectedConfigSection">
        <see cref="T:System.Configuration.ProtectedConfigurationSection" /> 개체</param>
      <returns>문자열로 나타낸 해독된 구성 섹션입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.DeleteStream(System.String)">
      <summary>애플리케이션 구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체를 삭제합니다.</summary>
      <param name="streamName">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름을 나타내는 문자열입니다.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.EncryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary>구성 섹션을 암호화하고 문자열로 반환합니다.</summary>
      <param name="clearTextXml">암호화할 구성 섹션을 나타내는 XML 문자열입니다.</param>
      <param name="protectionProvider">
        <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 개체</param>
      <param name="protectedConfigSection">
        <see cref="T:System.Configuration.ProtectedConfigurationSection" /> 개체</param>
      <returns>문자열로 나타낸 암호화된 구성 섹션입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetConfigPathFromLocationSubPath(System.String,System.String)">
      <summary>위치 하위 경로를 기반으로 애플리케이션 구성 파일의 전체 경로를 반환합니다.</summary>
      <param name="configPath">애플리케이션 구성 파일의 경로를 나타내는 문자열입니다.</param>
      <param name="locationSubPath">구성 파일의 하위 경로 위치입니다.</param>
      <returns>애플리케이션 구성 파일의 전체 경로를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetConfigType(System.String,System.Boolean)">
      <summary>구성 개체의 형식을 나타내는 <see cref="T:System.Type" /> 개체를 반환합니다.</summary>
      <param name="typeName">형식 이름입니다.</param>
      <param name="throwOnError">오류 발생 시 예외를 throw하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns>구성 개체의 형식을 나타내는 <see cref="T:System.Type" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetConfigTypeName(System.Type)">
      <summary>구성의 형식을 나타내는 <see cref="T:System.Type" /> 개체의 형식 이름을 나타내는 문자열을 반환합니다.</summary>
      <param name="t">
        <see cref="T:System.Type" /> 개체입니다.</param>
      <returns>구성의 형식을 나타내는 <see cref="T:System.Type" /> 개체의 형식 이름을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetRestrictedPermissions(System.Configuration.Internal.IInternalConfigRecord,System.Security.PermissionSet@,System.Boolean@)">
      <summary>구성을 <see cref="T:System.Security.PermissionSet" /> 개체와 연결합니다.</summary>
      <param name="configRecord">
        <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 개체입니다.</param>
      <param name="permissionSet">구성과 연결할 <see cref="T:System.Security.PermissionSet" /> 개체입니다.</param>
      <param name="isHostReady">구성 호스트에서 연결된 권한을 만드는 작업을 완료했음을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetStreamName(System.String)">
      <summary>구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체와 연결된 구성 파일 이름을 나타내는 문자열을 반환합니다.</summary>
      <param name="configPath">애플리케이션 구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns>구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" />과 연결된 구성 파일 이름을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetStreamNameForConfigSource(System.String,System.String)">
      <summary>원격 구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체와 연결된 구성 파일 이름을 나타내는 문자열을 반환합니다.</summary>
      <param name="streamName">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체와 연결된 구성 파일 이름을 나타내는 문자열입니다.</param>
      <param name="configSource">원격 구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns>구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체와 연결된 구성 파일 이름을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetStreamVersion(System.String)">
      <summary>구성 파일과 연결된 <see cref="T:System.IO.Stream" /> 개체의 버전을 반환합니다.</summary>
      <param name="streamName">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름을 나타내는 문자열입니다.</param>
      <returns>구성 파일과 연결된 <see cref="T:System.IO.Stream" /> 개체의 버전입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.Impersonate">
      <summary>가장하도록 호스트에 지시하고 내부 .NET 구조체에 필요한 <see cref="T:System.IDisposable" /> 개체를 반환합니다.</summary>
      <returns>
        <see cref="T:System.IDisposable" /> 값입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.Init(System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary>구성 호스트를 초기화합니다.</summary>
      <param name="configRoot">구성 루트 개체입니다.</param>
      <param name="hostInitParams">구성 호스트 초기화에 사용되는 값을 포함하는 매개 변수 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.InitForConfiguration(System.String@,System.String@,System.String@,System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary>구성 개체를 초기화합니다.</summary>
      <param name="locationSubPath">구성 파일의 하위 경로 위치입니다.</param>
      <param name="configPath">애플리케이션 구성 파일의 경로를 나타내는 문자열입니다.</param>
      <param name="locationConfigPath">구성 경로의 위치를 나타내는 문자열입니다.</param>
      <param name="configRoot">
        <see cref="T:System.Configuration.Internal.IInternalConfigRoot" /> 개체</param>
      <param name="hostInitConfigurationParams">구성 호스트 초기화에 사용되는 값을 포함하는 매개 변수 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsAboveApplication(System.String)">
      <summary>구성 파일이 구성 계층 구조에서 애플리케이션 구성보다 높은 수준에 있는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="configPath">애플리케이션 구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns>구성 파일이 구성 계층 구조에서 애플리케이션 구성보다 높은 수준에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsConfigRecordRequired(System.String)">
      <summary>자식 레코드가 자식 구성 경로에 필요한지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="configPath">애플리케이션 구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns>자식 레코드가 자식 구성 경로에 필요하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition)">
      <summary>애플리케이션 구성 개체에 다른 <see cref="T:System.Type" /> 정의가 허용되는지 여부를 결정합니다.</summary>
      <param name="configPath">애플리케이션 구성 파일의 경로를 나타내는 문자열입니다.</param>
      <param name="allowDefinition">
        <see cref="T:System.Configuration.ConfigurationAllowDefinition" /> 개체입니다.</param>
      <param name="allowExeDefinition">
        <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" /> 개체입니다.</param>
      <returns>애플리케이션 구성 개체에 다른 <see cref="T:System.Type" /> 정의가 허용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsFile(System.String)">
      <summary>
        <see cref="T:System.IO.Stream" /> 개체에서 구성 파일을 읽는 데 사용하는 파일 경로가 올바른 경로인지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="streamName">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름을 나타내는 문자열입니다.</param>
      <returns>
        <see cref="T:System.IO.Stream" /> 개체에서 구성 파일을 읽는 데 사용하는 경로가 올바른 경로이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsFullTrustSectionWithoutAptcaAllowed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>구성 섹션에서 완전히 신뢰된 코드 액세스 보안 수준이 필요하고 <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> 특성을 통해 암시적 링크 요청을 사용하지 않는 것을 허용하지 않는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="configRecord">
        <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 개체</param>
      <returns>구성 섹션에서 완전히 신뢰된 코드 액세스 보안 수준이 필요하고 <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> 특성을 통해 암시적 링크 요청을 사용하지 않는 것을 허용하지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsInitDelayed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>구성 개체의 초기화가 지연되는 것으로 간주되는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="configRecord">
        <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 개체</param>
      <returns>구성 개체의 초기화가 지연되는 것으로 간주되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsLocationApplicable(System.String)">
      <summary>구성 개체에서 위치 태그를 지원하는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="configPath">애플리케이션 구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns>구성 개체에서 위치 태그를 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsSecondaryRoot(System.String)">
      <summary>구성 경로가 루트로 내용을 처리해야 하는 구성 노드의 경로인지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="configPath">애플리케이션 구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns>구성 경로가 루트로 내용을 처리해야 하는 구성 노드의 경로이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsTrustedConfigPath(System.String)">
      <summary>구성 경로가 신뢰되는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="configPath">애플리케이션 구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns>구성 경로가 신뢰되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForRead(System.String)">
      <summary>구성 파일을 읽기 위해 <see cref="T:System.IO.Stream" />을 엽니다.</summary>
      <param name="streamName">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름을 나타내는 문자열입니다.</param>
      <returns>
        <see cref="T:System.IO.Stream" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForRead(System.String,System.Boolean)">
      <summary>구성 파일을 읽기 위해 <see cref="T:System.IO.Stream" /> 개체를 엽니다.</summary>
      <param name="streamName">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름을 나타내는 문자열입니다.</param>
      <param name="assertPermissions">사용 권한을 어설션하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns>
        <paramref name="streamName" />에서 지정된 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@)">
      <summary>구성 파일에 쓰거나 구성 파일을 만드는 데 사용되는 임시 파일에 쓰기 위해 <see cref="T:System.IO.Stream" /> 개체를 엽니다. <see cref="T:System.IO.Stream" /> 개체가 파일 특성을 복사하는 데 사용할 템플릿으로 지정될 수 있도록 합니다.</summary>
      <param name="streamName">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름을 나타내는 문자열입니다.</param>
      <param name="templateStreamName">파일 특성을 복사할 템플릿인 <see cref="T:System.IO.Stream" /> 개체의 이름입니다.</param>
      <param name="writeContext">
        <see cref="T:System.IO.Stream" /> 개체의 쓰기 컨텍스트입니다.</param>
      <returns>
        <see cref="T:System.IO.Stream" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@,System.Boolean)">
      <summary>구성 파일에 쓰기 위해 <see cref="T:System.IO.Stream" /> 개체를 엽니다. <see cref="T:System.IO.Stream" /> 개체가 파일 특성을 복사하는 데 사용할 템플릿으로 지정될 수 있도록 합니다.</summary>
      <param name="streamName">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름을 나타내는 문자열입니다.</param>
      <param name="templateStreamName">파일 특성을 복사할 템플릿인 <see cref="T:System.IO.Stream" />의 이름입니다.</param>
      <param name="writeContext">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 쓰기 컨텍스트입니다.</param>
      <param name="assertPermissions">사용 권한을 어설션하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns>
        <paramref name="streamName" />에서 지정된 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.PrefetchAll(System.String,System.String)">
      <summary>전체 구성 파일을 지정된 <see cref="T:System.IO.Stream" /> 개체에서 읽을 수 있는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="configPath">애플리케이션 구성 파일의 경로를 나타내는 문자열입니다.</param>
      <param name="streamName">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름을 나타내는 문자열입니다.</param>
      <returns>전체 구성 파일을 <paramref name="streamName" />으로 지정된 <see cref="T:System.IO.Stream" /> 개체에서 읽을 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.PrefetchSection(System.String,System.String)">
      <summary>연결된 구성 파일의 지정된 섹션을 읽도록 <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> 개체에 지시합니다.</summary>
      <param name="sectionGroupName">구성 파일 섹션 그룹을 식별하는 이름을 나타내는 문자열입니다.</param>
      <param name="sectionName">구성 파일 섹션을 식별하는 이름을 나타내는 문자열입니다.</param>
      <returns>
        <paramref name="sectionGroupName" /> 및 <paramref name="sectionName" />으로 지정된 구성 파일의 섹션을 <see cref="T:System.IO.Stream" /> 개체에서 읽을 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.RequireCompleteInit(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>새 구성 레코드에 완전한 초기화가 필요함을 나타냅니다.</summary>
      <param name="configRecord">
        <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.StartMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary>연결된 <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> 개체에서 구성 파일의 변경 사항을 모니터링하도록 <see cref="T:System.IO.Stream" /> 개체에 지시합니다.</summary>
      <param name="streamName">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름을 나타내는 문자열입니다.</param>
      <param name="callback">구성 파일의 변경 사항을 나타내는 반환된 데이터를 받을 <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> 개체입니다.</param>
      <returns>변경된 구성 설정을 포함하는 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.StopMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary>연결된 <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> 개체에서 구성 파일의 변경 사항을 모니터링하는 작업을 중지하도록 <see cref="T:System.IO.Stream" /> 개체에 지시합니다.</summary>
      <param name="streamName">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름을 나타내는 문자열입니다.</param>
      <param name="callback">
        <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.VerifyDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition,System.Configuration.Internal.IConfigErrorInfo)">
      <summary>구성 정의가 구성 레코드에 허용되는지 확인합니다.</summary>
      <param name="configPath">애플리케이션 구성 파일의 경로를 나타내는 문자열입니다.</param>
      <param name="allowDefinition">
        <see cref="P:System.Configuration.SectionInformation.AllowDefinition" /> 개체입니다.</param>
      <param name="allowExeDefinition">
        <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" /> 개체입니다.</param>
      <param name="errorInfo">
        <see cref="T:System.Configuration.Internal.IConfigErrorInfo" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.WriteCompleted(System.String,System.Boolean,System.Object)">
      <summary>구성 파일에 대한 쓰기가 모두 완료되었음을 나타냅니다.</summary>
      <param name="streamName">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름을 나타내는 문자열입니다.</param>
      <param name="success">구성 파일에 대한 쓰기가 성공적으로 완료되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="writeContext">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 쓰기 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.WriteCompleted(System.String,System.Boolean,System.Object,System.Boolean)">
      <summary>구성 파일에 대한 쓰기가 모두 완료되었음을 나타내고 권한이 어설션되는지 여부를 지정합니다.</summary>
      <param name="streamName">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름을 나타내는 문자열입니다.</param>
      <param name="success">쓰기가 성공적으로 완료되었음을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="writeContext">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 쓰기 컨텍스트입니다.</param>
      <param name="assertPermissions">사용 권한을 어설션하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.IsRemote">
      <summary>구성이 원격 구성인지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>구성이 원격 구성이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsChangeNotifications">
      <summary>호스트 구성에서 변경 알림을 지원하는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>구성에서 변경 알림을 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsLocation">
      <summary>호스트 구성에서 위치 태그를 지원하는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>구성에서 위치 태그를 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsPath">
      <summary>호스트 구성에서 경로 태그를 지원하는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>구성에서 경로 태그를 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsRefresh">
      <summary>호스트 구성에서 구성 새로 고침을 지원하는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>구성에서 구성 새로 고침을 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigRecord">
      <summary>내부 .NET 구조체에서 새 구성 레코드를 만드는 작업을 지원하는 데 사용되는 인터페이스를 정의합니다.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.GetLkgSection(System.String)">
      <summary>LKG(마지막으로 사용한 올바른) 구성의 구성 섹션을 나타내는 개체를 반환합니다.</summary>
      <param name="configKey">구성 섹션의 키를 나타내는 문자열입니다.</param>
      <returns>
        <paramref name="configKey" />로 지정된 마지막으로 사용한 올바른 구성의 섹션을 나타내는 <see cref="T:System.Object" /> 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.GetSection(System.String)">
      <summary>구성 파일의 섹션을 나타내는 <see cref="T:System.Object" /> 인스턴스를 반환합니다.</summary>
      <param name="configKey">구성 섹션의 키를 나타내는 문자열입니다.</param>
      <returns>구성 파일의 섹션을 나타내는 <see cref="T:System.Object" /> 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.RefreshSection(System.String)">
      <summary>구성 개체의 지정된 섹션이 다시 초기화되도록 합니다.</summary>
      <param name="configKey">새로 고칠 구성 섹션의 키를 나타내는 문자열입니다.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.Remove">
      <summary>구성 레코드를 제거합니다.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.ThrowIfInitErrors">
      <summary>초기화하는 동안 오류가 발생하면 예외를 throw할 권한을 구성 개체에 부여합니다.</summary>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRecord.ConfigPath">
      <summary>구성 파일 경로를 나타내는 문자열을 가져옵니다.</summary>
      <returns>구성 파일 경로를 나타내는 문자열입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRecord.HasInitErrors">
      <summary>구성 개체를 초기화하는 동안 오류가 발생했는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>구성 개체를 초기화하는 동안 오류가 발생했으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRecord.StreamName">
      <summary>구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름을 반환합니다.</summary>
      <returns>구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름을 나타내는 문자열입니다.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigRoot">
      <summary>내부 .NET 구조체에서 구성 루트 개체를 지원하는 데 사용되는 인터페이스를 정의합니다.</summary>
    </member>
    <member name="E:System.Configuration.Internal.IInternalConfigRoot.ConfigChanged">
      <summary>
        <see cref="E:System.Configuration.Internal.IInternalConfigRoot.ConfigChanged" /> 개체의 <see cref="T:System.Configuration.Internal.IInternalConfigRoot" /> 이벤트를 처리하는 메서드를 나타냅니다.</summary>
    </member>
    <member name="E:System.Configuration.Internal.IInternalConfigRoot.ConfigRemoved">
      <summary>
        <see cref="E:System.Configuration.Internal.IInternalConfigRoot.ConfigRemoved" /> 개체의 <see cref="T:System.Configuration.Internal.IInternalConfigRoot" /> 이벤트를 처리하는 메서드를 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetConfigRecord(System.String)">
      <summary>구성 경로로 지정된 구성을 나타내는 <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 개체를 반환합니다.</summary>
      <param name="configPath">구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns>
        <paramref name="configPath" />로 지정된 구성을 나타내는 <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetSection(System.String,System.String)">
      <summary>구성 파일의 섹션에 있는 데이터를 나타내는 <see cref="T:System.Object" />를 반환합니다.</summary>
      <param name="section">구성 파일의 섹션을 나타내는 문자열입니다.</param>
      <param name="configPath">구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns>구성 파일의 섹션에 있는 데이터를 나타내는 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetUniqueConfigPath(System.String)">
      <summary>구성 데이터가 있는 가장 가까운 구성 부모의 파일 경로를 나타내는 값을 반환합니다.</summary>
      <param name="configPath">구성 파일의 경로입니다.</param>
      <returns>구성 데이터가 있는 가장 가까운 구성 부모의 파일 경로를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetUniqueConfigRecord(System.String)">
      <summary>지정된 구성 경로에 대한 고유 구성 레코드를 나타내는 <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 개체를 반환합니다.</summary>
      <param name="configPath">구성 파일의 경로입니다.</param>
      <returns>지정된 구성 경로에 대한 고유 구성 레코드를 나타내는 <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.Init(System.Configuration.Internal.IInternalConfigHost,System.Boolean)">
      <summary>구성 개체를 초기화합니다.</summary>
      <param name="host">
        <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> 개체입니다.</param>
      <param name="isDesignTime">디자인 타임이면 <see langword="true" />이고, 런타임이면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.RemoveConfig(System.String)">
      <summary>지정된 구성 경로의 모든 자식과 구성 레코드를 찾아 제거합니다.</summary>
      <param name="configPath">구성 파일의 경로입니다.</param>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRoot.IsDesignTime">
      <summary>구성이 디자인 타임 구성인지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>구성이 디자인 타임 구성이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigSettingsFactory">
      <summary>구성 시스템에서 <see cref="T:System.Configuration.ConfigurationSettings" /> 클래스를 설정하는 데 사용되는 인터페이스를 정의합니다.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSettingsFactory.CompleteInit">
      <summary>구성 시스템의 초기화가 완료되었음을 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSettingsFactory.SetConfigurationSystem(System.Configuration.Internal.IInternalConfigSystem,System.Boolean)">
      <summary>ASP.NET에 관련된 계층적 구성 설정 및 확장을 구성 시스템에 제공합니다.</summary>
      <param name="internalConfigSystem">
        <see cref="T:System.Configuration.Internal.IInternalConfigSystem" /> 클래스에서 사용하는 <see cref="T:System.Configuration.ConfigurationSettings" /> 개체입니다.</param>
      <param name="initComplete">구성 시스템의 초기화 프로세스가 완료되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigSystem">
      <summary>.NET Framework에서 애플리케이션 구성 속성을 초기화하는 데 사용되는 인터페이스를 정의합니다.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSystem.GetSection(System.String)">
      <summary>지정된 키를 기준으로 구성 개체를 반환합니다.</summary>
      <param name="configKey">구성 키 값입니다.</param>
      <returns>구성 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSystem.RefreshConfig(System.String)">
      <summary>지정된 섹션 이름을 기준으로 구성 시스템을 새로 고칩니다.</summary>
      <param name="sectionName">구성 섹션의 이름입니다.</param>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigSystem.SupportsUserConfig">
      <summary>사용자 구성이 지원되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>사용자 구성이 지원되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.Internal.InternalConfigEventArgs">
      <summary>.NET Framework 인프라에서 구성 이벤트에 대한 이벤트 인수를 지정할 수 있게 해주는 클래스를 정의합니다.</summary>
    </member>
    <member name="M:System.Configuration.Internal.InternalConfigEventArgs.#ctor(System.String)">
      <summary>
        <see cref="T:System.Configuration.Internal.InternalConfigEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="configPath">구성 경로입니다.</param>
    </member>
    <member name="P:System.Configuration.Internal.InternalConfigEventArgs.ConfigPath">
      <summary>
        <see cref="T:System.Configuration.Internal.InternalConfigEventArgs" /> 개체와 관련된 구성 경로를 가져오거나 설정합니다.</summary>
      <returns>구성 경로를 지정하는 문자열 값입니다.</returns>
    </member>
    <member name="T:System.Configuration.Internal.InternalConfigEventHandler">
      <summary>.NET Framework 인프라에서 구성 이벤트를 지원하는 데 사용되는 클래스를 정의합니다.</summary>
      <param name="sender">이벤트 소스 개체입니다.</param>
      <param name="e">구성 이벤트 인수입니다.</param>
    </member>
    <member name="T:System.Configuration.Internal.StreamChangeCallback">
      <summary>모니터링되는 스트림이 변경되었을 때 호스트에서 호출할 메서드를 나타냅니다.</summary>
      <param name="streamName">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름입니다.</param>
    </member>
    <member name="T:System.Configuration.IPersistComponentSettings">
      <summary>애플리케이션 설정을 저장하고 검색하는 컨트롤이나 라이브러리의 표준 기능을 정의합니다.</summary>
    </member>
    <member name="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings">
      <summary>컨트롤의 애플리케이션 설정을 해당 속성으로 읽어 들이고 컨트롤의 상태를 업데이트합니다.</summary>
    </member>
    <member name="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings">
      <summary>컨트롤의 애플리케이션 설정 속성을 기본값으로 다시 설정합니다.</summary>
    </member>
    <member name="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings">
      <summary>컨트롤의 애플리케이션 설정 속성을 유지합니다.</summary>
    </member>
    <member name="P:System.Configuration.IPersistComponentSettings.SaveSettings">
      <summary>컨트롤이 애플리케이션 설정 속성을 자동으로 유지할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>컨트롤이 상태를 자동으로 유지하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.IPersistComponentSettings.SettingsKey">
      <summary>컨트롤의 현재 인스턴스에 대한 애플리케이션 설정 키의 값을 가져오거나 설정합니다.</summary>
      <returns>컨트롤의 현재 인스턴스에 대한 설정 키를 포함하는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.IriParsingElement">
      <summary>
        <see cref="T:System.Uri" /> 클래스에서 IDN(International Resource Identifier) 처리에 대한 구성 설정을 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.IriParsingElement.#ctor">
      <summary>
        <see cref="T:System.Configuration.IriParsingElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Configuration.IriParsingElement.Enabled">
      <summary>
        <see cref="T:System.Configuration.IriParsingElement" /> 구성 설정의 값을 가져오거나 설정합니다.</summary>
      <returns>IRI(International Resource Identifier) 처리를 사용하고 있는지 여부를 나타내는 부울입니다.</returns>
    </member>
    <member name="T:System.Configuration.ISettingsProviderService">
      <summary>대체 애플리케이션 설정 공급자를 정의하기 위한 인터페이스를 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.ISettingsProviderService.GetSettingsProvider(System.Configuration.SettingsProperty)">
      <summary>지정된 설정 속성과 호환되는 설정 공급자를 반환합니다.</summary>
      <param name="property">serialization이 필요한 <see cref="T:System.Configuration.SettingsProperty" />입니다.</param>
      <returns>지정된 설정 속성을 유지할 수 있는 <see cref="T:System.Configuration.SettingsProvider" />가 있으면 해당 설정 공급자이고, 그렇지 않으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.KeyValueConfigurationCollection">
      <summary>
        <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 개체의 컬렉션을 포함합니다.</summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.#ctor">
      <summary>
        <see cref="T:System.Configuration.KeyValueConfigurationCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Add(System.Configuration.KeyValueConfigurationElement)">
      <summary>제공된 매개 변수를 기반으로 컬렉션에 <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 개체를 추가합니다.</summary>
      <param name="keyValue">
        <see cref="T:System.Configuration.KeyValueConfigurationElement" />
      </param>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Add(System.String,System.String)">
      <summary>제공된 매개 변수를 기반으로 컬렉션에 <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 개체를 추가합니다.</summary>
      <param name="key">키를 지정하는 문자열입니다.</param>
      <param name="value">값을 지정하는 문자열입니다.</param>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Clear">
      <summary>
        <see cref="T:System.Configuration.KeyValueConfigurationCollection" /> 컬렉션을 지웁니다.</summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.CreateNewElement">
      <summary>
        <see cref="M:System.Configuration.KeyValueConfigurationCollection.CreateNewElement" /> 메서드는 파생 클래스에서 재정의되는 경우 새 <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 개체를 만듭니다.</summary>
      <returns>새로 만든 <see cref="T:System.Configuration.KeyValueConfigurationElement" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary>파생 클래스에서 재정의될 때 지정된 구성 요소의 요소 키를 가져옵니다.</summary>
      <param name="element">키가 반환될 <see cref="T:System.Configuration.KeyValueConfigurationElement" />입니다.</param>
      <returns>지정된 <see cref="T:System.Configuration.KeyValueConfigurationElement" />의 키로 사용되는 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Remove(System.String)">
      <summary>컬렉션에서 <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 개체를 제거합니다.</summary>
      <param name="key">
        <paramref name="key" />를 지정하는 문자열입니다.</param>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.AllKeys">
      <summary>
        <see cref="T:System.Configuration.KeyValueConfigurationCollection" /> 컬렉션에 포함된 모든 항목에 대한 키를 가져옵니다.</summary>
      <returns>문자열 배열입니다.</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.Item(System.String)">
      <summary>제공된 매개 변수를 기반으로 <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 개체를 가져옵니다.</summary>
      <param name="key">컬렉션에 포함된 <see cref="T:System.Configuration.KeyValueConfigurationElement" />의 키입니다.</param>
      <returns>구성 요소 또는 키가 컬렉션에 없는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.Properties">
      <summary>구성 속성의 컬렉션을 가져옵니다.</summary>
      <returns>구성 속성의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.ThrowOnDuplicate">
      <summary>
        <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 컬렉션에 중복되는 <see cref="T:System.Configuration.KeyValueConfigurationCollection" /> 개체를 추가하려고 하면 예외가 throw되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see langword="true" />에 중복되는 <see cref="T:System.Configuration.KeyValueConfigurationElement" />를 추가하려고 할 때 예외가 throw되면 <see cref="T:System.Configuration.KeyValueConfigurationCollection" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.KeyValueConfigurationElement">
      <summary>키/값 쌍을 포함하는 구성 요소를 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationElement.#ctor(System.String,System.String)">
      <summary>제공된 매개 변수를 기반으로 <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="key">
        <see cref="T:System.Configuration.KeyValueConfigurationElement" />의 키입니다.</param>
      <param name="value">
        <see cref="T:System.Configuration.KeyValueConfigurationElement" />의 값입니다.</param>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationElement.Init">
      <summary>
        <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 개체를 초기 상태로 설정합니다.</summary>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationElement.Key">
      <summary>
        <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 개체의 키를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.KeyValueConfigurationElement" />의 키입니다.</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationElement.Properties">
      <summary>속성 컬렉션을 가져옵니다.</summary>
      <returns>요소에 대한 속성의 <see cref="T:System.Configuration.ConfigurationPropertyCollection" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationElement.Value">
      <summary>
        <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 개체의 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Configuration.KeyValueConfigurationElement" />의 값입니다.</returns>
    </member>
    <member name="T:System.Configuration.LocalFileSettingsProvider">
      <summary>애플리케이션 설정 클래스를 유지합니다.</summary>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.#ctor">
      <summary>
        <see cref="T:System.Configuration.LocalFileSettingsProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)">
      <summary>이전 버전의 동일한 애플리케이션에 대한 명명된 설정 속성의 값을 반환합니다.</summary>
      <param name="context">애플리케이션 설정 속성이 사용되는 곳에 대해 설명하는 <see cref="T:System.Configuration.SettingsContext" />입니다.</param>
      <param name="property">값이 반환될 <see cref="T:System.Configuration.SettingsProperty" />입니다.</param>
      <returns>애플리케이션 설정을 나타내는 <see cref="T:System.Configuration.SettingsPropertyValue" />가 있으면 해당 설정 속성 값이고, 그렇지 않으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <summary>지정된 애플리케이션 인스턴스와 설정 속성 그룹에 대한 설정 속성 값의 컬렉션을 반환합니다.</summary>
      <param name="context">현재 애플리케이션의 용도를 설명하는 <see cref="T:System.Configuration.SettingsContext" />입니다.</param>
      <param name="properties">값이 검색될 설정 속성 그룹을 포함하는 <see cref="T:System.Configuration.SettingsPropertyCollection" />입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">사용자 범위 설정이 발견되었지만 현재 구성이 애플리케이션 범위 설정만 지원하는 경우</exception>
      <returns>지정된 설정 속성 그룹에 대한 값을 포함하는 <see cref="T:System.Configuration.SettingsPropertyValueCollection" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>공급자를 초기화합니다.</summary>
      <param name="name">공급자의 이름입니다.</param>
      <param name="values">이 공급자에 대한 구성에서 지정된 공급자별 특성을 나타내는 이름/값 쌍의 컬렉션입니다.</param>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)">
      <summary>지정된 애플리케이션과 연결된 모든 애플리케이션 설정 속성을 기본값으로 다시 설정합니다.</summary>
      <param name="context">현재 애플리케이션의 용도를 설명하는 <see cref="T:System.Configuration.SettingsContext" />입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">사용자 범위 설정이 발견되었지만 현재 구성이 애플리케이션 범위 설정만 지원하는 경우</exception>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
      <summary>지정된 속성 설정 그룹의 값을 설정합니다.</summary>
      <param name="context">현재 애플리케이션의 용도를 설명하는 <see cref="T:System.Configuration.SettingsContext" />입니다.</param>
      <param name="values">설정할 속성 설정 그룹을 나타내는 <see cref="T:System.Configuration.SettingsPropertyValueCollection" />입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">사용자 범위 설정이 발견되었지만 현재 구성이 애플리케이션 범위 설정만 지원하는 경우  
  
 또는  
  
 구성 파일에 설정을 저장하는 동안 일반 오류가 발생한 경우</exception>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <summary>이전 버전의 동일한 애플리케이션에서 이전 사용자 범위 설정을 마이그레이션합니다.</summary>
      <param name="context">현재 애플리케이션의 용도를 설명하는 <see cref="T:System.Configuration.SettingsContext" />입니다.</param>
      <param name="properties">값이 검색될 설정 속성 그룹을 포함하는 <see cref="T:System.Configuration.SettingsPropertyCollection" />입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">사용자 범위 설정이 발견되었지만 현재 구성이 애플리케이션 범위 설정만 지원하는 경우  
  
 또는  
  
 이전 버전의 구성 파일에 액세스할 수 없는 경우</exception>
    </member>
    <member name="P:System.Configuration.LocalFileSettingsProvider.ApplicationName">
      <summary>현재 실행되는 애플리케이션의 이름을 가져오거나 설정합니다.</summary>
      <returns>애플리케이션의 표시 이름을 포함하는 문자열입니다.</returns>
    </member>
    <member name="T:System.Configuration.LongValidator">
      <summary>
        <see cref="T:System.Int64" /> 값의 유효성을 검사합니다.</summary>
    </member>
    <member name="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64)">
      <summary>
        <see cref="T:System.Configuration.LongValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="minValue">
        <see langword="long" /> 값의 최소 길이를 지정하는 <see cref="T:System.Int64" /> 값입니다.</param>
      <param name="maxValue">
        <see langword="long" /> 값의 최대 길이를 지정하는 <see cref="T:System.Int64" /> 값입니다.</param>
    </member>
    <member name="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean)">
      <summary>
        <see cref="T:System.Configuration.LongValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="minValue">
        <see langword="long" /> 값의 최소 길이를 지정하는 <see cref="T:System.Int64" /> 값입니다.</param>
      <param name="maxValue">
        <see langword="long" /> 값의 최대 길이를 지정하는 <see cref="T:System.Int64" /> 값입니다.</param>
      <param name="rangeIsExclusive">유효성 검사 범위가 독점적인지 여부를 지정하는 <see cref="T:System.Boolean" /> 값입니다.</param>
    </member>
    <member name="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean,System.Int64)">
      <summary>
        <see cref="T:System.Configuration.LongValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="minValue">
        <see langword="long" /> 값의 최소 길이를 지정하는 <see cref="T:System.Int64" /> 값입니다.</param>
      <param name="maxValue">
        <see langword="long" /> 값의 최대 길이를 지정하는 <see cref="T:System.Int64" /> 값입니다.</param>
      <param name="rangeIsExclusive">유효성 검사 범위가 독점적인지 여부를 지정하는 <see cref="T:System.Boolean" /> 값입니다.</param>
      <param name="resolution">일치되어야 하는 특정 값을 지정하는 <see cref="T:System.Int64" /> 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="resolution" />이 <see langword="0" />보다 작거나 같습니다.  
  
또는 
 <paramref name="maxValue" />가 <paramref name="minValue" />보다 작은 경우</exception>
    </member>
    <member name="M:System.Configuration.LongValidator.CanValidate(System.Type)">
      <summary>개체 형식의 유효성을 검사할 수 있는지 여부를 확인합니다.</summary>
      <param name="type">개체의 형식입니다.</param>
      <returns>
        <paramref name="type" /> 매개 변수가 <see cref="T:System.Int64" />와 일치하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.LongValidator.Validate(System.Object)">
      <summary>개체의 값이 유효한지 여부를 확인합니다.</summary>
      <param name="value">개체의 값입니다.</param>
    </member>
    <member name="T:System.Configuration.LongValidatorAttribute">
      <summary>구성 속성에 대한 정수(Long)의 유효성을 검사하도록 .NET Framework에 선언적으로 지시합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.LongValidatorAttribute.#ctor">
      <summary>
        <see cref="T:System.Configuration.LongValidatorAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.ExcludeRange">
      <summary>
        <see cref="P:System.Configuration.LongValidatorAttribute.MinValue" /> 및 <see cref="P:System.Configuration.LongValidatorAttribute.MaxValue" /> 속성 값으로 정의된 범위에 정수를 포함시킬지 아니면 제외시킬지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>값을 제외해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.MaxValue">
      <summary>속성에 허용되는 최대값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">선택한 값이 <see cref="P:System.Configuration.LongValidatorAttribute.MinValue" />보다 작은 경우</exception>
      <returns>허용되는 최대값을 나타내는 정수(Long)입니다.</returns>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.MinValue">
      <summary>속성에 허용되는 최소값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">선택한 값이 <see cref="P:System.Configuration.LongValidatorAttribute.MaxValue" />보다 큰 경우</exception>
      <returns>허용되는 최소값을 나타내는 정수입니다.</returns>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.ValidatorInstance">
      <summary>
        <see cref="T:System.Configuration.LongValidator" /> 클래스의 인스턴스를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 유효성 검사기 인스턴스입니다.</returns>
    </member>
    <member name="T:System.Configuration.NameValueConfigurationCollection">
      <summary>
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> 개체의 컬렉션을 포함합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.#ctor">
      <summary>
        <see cref="T:System.Configuration.NameValueConfigurationCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Add(System.Configuration.NameValueConfigurationElement)">
      <summary>컬렉션에 <see cref="T:System.Configuration.NameValueConfigurationElement" /> 개체를 추가합니다.</summary>
      <param name="nameValue">
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Clear">
      <summary>
        <see cref="T:System.Configuration.NameValueConfigurationCollection" />을 지웁니다.</summary>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Remove(System.Configuration.NameValueConfigurationElement)">
      <summary>제공된 매개 변수에 따라 컬렉션에서 <see cref="T:System.Configuration.NameValueConfigurationElement" /> 개체를 제거합니다.</summary>
      <param name="nameValue">
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Remove(System.String)">
      <summary>제공된 매개 변수에 따라 컬렉션에서 <see cref="T:System.Configuration.NameValueConfigurationElement" /> 개체를 제거합니다.</summary>
      <param name="name">
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> 개체의 이름입니다.</param>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationCollection.AllKeys">
      <summary>
        <see cref="T:System.Configuration.NameValueConfigurationCollection" />에 포함된 모든 항목에 대한 키를 가져옵니다.</summary>
      <returns>문자열 배열입니다.</returns>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationCollection.Item(System.String)">
      <summary>제공된 매개 변수에 따라 <see cref="T:System.Configuration.NameValueConfigurationElement" /> 개체를 가져오거나 설정합니다.</summary>
      <param name="name">컬렉션에 포함된 <see cref="T:System.Configuration.NameValueConfigurationElement" />의 이름입니다.</param>
      <returns>
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Configuration.NameValueConfigurationElement">
      <summary>
        <see cref="T:System.String" /> 이름 및 <see cref="T:System.String" /> 값을 포함하는 구성 요소입니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationElement.#ctor(System.String,System.String)">
      <summary>제공된 매개 변수에 따라 <see cref="T:System.Configuration.NameValueConfigurationElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> 개체의 이름입니다.</param>
      <param name="value">
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> 개체의 값입니다.</param>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationElement.Name">
      <summary>
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> 개체의 이름을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> 개체의 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationElement.Value">
      <summary>
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> 개체의 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> 개체의 값입니다.</returns>
    </member>
    <member name="T:System.Configuration.NameValueFileSectionHandler">
      <summary>구성 파일에 액세스할 수 있도록 합니다. 이 형식은 .NET Framework 구성 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.NameValueFileSectionHandler.#ctor">
      <summary>
        <see cref="T:System.Configuration.NameValueFileSectionHandler" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.NameValueFileSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary>새 구성 처리기를 만들고 지정된 매개 변수에 따라 섹션 처리기 컬렉션에 추가합니다.</summary>
      <param name="parent">부모 개체입니다.</param>
      <param name="configContext">구성 컨텍스트 개체입니다.</param>
      <param name="section">섹션 XML 노드입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="section" />의 <see langword="file" /> 특성에 지정된 파일이 있지만 이 파일을 로드할 수 없습니다.  
  
또는 
<paramref name="section" />의 <see langword="name" /> 특성이 <see langword="file" /> 특성에 지정된 파일의 루트 요소와 일치하지 않습니다.</exception>
      <returns>구성 개체입니다.</returns>
    </member>
    <member name="T:System.Configuration.NameValueSectionHandler">
      <summary>구성 섹션의 이름/값 쌍 구성 정보를 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.NameValueSectionHandler.#ctor">
      <summary>
        <see cref="T:System.Configuration.NameValueSectionHandler" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.NameValueSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary>새 구성 처리기를 만들고 지정된 매개 변수에 따라 섹션 처리기 컬렉션에 추가합니다.</summary>
      <param name="parent">부모 개체입니다.</param>
      <param name="context">구성 컨텍스트 개체입니다.</param>
      <param name="section">섹션 XML 노드입니다.</param>
      <returns>구성 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.NameValueSectionHandler.KeyAttributeName">
      <summary>키/값 쌍에서 키로 사용할 XML 특성 이름을 가져옵니다.</summary>
      <returns>키 특성의 이름이 포함된 <see cref="T:System.String" /> 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.NameValueSectionHandler.ValueAttributeName">
      <summary>키/값 쌍에서 값으로 사용할 XML 특성 이름을 가져옵니다.</summary>
      <returns>값 특성의 이름이 포함된 <see cref="T:System.String" /> 값입니다.</returns>
    </member>
    <member name="T:System.Configuration.NoSettingsVersionUpgradeAttribute">
      <summary>설정 공급자가 애플리케이션 업그레이드가 검색될 때 호출되는 논리를 사용하지 않도록 지정합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.NoSettingsVersionUpgradeAttribute.#ctor">
      <summary>
        <see cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Configuration.OverrideMode">
      <summary>자식 디렉터리의 구성 요소에 대한 구성 요소의 재정의 동작을 지정합니다.</summary>
    </member>
    <member name="F:System.Configuration.OverrideMode.Allow">
      <summary>요소 또는 그룹의 구성 설정이 자식 디렉터리의 구성 설정으로 재정의될 수 있습니다.</summary>
    </member>
    <member name="F:System.Configuration.OverrideMode.Deny">
      <summary>요소 또는 그룹의 구성 설정이 자식 디렉터리의 구성 설정으로 재정의될 수 없습니다.</summary>
    </member>
    <member name="F:System.Configuration.OverrideMode.Inherit">
      <summary>현재 구성 요소 또는 그룹의 부모 요소가 명시적으로 허용하는 경우 요소 또는 그룹의 구성 설정이 자식 디렉터리의 구성 설정으로 재정의됩니다. 재정의 허용 여부는 <see langword="OverrideMode" /> 특성으로 지정됩니다.</summary>
    </member>
    <member name="T:System.Configuration.PositiveTimeSpanValidator">
      <summary>
        <see cref="T:System.TimeSpan" /> 개체의 유효성을 검사합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidator.#ctor">
      <summary>
        <see cref="T:System.Configuration.PositiveTimeSpanValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidator.CanValidate(System.Type)">
      <summary>개체 형식의 유효성을 검사할 수 있는지 여부를 확인합니다.</summary>
      <param name="type">개체 형식입니다.</param>
      <returns>
        <paramref name="type" /> 매개 변수가 <see cref="T:System.TimeSpan" /> 개체와 일치하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidator.Validate(System.Object)">
      <summary>개체의 값이 유효한지 여부를 확인합니다.</summary>
      <param name="value">개체의 값입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" />를 양수 <see cref="T:System.TimeSpan" /> 값으로 확인할 수 없는 경우</exception>
    </member>
    <member name="T:System.Configuration.PositiveTimeSpanValidatorAttribute">
      <summary>구성 속성에 대한 시간 유효성 검사를 수행하도록 .NET Framework에 선언적으로 지시합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidatorAttribute.#ctor">
      <summary>
        <see cref="T:System.Configuration.PositiveTimeSpanValidatorAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Configuration.PositiveTimeSpanValidatorAttribute.ValidatorInstance">
      <summary>
        <see cref="T:System.Configuration.PositiveTimeSpanValidator" /> 클래스의 인스턴스를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 유효성 검사기 인스턴스입니다.</returns>
    </member>
    <member name="T:System.Configuration.PropertyInformation">
      <summary>구성의 개별 속성에 대한 메타 정보를 포함합니다. 이 형식은 상속될 수 없습니다.</summary>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Converter">
      <summary>구성 특성과 관련된 <see cref="T:System.ComponentModel.TypeConverter" /> 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.ComponentModel.TypeConverter" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.DefaultValue">
      <summary>구성 특성과 관련된 기본값을 포함하는 개체를 가져옵니다.</summary>
      <returns>구성 특성의 기본값을 포함하는 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Description">
      <summary>구성 특성에 해당하는 개체에 대한 설명을 가져옵니다.</summary>
      <returns>구성 특성에 대한 설명입니다.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsKey">
      <summary>구성 특성이 키인지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>구성 특성이 키이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsLocked">
      <summary>구성 특성이 잠겨 있는지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.PropertyInformation" /> 개체가 잠겨 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsModified">
      <summary>구성 특성이 수정되었는지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.PropertyInformation" /> 개체가 수정되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsRequired">
      <summary>구성 특성이 필요한지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.PropertyInformation" /> 개체가 필요하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.LineNumber">
      <summary>구성 특성과 관련된 구성 파일의 줄 번호를 가져옵니다.</summary>
      <returns>구성 파일의 줄 번호입니다.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Name">
      <summary>구성 특성에 해당하는 개체의 이름을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.PropertyInformation" /> 개체의 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Source">
      <summary>구성 특성에 해당하는 소스 파일을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.PropertyInformation" /> 개체의 소스 파일입니다.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Type">
      <summary>구성 특성에 해당하는 개체의 <see cref="T:System.Type" />을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Type" /> 개체의 <see cref="T:System.Configuration.PropertyInformation" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Validator">
      <summary>구성 특성과 관련된 <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Value">
      <summary>구성 특성과 관련된 값을 포함하는 개체를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Configuration.PropertyInformation" /> 개체의 값을 포함하는 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.ValueOrigin">
      <summary>구성 특성과 관련된 <see cref="T:System.Configuration.PropertyValueOrigin" /> 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.PropertyValueOrigin" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Configuration.PropertyInformationCollection">
      <summary>
        <see cref="T:System.Configuration.PropertyInformation" /> 개체의 컬렉션을 포함합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.PropertyInformationCollection.CopyTo(System.Configuration.PropertyInformation[],System.Int32)">
      <summary>대상 배열의 지정된 인덱스에서 시작하여 전체 <see cref="T:System.Configuration.PropertyInformationCollection" /> 컬렉션을 호환되는 1차원 <see cref="T:System.Array" />에 복사합니다.</summary>
      <param name="array">
        <see cref="T:System.Array" /> 컬렉션에서 복사한 요소의 대상인 1차원 <see cref="T:System.Configuration.PropertyInformationCollection" />입니다. <see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index">
        <paramref name="array" />에서 복사가 시작되는 0부터 시작하는 인덱스입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="array" />의 <see cref="P:System.Array.Length" /> 속성이 <see cref="P:System.Collections.Specialized.NameObjectCollectionBase.Count" /> + <paramref name="index" />보다 작습니다.</exception>
    </member>
    <member name="M:System.Configuration.PropertyInformationCollection.GetEnumerator">
      <summary>이 <see cref="T:System.Collections.IEnumerator" /> 컬렉션을 반복하는 데 사용되는 <see cref="T:System.Configuration.PropertyInformationCollection" /> 개체를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Collections.IEnumerator" />을 반복하는 데 사용되는 <see cref="T:System.Configuration.PropertyInformationCollection" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.PropertyInformationCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 인스턴스를 serialize하는 데 필요한 데이터로 <see cref="T:System.Configuration.PropertyInformationCollection" /> 개체를 채웁니다.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 인스턴스를 serialize하는 데 필요한 정보가 들어 있는 <see cref="T:System.Configuration.PropertyInformationCollection" /> 개체입니다.</param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> 인스턴스와 관련되어 있는 serialize된 스트림의 소스와 대상이 들어 있는 <see cref="T:System.Configuration.PropertyInformationCollection" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Configuration.PropertyInformationCollection.Item(System.String)">
      <summary>지정된 속성 이름에 따라 컬렉션에서 <see cref="T:System.Configuration.PropertyInformation" /> 개체를 가져옵니다.</summary>
      <param name="propertyName">
        <see cref="T:System.Configuration.PropertyInformationCollection" /> 개체에 포함된 구성 특성의 이름입니다.</param>
      <returns>
        <see cref="T:System.Configuration.PropertyInformation" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Configuration.PropertyValueOrigin">
      <summary>구성 속성 값을 처음 제공한 구성 계층 구조의 수준을 지정합니다.</summary>
    </member>
    <member name="F:System.Configuration.PropertyValueOrigin.Default">
      <summary>구성 속성 값이 <see cref="P:System.Configuration.ConfigurationProperty.DefaultValue" /> 속성에서 제공됩니다.</summary>
    </member>
    <member name="F:System.Configuration.PropertyValueOrigin.Inherited">
      <summary>구성 속성 값이 구성의 부모 수준에서 상속됩니다.</summary>
    </member>
    <member name="F:System.Configuration.PropertyValueOrigin.SetHere">
      <summary>구성 속성 값이 계층 구조의 현재 수준에 정의되어 있습니다.</summary>
    </member>
    <member name="T:System.Configuration.ProtectedConfiguration">
      <summary>현재 애플리케이션의 구성 파일에 대한 보호되는 구성 공급자에 액세스할 수 있도록 합니다.</summary>
    </member>
    <member name="F:System.Configuration.ProtectedConfiguration.DataProtectionProviderName">
      <summary>데이터 보호 공급자의 이름입니다.</summary>
    </member>
    <member name="F:System.Configuration.ProtectedConfiguration.ProtectedDataSectionName">
      <summary>보호되는 데이터 섹션의 이름입니다.</summary>
    </member>
    <member name="F:System.Configuration.ProtectedConfiguration.RsaProviderName">
      <summary>RSA 공급자의 이름입니다.</summary>
    </member>
    <member name="P:System.Configuration.ProtectedConfiguration.DefaultProvider">
      <summary>보호된 기본 구성 공급자의 이름을 가져옵니다.</summary>
      <returns>보호된 기본 구성 공급자의 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.ProtectedConfiguration.Providers">
      <summary>설치한 보호되는 구성 공급자의 컬렉션을 가져옵니다.</summary>
      <returns>설치한 <see cref="T:System.Configuration.ProtectedConfigurationProviderCollection" /> 개체의 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 컬렉션입니다.</returns>
    </member>
    <member name="T:System.Configuration.ProtectedConfigurationProvider">
      <summary>보호된 구성 데이터를 암호화하고 해독하기 위한 공급자를 만드는 기본 클래스입니다.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProvider.#ctor">
      <summary>기본 설정을 사용하여 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
      <summary>구성 파일에서 전달된 <see cref="T:System.Xml.XmlNode" /> 개체를 해독합니다.</summary>
      <param name="encryptedNode">해독할 <see cref="T:System.Xml.XmlNode" /> 개체입니다.</param>
      <returns>해독된 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
      <summary>구성 파일에서 전달된 <see cref="T:System.Xml.XmlNode" /> 개체를 암호화합니다.</summary>
      <param name="node">암호화할 <see cref="T:System.Xml.XmlNode" /> 개체입니다.</param>
      <returns>암호화된 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Configuration.ProtectedConfigurationProviderCollection">
      <summary>
        <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 개체의 컬렉션을 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProviderCollection.#ctor">
      <summary>기본 설정을 사용하여 <see cref="T:System.Configuration.ProtectedConfigurationProviderCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
      <summary>컬렉션에 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 개체를 추가합니다.</summary>
      <param name="provider">컬렉션에 추가할 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="provider" />이 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 개체가 아닙니다.</exception>
      <exception cref="T:System.Configuration.ConfigurationException">추가할 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 개체가 이미 컬렉션에 있는 경우  
  
또는 
컬렉션이 읽기 전용입니다.</exception>
    </member>
    <member name="P:System.Configuration.ProtectedConfigurationProviderCollection.Item(System.String)">
      <summary>컬렉션에서 지정된 이름을 가진 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 개체를 가져옵니다.</summary>
      <param name="name">컬렉션에 있는 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 개체의 이름입니다.</param>
      <returns>지정된 이름의 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 개체이거나, 해당 이름의 개체가 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.ProtectedConfigurationSection">
      <summary>
        <see langword="configProtectedData" /> 구성 섹션에 프로그래밍 방식으로 액세스합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationSection.#ctor">
      <summary>기본 설정을 사용하여 <see cref="T:System.Configuration.ProtectedConfigurationSection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Configuration.ProtectedConfigurationSection.DefaultProvider">
      <summary>
        <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 컬렉션 속성에 있는 기본 <see cref="P:System.Configuration.ProtectedConfigurationSection.Providers" /> 개체의 이름을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 컬렉션 속성에 있는 기본 <see cref="P:System.Configuration.ProtectedConfigurationSection.Providers" /> 개체의 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.ProtectedConfigurationSection.Providers">
      <summary>참여하는 모든 구성 파일에 있는 모든 <see cref="T:System.Configuration.ProviderSettingsCollection" /> 개체의 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 컬렉션을 가져옵니다.</summary>
      <returns>참여하는 모든 구성 파일에 있는 모든 <see cref="T:System.Configuration.ProviderSettingsCollection" /> 개체의 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 컬렉션입니다.</returns>
    </member>
    <member name="T:System.Configuration.ProtectedProviderSettings">
      <summary>
        <see langword="&lt;configProtectedData&gt;" /> 구성 섹션에 대한 공급자를 구성하는 구성 요소 그룹을 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedProviderSettings.#ctor">
      <summary>
        <see cref="T:System.Configuration.ProtectedProviderSettings" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Configuration.ProtectedProviderSettings.Properties">
      <summary>보호되는 구성 데이터에 대한 공급자 속성을 나타내는 <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> 컬렉션을 가져옵니다.</summary>
      <returns>보호되는 구성 데이터에 대한 공급자 속성을 나타내는 <see cref="T:System.Configuration.ConfigurationPropertyCollection" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ProtectedProviderSettings.Providers">
      <summary>보호되는 구성 데이터에 대한 공급자 속성을 나타내는 <see cref="T:System.Configuration.ProviderSettings" /> 개체의 컬렉션을 가져옵니다.</summary>
      <returns>보호되는 구성 데이터에 대한 공급자 속성을 나타내는 <see cref="T:System.Configuration.ProviderSettings" /> 개체의 컬렉션입니다.</returns>
    </member>
    <member name="T:System.Configuration.Provider.ProviderBase">
      <summary>확장 가능한 공급자 모델에 대한 기본 구현을 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderBase.#ctor">
      <summary>
        <see cref="T:System.Configuration.Provider.ProviderBase" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>구성 작성기를 초기화합니다.</summary>
      <param name="name">공급자의 이름입니다.</param>
      <param name="config">이 공급자에 대한 구성에서 지정된 공급자별 특성을 나타내는 이름/값 쌍의 컬렉션입니다.</param>
      <exception cref="T:System.ArgumentNullException">공급자 이름은 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentException">공급자 이름의 길이가 0입니다.</exception>
      <exception cref="T:System.InvalidOperationException">공급자가 이미 초기화된 후 공급자에서 <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />를 호출하려고 합니다.</exception>
    </member>
    <member name="P:System.Configuration.Provider.ProviderBase.Description">
      <summary>관리 도구나 다른 UI(사용자 인터페이스)에 표시하기에 적합한 간단하고 이해하기 쉬운 설명을 가져옵니다.</summary>
      <returns>관리 도구나 다른 UI에 표시하기에 적합한 간단하고 이해하기 쉬운 설명입니다.</returns>
    </member>
    <member name="P:System.Configuration.Provider.ProviderBase.Name">
      <summary>구성 중 공급자를 참조하는 데 사용되는 이름을 가져옵니다.</summary>
      <returns>구성 중 공급자를 참조하는 데 사용되는 이름입니다.</returns>
    </member>
    <member name="T:System.Configuration.Provider.ProviderCollection">
      <summary>
        <see cref="T:System.Configuration.Provider.ProviderBase" />에서 상속하는 공급자 개체의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.#ctor">
      <summary>
        <see cref="T:System.Configuration.Provider.ProviderCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
      <summary>컬렉션에 공급자를 추가합니다.</summary>
      <param name="provider">추가할 공급자입니다.</param>
      <exception cref="T:System.NotSupportedException">컬렉션이 읽기 전용입니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="provider" />의 <see cref="P:System.Configuration.Provider.ProviderBase.Name" />이 <see langword="null" />인 경우  
  
또는 
<paramref name="provider" />의 <see cref="P:System.Configuration.Provider.ProviderBase.Name" /> 길이가 1보다 작은 경우</exception>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.Clear">
      <summary>컬렉션에서 모든 항목을 제거합니다.</summary>
      <exception cref="T:System.NotSupportedException">컬렉션이 읽기 전용으로 설정된 경우</exception>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.CopyTo(System.Configuration.Provider.ProviderBase[],System.Int32)">
      <summary>지정된 인덱스에서 시작하여 지정된 배열에 컬렉션의 내용을 복사합니다.</summary>
      <param name="array">컬렉션의 요소를 복사할 배열입니다.</param>
      <param name="index">복사 프로세스를 시작할 컬렉션 항목의 인덱스입니다.</param>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.GetEnumerator">
      <summary>컬렉션을 반복할 <see cref="T:System.Collections.IEnumerator" /> 인터페이스를 구현하는 개체를 반환합니다.</summary>
      <returns>컬렉션을 반복할 <see cref="T:System.Collections.IEnumerator" />를 구현하는 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.Remove(System.String)">
      <summary>컬렉션에서 공급자를 제거합니다.</summary>
      <param name="name">제거할 공급자의 이름입니다.</param>
      <exception cref="T:System.NotSupportedException">컬렉션이 읽기 전용으로 설정된 경우</exception>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.SetReadOnly">
      <summary>컬렉션을 읽기 전용으로 설정합니다.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>
        <see cref="T:System.Configuration.Provider.ProviderCollection" />의 요소를 특정 배열 인덱스에서 시작하여 배열에 복사합니다.</summary>
      <param name="array">컬렉션의 요소를 복사할 배열입니다.</param>
      <param name="index">컬렉션의 공급자 인스턴스를 복사하기 시작할 배열의 인덱스입니다.</param>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.Count">
      <summary>컬렉션의 공급자 수를 가져옵니다.</summary>
      <returns>컬렉션의 공급자 수입니다.</returns>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.IsSynchronized">
      <summary>해당 컬렉션에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지를 나타내는 값을 가져옵니다.</summary>
      <returns>모든 경우에 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.Item(System.String)">
      <summary>지정된 이름의 공급자를 가져옵니다.</summary>
      <param name="name">공급자를 식별하는 키입니다.</param>
      <returns>지정된 이름의 공급자입니다.</returns>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.SyncRoot">
      <summary>현재 개체를 가져옵니다.</summary>
      <returns>현재 개체입니다.</returns>
    </member>
    <member name="T:System.Configuration.Provider.ProviderException">
      <summary>구성 공급자 오류가 발생할 때 throw되는 예외입니다. 이 예외 클래스는 공급자에서 기존의 다른 예외 클래스에 매핑되지 않는 내부 오류가 발생하는 경우 공급자가 예외를 throw하는 데도 사용됩니다.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor">
      <summary>
        <see cref="T:System.Configuration.Provider.ProviderException" /> 클래스의 새 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.Configuration.Provider.ProviderException" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="info">역직렬화할 정보를 보유하는 개체입니다.</param>
      <param name="context">소스 또는 대상에 대한 컨텍스트 정보입니다.</param>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor(System.String)">
      <summary>
        <see cref="T:System.Configuration.Provider.ProviderException" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="message">이 <see cref="T:System.Configuration.Provider.ProviderException" />이 throw된 이유를 설명하는 메시지입니다.</param>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor(System.String,System.Exception)">
      <summary>
        <see cref="T:System.Configuration.Provider.ProviderException" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="message">이 <see cref="T:System.Configuration.Provider.ProviderException" />이 throw된 이유를 설명하는 메시지입니다.</param>
      <param name="innerException">이 <see cref="T:System.Configuration.Provider.ProviderException" />이 throw되도록 한 예외입니다.</param>
    </member>
    <member name="T:System.Configuration.ProviderSettings">
      <summary>공급자와 연결된 구성 요소를 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettings.#ctor">
      <summary>
        <see cref="T:System.Configuration.ProviderSettings" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettings.#ctor(System.String,System.String)">
      <summary>
        <see cref="T:System.Configuration.ProviderSettings" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">설정을 구성할 공급자의 이름입니다.</param>
      <param name="type">설정을 구성할 공급자의 형식입니다.</param>
    </member>
    <member name="P:System.Configuration.ProviderSettings.Name">
      <summary>이 클래스에서 구성하는 공급자의 이름을 가져오거나 설정합니다.</summary>
      <returns>공급자의 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.ProviderSettings.Parameters">
      <summary>공급자에 대한 사용자 정의 매개 변수의 컬렉션을 가져옵니다.</summary>
      <returns>공급자에 대한 매개 변수의 <see cref="T:System.Collections.Specialized.NameValueCollection" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ProviderSettings.Type">
      <summary>이 클래스에서 구성하는 공급자의 형식을 가져오거나 설정합니다.</summary>
      <returns>이 <see cref="T:System.Configuration.ProviderSettings" /> 인스턴스에서 구성하는 공급자의 형식에 대한 정규화된 네임스페이스 및 클래스 이름입니다.</returns>
    </member>
    <member name="T:System.Configuration.ProviderSettingsCollection">
      <summary>
        <see cref="T:System.Configuration.ProviderSettings" /> 개체의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.#ctor">
      <summary>
        <see cref="T:System.Configuration.ProviderSettingsCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.Add(System.Configuration.ProviderSettings)">
      <summary>컬렉션에 <see cref="T:System.Configuration.ProviderSettings" /> 개체를 추가합니다.</summary>
      <param name="provider">추가할 <see cref="T:System.Configuration.ProviderSettings" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.Clear">
      <summary>컬렉션을 지웁니다.</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.Remove(System.String)">
      <summary>컬렉션에서 요소를 제거합니다.</summary>
      <param name="name">제거할 <see cref="T:System.Configuration.ProviderSettings" /> 개체의 이름입니다.</param>
    </member>
    <member name="P:System.Configuration.ProviderSettingsCollection.Item(System.Int32)">
      <summary>
        <see cref="T:System.Configuration.ProviderSettingsCollection" /> 컬렉션의 지정된 인덱스에 있는 값을 가져오거나 설정합니다.</summary>
      <param name="index">반환할 <see cref="T:System.Configuration.ProviderSettings" />의 인덱스입니다.</param>
      <returns>지정된 <see cref="T:System.Configuration.ProviderSettings" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ProviderSettingsCollection.Item(System.String)">
      <summary>컬렉션에서 항목을 가져옵니다.</summary>
      <param name="key">컬렉션 내의 <see cref="T:System.Configuration.ProviderSettings" /> 개체에 대한 문자열 참조입니다.</param>
      <returns>컬렉션에 포함된 <see cref="T:System.Configuration.ProviderSettings" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Configuration.RegexStringValidator">
      <summary>정규식으로 제공되는 규칙에 따라 문자열의 유효성을 검사합니다.</summary>
    </member>
    <member name="M:System.Configuration.RegexStringValidator.#ctor(System.String)">
      <summary>
        <see cref="T:System.Configuration.RegexStringValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="regex">정규식을 지정하는 문자열입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="regex" />가 null이거나 빈 문자열("")인 경우</exception>
    </member>
    <member name="M:System.Configuration.RegexStringValidator.CanValidate(System.Type)">
      <summary>개체 형식의 유효성을 검사할 수 있는지 여부를 확인합니다.</summary>
      <param name="type">개체의 형식입니다.</param>
      <returns>
        <paramref name="type" /> 매개 변수가 문자열과 일치하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.RegexStringValidator.Validate(System.Object)">
      <summary>개체의 값이 유효한지 여부를 확인합니다.</summary>
      <param name="value">개체의 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" />가 <see cref="T:System.Text.RegularExpressions.Regex" /> 클래스의 매개 변수와 일치하지 않는 경우</exception>
    </member>
    <member name="T:System.Configuration.RegexStringValidatorAttribute">
      <summary>정규식을 사용하여 구성 속성에 대한 문자열의 유효성을 검사하도록 .NET Framework에 선언적으로 지시합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.RegexStringValidatorAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Configuration.RegexStringValidatorAttribute" /> 개체의 새 인스턴스를 초기화합니다.</summary>
      <param name="regex">정규식 유효성 검사에 사용할 문자열입니다.</param>
    </member>
    <member name="P:System.Configuration.RegexStringValidatorAttribute.Regex">
      <summary>정규식 유효성 검사를 수행하는 데 사용되는 문자열을 가져옵니다.</summary>
      <returns>데코레이팅된 구성 요소 속성에 할당된 문자열을 필터링하는 데 사용되는 정규식이 들어 있는 문자열입니다.</returns>
    </member>
    <member name="P:System.Configuration.RegexStringValidatorAttribute.ValidatorInstance">
      <summary>
        <see cref="T:System.Configuration.RegexStringValidator" /> 클래스의 인스턴스를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 유효성 검사기 인스턴스입니다.</returns>
    </member>
    <member name="T:System.Configuration.RsaProtectedConfigurationProvider">
      <summary>RSA 암호화를 사용하여 구성 데이터를 암호화하고 해독하는 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 인스턴스를 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.#ctor">
      <summary>
        <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.AddKey(System.Int32,System.Boolean)">
      <summary>RSA 키 컨테이너에 키를 추가합니다.</summary>
      <param name="keySize">추가할 키의 크기입니다.</param>
      <param name="exportable">키를 내보낼 수 있음을 나타내려면 <see langword="true" />이고, 나타내지 않으려면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
      <summary>전달된 XML 노드의 암호를 해독합니다.</summary>
      <param name="encryptedNode">암호를 해독할 <see cref="T:System.Xml.XmlNode" />입니다.</param>
      <returns>암호 해독된 XML 노드입니다.</returns>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.DeleteKey">
      <summary>RSA 키 컨테이너에서 키를 제거합니다.</summary>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
      <summary>전달된 XML 노드를 암호화합니다.</summary>
      <param name="node">암호화할 <see cref="T:System.Xml.XmlNode" />입니다.</param>
      <returns>암호화된 <see cref="T:System.Xml.XmlNode" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.ExportKey(System.String,System.Boolean)">
      <summary>키 컨테이너에서 RSA 키를 내보냅니다.</summary>
      <param name="xmlFileName">키를 내보낼 파일 이름과 경로입니다.</param>
      <param name="includePrivateParameters">프라이빗 매개 변수를 내보냈음을 나타내려면 <see langword="true" />이고, 나타내지 않으려면 <see langword="false" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.IOException">파일을 여는 동안 오류가 발생한 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" />에 읽기 전용인 파일이 지정되었습니다.  
  
또는 
현재 플랫폼이 해당 작업을 지원하지 않는 경우  
  
또는 
 <paramref name="path" />에 디렉터리가 지정되었습니다.  
  
또는 
호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" />에 지정된 파일을 찾을 수 없습니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.ImportKey(System.String,System.Boolean)">
      <summary>RSA 키를 키 컨테이너로 가져옵니다.</summary>
      <param name="xmlFileName">키를 가져올 파일 이름과 경로입니다.</param>
      <param name="exportable">키를 내보낼 수 있음을 나타내려면 <see langword="true" />이고, 나타내지 않으려면 <see langword="false" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.IOException">파일을 여는 동안 오류가 발생한 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" />가 쓰기 전용 파일을 지정한 경우  
  
또는 
현재 플랫폼이 해당 작업을 지원하지 않는 경우  
  
또는 
 <paramref name="path" />에 디렉터리가 지정되었습니다.  
  
또는 
호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" />에 지정된 파일을 찾을 수 없습니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>기본 설정을 사용하여 공급자를 초기화합니다.</summary>
      <param name="name">개체에 사용할 공급자 이름입니다.</param>
      <param name="configurationValues">개체를 초기화할 때 사용할 값의 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 컬렉션입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="configurationValues" />에 하나 이상의 인식할 수 없는 값이 포함된 경우</exception>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.CspProviderName">
      <summary>Windows crypto API(cryptography API) CSP(암호화 서비스 공급자)의 이름을 가져옵니다.</summary>
      <returns>CryptoAPI 암호화 서비스 공급자의 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.KeyContainerName">
      <summary>키 컨테이너의 이름을 가져옵니다.</summary>
      <returns>키 컨테이너의 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.RsaPublicKey">
      <summary>공급자가 사용하는 공개 키를 가져옵니다.</summary>
      <returns>공급자가 사용하는 공개 키가 포함된 <see cref="T:System.Security.Cryptography.RSAParameters" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.UseFIPS">
      <summary>공급자가 FIPS를 사용하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>공급자가 FIPS를 사용하면 <see langword="true" />이고, 사용하지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.UseMachineContainer">
      <summary>
        <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" /> 개체가 컴퓨터 키 컨테이너를 사용하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" /> 개체가 컴퓨터 키 컨테이너를 사용하면 <see langword="true" />이고,  사용하지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.UseOAEP">
      <summary>공급자가 OAEP(Optimal Asymmetric Encryption Padding) 키 교환 데이터를 사용하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" /> 개체가 OAEP(Optimal Asymmetric Encryption Padding) 키 교환 데이터를 사용하면 <see langword="true" />이고, 사용하지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.SchemeSettingElement">
      <summary>
        <see cref="T:System.Configuration.SchemeSettingElementCollection" /> 클래스의 요소를 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.SchemeSettingElement.#ctor">
      <summary>
        <see cref="T:System.Configuration.SchemeSettingElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Configuration.SchemeSettingElement.GenericUriParserOptions">
      <summary>
        <see cref="T:System.Configuration.SchemeSettingElement" /> 인스턴스에서 GenericUriParserOptions 항목의 값을 가져옵니다.</summary>
      <returns>GenericUriParserOptions 항목의 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.SchemeSettingElement.Name">
      <summary>
        <see cref="T:System.Configuration.SchemeSettingElement" /> 인스턴스에서 Name 항목의 값을 가져옵니다.</summary>
      <returns>이 스키마 설정에서 사용되는 프로토콜입니다.</returns>
    </member>
    <member name="T:System.Configuration.SchemeSettingElementCollection">
      <summary>
        <see cref="T:System.Configuration.SchemeSettingElement" /> 개체의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.SchemeSettingElementCollection.#ctor">
      <summary>
        <see cref="T:System.Configuration.SchemeSettingElementCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.SchemeSettingElementCollection.IndexOf(System.Configuration.SchemeSettingElement)">
      <summary>지정된 <see cref="T:System.Configuration.SchemeSettingElement" />의 인덱스입니다.</summary>
      <param name="element">지정된 인덱스 위치에 대한 <see cref="T:System.Configuration.SchemeSettingElement" />입니다.</param>
      <returns>지정된 <see cref="T:System.Configuration.SchemeSettingElement" />의 인덱스이거나, -1입니다.</returns>
    </member>
    <member name="P:System.Configuration.SchemeSettingElementCollection.CollectionType">
      <summary>
        <see cref="T:System.Configuration.SchemeSettingElementCollection" />의 기본 컬렉션 형식을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.SchemeSettingElementCollection" />의 기본 컬렉션 형식입니다.</returns>
    </member>
    <member name="P:System.Configuration.SchemeSettingElementCollection.Item(System.Int32)">
      <summary>
        <see cref="T:System.Configuration.SchemeSettingElementCollection" /> 컬렉션에서 지정된 인덱스의 항목을 가져옵니다.</summary>
      <param name="index">반환할 <see cref="T:System.Configuration.SchemeSettingElement" />의 인덱스입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="index" /> 매개 변수가 0보다 작습니다.  
  
또는 
매개 변수로 지정된 항목이 <see langword="null" />이거나 제거되었습니다.</exception>
      <returns>지정된 <see cref="T:System.Configuration.SchemeSettingElement" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.SchemeSettingElementCollection.Item(System.String)">
      <summary>
        <see cref="T:System.Configuration.SchemeSettingElementCollection" /> 컬렉션에서 항목을 가져옵니다.</summary>
      <param name="name">컬렉션 내의 <see cref="T:System.Configuration.SchemeSettingElement" /> 개체에 대한 문자열 참조입니다.</param>
      <returns>컬렉션에 포함된 <see cref="T:System.Configuration.SchemeSettingElement" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Configuration.SectionInformation">
      <summary>구성 계층 구조 내의 개별 섹션에 대한 메타데이터가 들어 있습니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.SectionInformation.ForceDeclaration">
      <summary>연결된 구성 섹션이 구성 파일에 나타나도록 합니다.</summary>
    </member>
    <member name="M:System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)">
      <summary>연결된 구성 섹션을 구성 파일에 표시하거나 구성 파일에서 기존 섹션을 제거합니다.</summary>
      <param name="force">연결된 섹션을 구성 파일에 기록하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="force" />가 <see langword="true" />이고 연결된 섹션을 자식 구성 파일에 내보낼 수 없거나 섹션이 선언되지 않은 경우</exception>
    </member>
    <member name="M:System.Configuration.SectionInformation.GetParentSection">
      <summary>이 개체와 연결된 구성 섹션이 포함된 구성 섹션을 가져옵니다.</summary>
      <exception cref="T:System.InvalidOperationException">메서드가 부모 섹션에서 호출된 경우</exception>
      <returns>이 <see cref="T:System.Configuration.ConfigurationSection" /> 개체에 연결된 <see cref="T:System.Configuration.SectionInformation" />이 들어 있는 구성 섹션입니다.</returns>
    </member>
    <member name="M:System.Configuration.SectionInformation.GetRawXml">
      <summary>연결된 구성 섹션 개체를 나타내는 XML 노드 개체를 반환합니다.</summary>
      <exception cref="T:System.InvalidOperationException">이 구성 개체가 잠겨 있어 편집할 수 없는 경우</exception>
      <returns>이 구성 섹션의 XML 표현입니다.</returns>
    </member>
    <member name="M:System.Configuration.SectionInformation.ProtectSection(System.String)">
      <summary>보호를 위해 구성 섹션에 표시합니다.</summary>
      <param name="protectionProvider">사용할 보호 공급자의 이름입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Configuration.SectionInformation.AllowLocation" /> 속성은 <see langword="false" />로 설정됩니다.  
  
또는 
대상 섹션이 이미 보호된 데이터 섹션인 경우</exception>
    </member>
    <member name="M:System.Configuration.SectionInformation.RevertToParent">
      <summary>연결된 구성 섹션이 부모 섹션에서 모든 값을 상속하도록 합니다.</summary>
      <exception cref="T:System.InvalidOperationException">편집 모드가 아니므로 이 메서드를 호출할 수 없는 경우</exception>
    </member>
    <member name="M:System.Configuration.SectionInformation.SetRawXml(System.String)">
      <summary>구성 파일에 있는 연결된 구성 섹션의 XML 표현으로 개체를 설정합니다.</summary>
      <param name="rawXml">사용할 XML입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="rawXml" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Configuration.SectionInformation.UnprotectSection">
      <summary>연결된 구성 섹션에서 보호되는 구성 암호화를 제거합니다.</summary>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowDefinition">
      <summary>구성 파일 계층 구조에서 연결된 구성 섹션을 정의할 수 있는 위치를 나타내는 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">선택한 값이 이미 정의된 값과 충돌하는 경우</exception>
      <returns>구성 파일 계층 구조에서 연결된 <see cref="T:System.Configuration.ConfigurationSection" /> 개체를 선언할 수 있는 위치를 나타내는 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowExeDefinition">
      <summary>구성 파일 계층 구조에서 연결된 구성 섹션을 선언할 수 있는 위치를 나타내는 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">선택한 값이 이미 정의된 값과 충돌하는 경우</exception>
      <returns>구성 파일 계층 구조에서 연결된 <see cref="T:System.Configuration.ConfigurationSection" /> 개체를 .exe 파일에 대해 선언할 수 있는 위치를 나타내는 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowLocation">
      <summary>구성 섹션에서 <see langword="location" /> 특성을 사용할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">선택한 값이 이미 정의된 값과 충돌하는 경우</exception>
      <returns>
        <see langword="true" /> 특성이 허용되면 <see langword="location" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowOverride">
      <summary>연결된 구성 섹션을 하위 수준 구성 파일로 재정의할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>섹션을 재정의할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.ConfigSource">
      <summary>연결된 구성 섹션이 정의되어 있는 포함 파일이 있으면 해당 파일의 이름을 가져오거나 설정합니다.</summary>
      <returns>연결된 <see cref="T:System.Configuration.ConfigurationSection" />이 정의되어 있는 포함 파일이 있으면 해당 파일의 이름이고, 그렇지 않으면 빈 문자열("")입니다.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.ForceSave">
      <summary>연결된 구성 섹션이 수정되지 않은 경우에도 저장되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>연결된 <see cref="T:System.Configuration.ConfigurationSection" /> 개체가 수정되지 않은 경우에도 저장되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.  
  
 <block subset="none" type="note"><para>  
 수정된 내용이 없더라도 구성 파일이 저장되면 ASP.NET이 애플리케이션을 다시 시작합니다.</para></block></returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.InheritInChildApplications">
      <summary>연결된 구성 섹션에 지정된 설정이 관련 애플리케이션의 하위 디렉터리에 있는 애플리케이션에서 상속되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>하위 애플리케이션이 이 <see cref="T:System.Configuration.ConfigurationSection" /> 개체에 지정된 설정을 상속하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsDeclarationRequired">
      <summary>구성 섹션을 구성 파일에 선언해야 하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>연결된 <see cref="T:System.Configuration.ConfigurationSection" /> 개체를 구성 파일에 선언해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsDeclared">
      <summary>연결된 구성 섹션이 구성 파일에 선언되어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Configuration.ConfigurationSection" />이 구성 파일에 선언되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsLocked">
      <summary>연결된 구성 섹션이 잠겨 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>섹션이 잠겨 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsProtected">
      <summary>연결된 구성 섹션이 보호되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Configuration.ConfigurationSection" />이 보호되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.Name">
      <summary>연결된 구성 섹션의 이름을 가져옵니다.</summary>
      <returns>구성 섹션의 전체 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.OverrideMode">
      <summary>연결된 구성 섹션을 자식 구성 파일에서 재정의할 수 있는지 여부를 지정하는 <see cref="T:System.Configuration.OverrideMode" /> 열거형 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <see cref="P:System.Configuration.SectionInformation.AllowOverride" /> 및 <see cref="P:System.Configuration.SectionInformation.OverrideMode" /> 속성을 모두 변경하려고 한 경우. 호환성을 위해 이러한 동작은 지원되지 않습니다.</exception>
      <returns>
        <see cref="T:System.Configuration.OverrideMode" /> 열거형 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.OverrideModeDefault">
      <summary>자식 구성 파일에 의한 구성 섹션의 기본 재정의 동작을 지정하는 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">부모 구성 섹션에 재정의 동작이 지정된 경우</exception>
      <returns>
        <see cref="T:System.Configuration.OverrideMode" /> 열거형 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.OverrideModeEffective">
      <summary>자식 구성 파일에서 구성 섹션을 잠글 수 있는지 여부에 따른 구성 섹션의 재정의 동작을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.OverrideMode" /> 열거형 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.ProtectionProvider">
      <summary>연결된 구성 섹션의 보호되는 구성 공급자를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Configuration.ConfigurationSection" /> 개체에 대한 보호된 구성 공급자입니다.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.RequirePermission">
      <summary>연결된 구성 섹션에 액세스 권한이 필요한지 여부를 나타내는 값을 가져옵니다.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">선택한 값이 이미 정의된 값과 충돌하는 경우</exception>
      <returns>
        <see langword="true" /> 특성이 <see langword="requirePermission" />로 설정되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.RestartOnExternalChanges">
      <summary>외부 구성 포함 파일을 변경할 때 애플리케이션을 다시 시작해야 하는지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">선택한 값이 이미 정의된 값과 충돌하는 경우</exception>
      <returns>외부 구성 포함 파일을 변경할 때 애플리케이션을 다시 시작해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.SectionName">
      <summary>연결된 구성 섹션의 이름을 가져옵니다.</summary>
      <returns>연결된 <see cref="T:System.Configuration.ConfigurationSection" /> 개체의 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.Type">
      <summary>섹션 클래스의 이름을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException">선택한 값이 <see langword="null" /> 또는 빈 문자열("")인 경우</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">선택한 값이 이미 정의된 값과 충돌하는 경우</exception>
      <returns>이 <see cref="T:System.Configuration.ConfigurationSection" /> 섹션에 연결된 클래스의 이름입니다.</returns>
    </member>
    <member name="T:System.Configuration.SettingAttribute">
      <summary>설정 정보와 설정 속성을 연결하는 데 사용되는 사용자 지정 설정 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingAttribute.#ctor">
      <summary>
        <see cref="T:System.Configuration.SettingAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Configuration.SettingChangingEventArgs">
      <summary>
        <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingChangingEventArgs.#ctor(System.String,System.String,System.String,System.Object,System.Boolean)">
      <summary>
        <see cref="T:System.Configuration.SettingChangingEventArgs" /> 클래스의 인스턴스를 초기화합니다.</summary>
      <param name="settingName">애플리케이션 설정의 이름을 포함하는 <see cref="T:System.String" />입니다.</param>
      <param name="settingClass">설정의 범주 설명을 포함하는 <see cref="T:System.String" />입니다. 이 매개 변수는 애플리케이션 설정 그룹 이름으로 설정되는 경우가 많습니다.</param>
      <param name="settingKey">애플리케이션 설정 키를 포함하는 <see cref="T:System.String" />입니다.</param>
      <param name="newValue">애플리케이션 설정 속성에 할당될 새 값을 포함하는 <see cref="T:System.Object" />입니다.</param>
      <param name="cancel">이벤트를 취소하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="P:System.Configuration.SettingChangingEventArgs.NewValue">
      <summary>애플리케이션 설정 속성에 할당되는 새 값을 가져옵니다.</summary>
      <returns>애플리케이션 설정 속성에 할당될 새 값을 포함하는 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingChangingEventArgs.SettingClass">
      <summary>애플리케이션 설정 속성 범주를 가져옵니다.</summary>
      <returns>설정의 범주 설명을 포함하는 <see cref="T:System.String" />입니다. 이 매개 변수는 대개 애플리케이션 설정 그룹 이름으로 설정됩니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingChangingEventArgs.SettingKey">
      <summary>속성과 연결된 애플리케이션 설정 키를 가져옵니다.</summary>
      <returns>애플리케이션 설정 키를 포함하는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingChangingEventArgs.SettingName">
      <summary>애플리케이션 설정 속성과 연결된 애플리케이션 설정의 이름을 가져옵니다.</summary>
      <returns>애플리케이션 설정의 이름을 포함하는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.SettingChangingEventHandler">
      <summary>
        <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" /> 이벤트를 처리할 메서드를 나타냅니다.</summary>
      <param name="sender">이벤트의 소스로, 대개 <see cref="T:System.Configuration.ApplicationSettingsBase" /> 클래스에서 파생되는 애플리케이션 설정 래퍼 클래스입니다.</param>
      <param name="e">이벤트에 대한 데이터를 포함하는 <see cref="T:System.Configuration.SettingChangingEventArgs" />입니다.</param>
    </member>
    <member name="T:System.Configuration.SettingElement">
      <summary>구성의 요소를 업데이트하는 데 사용되는 간단한 구성 요소를 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingElement.#ctor">
      <summary>
        <see cref="T:System.Configuration.SettingElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingElement.#ctor(System.String,System.Configuration.SettingsSerializeAs)">
      <summary>제공된 매개 변수에 따라 <see cref="T:System.Configuration.SettingElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">
        <see cref="T:System.Configuration.SettingElement" /> 개체의 이름입니다.</param>
      <param name="serializeAs">
        <see cref="T:System.Configuration.SettingsSerializeAs" /> 개체입니다. 이 개체는 구성 설정을 저장할 serialization 체계로 사용되는 열거형입니다.</param>
    </member>
    <member name="M:System.Configuration.SettingElement.Equals(System.Object)">
      <summary>현재 <see cref="T:System.Configuration.SettingElement" /> 인스턴스를 지정된 개체와 비교합니다.</summary>
      <param name="settings">비교할 개체입니다.</param>
      <returns>
        <see cref="T:System.Configuration.SettingElement" /> 인스턴스가 지정된 개체와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.SettingElement.GetHashCode">
      <summary>현재 <see cref="T:System.Configuration.SettingElement" /> 인스턴스를 나타내는 고유 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Configuration.SettingElement" /> 인스턴스를 나타내는 고유 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingElement.Name">
      <summary>
        <see cref="T:System.Configuration.SettingElement" /> 개체의 이름을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Configuration.SettingElement" /> 개체의 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingElement.SerializeAs">
      <summary>
        <see cref="T:System.Configuration.SettingElement" /> 개체의 값을 유지하는 데 사용되는 serialization 메커니즘을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsSerializeAs" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingElement.Value">
      <summary>
        <see cref="T:System.Configuration.SettingElement" /> 개체를 사용하여 <see cref="T:System.Configuration.SettingValueElement" /> 개체의 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Configuration.SettingValueElement" /> 개체의 값을 포함하는 <see cref="T:System.Configuration.SettingElement" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Configuration.SettingElementCollection">
      <summary>
        <see cref="T:System.Configuration.SettingElement" /> 개체의 컬렉션을 포함합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.#ctor">
      <summary>
        <see cref="T:System.Configuration.SettingElementCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.Add(System.Configuration.SettingElement)">
      <summary>컬렉션에 <see cref="T:System.Configuration.SettingElement" /> 개체를 추가합니다.</summary>
      <param name="element">컬렉션에 추가할 <see cref="T:System.Configuration.SettingElement" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.Clear">
      <summary>컬렉션에서 모든 <see cref="T:System.Configuration.SettingElement" /> 개체를 제거합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.Get(System.String)">
      <summary>컬렉션에서 <see cref="T:System.Configuration.SettingElement" /> 개체를 가져옵니다.</summary>
      <param name="elementKey">컬렉션의 <see cref="T:System.Configuration.SettingElement" /> 개체를 나타내는 문자열 값입니다.</param>
      <returns>
        <see cref="T:System.Configuration.SettingElement" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.Remove(System.Configuration.SettingElement)">
      <summary>컬렉션에서 <see cref="T:System.Configuration.SettingElement" /> 개체를 제거합니다.</summary>
      <param name="element">
        <see cref="T:System.Configuration.SettingElement" /> 개체입니다.</param>
    </member>
    <member name="P:System.Configuration.SettingElementCollection.CollectionType">
      <summary>구성 컬렉션의 형식을 가져옵니다.</summary>
      <returns>컬렉션의 <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Configuration.SettingsAttributeDictionary">
      <summary>구성 개체와 <see cref="T:System.Configuration.SettingsProperty" /> 개체를 설명하는 데 사용되는 키/값 쌍의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsAttributeDictionary.#ctor">
      <summary>
        <see cref="T:System.Configuration.SettingsAttributeDictionary" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsAttributeDictionary.#ctor(System.Configuration.SettingsAttributeDictionary)">
      <summary>
        <see cref="T:System.Configuration.SettingsAttributeDictionary" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="attributes">구성 설정과 관련된 키/값 쌍의 컬렉션입니다.</param>
    </member>
    <member name="T:System.Configuration.SettingsBase">
      <summary>사용자 속성 설정을 지원하는 데 사용되는 기본 클래스를 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsBase.#ctor">
      <summary>
        <see cref="T:System.Configuration.SettingsBase" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)">
      <summary>
        <see cref="T:System.Configuration.SettingsBase" /> 개체가 사용하는 내부 속성을 초기화합니다.</summary>
      <param name="context">설정 속성과 관련된 설정 컨텍스트입니다.</param>
      <param name="properties">
        <see cref="T:System.Configuration.SettingsBase" /> 인스턴스에서 액세스할 수 있는 설정 속성입니다.</param>
      <param name="providers">속성 값을 로드하고 저장할 때 사용할 초기화된 공급자입니다.</param>
    </member>
    <member name="M:System.Configuration.SettingsBase.Save">
      <summary>설정 속성의 현재 값을 저장합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsBase.Synchronized(System.Configuration.SettingsBase)">
      <summary>동기화되어 스레드로부터 안전한 <see cref="T:System.Configuration.SettingsBase" /> 클래스를 제공합니다.</summary>
      <param name="settingsBase">사용자 속성 설정을 지원하는 데 사용되는 클래스입니다.</param>
      <returns>동기화된 <see cref="T:System.Configuration.SettingsBase" /> 클래스입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsBase.Context">
      <summary>연결된 설정 컨텍스트를 가져옵니다.</summary>
      <returns>설정 인스턴스와 연결된 <see cref="T:System.Configuration.SettingsContext" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsBase.IsSynchronized">
      <summary>개체에 대한 액세스가 동기화되어 스레드로부터 안전한지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsBase" />에 대한 액세스가 동기화되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsBase.Item(System.String)">
      <summary>지정된 설정 속성의 값을 가져오거나 설정합니다.</summary>
      <param name="propertyName">액세스할 속성의 이름을 포함하는 <see cref="T:System.String" />입니다.</param>
      <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">현재 개체와 연결된 속성이 없거나 지정된 속성을 찾을 수 없는 경우</exception>
      <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException">읽기 전용 속성을 설정하려고 한 경우</exception>
      <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException">set 작업 중 제공된 값이 설정 속성과 호환되지 않는 형식인 경우</exception>
      <returns>명명된 설정 속성의 값입니다(있는 경우).</returns>
    </member>
    <member name="P:System.Configuration.SettingsBase.Properties">
      <summary>설정 속성의 컬렉션을 가져옵니다.</summary>
      <returns>모든 <see cref="T:System.Configuration.SettingsPropertyCollection" /> 개체가 포함된 <see cref="T:System.Configuration.SettingsProperty" /> 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsBase.PropertyValues">
      <summary>설정 속성 값의 컬렉션을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsPropertyValue" /> 인스턴스가 관리하는 속성의 실제 데이터 값을 나타내는 <see cref="T:System.Configuration.SettingsBase" /> 개체의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsBase.Providers">
      <summary>설정 공급자의 컬렉션을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsProviderCollection" /> 개체를 포함하는 <see cref="T:System.Configuration.SettingsProvider" /></returns>
    </member>
    <member name="T:System.Configuration.SettingsContext">
      <summary>공급자가 설정을 유지할 때 사용할 수 있는 컨텍스트 정보를 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsContext.#ctor">
      <summary>
        <see cref="T:System.Configuration.SettingsContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Configuration.SettingsDescriptionAttribute">
      <summary>개별 구성 속성을 설명하는 문자열을 제공합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsDescriptionAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Configuration.SettingsDescriptionAttribute" /> 클래스의 인스턴스를 초기화합니다.</summary>
      <param name="description">설명 텍스트로 사용되는 <see cref="T:System.String" />입니다.</param>
    </member>
    <member name="P:System.Configuration.SettingsDescriptionAttribute.Description">
      <summary>연결된 구성 속성에 대한 설명 텍스트를 가져옵니다.</summary>
      <returns>연결된 구성 속성에 대한 설명 텍스트를 포함하는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.SettingsGroupDescriptionAttribute">
      <summary>애플리케이션 설정 속성 그룹을 설명하는 문자열을 제공합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsGroupDescriptionAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Configuration.SettingsGroupDescriptionAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="description">애플리케이션 설정 그룹에 대한 설명 텍스트를 포함하는 <see cref="T:System.String" />입니다.</param>
    </member>
    <member name="P:System.Configuration.SettingsGroupDescriptionAttribute.Description">
      <summary>애플리케이션 설정 속성 그룹에 대한 설명 텍스트입니다.</summary>
      <returns>애플리케이션 설정 그룹에 대한 설명 텍스트를 포함하는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.SettingsGroupNameAttribute">
      <summary>애플리케이션 설정 속성 그룹의 이름을 지정합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsGroupNameAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Configuration.SettingsGroupNameAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="groupName">애플리케이션 설정 속성 그룹의 이름을 포함하는 <see cref="T:System.String" />입니다.</param>
    </member>
    <member name="P:System.Configuration.SettingsGroupNameAttribute.GroupName">
      <summary>애플리케이션 설정 속성 그룹의 이름을 가져옵니다.</summary>
      <returns>애플리케이션 설정 속성 그룹의 이름을 포함하는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.SettingsLoadedEventArgs">
      <summary>
        <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsLoadedEventArgs.#ctor(System.Configuration.SettingsProvider)">
      <summary>
        <see cref="T:System.Configuration.SettingsLoadedEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="provider">설정이 로드되는 <see cref="T:System.Configuration.SettingsProvider" /> 개체입니다.</param>
    </member>
    <member name="P:System.Configuration.SettingsLoadedEventArgs.Provider">
      <summary>구성 설정을 저장하는 데 사용되는 설정 공급자를 가져옵니다.</summary>
      <returns>설정 공급자입니다.</returns>
    </member>
    <member name="T:System.Configuration.SettingsLoadedEventHandler">
      <summary>
        <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" /> 이벤트를 처리할 메서드를 나타냅니다.</summary>
      <param name="sender">대개 설정 클래스인 이벤트의 소스입니다.</param>
      <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Configuration.SettingsLoadedEventArgs" /> 개체입니다.</param>
    </member>
    <member name="T:System.Configuration.SettingsManageability">
      <summary>애플리케이션 설정에 사용할 수 있는 서비스를 나타내는 값을 제공합니다.</summary>
    </member>
    <member name="F:System.Configuration.SettingsManageability.Roaming">
      <summary>애플리케이션 설정이 로밍 사용자 프로필에 저장될 수 있도록 합니다. 로밍 사용자 프로필에 대한 자세한 내용은 격리된 스토리지 및 로밍을 참조하세요.</summary>
    </member>
    <member name="T:System.Configuration.SettingsManageabilityAttribute">
      <summary>애플리케이션 설정 속성에 대한 특수 서비스를 지정합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsManageabilityAttribute.#ctor(System.Configuration.SettingsManageability)">
      <summary>
        <see cref="T:System.Configuration.SettingsManageabilityAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="manageability">요청되는 서비스를 열거하는 <see cref="T:System.Configuration.SettingsManageability" /> 값입니다.</param>
    </member>
    <member name="P:System.Configuration.SettingsManageabilityAttribute.Manageability">
      <summary>요청된 특수 서비스 집합을 가져옵니다.</summary>
      <returns>요청된 서비스에 해당하는 모든 <see cref="T:System.Configuration.SettingsManageability" /> 열거형 값을 논리 <see langword="OR" /> 연산자로 결합하여 구한 값입니다.</returns>
    </member>
    <member name="T:System.Configuration.SettingsProperty">
      <summary>개별 구성 속성에 대한 메타데이터를 나타내는 클래스로 내부에서 사용됩니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsProperty.#ctor(System.Configuration.SettingsProperty)">
      <summary>제공된 매개 변수를 기반으로 <see cref="T:System.Configuration.SettingsProperty" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="propertyToCopy">기존 <see cref="T:System.Configuration.SettingsProperty" /> 개체의 복사본을 지정합니다.</param>
    </member>
    <member name="M:System.Configuration.SettingsProperty.#ctor(System.String)">
      <summary>
        <see cref="T:System.Configuration.SettingsProperty" /> 클래스의 새 인스턴스를 초기화합니다. 제공된 매개 변수를 기반으로 합니다.</summary>
      <param name="name">기존 <see cref="T:System.Configuration.SettingsProperty" /> 개체의 이름을 지정합니다.</param>
    </member>
    <member name="M:System.Configuration.SettingsProperty.#ctor(System.String,System.Type,System.Configuration.SettingsProvider,System.Boolean,System.Object,System.Configuration.SettingsSerializeAs,System.Configuration.SettingsAttributeDictionary,System.Boolean,System.Boolean)">
      <summary>제공된 매개 변수에 따라 <see cref="T:System.Configuration.SettingsProperty" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="name">
        <see cref="T:System.Configuration.SettingsProperty" /> 개체의 이름입니다.</param>
      <param name="propertyType">
        <see cref="T:System.Configuration.SettingsProperty" /> 개체의 형식입니다.</param>
      <param name="provider">유지하는 데 사용할 <see cref="T:System.Configuration.SettingsProvider" /> 개체입니다.</param>
      <param name="isReadOnly">
        <see cref="T:System.Boolean" /> 개체가 읽기 전용인지 여부를 지정하는 <see cref="T:System.Configuration.SettingsProperty" /> 값입니다.</param>
      <param name="defaultValue">
        <see cref="T:System.Configuration.SettingsProperty" /> 개체의 기본값입니다.</param>
      <param name="serializeAs">
        <see cref="T:System.Configuration.SettingsSerializeAs" /> 개체입니다. 이 개체는 애플리케이션 설정을 저장할 serialization 체계를 설정하는 데 사용되는 열거형입니다.</param>
      <param name="attributes">
        <see cref="T:System.Configuration.SettingsAttributeDictionary" /> 개체입니다.</param>
      <param name="throwOnErrorDeserializing">속성이 역직렬화되지 못한 경우 오류가 throw되는지 여부를 지정하는 부울 값입니다.</param>
      <param name="throwOnErrorSerializing">속성이 serialize되지 못한 경우 오류가 throw되는지 여부를 지정하는 부울 값입니다.</param>
    </member>
    <member name="P:System.Configuration.SettingsProperty.Attributes">
      <summary>
        <see cref="T:System.Configuration.SettingsAttributeDictionary" /> 개체의 특성을 포함하는 <see cref="T:System.Configuration.SettingsProperty" /> 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsAttributeDictionary" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.DefaultValue">
      <summary>
        <see cref="T:System.Configuration.SettingsProperty" /> 개체의 기본값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsProperty" /> 개체의 기본값을 포함하는 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.IsReadOnly">
      <summary>
        <see cref="T:System.Configuration.SettingsProperty" /> 개체가 읽기 전용인지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see langword="true" />이 읽기 전용이면 <see cref="T:System.Configuration.SettingsProperty" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.Name">
      <summary>
        <see cref="T:System.Configuration.SettingsProperty" />의 이름을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsProperty" />의 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.PropertyType">
      <summary>
        <see cref="T:System.Configuration.SettingsProperty" />의 형식을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsProperty" /> 형식입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.Provider">
      <summary>
        <see cref="T:System.Configuration.SettingsProperty" />의 공급자를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsProvider" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.SerializeAs">
      <summary>
        <see cref="T:System.Configuration.SettingsSerializeAs" />의 <see cref="T:System.Configuration.SettingsProperty" /> 개체를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsSerializeAs" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.ThrowOnErrorDeserializing">
      <summary>속성이 역직렬화되지 못한 경우 오류가 throw되는지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns>속성이 역직렬화되지 못한 경우 오류가 throw되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.ThrowOnErrorSerializing">
      <summary>속성이 serialize되지 못한 경우 오류가 throw되는지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns>속성이 serialize되지 못한 경우 오류가 throw되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.SettingsPropertyCollection">
      <summary>
        <see cref="T:System.Configuration.SettingsProperty" /> 개체의 컬렉션을 포함합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.#ctor">
      <summary>
        <see cref="T:System.Configuration.SettingsPropertyCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.Add(System.Configuration.SettingsProperty)">
      <summary>컬렉션에 <see cref="T:System.Configuration.SettingsProperty" /> 개체를 추가합니다.</summary>
      <param name="property">
        <see cref="T:System.Configuration.SettingsProperty" /> 개체입니다.</param>
      <exception cref="T:System.NotSupportedException">컬렉션이 읽기 전용입니다.</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.Clear">
      <summary>컬렉션에서 모든 <see cref="T:System.Configuration.SettingsProperty" /> 개체를 제거합니다.</summary>
      <exception cref="T:System.NotSupportedException">컬렉션이 읽기 전용입니다.</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.Clone">
      <summary>기존 컬렉션의 복사본을 만듭니다.</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsPropertyCollection" /> 클래스입니다.</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.CopyTo(System.Array,System.Int32)">
      <summary>이 <see cref="T:System.Configuration.SettingsPropertyCollection" /> 개체를 배열에 복사합니다.</summary>
      <param name="array">개체를 복사할 대상 배열입니다.</param>
      <param name="index">복사를 시작할 인덱스입니다.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.GetEnumerator">
      <summary>컬렉션에 적용되는 <see cref="T:System.Collections.IEnumerator" /> 개체를 가져옵니다.</summary>
      <returns>컬렉션에 적용되는 <see cref="T:System.Collections.IEnumerator" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnAdd(System.Configuration.SettingsProperty)">
      <summary>
        <see cref="T:System.Configuration.SettingsPropertyCollection" /> 인스턴스의 내용을 추가할 때 사용자 지정 처리를 추가로 수행합니다.</summary>
      <param name="property">
        <see cref="T:System.Configuration.SettingsProperty" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnAddComplete(System.Configuration.SettingsProperty)">
      <summary>
        <see cref="T:System.Configuration.SettingsPropertyCollection" /> 인스턴스의 내용을 추가한 후 사용자 지정 처리를 추가로 수행합니다.</summary>
      <param name="property">
        <see cref="T:System.Configuration.SettingsProperty" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnClear">
      <summary>
        <see cref="T:System.Configuration.SettingsPropertyCollection" /> 인스턴스의 내용을 지울 때 사용자 지정 처리를 추가로 수행합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnClearComplete">
      <summary>
        <see cref="T:System.Configuration.SettingsPropertyCollection" /> 인스턴스의 내용을 지운 후 사용자 지정 처리를 추가로 수행합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnRemove(System.Configuration.SettingsProperty)">
      <summary>
        <see cref="T:System.Configuration.SettingsPropertyCollection" /> 인스턴스의 내용을 제거할 때 사용자 지정 처리를 추가로 수행합니다.</summary>
      <param name="property">
        <see cref="T:System.Configuration.SettingsProperty" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnRemoveComplete(System.Configuration.SettingsProperty)">
      <summary>
        <see cref="T:System.Configuration.SettingsPropertyCollection" /> 인스턴스의 내용을 제거한 후 사용자 지정 처리를 추가로 수행합니다.</summary>
      <param name="property">
        <see cref="T:System.Configuration.SettingsProperty" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.Remove(System.String)">
      <summary>컬렉션에서 <see cref="T:System.Configuration.SettingsProperty" /> 개체를 제거합니다.</summary>
      <param name="name">
        <see cref="T:System.Configuration.SettingsProperty" /> 개체의 이름입니다.</param>
      <exception cref="T:System.NotSupportedException">컬렉션이 읽기 전용입니다.</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.SetReadOnly">
      <summary>컬렉션을 읽기 전용으로 설정합니다.</summary>
    </member>
    <member name="P:System.Configuration.SettingsPropertyCollection.Count">
      <summary>컬렉션에 있는 <see cref="T:System.Configuration.SettingsProperty" /> 개체의 수를 지정하는 값을 가져옵니다.</summary>
      <returns>컬렉션의 <see cref="T:System.Configuration.SettingsProperty" /> 개체 수입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyCollection.IsSynchronized">
      <summary>해당 컬렉션에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsPropertyCollection" />에 대한 액세스가 동기화되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyCollection.Item(System.String)">
      <summary>지정된 이름을 갖는 컬렉션 항목을 가져옵니다.</summary>
      <param name="name">
        <see cref="T:System.Configuration.SettingsProperty" /> 개체의 이름입니다.</param>
      <returns>지정된 <paramref name="name" />의 <see cref="T:System.Configuration.SettingsProperty" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyCollection.SyncRoot">
      <summary>컬렉션에 대한 액세스를 동기화할 개체를 가져옵니다.</summary>
      <returns>컬렉션에 대한 액세스를 동기화할 개체입니다.</returns>
    </member>
    <member name="T:System.Configuration.SettingsPropertyIsReadOnlyException">
      <summary>읽기 전용 <see cref="T:System.Configuration.SettingsProperty" /> 개체에 대한 예외를 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor">
      <summary>
        <see cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>제공된 매개 변수를 기반으로 <see cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info">발생되는 예외에 대해 직렬화된 개체 데이터를 보유하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="context">serialize된 스트림의 소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor(System.String)">
      <summary>제공된 매개 변수에 따라 <see cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외 메시지를 포함하는 문자열입니다.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor(System.String,System.Exception)">
      <summary>제공된 매개 변수에 따라 <see cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외 메시지를 포함하는 문자열입니다.</param>
      <param name="innerException">현재 예외의 원인인 예외입니다.</param>
    </member>
    <member name="T:System.Configuration.SettingsPropertyNotFoundException">
      <summary>찾을 수 없는 <see cref="T:System.Configuration.SettingsProperty" /> 개체에 대한 예외를 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyNotFoundException.#ctor">
      <summary>
        <see cref="T:System.Configuration.SettingsPropertyNotFoundException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>제공된 매개 변수에 따라 <see cref="T:System.Configuration.SettingsPropertyNotFoundException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info">발생되는 예외에 대해 직렬화된 개체 데이터를 보유하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="context">serialize된 스트림의 소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyNotFoundException.#ctor(System.String)">
      <summary>제공된 매개 변수에 따라 <see cref="T:System.Configuration.SettingsPropertyNotFoundException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외 메시지를 포함하는 문자열입니다.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyNotFoundException.#ctor(System.String,System.Exception)">
      <summary>제공된 매개 변수에 따라 <see cref="T:System.Configuration.SettingsPropertyNotFoundException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외 메시지를 포함하는 문자열입니다.</param>
      <param name="innerException">현재 예외의 원인인 예외입니다.</param>
    </member>
    <member name="T:System.Configuration.SettingsPropertyValue">
      <summary>
        <see cref="T:System.Configuration.SettingsBase" /> 인스턴스에서 로드하고 저장할 수 있는 설정 속성의 값을 포함합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValue.#ctor(System.Configuration.SettingsProperty)">
      <summary>제공된 매개 변수에 따라 <see cref="T:System.Configuration.SettingsPropertyValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="property">
        <see cref="T:System.Configuration.SettingsProperty" /> 개체를 지정합니다.</param>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.Deserialized">
      <summary>
        <see cref="T:System.Configuration.SettingsProperty" /> 개체의 값이 역직렬화되었는지 여부를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsProperty" /> 개체의 값이 역직렬화되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.IsDirty">
      <summary>
        <see cref="T:System.Configuration.SettingsProperty" /> 개체의 값이 변경되었는지 여부를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsProperty" /> 개체의 값이 변경되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.Name">
      <summary>연결된 <see cref="T:System.Configuration.SettingsProperty" /> 개체에서 속성의 이름을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsProperty" /> 개체의 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.Property">
      <summary>
        <see cref="T:System.Configuration.SettingsProperty" /> 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsProperty" /> 개체를 설명하는 <see cref="T:System.Configuration.SettingsPropertyValue" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.PropertyValue">
      <summary>
        <see cref="T:System.Configuration.SettingsProperty" /> 개체의 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> 속성에서 기본값을 사용하려고 하는 동안 오류가 발생한 경우.  <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> 속성을 유효한 형식으로 변환하지 못했거나 결과 값이 <see cref="P:System.Configuration.SettingsProperty.PropertyType" />에서 정의하는 형식과 호환되지 않습니다.</exception>
      <returns>
        <see cref="T:System.Configuration.SettingsProperty" /> 개체의 값입니다. 이 값이 설정되면 <see cref="P:System.Configuration.SettingsPropertyValue.IsDirty" /> 속성이 <see langword="true" />로 설정되고 <see cref="P:System.Configuration.SettingsPropertyValue.UsingDefaultValue" />가 <see langword="false" />로 설정됩니다.  
  
값이 <see cref="P:System.Configuration.SettingsPropertyValue.PropertyValue" /> 속성에서 처음으로 액세스되는 경우 값이 처음에 <see cref="T:System.Configuration.SettingsPropertyValue" /> 속성을 사용하여 serialize된 표현으로 <see cref="P:System.Configuration.SettingsPropertyValue.SerializedValue" /> 개체에 저장되었으면 <see cref="P:System.Configuration.SettingsPropertyValue.PropertyValue" /> 속성은 내부 값의 deserialization을 발생시킵니다.  파생 작업으로 <see cref="P:System.Configuration.SettingsPropertyValue.Deserialized" /> 속성이 <see langword="true" />로 설정됩니다.  
  
이 이벤트 체인이 ASP.NET에서 발생하고 deserialization 프로세스 중에 오류가 발생하면 ASP.NET의 상태 모니터링 기능을 사용하여 오류가 기록됩니다. 즉, 기본적으로 ASP.NET에서 실행할 경우 deserialization 오류가 애플리케이션 이벤트 로그에 표시됩니다. 이 프로세스가 ASP.NET 외부에서 발생하고 deserialization 중에 오류가 발생하면 오류가 표시되지 않으며 deserialization 중에 논리의 나머지 부분이 수행됩니다. 역직렬화하려고 할 때 역직렬화할 직렬화된 값이 없는 경우 연결된 <see cref="T:System.Configuration.SettingsPropertyValue" /> 인스턴스에 정의된 것처럼 기본값이 구성되어 있으면 <see cref="T:System.Configuration.SettingsProperty" /> 개체가 기본값을 대신 반환하려고 합니다. 이 경우 <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> 속성이 <see langword="null" />이나 "[null]" 문자열로 설정되어 있으면 <see cref="T:System.Configuration.SettingsPropertyValue" /> 개체가 <see cref="P:System.Configuration.SettingsPropertyValue.PropertyValue" /> 속성을 참조 형식의 경우 <see langword="null" />로 초기화하고 연결된 값 형식의 경우 기본값으로 초기화합니다.  번면에 <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> 속성이 유효한 개체 참조나 "[null]"이 아닌 문자열 값을 보유하고 있으면 <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> 속성이 대신 반환됩니다.  
  
역직렬화하려고 할 때 역직렬화할 직렬화된 값이 없는 경우 기본값이 지정되어 있지 않으면 문자열 형식에 대해 빈 문자열이 반환됩니다. 다른 모든 형식의 경우에는를 호출 하 여 기본 인스턴스가 반환 됩니다. 즉, <see cref="M:System.Activator.CreateInstance(System.Type)" /> 참조 형식에 대해 매개 변수가 없는 생성자를 사용 하 여 개체 인스턴스를 만들려고 시도 합니다.  기본 인스턴스 반환에 실패하면 <see langword="null" />이 반환됩니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.SerializedValue">
      <summary>
        <see cref="T:System.Configuration.SettingsProperty" /> 개체의 serialize된 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException">속성의 serialization 옵션이 문자열 형식 변환기를 사용하도록 나타내지만 형식 변환기를 사용할 수 없는 경우</exception>
      <returns>
        <see cref="T:System.Configuration.SettingsProperty" /> 개체의 serialize된 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.UsingDefaultValue">
      <summary>연결된 <see cref="T:System.Configuration.SettingsPropertyValue" /> 개체의 <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> 속성 값에서 정의하는 것과 같은 기본값이 <see cref="T:System.Configuration.SettingsProperty" /> 개체의 값인지 여부를 지정하는 부울 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsProperty" /> 개체의 값이 기본값이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.SettingsPropertyValueCollection">
      <summary>
        <see cref="T:System.Configuration.SettingsProperty" /> 개체를 <see cref="T:System.Configuration.SettingsPropertyValue" /> 개체로 매핑하여 설정 속성 값의 컬렉션을 포함합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.#ctor">
      <summary>
        <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.Add(System.Configuration.SettingsPropertyValue)">
      <summary>컬렉션에 <see cref="T:System.Configuration.SettingsPropertyValue" /> 개체를 추가합니다.</summary>
      <param name="property">
        <see cref="T:System.Configuration.SettingsPropertyValue" /> 개체입니다.</param>
      <exception cref="T:System.NotSupportedException">컬렉션에 항목을 추가하려고 했지만 컬렉션이 읽기 전용으로 표시되어 있는 경우</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.Clear">
      <summary>컬렉션에서 모든 <see cref="T:System.Configuration.SettingsPropertyValue" /> 개체를 제거합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.Clone">
      <summary>기존 컬렉션의 복사본을 만듭니다.</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> 클래스입니다.</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.CopyTo(System.Array,System.Int32)">
      <summary>이 <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> 컬렉션을 배열에 복사합니다.</summary>
      <param name="array">컬렉션을 복사할 대상인 배열입니다.</param>
      <param name="index">복사를 시작할 인덱스입니다.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.GetEnumerator">
      <summary>컬렉션에 적용되는 <see cref="T:System.Collections.IEnumerator" /> 개체를 가져옵니다.</summary>
      <returns>컬렉션에 적용되는 <see cref="T:System.Collections.IEnumerator" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.Remove(System.String)">
      <summary>컬렉션에서 <see cref="T:System.Configuration.SettingsPropertyValue" /> 개체를 제거합니다.</summary>
      <param name="name">
        <see cref="T:System.Configuration.SettingsPropertyValue" /> 개체의 이름입니다.</param>
      <exception cref="T:System.NotSupportedException">컬렉션에서 항목을 제거하려고 했지만 컬렉션이 읽기 전용으로 표시되어 있는 경우</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.SetReadOnly">
      <summary>컬렉션을 읽기 전용으로 설정합니다.</summary>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValueCollection.Count">
      <summary>컬렉션에 있는 <see cref="T:System.Configuration.SettingsPropertyValue" /> 개체의 수를 지정하는 값을 가져옵니다.</summary>
      <returns>컬렉션의 <see cref="T:System.Configuration.SettingsPropertyValue" /> 개체 수입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValueCollection.IsSynchronized">
      <summary>해당 컬렉션에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> 컬렉션에 대한 액세스가 동기화되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValueCollection.Item(System.String)">
      <summary>컬렉션에서 항목을 가져옵니다.</summary>
      <param name="name">
        <see cref="T:System.Configuration.SettingsPropertyValue" /> 개체입니다.</param>
      <returns>지정된 <paramref name="name" />의 <see cref="T:System.Configuration.SettingsPropertyValue" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValueCollection.SyncRoot">
      <summary>컬렉션에 대한 액세스를 동기화할 개체를 가져옵니다.</summary>
      <returns>컬렉션에 대한 액세스를 동기화할 개체입니다.</returns>
    </member>
    <member name="T:System.Configuration.SettingsPropertyWrongTypeException">
      <summary>잘못된 형식을 <see cref="T:System.Configuration.SettingsProperty" /> 개체와 함께 사용하는 경우 throw되는 예외를 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor">
      <summary>
        <see cref="T:System.Configuration.SettingsPropertyWrongTypeException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>제공된 매개 변수를 기반으로 <see cref="T:System.Configuration.SettingsPropertyWrongTypeException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info">throw되는 예외에 대해 serialize된 개체 데이터를 보유하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="context">serialize된 스트림의 소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor(System.String)">
      <summary>제공된 매개 변수를 기반으로 <see cref="T:System.Configuration.SettingsPropertyWrongTypeException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외 메시지를 포함하는 문자열입니다.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor(System.String,System.Exception)">
      <summary>제공된 매개 변수를 기반으로 <see cref="T:System.Configuration.SettingsPropertyWrongTypeException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외 메시지를 포함하는 문자열입니다.</param>
      <param name="innerException">현재 예외의 원인인 예외입니다.</param>
    </member>
    <member name="T:System.Configuration.SettingsProvider">
      <summary>애플리케이션 설정 아키텍처에서 사용자 지정 설정 공급자를 파생시키기 위한 기본 클래스 역할을 합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsProvider.#ctor">
      <summary>
        <see cref="T:System.Configuration.SettingsProvider" /> 클래스의 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <summary>지정된 애플리케이션 인스턴스와 설정 속성 그룹에 대한 설정 속성 값의 컬렉션을 반환합니다.</summary>
      <param name="context">현재 애플리케이션의 용도를 설명하는 <see cref="T:System.Configuration.SettingsContext" />입니다.</param>
      <param name="collection">값이 검색될 설정 속성 그룹을 포함하는 <see cref="T:System.Configuration.SettingsPropertyCollection" />입니다.</param>
      <returns>지정된 설정 속성 그룹에 대한 값을 포함하는 <see cref="T:System.Configuration.SettingsPropertyValueCollection" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
      <summary>지정된 속성 설정 그룹의 값을 설정합니다.</summary>
      <param name="context">현재 애플리케이션의 용도를 설명하는 <see cref="T:System.Configuration.SettingsContext" />입니다.</param>
      <param name="collection">설정할 속성 설정 그룹을 나타내는 <see cref="T:System.Configuration.SettingsPropertyValueCollection" />입니다.</param>
    </member>
    <member name="P:System.Configuration.SettingsProvider.ApplicationName">
      <summary>현재 실행되는 애플리케이션의 이름을 가져오거나 설정합니다.</summary>
      <returns>A <see cref="T:System.String" /> 를 포함 하지 않는 전체 경로 또는 확장명을 예를 들어, 애플리케이션의 약식된 이름을 포함 하는 <c>SimpleAppSettings</c>합니다.</returns>
    </member>
    <member name="T:System.Configuration.SettingsProviderAttribute">
      <summary>현재 애플리케이션 설정 클래스나 속성에 대한 스토리지를 제공하는 데 사용되는 설정 공급자를 지정합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsProviderAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Configuration.SettingsProviderAttribute" /> 클래스의 인스턴스를 초기화합니다.</summary>
      <param name="providerTypeName">설정 공급자의 이름을 포함하는 <see cref="T:System.String" />입니다.</param>
    </member>
    <member name="M:System.Configuration.SettingsProviderAttribute.#ctor(System.Type)">
      <summary>
        <see cref="T:System.Configuration.SettingsProviderAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="providerType">설정 공급자 형식을 포함하는 <see cref="T:System.Type" />입니다.</param>
    </member>
    <member name="P:System.Configuration.SettingsProviderAttribute.ProviderTypeName">
      <summary>설정 공급자의 형식 이름을 가져옵니다.</summary>
      <returns>설정 공급자의 이름을 포함하는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.SettingsProviderCollection">
      <summary>애플리케이션 설정 공급자의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsProviderCollection.#ctor">
      <summary>
        <see cref="T:System.Configuration.SettingsProviderCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
      <summary>새 설정 공급자를 컬렉션에 추가합니다.</summary>
      <param name="provider">컬렉션에 추가할 <see cref="T:System.Configuration.Provider.ProviderBase" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="provider" /> 매개 변수가 <see cref="T:System.Configuration.SettingsProvider" /> 형식이 아닌 경우  
  
또는 
공급자 매개 변수의 <see cref="P:System.Configuration.Provider.ProviderBase.Name" /> 속성이 null이거나 빈 문자열인 경우  
  
또는 
<see cref="P:System.Configuration.Provider.ProviderBase.Name" />이 같은 설정 공급자가 컬렉션에 이미 있는 경우</exception>
      <exception cref="T:System.NotSupportedException">컬렉션이 읽기 전용입니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Configuration.SettingsProviderCollection.Item(System.String)">
      <summary>지정된 이름과 일치하는 컬렉션의 설정 공급자를 가져옵니다.</summary>
      <param name="name">설정 공급자의 이름을 포함하는 <see cref="T:System.String" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.NotSupportedException">이 값을 설정할 때 컬렉션이 읽기 전용인 경우</exception>
      <returns>이름 매개 변수에서 지정하는 이름과 일치하는 이름의 <see cref="T:System.Configuration.SettingsProvider" />가 있으면 해당 설정 공급자이고, 그렇지 않으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.SettingsSavingEventHandler">
      <summary>
        <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" /> 이벤트를 처리할 메서드를 나타냅니다.</summary>
      <param name="sender">이벤트의 소스로, 대개 데이터 컨테이너나 데이터 바인딩된 컬렉션입니다.</param>
      <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.CancelEventArgs" />입니다.</param>
    </member>
    <member name="T:System.Configuration.SettingsSerializeAs">
      <summary>애플리케이션 설정을 저장하는 데 사용되는 serialization 체계를 결정합니다.</summary>
    </member>
    <member name="F:System.Configuration.SettingsSerializeAs.Binary">
      <summary>설정 속성이 이진 개체 serialization을 사용하여 serialize됩니다.</summary>
    </member>
    <member name="F:System.Configuration.SettingsSerializeAs.ProviderSpecific">
      <summary>설정 공급자가 속성이나 속성 형식을 암시적으로 인식하고 적절한 serialization 메커니즘을 선택합니다. 사용자 지정 serialization에 사용되는 경우가 많습니다.</summary>
    </member>
    <member name="F:System.Configuration.SettingsSerializeAs.String">
      <summary>설정 속성이 일반 텍스트로 serialize됩니다.</summary>
    </member>
    <member name="F:System.Configuration.SettingsSerializeAs.Xml">
      <summary>설정 속성이 XML serialization을 사용하여 XML로 serialize됩니다.</summary>
    </member>
    <member name="T:System.Configuration.SettingsSerializeAsAttribute">
      <summary>설정 공급자가 사용해야 하는 serialization 메커니즘을 지정합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsSerializeAsAttribute.#ctor(System.Configuration.SettingsSerializeAs)">
      <summary>
        <see cref="T:System.Configuration.SettingsSerializeAsAttribute" /> 클래스의 인스턴스를 초기화합니다.</summary>
      <param name="serializeAs">serialization 체계를 지정하는 <see cref="T:System.Configuration.SettingsSerializeAs" /> 열거형 값입니다.</param>
    </member>
    <member name="P:System.Configuration.SettingsSerializeAsAttribute.SerializeAs">
      <summary>serialization 체계를 지정하는 <see cref="T:System.Configuration.SettingsSerializeAs" /> 열거형 값을 가져옵니다.</summary>
      <returns>serialization 체계를 지정하는 <see cref="T:System.Configuration.SettingsSerializeAs" /> 열거형 값입니다.</returns>
    </member>
    <member name="T:System.Configuration.SettingValueElement">
      <summary>설정의 serialize된 값을 나타내는 XML을 포함합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingValueElement.#ctor">
      <summary>
        <see cref="T:System.Configuration.SettingValueElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingValueElement.Equals(System.Object)">
      <summary>현재 <see cref="T:System.Configuration.SettingValueElement" /> 인스턴스를 지정된 개체와 비교합니다.</summary>
      <param name="settingValue">비교할 개체입니다.</param>
      <returns>
        <see cref="T:System.Configuration.SettingValueElement" /> 인스턴스가 지정된 개체와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.SettingValueElement.GetHashCode">
      <summary>현재 <see cref="T:System.Configuration.SettingValueElement" /> 인스턴스를 나타내는 고유 값을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Configuration.SettingValueElement" /> 인스턴스를 나타내는 고유 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingValueElement.ValueXml">
      <summary>
        <see cref="T:System.Configuration.SettingValueElement" /> 개체를 사용하여 <see cref="T:System.Xml.XmlNode" /> 개체의 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Xml.XmlNode" />의 값이 포함된 <see cref="T:System.Configuration.SettingElement" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Configuration.SingleTagSectionHandler">
      <summary>.config 파일의 단일 XML 태그가 나타내는 구성 섹션을 처리합니다.</summary>
    </member>
    <member name="M:System.Configuration.SingleTagSectionHandler.#ctor">
      <summary>
        <see cref="T:System.Configuration.SingleTagSectionHandler" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.SingleTagSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary>이 개체의 새 인스턴스를 만들기 위해 내부적으로 사용됩니다.</summary>
      <param name="parent">이 개체의 부모입니다.</param>
      <param name="context">이 개체의 컨텍스트입니다.</param>
      <param name="section">구성 파일의 <see cref="T:System.Xml.XmlNode" /> 개체입니다.</param>
      <returns>만든 개체 처리기입니다.</returns>
    </member>
    <member name="T:System.Configuration.SpecialSetting">
      <summary>애플리케이션 설정 속성의 특수 설정 범주를 지정합니다.</summary>
    </member>
    <member name="F:System.Configuration.SpecialSetting.ConnectionString">
      <summary>구성 속성이 주로 데이터 저장소나 네트워크 리소스에 대한 연결 문자열을 나타냅니다.</summary>
    </member>
    <member name="F:System.Configuration.SpecialSetting.WebServiceUrl">
      <summary>구성 속성이 웹 서비스에 대한 URL(Uniform Resource Locator)을 나타냅니다.</summary>
    </member>
    <member name="T:System.Configuration.SpecialSettingAttribute">
      <summary>애플리케이션 설정 속성에 특수한 의미가 있음을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.SpecialSettingAttribute.#ctor(System.Configuration.SpecialSetting)">
      <summary>
        <see cref="T:System.Configuration.SpecialSettingAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="specialSetting">애플리케이션 설정 속성의 범주를 정의하는 <see cref="T:System.Configuration.SpecialSetting" /> 열거형 값입니다.</param>
    </member>
    <member name="P:System.Configuration.SpecialSettingAttribute.SpecialSetting">
      <summary>애플리케이션 설정 속성의 특수 설정 범주를 설명하는 값을 가져옵니다.</summary>
      <returns>애플리케이션 설정 속성의 범주를 정의하는 <see cref="T:System.Configuration.SpecialSetting" /> 열거형 값입니다.</returns>
    </member>
    <member name="T:System.Configuration.StringValidator">
      <summary>문자열의 유효성을 검사합니다.</summary>
    </member>
    <member name="M:System.Configuration.StringValidator.#ctor(System.Int32)">
      <summary>제공된 매개 변수에 따라 <see cref="T:System.Configuration.StringValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="minLength">문자열 값의 최소 길이를 지정하는 정수입니다.</param>
    </member>
    <member name="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32)">
      <summary>제공된 매개 변수에 따라 <see cref="T:System.Configuration.StringValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="minLength">문자열 값의 최소 길이를 지정하는 정수입니다.</param>
      <param name="maxLength">문자열 값의 최대 길이를 지정하는 정수입니다.</param>
    </member>
    <member name="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32,System.String)">
      <summary>제공된 매개 변수에 따라 <see cref="T:System.Configuration.StringValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="minLength">문자열 값의 최소 길이를 지정하는 정수입니다.</param>
      <param name="maxLength">문자열 값의 최대 길이를 지정하는 정수입니다.</param>
      <param name="invalidCharacters">잘못된 문자를 나타내는 문자열입니다.</param>
    </member>
    <member name="M:System.Configuration.StringValidator.CanValidate(System.Type)">
      <summary>형식에 따라 개체의 유효성을 검사할 수 있는지 여부를 확인합니다.</summary>
      <param name="type">개체 형식입니다.</param>
      <returns>
        <paramref name="type" /> 매개 변수가 문자열과 일치하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.StringValidator.Validate(System.Object)">
      <summary>개체의 값이 유효한지 여부를 확인합니다.</summary>
      <param name="value">개체 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" />가 생성자에 정의된 <paramref name="minValue" />보다 작거나 <paramref name="maxValue" /> 보다 큽니다.  
  
또는 
 <paramref name="value" />에 잘못된 문자가 들어 있는 경우</exception>
    </member>
    <member name="T:System.Configuration.StringValidatorAttribute">
      <summary>구성 속성에 대한 문자열의 유효성을 검사하도록 .NET Framework에 선언적으로 지시합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.StringValidatorAttribute.#ctor">
      <summary>
        <see cref="T:System.Configuration.StringValidatorAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.InvalidCharacters">
      <summary>속성에 사용할 수 없는 문자를 가져오거나 설정합니다.</summary>
      <returns>속성에 사용할 수 없는 문자 집합이 포함된 문자열입니다.</returns>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.MaxLength">
      <summary>속성에 할당할 문자열의 허용되는 최대 길이를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">선택한 값이 <see cref="P:System.Configuration.StringValidatorAttribute.MinLength" />보다 작은 경우</exception>
      <returns>속성에 할당할 문자열에 허용되는 최대 길이를 나타내는 정수입니다.</returns>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.MinLength">
      <summary>속성에 할당할 문자열의 허용되는 최소값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">선택한 값이 <see cref="P:System.Configuration.StringValidatorAttribute.MaxLength" />보다 큰 경우</exception>
      <returns>속성에 할당할 문자열에 허용되는 최소 길이를 나타내는 정수입니다.</returns>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.ValidatorInstance">
      <summary>
        <see cref="T:System.Configuration.StringValidator" /> 클래스의 인스턴스를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.StringValidator" /> 유효성 검사기 인스턴스에 있는 현재 <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 설정입니다.</returns>
    </member>
    <member name="T:System.Configuration.SubclassTypeValidator">
      <summary>개체가 지정된 형식의 파생 클래스인지 확인합니다.</summary>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidator.#ctor(System.Type)">
      <summary>
        <see cref="T:System.Configuration.SubclassTypeValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="baseClass">유효성 검사의 기준으로 사용할 기본 클래스입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="baseClass" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidator.CanValidate(System.Type)">
      <summary>형식에 따라 개체의 유효성을 검사할 수 있는지 여부를 확인합니다.</summary>
      <param name="type">개체 형식입니다.</param>
      <returns>
        <paramref name="type" /> 매개 변수가 유효성을 검사할 수 있는 형식과 일치하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidator.Validate(System.Object)">
      <summary>개체의 값이 유효한지 여부를 확인합니다.</summary>
      <param name="value">개체 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" />가 생성자에 정의된 대로 <paramref name="baseClass" />에서 파생될 수 있는 <see cref="T:System.Type" />이 아닌 경우</exception>
    </member>
    <member name="T:System.Configuration.SubclassTypeValidatorAttribute">
      <summary>구성 속성에 대한 유효성 검사를 수행하도록 .NET Framework에 선언적으로 지시합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidatorAttribute.#ctor(System.Type)">
      <summary>
        <see cref="T:System.Configuration.SubclassTypeValidatorAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="baseClass">기본 클래스 형식입니다.</param>
    </member>
    <member name="P:System.Configuration.SubclassTypeValidatorAttribute.BaseClass">
      <summary>유효성이 검사되는 개체의 기본 형식을 가져옵니다.</summary>
      <returns>유효성이 검사되는 개체의 기본 형식입니다.</returns>
    </member>
    <member name="P:System.Configuration.SubclassTypeValidatorAttribute.ValidatorInstance">
      <summary>유효성 검사기 특성 인스턴스를 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 인스턴스입니다.</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanMinutesConverter">
      <summary>분 단위로 표현된 시간 범위를 변환합니다.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesConverter.#ctor">
      <summary>
        <see cref="T:System.Configuration.TimeSpanMinutesConverter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
        <see cref="T:System.String" /> 를 <see cref="T:System.TimeSpan" />로 변환합니다.</summary>
      <param name="ctx">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="ci">변환 중 사용되는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <param name="data">변환할 <see cref="T:System.String" /> 개체입니다.</param>
      <returns>분 단위로 <paramref name="data" /> 매개 변수를 나타내는 <see cref="T:System.TimeSpan" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <see cref="T:System.TimeSpan" /> 를 <see cref="T:System.String" />로 변환합니다.</summary>
      <param name="ctx">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="ci">변환 중 사용되는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <param name="value">변환할 대상 값입니다.</param>
      <param name="type">변환할 대상 형식입니다.</param>
      <returns>분 단위로 <paramref name="value" /> 매개 변수를 나타내는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanMinutesOrInfiniteConverter">
      <summary>분 단위나 표준 무한 시간 범위로 표현된 <see cref="T:System.TimeSpan" />을 변환합니다.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.#ctor">
      <summary>
        <see cref="T:System.Configuration.TimeSpanMinutesOrInfiniteConverter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
        <see cref="T:System.String" /> 를 <see cref="T:System.TimeSpan" />로 변환합니다.</summary>
      <param name="ctx">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="ci">변환 중 사용되는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <param name="data">변환할 <see cref="T:System.String" /> 개체입니다.</param>
      <returns>
        <paramref name="data" /> 매개 변수가 <see cref="F:System.TimeSpan.MaxValue" /> "infinite"이면 <see cref="T:System.String" />이고, 그렇지 않으면 분 단위로 <paramref name="data" /> 매개 변수를 나타내는 <see cref="T:System.TimeSpan" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <see cref="T:System.TimeSpan" /> 를 <see cref="T:System.String" />로 변환합니다.</summary>
      <param name="ctx">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="ci">변환 중 사용되는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <param name="value">변환할 값입니다.</param>
      <param name="type">변환 형식입니다.</param>
      <returns>
        <paramref name="value" /> 매개 변수가 <see cref="T:System.String" />이면 <see cref="F:System.TimeSpan.MaxValue" /> "infinite"이고, 그렇지 않으면 분 단위로 <paramref name="value" /> 매개 변수를 나타내는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanSecondsConverter">
      <summary>초 단위로 표현된 시간 범위를 변환합니다.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsConverter.#ctor">
      <summary>
        <see cref="T:System.Configuration.TimeSpanSecondsConverter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
        <see cref="T:System.String" /> 를 <see cref="T:System.TimeSpan" />로 변환합니다.</summary>
      <param name="ctx">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="ci">변환 중 사용되는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <param name="data">변환할 <see cref="T:System.String" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="data" />를 정수 값으로 구문 분석할 수 없는 경우</exception>
      <returns>초 단위로 <paramref name="data" /> 매개 변수를 나타내는 <see cref="T:System.TimeSpan" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <see cref="T:System.TimeSpan" /> 를 <see cref="T:System.String" />로 변환합니다.</summary>
      <param name="ctx">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="ci">변환 중 사용되는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <param name="value">변환할 대상 값입니다.</param>
      <param name="type">변환할 대상 형식입니다.</param>
      <returns>분 단위로 <paramref name="value" /> 매개 변수를 나타내는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanSecondsOrInfiniteConverter">
      <summary>초 단위나 표준 무한 시간 범위로 표현된 <see cref="T:System.TimeSpan" />을 변환합니다.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.#ctor">
      <summary>
        <see cref="T:System.Configuration.TimeSpanSecondsOrInfiniteConverter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
        <see cref="T:System.String" /> 를 <see cref="T:System.TimeSpan" />로 변환합니다.</summary>
      <param name="ctx">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="ci">변환 중 사용되는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <param name="data">변환할 <see cref="T:System.String" /> 개체입니다.</param>
      <returns>
        <paramref name="data" /> 매개 변수가 <see cref="F:System.TimeSpan.MaxValue" /> "infinite"이면 <see cref="T:System.String" />이고, 그렇지 않으면 초 단위로 <paramref name="data" /> 매개 변수를 나타내는 <see cref="T:System.TimeSpan" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <see cref="T:System.TimeSpan" />을 변환합니다. <see cref="T:System.String" />.</summary>
      <param name="ctx">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="ci">변환 중 사용되는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <param name="value">변환할 값입니다.</param>
      <param name="type">변환 형식입니다.</param>
      <returns>
        <paramref name="value" /> 매개 변수가 <see cref="T:System.String" />이면 <see cref="F:System.TimeSpan.MaxValue" /> "infinite"이고, 그렇지 않으면 초 단위로 <paramref name="value" /> 매개 변수를 나타내는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanValidator">
      <summary>
        <see cref="T:System.TimeSpan" /> 개체의 유효성을 검사합니다.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan)">
      <summary>제공된 매개 변수에 따라 <see cref="T:System.Configuration.TimeSpanValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="minValue">유효성 검사를 통과할 수 있는 최소 시간을 지정하는 <see cref="T:System.TimeSpan" /> 개체입니다.</param>
      <param name="maxValue">유효성 검사를 통과할 수 있는 최대 시간을 지정하는 <see cref="T:System.TimeSpan" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan,System.Boolean)">
      <summary>제공된 매개 변수에 따라 <see cref="T:System.Configuration.TimeSpanValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="minValue">유효성 검사를 통과할 수 있는 최소 시간을 지정하는 <see cref="T:System.TimeSpan" /> 개체입니다.</param>
      <param name="maxValue">유효성 검사를 통과할 수 있는 최대 시간을 지정하는 <see cref="T:System.TimeSpan" /> 개체입니다.</param>
      <param name="rangeIsExclusive">유효성 검사 범위가 독점적인지 여부를 지정하는 <see cref="T:System.Boolean" /> 값입니다.</param>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan,System.Boolean,System.Int64)">
      <summary>제공된 매개 변수에 따라 <see cref="T:System.Configuration.TimeSpanValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="minValue">유효성 검사를 통과할 수 있는 최소 시간을 지정하는 <see cref="T:System.TimeSpan" /> 개체입니다.</param>
      <param name="maxValue">유효성 검사를 통과할 수 있는 최대 시간을 지정하는 <see cref="T:System.TimeSpan" /> 개체입니다.</param>
      <param name="rangeIsExclusive">유효성 검사 범위가 독점적인지 여부를 지정하는 <see cref="T:System.Boolean" /> 값입니다.</param>
      <param name="resolutionInSeconds">시간(초)을 지정하는 <see cref="T:System.Int64" /> 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="resolutionInSeconds" />가 <see langword="0" />보다 작은 경우  
  
또는 
 <paramref name="minValue" />가 <paramref name="maxValue" />보다 큰 경우</exception>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.CanValidate(System.Type)">
      <summary>개체 형식의 유효성을 검사할 수 있는지 여부를 확인합니다.</summary>
      <param name="type">개체의 형식입니다.</param>
      <returns>
        <paramref name="type" /> 매개 변수가 <see cref="T:System.TimeSpan" /> 값과 일치하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.Validate(System.Object)">
      <summary>개체의 값이 유효한지 여부를 확인합니다.</summary>
      <param name="value">개체의 값입니다.</param>
    </member>
    <member name="T:System.Configuration.TimeSpanValidatorAttribute">
      <summary>구성 속성에 대한 시간 유효성 검사를 수행하도록 .NET Framework에 선언적으로 지시합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="F:System.Configuration.TimeSpanValidatorAttribute.TimeSpanMaxValue">
      <summary>허용되는 절대 최대값을 가져옵니다.</summary>
    </member>
    <member name="F:System.Configuration.TimeSpanValidatorAttribute.TimeSpanMinValue">
      <summary>허용되는 절대 최소값을 가져옵니다.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanValidatorAttribute.#ctor">
      <summary>
        <see cref="T:System.Configuration.TimeSpanValidatorAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.ExcludeRange">
      <summary>
        <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MinValueString" /> 및 <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MaxValueString" />으로 정의된 범위에 정수를 포함할지 아니면 제외할지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>값을 제외해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MaxValue">
      <summary>절대 최대 <see cref="T:System.TimeSpan" /> 값을 가져옵니다.</summary>
      <returns>허용되는 최대 <see cref="T:System.TimeSpan" /> 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MaxValueString">
      <summary>상대 최대 <see cref="T:System.TimeSpan" /> 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">선택한 값이 <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MinValue" />보다 작은 값을 나타내는 경우</exception>
      <returns>허용되는 최대 <see cref="T:System.TimeSpan" /> 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MinValue">
      <summary>절대 최소 <see cref="T:System.TimeSpan" /> 값을 가져옵니다.</summary>
      <returns>허용되는 최소 <see cref="T:System.TimeSpan" /> 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MinValueString">
      <summary>상대 최소 <see cref="T:System.TimeSpan" /> 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">선택한 값이 <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MaxValue" />보다 큰 값을 나타내는 경우</exception>
      <returns>허용되는 최소 <see cref="T:System.TimeSpan" /> 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.ValidatorInstance">
      <summary>
        <see cref="T:System.Configuration.TimeSpanValidator" /> 클래스의 인스턴스를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 유효성 검사기 인스턴스입니다.</returns>
    </member>
    <member name="T:System.Configuration.TypeNameConverter">
      <summary>형식과 문자열 값 간에 변환을 수행합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.TypeNameConverter.#ctor">
      <summary>
        <see cref="T:System.Configuration.TypeNameConverter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.TypeNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
        <see cref="T:System.String" /> 개체를 <see cref="T:System.Type" /> 개체로 변환합니다.</summary>
      <param name="ctx">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="ci">변환 중 사용되는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <param name="data">변환할 <see cref="T:System.String" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Type" /> 값을 확인할 수 없는 경우</exception>
      <returns>
        <paramref name="data" /> 매개 변수를 나타내는 <see cref="T:System.Type" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.TypeNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <see cref="T:System.Type" /> 개체를 <see cref="T:System.String" /> 개체로 변환합니다.</summary>
      <param name="ctx">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="ci">변환 중 사용되는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <param name="value">변환할 대상 값입니다.</param>
      <param name="type">변환할 대상 형식입니다.</param>
      <returns>
        <paramref name="value" /> 매개 변수를 나타내는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.UriSection">
      <summary>구성 파일에 있는 Uri 섹션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.UriSection.#ctor">
      <summary>
        <see cref="T:System.Configuration.UriSection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Configuration.UriSection.Idn">
      <summary>
        <see cref="T:System.Configuration.IdnElement" /> 클래스에 IDN(International Domain Name) 처리에 대한 구성 설정을 포함하는 <see cref="T:System.Uri" /> 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Uri" /> 클래스에서 IDN(International Domain Name) 처리에 대한 구성 설정입니다.</returns>
    </member>
    <member name="P:System.Configuration.UriSection.IriParsing">
      <summary>
        <see cref="T:System.Configuration.IriParsingElement" /> 클래스에 IRI(International Resource Identifiers) 구문 분석에 대한 구성 설정을 포함하는 <see cref="T:System.Uri" /> 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Uri" /> 클래스에서 IRI(International Resource Identifiers) 구문 분석에 대한 구성 설정입니다.</returns>
    </member>
    <member name="P:System.Configuration.UriSection.SchemeSettings">
      <summary>
        <see cref="T:System.Configuration.SchemeSettingElementCollection" /> 클래스의 스키마 구문 분석에 대한 구성 설정을 포함하는 <see cref="T:System.Uri" /> 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Uri" /> 클래스의 스키마 구문 분석에 대한 구성 설정입니다.</returns>
    </member>
    <member name="T:System.Configuration.UserScopedSettingAttribute">
      <summary>애플리케이션 설정 그룹이나 속성에 애플리케이션의 각 사용자에 대한 고유 값이 포함되어 있음을 지정합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.UserScopedSettingAttribute.#ctor">
      <summary>
        <see cref="T:System.Configuration.UserScopedSettingAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Configuration.UserSettingsGroup">
      <summary>구성 파일에 있는 관련된 사용자 설정 섹션의 그룹을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.UserSettingsGroup.#ctor">
      <summary>
        <see cref="T:System.Configuration.UserSettingsGroup" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Configuration.ValidatorCallback">
      <summary>개체의 유효성 검사 후 호출할 메서드를 나타냅니다.</summary>
      <param name="value">콜백 메서드입니다.</param>
    </member>
    <member name="T:System.Configuration.WhiteSpaceTrimStringConverter">
      <summary>문자열을 정규 형식으로 변환합니다.</summary>
    </member>
    <member name="M:System.Configuration.WhiteSpaceTrimStringConverter.#ctor">
      <summary>
        <see cref="T:System.Configuration.WhiteSpaceTrimStringConverter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.WhiteSpaceTrimStringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
        <see cref="T:System.String" />을 정규 형식으로 변환합니다.</summary>
      <param name="ctx">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="ci">변환 중 사용되는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <param name="data">변환할 <see cref="T:System.String" /> 개체입니다.</param>
      <returns>변환된 값을 나타내는 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.WhiteSpaceTrimStringConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <see cref="T:System.String" />을 정규 형식으로 변환합니다.</summary>
      <param name="ctx">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="ci">변환 중 사용되는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <param name="value">변환할 대상 값입니다.</param>
      <param name="type">변환할 대상 형식입니다.</param>
      <returns>변환된 값을 나타내는 개체입니다.</returns>
    </member>
    <member name="T:System.Drawing.Configuration.SystemDrawingSection">
      <summary>
        <see cref="N:System.Drawing" /> 네임스페이스에서 클래스에 의해 사용되는 구성 섹션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Drawing.Configuration.SystemDrawingSection.#ctor">
      <summary>
        <see cref="T:System.Drawing.Configuration.SystemDrawingSection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix">
      <summary>
        <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 또는 <see cref="T:System.Drawing.BitmapSuffixInSameAssemblyAttribute" />를 사용하여 어셈블리를 선언할 때 <see cref="T:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute" />로 나타내는 파일 이름에 추가할 접미사를 가져오거나 설정합니다.</summary>
      <returns>비트맵 접미사입니다.</returns>
    </member>
    <member name="T:System.UriIdnScope">
      <summary>
        <see cref="T:System.Configuration.IdnElement" /> 네임스페이스의 <see cref="N:System.Configuration" /> 구성 설정에 사용할 수 있는 값을 제공합니다.</summary>
    </member>
    <member name="F:System.UriIdnScope.All">
      <summary>이 값은 모든 유니코드 도메인 이름을 해당하는 Punycode 항목(IDN 이름)으로 변환합니다.</summary>
    </member>
    <member name="F:System.UriIdnScope.AllExceptIntranet">
      <summary>이 값은 해당하는 Punycode 항목(IDN 이름)을 사용하도록 모든 외부 유니코드 도메인 이름을 변환합니다. 이 경우 로컬 인트라넷에 있는 국가별 이름을 처리하기 위해 인트라넷에 사용되는 DNS 서버가 유니코드 이름 확인을 지원해야 합니다.</summary>
    </member>
    <member name="F:System.UriIdnScope.None">
      <summary>이 값은 Punycode를 사용하도록 어떠한 유니코드 도메인 이름도 변환하지 않습니다. 이 값은 .NET Framework 2.0 동작과 일치하는 기본값입니다.</summary>
    </member>
  </members>
</doc>