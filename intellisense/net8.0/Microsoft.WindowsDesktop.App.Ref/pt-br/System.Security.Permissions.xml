<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Security.Permissions</name>
  </assembly>
  <members>
    <member name="T:System.ApplicationIdentity">
      <summary>Fornece a capacidade de identificar com exclusividade um aplicativo ativado por manifesto. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.ApplicationIdentity.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ApplicationIdentity" />.</summary>
      <param name="applicationIdentityFullName">O nome completo do aplicativo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="applicationIdentityFullName" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ApplicationIdentity.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Popula um objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> com os dados necessários para serializar o objeto de destino.</summary>
      <param name="info">O <see cref="T:System.Runtime.Serialization.SerializationInfo" /> a ser preenchido com dados.</param>
      <param name="context">A estrutura <see cref="T:System.Runtime.Serialization.StreamingContext" />) para a serialização.</param>
    </member>
    <member name="M:System.ApplicationIdentity.ToString">
      <summary>Retorna o nome completo do aplicativo ativado pelo manifesto.</summary>
      <returns>O nome completo do aplicativo ativado pelo manifesto.</returns>
    </member>
    <member name="P:System.ApplicationIdentity.CodeBase">
      <summary>Obtém o local do manifesto de implantação como uma URL.</summary>
      <returns>A URL do manifesto de implantação.</returns>
    </member>
    <member name="P:System.ApplicationIdentity.FullName">
      <summary>Obtém o nome completo do aplicativo.</summary>
      <returns>O nome completo do aplicativo, também conhecido como o nome de exibição.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationPermission">
      <summary>Fornece uma estrutura de permissão que permite que métodos ou classes para acessar arquivos de configuração.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Configuration.ConfigurationPermission" />.</summary>
      <param name="state">O nível de permissão a ser concedido.</param>
      <exception cref="T:System.ArgumentException">O valor de <paramref name="state" /> não é <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> nem <see cref="F:System.Security.Permissions.PermissionState.None" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.Copy">
      <summary>Retorna um novo objeto <see cref="T:System.Configuration.ConfigurationPermission" /> com o mesmo nível de permissão.</summary>
      <returns>Um novo <see cref="T:System.Configuration.ConfigurationPermission" /> com o mesmo nível de permissão.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.FromXml(System.Security.SecurityElement)">
      <summary>Lê o valor do estado de permissão do XML.</summary>
      <param name="securityElement">O elemento de configuração do qual o estado da permissão é lido.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O atributo <see langword="unrestricted" /> para o determinado <paramref name="securityElement" /> não é <see langword="true" /> nem <see langword="false" />.

- ou -

A <see cref="P:System.Security.SecurityElement.Tag" /> para o <paramref name="securityElement" /> especificado não é igual a "IPermission".

- ou -

O atributo <see langword="class" /> do <paramref name="securityElement " /> especificado é <see langword="null" /> ou não é o nome de tipo para <see cref="T:System.Configuration.ConfigurationPermission" />.

- ou -

O atributo <see langword="version" /> para o <paramref name="securityElement" /> especificado não é igual a 1.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.Intersect(System.Security.IPermission)">
      <summary>Retorna a interseção lógica entre o objeto <see cref="T:System.Configuration.ConfigurationPermission" /> e um determinado objeto que implementa a interface <see cref="T:System.Security.IPermission" />.</summary>
      <param name="target">O objeto que contém as permissões com as quais executar a interseção.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> não é digitado como <see cref="T:System.Configuration.ConfigurationPermission" />.</exception>
      <returns>A interseção lógica entre <see cref="T:System.Configuration.ConfigurationPermission" /> e um determinado objeto que implementa <see cref="T:System.Security.IPermission" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Compara o objeto <see cref="T:System.Configuration.ConfigurationPermission" /> com um objeto que implementa a interface <see cref="T:System.Security.IPermission" />.</summary>
      <param name="target">O objeto a ser comparado.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> não é digitado como <see cref="T:System.Configuration.ConfigurationPermission" />.</exception>
      <returns>
        <see langword="true" /> se o estado da permissão for igual, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.IsUnrestricted">
      <summary>Indica se o estado de permissão do objeto <see cref="T:System.Configuration.ConfigurationPermission" /> é o valor <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> da enumeração <see cref="T:System.Security.Permissions.PermissionState" />.</summary>
      <returns>
        <see langword="true" /> se o estado de permissão do <see cref="T:System.Configuration.ConfigurationPermission" /> for o <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> valor <see cref="T:System.Security.Permissions.PermissionState" />, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.ToXml">
      <summary>Retorna um objeto <see cref="T:System.Security.SecurityElement" /> com valores de atributo com base no objeto <see cref="T:System.Configuration.ConfigurationPermission" /> atual.</summary>
      <returns>Um <see cref="T:System.Security.SecurityElement" /> com valores de atributo com base no <see cref="T:System.Configuration.ConfigurationPermission" /> atual.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.Union(System.Security.IPermission)">
      <summary>Retorna a união lógica do objeto <see cref="T:System.Configuration.ConfigurationPermission" /> e um objeto que implementa a interface <see cref="T:System.Security.IPermission" />.</summary>
      <param name="target">O objeto com o qual executar a união.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> não é digitado como <see cref="T:System.Configuration.ConfigurationPermission" />.</exception>
      <returns>A união lógica do <see cref="T:System.Configuration.ConfigurationPermission" /> e um objeto que implementa <see cref="T:System.Security.IPermission" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationPermissionAttribute">
      <summary>Cria um objeto <see cref="T:System.Configuration.ConfigurationPermission" /> que concede ou nega a permissão de destino marcada para acessar seções de arquivos de configuração.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Configuration.ConfigurationPermissionAttribute" />.</summary>
      <param name="action">A ação de segurança representada por um membro de enumeração de <see cref="T:System.Security.Permissions.SecurityAction" />. Determina o estado da permissão do atributo.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationPermissionAttribute.CreatePermission">
      <summary>Cria e retorna um objeto que implementa a interface <see cref="T:System.Security.IPermission" />.</summary>
      <returns>Um objeto que implementa o <see cref="T:System.Security.IPermission" />.</returns>
    </member>
    <member name="T:System.Data.Common.DBDataPermission">
      <summary>Permite que provedor de dados .NET Framework ajude a garantir que um usuário tem um nível de segurança adequado para acessar os dados.</summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor">
      <summary>Inicializa uma nova instância de uma classe <see langword="DBDataPermission" />.</summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermission)">
      <summary>Inicializa uma nova instância da classe <see langword="DBDataPermission" /> usando um <see langword="DBDataPermission" /> existente.</summary>
      <param name="permission">Um <see langword="DBDataPermission" /> existente usado para criar um novo <see langword="DBDataPermission" />.</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermissionAttribute)">
      <summary>Inicializa uma nova instância de uma classe <see langword="DBDataPermission" /> com o <see langword="DBDataPermissionAttribute" /> especificado.</summary>
      <param name="permissionAttribute">Uma ação de segurança associada a um atributo de segurança personalizado.</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância de uma classe <see langword="DBDataPermission" /> com o valor <see cref="T:System.Security.Permissions.PermissionState" /> especificado.</summary>
      <param name="state">Um dos valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary>Inicializa uma nova instância de uma classe <see langword="DBDataPermission" /> com o valor <see cref="T:System.Security.Permissions.PermissionState" /> especificado e um valor que indica se uma senha em branco é permitida.</summary>
      <param name="state">Um dos valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <param name="allowBlankPassword">
        <see langword="true" /> para indicar que uma senha em branco é permitida; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
      <summary>Adiciona o acesso para a cadeia de conexão especificada ao estado existente do <see langword="DBDataPermission" />.</summary>
      <param name="connectionString">Uma cadeia de conexão permitida.</param>
      <param name="restrictions">Uma cadeia de caracteres que identifica os parâmetros de cadeia de conexão que são permitidos ou não.</param>
      <param name="behavior">Uma das propriedades <see cref="T:System.Data.KeyRestrictionBehavior" />.</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Clear">
      <summary>Remove todas as permissões que foram adicionadas anteriormente usando o método <see cref="M:System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)" />.</summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Copy">
      <summary>Cria e retorna uma cópia idêntica do objeto de permissão atual.</summary>
      <returns>Uma cópia do objeto de permissão atual.</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.CreateInstance">
      <summary>Cria uma nova instância da classe <see langword="DBDataPermission" />.</summary>
      <returns>Um novo objeto <see langword="DBDataPermission" />.</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói um objeto de segurança com um estado especificado de uma codificação XML.</summary>
      <param name="securityElement">A codificação XML a ser usada para reconstruir o objeto de segurança.</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Intersect(System.Security.IPermission)">
      <summary>Retorna um novo objeto de permissão que representa a interseção de um objeto de permissão atual e o objeto de permissão especificado.</summary>
      <param name="target">Um objeto de permissão a interseccionar com o objeto de permissão atual. Ele deve ser do mesmo tipo que o objeto de permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é uma referência nula (<see langword="Nothing" /> no Visual Basic) e não é uma instância da mesma classe que o objeto de permissão atual.</exception>
      <returns>Um novo objeto de permissão que representa a interseção de um objeto de permissão atual e o objeto de permissão especificado. Esse novo objeto de permissão será uma referência nula (<see langword="Nothing" /> no Visual Basic) se a interseção estiver vazia.</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Retorna um valor que indica se o objeto de permissão atual é um subconjunto do objeto de permissão especificado.</summary>
      <param name="target">Um objeto de permissão que deve ser testado para a relação de subconjunto. Este objeto deve ser do mesmo tipo que o objeto de permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> é um objeto que não é do mesmo tipo que o objeto de permissão atual.</exception>
      <returns>
        <see langword="true" /> se o objeto de permissão atual for um subconjunto do objeto de permissão especificado, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.IsUnrestricted">
      <summary>Retorna um valor que indica se a permissão pode ser representada como irrestrita sem qualquer conhecimento da semântica da permissão.</summary>
      <returns>
        <see langword="true" /> se a permissão puder ser representada como irrestrita.</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.ToXml">
      <summary>Cria uma codificação XML do objeto de segurança e seu estado atual.</summary>
      <returns>Uma codificação XML do objeto de segurança, incluindo quaisquer informações de estado.</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Union(System.Security.IPermission)">
      <summary>Retorna um novo objeto de permissão que é a união dos objetos de permissão especificado e atual.</summary>
      <param name="target">Um objeto de permissão a combinar com o objeto de permissão atual. Ele deve ser do mesmo tipo que o objeto de permissão atual.</param>
      <exception cref="T:System.ArgumentException">O objeto <paramref name="target" /> não é do mesmo tipo que o objeto de permissão atual.</exception>
      <returns>Um novo objeto de permissão que representa a união de um objeto de permissão atual e o objeto de permissão especificado.</returns>
    </member>
    <member name="P:System.Data.Common.DBDataPermission.AllowBlankPassword">
      <summary>Obtém um valor que indica se uma senha em branco é permitida.</summary>
      <returns>
        <see langword="true" /> se uma senha em branco for permitida, caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="T:System.Data.Common.DBDataPermissionAttribute">
      <summary>Associa uma ação de segurança a um atributo de segurança personalizado.</summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância do <see cref="T:System.Data.Common.DBDataPermissionAttribute" />.</summary>
      <param name="action">Um dos valores da ação de segurança que representa uma ação que pode ser executada pela segurança declarativa.</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermissionAttribute.ShouldSerializeConnectionString">
      <summary>Identifica se o atributo deve serializar a cadeia de conexão.</summary>
      <returns>
        <see langword="true" /> se o atributo deve serializar a cadeia de conexão, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermissionAttribute.ShouldSerializeKeyRestrictions">
      <summary>Identifica se o atributo deve serializar o conjunto de restrições de chave.</summary>
      <returns>
        <see langword="true" /> se o atributo deve serializar o conjunto de restrições de chave, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DBDataPermissionAttribute.AllowBlankPassword">
      <summary>Obtém ou define um valor que indica se uma senha em branco é permitida.</summary>
      <returns>
        <see langword="true" /> se uma senha em branco for permitida; caso contrário <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Data.Common.DBDataPermissionAttribute.ConnectionString">
      <summary>Obtém ou define uma cadeia de conexão permitida.</summary>
      <returns>Uma cadeia de conexão permitida.</returns>
    </member>
    <member name="P:System.Data.Common.DBDataPermissionAttribute.KeyRestrictionBehavior">
      <summary>Identifica se a lista de parâmetros de cadeia de conexão identificada pela propriedade <see cref="P:System.Data.Common.DBDataPermissionAttribute.KeyRestrictions" /> são os únicos parâmetros de cadeia de conexão permitidos.</summary>
      <returns>Um dos valores de <see cref="T:System.Data.KeyRestrictionBehavior" />.</returns>
    </member>
    <member name="P:System.Data.Common.DBDataPermissionAttribute.KeyRestrictions">
      <summary>Obtém ou define os parâmetros de cadeia de conexão que são permitidos ou não.</summary>
      <returns>Um ou mais parâmetros de cadeia de conexão que são permitidos ou despermitidos.</returns>
    </member>
    <member name="T:System.Data.Odbc.OdbcPermission">
      <summary>Permite que o Provedor de Dados .NET Framework para ODBC ajude a garantir que um usuário tem um nível de segurança suficiente para acessar uma fonte de dados ODBC. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Odbc.OdbcPermission" />.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Odbc.OdbcPermission" /> com um dos valores <see cref="T:System.Security.Permissions.PermissionState" />.</summary>
      <param name="state">Um dos valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Odbc.OdbcPermission" />.</summary>
      <param name="state">Um dos valores de <see langword="System.Security.Permissions.PermissionState" />.</param>
      <param name="allowBlankPassword">Indica se uma senha em branco é permitida.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
      <summary>Adiciona o acesso para a cadeia de conexão especificada ao estado existente da permissão.</summary>
      <param name="connectionString">Uma cadeia de conexão permitida.</param>
      <param name="restrictions">Uma cadeia de caracteres que identifica os parâmetros de cadeia de conexão que são permitidos ou não.</param>
      <param name="behavior">Um dos valores de <see cref="T:System.Data.KeyRestrictionBehavior" />.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.Copy">
      <summary>Retorna o <see cref="T:System.Data.Odbc.OdbcPermission" /> como um <see cref="T:System.Security.IPermission" />.</summary>
      <returns>Uma cópia do objeto de permissão atual.</returns>
    </member>
    <member name="T:System.Data.Odbc.OdbcPermissionAttribute">
      <summary>Associa uma ação de segurança a um atributo de segurança personalizado.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Odbc.OdbcPermissionAttribute" /> com um dos valores <see cref="T:System.Security.Permissions.SecurityAction" />.</summary>
      <param name="action">Um dos valores <see cref="T:System.Security.Permissions.SecurityAction" /> que representa uma ação que pode ser executada pelo uso de segurança declarativa.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermissionAttribute.CreatePermission">
      <summary>Retorna um objeto <see cref="T:System.Data.Odbc.OdbcPermission" /> que é configurado de acordo com as propriedades de atributo.</summary>
      <returns>Um objeto <see cref="T:System.Data.Odbc.OdbcPermission" />.</returns>
    </member>
    <member name="T:System.Data.OleDb.OleDbPermission">
      <summary>Permite que o Provedor de Dados .NET Framework para OLE DB ajude a garantir que um usuário tem um nível de segurança suficiente para acessar uma fonte de dados OLE DB.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.OleDb.OleDbPermission" />.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.OleDb.OleDbPermission" />.</summary>
      <param name="state">Um dos valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.OleDb.OleDbPermission" />.</summary>
      <param name="state">Um dos valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <param name="allowBlankPassword">Indica se uma senha em branco é permitida.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.Copy">
      <summary>Retorna o <see cref="T:System.Data.OleDb.OleDbPermission" /> como um <see cref="T:System.Security.IPermission" />.</summary>
      <returns>Uma cópia do objeto de permissão atual.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbPermission.Provider">
      <summary>Essa propriedade foi marcada como obsoleta. A configuração dessa propriedade não terá nenhum efeito.</summary>
      <returns>Essa propriedade foi marcada como obsoleta. A configuração dessa propriedade não terá nenhum efeito.</returns>
    </member>
    <member name="T:System.Data.OleDb.OleDbPermissionAttribute">
      <summary>Associa uma ação de segurança a um atributo de segurança personalizado.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.OleDb.OleDbPermissionAttribute" />.</summary>
      <param name="action">Um dos valores <see cref="T:System.Security.Permissions.SecurityAction" /> que representa uma ação que pode ser executada pelo uso de segurança declarativa.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermissionAttribute.CreatePermission">
      <summary>Retorna um objeto <see cref="T:System.Data.OleDb.OleDbPermission" /> que é configurado de acordo com as propriedades de atributo.</summary>
      <returns>Um objeto <see cref="T:System.Data.OleDb.OleDbPermission" />.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbPermissionAttribute.Provider">
      <summary>Obtém ou define uma cadeia de caracteres delimitada por vírgulas que contém uma lista de provedores compatíveis.</summary>
      <returns>Uma lista delimitada por vírgula de provedores permitidas pela política de segurança.</returns>
    </member>
    <member name="T:System.Data.OracleClient.OraclePermission">
      <summary>Permite que o provedor de dados .NET Framework para Oracle ajude a garantir que o usuário tenha um nível de segurança adequado para acessar um banco de dados Oracle.</summary>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.OracleClient.OraclePermission" /> com um dos valores <see cref="T:System.Security.Permissions.PermissionState" />.</summary>
      <param name="state">Um dos valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
      <summary>Cria um novo conjunto de permissões.</summary>
      <param name="connectionString">A cadeia de conexão.</param>
      <param name="restrictions">As principais restrições.</param>
      <param name="behavior">Uma das enumerações de <see cref="T:System.Data.KeyRestrictionBehavior" />.</param>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Copy">
      <summary>Quando implementada por uma classe derivada, cria e retorna uma cópia idêntica do objeto de permissão atual.</summary>
      <returns>Uma cópia do objeto de permissão atual.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.FromXml(System.Security.SecurityElement)">
      <summary>Quando substituído em uma classe derivada, reconstrói um objeto de segurança com um estado especificado de uma codificação XML.</summary>
      <param name="securityElement">Uma expressão <see cref="T:System.Security.SecurityElement" />.</param>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Intersect(System.Security.IPermission)">
      <summary>Quando implementada por uma classe derivada, cria e retorna uma permissão que é a interseção de permissão atual e da permissão especificada.</summary>
      <param name="target">Uma permissão para ter interseção com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <returns>Uma nova permissão que representa a interseção da permissão atual e da permissão especificada. Essa nova permissão é <see langword="null" /> se a interseção estiver vazia.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Quando implementado em uma classe derivada, determina se a permissão atual é um subconjunto da permissão especificada.</summary>
      <param name="target">Uma permissão que deve ser testada quanto à relação de subconjunto. Essa permissão deve ser do mesmo tipo da permissão atual.</param>
      <returns>
        <see langword="true" /> se a permissão atual for um subconjunto da permissão especificada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.IsUnrestricted">
      <summary>Retorna um valor que indica se a permissão pode ser representada como irrestrita sem qualquer conhecimento da semântica da permissão.</summary>
      <returns>
        <see langword="true" /> se a permissão puder ser representada como irrestrita.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.ToXml">
      <summary>Cria uma codificação XML do objeto de segurança e seu estado atual.</summary>
      <returns>Uma codificação XML do objeto de segurança, incluindo quaisquer informações de estado.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Union(System.Security.IPermission)">
      <summary>Cria uma permissão que é a união entre a permissão atual e a permissão especificada.</summary>
      <param name="target">Uma permissão a ser combinada com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <returns>Uma nova permissão que representa a união da permissão atual e da permissão especificada.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermission.AllowBlankPassword">
      <summary>Obtém um valor que indica se uma senha em branco é permitida.</summary>
      <returns>
        <see langword="true" /> se uma senha em branco for permitida, caso contrário <see langword="false" /> .</returns>
    </member>
    <member name="T:System.Data.OracleClient.OraclePermissionAttribute">
      <summary>Associa uma ação de segurança a um atributo de segurança personalizado.</summary>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.OracleClient.OraclePermissionAttribute" />.</summary>
      <param name="action">Um dos valores <see cref="T:System.Security.Permissions.SecurityAction" /> que representa uma ação que pode ser executada pelo uso de segurança declarativa.</param>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.CreatePermission">
      <summary>Retorna um objeto <see cref="T:System.Data.OracleClient.OraclePermission" /> que é configurado de acordo com as propriedades de atributo.</summary>
      <returns>Um objeto <see cref="T:System.Data.OracleClient.OraclePermission" />.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.ShouldSerializeConnectionString">
      <summary>Identifica se o atributo deve serializar a cadeia de conexão.</summary>
      <returns>
        <see langword="true" /> se o atributo deve serializar a cadeia de conexão, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.ShouldSerializeKeyRestrictions">
      <summary>Identifica se o atributo deve serializar o conjunto de restrições de chave.</summary>
      <returns>
        <see langword="true" /> se o atributo deve serializar o conjunto de restrições de chave, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.AllowBlankPassword">
      <summary>Obtém ou define um valor que indica se uma senha em branco é permitida.</summary>
      <returns>
        <see langword="true" /> se uma senha em branco for permitida, caso contrário <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.ConnectionString">
      <summary>Obtém ou define uma cadeia de conexão permitida.</summary>
      <returns>Uma cadeia de conexão permitida.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictionBehavior">
      <summary>Identifica se a lista de parâmetros de cadeia de conexão identificada pela propriedade <see cref="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictions" /> são os únicos parâmetros de cadeia de conexão permitidos.</summary>
      <returns>Um dos valores de <see cref="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictionBehavior" />.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictions">
      <summary>Obtém ou define os parâmetros de cadeia de conexão que são permitidos ou não.</summary>
      <returns>Um ou mais parâmetros de cadeia de conexão que são permitidos ou despermitidos.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlClientPermission">
      <summary>Permite que o Provedor de Dados .NET Framework para SQL Server ajude a garantir que um usuário tenha um nível de segurança suficiente para acessar uma fonte de dados.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlClient.SqlClientPermission" />.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlClient.SqlClientPermission" />.</summary>
      <param name="state">Um dos valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlClient.SqlClientPermission" />.</summary>
      <param name="state">Um dos valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <param name="allowBlankPassword">Indica se uma senha em branco é permitida.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
      <summary>Adiciona uma nova cadeia de conexão e um conjunto de palavras-chave restritas ao objeto <see cref="T:System.Data.SqlClient.SqlClientPermission" />.</summary>
      <param name="connectionString">A cadeia de conexão.</param>
      <param name="restrictions">As principais restrições.</param>
      <param name="behavior">Uma das enumerações de <see cref="T:System.Data.KeyRestrictionBehavior" />.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.Copy">
      <summary>Retorna o <see cref="T:System.Data.SqlClient.SqlClientPermission" /> como um <see cref="T:System.Security.IPermission" />.</summary>
      <returns>Uma cópia do objeto de permissão atual.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlClientPermissionAttribute">
      <summary>Associa uma ação de segurança a um atributo de segurança personalizado.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlClient.SqlClientPermissionAttribute" />.</summary>
      <param name="action">Um dos valores <see cref="T:System.Security.Permissions.SecurityAction" /> que representa uma ação que pode ser executada pelo uso de segurança declarativa.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermissionAttribute.CreatePermission">
      <summary>Retorna um objeto <see cref="T:System.Data.SqlClient.SqlClientPermission" /> configurado de acordo com as propriedades de atributo.</summary>
      <returns>Um objeto <see cref="T:System.Data.SqlClient.SqlClientPermission" />.</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogPermission">
      <summary>Controla as permissões de acesso de código para o log de eventos.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermission.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.EventLogPermission" />.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionAccess,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.EventLogPermission" /> com os níveis de acesso especificados e o nome do computador a ser usado.</summary>
      <param name="permissionAccess">Um dos valores de enumeração que especifica um nível de acesso.</param>
      <param name="machineName">O nome do computador em que os eventos devem ser lidos ou gravados.</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionEntry[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.EventLogPermission" /> com as entradas de permissão especificadas.</summary>
      <param name="permissionAccessEntries">Uma matriz de objetos que representam as entradas de permissão. A propriedade <see cref="P:System.Diagnostics.EventLogPermission.PermissionEntries" /> é definida para esse valor.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="permissionAccessEntries" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.EventLogPermission" /> com o estado da permissão especificado.</summary>
      <param name="state">Um dos valores de enumeração que especifica o estado de permissão (acesso completo ou sem acesso aos recursos).</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="state" /> não é um valor válido de <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="P:System.Diagnostics.EventLogPermission.PermissionEntries">
      <summary>Obtém a coleção de entradas de permissão para esta solicitação de permissões.</summary>
      <returns>Uma coleção que contém as entradas de permissão para essa solicitação de permissões.</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogPermissionAccess">
      <summary>Define os níveis de acesso usados pelas classes de permissão <see cref="T:System.Diagnostics.EventLog" />.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.Administer">
      <summary>O <see cref="T:System.Diagnostics.EventLog" /> pode criar uma fonte de evento, ler logs existentes, excluir fontes de eventos ou logs, responder a entradas, limpar um log de eventos, escutar eventos e acessar uma coleção de todos os logs de eventos.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.Audit">
      <summary>O <see cref="T:System.Diagnostics.EventLog" /> pode ler logs existentes, excluir fontes de eventos ou logs, responder a entradas, limpar um log de eventos, escutar eventos e acessar uma coleção de todos os logs de eventos. <see langword="Note" /> Esse membro agora está obsoleto, use <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /> no lugar dele.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.Browse">
      <summary>O <see cref="T:System.Diagnostics.EventLog" /> pode ler logs existentes. <see langword="Note" /> Esse membro agora está obsoleto, use <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /> no lugar dele.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.Instrument">
      <summary>O <see cref="T:System.Diagnostics.EventLog" /> pode ler ou gravar em logs existentes e criar fontes de eventos e logs. <see langword="Note" /> Esse membro agora está obsoleto, use <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /> no lugar dele.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.None">
      <summary>O <see cref="T:System.Diagnostics.EventLog" /> não tem permissões.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.Write">
      <summary>O <see cref="T:System.Diagnostics.EventLog" /> pode gravar em logs existentes e criar fontes de eventos e logs.</summary>
    </member>
    <member name="T:System.Diagnostics.EventLogPermissionAttribute">
      <summary>Permite verificações de permissão declarativa para registro de eventos em log.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.EventLogPermissionAttribute" />.</summary>
      <param name="action">Um dos valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionAttribute.CreatePermission">
      <summary>Cria a permissão com base na propriedade <see cref="P:System.Diagnostics.EventLogPermissionAttribute.MachineName" /> e nos níveis de acesso solicitados definidos por meio da propriedade <see cref="P:System.Diagnostics.EventLogPermissionAttribute.PermissionAccess" /> no atributo.</summary>
      <returns>Um <see cref="T:System.Security.IPermission" /> que representa a permissão criada.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogPermissionAttribute.MachineName">
      <summary>Obtém ou define o nome do computador em que os eventos podem ser lidos.</summary>
      <exception cref="T:System.ArgumentException">O nome do computador é inválido.</exception>
      <returns>O nome do computador no qual os eventos podem ser lidos. O padrão é ".".</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogPermissionAttribute.PermissionAccess">
      <summary>Obtém ou define os níveis de acesso usados na solicitação de permissões.</summary>
      <returns>Uma combinação bit a bit dos valores <see cref="T:System.Diagnostics.EventLogPermissionAccess" />. O padrão é <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" />.</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogPermissionEntry">
      <summary>Define a menor unidade de uma permissão de segurança de acesso do código definida para um <see cref="T:System.Diagnostics.EventLog" />.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntry.#ctor(System.Diagnostics.EventLogPermissionAccess,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.EventLogPermissionEntry" />.</summary>
      <param name="permissionAccess">Uma combinação bit a bit dos valores <see cref="T:System.Diagnostics.EventLogPermissionAccess" />. A propriedade <see cref="P:System.Diagnostics.EventLogPermissionEntry.PermissionAccess" /> é definida para esse valor.</param>
      <param name="machineName">O nome do computador em que os eventos devem ser lidos ou gravados. A propriedade <see cref="P:System.Diagnostics.EventLogPermissionEntry.MachineName" /> é definida para esse valor.</param>
      <exception cref="T:System.ArgumentException">O nome do computador é inválido.</exception>
    </member>
    <member name="P:System.Diagnostics.EventLogPermissionEntry.MachineName">
      <summary>Obtém o nome do computador no qual os eventos serão lidos ou gravados.</summary>
      <returns>O nome do computador em que os eventos devem ser lidos ou gravados.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogPermissionEntry.PermissionAccess">
      <summary>Obtém os níveis de acesso de permissão usados na solicitação de permissões.</summary>
      <returns>Uma combinação bit a bit dos valores <see cref="T:System.Diagnostics.EventLogPermissionAccess" />.</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogPermissionEntryCollection">
      <summary>Contém uma coleção fortemente tipada de objetos <see cref="T:System.Diagnostics.EventLogPermissionEntry" />.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.Add(System.Diagnostics.EventLogPermissionEntry)">
      <summary>Adiciona um <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> especificado a esta coleção.</summary>
      <param name="value">O <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> a ser adicionado.</param>
      <returns>O índice de base zero do <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> adicionado.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.AddRange(System.Diagnostics.EventLogPermissionEntry[])">
      <summary>Anexa um conjunto de entradas de permissões especificadas a essa coleção.</summary>
      <param name="value">Uma matriz de objetos tipo <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> que contém as entradas de permissão a adicionar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.AddRange(System.Diagnostics.EventLogPermissionEntryCollection)">
      <summary>Anexa um conjunto de entradas de permissões especificadas a essa coleção.</summary>
      <param name="value">Um <see cref="T:System.Diagnostics.EventLogPermissionEntryCollection" /> que contém as entradas de permissão a adicionar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.Contains(System.Diagnostics.EventLogPermissionEntry)">
      <summary>Determina se esta coleção contém um <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> especificado.</summary>
      <param name="value">O <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> a ser localizado.</param>
      <returns>
        <see langword="true" /> se a <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> especificada pertencer a esta coleção; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.CopyTo(System.Diagnostics.EventLogPermissionEntry[],System.Int32)">
      <summary>Copia as entradas de permissão desta coleção para uma matriz, começando em um índice específico da matriz.</summary>
      <param name="array">Uma matriz do tipo <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> que recebe as entradas de permissão da coleta.</param>
      <param name="index">O índice de base zero no qual começar a copiar as entradas de permissão.</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.IndexOf(System.Diagnostics.EventLogPermissionEntry)">
      <summary>Determina o índice de uma entrada de permissão especificada nesta coleção.</summary>
      <param name="value">A entrada de permissão a pesquisar.</param>
      <returns>O índice de base zero da entrada de permissão especificada ou -1, se a entrada de permissão não tiver sido encontrada na coleção.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.Insert(System.Int32,System.Diagnostics.EventLogPermissionEntry)">
      <summary>Insere uma entrada de permissão nesta coleção em um índice especificado.</summary>
      <param name="index">O índice de base zero da coleção no qual inserir a entrada de permissão.</param>
      <param name="value">A entrada de permissão para inserir nesta coleção.</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.OnClear">
      <summary>Executa processos personalizados adicionais depois de limpar o conteúdo da coleção.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.OnInsert(System.Int32,System.Object)">
      <summary>Executa processos personalizados adicionais antes de uma nova entrada de permissão ser inserida na coleção.</summary>
      <param name="index">O índice de base zero no qual o <paramref name="value" /> será inserido.</param>
      <param name="value">O novo valor da entrada de permissão no <paramref name="index" />.</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.OnRemove(System.Int32,System.Object)">
      <summary>Executa processos personalizados adicionais durante ao remover uma nova entrada de permissão da coleção.</summary>
      <param name="index">O índice de base zero no qual o <paramref name="value" /> pode ser encontrado.</param>
      <param name="value">A entrada de permissão a remover do <paramref name="index" />.</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>Executa processos personalizados adicionais antes de configurar um valor na coleção.</summary>
      <param name="index">O índice de base zero no qual o <paramref name="oldValue" /> pode ser encontrado.</param>
      <param name="oldValue">O valor a ser substituído por <paramref name="newValue" />.</param>
      <param name="newValue">O novo valor da entrada de permissão no <paramref name="index" />.</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.Remove(System.Diagnostics.EventLogPermissionEntry)">
      <summary>Remove uma entrada de permissão especificada dessa coleção.</summary>
      <param name="value">A entrada de permissão a remover.</param>
    </member>
    <member name="P:System.Diagnostics.EventLogPermissionEntryCollection.Item(System.Int32)">
      <summary>Obtém ou define o objeto em um índice especificado.</summary>
      <param name="index">O índice de base zero na coleção.</param>
      <returns>O <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> que existe no índice especificado.</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterPermission">
      <summary>Permite controlar permissões de acesso de código para <see cref="T:System.Diagnostics.PerformanceCounter" />.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermission.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.PerformanceCounterPermission" />.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Diagnostics.PerformanceCounterPermissionAccess,System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.PerformanceCounterPermission" /> com os níveis de acesso especificados, o nome do computador a ser usado e a categoria associada ao contador de desempenho.</summary>
      <param name="permissionAccess">Um dos valores de <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" />.</param>
      <param name="machineName">O servidor no qual o contador de desempenho e sua categoria associada residem.</param>
      <param name="categoryName">O nome da categoria de contador de desempenho (objeto de desempenho) ao qual o contador de desempenho está associado.</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Diagnostics.PerformanceCounterPermissionEntry[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.PerformanceCounterPermission" /> com as entradas de nível de acesso de permissão especificadas.</summary>
      <param name="permissionAccessEntries">Uma matriz de objetos de <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" />. A propriedade <see cref="P:System.Diagnostics.PerformanceCounterPermission.PermissionEntries" /> é definida para esse valor.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="permissionAccessEntries" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.PerformanceCounterPermission" /> com o estado da permissão especificado.</summary>
      <param name="state">Um dos valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="state" /> não é um valor válido de <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermission.PermissionEntries">
      <summary>Obtém a coleção de entradas de permissão para esta solicitação de permissões.</summary>
      <returns>Um <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection" /> que contém as entradas de permissão para essa solicitação de permissões.</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterPermissionAccess">
      <summary>Define os níveis de acesso usados pelas classes de permissão <see cref="T:System.Diagnostics.PerformanceCounter" />.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer">
      <summary>O <see cref="T:System.Diagnostics.PerformanceCounter" /> pode ler, gravar e criar categorias.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Browse">
      <summary>O <see cref="T:System.Diagnostics.PerformanceCounter" /> pode ler categorias.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Instrument">
      <summary>O <see cref="T:System.Diagnostics.PerformanceCounter" /> pode ler e gravar categorias.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.None">
      <summary>O <see cref="T:System.Diagnostics.PerformanceCounter" /> não tem permissões.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read">
      <summary>O <see cref="T:System.Diagnostics.PerformanceCounter" /> pode ler categorias.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write">
      <summary>O <see cref="T:System.Diagnostics.PerformanceCounter" /> pode gravar categorias.</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterPermissionAttribute">
      <summary>Permite verificações de permissão de contador de desempenho declarativas.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.PerformanceCounterPermissionAttribute" />.</summary>
      <param name="action">Um dos valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionAttribute.CreatePermission">
      <summary>Cria a permissão com base nos níveis de acesso solicitados definidos por meio da propriedade <see cref="P:System.Diagnostics.PerformanceCounterPermissionAttribute.PermissionAccess" /> no atributo.</summary>
      <returns>Um <see cref="T:System.Security.IPermission" /> que representa a permissão criada.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionAttribute.CategoryName">
      <summary>Obtém ou define o nome da categoria do contador de desempenho.</summary>
      <exception cref="T:System.ArgumentNullException">O valor é <see langword="null" />.</exception>
      <returns>O nome da categoria do contador de desempenho (objeto de desempenho).</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionAttribute.MachineName">
      <summary>Obtém ou define o nome do computador para esse o contador de desempenho.</summary>
      <exception cref="T:System.ArgumentException">O formato <see cref="P:System.Diagnostics.PerformanceCounterPermissionAttribute.MachineName" /> é inválido.</exception>
      <returns>O servidor no qual reside a categoria do contador de desempenho.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionAttribute.PermissionAccess">
      <summary>Obtém ou define os níveis de acesso usados na solicitação de permissões.</summary>
      <returns>Uma combinação bit a bit dos valores <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" />. O padrão é <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" />.</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterPermissionEntry">
      <summary>Define a menor unidade de uma permissão de segurança de acesso do código definida para um <see cref="T:System.Diagnostics.PerformanceCounter" />.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntry.#ctor(System.Diagnostics.PerformanceCounterPermissionAccess,System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" />.</summary>
      <param name="permissionAccess">Uma combinação bit a bit dos valores <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" />. A propriedade <see cref="P:System.Diagnostics.PerformanceCounterPermissionEntry.PermissionAccess" /> é definida para esse valor.</param>
      <param name="machineName">O servidor no qual reside a categoria do contador de desempenho.</param>
      <param name="categoryName">O nome da categoria de contador de desempenho (objeto de desempenho) ao qual este contador de desempenho está associado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> é <see langword="null" />.  
  
- ou - 
 <paramref name="machineName" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="permissionAccess" /> não é um valor <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" /> válido.  
  
- ou - 
 <paramref name="machineName" /> não é um nome do computador válido.</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionEntry.CategoryName">
      <summary>Obtém o nome da categoria do contador de desempenho (objeto de desempenho).</summary>
      <returns>O nome da categoria do contador de desempenho (objeto de desempenho).</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionEntry.MachineName">
      <summary>Obtém o servidor no qual reside a categoria do contador de desempenho.</summary>
      <returns>O nome do servidor no qual a categoria reside.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionEntry.PermissionAccess">
      <summary>Obtém o nível de acesso da permissão da entrada.</summary>
      <returns>Uma combinação bit a bit dos valores <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" />.</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection">
      <summary>Contém uma coleção fortemente tipada de objetos <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" />.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Add(System.Diagnostics.PerformanceCounterPermissionEntry)">
      <summary>Adiciona um <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> especificado a esta coleção.</summary>
      <param name="value">O objeto <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> a ser adicionado.</param>
      <returns>O índice de base zero do objeto <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> adicionado.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.AddRange(System.Diagnostics.PerformanceCounterPermissionEntry[])">
      <summary>Anexa um conjunto de entradas de permissões especificadas a essa coleção.</summary>
      <param name="value">Uma matriz de objetos tipo <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> que contém as entradas de permissão a adicionar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.AddRange(System.Diagnostics.PerformanceCounterPermissionEntryCollection)">
      <summary>Anexa um conjunto de entradas de permissões especificadas a essa coleção.</summary>
      <param name="value">Um <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection" /> que contém as entradas de permissão a adicionar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Contains(System.Diagnostics.PerformanceCounterPermissionEntry)">
      <summary>Determina se esta coleção contém um objeto <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> especificado.</summary>
      <param name="value">O objeto <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> a ser localizado.</param>
      <returns>
        <see langword="true" /> se o objeto <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> especificado pertence a esta coleção; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.CopyTo(System.Diagnostics.PerformanceCounterPermissionEntry[],System.Int32)">
      <summary>Copia as entradas de permissão desta coleção para uma matriz, começando em um índice específico da matriz.</summary>
      <param name="array">Uma matriz do tipo <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> que recebe as entradas de permissão da coleta.</param>
      <param name="index">O índice de base zero no qual começar a copiar as entradas de permissão.</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.IndexOf(System.Diagnostics.PerformanceCounterPermissionEntry)">
      <summary>Determina o índice de uma entrada de permissão especificada nesta coleção.</summary>
      <param name="value">A entrada de permissão a pesquisar.</param>
      <returns>O índice de base zero da entrada de permissão especificada ou -1, se a entrada de permissão não tiver sido encontrada na coleção.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Insert(System.Int32,System.Diagnostics.PerformanceCounterPermissionEntry)">
      <summary>Insere uma entrada de permissão nesta coleção em um índice especificado.</summary>
      <param name="index">O índice de base zero da coleção no qual inserir a entrada de permissão.</param>
      <param name="value">A entrada de permissão para inserir nesta coleção.</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnClear">
      <summary>Executa processos personalizados adicionais depois de limpar o conteúdo da coleção.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnInsert(System.Int32,System.Object)">
      <summary>Executa processos personalizados adicionais antes de uma nova entrada de permissão ser inserida na coleção.</summary>
      <param name="index">O índice de base zero no qual o <paramref name="value" /> será inserido.</param>
      <param name="value">O novo valor da entrada de permissão no <paramref name="index" />.</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnRemove(System.Int32,System.Object)">
      <summary>Executa processos personalizados adicionais durante ao remover uma nova entrada de permissão da coleção.</summary>
      <param name="index">O índice de base zero no qual o <paramref name="value" /> pode ser encontrado.</param>
      <param name="value">A entrada de permissão a remover do <paramref name="index" />.</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>Executa processos personalizados adicionais antes de configurar um valor na coleção.</summary>
      <param name="index">O índice de base zero no qual o <paramref name="oldValue" /> pode ser encontrado.</param>
      <param name="oldValue">O valor a ser substituído por <paramref name="newValue" />.</param>
      <param name="newValue">O novo valor da entrada de permissão no <paramref name="index" />.</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Remove(System.Diagnostics.PerformanceCounterPermissionEntry)">
      <summary>Remove uma entrada de permissão especificada dessa coleção.</summary>
      <param name="value">A entrada de permissão a remover.</param>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Item(System.Int32)">
      <summary>Obtém ou define o objeto em um índice especificado.</summary>
      <param name="index">O índice de base zero na coleção.</param>
      <returns>O <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> objeto que existe no índice especificado.</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintingPermission">
      <summary>Controla o acesso às impressoras. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.#ctor(System.Drawing.Printing.PrintingPermissionLevel)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Drawing.Printing.PrintingPermission" /> com o nível de acesso de impressão especificado.</summary>
      <param name="printingLevel">Um dos valores de <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" />.</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Drawing.Printing.PrintingPermission" /> com acesso totalmente restrito ou irrestrito, conforme especificado.</summary>
      <param name="state">Um dos valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> não é um <see cref="T:System.Security.Permissions.PermissionState" /> válido.</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.Copy">
      <summary>Cria e retorna uma cópia idêntica do objeto de permissão atual.</summary>
      <returns>Uma cópia do objeto de permissão atual.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói um objeto de segurança com um estado especificado de uma codificação XML.</summary>
      <param name="element">A codificação XML a ser usada para reconstruir o objeto de segurança.</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.Intersect(System.Security.IPermission)">
      <summary>Cria e retorna uma permissão que é a interseção do objeto de permissão atual e de um objeto de permissão de destino.</summary>
      <param name="target">Um objeto de permissão do mesmo tipo que o objeto de permissão atual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> é um objeto que não é do mesmo tipo que o objeto de permissão atual.</exception>
      <returns>Um novo objeto de permissão que representa a interseção do objeto atual e do destino especificado. Este objeto será <see langword="null" /> se a interseção estiver vazia.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina se o objeto de permissão atual é um subconjunto da permissão especificada.</summary>
      <param name="target">Um objeto de permissão que deve ser testado para a relação de subconjunto. Este objeto deve ser do mesmo tipo que o objeto de permissão atual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> é um objeto que não é do mesmo tipo que o objeto de permissão atual.</exception>
      <returns>
        <see langword="true" /> se o objeto de permissão atual for um subconjunto de <paramref name="target" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.IsUnrestricted">
      <summary>Obtém um valor que indica se a permissão é irrestrita.</summary>
      <returns>
        <see langword="true" /> se a permissão for irrestrita; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.ToXml">
      <summary>Cria uma codificação XML do objeto de segurança e seu estado atual.</summary>
      <returns>Uma codificação XML do objeto de segurança, incluindo quaisquer informações de estado.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.Union(System.Security.IPermission)">
      <summary>Cria uma permissão que combina o objeto de permissão e o objeto de permissão de destino.</summary>
      <param name="target">Um objeto de permissão do mesmo tipo que o objeto de permissão atual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> é um objeto que não é do mesmo tipo que o objeto de permissão atual.</exception>
      <returns>Um novo objeto de permissão que representa a união de um objeto de permissão atual e o objeto de permissão especificado.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintingPermission.Level">
      <summary>Obtém ou define o nível do código de acesso de impressão.</summary>
      <returns>Um dos valores de <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" />.</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintingPermissionAttribute">
      <summary>Permite verificações de permissão de impressão declarativa.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Drawing.Printing.PrintingPermissionAttribute" />.</summary>
      <param name="action">Um dos valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermissionAttribute.CreatePermission">
      <summary>Cria a permissão com base nos níveis de acesso solicitados definidos por meio da propriedade <see cref="P:System.Drawing.Printing.PrintingPermissionAttribute.Level" /> no atributo.</summary>
      <returns>Um <see cref="T:System.Security.IPermission" /> que representa a permissão criada.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintingPermissionAttribute.Level">
      <summary>Obtém ou define o tipo de impressão permitido.</summary>
      <exception cref="T:System.ArgumentException">O valor não é um dos valores <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" />.</exception>
      <returns>Um dos valores de <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" />.</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintingPermissionLevel">
      <summary>Especifica o tipo de impressão que o código tem permissão para fazer.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting">
      <summary>Fornece acesso completo a todas as impressoras.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting">
      <summary>Fornece impressão de forma programática em relação à impressora padrão, juntamente com a impressão segura por meio da caixa de diálogo semirestrita. <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /> é um subconjunto de <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" />.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.NoPrinting">
      <summary>Impede o acesso a impressoras. <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.NoPrinting" /> é um subconjunto de <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" />.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting">
      <summary>Fornece impressão apenas em uma caixa de diálogo restrita. <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /> é um subconjunto de <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" />.</summary>
    </member>
    <member name="T:System.Net.DnsPermission">
      <summary>Controla os direitos de acesso aos servidores DNS (Sistema de Nomes de Domínio) na rede.</summary>
    </member>
    <member name="M:System.Net.DnsPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Cria uma nova instância da classe <see cref="T:System.Net.DnsPermission" /> que permite o acesso DNS irrestrito ou impede o acesso DNS.</summary>
      <param name="state">Um dos valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> não é um valor <see cref="T:System.Security.Permissions.PermissionState" /> válido.</exception>
    </member>
    <member name="M:System.Net.DnsPermission.Copy">
      <summary>Cria uma cópia idêntica da instância de permissão atual.</summary>
      <returns>Uma nova instância da classe <see cref="T:System.Net.DnsPermission" /> que é uma cópia idêntica da instância atual.</returns>
    </member>
    <member name="M:System.Net.DnsPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói uma instância <see cref="T:System.Net.DnsPermission" /> da codificação de XML.</summary>
      <param name="securityElement">A codificação XML a ser usada para reconstruir a instância <see cref="T:System.Net.DnsPermission" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> não é um elemento <see cref="T:System.Net.DnsPermission" />.</exception>
    </member>
    <member name="M:System.Net.DnsPermission.Intersect(System.Security.IPermission)">
      <summary>Cria uma instância de permissão que é a interseção da instância de permissão atual e a instância da permissão especificada.</summary>
      <param name="target">A instância <see cref="T:System.Net.DnsPermission" /> a se interseccionar com a instância atual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> não é um <see cref="T:System.Net.DnsPermission" /> nem <see langword="null" />.</exception>
      <returns>Uma instância <see cref="T:System.Net.DnsPermission" /> que representa a interseção da instância <see cref="T:System.Net.DnsPermission" /> atual com a instância <see cref="T:System.Net.DnsPermission" /> especificada ou <see langword="null" /> se a interseção estiver vazia. Se a instância atual e a <paramref name="target" /> forem irrestritas, esse método retornará uma nova instância <see cref="T:System.Net.DnsPermission" /> que é irrestrita, caso contrário, retornará <see langword="null" />.</returns>
    </member>
    <member name="M:System.Net.DnsPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina se a instância permissão atual é um subconjunto da instância permissão especificada.</summary>
      <param name="target">A segunda instância <see cref="T:System.Net.DnsPermission" /> a ser testada para a relação de subconjunto.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> não é um <see cref="T:System.Net.DnsPermission" /> nem <see langword="null" />.</exception>
      <returns>
        <see langword="false" /> se a instância atual for irrestrita e <paramref name="target" /> for <see langword="null" /> ou irrestrita, caso contrário, <see langword="true" />.</returns>
    </member>
    <member name="M:System.Net.DnsPermission.IsUnrestricted">
      <summary>Verifica o estado de permissão geral do objeto.</summary>
      <returns>
        <see langword="true" /> se a instância <see cref="T:System.Net.DnsPermission" /> foi criada com <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.DnsPermission.ToXml">
      <summary>Cria uma codificação de XML de uma instância <see cref="T:System.Net.DnsPermission" /> e de seu estado atual.</summary>
      <returns>Uma instância <see cref="T:System.Security.SecurityElement" /> que contém uma representação codificada em XML do objeto de segurança, incluindo informações de estado.</returns>
    </member>
    <member name="M:System.Net.DnsPermission.Union(System.Security.IPermission)">
      <summary>Cria uma instância de permissão que é a união da instância de permissão atual e a instância da permissão especificada.</summary>
      <param name="target">A instância <see cref="T:System.Net.DnsPermission" /> a ser combinada com a instância atual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> não é um <see cref="T:System.Net.DnsPermission" /> nem <see langword="null" />.</exception>
      <returns>Uma instância <see cref="T:System.Net.DnsPermission" /> que representa a união da instância <see cref="T:System.Net.DnsPermission" /> atual com a instância <see cref="T:System.Net.DnsPermission" /> especificada. Se <paramref name="target" /> for <see langword="null" />, esse método retornará uma cópia da instância atual. Se a instância atual ou <paramref name="target" /> for irrestrita, esse método retornará uma instância <see cref="T:System.Net.DnsPermission" /> irrestrita, caso contrário, retornará uma instância <see cref="T:System.Net.DnsPermission" /> restrita.</returns>
    </member>
    <member name="T:System.Net.DnsPermissionAttribute">
      <summary>Especifica a permissão para solicitar informações de servidores de nome de domínio.</summary>
    </member>
    <member name="M:System.Net.DnsPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.DnsPermissionAttribute" /> com o valor <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Um dos valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="action" /> não é um <see cref="T:System.Security.Permissions.SecurityAction" /> válido.</exception>
    </member>
    <member name="M:System.Net.DnsPermissionAttribute.CreatePermission">
      <summary>Cria e retorna uma nova instância da classe <see cref="T:System.Net.DnsPermission" />.</summary>
      <returns>Um <see cref="T:System.Net.DnsPermission" /> que corresponde à declaração de segurança.</returns>
    </member>
    <member name="T:System.Net.EndpointPermission">
      <summary>Define um ponto de extremidade que é autorizado por uma instância <see cref="T:System.Net.SocketPermission" />.</summary>
    </member>
    <member name="M:System.Net.EndpointPermission.Equals(System.Object)">
      <summary>Determina se o <see langword="Object" /> especificado é igual ao <see langword="Object" /> atual.</summary>
      <param name="obj">O <see cref="T:System.Object" /> a ser comparado com o <see langword="Object" /> atual.</param>
      <returns>
        <see langword="true" /> se o <see langword="Object" /> especificado for igual ao <see langword="Object" /> atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.EndpointPermission.GetHashCode">
      <summary>Serve como uma função hash para um tipo particular.</summary>
      <returns>Um código hash do <see cref="T:System.Object" /> atual.</returns>
    </member>
    <member name="P:System.Net.EndpointPermission.Hostname">
      <summary>Obtém o nome de host DNS ou o endereço IP do servidor que está associado esse ponto de extremidade.</summary>
      <returns>Uma cadeia de caracteres que contém o nome do host DNS ou o endereço IP do servidor.</returns>
    </member>
    <member name="P:System.Net.EndpointPermission.Port">
      <summary>Obtém o número da porta de rede associado a esse ponto de extremidade.</summary>
      <returns>O número da porta de rede que está associado a essa solicitação, ou <see cref="F:System.Net.SocketPermission.AllPorts" /> .</returns>
    </member>
    <member name="P:System.Net.EndpointPermission.Transport">
      <summary>Obtém o tipo de transporte associado a esse ponto de extremidade.</summary>
      <returns>Um dos valores de <see cref="T:System.Net.TransportType" />.</returns>
    </member>
    <member name="T:System.Net.Mail.SmtpAccess">
      <summary>Especifica o nível de acesso permitido para um servidor SMTP.</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpAccess.Connect">
      <summary>Conexão com um host SMTP na porta padrão (porta 25).</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpAccess.ConnectToUnrestrictedPort">
      <summary>Conexão com um host SMTP em qualquer porta.</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpAccess.None">
      <summary>Sem acesso a um host SMTP.</summary>
    </member>
    <member name="T:System.Net.Mail.SmtpPermission">
      <summary>Controla o acesso aos servidores SMTP.</summary>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.#ctor(System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Mail.SmtpPermission" /> com o estado especificado.</summary>
      <param name="unrestricted">
        <see langword="true" /> se a nova permissão for irrestrita; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.#ctor(System.Net.Mail.SmtpAccess)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Mail.SmtpPermission" /> usando o nível de acesso especificado.</summary>
      <param name="access">Um dos valores de <see cref="T:System.Net.Mail.SmtpAccess" />.</param>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Mail.SmtpPermission" />, usando o valor de estado da permissão especificado.</summary>
      <param name="state">Um dos valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.AddPermission(System.Net.Mail.SmtpAccess)">
      <summary>Adiciona o valor do nível de acesso especificado à permissão.</summary>
      <param name="access">Um dos valores de <see cref="T:System.Net.Mail.SmtpAccess" />.</param>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.Copy">
      <summary>Cria e retorna uma cópia idêntica da permissão atual.</summary>
      <returns>Um <see cref="T:System.Net.Mail.SmtpPermission" /> idêntico à permissão atual.</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.FromXml(System.Security.SecurityElement)">
      <summary>Define o estado da permissão usando a codificação XML especificada.</summary>
      <param name="securityElement">A codificação XML a ser usada para definir o estado da permissão atual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> não descreve um objeto <see cref="T:System.Net.Mail.SmtpPermission" />.  
  
- ou - 
 <paramref name="securityElement" /> não contém as informações de estado necessárias para reconstruir a permissão.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.Intersect(System.Security.IPermission)">
      <summary>Cria e retorna uma permissão que é a interseção de permissão atual e da permissão especificada.</summary>
      <param name="target">Um <see cref="T:System.Security.IPermission" /> a intersectar com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> não é um <see cref="T:System.Net.Mail.SmtpPermission" />.</exception>
      <returns>Um <see cref="T:System.Net.Mail.SmtpPermission" /> que representa a interseção entre permissão atual e a permissão especificada. Retorna <see langword="null" /> se a interseção estiver vazia ou <paramref name="target" /> será <see langword="null" />.</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Retorna um valor que indica se a permissão atual é um subconjunto da permissão especificada.</summary>
      <param name="target">Um <see cref="T:System.Security.IPermission" /> que será testado para a relação de subconjunto. Essa permissão deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> não é um <see cref="T:System.Net.Mail.SmtpPermission" />.</exception>
      <returns>
        <see langword="true" /> se a permissão atual for um subconjunto da permissão especificada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.IsUnrestricted">
      <summary>Retorna um valor que indica se a permissão atual é irrestrita.</summary>
      <returns>
        <see langword="true" /> se a permissão for irrestrita; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.ToXml">
      <summary>Cria uma codificação XML do estado da permissão.</summary>
      <returns>Um <see cref="T:System.Security.SecurityElement" /> que contém uma codificação XML da permissão atual.</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.Union(System.Security.IPermission)">
      <summary>Cria uma permissão que é a união entre a permissão atual e a permissão especificada.</summary>
      <param name="target">Um <see cref="T:System.Security.IPermission" /> a ser combinado com a permissão atual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> não é um <see cref="T:System.Net.Mail.SmtpPermission" />.</exception>
      <returns>Uma nova permissão <see cref="T:System.Net.Mail.SmtpPermission" /> que representa a união da permissão atual e da permissão especificada.</returns>
    </member>
    <member name="P:System.Net.Mail.SmtpPermission.Access">
      <summary>Obtém o nível de acesso a servidores SMTP controlados pela permissão.</summary>
      <returns>Um dos valores de <see cref="T:System.Net.Mail.SmtpAccess" />.</returns>
    </member>
    <member name="T:System.Net.Mail.SmtpPermissionAttribute">
      <summary>Controla o acesso aos servidores SMTP.</summary>
    </member>
    <member name="M:System.Net.Mail.SmtpPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Mail.SmtpPermissionAttribute" />.</summary>
      <param name="action">Um dos valores <see cref="T:System.Security.Permissions.SecurityAction" /> que especifica o comportamento da permissão.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" /> não é um <see cref="T:System.Security.Permissions.SecurityAction" /> válido.</exception>
    </member>
    <member name="M:System.Net.Mail.SmtpPermissionAttribute.CreatePermission">
      <summary>Cria um objeto de permissão que pode ser armazenado com o <see cref="T:System.Security.Permissions.SecurityAction" /> nos metadados do assembly.</summary>
      <returns>Uma instância <see cref="T:System.Net.Mail.SmtpPermission" />.</returns>
    </member>
    <member name="P:System.Net.Mail.SmtpPermissionAttribute.Access">
      <summary>Obtém ou define o nível de acesso a servidores SMTP controlados pelo atributo.</summary>
      <returns>Um valor <see cref="T:System.String" />. Os valores válidos são "Connect" e "None".</returns>
    </member>
    <member name="T:System.Net.NetworkAccess">
      <summary>Especifica as permissões de acesso de rede.</summary>
    </member>
    <member name="F:System.Net.NetworkAccess.Accept">
      <summary>Indica que o aplicativo tem permissão para aceitar conexões da Internet em um recurso local. Observe que isso é uma proteção para o host local que usa Accept para permitir acesso a um recurso local (endereço/porta). No momento em que um soquete tentar se associar a esse recurso local, uma verificação de permissão será executada para ver se um Accept existe nesse recurso.</summary>
    </member>
    <member name="F:System.Net.NetworkAccess.Connect">
      <summary>Indica que o aplicativo tem permissão para se conectar aos recursos específicos da Internet. Observe que, em caso de recursos de host remoto, nenhuma verificação é realizada para ver se existem permissões Connect. Isso ocorre porque a porta de um host remoto de conexão é desconhecida e as permissões adequadas não podem ser criadas com antecedência. É responsabilidade do aplicativo verificar as permissões do host remoto tentando se conectar a um soquete de escuta.</summary>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkInformationAccess">
      <summary>Especifica a permissão para acessar informações sobre interfaces de rede e estatísticas de tráfego.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInformationAccess.None">
      <summary>Sem acesso a informações de rede.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping">
      <summary>Executa o ping de acesso para informações de rede.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInformationAccess.Read">
      <summary>Acesso de leitura a informações de rede.</summary>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkInformationPermission">
      <summary>Controla o acesso às informações de rede e às estatísticas de tráfego do computador local. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.#ctor(System.Net.NetworkInformation.NetworkInformationAccess)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" />, usando o valor <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" /> especificado.</summary>
      <param name="access">Um dos valores de <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" />.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> com o <see cref="T:System.Security.Permissions.PermissionState" /> especificado.</summary>
      <param name="state">Um dos valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.AddPermission(System.Net.NetworkInformation.NetworkInformationAccess)">
      <summary>Adiciona o valor especificado a essa permissão.</summary>
      <param name="access">Um dos valores de <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" />.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.Copy">
      <summary>Cria e retorna uma cópia idêntica dessa permissão.</summary>
      <returns>Um <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> que é idêntico à permissão atual</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.FromXml(System.Security.SecurityElement)">
      <summary>Define o estado dessa permissão usando a codificação XML especificada.</summary>
      <param name="securityElement">Um <see cref="T:System.Security.SecurityElement" /> que contém o XML de codificação a usar para definir o estado da permissão atual</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> não é uma permissão de codificação.  
  
- ou - 
 <paramref name="securityElement" /> não tem uma codificação de um <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" />.  
  
- ou - 
 <paramref name="securityElement" /> tem valores <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" /> inválidos.</exception>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.Intersect(System.Security.IPermission)">
      <summary>Cria e retorna uma permissão que é a interseção de permissão atual e da permissão especificada.</summary>
      <param name="target">Um <see cref="T:System.Security.IPermission" /> a intersectar com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> não é um <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" />.</exception>
      <returns>Um <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> que representa a interseção entre permissão atual e a permissão especificada. Essa nova permissão será <see langword="null" /> se a interseção estiver vazia ou <paramref name="target" /> for <see langword="null" />.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina se a permissão atual é um subconjunto da permissão especificada.</summary>
      <param name="target">Um <see cref="T:System.Security.IPermission" /> que será testado para a relação de subconjunto. Essa permissão deve ser do mesmo tipo que a permissão atual</param>
      <returns>
        <see langword="true" /> se a permissão atual for um subconjunto da permissão especificada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.IsUnrestricted">
      <summary>Retorna um valor que indica se a permissão atual é irrestrita.</summary>
      <returns>
        <see langword="true" /> se a permissão for irrestrita; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.ToXml">
      <summary>Cria uma codificação XML do estado dessa permissão.</summary>
      <returns>Um <see cref="T:System.Security.SecurityElement" /> que contém a codificação XML da permissão atual.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.Union(System.Security.IPermission)">
      <summary>Cria uma permissão que é a união desta permissão e da permissão especificada.</summary>
      <param name="target">Uma permissão <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> a ser combinada à permissão atual.</param>
      <returns>Uma nova permissão que representa a união da permissão atual e da permissão especificada.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.NetworkInformationPermission.Access">
      <summary>Obtém o nível de acesso a informações de rede controladas por essa permissão.</summary>
      <returns>Um dos valores de <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" />.</returns>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkInformationPermissionAttribute">
      <summary>Permite que as ações de segurança para <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> sejam aplicadas ao código usando a segurança declarativa.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.NetworkInformation.NetworkInformationPermissionAttribute" />.</summary>
      <param name="action">Um valor <see cref="T:System.Security.Permissions.SecurityAction" /> que especifica o comportamento de permissão.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermissionAttribute.CreatePermission">
      <summary>Cria e retorna um novo objeto <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" />.</summary>
      <returns>Um <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> que corresponde a este atributo.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.NetworkInformationPermissionAttribute.Access">
      <summary>Obtém ou define o nível de acesso de informações de rede.</summary>
      <returns>Uma cadeia de caracteres que especifica o nível de acesso.</returns>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission">
      <summary>Especifica os valores que definem ou são usados nas permissões de objeto <see cref="N:System.Net.PeerToPeer.Collaboration" />.</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância do <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />. O <see cref="T:System.Security.Permissions.PermissionState" /> inicial dessa instância é passado quando o construtor é chamado.</summary>
      <param name="state">Um dos valores na enumeração <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy">
      <summary>Cria e retorna uma cópia do <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> atual.</summary>
      <returns>Um <see cref="T:System.Object" /> que contém uma cópia da instância atual do <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />.</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)">
      <summary>Representa o modelo de objeto XML para codificação de objetos de segurança.</summary>
      <param name="e">A codificação de XML a usar para reconstruir a permissão.</param>
      <exception cref="T:System.ArgumentException">O parâmetro não é um elemento de permissão válido.

- ou -

O parâmetro não contém uma classe ou tipo válido.

- ou -

O número de versão do parâmetro não é compatível.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro é uma referência <see langword="null" /> (<see langword="Nothing" /> no Visual Basic).</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)">
      <summary>Cria e retorna uma permissão que é a interseção do <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> atual e da permissão <paramref name="target" /> especificada.</summary>
      <param name="target">Permissão para <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)" /> com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro de destino não for uma referência <see langword="null" /> (<see langword="Nothing" /> no Visual Basic) e não for uma instância da mesma classe que a permissão atual.</exception>
      <returns>Uma nova permissão que representa a interseção do <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> atual e da permissão <paramref name="target" /> especificada. Esta nova permissão será uma referência <see langword="null" /> (<see langword="Nothing" /> no Visual Basic) se a interseção estiver vazia.</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina se o <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> atual é um subconjunto da permissão <paramref name="target" /> especificada.</summary>
      <param name="target">Uma permissão que deve ser testada quanto à relação de subconjunto. Essa permissão deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro é uma referência <see langword="null" /> (<see langword="Nothing" /> no Visual Basic).</exception>
      <returns>
        <see langword="true" /> se a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> atual for um subconjunto da permissão especificada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted">
      <summary>Retorna um valor que especifica se o <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> atual é irrestrito.</summary>
      <returns>
        <see langword="true" /> se a permissão for irrestrita; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.ToXml">
      <summary>Cria uma codificação XML do <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> e seu estado atual.</summary>
      <returns>Uma codificação XML da permissão, incluindo informações de estado.</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)">
      <summary>Cria uma permissão que é a união entre o <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> atual e a permissão <paramref name="target" /> especificada.</summary>
      <param name="target">Uma permissão a ser combinada com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro é uma referência <see langword="null" /> (<see langword="Nothing" /> no Visual Basic).</exception>
      <returns>Uma nova permissão que representa o <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)" /> do <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> atual e a permissão especificada.</returns>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute">
      <summary>Permite que as ações de segurança para <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> sejam aplicadas ao código usando a segurança declarativa. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" /> com o <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Especifica um valor <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.CreatePermission">
      <summary>Cria e retorna um novo <see cref="T:System.Security.IPermission" />.</summary>
      <returns>Um novo objeto <see cref="T:System.Security.IPermission" />.</returns>
    </member>
    <member name="T:System.Net.PeerToPeer.PnrpPermission">
      <summary>Especifica os valores usados nas permissões de objeto <see cref="N:System.Net.PeerToPeer" />.</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> com o estado da permissão inicial fornecido.</summary>
      <param name="state">Um dos valores na enumeração <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.Copy">
      <summary>Cria e retorna uma cópia idêntica da <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> atual.</summary>
      <exception cref="T:System.ArgumentException">O parâmetro não é um elemento <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> válido.

- ou -

O número de versão do parâmetro não é compatível.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro é uma referência <see langword="null" /> (<see langword="Nothing" /> no Visual Basic).</exception>
      <returns>Um objeto com uma interface IPermission, cuja instância contém uma cópia da instância atual do <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói um objeto de segurança com um estado especificado de uma codificação XML.</summary>
      <param name="e">A codificação de XML a usar para reconstruir a permissão.</param>
      <exception cref="T:System.ArgumentException">O parâmetro não é um elemento <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> válido.

- ou -

O número de versão do parâmetro não é compatível.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro é uma referência <see langword="null" /> (<see langword="Nothing" /> no Visual Basic).</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)">
      <summary>Cria e retorna uma permissão que é a interseção do <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> atual e da permissão especificada.</summary>
      <param name="target">Uma permissão para <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" /> com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro de destino não for uma referência <see langword="null" /> (<see langword="Nothing" /> no Visual Basic) e não for uma instância da mesma classe que a permissão atual.</exception>
      <returns>Uma nova permissão que representa a interseção do <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> atual e da permissão especificada. Esta nova permissão será uma referência <see langword="null" /> (<see langword="Nothing" /> no Visual Basic) se a interseção estiver vazia.</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina se a <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> atual é um subconjunto da permissão especificada.</summary>
      <param name="target">Uma permissão que deve ser testada quanto à relação de subconjunto. Essa permissão deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro de destino não for uma referência <see langword="null" /> (<see langword="Nothing" /> no Visual Basic) e não for uma instância da mesma classe que a permissão atual.</exception>
      <returns>
        <see langword="true" /> se a <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> atual for um subconjunto da permissão especificada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted">
      <summary>Retorna um valor que especifica se o <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> atual é irrestrito.</summary>
      <returns>
        <see langword="true" /> se a permissão for irrestrita; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.ToXml">
      <summary>Cria uma codificação XML do <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> e seu estado atual.</summary>
      <returns>Um <see cref="T:System.Security.SecurityElement" /> objeto que contém uma codificação XML da permissão, incluindo informações de estado.</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)">
      <summary>Cria uma permissão que é a união entre a <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> atual e a permissão especificada.</summary>
      <param name="target">Uma permissão a ser combinada com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> é inválido.</exception>
      <returns>Uma nova permissão que representa o <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /> do <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> atual e a permissão especificada.</returns>
    </member>
    <member name="T:System.Net.PeerToPeer.PnrpPermissionAttribute">
      <summary>Permite que as ações de segurança para <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> sejam aplicadas ao código usando a segurança declarativa.</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" /> com o <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Um dos valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermissionAttribute.CreatePermission">
      <summary>Cria e retorna um novo <see cref="T:System.Security.IPermission" />.</summary>
      <returns>Um novo objeto <see cref="T:System.Security.IPermission" />.</returns>
    </member>
    <member name="T:System.Net.PeerToPeer.PnrpScope">
      <summary>Especifica os diferentes escopos de uma nuvem PNRP.</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.All">
      <summary>Todos os endereços IP têm permissão para serem registrados com o <see cref="T:System.Net.PeerToPeer.Cloud" /> PNRP. Não há diferença entre qualquer escopo e todos os escopos.</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.Global">
      <summary>O escopo é global; todos os endereços IP válidos têm permissão para serem registrados com o <see cref="T:System.Net.PeerToPeer.Cloud" /> PNRP.</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.LinkLocal">
      <summary>O escopo é o local do link; apenas endereços IP definidos para a sub-rede da área local têm permissão para serem registrados com o <see cref="T:System.Net.PeerToPeer.Cloud" /> PNRP.</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.SiteLocal">
      <summary>O escopo é o local do site; apenas endereços IP definidos para o site têm permissão para serem registrados com o PNRP.</summary>
    </member>
    <member name="T:System.Net.SocketPermission">
      <summary>Controla os direitos para estabelecer ou aceitar conexões em um endereço de transporte.</summary>
    </member>
    <member name="F:System.Net.SocketPermission.AllPorts">
      <summary>Define uma constante que representa todas as portas.</summary>
    </member>
    <member name="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.SocketPermission" /> para o endereço de transporte determinado com a permissão especificada.</summary>
      <param name="access">Um dos valores de <see cref="T:System.Net.NetworkAccess" />.</param>
      <param name="transport">Um dos valores de <see cref="T:System.Net.TransportType" />.</param>
      <param name="hostName">O nome do host para o endereço de transporte.</param>
      <param name="portNumber">O número da porta para o endereço de transporte.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostName" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.SocketPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.SocketPermission" /> que dá acesso irrestrito ao <see cref="T:System.Net.Sockets.Socket" /> ou impede o acesso ao <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <param name="state">Um dos valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
      <summary>Adiciona uma permissão ao conjunto de permissões de um endereço de transporte.</summary>
      <param name="access">Um dos valores de <see cref="T:System.Net.NetworkAccess" />.</param>
      <param name="transport">Um dos valores de <see cref="T:System.Net.TransportType" />.</param>
      <param name="hostName">O nome do host para o endereço de transporte.</param>
      <param name="portNumber">O número da porta para o endereço de transporte.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostName" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.SocketPermission.Copy">
      <summary>Cria uma cópia de uma instância <see cref="T:System.Net.SocketPermission" />.</summary>
      <returns>Uma nova instância da classe <see cref="T:System.Net.SocketPermission" /> que é uma cópia da instância atual.</returns>
    </member>
    <member name="M:System.Net.SocketPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói uma instância <see cref="T:System.Net.SocketPermission" /> para uma codificação de XML.</summary>
      <param name="securityElement">A codificação de XML usada para reconstruir a instância <see cref="T:System.Net.SocketPermission" />.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="securityElement" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O <paramref name="securityElement" /> não é um elemento de permissão para esse tipo.</exception>
    </member>
    <member name="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
      <summary>Retorna a interseção lógica entre duas instâncias <see cref="T:System.Net.SocketPermission" />.</summary>
      <param name="target">A instância <see cref="T:System.Net.SocketPermission" /> a se interseccionar com a instância atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é um <see cref="T:System.Net.SocketPermission" />.</exception>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Net.DnsPermission" /> não é concedido para o chamador do método.</exception>
      <returns>A instância <see cref="T:System.Net.SocketPermission" /> que representa a interseção de duas instâncias <see cref="T:System.Net.SocketPermission" />. Se a interseção estiver vazia, o método retornará <see langword="null" />. Se o parâmetro <paramref name="target" /> for uma referência nula, o método retornará <see langword="null" />.</returns>
    </member>
    <member name="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina se a permissão atual é um subconjunto da permissão especificada.</summary>
      <param name="target">Um <see cref="T:System.Net.SocketPermission" /> que será testado para a relação de subconjunto.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> não é um <see cref="T:System.Net.Sockets.SocketException" />.</exception>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Net.DnsPermission" /> não é concedido para o chamador do método.</exception>
      <returns>Se <paramref name="target" /> for <see langword="null" />, esse método retornará <see langword="true" /> se a instância atual não definir permissões; caso contrário, <see langword="false" />. Se <paramref name="target" /> não for <see langword="null" />, esse método retornará <see langword="true" /> se a instância atual definir um subconjunto de permissões <paramref name="target" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.SocketPermission.IsUnrestricted">
      <summary>Verifica o estado de permissão geral do objeto.</summary>
      <returns>
        <see langword="true" /> se a instância <see cref="T:System.Net.SocketPermission" /> for criada com o valor <see langword="Unrestricted" /> do <see cref="T:System.Security.Permissions.PermissionState" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.SocketPermission.ToXml">
      <summary>Cria uma codificação de XML de uma instância <see cref="T:System.Net.SocketPermission" /> e de seu estado atual.</summary>
      <returns>Uma instância <see cref="T:System.Security.SecurityElement" /> que contém uma representação codificada em XML da instância <see cref="T:System.Net.SocketPermission" />, incluindo informações de estado.</returns>
    </member>
    <member name="M:System.Net.SocketPermission.Union(System.Security.IPermission)">
      <summary>Retorna a união lógica entre duas instâncias <see cref="T:System.Net.SocketPermission" />.</summary>
      <param name="target">A instância <see cref="T:System.Net.SocketPermission" /> a ser combinada com a instância atual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> não é um <see cref="T:System.Net.SocketPermission" />.</exception>
      <returns>A instância <see cref="T:System.Net.SocketPermission" /> que representa a união de duas instâncias <see cref="T:System.Net.SocketPermission" />. Se o parâmetro <paramref name="target" /> for <see langword="null" />, ele retornará uma cópia da instância atual.</returns>
    </member>
    <member name="P:System.Net.SocketPermission.AcceptList">
      <summary>Obtém uma lista de instâncias <see cref="T:System.Net.EndpointPermission" /> que identifica os pontos de extremidade que podem ser aceitos no âmbito dessa instância de permissão.</summary>
      <returns>Uma instância que implementa a <see cref="T:System.Collections.IEnumerator" /> interface que contém <see cref="T:System.Net.EndpointPermission" /> instâncias.</returns>
    </member>
    <member name="P:System.Net.SocketPermission.ConnectList">
      <summary>Obtém uma lista de instâncias <see cref="T:System.Net.EndpointPermission" /> que identifica os pontos de extremidade que podem ser conectados no âmbito dessa instância de permissão.</summary>
      <returns>Uma instância que implementa a <see cref="T:System.Collections.IEnumerator" /> interface que contém <see cref="T:System.Net.EndpointPermission" /> instâncias.</returns>
    </member>
    <member name="T:System.Net.SocketPermissionAttribute">
      <summary>Especifica as ações de segurança para controlar conexões <see cref="T:System.Net.Sockets.Socket" />. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Net.SocketPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.SocketPermissionAttribute" /> com o valor <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Um dos valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" /> não é um valor <see cref="T:System.Security.Permissions.SecurityAction" /> válido.</exception>
    </member>
    <member name="M:System.Net.SocketPermissionAttribute.CreatePermission">
      <summary>Cria e retorna uma nova instância da classe <see cref="T:System.Net.SocketPermission" />.</summary>
      <exception cref="T:System.ArgumentException">Uma ou mais das propriedades <see cref="P:System.Net.SocketPermissionAttribute.Access" />, <see cref="P:System.Net.SocketPermissionAttribute.Host" />, <see cref="P:System.Net.SocketPermissionAttribute.Transport" /> ou <see cref="P:System.Net.SocketPermissionAttribute.Port" /> da instância atual é <see langword="null" />.</exception>
      <returns>Uma instância da classe <see cref="T:System.Net.SocketPermission" /> que corresponde à declaração de segurança.</returns>
    </member>
    <member name="P:System.Net.SocketPermissionAttribute.Access">
      <summary>Obtém ou define o método de acesso à rede permitido por esse <see cref="T:System.Net.SocketPermissionAttribute" />.</summary>
      <exception cref="T:System.ArgumentException">A propriedade <see cref="P:System.Net.SocketPermissionAttribute.Access" /> não é <see langword="null" /> quando você tenta definir o valor. Para especificar mais de um método de Acesso, use uma instrução de declaração de atributo adicional.</exception>
      <returns>Uma cadeia de caracteres que contém o método de acesso à rede que é permitido por esta instância do <see cref="T:System.Net.SocketPermissionAttribute" /> . Os valores válidos são "Accept" e "Connect".</returns>
    </member>
    <member name="P:System.Net.SocketPermissionAttribute.Host">
      <summary>Obtém ou define o nome do host DNS ou endereço IP especificado por esse <see cref="T:System.Net.SocketPermissionAttribute" />.</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Net.SocketPermissionAttribute.Host" /> não é <see langword="null" /> quando você tentar definir o valor. Para especificar mais de um host, use uma instrução de declaração de atributo adicional.</exception>
      <returns>Uma cadeia de caracteres que contém o nome do host DNS ou o endereço IP que está associado a essa instância do <see cref="T:System.Net.SocketPermissionAttribute" /> .</returns>
    </member>
    <member name="P:System.Net.SocketPermissionAttribute.Port">
      <summary>Obtém ou define o número da porta associado a essa <see cref="T:System.Net.SocketPermissionAttribute" />.</summary>
      <exception cref="T:System.ArgumentException">A propriedade <see cref="P:System.Net.SocketPermissionAttribute.Port" /> é <see langword="null" /> quando você tenta definir o valor. Para especificar mais de uma porta, use uma instrução de declaração de atributo adicional.</exception>
      <returns>Uma cadeia de caracteres que contém o número da porta associado a essa instância do <see cref="T:System.Net.SocketPermissionAttribute" /> .</returns>
    </member>
    <member name="P:System.Net.SocketPermissionAttribute.Transport">
      <summary>Obtém ou define o <see cref="T:System.Net.TransportType" /> especificado por esse <see cref="T:System.Net.SocketPermissionAttribute" />.</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Net.SocketPermissionAttribute.Transport" /> não é <see langword="null" /> quando você tentar definir o valor. Para especificar mais de um tipo de transporte, use uma instrução de declaração de atributo adicional.</exception>
      <returns>Uma cadeia de caracteres que contém o <see cref="T:System.Net.TransportType" /> que está associado a isso <see cref="T:System.Net.SocketPermissionAttribute" /> .</returns>
    </member>
    <member name="T:System.Net.TransportType">
      <summary>Define os tipos de transporte para as classes <see cref="T:System.Net.SocketPermission" /> e <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.TransportType.All">
      <summary>Todos os tipos de transporte.</summary>
    </member>
    <member name="F:System.Net.TransportType.Connectionless">
      <summary>O tipo de transporte é sem conexão, como UDP. Especificar esse valor tem o mesmo efeito que especificar <see cref="F:System.Net.TransportType.Udp" />.</summary>
    </member>
    <member name="F:System.Net.TransportType.ConnectionOriented">
      <summary>O transporte é orientado pela conexão, como TCP. Especificar esse valor tem o mesmo efeito que especificar <see cref="F:System.Net.TransportType.Tcp" />.</summary>
    </member>
    <member name="F:System.Net.TransportType.Tcp">
      <summary>Transporte TCP.</summary>
    </member>
    <member name="F:System.Net.TransportType.Udp">
      <summary>Transporte UDP.</summary>
    </member>
    <member name="T:System.Net.WebPermission">
      <summary>Controla os direitos de acesso a recursos de Internet HTTP.</summary>
    </member>
    <member name="M:System.Net.WebPermission.#ctor">
      <summary>Cria uma nova instância da classe <see cref="T:System.Net.WebPermission" />.</summary>
    </member>
    <member name="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.WebPermission" /> com direitos de acesso especificado para o URI indicado.</summary>
      <param name="access">Um valor de NetworkAccess que indica o tipo de acesso a ser concedido ao URI especificado. <see cref="F:System.Net.NetworkAccess.Accept" /> indica que o aplicativo tem permissão para aceitar conexões da Internet em um recurso local. <see cref="F:System.Net.NetworkAccess.Connect" /> indica que o aplicativo tem permissão para se conectar a recursos específicos da Internet.</param>
      <param name="uriString">Uma cadeia de caracteres do URI para a qual os direitos de acesso serão concedidos.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriString" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.WebPermission" /> com os direitos de acesso especificados para a expressão regular do URI indicado.</summary>
      <param name="access">Um valor <see cref="T:System.Net.NetworkAccess" /> que indica o tipo de acesso a ser concedido para o URI especificado. <see cref="F:System.Net.NetworkAccess.Accept" /> indica que o aplicativo tem permissão para aceitar conexões da Internet em um recurso local. <see cref="F:System.Net.NetworkAccess.Connect" /> indica que o aplicativo tem permissão para se conectar a recursos específicos da Internet.</param>
      <param name="uriRegex">Uma expressão regular que descreve o URI ao qual o acesso será concedido.</param>
    </member>
    <member name="M:System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Cria uma nova instância da classe <see cref="T:System.Net.WebPermission" /> que transmite todas as demandas ou falha todas as demandas.</summary>
      <param name="state">Um valor <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)">
      <summary>Adiciona a cadeia de caracteres do URI com os direitos de acesso especificados para o <see cref="T:System.Net.WebPermission" /> atual.</summary>
      <param name="access">Um <see cref="T:System.Net.NetworkAccess" /> que especifica os direitos de acesso que são concedidos ao URI.</param>
      <param name="uriString">Uma cadeia de caracteres que descreve o URI para o qual os direitos de acesso serão concedidos.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriString" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
      <summary>Adiciona o URI especificado com os direitos de acesso especificados para o <see cref="T:System.Net.WebPermission" /> atual.</summary>
      <param name="access">Um NetworkAccess que especifica os direitos de acesso que são concedidos para o URI.</param>
      <param name="uriRegex">Uma expressão regular que descreve o conjunto de URIs para o qual os direitos de acesso são concedidos.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="uriRegex" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.WebPermission.Copy">
      <summary>Cria uma cópia de um <see cref="T:System.Net.WebPermission" />.</summary>
      <returns>Uma nova instância da classe <see cref="T:System.Net.WebPermission" /> que tem os mesmos valores que a original.</returns>
    </member>
    <member name="M:System.Net.WebPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói um <see cref="T:System.Net.WebPermission" /> de uma codificação XML.</summary>
      <param name="securityElement">A codificação de XML que servirá como base para reconstruir o <see cref="T:System.Net.WebPermission" />.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="securityElement" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> não é um elemento de permissão para este tipo.</exception>
    </member>
    <member name="M:System.Net.WebPermission.Intersect(System.Security.IPermission)">
      <summary>Retorna a interseção lógica de duas instâncias <see cref="T:System.Net.WebPermission" />.</summary>
      <param name="target">O <see cref="T:System.Net.WebPermission" /> de comparação com a instância atual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> não é <see langword="null" /> ou do tipo <see cref="T:System.Net.WebPermission" /></exception>
      <returns>Um novo <see cref="T:System.Net.WebPermission" /> que representa a interseção da instância atual e do parâmetro <paramref name="target" />. Se a interseção estiver vazia, o método retornará <see langword="null" />.</returns>
    </member>
    <member name="M:System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina se o <see cref="T:System.Net.WebPermission" /> atual é um subconjunto do objeto especificado.</summary>
      <param name="target">O <see cref="T:System.Net.WebPermission" /> a ser comparado com o <see cref="T:System.Net.WebPermission" /> atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro de destino não é uma instância de <see cref="T:System.Net.WebPermission" />.</exception>
      <exception cref="T:System.NotSupportedException">A instância atual contém um direito de Regex codificado e exatamente o mesmo direito não foi encontrado na instância de destino.</exception>
      <returns>
        <see langword="true" /> se a instância atual for um subconjunto do parâmetro <paramref name="target" />; caso contrário, <see langword="false" />. Se o destino for <see langword="null" />, o método retornará <see langword="true" /> para uma permissão atual vazia que não é irrestrita e <see langword="false" /> caso contrário.</returns>
    </member>
    <member name="M:System.Net.WebPermission.IsUnrestricted">
      <summary>Verifica o estado geral das permissões de <see cref="T:System.Net.WebPermission" />.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Net.WebPermission" /> foi criado com o <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /><see cref="T:System.Security.Permissions.PermissionState" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.WebPermission.ToXml">
      <summary>Cria uma codificação de XML de um <see cref="T:System.Net.WebPermission" /> e seu estado atual.</summary>
      <returns>Um <see cref="T:System.Security.SecurityElement" /> que contém uma representação XML codificada do <see cref="T:System.Net.WebPermission" />, incluindo informações de estado.</returns>
    </member>
    <member name="M:System.Net.WebPermission.Union(System.Security.IPermission)">
      <summary>Retorna a união lógica entre duas instâncias da classe <see cref="T:System.Net.WebPermission" />.</summary>
      <param name="target">O <see cref="T:System.Net.WebPermission" /> a ser combinado com o <see cref="T:System.Net.WebPermission" /> atual.</param>
      <exception cref="T:System.ArgumentException">o destino não é <see langword="null" /> ou do tipo <see cref="T:System.Net.WebPermission" />.</exception>
      <returns>Um <see cref="T:System.Net.WebPermission" /> que representa a união da instância atual com o parâmetro <paramref name="target" />. Se qualquer <see langword="WebPermission" /> for <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />, o método retornará um <see cref="T:System.Net.WebPermission" /> que será <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Se o destino for <see langword="null" />, o método retornará uma cópia do <see cref="T:System.Net.WebPermission" /> atual.</returns>
    </member>
    <member name="P:System.Net.WebPermission.AcceptList">
      <summary>Essa propriedade retorna uma enumeração de permissões de aceitação única mantidas por este <see cref="T:System.Net.WebPermission" />. Os tipos de objetos possíveis contidos na enumeração retornada são <see cref="T:System.String" /> e <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <returns>A <see cref="T:System.Collections.IEnumerator" /> interface que contém permissões de aceitação.</returns>
    </member>
    <member name="P:System.Net.WebPermission.ConnectList">
      <summary>Essa propriedade retorna uma enumeração de permissões de conexão única mantidas por este <see cref="T:System.Net.WebPermission" />. Os tipos de objetos possíveis contidos na enumeração retornada são <see cref="T:System.String" /> e <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <returns>A <see cref="T:System.Collections.IEnumerator" /> interface que contém permissões de conexão.</returns>
    </member>
    <member name="T:System.Net.WebPermissionAttribute">
      <summary>Especifica a permissão para acessar recursos da Internet. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Net.WebPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.WebPermissionAttribute" /> com um valor que especifica as ações de segurança que podem ser executadas nessa classe.</summary>
      <param name="action">Um dos valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" /> não é um valor <see cref="T:System.Security.Permissions.SecurityAction" /> válido.</exception>
    </member>
    <member name="M:System.Net.WebPermissionAttribute.CreatePermission">
      <summary>Cria e retorna uma nova instância da classe <see cref="T:System.Net.WebPermission" />.</summary>
      <returns>Um <see cref="T:System.Net.WebPermission" /> que corresponde à declaração de segurança.</returns>
    </member>
    <member name="P:System.Net.WebPermissionAttribute.Accept">
      <summary>Obtém ou define a cadeia de caracteres do URI aceita pelo <see cref="T:System.Net.WebPermissionAttribute" /> atual.</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Net.WebPermissionAttribute.Accept" /> não é <see langword="null" /> quando você tentar definir o valor. Se você quiser especificar mais de um URI Accept, use uma instrução de declaração de atributo adicional.</exception>
      <returns>Uma cadeia de caracteres que contém o URI aceito pelo atual <see cref="T:System.Net.WebPermissionAttribute" /> .</returns>
    </member>
    <member name="P:System.Net.WebPermissionAttribute.AcceptPattern">
      <summary>Obtém ou define um padrão de expressão regular que descreve o URI aceito pelo <see cref="T:System.Net.WebPermissionAttribute" /> atual.</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Net.WebPermissionAttribute.AcceptPattern" /> não é <see langword="null" /> quando você tentar definir o valor. Se você quiser especificar mais de um URI Accept, use uma instrução de declaração de atributo adicional.</exception>
      <returns>Uma cadeia de caracteres que contém um padrão de expressão regular que descreve o URI aceito pelo atual <see cref="T:System.Net.WebPermissionAttribute" /> . Essa cadeia de caracteres deve ter um escape de acordo com as regras para codificar uma <see cref="T:System.Text.RegularExpressions.Regex" /> cadeia de caracteres de construtor.</returns>
    </member>
    <member name="P:System.Net.WebPermissionAttribute.Connect">
      <summary>Obtém ou define a cadeia de conexão do URI controlada pelo <see cref="T:System.Net.WebPermissionAttribute" /> atual.</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Net.WebPermissionAttribute.Connect" /> não é <see langword="null" /> quando você tentar definir o valor. Se você quiser especificar mais de um URI de Conexão, use uma instrução de declaração de atributo adicional.</exception>
      <returns>Uma cadeia de caracteres que contém a conexão de URI controlada pelo atual <see cref="T:System.Net.WebPermissionAttribute" /> .</returns>
    </member>
    <member name="P:System.Net.WebPermissionAttribute.ConnectPattern">
      <summary>Obtém ou define um padrão de expressão regular que descreve a conexão de URI controlado pelo <see cref="T:System.Net.WebPermissionAttribute" /> atual.</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Net.WebPermissionAttribute.ConnectPattern" /> não é <see langword="null" /> quando você tentar definir o valor. Se você quiser especificar mais de um URI de conexão, use uma instrução de declaração de atributo adicional.</exception>
      <returns>Uma cadeia de caracteres que contém um padrão de expressão regular que descreve a conexão de URI controlada por isso <see cref="T:System.Net.WebPermissionAttribute" /> .</returns>
    </member>
    <member name="T:System.Security.CodeAccessPermission">
      <summary>Define a estrutura subjacente de todas as permissões de acesso do código.</summary>
    </member>
    <member name="M:System.Security.CodeAccessPermission.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.CodeAccessPermission" />.</summary>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Assert">
      <summary>Declara que o código de chamada pode acessar o recurso protegido por uma demanda de permissão através do código que chama este método, mesmo que os chamadores na pilha não tenham recebido permissão para acessar o recurso. Usar <see cref="M:System.Security.CodeAccessPermission.Assert" /> pode criar problemas de segurança.</summary>
      <exception cref="T:System.Security.SecurityException">O código de chamada não tem <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" />.  
  
- ou - 
Já existe um <see cref="M:System.Security.CodeAccessPermission.Assert" /> ativo para o quadro atual.</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Copy">
      <summary>Quando implementada por uma classe derivada, cria e retorna uma cópia idêntica do objeto de permissão atual.</summary>
      <returns>Uma cópia do objeto de permissão atual.</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Demand">
      <summary>Força um <see cref="T:System.Security.SecurityException" /> no tempo de execução se todos os chamadores no topo da pilha de chamadas não receberam as permissões especificadas pela instância atual.</summary>
      <exception cref="T:System.Security.SecurityException">Um chamador superior na pilha de chamadas não tem a permissão especificada na instância atual.  
  
- ou - 
Um chamador superior na pilha de chamadas chamou <see cref="M:System.Security.CodeAccessPermission.Deny" /> no objeto de permissão atual.</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Deny">
      <summary>Impede que os chamadores no nível superior da pilha de chamadas usem o código que chama esse método para acessar o recurso especificado pela instância atual.</summary>
      <exception cref="T:System.Security.SecurityException">Já existe um <see cref="M:System.Security.CodeAccessPermission.Deny" /> ativo para o quadro atual.</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Equals(System.Object)">
      <summary>Determina se o objeto <see cref="T:System.Security.CodeAccessPermission" /> especificado é igual ao <see cref="T:System.Security.CodeAccessPermission" /> atual.</summary>
      <param name="obj">O objeto <see cref="T:System.Security.CodeAccessPermission" /> a ser comparado com o <see cref="T:System.Security.CodeAccessPermission" /> atual.</param>
      <returns>
        <see langword="true" /> se o objeto <see cref="T:System.Security.CodeAccessPermission" /> especificado for igual ao <see cref="T:System.Security.CodeAccessPermission" /> atual, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.FromXml(System.Security.SecurityElement)">
      <summary>Quando substituído em uma classe derivada, reconstrói um objeto de segurança com um estado especificado de uma codificação XML.</summary>
      <param name="elem">A codificação XML a ser usada para reconstruir o objeto de segurança.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="elem" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="elem" /> não contém a codificação XML para uma instância do mesmo tipo que a instância atual.  
  
- ou - 
Não há suporte para o número de versão do parâmetro <paramref name="elem" />.</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.GetHashCode">
      <summary>Obtém um código hash para o objeto <see cref="T:System.Security.CodeAccessPermission" /> atual, adequado para algoritmos de hash e estruturas de dados, tais como uma tabela de hash.</summary>
      <returns>Um código hash para o objeto <see cref="T:System.Security.CodeAccessPermission" /> atual.</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Intersect(System.Security.IPermission)">
      <summary>Quando implementada por uma classe derivada, cria e retorna uma permissão que é a interseção de permissão atual e da permissão especificada.</summary>
      <param name="target">Uma permissão para ter interseção com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é uma instância da mesma classe que a permissão atual.</exception>
      <returns>Uma nova permissão que representa a interseção da permissão atual e da permissão especificada. Essa nova permissão é <see langword="null" /> se a interseção estiver vazia.</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Quando implementado em uma classe derivada, determina se a permissão atual é um subconjunto da permissão especificada.</summary>
      <param name="target">Uma permissão que deve ser testada quanto à relação de subconjunto. Essa permissão deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
      <returns>
        <see langword="true" /> se a permissão atual for um subconjunto da permissão especificada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.PermitOnly">
      <summary>Impede que os chamadores no topo da pilha de chamadas usem o código que chama esse método para acessar todos os recursos, com exceção do recurso especificado pela instância atual.</summary>
      <exception cref="T:System.Security.SecurityException">Já existe um <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> ativo para o quadro atual.</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.RevertAll">
      <summary>Faz com que todas as substituições anteriores para o quadro atual sejam removidas e não estejam mais em vigor.</summary>
      <exception cref="T:System.InvalidOperationException">Não há nenhum <see cref="M:System.Security.CodeAccessPermission.Assert" />, <see cref="M:System.Security.CodeAccessPermission.Deny" /> ou <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> anterior para o quadro atual.</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.RevertAssert">
      <summary>Faz com que um <see cref="M:System.Security.CodeAccessPermission.Assert" /> anterior do quadro atual seja removido e não entre mais em vigor.</summary>
      <exception cref="T:System.InvalidOperationException">Não há nenhum <see cref="M:System.Security.CodeAccessPermission.Assert" /> anterior para o quadro atual.</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.RevertDeny">
      <summary>Faz com que um <see cref="M:System.Security.CodeAccessPermission.Deny" /> anterior do quadro atual seja removido e não entre mais em vigor.</summary>
      <exception cref="T:System.InvalidOperationException">Não há nenhum <see cref="M:System.Security.CodeAccessPermission.Deny" /> anterior para o quadro atual.</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.RevertPermitOnly">
      <summary>Faz com que um <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> anterior do quadro atual seja removido e não entre mais em vigor.</summary>
      <exception cref="T:System.InvalidOperationException">Não há nenhum <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> anterior para o quadro atual.</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.ToString">
      <summary>Cria e retorna uma representação de cadeia de caracteres do objeto de permissão atual.</summary>
      <returns>Uma representação de cadeia de caracteres do objeto de permissão atual.</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.ToXml">
      <summary>Quando substituído em uma classe derivada, cria uma codificação XML do objeto de segurança e seu estado atual.</summary>
      <returns>Uma codificação XML do objeto de segurança, incluindo quaisquer informações de estado.</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Union(System.Security.IPermission)">
      <summary>Quando substituído em uma classe derivada, cria uma permissão que é a união entre a permissão atual e a permissão especificada.</summary>
      <param name="other">Uma permissão a ser combinada com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.NotSupportedException">O parâmetro <paramref name="other" /> não é <see langword="null" />. Esse método é compatível com este nível apenas quando passar <see langword="null" />.</exception>
      <returns>Uma nova permissão que representa a união da permissão atual e da permissão especificada.</returns>
    </member>
    <member name="T:System.Security.HostProtectionException">
      <summary>A exceção que é lançada quando um recurso de host recusado é detectado.</summary>
    </member>
    <member name="M:System.Security.HostProtectionException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.HostProtectionException" /> com valores padrão.</summary>
    </member>
    <member name="M:System.Security.HostProtectionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.HostProtectionException" />, usando as informações de serialização e o contexto de streaming fornecidos.</summary>
      <param name="info">O objeto que mantém os dados de objeto serializados.</param>
      <param name="context">Informações contextuais sobre a origem ou o destino.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.HostProtectionException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.HostProtectionException" /> com uma mensagem de erro especificada.</summary>
      <param name="message">A mensagem que descreve o erro.</param>
    </member>
    <member name="M:System.Security.HostProtectionException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.HostProtectionException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message">A mensagem de erro que explica a razão da exceção.</param>
      <param name="e">A exceção que é a causa da exceção atual. Se o parâmetro <c>innerException</c> não for <see langword="null" />, a exceção atual será gerada em um bloco <see langword="catch" /> que tratará a exceção interna.</param>
    </member>
    <member name="M:System.Security.HostProtectionException.#ctor(System.String,System.Security.Permissions.HostProtectionResource,System.Security.Permissions.HostProtectionResource)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.HostProtectionException" /> com uma mensagem de erro especificada, os recursos de host protegidos e os recursos de host que fizeram com que a exceção fosse gerada.</summary>
      <param name="message">A mensagem de erro que explica a razão da exceção.</param>
      <param name="protectedResources">Uma combinação bit a bit dos valores de enumeração que especificam os recursos de host não acessíveis para código parcialmente confiável.</param>
      <param name="demandedResources">Um combinação bit a bit de valores de enumeração que especificam os recursos de host requeridos.</param>
    </member>
    <member name="M:System.Security.HostProtectionException.ToString">
      <summary>Retorna uma representação de cadeia de caracteres da exceção de proteção de host atual.</summary>
      <returns>Uma representação de cadeia de caracteres do <see cref="T:System.Security.HostProtectionException" /> atual.</returns>
    </member>
    <member name="P:System.Security.HostProtectionException.DemandedResources">
      <summary>Obtém ou define os recursos de proteção de host requeridos que fizeram com que a exceção fosse gerada.</summary>
      <returns>Uma combinação de bits de bit que <see cref="T:System.Security.Permissions.HostProtectionResource" /> identifica os recursos de proteção que causam a exceção a ser gerada. O padrão é <see cref="F:System.Security.Permissions.HostProtectionResource.None" />.</returns>
    </member>
    <member name="P:System.Security.HostProtectionException.ProtectedResources">
      <summary>Obtém ou define os recursos de proteção de host que não estão acessíveis para código parcialmente confiável.</summary>
      <returns>Uma combinação de bits de bit que <see cref="T:System.Security.Permissions.HostProtectionResource" /> identifica as categorias de proteção de host inacessíveis. O padrão é <see cref="F:System.Security.Permissions.HostProtectionResource.None" />.</returns>
    </member>
    <member name="T:System.Security.HostSecurityManager">
      <summary>Permite o controle e a personalização do comportamento de segurança para domínios do aplicativo.</summary>
    </member>
    <member name="M:System.Security.HostSecurityManager.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.HostSecurityManager" />.</summary>
    </member>
    <member name="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
      <summary>Determina se um aplicativo deve ser executado.</summary>
      <param name="applicationEvidence">A evidência do aplicativo ser ativado.</param>
      <param name="activatorEvidence">Opcionalmente, a evidência para o domínio do aplicativo realizando a ativação.</param>
      <param name="context">O contexto de confiança.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="applicationEvidence" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Não foi possível localizar um objeto <see cref="T:System.Runtime.Hosting.ActivationArguments" /> na evidência do aplicativo.  
  
- ou - 
A propriedade <see cref="P:System.Runtime.Hosting.ActivationArguments.ActivationContext" /> nos argumentos de ativação é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">O conjunto de concessão <see cref="T:System.Security.Policy.ApplicationTrust" /> não contém o conjunto de solicitações mínimo especificado pelo <see cref="T:System.ActivationContext" />.</exception>
      <returns>Um objeto que contém informações de confiança sobre o aplicativo.</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
      <summary>Solicita um tipo de evidência específico para o domínio de aplicativo.</summary>
      <param name="evidenceType">O tipo de evidência.</param>
      <returns>A evidência de domínio do aplicativo solicitada.</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
      <summary>Solicita um tipo de evidência específico para o assembly.</summary>
      <param name="evidenceType">O tipo de evidência.</param>
      <param name="assembly">O assembly de destino.</param>
      <returns>A evidência do assembly solicitada.</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes">
      <summary>Determina quais tipos de evidência o host pode fornecer para o domínio de aplicativo, se solicitado.</summary>
      <returns>Uma matriz de tipos de evidência.</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)">
      <summary>Determina quais tipos de evidência o host pode fornecer para o assembly, se solicitado.</summary>
      <param name="assembly">O assembly de destino.</param>
      <returns>Uma matriz de tipos de evidência.</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)">
      <summary>Fornece a evidência de domínio de aplicativo para um assembly sendo carregado.</summary>
      <param name="inputEvidence">Evidência adicional para adicionar à evidência <see cref="T:System.AppDomain" />.</param>
      <returns>A evidência a ser usada para o <see cref="T:System.AppDomain" />.</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
      <summary>Fornece a evidência de assembly para um assembly sendo carregado.</summary>
      <param name="loadedAssembly">O assembly carregado.</param>
      <param name="inputEvidence">Evidência adicional a ser adicionada à evidência do assembly.</param>
      <returns>A evidência a ser usada para o assembly.</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)">
      <summary>Determina quais permissões conceder ao código com base na evidência especificada.</summary>
      <param name="evidence">O conjunto de evidências usado para avaliar a política.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> é <see langword="null" />.</exception>
      <returns>O conjunto de permissões que pode ser concedido pelo sistema de segurança.</returns>
    </member>
    <member name="P:System.Security.HostSecurityManager.DomainPolicy">
      <summary>Quando substituído em uma classe derivada, obtém a política de segurança do domínio do aplicativo atual.</summary>
      <exception cref="T:System.NotSupportedException">Esse método usa a política de CAS (segurança de acesso do código), que está obsoleta no .NET Framework 4. Para habilitar a política de CAS para compatibilidade com versões anteriores do .NET Framework, use o elemento &lt;legacyCasPolicy&gt;.</exception>
      <returns>A política de segurança para o domínio de aplicativo atual. O padrão é <see langword="null" />.</returns>
    </member>
    <member name="P:System.Security.HostSecurityManager.Flags">
      <summary>Obtém um sinalizador que representa os componentes de política de segurança de interesse para o host.</summary>
      <returns>Um dos valores de enumeração que especifica os componentes da política de segurança. O padrão é <see cref="F:System.Security.HostSecurityManagerOptions.AllFlags" />.</returns>
    </member>
    <member name="T:System.Security.HostSecurityManagerOptions">
      <summary>Especifica os componentes de política de segurança a serem usados pelo gerenciador de segurança do host.</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.AllFlags">
      <summary>Usar todos os componentes de política de segurança.</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.HostAppDomainEvidence">
      <summary>Usar a evidência de domínio do aplicativo.</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.HostAssemblyEvidence">
      <summary>Usar a evidência de assembly.</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.HostDetermineApplicationTrust">
      <summary>Rotear as chamadas para o método <see cref="M:System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)" /> primeiro para o método <see cref="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)" />.</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.HostPolicyLevel">
      <summary>Usar o nível de política especificado na propriedade <see cref="P:System.Security.HostSecurityManager.DomainPolicy" />.</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.HostResolvePolicy">
      <summary>Usar o método <see cref="M:System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)" /> para resolver a evidência do aplicativo.</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.None">
      <summary>Não usar nenhum dos componentes de política de segurança.</summary>
    </member>
    <member name="T:System.Security.IEvidenceFactory">
      <summary>Obtém o <see cref="T:System.Security.Policy.Evidence" /> de um objeto.</summary>
    </member>
    <member name="P:System.Security.IEvidenceFactory.Evidence">
      <summary>Obtém <see cref="T:System.Security.Policy.Evidence" />, que verifica a identidade do objeto atual.</summary>
      <returns>
        <see cref="T:System.Security.Policy.Evidence" /> da identidade do objeto atual.</returns>
    </member>
    <member name="T:System.Security.ISecurityPolicyEncodable">
      <summary>É compatível com os métodos que convertem o estado do objeto de permissão para e de uma representação do elemento XML.</summary>
    </member>
    <member name="M:System.Security.ISecurityPolicyEncodable.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Reconstrói um objeto de segurança com um estado especificado de uma codificação XML.</summary>
      <param name="e">A codificação XML a ser usada para reconstruir o objeto de segurança.</param>
      <param name="level">O contexto do nível de política usado para resolver referências de conjunto de permissões nomeado.</param>
    </member>
    <member name="M:System.Security.ISecurityPolicyEncodable.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>Cria uma codificação XML do objeto de segurança e seu estado atual.</summary>
      <param name="level">O contexto do nível de política usado para resolver referências de conjunto de permissões nomeado.</param>
      <returns>O elemento raiz da representação XML do objeto de política.</returns>
    </member>
    <member name="T:System.Security.NamedPermissionSet">
      <summary>Define um conjunto de permissões com um nome e uma descrição associados a ele. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.NamedPermissionSet.#ctor(System.Security.NamedPermissionSet)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.NamedPermissionSet" /> de outro conjunto de permissões nomeado.</summary>
      <param name="permSet">O conjunto de permissões nomeado do qual criar a nova instância.</param>
    </member>
    <member name="M:System.Security.NamedPermissionSet.#ctor(System.String)">
      <summary>Inicializa uma nova instância vazia da classe <see cref="T:System.Security.NamedPermissionSet" /> com o nome especificado.</summary>
      <param name="name">O nome do novo conjunto de permissões nomeado.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="name" /> é <see langword="null" /> ou uma cadeia de caracteres vazia ("").</exception>
    </member>
    <member name="M:System.Security.NamedPermissionSet.#ctor(System.String,System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.NamedPermissionSet" /> com o nome especificado em um estado irrestrito ou totalmente restrito.</summary>
      <param name="name">O nome do novo conjunto de permissões nomeado.</param>
      <param name="state">Um dos valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="name" /> é <see langword="null" /> ou uma cadeia de caracteres vazia ("").</exception>
    </member>
    <member name="M:System.Security.NamedPermissionSet.#ctor(System.String,System.Security.PermissionSet)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.NamedPermissionSet" /> com o nome especificado de um conjunto de permissões.</summary>
      <param name="name">O nome do conjunto de permissões nomeado.</param>
      <param name="permSet">O conjunto de permissões do qual pegar o valor do novo conjunto de permissões nomeado.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="name" /> é <see langword="null" /> ou uma cadeia de caracteres vazia ("").</exception>
    </member>
    <member name="M:System.Security.NamedPermissionSet.Copy">
      <summary>Cria uma cópia do conjunto de permissões de um conjunto de permissões nomeado.</summary>
      <returns>Um conjunto de permissões que é uma cópia das permissões no conjunto de permissões nomeado.</returns>
    </member>
    <member name="M:System.Security.NamedPermissionSet.Copy(System.String)">
      <summary>Cria uma cópia do conjunto de permissões nomeado com um nome diferente, mas as mesmas permissões.</summary>
      <param name="name">O nome do novo conjunto de permissões nomeado.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="name" /> é <see langword="null" /> ou uma cadeia de caracteres vazia ("").</exception>
      <returns>Uma cópia do conjunto de permissões nomeado com o novo nome.</returns>
    </member>
    <member name="M:System.Security.NamedPermissionSet.Equals(System.Object)">
      <summary>Determina se o objeto <see cref="T:System.Security.NamedPermissionSet" /> especificado é igual ao <see cref="T:System.Security.NamedPermissionSet" /> atual.</summary>
      <param name="o">O objeto <see cref="T:System.Security.NamedPermissionSet" /> a ser comparado com o <see cref="T:System.Security.NamedPermissionSet" /> atual.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Security.NamedPermissionSet" /> especificado for igual ao objeto <see cref="T:System.Security.NamedPermissionSet" /> atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.NamedPermissionSet.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói um conjunto de permissões nomeado com um estado especificado de uma codificação XML.</summary>
      <param name="et">Um elemento de segurança que contém a representação XML do conjunto de permissões nomeado.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="et" /> não é uma representação válida de um conjunto de permissões nomeado.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="et" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.NamedPermissionSet.GetHashCode">
      <summary>Obtém um código hash para o objeto <see cref="T:System.Security.NamedPermissionSet" /> atual, adequado para algoritmos de hash e estruturas de dados, tais como uma tabela de hash.</summary>
      <returns>Um código hash para o objeto <see cref="T:System.Security.NamedPermissionSet" /> atual.</returns>
    </member>
    <member name="M:System.Security.NamedPermissionSet.ToXml">
      <summary>Cria uma descrição do elemento XML do conjunto de permissões nomeado.</summary>
      <returns>A representação XML do conjunto de permissões nomeado.</returns>
    </member>
    <member name="P:System.Security.NamedPermissionSet.Description">
      <summary>Obtém ou define a descrição do conjunto de permissões nomeado atual.</summary>
      <returns>Uma descrição de texto do conjunto de permissões nomeadas.</returns>
    </member>
    <member name="P:System.Security.NamedPermissionSet.Name">
      <summary>Obtém ou define o nome do conjunto de permissões nomeado.</summary>
      <exception cref="T:System.ArgumentException">O nome é <see langword="null" /> ou é uma cadeia de caracteres vazia ("").</exception>
      <returns>O nome do conjunto de permissões nomeadas.</returns>
    </member>
    <member name="T:System.Security.Permissions.DataProtectionPermission">
      <summary>Controla a capacidade de acessar a memória e os dados criptografados. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.DataProtectionPermissionFlags)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.DataProtectionPermission" /> com os sinalizadores de permissão especificados.</summary>
      <param name="flag">Uma combinação bit a bit dos valores <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" /> não é uma combinação válida dos valores <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.DataProtectionPermission" /> com o estado da permissão especificado.</summary>
      <param name="state">Um dos valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> não é um valor <see cref="T:System.Security.Permissions.PermissionState" /> válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.Copy">
      <summary>Cria e retorna uma cópia idêntica da permissão atual.</summary>
      <returns>Uma cópia da permissão atual.</returns>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói uma permissão com um estado específico com base em uma codificação XML.</summary>
      <param name="securityElement">Um <see cref="T:System.Security.SecurityElement" /> que contém a codificação XML usada para reconstruir a permissão.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> não é um elemento de permissão válido.  
  
- ou - 
Não há suporte para o número de versão do <paramref name="securityElement" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.Intersect(System.Security.IPermission)">
      <summary>Cria e retorna uma permissão que é a interseção de permissão atual e da permissão especificada.</summary>
      <param name="target">Uma permissão para ter interseção com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> não é <see langword="null" /> e não especifica uma permissão do mesmo tipo da permissão atual.</exception>
      <returns>Uma nova permissão que representa a interseção da permissão atual e da permissão especificada. Essa nova permissão é <see langword="null" /> se a interseção estiver vazia.</returns>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina se a permissão atual é um subconjunto da permissão especificada.</summary>
      <param name="target">Uma permissão para testar a relação de subconjunto. Essa permissão deve ser do mesmo tipo que a permissão atual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> não é <see langword="null" /> e não especifica uma permissão do mesmo tipo da permissão atual.</exception>
      <returns>
        <see langword="true" /> se a permissão atual for um subconjunto da permissão especificada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.IsUnrestricted">
      <summary>Retorna um valor que indica se a permissão atual é irrestrita.</summary>
      <returns>
        <see langword="true" /> se a permissão for irrestrita; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.ToXml">
      <summary>Cria uma codificação XML da permissão e de seu estado atual.</summary>
      <returns>Uma codificação XML da permissão, incluindo informações de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.Union(System.Security.IPermission)">
      <summary>Cria uma permissão que é a união entre a permissão atual e a permissão especificada.</summary>
      <param name="target">Uma permissão a ser combinada com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> não é <see langword="null" /> e não especifica uma permissão do mesmo tipo da permissão atual.</exception>
      <returns>Uma nova permissão que representa a união da permissão atual e da permissão especificada.</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermission.Flags">
      <summary>Obtém ou define os dados e os sinalizadores de proteção da memória.</summary>
      <exception cref="T:System.ArgumentException">O valor especificado não é uma combinação válida dos valores <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" />.</exception>
      <returns>Uma combinação bit a bit dos valores <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.DataProtectionPermissionAttribute">
      <summary>Permite que as ações de segurança para <see cref="T:System.Security.Permissions.DataProtectionPermission" /> sejam aplicadas ao código usando a segurança declarativa. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.DataProtectionPermissionAttribute" /> com o <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Um dos valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermissionAttribute.CreatePermission">
      <summary>Cria e retorna um novo <see cref="T:System.Security.Permissions.DataProtectionPermission" />.</summary>
      <returns>Uma <see cref="T:System.Security.Permissions.DataProtectionPermission" /> que corresponde ao atributo.</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.Flags">
      <summary>Obtém ou define as permissões de proteção de dados.</summary>
      <returns>Uma combinação bit a bit dos valores <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" />. O padrão é <see cref="F:System.Security.Permissions.DataProtectionPermissionFlags.NoFlags" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.ProtectData">
      <summary>Obtém ou define um valor que indica se os dados podem ser criptografados com a classe <see cref="T:System.Security.Cryptography.ProtectedData" />.</summary>
      <returns>
        <see langword="true" /> Se os dados puderem ser criptografados; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.ProtectMemory">
      <summary>Obtém ou define um valor que indica se a memória pode ser criptografada com a classe <see cref="T:System.Security.Cryptography.ProtectedMemory" />.</summary>
      <returns>
        <see langword="true" /> se a memória puder ser criptografada; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectData">
      <summary>Obtém ou define um valor que indica se os dados podem ser descriptografados com a classe <see cref="T:System.Security.Cryptography.ProtectedData" />.</summary>
      <returns>
        <see langword="true" /> Se os dados puderem ser descriptografados; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectMemory">
      <summary>Obtém ou define um valor que indica se a memória pode ser descriptografada com a classe <see cref="T:System.Security.Cryptography.ProtectedMemory" />.</summary>
      <returns>
        <see langword="true" /> se a memória puder ser descriptografada; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="T:System.Security.Permissions.DataProtectionPermissionFlags">
      <summary>Especifica as permissões de acesso para criptografar dados e a memória.</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.AllFlags">
      <summary>A capacidade de criptografar dados, criptografar a memória, descriptografar dados e descriptografar a memória.</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.NoFlags">
      <summary>Sem capacidade de proteção.</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.ProtectData">
      <summary>A capacidade de criptografar dados.</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.ProtectMemory">
      <summary>A capacidade de criptografar a memória.</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.UnprotectData">
      <summary>A capacidade de descriptografar dados.</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.UnprotectMemory">
      <summary>A capacidade de descriptografar a memória.</summary>
    </member>
    <member name="T:System.Security.Permissions.EnvironmentPermission">
      <summary>Controla o acesso a variáveis de ambiente do usuário e do sistema. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.#ctor(System.Security.Permissions.EnvironmentPermissionAccess,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.EnvironmentPermission" /> com o acesso especificado às variáveis de ambiente especificadas.</summary>
      <param name="flag">Um dos valores de <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" />.</param>
      <param name="pathList">Uma lista de variáveis de ambiente (separada por ponto e vírgula) que receberão acesso.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="pathList" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="flag" /> não é um valor válido de <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.EnvironmentPermission" /> com permissão irrestrita ou restrita, conforme especificado.</summary>
      <param name="state">Um dos valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="state" /> não é um valor válido de <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.AddPathList(System.Security.Permissions.EnvironmentPermissionAccess,System.String)">
      <summary>Adiciona acesso às variáveis de ambiente especificadas ao estado existente da permissão.</summary>
      <param name="flag">Um dos valores de <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" />.</param>
      <param name="pathList">Uma lista de variáveis de ambiente (separada por ponto e vírgula).</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="pathList" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="flag" /> não é um valor válido de <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.Copy">
      <summary>Cria e retorna uma cópia idêntica da permissão atual.</summary>
      <returns>Uma cópia da permissão atual.</returns>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói um a permissão com um estado especificado de uma codificação XML.</summary>
      <param name="esd">A codificação de XML a usar para reconstruir a permissão.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="esd" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="esd" /> não é um elemento de permissão válido.  
  
- ou - 
O número de versão do parâmetro <paramref name="esd" /> não é válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.GetPathList(System.Security.Permissions.EnvironmentPermissionAccess)">
      <summary>Obtém todas as variáveis de ambiente com o <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> especificado.</summary>
      <param name="flag">Um dos valores <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> que representa um único tipo de acesso à variável de ambiente.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" /> não é um valor válido de <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" />.  
  
- ou - 
 <paramref name="flag" /> é <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess" />, que representa mais de um tipo de acesso de variável de ambiente ou <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.NoAccess" />, que não representa nenhum tipo de acesso de variável de ambiente.</exception>
      <returns>Uma lista de variáveis de ambiente (separada por ponto e vírgula) para o sinalizador selecionado.</returns>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.Intersect(System.Security.IPermission)">
      <summary>Cria e retorna uma permissão que é a interseção de permissão atual e da permissão especificada.</summary>
      <param name="target">Uma permissão para ter interseção com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
      <returns>Uma nova permissão que representa a interseção da permissão atual e da permissão especificada. Essa nova permissão é <see langword="null" /> se a interseção estiver vazia.</returns>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina se a permissão atual é um subconjunto da permissão especificada.</summary>
      <param name="target">Uma permissão que deve ser testada quanto à relação de subconjunto. Essa permissão deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
      <returns>
        <see langword="true" /> se a permissão atual for um subconjunto da permissão especificada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.IsUnrestricted">
      <summary>Retorna um valor que indica se a permissão atual é irrestrita.</summary>
      <returns>
        <see langword="true" /> se a permissão for irrestrita; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.SetPathList(System.Security.Permissions.EnvironmentPermissionAccess,System.String)">
      <summary>Define o acesso indicado às variáveis de ambiente especificadas ao estado existente da permissão.</summary>
      <param name="flag">Um dos valores de <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" />.</param>
      <param name="pathList">Uma lista de variáveis de ambiente (separada por ponto e vírgula).</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="pathList" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="flag" /> não é um valor válido de <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.ToXml">
      <summary>Cria uma codificação XML da permissão e de seu estado atual.</summary>
      <returns>Uma codificação XML da permissão, incluindo informações de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.Union(System.Security.IPermission)">
      <summary>Cria uma permissão que é a união entre a permissão atual e a permissão especificada.</summary>
      <param name="other">Uma permissão a ser combinada com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="other" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
      <returns>Uma nova permissão que representa a união da permissão atual e da permissão especificada.</returns>
    </member>
    <member name="T:System.Security.Permissions.EnvironmentPermissionAccess">
      <summary>Especifica o acesso a variáveis de ambiente.</summary>
    </member>
    <member name="F:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess">
      <summary>Acesso <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /> e <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Write" /> a variáveis de ambiente. <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess" /> representa vários valores de <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> e causa um <see cref="T:System.ArgumentException" /> quando usado como o parâmetro <paramref name="flag" /> para o método <see cref="M:System.Security.Permissions.EnvironmentPermission.GetPathList(System.Security.Permissions.EnvironmentPermissionAccess)" />, que espera um único valor.</summary>
    </member>
    <member name="F:System.Security.Permissions.EnvironmentPermissionAccess.NoAccess">
      <summary>Nenhum acesso a variáveis de ambiente. <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.NoAccess" /> não representa nenhum valor válido de <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> e causa um <see cref="T:System.ArgumentException" /> quando usado como parâmetro para <see cref="M:System.Security.Permissions.EnvironmentPermission.GetPathList(System.Security.Permissions.EnvironmentPermissionAccess)" />, que espera um único valor.</summary>
    </member>
    <member name="F:System.Security.Permissions.EnvironmentPermissionAccess.Read">
      <summary>Acesso somente de leitura a variáveis de ambiente é especificado. Alterar, excluir e criar variáveis de ambiente não está incluído nesse nível de acesso.</summary>
    </member>
    <member name="F:System.Security.Permissions.EnvironmentPermissionAccess.Write">
      <summary>Acesso somente de gravação a variáveis de ambiente é especificado. O acesso de gravação inclui a criação e exclusão de variáveis de ambiente, bem como alteração dos valores existentes. Leitura de variáveis de ambiente não está incluída nesse nível de acesso.</summary>
    </member>
    <member name="T:System.Security.Permissions.EnvironmentPermissionAttribute">
      <summary>Permite que as ações de segurança para <see cref="T:System.Security.Permissions.EnvironmentPermission" /> sejam aplicadas ao código usando a segurança declarativa. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.EnvironmentPermissionAttribute" /> com o <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Um dos valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="action" /> não é um valor válido de <see cref="T:System.Security.Permissions.SecurityAction" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermissionAttribute.CreatePermission">
      <summary>Cria e retorna um novo <see cref="T:System.Security.Permissions.EnvironmentPermission" />.</summary>
      <returns>Um <see cref="T:System.Security.Permissions.EnvironmentPermission" /> que corresponde a este atributo.</returns>
    </member>
    <member name="P:System.Security.Permissions.EnvironmentPermissionAttribute.All">
      <summary>Define o acesso completo às variáveis de ambiente especificado pelo valor da cadeia de caracteres.</summary>
      <exception cref="T:System.NotSupportedException">Não há suporte para o método get nesta propriedade.</exception>
      <returns>Uma lista de variáveis de ambiente para acesso completo.</returns>
    </member>
    <member name="P:System.Security.Permissions.EnvironmentPermissionAttribute.Read">
      <summary>Obtém ou define o acesso de leitura para as variáveis de ambiente especificado pelo valor da cadeia de caracteres.</summary>
      <returns>Uma lista de variáveis de ambiente para acesso de leitura.</returns>
    </member>
    <member name="P:System.Security.Permissions.EnvironmentPermissionAttribute.Write">
      <summary>Obtém ou define o acesso de gravação para as variáveis de ambiente especificado pelo valor da cadeia de caracteres.</summary>
      <returns>Uma lista de variáveis de ambiente para acesso de gravação.</returns>
    </member>
    <member name="T:System.Security.Permissions.FileDialogPermission">
      <summary>Controla a capacidade de acessar arquivos ou pastas por meio de uma caixa de diálogo Arquivo. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.FileDialogPermissionAccess)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.FileDialogPermission" /> com o acesso especificado.</summary>
      <param name="access">Uma combinação bit a bit dos valores <see cref="T:System.Security.Permissions.FileDialogPermissionAccess" />.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="access" /> não é uma combinação válida dos valores <see cref="T:System.Security.Permissions.FileDialogPermissionAccess" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.FileDialogPermission" /> com permissão restrita ou irrestrita, conforme especificado.</summary>
      <param name="state">Um dos valores <see cref="T:System.Security.Permissions.PermissionState" /> (<see langword="Unrestricted" /> ou <see langword="None" />).</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="state" /> não é um valor válido de <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.Copy">
      <summary>Cria e retorna uma cópia idêntica da permissão atual.</summary>
      <returns>Uma cópia da permissão atual.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói um a permissão com um estado especificado de uma codificação XML.</summary>
      <param name="esd">A codificação de XML usada para reconstruir a permissão.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="esd" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="esd" /> não é um elemento de permissão válido.  
  
- ou - 
Não há suporte para o número de versão do parâmetro <paramref name="esd" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.Intersect(System.Security.IPermission)">
      <summary>Cria e retorna uma permissão que é a interseção de permissão atual e da permissão especificada.</summary>
      <param name="target">Uma permissão para ter interseção com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
      <returns>Uma nova permissão que representa a interseção da permissão atual e da permissão especificada. Essa nova permissão é <see langword="null" /> se a interseção estiver vazia.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina se a permissão atual é um subconjunto da permissão especificada.</summary>
      <param name="target">Uma permissão que deve ser testada quanto à relação de subconjunto. Essa permissão deve ser do mesmo tipo que a permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
      <returns>
        <see langword="true" /> se a permissão atual for um subconjunto da permissão especificada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.IsUnrestricted">
      <summary>Retorna um valor que indica se a permissão atual é irrestrita.</summary>
      <returns>
        <see langword="true" /> se a permissão for irrestrita; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.ToXml">
      <summary>Cria uma codificação XML da permissão e de seu estado atual.</summary>
      <returns>Uma codificação XML da permissão, incluindo informações de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.Union(System.Security.IPermission)">
      <summary>Cria uma permissão que é a união entre a permissão atual e a permissão especificada.</summary>
      <param name="target">Uma permissão a ser combinada com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
      <returns>Uma nova permissão que representa a união da permissão atual e da permissão especificada.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileDialogPermission.Access">
      <summary>Obtém ou define o acesso permitido a todos os arquivos.</summary>
      <exception cref="T:System.ArgumentException">Ocorreu uma tentativa de definir o parâmetro <paramref name="access" /> para um valor que não é uma combinação válida dos valores <see cref="T:System.Security.Permissions.FileDialogPermissionAccess" />.</exception>
      <returns>O acesso permitido aos arquivos.</returns>
    </member>
    <member name="T:System.Security.Permissions.FileDialogPermissionAccess">
      <summary>Especifica o tipo de acesso aos arquivos permitido por meio das caixas de diálogo Arquivo.</summary>
    </member>
    <member name="F:System.Security.Permissions.FileDialogPermissionAccess.None">
      <summary>Sem acesso aos arquivos por meio das caixas de diálogo Arquivo.</summary>
    </member>
    <member name="F:System.Security.Permissions.FileDialogPermissionAccess.Open">
      <summary>Capacidade de abrir arquivos por meio das caixas de diálogo Arquivo.</summary>
    </member>
    <member name="F:System.Security.Permissions.FileDialogPermissionAccess.OpenSave">
      <summary>Capacidade de abrir e salvar arquivos por meio das caixas de diálogo Arquivo.</summary>
    </member>
    <member name="F:System.Security.Permissions.FileDialogPermissionAccess.Save">
      <summary>Capacidade de salvar arquivos por meio das caixas de diálogo Arquivo.</summary>
    </member>
    <member name="T:System.Security.Permissions.FileDialogPermissionAttribute">
      <summary>Permite que as ações de segurança para <see cref="T:System.Security.Permissions.FileDialogPermission" /> sejam aplicadas ao código usando a segurança declarativa. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.FileDialogPermissionAttribute" /> com o <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Um dos valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermissionAttribute.CreatePermission">
      <summary>Cria e retorna um novo <see cref="T:System.Security.Permissions.FileDialogPermission" />.</summary>
      <returns>Um <see cref="T:System.Security.Permissions.FileDialogPermission" /> que corresponde a este atributo.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileDialogPermissionAttribute.Open">
      <summary>Obtém ou define um valor que indica se a permissão para abrir arquivos por meio da caixa de diálogo de arquivo é declarada.</summary>
      <returns>
        <see langword="true" /> se a permissão para abrir arquivos por meio da caixa de diálogo de arquivo for declarada; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Security.Permissions.FileDialogPermissionAttribute.Save">
      <summary>Obtém ou define um valor que indica se a permissão para salvar arquivos por meio da caixa de diálogo de arquivo é declarada.</summary>
      <returns>
        <see langword="true" /> se a permissão para salvar arquivos por meio da caixa de diálogo de arquivo for declarada; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="T:System.Security.Permissions.FileIOPermission">
      <summary>Controla a capacidade de acessar arquivos e pastas. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.FileIOPermission" /> com o acesso especificado ao arquivo ou diretório designado e os direitos de acesso especificados a informações de controle de arquivo.</summary>
      <param name="access">Uma combinação bit a bit dos valores de enumeração <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.</param>
      <param name="actions">Uma combinação bit a bit dos valores de enumeração <see cref="T:System.Security.AccessControl.AccessControlActions" />.</param>
      <param name="path">O caminho absoluto do arquivo ou diretório.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="access" /> não é um valor válido de <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.  
  
- ou - 
O parâmetro <paramref name="path" /> não é uma cadeia de caracteres válida.  
  
- ou - 
O parâmetro <paramref name="path" /> não especifica o caminho absoluto para o arquivo ou diretório.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.FileIOPermission" /> com o acesso especificado aos arquivos e diretórios designados e os direitos de acesso especificados nas informações de controle de arquivo.</summary>
      <param name="access">Uma combinação bit a bit dos valores de enumeração <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.</param>
      <param name="actions">Uma combinação bit a bit dos valores de enumeração <see cref="T:System.Security.AccessControl.AccessControlActions" />.</param>
      <param name="pathList">Uma matriz que contém os caminhos absolutos dos arquivos e diretórios.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="access" /> não é um valor válido de <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.  
  
- ou - 
Uma entrada na matriz <paramref name="pathList" /> não é uma cadeia de caracteres válida.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.FileIOPermission" /> com o acesso especificado ao arquivo ou diretório designado.</summary>
      <param name="access">Uma combinação bit a bit dos valores de enumeração <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.</param>
      <param name="path">O caminho absoluto do arquivo ou diretório.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="access" /> não é um valor válido de <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.  
  
- ou - 
O parâmetro <paramref name="path" /> não é uma cadeia de caracteres válida.  
  
- ou - 
O parâmetro <paramref name="path" /> não especifica o caminho absoluto para o arquivo ou diretório.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.String[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.FileIOPermission" /> com o acesso especificado aos arquivos ou diretórios designados.</summary>
      <param name="access">Uma combinação bit a bit dos valores de enumeração <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.</param>
      <param name="pathList">Uma matriz que contém os caminhos absolutos dos arquivos e diretórios.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="access" /> não é um valor válido de <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.  
  
- ou - 
Uma entrada na matriz <paramref name="pathList" /> não é uma cadeia de caracteres válida.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.FileIOPermission" /> com permissão irrestrita ou totalmente restrita, conforme especificado.</summary>
      <param name="state">Um dos valores de enumeração <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="state" /> não é um valor válido de <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.AddPathList(System.Security.Permissions.FileIOPermissionAccess,System.String)">
      <summary>Adiciona o acesso para o arquivo ou diretório especificado ao estado existente da permissão.</summary>
      <param name="access">Uma combinação bit a bit dos valores <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.</param>
      <param name="path">O caminho absoluto de um arquivo ou diretório.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="access" /> não é um valor válido de <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.  
  
- ou - 
O parâmetro <paramref name="path" /> não é uma cadeia de caracteres válida.  
  
- ou - 
O parâmetro <paramref name="path" /> não especificou o caminho absoluto para o arquivo ou diretório.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="path" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">O parâmetro <paramref name="path" /> tem um formato inválido.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.AddPathList(System.Security.Permissions.FileIOPermissionAccess,System.String[])">
      <summary>Adiciona acesso aos arquivos e diretórios especificados ao estado existente da permissão.</summary>
      <param name="access">Uma combinação bit a bit dos valores <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.</param>
      <param name="pathList">Uma matriz que contém os caminhos absolutos dos arquivos e diretórios.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="access" /> não é um valor válido de <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.  
  
- ou - 
Uma entrada na matriz <paramref name="pathList" /> não é válida.</exception>
      <exception cref="T:System.NotSupportedException">Uma entrada na matriz <paramref name="pathList" /> tem um formato inválido.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="pathList" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.Copy">
      <summary>Cria e retorna uma cópia idêntica da permissão atual.</summary>
      <returns>Uma cópia da permissão atual.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.Equals(System.Object)">
      <summary>Determina se o objeto <see cref="T:System.Security.Permissions.FileIOPermission" /> especificado é igual ao <see cref="T:System.Security.Permissions.FileIOPermission" /> atual.</summary>
      <param name="o">O objeto <see cref="T:System.Security.Permissions.FileIOPermission" /> a ser comparado com o <see cref="T:System.Security.Permissions.FileIOPermission" /> atual.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Security.Permissions.FileIOPermission" /> especificado for igual ao objeto <see cref="T:System.Security.Permissions.FileIOPermission" /> atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói um a permissão com um estado especificado de uma codificação XML.</summary>
      <param name="esd">A codificação de XML usada para reconstruir a permissão.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="esd" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="esd" /> não é um elemento de permissão válido.  
  
- ou - 
O número de versão do parâmetro <paramref name="esd" /> não é compatível.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.GetHashCode">
      <summary>Obtém um código hash para o objeto <see cref="T:System.Security.Permissions.FileIOPermission" /> atual, adequado para algoritmos de hash e estruturas de dados, tais como uma tabela de hash.</summary>
      <returns>Um código hash para o objeto <see cref="T:System.Security.Permissions.FileIOPermission" /> atual.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)">
      <summary>Obtém todos os arquivos e diretórios com o <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> especificado.</summary>
      <param name="access">Um dos valores <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> que representa um único tipo de acesso ao arquivo.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> não é um valor válido de <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.  
  
- ou - 
 <paramref name="access" /> é <see cref="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess" />, que representa mais de um tipo de acesso aos arquivos, ou <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, que não representa nenhum tipo de acesso aos arquivos.</exception>
      <returns>Uma matriz que contém os caminhos dos arquivos e diretórios para o qual o acesso especificado pelo parâmetro <paramref name="access" /> é concedido.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.Intersect(System.Security.IPermission)">
      <summary>Cria e retorna uma permissão que é a interseção de permissão atual e da permissão especificada.</summary>
      <param name="target">Uma permissão para ter interseção com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
      <returns>Uma nova permissão que representa a interseção da permissão atual e da permissão especificada. Essa nova permissão é <see langword="null" /> se a interseção estiver vazia.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina se a permissão atual é um subconjunto da permissão especificada.</summary>
      <param name="target">Uma permissão que deve ser testada quanto à relação de subconjunto. Essa permissão deve ser do mesmo tipo que a permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
      <returns>
        <see langword="true" /> se a permissão atual for um subconjunto da permissão especificada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.IsUnrestricted">
      <summary>Retorna um valor que indica se a permissão atual é irrestrita.</summary>
      <returns>
        <see langword="true" /> se a permissão for irrestrita; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.SetPathList(System.Security.Permissions.FileIOPermissionAccess,System.String)">
      <summary>Define o acesso especificado ao arquivo ou diretório especificado, substituindo o estado existente da permissão.</summary>
      <param name="access">Uma combinação bit a bit dos valores <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.</param>
      <param name="path">O caminho absoluto do arquivo ou diretório.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="access" /> não é um valor válido de <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.  
  
- ou - 
O parâmetro <paramref name="path" /> não é uma cadeia de caracteres válida.  
  
- ou - 
O parâmetro <paramref name="path" /> não especificou o caminho absoluto para o arquivo ou diretório.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.SetPathList(System.Security.Permissions.FileIOPermissionAccess,System.String[])">
      <summary>Define o acesso especificado aos arquivos e diretórios especificados, substituindo o estado atual para o acesso especificado pelo novo conjunto de caminhos.</summary>
      <param name="access">Uma combinação bit a bit dos valores <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.</param>
      <param name="pathList">Uma matriz que contém os caminhos absolutos dos arquivos e diretórios.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="access" /> não é um valor válido de <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.  
  
- ou - 
Uma entrada no parâmetro <paramref name="pathList" /> não é uma cadeia de caracteres válida.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.ToXml">
      <summary>Cria uma codificação XML da permissão e de seu estado atual.</summary>
      <returns>Uma codificação XML da permissão, incluindo informações de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.Union(System.Security.IPermission)">
      <summary>Cria uma permissão que é a união entre a permissão atual e a permissão especificada.</summary>
      <param name="other">Uma permissão a ser combinada com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="other" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
      <returns>Uma nova permissão que representa a união da permissão atual e da permissão especificada.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermission.AllFiles">
      <summary>Obtém ou define o acesso permitido para todos os arquivos.</summary>
      <returns>A definição dos sinalizadores de E/S para todos os arquivos.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermission.AllLocalFiles">
      <summary>Obtém ou define o acesso permitido a todos os arquivos locais.</summary>
      <returns>O conjunto de sinalizadores de e/s de arquivo para todos os arquivos locais.</returns>
    </member>
    <member name="T:System.Security.Permissions.FileIOPermissionAccess">
      <summary>Especifica o tipo de acesso de arquivo solicitado.</summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess">
      <summary>Acesso de <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> e <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> a um arquivo ou diretório. <see cref="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess" /> representa vários valores de <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> e causa um <see cref="T:System.ArgumentException" /> quando usado como o parâmetro <paramref name="access" /> para o método <see cref="M:System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)" />, que espera um único valor.</summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.Append">
      <summary>Acesso para acrescentar material a um arquivo ou diretório. O acesso de <see langword="FileIOPermissionAccess.Append" /> inclui a capacidade de criar um novo arquivo ou diretório. Para criar arquivos, o código também precisa ter acesso a <see langword="Append" /> e <see langword="Write" /> ou <see langword="Read" />.</summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess">
      <summary>Nenhum acesso a um arquivo ou diretório. <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /> não representa nenhum valor válido de <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> e causa um <see cref="T:System.ArgumentException" /> quando usado como parâmetro para <see cref="M:System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)" />, que espera um único valor.</summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery">
      <summary>
        <para>Acesso às informações no próprio caminho. Isso ajuda a proteger informações confidenciais no caminho, como nomes de usuário, bem como informações sobre a estrutura de diretório revelada no caminho. Esse valor não concede acesso a arquivos ou pastas representadas pelo caminho.</para>
        <para>Por motivos de desempenho, <see langword="PathDiscovery" /> deve ser concedida apenas a diretórios, não a arquivos. Por exemplo, a permissão <see langword="PathDiscovery" /> deve ser concedida a caminhos como C:\test e C:\test\, não C:\test\example.txt.</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.Read">
      <summary>Acesso para ler um arquivo ou diretório.</summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.Write">
      <summary>Acesso para gravar ou excluir um arquivo ou diretório. O acesso de <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> inclui a exclusão e a substituição de arquivos ou diretórios.</summary>
    </member>
    <member name="T:System.Security.Permissions.FileIOPermissionAttribute">
      <summary>Permite que as ações de segurança para <see cref="T:System.Security.Permissions.FileIOPermission" /> sejam aplicadas ao código usando a segurança declarativa. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.FileIOPermissionAttribute" /> com o <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Um dos valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="action" /> não é um <see cref="T:System.Security.Permissions.SecurityAction" /> válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermissionAttribute.CreatePermission">
      <summary>Cria e retorna um novo <see cref="T:System.Security.Permissions.FileIOPermission" />.</summary>
      <exception cref="T:System.ArgumentException">As informações de caminho para um arquivo ou diretório para os quais o acesso deve ser protegido contém caracteres inválidos ou especificadores curingas.</exception>
      <returns>Um <see cref="T:System.Security.Permissions.FileIOPermission" /> que corresponde a este atributo.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.All">
      <summary>Obtém ou define o acesso completo para o arquivo ou diretório especificado pelo valor da cadeia de caracteres.</summary>
      <exception cref="T:System.NotSupportedException">Não há suporte para o método get nesta propriedade.</exception>
      <returns>O caminho absoluto do arquivo ou diretório para acesso completo.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.AllFiles">
      <summary>Obtém ou define o acesso permitido para todos os arquivos.</summary>
      <returns>Uma combinação de bits de bit <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> que representa as permissões para todos os arquivos. O padrão é <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.AllLocalFiles">
      <summary>Obtém ou define o acesso permitido a todos os arquivos locais.</summary>
      <returns>Uma combinação de bits de bit <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> que representa as permissões para todos os arquivos locais. O padrão é <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.Append">
      <summary>Obtém ou define o acesso de acréscimo para o arquivo ou diretório especificado pelo valor da cadeia de caracteres.</summary>
      <returns>O caminho absoluto do arquivo ou diretório para acesso de acréscimo.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.ChangeAccessControl">
      <summary>Obtém ou define o arquivo ou diretório no qual as informações de controle de acesso podem ser alteradas.</summary>
      <returns>O caminho absoluto do arquivo ou diretório no qual as informações de controle de acesso podem ser alteradas.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery">
      <summary>Obtém ou define o arquivo ou diretório ao qual a descoberta de caminho é concedida.</summary>
      <returns>O caminho absoluto do arquivo ou diretório.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.Read">
      <summary>Obtém ou define o acesso de leitura para o arquivo ou diretório especificado pelo valor da cadeia de caracteres.</summary>
      <returns>O caminho absoluto do arquivo ou diretório para acesso de leitura.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.ViewAccessControl">
      <summary>Obtém ou define o arquivo ou diretório no qual as informações de controle de acesso podem ser exibidas.</summary>
      <returns>O caminho absoluto do arquivo ou diretório no qual as informações de controle de acesso podem ser exibidas.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.ViewAndModify">
      <summary>Obtém ou define o arquivo ou diretório no qual os dados do arquivo podem ser exibidos e modificados.</summary>
      <exception cref="T:System.NotSupportedException">O acessador <see langword="get" /> é chamado. O acessador é fornecido somente para compatibilidade com o compilador C#.</exception>
      <returns>O caminho absoluto do arquivo ou diretório no qual os dados de arquivo podem ser exibidos e modificados.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.Write">
      <summary>Obtém ou define o acesso de gravação para o arquivo ou diretório especificado pelo valor da cadeia de caracteres.</summary>
      <returns>O caminho absoluto do arquivo ou diretório para acesso de gravação.</returns>
    </member>
    <member name="T:System.Security.Permissions.GacIdentityPermission">
      <summary>Define a permissão de identidade para os arquivos de origem no cache de assembly global. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.GacIdentityPermission" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.GacIdentityPermission" /> com um <see cref="T:System.Security.Permissions.PermissionState" /> totalmente restrito.</summary>
      <param name="state">Um dos valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> não é um valor <see cref="T:System.Security.Permissions.PermissionState" /> válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.Copy">
      <summary>Cria e retorna uma cópia idêntica da permissão atual.</summary>
      <returns>Uma cópia da permissão atual.</returns>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary>Cria uma permissão com base em uma codificação XML.</summary>
      <param name="securityElement">Um <see cref="T:System.Security.SecurityElement" /> que contém a codificação XML a ser usada para criar a permissão.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> não é um elemento de permissão válido.  
  
- ou - 
O número de versão de <paramref name="securityElement" /> não é válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.Intersect(System.Security.IPermission)">
      <summary>Cria e retorna uma permissão que é a interseção de permissão atual e da permissão especificada.</summary>
      <param name="target">Uma permissão para ter interseção com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
      <returns>Uma nova permissão que representa a interseção da permissão atual e da permissão especificada. A nova permissão é <see langword="null" /> se a interseção estiver vazia.</returns>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Indica se a permissão atual é um subconjunto da permissão especificada.</summary>
      <param name="target">Um objeto de permissão para testar a relação de subconjunto. A permissão deve ser do mesmo tipo que a permissão atual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
      <returns>
        <see langword="true" /> se a permissão atual for um subconjunto da permissão especificada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.ToXml">
      <summary>Cria uma codificação XML da permissão e de seu estado atual.</summary>
      <returns>Um <see cref="T:System.Security.SecurityElement" /> que representa a codificação XML da permissão, incluindo informações de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.Union(System.Security.IPermission)">
      <summary>Cria e retorna uma permissão que é a união entre a permissão atual e a permissão especificada.</summary>
      <param name="target">Uma permissão a ser combinada com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
      <returns>Uma nova permissão que representa a união da permissão atual e da permissão especificada.</returns>
    </member>
    <member name="T:System.Security.Permissions.GacIdentityPermissionAttribute">
      <summary>Permite que as ações de segurança para <see cref="T:System.Security.Permissions.GacIdentityPermission" /> sejam aplicadas ao código usando a segurança declarativa. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.GacIdentityPermissionAttribute" /> com o valor <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Um dos valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="action" /> não é um valor <see cref="T:System.Security.Permissions.SecurityAction" /> válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermissionAttribute.CreatePermission">
      <summary>Cria um novo objeto <see cref="T:System.Security.Permissions.GacIdentityPermission" />.</summary>
      <returns>Um <see cref="T:System.Security.Permissions.GacIdentityPermission" /> que corresponde a este atributo.</returns>
    </member>
    <member name="T:System.Security.Permissions.HostProtectionAttribute">
      <summary>Permite o uso de ações de segurança declarativas para determinar os requisitos de proteção do host. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Permissions.HostProtectionAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.HostProtectionAttribute" /> com valores padrão.</summary>
    </member>
    <member name="M:System.Security.Permissions.HostProtectionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.HostProtectionAttribute" /> com o valor <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Um dos valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" /> não é <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.HostProtectionAttribute.CreatePermission">
      <summary>Cria e retorna uma nova permissão de proteção de host.</summary>
      <returns>Um <see cref="T:System.Security.IPermission" /> que corresponde ao atributo atual.</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt">
      <summary>Obtém ou define um valor que indica se o gerenciamento de processo externo é exposto.</summary>
      <returns>
        <see langword="true" /> Se o gerenciamento de processo externo for exposto; caso contrário, <see langword="false" /> . O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.ExternalThreading">
      <summary>Obtém ou define um valor que indica se threading externo é exposto.</summary>
      <returns>
        <see langword="true" /> Se o threading externo for exposto; caso contrário, <see langword="false" /> . O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort">
      <summary>Obtém ou define um valor que indica se recursos poderão causar vazamento de memória se a operação for encerrada.</summary>
      <returns>
        <see langword="true" /> Se os recursos puderem vazar memória no encerramento; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.Resources">
      <summary>Obtém ou define os sinalizadores que especificam as categorias de funcionalidade potencialmente prejudiciais ao host.</summary>
      <returns>Uma combinação bit a bit dos valores <see cref="T:System.Security.Permissions.HostProtectionResource" />. O padrão é <see cref="F:System.Security.Permissions.HostProtectionResource.None" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure">
      <summary>Obtém ou define um valor que indica se a infraestrutura de segurança é exposta.</summary>
      <returns>
        <see langword="true" /> se a infraestrutura de segurança for exposta; caso contrário, <see langword="false" /> . O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt">
      <summary>Obtém ou define um valor que indica se o gerenciamento de processo autorrealizado é exposto.</summary>
      <returns>
        <see langword="true" /> Se o gerenciamento de processos autoafetado for exposto; caso contrário, <see langword="false" /> . O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading">
      <summary>Obtém ou define um valor que indica se threading autorrealizado é exposto.</summary>
      <returns>
        <see langword="true" /> Se o encadeamento autoafetado for exposto; caso contrário, <see langword="false" /> . O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.SharedState">
      <summary>Obtém ou define um valor que indica se o estado compartilhado é exposto.</summary>
      <returns>
        <see langword="true" /> Se o estado compartilhado for exposto; caso contrário, <see langword="false" /> . O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.Synchronization">
      <summary>Obtém ou define um valor que indica se a sincronização é exposta.</summary>
      <returns>
        <see langword="true" /> se a sincronização for exposta; caso contrário, <see langword="false" /> . O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.UI">
      <summary>Obtém ou define um valor que indica se a interface do usuário é exposta.</summary>
      <returns>
        <see langword="true" /> se a interface do usuário for exposta; caso contrário, <see langword="false" /> . O padrão é <see langword="false" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.HostProtectionResource">
      <summary>Especifica as categorias de funcionalidade potencialmente prejudicial ao host quando invocado por uma classe ou um método.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.All">
      <summary>Expõe todos os recursos de host.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.ExternalProcessMgmt">
      <summary>Pode criar ou destruir outros processos.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.ExternalThreading">
      <summary>Cria ou manipula threads que não os próprios, que podem ser prejudiciais ao host.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.MayLeakOnAbort">
      <summary>Pode causar uma perda de recursos no encerramento, se não estiver protegido por um identificador seguro ou algum outro meio de garantir a liberação de recursos.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.None">
      <summary>Não expõe nenhum recurso de host.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.SecurityInfrastructure">
      <summary>Expõe a infraestrutura de segurança.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.SelfAffectingProcessMgmt">
      <summary>Pode sair do processo atual, encerrando o servidor.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.SelfAffectingThreading">
      <summary>Manipula os threads de modo a afetar apenas o código do usuário.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.SharedState">
      <summary>Expõe estado que pode ser compartilhado entre threads.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.Synchronization">
      <summary>Expõe a sincronização.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.UI">
      <summary>Expõe a interface do usuário.</summary>
    </member>
    <member name="T:System.Security.Permissions.IsolatedStorageContainment">
      <summary>Especifica o uso permitido do armazenamento isolado.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.AdministerIsolatedStorageByUser">
      <summary>Capacidade de administração ilimitada para o repositório de usuários. Permite a navegação e a exclusão do repositório de usuários inteiro, mas não o acesso de leitura que não seja a própria identidade de assembly/domínio do usuário.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.ApplicationIsolationByMachine">
      <summary>O armazenamento é isolado primeiro por computador e, em seguida, por aplicativo. Isso fornece um armazenamento de dados para o aplicativo que pode ser acessado em qualquer contexto de domínio. O compartimento de dados por aplicativo requer confiança adicional porque ele pode fornecer um "túnel" entre os aplicativos, o que poderia comprometer o isolamento de dados de aplicativos em determinados sites.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.ApplicationIsolationByRoamingUser">
      <summary>O armazenamento é isolado primeiro por usuário e depois por evidência do aplicativo. O armazenamento usará o perfil móvel se o roaming de dados de usuário do Windows estiver habilitado. Isso fornece um armazenamento de dados para o aplicativo que pode ser acessado em qualquer contexto de domínio. O compartimento de dados por aplicativo requer confiança adicional porque ele pode fornecer um "túnel" entre os aplicativos, o que poderia comprometer o isolamento de dados de aplicativos em determinados sites.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.ApplicationIsolationByUser">
      <summary>O armazenamento é isolado primeiro por usuário e, em seguida, por aplicativo. O armazenamento também é isolado por computador. Isso fornece um armazenamento de dados para o aplicativo que pode ser acessado em qualquer contexto de domínio. O compartimento de dados por aplicativo requer confiança adicional porque ele pode fornecer um "túnel" entre os aplicativos, o que poderia comprometer o isolamento de dados de aplicativos em determinados sites.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByMachine">
      <summary>O armazenamento é isolado primeiro por computador e, em seguida, por assembly de código. Isso fornece um armazenamento de dados para o assembly que pode ser acessado em qualquer contexto de domínio. O compartimento de dados por assembly requer confiança adicional porque ele pode fornecer um "túnel" entre os aplicativos, o que poderia comprometer o isolamento de dados de aplicativos em determinados sites.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByRoamingUser">
      <summary>O armazenamento é isolado primeiro por usuário e depois por evidência de assembly. O armazenamento usará o perfil móvel se o roaming de dados de usuário do Windows estiver habilitado. Isso fornece um armazenamento de dados para o assembly que pode ser acessado em qualquer contexto de domínio. O compartimento de dados por assembly requer confiança adicional porque ele pode fornecer um "túnel" entre os aplicativos, o que poderia comprometer o isolamento de dados de aplicativos em determinados sites.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByUser">
      <summary>O armazenamento é isolado primeiro por usuário e, em seguida, por assembly de código. O armazenamento também é isolado por computador. Isso fornece um armazenamento de dados para o assembly que pode ser acessado em qualquer contexto de domínio. O compartimento de dados por assembly requer confiança adicional porque ele pode fornecer um "túnel" entre os aplicativos, o que poderia comprometer o isolamento de dados de aplicativos em determinados sites.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByMachine">
      <summary>O armazenamento é isolado primeiro por computador e, em seguida, por domínio e assembly. Os dados apenas podem ser acessados dentro do contexto do mesmo aplicativo e apenas quando executados no mesmo computador. Isso é útil quando um assembly de terceiros deseja manter um armazenamento de dados privado.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByRoamingUser">
      <summary>O armazenamento é isolado primeiro por usuário e, em seguida, por domínio e assembly. O armazenamento usará o perfil móvel se o roaming de dados de usuário do Windows estiver habilitado. Os dados apenas podem ser acessados dentro do contexto do mesmo aplicativo e apenas quando executados pelo mesmo usuário. Isso é útil quando um assembly de terceiros deseja manter um armazenamento de dados privado.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByUser">
      <summary>O armazenamento é isolado primeiro por usuário e, em seguida, por domínio e assembly. O armazenamento também é isolado por computador. Os dados apenas podem ser acessados dentro do contexto do mesmo aplicativo e apenas quando executados pelo mesmo usuário. Isso é útil quando um assembly de terceiros deseja manter um armazenamento de dados privado.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.None">
      <summary>Não é permitido usar o armazenamento isolado.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.UnrestrictedIsolatedStorage">
      <summary>É permitido usar o armazenamento isolado sem restrição. O código tem acesso completo a qualquer parte do repositório de usuários, independentemente da identidade do domínio ou do assembly. Esse uso de armazenamento isolado inclui a capacidade de enumerar o conteúdo do armazenamento de dados do armazenamento isolado.</summary>
    </member>
    <member name="T:System.Security.Permissions.IsolatedStorageFilePermission">
      <summary>Especifica o uso permitido de um sistema de arquivos virtual privado. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.IsolatedStorageFilePermission" /> com permissão irrestrita ou totalmente restrita, conforme especificado.</summary>
      <param name="state">Um dos valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="state" /> não é um valor válido de <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.Copy">
      <summary>Cria e retorna uma cópia idêntica da permissão atual.</summary>
      <returns>Uma cópia da permissão atual.</returns>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.Intersect(System.Security.IPermission)">
      <summary>Cria e retorna uma permissão que é a interseção de permissão atual e da permissão especificada.</summary>
      <param name="target">Uma permissão para ter interseção com o objeto da permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
      <returns>Uma nova permissão que representa a interseção da permissão atual e da permissão especificada. Essa nova permissão é <see langword="null" /> se a interseção estiver vazia.</returns>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina se a permissão atual é um subconjunto da permissão especificada.</summary>
      <param name="target">Uma permissão que deve ser testada quanto à relação de subconjunto. Essa permissão deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
      <returns>
        <see langword="true" /> se a permissão atual for um subconjunto da permissão especificada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.ToXml">
      <summary>Cria uma codificação XML da permissão e de seu estado atual.</summary>
      <returns>Uma codificação XML da permissão, incluindo informações de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.Union(System.Security.IPermission)">
      <summary>Cria uma permissão que é a união entre a permissão atual e a permissão especificada.</summary>
      <param name="target">Uma permissão a ser combinada com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
      <returns>Uma nova permissão que representa a união da permissão atual e da permissão especificada.</returns>
    </member>
    <member name="T:System.Security.Permissions.IsolatedStorageFilePermissionAttribute">
      <summary>Permite que as ações de segurança para <see cref="T:System.Security.Permissions.IsolatedStorageFilePermission" /> sejam aplicadas ao código usando a segurança declarativa. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.IsolatedStorageFilePermissionAttribute" /> com o <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Um dos valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermissionAttribute.CreatePermission">
      <summary>Cria e retorna um novo <see cref="T:System.Security.Permissions.IsolatedStorageFilePermission" />.</summary>
      <returns>Um <see cref="T:System.Security.Permissions.IsolatedStorageFilePermission" /> que corresponde a este atributo.</returns>
    </member>
    <member name="T:System.Security.Permissions.IsolatedStoragePermission">
      <summary>Representa o acesso aos recursos de armazenamento isolado genérico.</summary>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStoragePermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.IsolatedStoragePermission" /> com permissão irrestrita ou restrita, conforme especificado.</summary>
      <param name="state">Um dos valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="state" /> não é um valor válido de <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStoragePermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói um a permissão com um estado especificado de uma codificação XML.</summary>
      <param name="esd">A codificação de XML a usar para reconstruir a permissão.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="esd" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="esd" /> não é um elemento de permissão válido.  
  
- ou - 
O número de versão do parâmetro <paramref name="esd" /> não é válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStoragePermission.IsUnrestricted">
      <summary>Retorna um valor que indica se a permissão atual é irrestrita.</summary>
      <returns>
        <see langword="true" /> se a permissão for irrestrita; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStoragePermission.ToXml">
      <summary>Cria uma codificação XML da permissão e de seu estado atual.</summary>
      <returns>Uma codificação XML da permissão, incluindo informações de estado.</returns>
    </member>
    <member name="P:System.Security.Permissions.IsolatedStoragePermission.UsageAllowed">
      <summary>Obtém ou define o tipo de contenção de armazenamento isolado permitido.</summary>
      <returns>Um dos valores de <see cref="T:System.Security.Permissions.IsolatedStorageContainment" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.IsolatedStoragePermission.UserQuota">
      <summary>Obtém ou define a cota de tamanho geral do repositório total de cada usuário.</summary>
      <returns>O tamanho, em bytes, do recurso alocado para o usuário.</returns>
    </member>
    <member name="T:System.Security.Permissions.IsolatedStoragePermissionAttribute">
      <summary>Permite que as ações de segurança para <see cref="T:System.Security.Permissions.IsolatedStoragePermission" /> sejam aplicadas ao código usando a segurança declarativa.</summary>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStoragePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.IsolatedStoragePermissionAttribute" /> com o <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Um dos valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="P:System.Security.Permissions.IsolatedStoragePermissionAttribute.UsageAllowed">
      <summary>Obtém ou define o nível de armazenamento isolado que deve ser declarado.</summary>
      <returns>Um dos valores de <see cref="T:System.Security.Permissions.IsolatedStorageContainment" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.IsolatedStoragePermissionAttribute.UserQuota">
      <summary>Obtém ou define o tamanho máximo da cota de armazenamento do usuário.</summary>
      <returns>O tamanho máximo da cota de armazenamento do usuário em bytes.</returns>
    </member>
    <member name="T:System.Security.Permissions.IUnrestrictedPermission">
      <summary>Concede uma permissão para expor um estado irrestrito.</summary>
    </member>
    <member name="M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted">
      <summary>Retorna um valor que indica se o acesso irrestrito ao recurso que é protegido pela permissão é permitido.</summary>
      <returns>
        <see langword="true" /> se o uso irrestrito do recurso protegido pela permissão for permitido, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermission">
      <summary>Controla a capacidade de acessar os contêineres de chave. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.KeyContainerPermission" /> com o acesso especificado.</summary>
      <param name="flags">Uma combinação bit a bit dos valores <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flags" /> não é uma combinação válida dos valores <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags,System.Security.Permissions.KeyContainerPermissionAccessEntry[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.KeyContainerPermission" /> com o acesso global especificado e os direitos de acesso do contêiner de chave específico.</summary>
      <param name="flags">Uma combinação bit a bit dos valores <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" />.</param>
      <param name="accessList">Uma matriz de objetos <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> que identificam os direitos de acesso do contêiner de chave específico.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flags" /> não é uma combinação válida dos valores <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="accessList" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.KeyContainerPermission" /> com permissão restrita ou irrestrita.</summary>
      <param name="state">Um dos valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> não é um valor <see cref="T:System.Security.Permissions.PermissionState" /> válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.Copy">
      <summary>Cria e retorna uma cópia idêntica da permissão atual.</summary>
      <returns>Uma cópia da permissão atual.</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói um a permissão com um estado especificado de uma codificação XML.</summary>
      <param name="securityElement">Um <see cref="T:System.Security.SecurityElement" /> que contém a codificação XML usada para reconstruir a permissão.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> não é um elemento de permissão válido.  
  
- ou - 
Não há suporte para o número de versão do <paramref name="securityElement" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.Intersect(System.Security.IPermission)">
      <summary>Cria e retorna uma permissão que é a interseção de permissão atual e da permissão especificada.</summary>
      <param name="target">Uma permissão para ter interseção com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> não é <see langword="null" /> e não especifica uma permissão do mesmo tipo da permissão atual.</exception>
      <returns>Uma nova permissão que representa a interseção da permissão atual e da permissão especificada. Essa nova permissão é <see langword="null" /> se a interseção estiver vazia.</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina se a permissão atual é um subconjunto da permissão especificada.</summary>
      <param name="target">Uma permissão para testar a relação de subconjunto. Essa permissão deve ser do mesmo tipo que a permissão atual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> não é <see langword="null" /> e não especifica uma permissão do mesmo tipo da permissão atual.</exception>
      <returns>
        <see langword="true" /> se a permissão atual for um subconjunto da permissão especificada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.IsUnrestricted">
      <summary>Determina se a permissão atual é irrestrita.</summary>
      <returns>
        <see langword="true" /> se a permissão for irrestrita; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.ToXml">
      <summary>Cria uma codificação XML da permissão e de seu estado atual.</summary>
      <returns>Um <see cref="T:System.Security.SecurityElement" /> que contém uma codificação XML da permissão, incluindo informações de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.Union(System.Security.IPermission)">
      <summary>Cria uma permissão que é a união entre a permissão atual e a permissão especificada.</summary>
      <param name="target">Uma permissão a ser combinada com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> não é <see langword="null" /> e não especifica uma permissão do mesmo tipo da permissão atual.</exception>
      <returns>Uma nova permissão que representa a união da permissão atual e da permissão especificada.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermission.AccessEntries">
      <summary>Obtém a coleção de objetos <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> associados à permissão atual.</summary>
      <returns>Um <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection" /> que contém os <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> objetos para isso <see cref="T:System.Security.Permissions.KeyContainerPermission" /> .</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermission.Flags">
      <summary>Obtém os sinalizadores de permissão do contêiner de chave que se aplicam a todos os contêineres de chave associados à permissão.</summary>
      <returns>Uma combinação bit a bit dos valores <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermissionAccessEntry">
      <summary>Especifica os direitos de acesso para contêineres de chave específicos. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.Security.Cryptography.CspParameters,System.Security.Permissions.KeyContainerPermissionFlags)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> usando as permissões de acesso e os parâmetros CSP (provedor de serviço de criptografia) especificados.</summary>
      <param name="parameters">Um objeto <see cref="T:System.Security.Cryptography.CspParameters" /> que contém os parâmetros CSP (provedor de serviços de criptografia).</param>
      <param name="flags">Uma combinação bit a bit dos valores <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" />.</param>
      <exception cref="T:System.ArgumentException">A entrada resultante teria acesso irrestrito.</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.Security.Permissions.KeyContainerPermissionFlags)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> usando as permissões de acesso e do nome do contêiner de chaves especificado.</summary>
      <param name="keyContainerName">O nome do contêiner de chave.</param>
      <param name="flags">Uma combinação bit a bit dos valores <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" />.</param>
      <exception cref="T:System.ArgumentException">A entrada resultante teria acesso irrestrito.</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.String,System.Int32,System.String,System.Int32,System.Security.Permissions.KeyContainerPermissionFlags)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> com os valores de propriedade especificados.</summary>
      <param name="keyStore">O nome do repositório de chave.</param>
      <param name="providerName">O nome do provedor.</param>
      <param name="providerType">O código de tipo para o provedor. Consulte a propriedade <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType" /> para valores.</param>
      <param name="keyContainerName">O nome do contêiner de chave.</param>
      <param name="keySpec">A especificação de chave. Consulte a propriedade <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec" /> para valores.</param>
      <param name="flags">Uma combinação bit a bit dos valores <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" />.</param>
      <exception cref="T:System.ArgumentException">A entrada resultante teria acesso irrestrito.</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals(System.Object)">
      <summary>Determina se o objeto <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> especificado é igual à instância atual.</summary>
      <param name="o">O objeto <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> a ser comparado com a instância atual.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> especificado for igual ao objeto <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode">
      <summary>Obtém um código hash para a instância atual que é adequada para algoritmos de hash e estruturas de dados, como uma tabela de hash.</summary>
      <returns>Um código hash para o objeto <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> atual.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags">
      <summary>Obtém ou define as permissões de contêiner de chave.</summary>
      <returns>Uma combinação bit a bit dos valores <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" />. O padrão é <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.NoFlags" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName">
      <summary>Obtém ou define o nome do contêiner de chave.</summary>
      <exception cref="T:System.ArgumentException">A entrada resultante teria acesso irrestrito.</exception>
      <returns>O nome do contêiner de chave.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec">
      <summary>Obtém ou define a especificação da chave.</summary>
      <exception cref="T:System.ArgumentException">A entrada resultante teria acesso irrestrito.</exception>
      <returns>Um dos valores de AT_ definidos no arquivo de cabeçalho Wincrypt. h.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore">
      <summary>Obtém ou define o nome do repositório de chave.</summary>
      <exception cref="T:System.ArgumentException">A entrada resultante teria acesso irrestrito.</exception>
      <returns>O nome do repositório de chave.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName">
      <summary>Obtém ou define o nome do provedor.</summary>
      <exception cref="T:System.ArgumentException">A entrada resultante teria acesso irrestrito.</exception>
      <returns>O nome do provedor.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType">
      <summary>Obtém ou define o tipo de provedor.</summary>
      <exception cref="T:System.ArgumentException">A entrada resultante teria acesso irrestrito.</exception>
      <returns>Um dos valores PROV_ definidos no arquivo de cabeçalho Wincrypt.h.</returns>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">
      <summary>Representa uma coleção de objetos <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> . Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.#ctor" />
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Add(System.Security.Permissions.KeyContainerPermissionAccessEntry)">
      <summary>Adiciona um objeto de <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> à coleção.</summary>
      <param name="accessEntry">O objeto <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> a ser adicionado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="accessEntry" /> é <see langword="null" />.</exception>
      <returns>O índice no qual o novo elemento foi inserido.</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Clear">
      <summary>Remove todos os objetos <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> da coleção.</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copia os elementos do <see cref="T:System.Collections.ICollection" /> para um <see cref="T:System.Array" />, começando em um determinado índice <see cref="T:System.Array" />.</summary>
      <param name="array">A matriz unidimensional como destino dos elementos copiados de <see cref="T:System.Collections.ICollection" />. A matriz deve ter indexação com base em zero.</param>
      <param name="index">O índice com base em zero em <paramref name="array" /> no qual a cópia começa.</param>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.CopyTo(System.Security.Permissions.KeyContainerPermissionAccessEntry[],System.Int32)">
      <summary>Copia os elementos da coleção para uma matriz unidimensional compatível, começando no índice especificado da matriz de destino.</summary>
      <param name="array">A matriz <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> unidimensional que é o destino dos elementos copiados da coleção atual.</param>
      <param name="index">O índice em <paramref name="array" /> em que a cópia começa.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> é menor que o limite inferior de <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> é multidimensional.  
  
- ou - 
O número de elementos na coleção é maior do que o espaço disponível do <paramref name="index" /> até o final do <paramref name="array" /> de destino.</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.GetEnumerator">
      <summary>Retorna um objeto <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator" /> que pode ser usado para iterar pelos objetos na coleção.</summary>
      <returns>Um objeto <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator" /> que pode ser usado para iterar pela coleção.</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IndexOf(System.Security.Permissions.KeyContainerPermissionAccessEntry)">
      <summary>Obterá o índice na coleção do objeto <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> especificado, se ele existir na coleção.</summary>
      <param name="accessEntry">O objeto <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> a ser localizado.</param>
      <returns>O índice do objeto <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> especificado na coleção ou -1, se nenhuma correspondência for encontrada.</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Remove(System.Security.Permissions.KeyContainerPermissionAccessEntry)">
      <summary>Remove o objeto <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> especificado da coleção.</summary>
      <param name="accessEntry">O objeto <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> a ser removido.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="accessEntry" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retorna um objeto <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator" /> que pode ser usado para iterar pelos objetos na coleção.</summary>
      <returns>Um objeto <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator" /> que pode ser usado para iterar pela coleção.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Count">
      <summary>Obtém o número de itens na coleção.</summary>
      <returns>O número de objetos <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> na coleção.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IsSynchronized">
      <summary>Obtém um valor que indica se a coleção é sincronizada (thread-safe).</summary>
      <returns>
        <see langword="false" /> em todos os casos.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Item(System.Int32)">
      <summary>Obtém o item no índice especificado na coleção.</summary>
      <param name="index">O índice de base zero do elemento a ser acessado.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> é maior ou igual à contagem de coleções.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="index" /> é negativo.</exception>
      <returns>O objeto <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> no índice especificado na coleção.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.SyncRoot">
      <summary>Obtém um objeto que pode ser usado para sincronizar o acesso à coleção.</summary>
      <returns>Um objeto que pode ser usado para sincronizar o acesso à coleção.</returns>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
      <summary>Representa o enumerador para objetos <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> em um <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.#ctor" />
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext">
      <summary>Vai para o próximo elemento da coleção.</summary>
      <returns>
        <see langword="true" /> se o enumerador foi avançado com êxito para o próximo elemento; <see langword="false" /> se o enumerador passou o final da coleção.</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset">
      <summary>Redefine o enumerador para o início da coleção.</summary>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current">
      <summary>Obtém a entrada atual na coleção.</summary>
      <exception cref="T:System.InvalidOperationException">A propriedade <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /> é acessada antes de primeiro chamar o método <see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" />. O cursor está localizado antes do primeiro objeto na coleção.  
  
- ou - 
A propriedade <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /> é acessada após uma chamada ao método <see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /> retorna <see langword="false" />, o que indica que o cursor está localizado após o último objeto na coleção.</exception>
      <returns>O objeto <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> atual na coleção.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current">
      <summary>Obtém o objeto atual na coleção.</summary>
      <returns>O objeto atual da coleção.</returns>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermissionAttribute">
      <summary>Permite que as ações de segurança para <see cref="T:System.Security.Permissions.KeyContainerPermission" /> sejam aplicadas ao código usando a segurança declarativa. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.KeyContainerPermissionAttribute" /> com a ação de segurança especificada.</summary>
      <param name="action">Um dos valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAttribute.CreatePermission">
      <summary>Cria e retorna um novo <see cref="T:System.Security.Permissions.KeyContainerPermission" />.</summary>
      <returns>Uma <see cref="T:System.Security.Permissions.KeyContainerPermission" /> que corresponde ao atributo.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.Flags">
      <summary>Obtém ou define as permissões de contêiner de chave.</summary>
      <returns>Uma combinação bit a bit dos valores <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" />. O padrão é <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.NoFlags" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerName">
      <summary>Obtém ou define o nome do contêiner de chave.</summary>
      <returns>O nome do contêiner de chave.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.KeySpec">
      <summary>Obtém ou define a especificação da chave.</summary>
      <returns>Um dos valores de AT_ definidos no arquivo de cabeçalho Wincrypt. h.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.KeyStore">
      <summary>Obtém ou define o nome do repositório de chave.</summary>
      <returns>O nome do repositório de chave. O padrão é "*".</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.ProviderName">
      <summary>Obtém ou define o nome do provedor.</summary>
      <returns>O nome do provedor.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.ProviderType">
      <summary>Obtém ou define o tipo de provedor.</summary>
      <returns>Um dos valores PROV_ definidos no arquivo de cabeçalho Wincrypt.h.</returns>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermissionFlags">
      <summary>Especifica o tipo de acesso do contêiner de chave permitido.</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.AllFlags">
      <summary>Crie, descriptografe, exclua e abra um contêiner de chave; exporte e importe uma chave; assine arquivos usando uma chave e exiba e altere a lista de controle de acesso de um contêiner de chave.</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.ChangeAcl">
      <summary>Altere a ACL (lista de controle de acesso) de um contêiner de chave.</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Create">
      <summary>
        <para>Crie um contêiner de chave.</para>
        <para>A criação de um contêiner de chave também cria um arquivo no disco. É muito importante que qualquer contêiner de chave criado seja removido quando não estiver mais em uso.</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Decrypt">
      <summary>
        <para>Descriptografe um contêiner de chave.</para>
        <para>A descriptografia é uma operação privilegiada porque utiliza a chave privada.</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Delete">
      <summary>
        <para>Exclua um contêiner de chave.</para>
        <para>A exclusão de um contêiner de chave pode constituir um ataque de negação de serviço porque impede o uso de arquivos criptografados ou assinados com a chave. Portanto, a exclusão é uma operação privilegiada.</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Export">
      <summary>
        <para>Exporte uma chave de um contêiner de chave.</para>
        <para>A capacidade de exportar uma chave é potencialmente prejudicial porque remove a exclusividade da chave.</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Import">
      <summary>
        <para>Importe uma chave para um contêiner de chave.</para>A capacidade de importar uma chave pode ser tão prejudicial quanto a capacidade de excluir um contêiner porque importar uma chave para um contêiner de chave denominado substitui a chave existente.<para></para></summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.NoFlags">
      <summary>Nenhum acesso a um contêiner de chave.</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Open">
      <summary>
        <para>Abra um contêiner de chave e use a chave pública.</para>
        <para>
          <see langword="Open" /> não dá permissão para assinar ou descriptografar arquivos usando a chave privada, mas permite que um usuário verifique as assinaturas do arquivo e criptografe arquivos. Somente o proprietário da chave é capaz de descriptografar esses arquivos usando a chave privada.</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign">
      <summary>
        <para>Assina um arquivo usando uma chave.</para>
        <para>A capacidade de assinar um arquivo é potencialmente prejudicial porque pode permitir que um usuário assine um arquivo usando a chave de outro usuário.</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.ViewAcl">
      <summary>Exiba a ACL (lista de controle de acesso) de um contêiner de chave.</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermission">
      <summary>O <see cref="T:System.Security.Permissions.MediaPermission" /> descreve um conjunto de permissões de segurança que controla a capacidade de mídias de áudio, imagem e vídeo funcionarem um aplicativo WPF (Windows Presentation Foundation) de confiança parcial.</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.MediaPermission" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.MediaPermission" /> especificando o nível de permissão de áudio.</summary>
      <param name="permissionAudio">Um valor enumerado de <see cref="T:System.Security.Permissions.MediaPermissionAudio" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio,System.Security.Permissions.MediaPermissionVideo,System.Security.Permissions.MediaPermissionImage)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.MediaPermission" /> especificando os níveis de permissão de áudio, vídeo e imagem.</summary>
      <param name="permissionAudio">Um valor enumerado de <see cref="T:System.Security.Permissions.MediaPermissionAudio" />.</param>
      <param name="permissionVideo">Um valor enumerado de <see cref="T:System.Security.Permissions.MediaPermissionVideo" />.</param>
      <param name="permissionImage">Um valor enumerado de <see cref="T:System.Security.Permissions.MediaPermissionImage" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionImage)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.MediaPermission" /> especificando o nível de permissão de imagem.</summary>
      <param name="permissionImage">Um valor enumerado de <see cref="T:System.Security.Permissions.MediaPermissionImage" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionVideo)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.MediaPermission" /> especificando o nível de permissão de vídeo.</summary>
      <param name="permissionVideo">Um valor enumerado de <see cref="T:System.Security.Permissions.MediaPermissionVideo" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.MediaPermission" /> especificando um estado de permissão.</summary>
      <param name="state">Um valor enumerado de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Copy">
      <summary>Cria e retorna uma cópia idêntica da permissão atual.</summary>
      <returns>Uma cópia da permissão atual.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói um a permissão com um estado especificado de uma codificação XML.</summary>
      <param name="securityElement">A codificação de XML a usar para reconstruir a permissão.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Intersect(System.Security.IPermission)">
      <summary>Cria e retorna uma permissão que é a interseção de permissão atual e da permissão especificada.</summary>
      <param name="target">Uma permissão para ter interseção com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <returns>A intersecção de duas permissões é uma permissão que descreve o estado que ambas descrevem em comum. Somente uma demanda que passe ambas as permissões originais será válida para a permissão interseccionada.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina se a permissão atual é um subconjunto da permissão especificada.</summary>
      <param name="target">Uma permissão que deve ser testada quanto à relação de subconjunto. Essa permissão deve ser do mesmo tipo da permissão atual.</param>
      <returns>
        <see langword="true" /> se a permissão atual for um subconjunto da permissão especificada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.IsUnrestricted">
      <summary>Retorna um valor que indica se a permissão atual é irrestrita.</summary>
      <returns>
        <see langword="true" /> se as permissões para imagem, áudio e vídeo forem todas irrestritas; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.ToXml">
      <summary>Cria uma codificação XML da permissão e de seu estado atual.</summary>
      <returns>Uma codificação XML da permissão, incluindo informações de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Union(System.Security.IPermission)">
      <summary>Cria uma permissão que é a união entre a permissão atual e a permissão especificada.</summary>
      <param name="target">Uma permissão a ser combinada com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <returns>Uma nova permissão que representa a união da permissão atual e da permissão especificada.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Audio">
      <summary>Obtém o valor atual do nível de permissão de áudio.</summary>
      <returns>O nível de permissão de áudio.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Image">
      <summary>Obtém o valor atual do nível de permissão de imagem.</summary>
      <returns>O nível de permissão de imagem.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Video">
      <summary>Obtém o valor atual do nível de permissão de vídeo.</summary>
      <returns>O nível de permissão de mídia.</returns>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionAttribute">
      <summary>Permite que as ações de segurança para <see cref="T:System.Security.Permissions.MediaPermission" /> sejam aplicadas ao código usando a segurança declarativa.</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância de <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
      <param name="action">Um dos valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermissionAttribute.CreatePermission">
      <summary>Cria e retorna um novo <see cref="T:System.Security.Permissions.MediaPermission" />.</summary>
      <returns>Um <see cref="T:System.Security.Permissions.MediaPermission" /> que corresponde a este atributo.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Audio">
      <summary>Obtém ou define o nível de permissão de áudio para o <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
      <returns>O estado do <see cref="T:System.Security.Permissions.MediaPermissionAudio" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Image">
      <summary>Obtém ou define o nível de permissão de imagem para o <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
      <returns>O estado do <see cref="T:System.Security.Permissions.MediaPermissionImage" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Video">
      <summary>Obtém ou define o nível de permissão de vídeo para o <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
      <returns>O estado do <see cref="T:System.Security.Permissions.MediaPermissionVideo" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionAudio">
      <summary>Especifica o nível de permissão para áudio.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.AllAudio">
      <summary>Permissão que possibilita reprodução irrestrita de vídeo.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.NoAudio">
      <summary>Permissão que proíbe toda a reprodução de áudio.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.SafeAudio">
      <summary>Permissão para reprodução de áudio limitada e segura, o que inclui negar o acesso de fluxo ao arquivo de imagem.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.SiteOfOriginAudio">
      <summary>Permissão apenas para reprodução de áudio de arquivos localizados no site de origem do aplicativo.</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionImage">
      <summary>Especifica o nível de permissão para imagens.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.AllImage">
      <summary>Permissão que possibilita a exibição irrestrita da imagem.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.NoImage">
      <summary>Permissão que proíbe a exibição de todas as imagens.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.SafeImage">
      <summary>Permissão que possibilita a exibição segura e limitada de imagem, o que inclui negar o acesso de fluxo ao arquivo de imagem.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.SiteOfOriginImage">
      <summary>Permissão que somente permite a exibição de imagens localizadas no site de origem do aplicativo.</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionVideo">
      <summary>Especifica o nível de permissão para vídeo.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.AllVideo">
      <summary>Permissão para reprodução de vídeo irrestrita.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.NoVideo">
      <summary>Permissão que proíbe toda a reprodução de vídeo.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.SafeVideo">
      <summary>Permissão para reprodução de vídeo limitada e segura, a qual inclui negar o acesso de fluxo ao arquivo de imagem.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.SiteOfOriginVideo">
      <summary>Permissão apenas para reprodução de vídeo de arquivos localizados no site de origem do aplicativo.</summary>
    </member>
    <member name="T:System.Security.Permissions.PermissionSetAttribute">
      <summary>Permite que as ações de segurança para um <see cref="T:System.Security.PermissionSet" /> sejam aplicadas ao código usando a segurança declarativa. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Permissions.PermissionSetAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.PermissionSetAttribute" /> com a ação de segurança especificada.</summary>
      <param name="action">Um dos valores de enumeração que especifica uma ação de segurança.</param>
    </member>
    <member name="M:System.Security.Permissions.PermissionSetAttribute.CreatePermission">
      <summary>Este método não é usado.</summary>
      <returns>Uma referência nula (<see langword="nothing" /> no Visual Basic) em todos os casos.</returns>
    </member>
    <member name="M:System.Security.Permissions.PermissionSetAttribute.CreatePermissionSet">
      <summary>Cria e retorna um novo conjunto de permissões com base neste objeto de atributo do conjunto de permissões.</summary>
      <returns>Um novo conjunto de permissões.</returns>
    </member>
    <member name="P:System.Security.Permissions.PermissionSetAttribute.File">
      <summary>Obtém ou define um arquivo que contém a representação XML de um conjunto de permissões personalizado a ser declarado.</summary>
      <returns>O caminho físico para o arquivo que contém a representação XML do conjunto de permissões.</returns>
    </member>
    <member name="P:System.Security.Permissions.PermissionSetAttribute.Hex">
      <summary>Obtém ou define a representação hexadecimal do conjunto de permissões codificado por XML.</summary>
      <returns>A representação hexadecimal do conjunto de permissões XML Encoded.</returns>
    </member>
    <member name="P:System.Security.Permissions.PermissionSetAttribute.Name">
      <summary>Obtém ou define o nome do conjunto de permissões.</summary>
      <returns>O nome de uma imutável <see cref="T:System.Security.NamedPermissionSet" /> (um dos vários conjuntos de permissões contidos na política padrão e não pode ser alterado).</returns>
    </member>
    <member name="P:System.Security.Permissions.PermissionSetAttribute.UnicodeEncoded">
      <summary>Obtém ou define um valor que indica se o arquivo especificado por <see cref="P:System.Security.Permissions.PermissionSetAttribute.File" /> é Unicode ou codificado por ASCII.</summary>
      <returns>
        <see langword="true" /> Se o arquivo estiver codificado em Unicode; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Security.Permissions.PermissionSetAttribute.XML">
      <summary>Obtém ou define a representação XML de um conjunto de permissões.</summary>
      <returns>A representação XML de um conjunto de permissões.</returns>
    </member>
    <member name="T:System.Security.Permissions.PrincipalPermission">
      <summary>Permite verificações em relação à entidade de segurança ativa (consulte <see cref="T:System.Security.Principal.IPrincipal" />) usando os constructos de linguagem definidos para ações declarativas e imperativas. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.PrincipalPermission" /> com o <see cref="T:System.Security.Permissions.PermissionState" /> especificado.</summary>
      <param name="state">Um dos valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="state" /> não é um <see cref="T:System.Security.Permissions.PermissionState" /> válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.#ctor(System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.PrincipalPermission" /> para o <paramref name="name" /> e <paramref name="role" /> especificados.</summary>
      <param name="name">O nome do usuário do objeto <see cref="T:System.Security.Principal.IPrincipal" />.</param>
      <param name="role">A função do usuário do objeto <see cref="T:System.Security.Principal.IPrincipal" /> (por exemplo, Administrador).</param>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.#ctor(System.String,System.String,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.PrincipalPermission" /> para o <paramref name="name" />, <paramref name="role" /> e o status de autenticação especificados.</summary>
      <param name="name">O nome do usuário do objeto <see cref="T:System.Security.Principal.IPrincipal" />.</param>
      <param name="role">A função do usuário do objeto <see cref="T:System.Security.Principal.IPrincipal" /> (por exemplo, Administrador).</param>
      <param name="isAuthenticated">
        <see langword="true" /> para significar que o usuário foi autenticado; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.Copy">
      <summary>Cria e retorna uma cópia idêntica da permissão atual.</summary>
      <returns>Uma cópia da permissão atual.</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.Demand">
      <summary>Determina no tempo de execução se a entidade de segurança atual corresponde à entidade de segurança especificada pela permissão atual.</summary>
      <exception cref="T:System.Security.SecurityException">A entidade de segurança atual não passou na verificação de segurança da entidade de segurança especificada pela permissão atual.  
  
- ou - 
O <see cref="T:System.Security.Principal.IPrincipal" /> atual é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.Equals(System.Object)">
      <summary>Determina se o objeto <see cref="T:System.Security.Permissions.PrincipalPermission" /> especificado é igual ao <see cref="T:System.Security.Permissions.PrincipalPermission" /> atual.</summary>
      <param name="o">O objeto <see cref="T:System.Security.Permissions.PrincipalPermission" /> a ser comparado com o <see cref="T:System.Security.Permissions.PrincipalPermission" /> atual.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Security.Permissions.PrincipalPermission" /> especificado for igual ao objeto <see cref="T:System.Security.Permissions.PrincipalPermission" /> atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói um a permissão com um estado especificado de uma codificação XML.</summary>
      <param name="elem">A codificação de XML a usar para reconstruir a permissão.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="elem" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="elem" /> não é um elemento de permissão válido.  
  
- ou - 
O número de versão do parâmetro <paramref name="elem" /> não é válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.GetHashCode">
      <summary>Obtém um código hash para o objeto <see cref="T:System.Security.Permissions.PrincipalPermission" /> atual, adequado para algoritmos de hash e estruturas de dados, tais como uma tabela de hash.</summary>
      <returns>Um código hash para o objeto <see cref="T:System.Security.Permissions.PrincipalPermission" /> atual.</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.Intersect(System.Security.IPermission)">
      <summary>Cria e retorna uma permissão que é a interseção de permissão atual e da permissão especificada.</summary>
      <param name="target">Uma permissão para ter interseção com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é uma instância da mesma classe que a permissão atual.</exception>
      <returns>Uma nova permissão que representa a interseção da permissão atual e da permissão especificada. Essa nova permissão será <see langword="null" /> se a interseção estiver vazia.</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina se a permissão atual é um subconjunto da permissão especificada.</summary>
      <param name="target">Uma permissão que deve ser testada quanto à relação de subconjunto. Essa permissão deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> é um objeto que não é do mesmo tipo que a permissão atual.</exception>
      <returns>
        <see langword="true" /> se a permissão atual for um subconjunto da permissão especificada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.IsUnrestricted">
      <summary>Retorna um valor que indica se a permissão atual é irrestrita.</summary>
      <returns>
        <see langword="true" /> se a permissão for irrestrita; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.ToString">
      <summary>Cria e retorna uma cadeia de caracteres que representa a permissão atual.</summary>
      <returns>Uma representação da permissão atual.</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.ToXml">
      <summary>Cria uma codificação XML da permissão e de seu estado atual.</summary>
      <returns>Uma codificação XML da permissão, incluindo informações de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.Union(System.Security.IPermission)">
      <summary>Cria uma permissão que é a união entre a permissão atual e a permissão especificada.</summary>
      <param name="other">Uma permissão a ser combinada com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="other" /> é um objeto que não é do mesmo tipo que a permissão atual.</exception>
      <returns>Uma nova permissão que representa a união da permissão atual e da permissão especificada.</returns>
    </member>
    <member name="T:System.Security.Permissions.PrincipalPermissionAttribute">
      <summary>Permite que as ações de segurança para <see cref="T:System.Security.Permissions.PrincipalPermission" /> sejam aplicadas ao código usando a segurança declarativa. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" /> com o <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Um dos valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermissionAttribute.CreatePermission">
      <summary>Cria e retorna um novo <see cref="T:System.Security.Permissions.PrincipalPermission" />.</summary>
      <returns>Um <see cref="T:System.Security.Permissions.PrincipalPermission" /> que corresponde a este atributo.</returns>
    </member>
    <member name="P:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated">
      <summary>Obtém ou define um valor que indica se a entidade de segurança atual foi autenticada pelo provedor de segurança baseada em funções subjacente.</summary>
      <returns>
        <see langword="true" /> Se o principal atual tiver sido autenticado; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Security.Permissions.PrincipalPermissionAttribute.Name">
      <summary>Obtém ou define o nome da identidade associada à entidade de segurança atual.</summary>
      <returns>Um nome para corresponder ao fornecido pelo provedor de segurança baseado em função subjacente.</returns>
    </member>
    <member name="P:System.Security.Permissions.PrincipalPermissionAttribute.Role">
      <summary>Obtém ou define a associação em uma função de segurança especificada.</summary>
      <returns>O nome de uma função do provedor de segurança baseado em função subjacente.</returns>
    </member>
    <member name="T:System.Security.Permissions.PublisherIdentityPermission">
      <summary>Representa a identidade de um fornecedor de software. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.PublisherIdentityPermission" /> com o certificado X.509v3 Authenticode especificado.</summary>
      <param name="certificate">Um certificado X.509 que representa a identidade do fornecedor de software.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="certificate" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="certificate" /> não é um certificado válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.PublisherIdentityPermission" /> com o <see cref="T:System.Security.Permissions.PermissionState" /> especificado.</summary>
      <param name="state">Um dos valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="state" /> não é um valor válido de <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.Copy">
      <summary>Cria e retorna uma cópia idêntica da permissão atual.</summary>
      <returns>Uma cópia da permissão atual.</returns>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói um a permissão com um estado especificado de uma codificação XML.</summary>
      <param name="esd">A codificação de XML a usar para reconstruir a permissão.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="esd" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="esd" /> não é um elemento de permissão válido.  
  
- ou - 
O número de versão do parâmetro <paramref name="esd" /> não é válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.Intersect(System.Security.IPermission)">
      <summary>Cria e retorna uma permissão que é a interseção de permissão atual e da permissão especificada.</summary>
      <param name="target">Uma permissão para ter interseção com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
      <returns>Uma nova permissão que representa a interseção da permissão atual e da permissão especificada. Essa nova permissão é <see langword="null" /> se a interseção estiver vazia.</returns>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina se a permissão atual é um subconjunto da permissão especificada.</summary>
      <param name="target">Uma permissão que deve ser testada quanto à relação de subconjunto. Essa permissão deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
      <returns>
        <see langword="true" /> se a permissão atual for um subconjunto da permissão especificada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.ToXml">
      <summary>Cria uma codificação XML da permissão e de seu estado atual.</summary>
      <returns>Uma codificação XML da permissão, incluindo informações de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.Union(System.Security.IPermission)">
      <summary>Cria uma permissão que é a união entre a permissão atual e a permissão especificada.</summary>
      <param name="target">Uma permissão a ser combinada com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.  
  
- ou - 
As duas permissões não são iguais.</exception>
      <returns>Uma nova permissão que representa a união da permissão atual e da permissão especificada.</returns>
    </member>
    <member name="P:System.Security.Permissions.PublisherIdentityPermission.Certificate">
      <summary>Obtém ou define um certificado X.509v3 Authenticode que representa a identidade do fornecedor de software.</summary>
      <exception cref="T:System.ArgumentNullException">O <see cref="P:System.Security.Permissions.PublisherIdentityPermission.Certificate" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O <see cref="P:System.Security.Permissions.PublisherIdentityPermission.Certificate" /> não é um certificado válido.</exception>
      <exception cref="T:System.NotSupportedException">A propriedade não pode ser definida porque a identidade é ambígua.</exception>
      <returns>Um certificado X. 509 que representa a identidade do fornecedor do software.</returns>
    </member>
    <member name="T:System.Security.Permissions.PublisherIdentityPermissionAttribute">
      <summary>Permite que as ações de segurança para <see cref="T:System.Security.Permissions.PublisherIdentityPermission" /> sejam aplicadas ao código usando a segurança declarativa. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.PublisherIdentityPermissionAttribute" /> com o <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Um dos valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermissionAttribute.CreatePermission">
      <summary>Cria e retorna uma nova instância de <see cref="T:System.Security.Permissions.PublisherIdentityPermission" />.</summary>
      <returns>Um <see cref="T:System.Security.Permissions.PublisherIdentityPermission" /> que corresponde a este atributo.</returns>
    </member>
    <member name="P:System.Security.Permissions.PublisherIdentityPermissionAttribute.CertFile">
      <summary>Obtém ou define um arquivo de certificação que contém um certificado X.509v3 Authenticode.</summary>
      <returns>O caminho do arquivo de um arquivo de certificado X. 509 (geralmente tem a extensão. cer).</returns>
    </member>
    <member name="P:System.Security.Permissions.PublisherIdentityPermissionAttribute.SignedFile">
      <summary>Obtém ou define um arquivo assinado do qual extrair um certificado X.509v3 Authenticode.</summary>
      <returns>O caminho do arquivo de um arquivo assinado com a assinatura Authenticode.</returns>
    </member>
    <member name="P:System.Security.Permissions.PublisherIdentityPermissionAttribute.X509Certificate">
      <summary>Obtém ou define um certificado X.509v3 Authenticode que identifica o publicador do código de chamada.</summary>
      <returns>Uma representação hexadecimal do certificado X. 509.</returns>
    </member>
    <member name="T:System.Security.Permissions.ReflectionPermission">
      <summary>Controla o acesso a membros e tipos não públicos por meio das APIs <see cref="N:System.Reflection" />. Controla alguns recursos das APIs <see cref="N:System.Reflection.Emit" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.ReflectionPermission" /> com permissão irrestrita ou totalmente restrita, conforme especificado.</summary>
      <param name="state">Um dos valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="state" /> não é um valor válido de <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.#ctor(System.Security.Permissions.ReflectionPermissionFlag)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.ReflectionPermission" /> com o acesso especificado.</summary>
      <param name="flag">Um dos valores de <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" />.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="flag" /> não é um valor válido de <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.Copy">
      <summary>Cria e retorna uma cópia idêntica da permissão atual.</summary>
      <returns>Uma cópia da permissão atual.</returns>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói um a permissão com um estado especificado de uma codificação XML.</summary>
      <param name="esd">A codificação de XML a usar para reconstruir a permissão.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="esd" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="esd" /> não é um elemento de permissão válido.  
  
- ou - 
O número de versão do parâmetro <paramref name="esd" /> não é válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.Intersect(System.Security.IPermission)">
      <summary>Cria e retorna uma permissão que é a interseção de permissão atual e da permissão especificada.</summary>
      <param name="target">Uma permissão para ter interseção com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
      <returns>Uma nova permissão que representa a interseção da permissão atual e da permissão especificada. Essa nova permissão é <see langword="null" /> se a interseção estiver vazia.</returns>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina se a permissão atual é um subconjunto da permissão especificada.</summary>
      <param name="target">Uma permissão que deve ser testada quanto à relação de subconjunto. Essa permissão deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
      <returns>
        <see langword="true" /> se a permissão atual for um subconjunto da permissão especificada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.IsUnrestricted">
      <summary>Retorna um valor que indica se a permissão atual é irrestrita.</summary>
      <returns>
        <see langword="true" /> se a permissão for irrestrita; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.ToXml">
      <summary>Cria uma codificação XML da permissão e de seu estado atual.</summary>
      <returns>Uma codificação XML da permissão, incluindo informações de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.Union(System.Security.IPermission)">
      <summary>Cria uma permissão que é a união entre a permissão atual e a permissão especificada.</summary>
      <param name="other">Uma permissão a ser combinada com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="other" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
      <returns>Uma nova permissão que representa a união da permissão atual e da permissão especificada.</returns>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermission.Flags">
      <summary>Obtém ou define o tipo de reflexão permitido para a permissão atual.</summary>
      <exception cref="T:System.ArgumentException">É feita uma tentativa de definir essa propriedade como um valor inválido. Veja <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> para obter os valores válidos.</exception>
      <returns>Os sinalizadores definidos para a permissão atual.</returns>
    </member>
    <member name="T:System.Security.Permissions.ReflectionPermissionAttribute">
      <summary>Permite que as ações de segurança para <see cref="T:System.Security.Permissions.ReflectionPermission" /> sejam aplicadas ao código usando a segurança declarativa.</summary>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.ReflectionPermissionAttribute" /> com o <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Um dos valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermissionAttribute.CreatePermission">
      <summary>Cria e retorna um novo <see cref="T:System.Security.Permissions.ReflectionPermission" />.</summary>
      <returns>Um <see cref="T:System.Security.Permissions.ReflectionPermission" /> que corresponde a este atributo.</returns>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.Flags">
      <summary>Obtém ou define os usos de reflexão atualmente permitidos.</summary>
      <exception cref="T:System.ArgumentException">É feita uma tentativa de definir essa propriedade como um valor inválido. Veja <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> para obter os valores válidos.</exception>
      <returns>Um ou mais dos <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> valores combinados usando um OR bit a bit.</returns>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.MemberAccess">
      <summary>Obtém ou define um valor que indica se a invocação de operações em membros não públicos é permitida.</summary>
      <returns>
        <see langword="true" /> se a invocação de operações em membros não públicos for permitida; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.ReflectionEmit">
      <summary>Obtém ou define um valor que indica se o uso de determinados recursos em <see cref="N:System.Reflection.Emit" />, tais como emissão de símbolos de depuração, é permitido.</summary>
      <returns>
        <see langword="true" /> Se o uso dos recursos afetados for permitido; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.RestrictedMemberAccess">
      <summary>Obtém ou define um valor que indica se a invocação restrita de membros não públicos é permitida. Invocação restrita significa que o conjunto de concessão do assembly que contém o membro não público que está sendo invocado deve ser igual ao conjunto de concessão do assembly invocador ou então ser um subconjunto dele.</summary>
      <returns>
        <see langword="true" /> se a invocação restrita de membros não públicos for permitida; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.TypeInformation">
      <summary>Obtém ou define um valor que indica se a reflexão em membros que não são visíveis é permitida.</summary>
      <returns>
        <see langword="true" /> se a reflexão em membros que não são visíveis for permitida; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="T:System.Security.Permissions.ReflectionPermissionFlag">
      <summary>Especifica o uso permitido dos namespaces <see cref="N:System.Reflection" /> e <see cref="N:System.Reflection.Emit" />.</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags">
      <summary>
        <see langword="TypeInformation" />, <see langword="MemberAccess" /> e <see langword="ReflectionEmit" /> estão definidos. <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags" /> não inclui <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess" />.</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess">
      <summary>As operações de invocação em todos os membros são permitidas, independentemente do conjunto de concessões. Se este sinalizador não for definido, as operações de invocação serão permitidas apenas em membros visíveis.</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags">
      <summary>A enumeração de tipos e membros é permitida. As operações de invocação são permitidas em membros e tipos visíveis.</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit">
      <summary>A emissão de símbolos de depuração é permitida. A partir do .NET Framework 2.0 Service Pack 1, esse sinalizador não é mais necessário para emitir o código.</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess">
      <summary>O acesso de membro restrito é fornecido para o código parcialmente confiável. O código parcialmente confiável pode acessar membros e tipos não públicos, mas somente se o conjunto de concessões do código parcialmente confiável incluir todas as permissões no conjunto de concessões do assembly que contém os membros e tipos não públicos sendo acessados. Esse sinalizador é novo no .NET Framework 2.0 SP1.</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.TypeInformation">
      <summary>Esse sinalizador é obsoleto. Não é necessário nenhum sinalizador para enumerar os tipos e membros e examinar seus metadados. Use <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags" /> em seu lugar.</summary>
    </member>
    <member name="T:System.Security.Permissions.RegistryPermission">
      <summary>Controla a capacidade de acessar variáveis de Registro. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.RegistryPermission" /> com permissão irrestrita ou totalmente restrita, conforme especificado.</summary>
      <param name="state">Um dos valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="state" /> não é um valor válido de <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.RegistryPermission" /> com o acesso especificado às variáveis de Registro especificadas e os direitos de acesso especificados nas informações de controle do Registro.</summary>
      <param name="access">Um dos valores de <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.</param>
      <param name="control">Uma combinação bit a bit dos valores <see cref="T:System.Security.AccessControl.AccessControlActions" />.</param>
      <param name="pathList">Uma lista de variáveis de Registro (separadas por ponto e vírgula) que receberão acesso.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="access" /> não é um valor válido de <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.  
  
- ou - 
O parâmetro <paramref name="pathList" /> não é uma cadeia de caracteres válida.</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.RegistryPermission" /> com o acesso especificado às variáveis de Registro especificadas.</summary>
      <param name="access">Um dos valores de <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.</param>
      <param name="pathList">Uma lista de variáveis de Registro (separadas por ponto e vírgula) que receberão acesso.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="access" /> não é um valor válido de <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.  
  
- ou - 
O parâmetro <paramref name="pathList" /> não é uma cadeia de caracteres válida.</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)">
      <summary>Adiciona acesso às variáveis de Registro especificadas ao estado existente da permissão, especificando a permissão de acesso ao Registro e as ações de controle de acesso.</summary>
      <param name="access">Um dos valores de <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.</param>
      <param name="actions">Um dos valores de <see cref="T:System.Security.AccessControl.AccessControlActions" />.</param>
      <param name="pathList">Uma lista de variáveis de Registro (separadas por ponto e vírgula).</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="access" /> não é um valor válido de <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.  
  
- ou - 
O parâmetro <paramref name="pathList" /> não é uma cadeia de caracteres válida.</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)">
      <summary>Adiciona o acesso para as variáveis de Registro especificadas para o estado existente da permissão.</summary>
      <param name="access">Um dos valores de <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.</param>
      <param name="pathList">Uma lista de variáveis de Registro (separados por ponto e vírgula).</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="access" /> não é um valor válido de <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.  
  
- ou - 
O parâmetro <paramref name="pathList" /> não é uma cadeia de caracteres válida.</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.Copy">
      <summary>Cria e retorna uma cópia idêntica da permissão atual.</summary>
      <returns>Uma cópia da permissão atual.</returns>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói um a permissão com um estado especificado de uma codificação XML.</summary>
      <param name="elem">A codificação de XML a usar para reconstruir a permissão.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="elem" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="elem" /> não é um elemento de permissão válido.  
  
- ou - 
O número de versão do parâmetro <paramref name="elem" /> não é válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)">
      <summary>Obtém os caminhos para todas as variáveis do Registro com o <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> especificado.</summary>
      <param name="access">Um dos valores <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> que representa um único tipo de acesso à variável do Registro.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> não é um valor válido de <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.  
  
- ou - 
 <paramref name="access" /> é <see cref="F:System.Security.Permissions.RegistryPermissionAccess.AllAccess" />, que representa mais de um tipo de acesso de variável de Registro ou <see cref="F:System.Security.Permissions.RegistryPermissionAccess.NoAccess" />, que não representa nenhum tipo de acesso de variável de Registro.</exception>
      <returns>Uma lista de variáveis de Registro (separadas por ponto e vírgula) com o <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> especificado.</returns>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.Intersect(System.Security.IPermission)">
      <summary>Cria e retorna uma permissão que é a interseção de permissão atual e da permissão especificada.</summary>
      <param name="target">Uma permissão para ter interseção com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
      <returns>Uma nova permissão que representa a interseção da permissão atual e da permissão especificada. Essa nova permissão é <see langword="null" /> se a interseção estiver vazia.</returns>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina se a permissão atual é um subconjunto da permissão especificada.</summary>
      <param name="target">Uma permissão que deve ser testada quanto à relação de subconjunto. Essa permissão deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
      <returns>
        <see langword="true" /> se a permissão atual for um subconjunto da permissão especificada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.IsUnrestricted">
      <summary>Retorna um valor que indica se a permissão atual é irrestrita.</summary>
      <returns>
        <see langword="true" /> se a permissão for irrestrita; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.SetPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)">
      <summary>Define um novo acesso para os nomes das variáveis de Registro especificados para o estado existente da permissão.</summary>
      <param name="access">Um dos valores de <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.</param>
      <param name="pathList">Uma lista de variáveis de Registro (separados por ponto e vírgula).</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="access" /> não é um valor válido de <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.  
  
- ou - 
O parâmetro <paramref name="pathList" /> não é uma cadeia de caracteres válida.</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.ToXml">
      <summary>Cria uma codificação XML da permissão e de seu estado atual.</summary>
      <returns>Uma codificação XML da permissão, incluindo informações de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.Union(System.Security.IPermission)">
      <summary>Cria uma permissão que é a união entre a permissão atual e a permissão especificada.</summary>
      <param name="other">Uma permissão a ser combinada com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="other" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
      <returns>Uma nova permissão que representa a união da permissão atual e da permissão especificada.</returns>
    </member>
    <member name="T:System.Security.Permissions.RegistryPermissionAccess">
      <summary>Especifica o acesso permitido aos valores e chaves do Registro.</summary>
    </member>
    <member name="F:System.Security.Permissions.RegistryPermissionAccess.AllAccess">
      <summary>
        <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /> e <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" /> acessam a variáveis de Registro. <see cref="F:System.Security.Permissions.RegistryPermissionAccess.AllAccess" /> representa vários valores de <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> e causa um <see cref="T:System.ArgumentException" /> quando usado como o parâmetro <paramref name="access" /> para o método <see cref="M:System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)" />, que espera um único valor.</summary>
    </member>
    <member name="F:System.Security.Permissions.RegistryPermissionAccess.Create">
      <summary>Crie o acesso a variáveis de Registro.</summary>
    </member>
    <member name="F:System.Security.Permissions.RegistryPermissionAccess.NoAccess">
      <summary>Sem acesso a variáveis de Registro. <see cref="F:System.Security.Permissions.RegistryPermissionAccess.NoAccess" /> não representa nenhum valor válido de <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> e causa um <see cref="T:System.ArgumentException" /> quando usado como parâmetro para <see cref="M:System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)" />, que espera um único valor.</summary>
    </member>
    <member name="F:System.Security.Permissions.RegistryPermissionAccess.Read">
      <summary>Acesso de leitura a variáveis de Registro.</summary>
    </member>
    <member name="F:System.Security.Permissions.RegistryPermissionAccess.Write">
      <summary>Acesso de gravação a variáveis de Registro.</summary>
    </member>
    <member name="T:System.Security.Permissions.RegistryPermissionAttribute">
      <summary>Permite que as ações de segurança para <see cref="T:System.Security.Permissions.RegistryPermission" /> sejam aplicadas ao código usando a segurança declarativa. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.RegistryPermissionAttribute" /> com o <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Um dos valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="action" /> não é um <see cref="T:System.Security.Permissions.SecurityAction" /> válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermissionAttribute.CreatePermission">
      <summary>Cria e retorna um novo <see cref="T:System.Security.Permissions.RegistryPermission" />.</summary>
      <returns>Um <see cref="T:System.Security.Permissions.RegistryPermission" /> que corresponde a este atributo.</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.All">
      <summary>Obtém ou define acesso completo para as chaves do Registro especificadas.</summary>
      <exception cref="T:System.NotSupportedException">O acessador get é chamado; ele é fornecido apenas para compatibilidade do compilador C#.</exception>
      <returns>Uma lista separada por ponto-e-vírgula de caminhos de chave do registro, para acesso completo.</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.ChangeAccessControl">
      <summary>Obtém ou define o controle de acesso de alteração para as chaves do Registro especificadas.</summary>
      <returns>Uma lista separada por ponto-e-vírgula de caminhos de chave do registro, para alterar o controle de acesso. .</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.Create">
      <summary>Obtém ou define o acesso em nível de criação para as chaves do Registro especificadas.</summary>
      <returns>Uma lista separada por ponto-e-vírgula de caminhos de chave do registro, para acesso de nível de criação.</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.Read">
      <summary>Obtém ou define o acesso de leitura para as chaves do Registro especificadas.</summary>
      <returns>Uma lista separada por ponto-e-vírgula de caminhos de chave do registro para acesso de leitura.</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.ViewAccessControl">
      <summary>Obtém ou define o controle de acesso de exibição para as chaves do Registro especificadas.</summary>
      <returns>Uma lista separada por ponto-e-vírgula de caminhos de chave do registro, para o controle de acesso de exibição.</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.ViewAndModify">
      <summary>Obtém ou define um conjunto especificado de chaves do Registro que podem ser exibidas e modificadas.</summary>
      <exception cref="T:System.NotSupportedException">O acessador get é chamado; ele é fornecido apenas para compatibilidade do compilador C#.</exception>
      <returns>Uma lista separada por ponto-e-vírgula de caminhos de chave do registro, para acesso de criação, leitura e gravação.</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.Write">
      <summary>Obtém ou define o acesso de gravação para as chaves do Registro especificadas.</summary>
      <returns>Uma lista separada por ponto-e-vírgula de caminhos de chave do registro para acesso de gravação.</returns>
    </member>
    <member name="T:System.Security.Permissions.ResourcePermissionBase">
      <summary>Permite o controle de permissões de segurança de acesso do código.</summary>
    </member>
    <member name="F:System.Security.Permissions.ResourcePermissionBase.Any">
      <summary>Especifica o caractere a ser usado para representar qualquer caractere curinga.</summary>
    </member>
    <member name="F:System.Security.Permissions.ResourcePermissionBase.Local">
      <summary>Especifica o caractere a ser usado para representar uma referência local.</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.ResourcePermissionBase" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.ResourcePermissionBase" /> com o nível especificado de acesso aos recursos na criação.</summary>
      <param name="state">Um dos valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="state" /> não é um valor válido de <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)">
      <summary>Adiciona uma entrada de permissão à permissão.</summary>
      <param name="entry">O <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> a ser adicionado.</param>
      <exception cref="T:System.ArgumentNullException">O <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> especificado é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">O número de elementos na propriedade <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath" /> não é igual ao número de elementos na propriedade <see cref="P:System.Security.Permissions.ResourcePermissionBase.TagNames" />.  
  
- ou - 
O <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> já está incluído na permissão.</exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.Clear">
      <summary>Limpa a permissão das entradas de permissão adicionadas.</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.Copy">
      <summary>Cria e retorna uma cópia idêntica do objeto de permissão atual.</summary>
      <returns>Uma cópia do objeto de permissão atual.</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói um objeto de segurança com um estado especificado de uma codificação XML.</summary>
      <param name="securityElement">A codificação XML a ser usada para reconstruir o objeto de segurança.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="securityElement" /> não é um elemento de permissão válido.  
  
- ou - 
Não há suporte para o número de versão do parâmetro <paramref name="securityElement" />.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="securityElement" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.GetPermissionEntries">
      <summary>Retorna uma matriz dos objetos <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> adicionados a essa permissão.</summary>
      <returns>Uma matriz de objetos <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> que foram adicionados a essa permissão.</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)">
      <summary>Cria e retorna um objeto de permissão que é a interseção do objeto de permissão atual e de um objeto de permissão de destino.</summary>
      <param name="target">Um objeto de permissão do mesmo tipo que o objeto de permissão atual.</param>
      <exception cref="T:System.ArgumentException">O objeto de permissão de destino não é do mesmo tipo que o objeto de permissão atual.</exception>
      <returns>Um novo objeto de permissão que representa a interseção do objeto atual e do destino especificado. Este objeto será <see langword="null" /> se a interseção estiver vazia.</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina se o objeto de permissão atual é um subconjunto da permissão especificada.</summary>
      <param name="target">Um objeto de permissão que deve ser testado para a relação de subconjunto.</param>
      <returns>
        <see langword="true" /> se o objeto de permissão atual for um subconjunto do objeto de permissão especificado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.IsUnrestricted">
      <summary>Obtém um valor que indica se a permissão é irrestrita.</summary>
      <returns>
        <see langword="true" /> se a permissão for irrestrita; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)">
      <summary>Remove uma entrada de permissão da permissão.</summary>
      <param name="entry">O <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> a ser removido.</param>
      <exception cref="T:System.ArgumentNullException">O <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> especificado é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">O número de elementos na propriedade <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath" /> não é igual ao número de elementos na propriedade <see cref="P:System.Security.Permissions.ResourcePermissionBase.TagNames" />.  
  
- ou - 
O <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> não está na permissão.</exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.ToXml">
      <summary>Cria e retorna uma codificação XML do objeto de segurança e seu estado atual.</summary>
      <returns>Uma codificação XML do objeto de segurança, incluindo quaisquer informações de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)">
      <summary>Cria um objeto de permissão que combina o objeto de permissão atual e o objeto de permissão de destino.</summary>
      <param name="target">Um objeto de permissão a combinar com o objeto de permissão atual. Ele deve ser do mesmo tipo que o objeto de permissão atual.</param>
      <exception cref="T:System.ArgumentException">O objeto de permissão <paramref name="target" /> não é do mesmo tipo que o objeto de permissão atual.</exception>
      <returns>Um novo objeto de permissão que representa a união de um objeto de permissão atual e o objeto de permissão especificado.</returns>
    </member>
    <member name="P:System.Security.Permissions.ResourcePermissionBase.PermissionAccessType">
      <summary>Obtém ou define um valor de enumeração que descreve os tipos de acesso que você está dando ao recurso.</summary>
      <exception cref="T:System.ArgumentNullException">O valor da propriedade é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O valor da propriedade não é um valor de enumeração.</exception>
      <returns>Um valor de enumeração que é derivado de <see cref="T:System.Type" /> e descreve os tipos de acesso que você está fornecendo ao recurso.</returns>
    </member>
    <member name="P:System.Security.Permissions.ResourcePermissionBase.TagNames">
      <summary>Obtém ou define uma matriz de cadeias de caracteres que identifica o recurso que está sendo protegido.</summary>
      <exception cref="T:System.ArgumentNullException">O valor da propriedade é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O tamanho da matriz é 0.</exception>
      <returns>Uma matriz de cadeias de caracteres que identifica o recurso que você está tentando proteger.</returns>
    </member>
    <member name="T:System.Security.Permissions.ResourcePermissionBaseEntry">
      <summary>Define a menor unidade de um conjunto de permissões de segurança de acesso do código.</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBaseEntry.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBaseEntry.#ctor(System.Int32,System.String[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> com o caminho de acesso de permissão e acesso de permissão especificados.</summary>
      <param name="permissionAccess">A representação de inteiro do valor de enumeração de nível de acesso da permissão. A propriedade <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccess" /> é definida para esse valor.</param>
      <param name="permissionAccessPath">A matriz de cadeias de caracteres que identifica o recurso que você está protegendo. A propriedade <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath" /> é definida para esse valor.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="permissionAccessPath" /> especificado é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccess">
      <summary>Obtém uma representação de inteiro do valor de enumeração de nível de acesso.</summary>
      <returns>O valor de enumeração de nível de acesso.</returns>
    </member>
    <member name="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath">
      <summary>Obtém uma matriz de cadeias de caracteres que identifica o recurso que você está protegendo.</summary>
      <returns>Uma matriz de cadeias de caracteres que identificam o recurso que você está protegendo.</returns>
    </member>
    <member name="T:System.Security.Permissions.SecurityPermission">
      <summary>Descreve um conjunto de permissões de segurança aplicadas ao código. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.SecurityPermission" /> com permissão irrestrita ou restrita, conforme especificado.</summary>
      <param name="state">Um dos valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="state" /> não é um valor válido de <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.#ctor(System.Security.Permissions.SecurityPermissionFlag)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.SecurityPermission" /> com o estado definido inicial especificado dos sinalizadores.</summary>
      <param name="flag">O estado inicial da permissão, representado por uma combinação OR bit a bit dos bits de permissão definidos por <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="flag" /> não é um valor válido de <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.Copy">
      <summary>Cria e retorna uma cópia idêntica da permissão atual.</summary>
      <returns>Uma cópia da permissão atual.</returns>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói um a permissão com um estado especificado de uma codificação XML.</summary>
      <param name="esd">A codificação de XML a usar para reconstruir a permissão.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="esd" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="esd" /> não é um elemento de permissão válido.  
  
- ou - 
O número de versão do parâmetro <paramref name="esd" /> não é compatível.</exception>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.Intersect(System.Security.IPermission)">
      <summary>Cria e retorna uma permissão que é a interseção de permissão atual e da permissão especificada.</summary>
      <param name="target">Uma permissão para ter interseção com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
      <returns>Um novo objeto de permissão que representa a interseção da permissão atual e da permissão especificada. Essa nova permissão é <see langword="null" /> se a interseção estiver vazia.</returns>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina se a permissão atual é um subconjunto da permissão especificada.</summary>
      <param name="target">Uma permissão que deve ser testada quanto à relação de subconjunto. Essa permissão deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
      <returns>
        <see langword="true" /> se a permissão atual for um subconjunto da permissão especificada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.IsUnrestricted">
      <summary>Retorna um valor que indica se a permissão atual é irrestrita.</summary>
      <returns>
        <see langword="true" /> se a permissão for irrestrita; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.ToXml">
      <summary>Cria uma codificação XML da permissão e de seu estado atual.</summary>
      <returns>Uma codificação XML da permissão, incluindo informações de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.Union(System.Security.IPermission)">
      <summary>Cria uma permissão que é a união entre a permissão atual e a permissão especificada.</summary>
      <param name="target">Uma permissão a ser combinada com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
      <returns>Uma nova permissão que representa a união da permissão atual e da permissão especificada.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermission.Flags">
      <summary>Obtém ou define os sinalizadores de permissão de segurança.</summary>
      <exception cref="T:System.ArgumentException">É feita uma tentativa de definir essa propriedade como um valor inválido. Veja <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /> para obter os valores válidos.</exception>
      <returns>O estado da permissão atual, representado por uma combinação OR bit a bit de quaisquer bits de permissão definidos por <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.SiteIdentityPermission">
      <summary>Define a permissão de identidade para o site do qual se origina o código. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.SiteIdentityPermission" /> com o <see cref="T:System.Security.Permissions.PermissionState" /> especificado.</summary>
      <param name="state">Um dos valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="state" /> não é um valor válido de <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.SiteIdentityPermission" /> para representar a identidade do site especificada.</summary>
      <param name="site">A expressão de caractere curinga ou de nome de site.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="site" /> não é uma cadeia de caracteres válida ou não corresponde a um nome de site de caractere curinga válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.Copy">
      <summary>Cria e retorna uma cópia idêntica da permissão atual.</summary>
      <returns>Uma cópia da permissão atual.</returns>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói um a permissão com um estado especificado de uma codificação XML.</summary>
      <param name="esd">A codificação de XML a usar para reconstruir a permissão.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="esd" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="esd" /> não é um elemento de permissão válido.  
  
- ou - 
O número de versão do parâmetro <paramref name="esd" /> não é válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.Intersect(System.Security.IPermission)">
      <summary>Cria e retorna uma permissão que é a interseção de permissão atual e da permissão especificada.</summary>
      <param name="target">Uma permissão para ter interseção com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
      <returns>Uma nova permissão que representa a interseção da permissão atual e da permissão especificada. Essa nova permissão é <see langword="null" /> se a interseção estiver vazia.</returns>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina se a permissão atual é um subconjunto da permissão especificada.</summary>
      <param name="target">Uma permissão que deve ser testada quanto à relação de subconjunto. Essa permissão deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
      <returns>
        <see langword="true" /> se a permissão atual for um subconjunto da permissão especificada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.ToXml">
      <summary>Cria uma codificação XML da permissão e de seu estado atual.</summary>
      <returns>Uma codificação XML da permissão, incluindo informações de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.Union(System.Security.IPermission)">
      <summary>Cria uma permissão que é a união entre a permissão atual e a permissão especificada.</summary>
      <param name="target">Uma permissão a ser combinada com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.  
  
- ou - 
As permissões não são iguais e uma não é um subconjunto da outra.</exception>
      <returns>Uma nova permissão que representa a união da permissão atual e da permissão especificada.</returns>
    </member>
    <member name="P:System.Security.Permissions.SiteIdentityPermission.Site">
      <summary>Obtém ou define o site atual.</summary>
      <exception cref="T:System.NotSupportedException">A identidade do site não pode ser recuperada porque ele tem uma identidade ambígua.</exception>
      <returns>O site atual.</returns>
    </member>
    <member name="T:System.Security.Permissions.SiteIdentityPermissionAttribute">
      <summary>Permite que as ações de segurança para <see cref="T:System.Security.Permissions.SiteIdentityPermission" /> sejam aplicadas ao código usando a segurança declarativa. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.SiteIdentityPermissionAttribute" /> com o <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Um dos valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermissionAttribute.CreatePermission">
      <summary>Cria e retorna uma nova instância de <see cref="T:System.Security.Permissions.SiteIdentityPermission" />.</summary>
      <returns>Um <see cref="T:System.Security.Permissions.SiteIdentityPermission" /> que corresponde a este atributo.</returns>
    </member>
    <member name="P:System.Security.Permissions.SiteIdentityPermissionAttribute.Site">
      <summary>Obtém ou define o nome do site do código de chamada.</summary>
      <returns>O nome do site a ser comparado com o nome do site especificado pelo provedor de segurança.</returns>
    </member>
    <member name="T:System.Security.Permissions.StorePermission">
      <summary>Controla o acesso aos repositórios que contêm certificados X.509. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.StorePermission" /> com estado de permissão irrestrita ou totalmente restrita.</summary>
      <param name="state">Um dos valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> não é um valor <see cref="T:System.Security.Permissions.PermissionState" /> válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.StorePermissionFlags)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.StorePermission" /> com o acesso especificado.</summary>
      <param name="flag">Uma combinação bit a bit dos valores <see cref="T:System.Security.Permissions.StorePermissionFlags" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" /> não é uma combinação válida de valores <see cref="T:System.Security.Permissions.StorePermissionFlags" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.Copy">
      <summary>Cria e retorna uma cópia idêntica da permissão atual.</summary>
      <returns>Uma cópia da permissão atual.</returns>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói um a permissão com um estado especificado de uma codificação XML.</summary>
      <param name="securityElement">Um <see cref="T:System.Security.SecurityElement" /> que contém a codificação XML a ser usada para reconstruir a permissão.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> não é um elemento de permissão válido.  
  
- ou - 
O número de versão no <paramref name="securityElement" /> não é válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.Intersect(System.Security.IPermission)">
      <summary>Cria e retorna uma permissão que é a interseção de permissão atual e da permissão especificada.</summary>
      <param name="target">Uma permissão para ter interseção com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
      <returns>Uma nova permissão que representa a interseção da permissão atual e da permissão especificada. Essa nova permissão é <see langword="null" /> se a interseção estiver vazia.</returns>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina se a permissão atual é um subconjunto da permissão especificada.</summary>
      <param name="target">Uma permissão para testar a relação de subconjunto. Essa permissão deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
      <returns>
        <see langword="true" /> se a permissão atual for um subconjunto da permissão especificada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.IsUnrestricted">
      <summary>Retorna um valor que indica se a permissão atual é irrestrita.</summary>
      <returns>
        <see langword="true" /> se a permissão for irrestrita; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.ToXml">
      <summary>Cria uma codificação XML da permissão e de seu estado atual.</summary>
      <returns>Um <see cref="T:System.Security.SecurityElement" /> que contém uma codificação XML da permissão, incluindo quaisquer informações de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.Union(System.Security.IPermission)">
      <summary>Cria uma permissão que é a união entre a permissão atual e a permissão especificada.</summary>
      <param name="target">Uma permissão a ser combinada com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
      <returns>Uma nova permissão que representa a união da permissão atual e da permissão especificada.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermission.Flags">
      <summary>Obtém ou define o tipo de acesso <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" /> permitido pela permissão atual.</summary>
      <exception cref="T:System.ArgumentException">É feita uma tentativa de definir essa propriedade como um valor inválido. Veja <see cref="T:System.Security.Permissions.StorePermissionFlags" /> para obter os valores válidos.</exception>
      <returns>Uma combinação bit a bit dos valores <see cref="T:System.Security.Permissions.StorePermissionFlags" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.StorePermissionAttribute">
      <summary>Permite que as ações de segurança para <see cref="T:System.Security.Permissions.StorePermission" /> sejam aplicadas ao código usando a segurança declarativa. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Permissions.StorePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.StorePermissionAttribute" /> com a ação de segurança especificada.</summary>
      <param name="action">Um dos valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.StorePermissionAttribute.CreatePermission">
      <summary>Cria e retorna um novo <see cref="T:System.Security.Permissions.StorePermission" />.</summary>
      <returns>Uma <see cref="T:System.Security.Permissions.StorePermission" /> que corresponde ao atributo.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.AddToStore">
      <summary>Obtém ou define um valor que indica se o código tem permissão para ser adicionado a um repositório.</summary>
      <returns>
        <see langword="true" /> se a capacidade de adicionar a um repositório for permitida; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.CreateStore">
      <summary>Obtém ou define um valor que indica se o código tem permissão para criar um repositório.</summary>
      <returns>
        <see langword="true" /> se a capacidade de criar um repositório for permitida; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.DeleteStore">
      <summary>Obtém ou define um valor que indica se o código tem permissão para excluir um repositório.</summary>
      <returns>
        <see langword="true" /> se a capacidade de excluir um repositório for permitida; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.EnumerateCertificates">
      <summary>Obtém ou define um valor que indica se o código tem permissão para enumerar os certificados em um repositório.</summary>
      <returns>
        <see langword="true" /> se a capacidade de enumerar certificados é permitida; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.EnumerateStores">
      <summary>Obtém ou define um valor que indica se o código tem permissão para enumerar repositórios.</summary>
      <returns>
        <see langword="true" /> se a capacidade de enumerar repositórios for permitida; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.Flags">
      <summary>Obtém ou define as permissões do repositório.</summary>
      <returns>Uma combinação bit a bit dos valores <see cref="T:System.Security.Permissions.StorePermissionFlags" />. O padrão é <see cref="F:System.Security.Permissions.StorePermissionFlags.NoFlags" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.OpenStore">
      <summary>Obtém ou define um valor que indica se o código tem permissão para abrir um repositório.</summary>
      <returns>
        <see langword="true" /> se a capacidade de abrir um repositório for permitida; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.RemoveFromStore">
      <summary>Obtém ou define um valor que indica se o código tem permissão para remover um certificado de um repositório.</summary>
      <returns>
        <see langword="true" /> se a capacidade de remover um certificado de um repositório for permitida; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="T:System.Security.Permissions.StorePermissionFlags">
      <summary>Especifica o acesso permitido aos repositórios de certificados X.509.</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.AddToStore">
      <summary>
        <para>A capacidade de adicionar um certificado a um repositório.</para>
        <para>Por motivos de segurança, essa capacidade precisa ser concedida somente a código altamente confiável.</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.AllFlags">
      <summary>A capacidade de executar todas as operações de certificado e repositório.</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.CreateStore">
      <summary>
        <para>A capacidade de criar um novo repositório.</para>
        <para>Novo repositórios são criados chamando o método <see cref="M:System.Security.Cryptography.X509Certificates.X509Store.Open(System.Security.Cryptography.X509Certificates.OpenFlags)" />.</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.DeleteStore">
      <summary>
        <para>A capacidade de excluir um repositório.</para>
        <para>Essa funcionalidade não é exposta pela classe <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" />.</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.EnumerateCertificates">
      <summary>
        <para>A capacidade de enumerar os certificados em um repositório.</para>
        <para>Por motivos de privacidade, essa capacidade deve ser concedida somente a código totalmente confiável.</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.EnumerateStores">
      <summary>
        <para>A capacidade de enumerar os repositórios em um computador.</para>
        <para>Essa funcionalidade não é exposta pela classe <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" />.</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.NoFlags">
      <summary>Não foi concedida a permissão para executar operações de certificado e de repositório.</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.OpenStore">
      <summary>
        <para>A capacidade de abrir um repositório.</para>
        <para>A capacidade de abrir um repositório não inclui a capacidade de enumerar certificados (o que gera problemas de privacidade) ou para adicionar ou remover certificados (o que gera preocupações de segurança).</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.RemoveFromStore">
      <summary>
        <para>A capacidade de remover um certificado de um repositório.</para>
        <para>Essa capacidade precisa ser concedida somente a código altamente confiável porque a remoção de um certificado pode resultar em uma negação de serviço.</para>
      </summary>
    </member>
    <member name="T:System.Security.Permissions.StrongNameIdentityPermission">
      <summary>Define a permissão da identidade para nomes fortes. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> com o <see cref="T:System.Security.Permissions.PermissionState" /> especificado.</summary>
      <param name="state">Um dos valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="state" /> não é um valor válido de <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> para a identidade de nome forte especificada.</summary>
      <param name="blob">A chave pública que define o namespace de identidade do e nome forte.</param>
      <param name="name">A parte do nome simples da identidade de nome forte. Isso corresponde ao nome do assembly.</param>
      <param name="version">O número de versão da identidade.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="blob" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="name" /> é uma cadeia de caracteres vazia ("").</exception>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.Copy">
      <summary>Cria e retorna uma cópia idêntica da permissão atual.</summary>
      <returns>Uma cópia da permissão atual.</returns>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói um a permissão com um estado especificado de uma codificação XML.</summary>
      <param name="e">A codificação de XML a usar para reconstruir a permissão.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="e" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="e" /> não é um elemento de permissão válido.  
  
- ou - 
O número de versão do parâmetro <paramref name="e" /> não é válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.Intersect(System.Security.IPermission)">
      <summary>Cria e retorna uma permissão que é a interseção de permissão atual e da permissão especificada.</summary>
      <param name="target">Uma permissão para ter interseção com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
      <returns>Uma permissão que representa a interseção de permissão atual e a permissão especificada ou <see langword="null" /> se a interseção está vazia.</returns>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina se a permissão atual é um subconjunto da permissão especificada.</summary>
      <param name="target">Uma permissão que deve ser testada quanto à relação de subconjunto. Essa permissão deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
      <returns>
        <see langword="true" /> se a permissão atual for um subconjunto da permissão especificada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.ToXml">
      <summary>Cria uma codificação XML da permissão e de seu estado atual.</summary>
      <returns>Uma codificação XML da permissão, incluindo informações de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.Union(System.Security.IPermission)">
      <summary>Cria uma permissão que é a união entre a permissão atual e a permissão especificada.</summary>
      <param name="target">Uma permissão a ser combinada com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.  
  
- ou - 
As duas permissões não são iguais e uma é um subconjunto da outra.</exception>
      <returns>Uma nova permissão que representa a união da permissão atual e da permissão especificada.</returns>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermission.Name">
      <summary>Obtém ou define parte do nome simples da identidade de nome forte.</summary>
      <exception cref="T:System.ArgumentException">O valor é uma cadeia de caracteres vazia ("").</exception>
      <exception cref="T:System.NotSupportedException">O valor da propriedade não pode ser recuperado, porque contém uma identidade ambígua.</exception>
      <returns>O nome simples da identidade.</returns>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermission.PublicKey">
      <summary>Obtém ou define o blob de chave pública que define o namespace de identidade de nome forte.</summary>
      <exception cref="T:System.ArgumentNullException">O valor da propriedade é definido como <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">O valor da propriedade não pode ser recuperado, porque contém uma identidade ambígua.</exception>
      <returns>Um <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> que contém a chave pública da identidade ou, <see langword="null" /> se não houver nenhuma chave.</returns>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermission.Version">
      <summary>Obtém ou define o número de versão da identidade.</summary>
      <exception cref="T:System.NotSupportedException">O valor da propriedade não pode ser recuperado, porque contém uma identidade ambígua.</exception>
      <returns>A versão da identidade.</returns>
    </member>
    <member name="T:System.Security.Permissions.StrongNameIdentityPermissionAttribute">
      <summary>Permite que as ações de segurança para <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> sejam aplicadas ao código usando a segurança declarativa. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.StrongNameIdentityPermissionAttribute" /> com o <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Um dos valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermissionAttribute.CreatePermission">
      <summary>Cria e retorna um novo <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" />.</summary>
      <exception cref="T:System.ArgumentException">O método falhou porque a chave é <see langword="null" />.</exception>
      <returns>Um <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> que corresponde a este atributo.</returns>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermissionAttribute.Name">
      <summary>Obtém ou define o nome da identidade de nome forte.</summary>
      <returns>Um nome a ser comparado com o nome especificado pelo provedor de segurança.</returns>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermissionAttribute.PublicKey">
      <summary>Obtém ou define o valor de chave pública da identidade de nome forte expresso como uma cadeia de caracteres hexadecimal.</summary>
      <returns>O valor da chave pública da identidade de nome forte expressa como uma cadeia de caracteres hexadecimal.</returns>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermissionAttribute.Version">
      <summary>Obtém ou define a versão da identidade de nome forte.</summary>
      <returns>O número de versão da identidade de nome forte.</returns>
    </member>
    <member name="T:System.Security.Permissions.StrongNamePublicKeyBlob">
      <summary>Representa as informações de chave pública (chamadas um blob) para um nome forte. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Permissions.StrongNamePublicKeyBlob.#ctor(System.Byte[])">
      <summary>Inicializa uma na instância da classe <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> com bytes brutos do blob de chave pública.</summary>
      <param name="publicKey">A matriz de bytes que representa os dados brutos de chave pública.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="publicKey" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.StrongNamePublicKeyBlob.Equals(System.Object)">
      <summary>Obtém ou define um valor que indica se o blob de chave pública é igual ao blob de chave pública especificado.</summary>
      <param name="o">Um objeto que contém um blob de chave pública.</param>
      <returns>
        <see langword="true" /> se o blob de chave pública do objeto atual for igual ao blob de chave pública do parâmetro <paramref name="o" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.StrongNamePublicKeyBlob.GetHashCode">
      <summary>Retorna um código hash com base na chave pública.</summary>
      <returns>O código hash com base na chave pública.</returns>
    </member>
    <member name="M:System.Security.Permissions.StrongNamePublicKeyBlob.ToString">
      <summary>Cria e retorna uma representação de cadeia de caracteres do blob de chave pública.</summary>
      <returns>Uma versão hexadecimal do blob de chave pública.</returns>
    </member>
    <member name="T:System.Security.Permissions.TypeDescriptorPermission">
      <summary>Define o acesso de confiança parcial para a classe <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.TypeDescriptorPermission" />.</summary>
      <param name="state">O <see cref="T:System.Security.Permissions.PermissionState" /> a solicitar. Somente <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> e <see cref="F:System.Security.Permissions.PermissionState.None" /> são válidos.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> não é um estado de permissão válido. Somente <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> e <see cref="F:System.Security.Permissions.PermissionState.None" /> são válidos.</exception>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.TypeDescriptorPermissionFlags)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.TypeDescriptorPermission" /> com os sinalizadores de permissão especificados.</summary>
      <param name="flag">Os sinalizadores de permissão a serem solicitados.</param>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.Copy">
      <summary>Quando implementada por uma classe derivada, cria e retorna uma cópia idêntica do objeto de permissão atual.</summary>
      <returns>Uma cópia do objeto de permissão atual.</returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.FromXml(System.Security.SecurityElement)">
      <summary>Quando substituído em uma classe derivada, reconstrói um objeto de segurança com um estado especificado de uma codificação XML.</summary>
      <param name="securityElement">A codificação XML a ser usada para reconstruir o objeto de segurança.</param>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.Intersect(System.Security.IPermission)">
      <summary>Quando implementada por uma classe derivada, cria e retorna uma permissão que é a interseção de permissão atual e da permissão especificada.</summary>
      <param name="target">Uma permissão para ter interseção com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <returns>Uma nova permissão que representa a interseção da permissão atual e da permissão especificada. Essa nova permissão é <see langword="null" /> se a interseção estiver vazia.</returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Quando implementado em uma classe derivada, determina se a permissão atual é um subconjunto da permissão especificada.</summary>
      <param name="target">Uma permissão que deve ser testada quanto à relação de subconjunto. Essa permissão deve ser do mesmo tipo da permissão atual.</param>
      <returns>
        <see langword="true" /> se a permissão atual for um subconjunto da permissão especificada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.IsUnrestricted">
      <summary>Obtém um valor que indica se o descritor de tipo pode ser chamado por código parcialmente confiável.</summary>
      <returns>
        <see langword="true" /> se a propriedade <see cref="P:System.Security.Permissions.TypeDescriptorPermission.Flags" /> estiver definida como <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.ToXml">
      <summary>Quando substituído em uma classe derivada, cria uma codificação XML do objeto de segurança e seu estado atual.</summary>
      <returns>Uma codificação XML do objeto de segurança, incluindo quaisquer informações de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.Union(System.Security.IPermission)">
      <summary>Quando substituído em uma classe derivada, cria uma permissão que é a união entre a permissão atual e a permissão especificada.</summary>
      <param name="target">Uma permissão a ser combinada com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <returns>Uma nova permissão que representa a união da permissão atual e da permissão especificada.</returns>
    </member>
    <member name="P:System.Security.Permissions.TypeDescriptorPermission.Flags">
      <summary>Obtém ou define o <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" /> do descritor de tipo.</summary>
      <returns>O <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" /> para o descritor de tipo.</returns>
    </member>
    <member name="T:System.Security.Permissions.TypeDescriptorPermissionAttribute">
      <summary>Determina os sinalizadores de permissão que se aplicam a um <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.TypeDescriptorPermissionAttribute" /> com o <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Um dos valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermissionAttribute.CreatePermission">
      <summary>Quando substituído em uma classe derivada, cria um objeto de permissão que pode ser serializado em formato binário e persistentemente armazenado juntamente com o <see cref="T:System.Security.Permissions.SecurityAction" /> nos metadados do assembly.</summary>
      <returns>Um objeto de permissão serializável.</returns>
    </member>
    <member name="P:System.Security.Permissions.TypeDescriptorPermissionAttribute.Flags">
      <summary>Obtém ou define o <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" /> do <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <returns>O <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" /> para o <see cref="T:System.ComponentModel.TypeDescriptor" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.TypeDescriptorPermissionAttribute.RestrictedRegistrationAccess">
      <summary>Obtém ou define um valor que indica se o descritor de tipo pode ser acessado da confiança parcial.</summary>
      <returns>
        <see langword="true" /> Se o descritor de tipo puder ser acessado de confiança parcial; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="T:System.Security.Permissions.TypeDescriptorPermissionFlags">
      <summary>Define as configurações de permissão para descritores de tipo.</summary>
    </member>
    <member name="F:System.Security.Permissions.TypeDescriptorPermissionFlags.NoFlags">
      <summary>Nenhum sinalizador de permissão está definido no descritor de tipo.</summary>
    </member>
    <member name="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess">
      <summary>O descritor de tipo pode ser chamado do código parcialmente confiável.</summary>
    </member>
    <member name="T:System.Security.Permissions.UIPermission">
      <summary>Controla as permissões relacionadas às interfaces de usuário e a área de transferência. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.UIPermission" /> com acesso totalmente restrito ou irrestrito, conforme especificado.</summary>
      <param name="state">Um dos valores de enumeração.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="state" /> não é um <see cref="T:System.Security.Permissions.PermissionState" /> válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionClipboard)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.UIPermission" /> com as permissões para a área de transferência e sem acesso às janelas.</summary>
      <param name="clipboardFlag">Um dos valores de enumeração.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="clipboardFlag" /> não é um valor <see cref="T:System.Security.Permissions.UIPermissionClipboard" /> válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.UIPermission" /> com as permissões para janelas e sem acesso à área de transferência.</summary>
      <param name="windowFlag">Um dos valores de enumeração.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="windowFlag" /> não é um valor <see cref="T:System.Security.Permissions.UIPermissionWindow" /> válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow,System.Security.Permissions.UIPermissionClipboard)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.UIPermission" /> com as permissões especificadas para janelas e área de transferência.</summary>
      <param name="windowFlag">Um dos valores de enumeração.</param>
      <param name="clipboardFlag">Um dos valores de enumeração.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="windowFlag" /> não é um valor <see cref="T:System.Security.Permissions.UIPermissionWindow" /> válido.  
  
- ou - 
O parâmetro <paramref name="clipboardFlag" /> não é um valor <see cref="T:System.Security.Permissions.UIPermissionClipboard" /> válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.Copy">
      <summary>Cria e retorna uma cópia idêntica da permissão atual.</summary>
      <returns>Uma cópia da permissão atual.</returns>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói um a permissão com um estado especificado de uma codificação XML.</summary>
      <param name="esd">A codificação de XML usada para reconstruir a permissão.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="esd" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="esd" /> não é um elemento de permissão válido.  
  
- ou - 
O número de versão do parâmetro <paramref name="esd" /> não é válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.Intersect(System.Security.IPermission)">
      <summary>Cria e retorna uma permissão que é a interseção de permissão atual e da permissão especificada.</summary>
      <param name="target">Uma permissão para ter interseção com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
      <returns>Uma nova permissão que representa a interseção da permissão atual e da permissão especificada. Essa nova permissão é <see langword="null" /> se a interseção estiver vazia.</returns>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina se a permissão atual é um subconjunto da permissão especificada.</summary>
      <param name="target">Uma permissão para testar a relação de subconjunto. Essa permissão deve ser do mesmo tipo que a permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
      <returns>
        <see langword="true" /> se a permissão atual for um subconjunto da permissão especificada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.IsUnrestricted">
      <summary>Retorna um valor que indica se a permissão atual é irrestrita.</summary>
      <returns>
        <see langword="true" /> se a permissão for irrestrita; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.ToXml">
      <summary>Cria uma codificação XML da permissão e de seu estado atual.</summary>
      <returns>Uma codificação XML da permissão, incluindo informações de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.Union(System.Security.IPermission)">
      <summary>Cria uma permissão que é a união da permissão e da permissão especificada.</summary>
      <param name="target">Uma permissão a ser combinada com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
      <returns>Uma nova permissão que representa a união da permissão atual e da permissão especificada.</returns>
    </member>
    <member name="P:System.Security.Permissions.UIPermission.Clipboard">
      <summary>Obtém ou define o acesso à área de transferência representado pela permissão.</summary>
      <returns>Um dos valores de <see cref="T:System.Security.Permissions.UIPermissionClipboard" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.UIPermission.Window">
      <summary>Obtém ou define o acesso à janela representado pela permissão.</summary>
      <returns>Um dos valores de <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.UIPermissionAttribute">
      <summary>Permite que as ações de segurança para <see cref="T:System.Security.Permissions.UIPermission" /> sejam aplicadas ao código usando a segurança declarativa. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Permissions.UIPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.UIPermissionAttribute" /> com o <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Um dos valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.UIPermissionAttribute.CreatePermission">
      <summary>Cria e retorna um novo <see cref="T:System.Security.Permissions.UIPermission" />.</summary>
      <returns>Um <see cref="T:System.Security.Permissions.UIPermission" /> que corresponde a este atributo.</returns>
    </member>
    <member name="P:System.Security.Permissions.UIPermissionAttribute.Clipboard">
      <summary>Obtém ou define o tipo de acesso permitido à área de transferência.</summary>
      <returns>Um dos valores de <see cref="T:System.Security.Permissions.UIPermissionClipboard" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.UIPermissionAttribute.Window">
      <summary>Obtém ou define o tipo de acesso permitido aos recursos da janela.</summary>
      <returns>Um dos valores de <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.UIPermissionClipboard">
      <summary>Especifica o tipo de acesso de área de transferência que é permitido para o código de chamada.</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard">
      <summary>A Área de Transferência pode ser usada sem restrição.</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionClipboard.NoClipboard">
      <summary>Não é possível usar a Área de Transferência.</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionClipboard.OwnClipboard">
      <summary>A capacidade de colocar dados na área de transferência (<see langword="Copy" />, <see langword="Cut" />) é irrestrita. Controles intrínsecos que aceitam <see langword="Paste" />, como uma caixa de texto, podem aceitar os dados da área de transferência, mas os controles de usuário que devem ler programaticamente a área de transferência não podem.</summary>
    </member>
    <member name="T:System.Security.Permissions.UIPermissionWindow">
      <summary>Especifica o tipo de janelas que o código tem permissão para usar.</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionWindow.AllWindows">
      <summary>Os usuários podem usar todas as janelas e os eventos de entrada do usuário sem restrição.</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionWindow.NoWindows">
      <summary>Os usuários não podem usar as janelas ou os eventos da interface do usuário. Nenhuma interface do usuário pode ser usada.</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows">
      <summary>Os usuários só podem usar <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /> para o desenho e só podem usar os eventos de entrada do usuário para a interface do usuário dentro desta subjanela. Exemplos de <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /> são um <see cref="T:System.Windows.Forms.MessageBox" />, controles de caixa de diálogo comuns e um controle exibido dentro de um navegador.</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows">
      <summary>Os usuários só podem usar <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /> e <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /> para o desenho e só podem usar os eventos de entrada do usuário para a interface do usuário dentro dessas janelas de nível superior e subjanelas. Consulte a seção Comentários para obter mais informações.</summary>
    </member>
    <member name="T:System.Security.Permissions.UrlIdentityPermission">
      <summary>Define a permissão de identidade para a URL da qual se origina o código. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> com o <see cref="T:System.Security.Permissions.PermissionState" /> especificado.</summary>
      <param name="state">Um dos valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="state" /> não é um valor válido de <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> a fim de representar a identidade de URL descrita por <paramref name="site" />.</summary>
      <param name="site">Uma expressão de URL ou caractere curinga.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="site" /> é <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">O comprimento do parâmetro <paramref name="site" /> é zero.</exception>
      <exception cref="T:System.ArgumentException">A URL, o diretório ou a parte do site do parâmetro <paramref name="site" /> não é válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.Copy">
      <summary>Cria e retorna uma cópia idêntica da permissão atual.</summary>
      <returns>Uma cópia da permissão atual.</returns>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói um a permissão com um estado especificado de uma codificação XML.</summary>
      <param name="esd">A codificação de XML a usar para reconstruir a permissão.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="esd" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="esd" /> não é um elemento de permissão válido.  
  
- ou - 
O número de versão do parâmetro <paramref name="esd" /> não é válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.Intersect(System.Security.IPermission)">
      <summary>Cria e retorna uma permissão que é a interseção de permissão atual e da permissão especificada.</summary>
      <param name="target">Uma permissão para ter interseção com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.  
  
- ou - 
A propriedade URL não é uma URL válida.</exception>
      <returns>Uma nova permissão que representa a interseção da permissão atual e da permissão especificada. Essa nova permissão é <see langword="null" /> se a interseção estiver vazia.</returns>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina se a permissão atual é um subconjunto da permissão especificada.</summary>
      <param name="target">Uma permissão que deve ser testada quanto à relação de subconjunto. Essa permissão deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.  
  
- ou - 
A propriedade URL não é uma URL válida.</exception>
      <returns>
        <see langword="true" /> se a permissão atual for um subconjunto da permissão especificada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.ToXml">
      <summary>Cria uma codificação XML da permissão e de seu estado atual.</summary>
      <returns>Uma codificação XML da permissão, incluindo informações de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.Union(System.Security.IPermission)">
      <summary>Cria uma permissão que é a união entre a permissão atual e a permissão especificada.</summary>
      <param name="target">Uma permissão a ser combinada com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.  
  
- ou - 
A propriedade <see cref="P:System.Security.Permissions.UrlIdentityPermission.Url" /> não é uma URL válida.  
  
- ou - 
As duas permissões não são iguais e uma não é um subconjunto da outra.</exception>
      <exception cref="T:System.NotSupportedException">A operação é ambígua porque a permissão representa várias identidades.</exception>
      <returns>Uma nova permissão que representa a união da permissão atual e da permissão especificada.</returns>
    </member>
    <member name="P:System.Security.Permissions.UrlIdentityPermission.Url">
      <summary>Obtém ou define a URL que representa a identidade do código de Internet.</summary>
      <exception cref="T:System.NotSupportedException">A URL não pode ser recuperada porque tem uma identidade ambígua.</exception>
      <returns>Uma URL que representa a identidade do código da Internet.</returns>
    </member>
    <member name="T:System.Security.Permissions.UrlIdentityPermissionAttribute">
      <summary>Permite que as ações de segurança para <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> sejam aplicadas ao código usando a segurança declarativa. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.UrlIdentityPermissionAttribute" /> com o <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Um dos valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermissionAttribute.CreatePermission">
      <summary>Cria e retorna um novo <see cref="T:System.Security.Permissions.UrlIdentityPermission" />.</summary>
      <returns>Um <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> que corresponde a este atributo.</returns>
    </member>
    <member name="P:System.Security.Permissions.UrlIdentityPermissionAttribute.Url">
      <summary>Obtém ou define a URL completa do código de chamada.</summary>
      <returns>A URL para corresponder à URL especificada pelo host.</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermission">
      <summary>O objeto <see cref="T:System.Security.Permissions.WebBrowserPermission" /> controla a capacidade de criar o controle WebBrowser.</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.WebBrowserPermission" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.WebBrowserPermission" /> especificando um estado de permissão.</summary>
      <param name="state">Um valor enumerado de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.WebBrowserPermissionLevel)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.WebBrowserPermission" /> especificando o nível de permissão do navegador da Web.</summary>
      <param name="webBrowserPermissionLevel">Um valor enumerado de <see cref="T:System.Security.Permissions.WebBrowserPermissionLevel" />.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Copy">
      <summary>Cria e retorna uma cópia idêntica da permissão atual.</summary>
      <returns>Uma cópia da permissão atual.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói um a permissão com um estado especificado de uma codificação XML.</summary>
      <param name="securityElement">A codificação de XML a usar para reconstruir a permissão.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Intersect(System.Security.IPermission)">
      <summary>Cria e retorna uma permissão que é a interseção de permissão atual e da permissão especificada.</summary>
      <param name="target">Uma permissão para ter interseção com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <returns>A intersecção de duas permissões é uma permissão que descreve o estado que ambas descrevem em comum. Somente uma demanda que passe ambas as permissões originais será válida para a permissão interseccionada.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina se a permissão atual é um subconjunto da permissão especificada.</summary>
      <param name="target">Uma permissão que deve ser testada quanto à relação de subconjunto. Essa permissão deve ser do mesmo tipo da permissão atual.</param>
      <returns>
        <see langword="true" /> se a permissão atual for um subconjunto da permissão especificada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.IsUnrestricted">
      <summary>Retorna um valor que indica se a permissão atual é irrestrita.</summary>
      <returns>
        <see langword="true" /> se a propriedade <see cref="P:System.Security.Permissions.WebBrowserPermission.Level" /> estiver definida como <see cref="F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.ToXml">
      <summary>Cria uma codificação XML da permissão e de seu estado atual.</summary>
      <returns>Uma codificação XML da permissão, incluindo informações de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Union(System.Security.IPermission)">
      <summary>Cria uma permissão que é a união entre a permissão atual e a permissão especificada.</summary>
      <param name="target">Uma permissão a ser combinada com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <returns>Uma nova permissão que representa a união da permissão atual e da permissão especificada.</returns>
    </member>
    <member name="P:System.Security.Permissions.WebBrowserPermission.Level">
      <summary>Obtém ou define o valor atual do nível de permissão do navegador da Web.</summary>
      <returns>O valor atual do nível de permissão do navegador da Web.</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermissionAttribute">
      <summary>Permite que as ações de segurança para <see cref="T:System.Security.Permissions.WebBrowserPermission" /> sejam aplicadas ao código usando a segurança declarativa.</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.WebBrowserPermissionAttribute" /> com o <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Um dos valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermissionAttribute.CreatePermission">
      <summary>Cria e retorna uma nova instância da classe <see cref="T:System.Security.Permissions.WebBrowserPermission" />.</summary>
      <returns>Um <see cref="T:System.Security.Permissions.WebBrowserPermission" /> que corresponde à declaração de segurança.</returns>
    </member>
    <member name="P:System.Security.Permissions.WebBrowserPermissionAttribute.Level">
      <summary>Obtém ou define o nível atual de permissão de navegador da Web para o <see cref="T:System.Security.Permissions.WebBrowserPermissionAttribute" />.</summary>
      <returns>O estado do nível de permissão do navegador da Web atual.</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermissionLevel">
      <summary>Especifica o nível de permissão de um navegador da Web.</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.None">
      <summary>Um navegador da Web que não pode navegar em quadros em HTML.</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.Safe">
      <summary>Um navegador da Web que pode navegar em quadros em HTML com segurança, mas com várias restrições.</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted">
      <summary>Um navegador da Web que pode navegar sem restrições.</summary>
    </member>
    <member name="T:System.Security.Permissions.ZoneIdentityPermission">
      <summary>Define a permissão de identidade para a zona da qual o código é originado. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> com o <see cref="T:System.Security.Permissions.PermissionState" /> especificado.</summary>
      <param name="state">Um dos valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="state" /> não é um valor válido de <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.SecurityZone)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> para representar a identidade da zona especificada.</summary>
      <param name="zone">O identificador de zona.</param>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.Copy">
      <summary>Cria e retorna uma cópia idêntica da permissão atual.</summary>
      <returns>Uma cópia da permissão atual.</returns>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói um a permissão com um estado especificado de uma codificação XML.</summary>
      <param name="esd">A codificação de XML a usar para reconstruir a permissão.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="esd" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="esd" /> não é um elemento de permissão válido.  
  
- ou - 
O número de versão do parâmetro <paramref name="esd" /> não é válido.</exception>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.Intersect(System.Security.IPermission)">
      <summary>Cria e retorna uma permissão que é a interseção de permissão atual e da permissão especificada.</summary>
      <param name="target">Uma permissão para ter interseção com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
      <returns>Uma nova permissão que representa a interseção da permissão atual e da permissão especificada. Essa nova permissão é <see langword="null" /> se a interseção estiver vazia.</returns>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina se a permissão atual é um subconjunto da permissão especificada.</summary>
      <param name="target">Uma permissão que deve ser testada quanto à relação de subconjunto. Essa permissão deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" />, essa permissão não representa a zona de segurança <see cref="F:System.Security.SecurityZone.NoZone" /> e a permissão especificada não é igual à permissão atual.</exception>
      <returns>
        <see langword="true" /> se a permissão atual for um subconjunto da permissão especificada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.ToXml">
      <summary>Cria uma codificação XML da permissão e de seu estado atual.</summary>
      <returns>Uma codificação XML da permissão, incluindo informações de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.Union(System.Security.IPermission)">
      <summary>Cria uma permissão que é a união entre a permissão atual e a permissão especificada.</summary>
      <param name="target">Uma permissão a ser combinada com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.  
  
- ou - 
As duas permissões não são iguais e a permissão atual não representa a zona de segurança <see cref="F:System.Security.SecurityZone.NoZone" />.</exception>
      <returns>Uma nova permissão que representa a união da permissão atual e da permissão especificada.</returns>
    </member>
    <member name="P:System.Security.Permissions.ZoneIdentityPermission.SecurityZone">
      <summary>Obtém ou define a zona representada pelo <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> atual.</summary>
      <exception cref="T:System.ArgumentException">O valor do parâmetro não é um valor válido de <see cref="T:System.Security.SecurityZone" />.</exception>
      <returns>Um dos valores de <see cref="T:System.Security.SecurityZone" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.ZoneIdentityPermissionAttribute">
      <summary>Permite que as ações de segurança para <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> sejam aplicadas ao código usando a segurança declarativa. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.ZoneIdentityPermissionAttribute" /> com o <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Um dos valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermissionAttribute.CreatePermission">
      <summary>Cria e retorna um novo <see cref="T:System.Security.Permissions.ZoneIdentityPermission" />.</summary>
      <returns>Um <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> que corresponde a este atributo.</returns>
    </member>
    <member name="P:System.Security.Permissions.ZoneIdentityPermissionAttribute.Zone">
      <summary>Obtém ou define a associação na zona de conteúdo especificada pelo valor da propriedade.</summary>
      <returns>Um dos valores de <see cref="T:System.Security.SecurityZone" />.</returns>
    </member>
    <member name="T:System.Security.Policy.AllMembershipCondition">
      <summary>Representa uma condição de associação que corresponde a todos os códigos. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Policy.AllMembershipCondition" />.</summary>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>Determina se a evidência especificada satisfaz a condição de associação.</summary>
      <param name="evidence">O conjunto de evidências no qual realizar o teste.</param>
      <returns>Sempre <see langword="true" />.</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.Copy">
      <summary>Cria uma cópia equivalente da condição de associação.</summary>
      <returns>Uma nova cópia idêntica da condição de associação atual.</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.Equals(System.Object)">
      <summary>Determina se a condição de associação especificada é um <see cref="T:System.Security.Policy.AllMembershipCondition" />.</summary>
      <param name="o">O objeto a ser comparado com <see cref="T:System.Security.Policy.AllMembershipCondition" />.</param>
      <returns>
        <see langword="true" /> se a condição de associação especificada for um <see cref="T:System.Security.Policy.AllMembershipCondition" />, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói um objeto de segurança com um estado especificado de uma codificação XML.</summary>
      <param name="e">A codificação XML a ser usada para reconstruir o objeto de segurança.</param>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Reconstrói um objeto de segurança com um estado especificado de uma codificação XML.</summary>
      <param name="e">A codificação XML a ser usada para reconstruir o objeto de segurança.</param>
      <param name="level">O contexto do nível de política usado para resolver referências de conjunto de permissões nomeadas.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="e" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="e" /> não é um elemento de condição de associação válido.</exception>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.GetHashCode">
      <summary>Obtém o código hash para a condição de associação atual.</summary>
      <returns>O código hash para a condição de associação atual.</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.ToString">
      <summary>Cria e retorna uma representação de cadeia de caracteres da condição de associação.</summary>
      <returns>Uma representação da condição de associação.</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.ToXml">
      <summary>Cria uma codificação XML do objeto de segurança e seu estado atual.</summary>
      <returns>Uma codificação XML do objeto de segurança, incluindo quaisquer informações de estado.</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>Cria uma codificação XML do objeto de segurança e de seu estado atual com o <see cref="T:System.Security.Policy.PolicyLevel" /> especificado.</summary>
      <param name="level">O contexto do nível de política para resolver as referências do conjunto de permissões nomeadas.</param>
      <returns>Uma codificação XML do objeto de segurança, incluindo quaisquer informações de estado.</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationDirectory">
      <summary>Fornece o diretório de aplicativo como evidência para avaliação de política. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectory.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Policy.ApplicationDirectory" />.</summary>
      <param name="name">O caminho do diretório do aplicativo.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="name" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectory.Copy">
      <summary>Cria uma nova cópia do <see cref="T:System.Security.Policy.ApplicationDirectory" />.</summary>
      <returns>Uma nova cópia idêntica do <see cref="T:System.Security.Policy.ApplicationDirectory" />.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectory.Equals(System.Object)">
      <summary>Determina se as instâncias do mesmo tipo de um objeto de evidência são equivalentes.</summary>
      <param name="o">Um objeto do mesmo tipo que o objeto de evidência atual.</param>
      <returns>
        <see langword="true" /> se as duas instâncias forem equivalentes; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectory.GetHashCode">
      <summary>Obtém o código hash do diretório do aplicativo atual.</summary>
      <returns>O código hash do diretório do aplicativo atual.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectory.ToString">
      <summary>Obtém uma representação de cadeia de caracteres do estado do objeto de evidência <see cref="T:System.Security.Policy.ApplicationDirectory" />.</summary>
      <returns>Uma representação de cadeia de caracteres do estado do objeto de evidência <see cref="T:System.Security.Policy.ApplicationDirectory" />.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationDirectory.Directory">
      <summary>Obtém o caminho do diretório do aplicativo.</summary>
      <returns>O caminho do diretório do aplicativo.</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationDirectoryMembershipCondition">
      <summary>Determina se um assembly pertence a um grupo de códigos testando seu diretório de aplicativo. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Policy.ApplicationDirectoryMembershipCondition" />.</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>Determina se a condição de associação é satisfeita pela evidência especificada.</summary>
      <param name="evidence">O conjunto de evidências no qual realizar o teste.</param>
      <returns>
        <see langword="true" /> se a evidência especificada satisfizer a condição de associação; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.Copy">
      <summary>Cria uma cópia equivalente da condição de associação.</summary>
      <returns>Uma nova cópia idêntica da condição de associação atual.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.Equals(System.Object)">
      <summary>Determina se a condição de associação especificada é um <see cref="T:System.Security.Policy.ApplicationDirectoryMembershipCondition" />.</summary>
      <param name="o">O objeto a ser comparado com <see cref="T:System.Security.Policy.ApplicationDirectoryMembershipCondition" />.</param>
      <returns>
        <see langword="true" /> se a condição de associação especificada for um <see cref="T:System.Security.Policy.ApplicationDirectoryMembershipCondition" />, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói um objeto de segurança com um estado especificado de uma codificação XML.</summary>
      <param name="e">A codificação XML a ser usada para reconstruir o objeto de segurança.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="e" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="e" /> não é um elemento de condição de associação de diretório de aplicativo válido.</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Reconstrói um objeto de segurança com um estado especificado de uma codificação XML.</summary>
      <param name="e">A codificação XML a ser usada para reconstruir o objeto de segurança.</param>
      <param name="level">O contexto do nível de política usado para resolver referências de conjunto de permissões nomeadas.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="e" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="e" /> não é um elemento de condição de associação de diretório de aplicativo válido.</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.GetHashCode">
      <summary>Obtém o código hash para a condição de associação atual.</summary>
      <returns>O código hash para a condição de associação atual.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.ToString">
      <summary>Cria e retorna uma representação de cadeia de caracteres da condição de associação.</summary>
      <returns>Uma representação de cadeia de caracteres do estado da condição de associação.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml">
      <summary>Cria uma codificação XML do objeto de segurança e seu estado atual.</summary>
      <returns>Uma codificação XML do objeto de segurança, incluindo quaisquer informações de estado.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>Cria uma codificação XML do objeto de segurança e de seu estado atual com o <see cref="T:System.Security.Policy.PolicyLevel" /> especificado.</summary>
      <param name="level">O contexto do nível de política para resolver as referências do conjunto de permissões nomeadas.</param>
      <returns>Uma codificação XML do objeto de segurança, incluindo quaisquer informações de estado.</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationTrust">
      <summary>Encapsula as decisões de segurança sobre um aplicativo. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrust.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Policy.ApplicationTrust" />.</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrust.#ctor(System.ApplicationIdentity)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Policy.ApplicationTrust" /> com um <see cref="T:System.ApplicationIdentity" />.</summary>
      <param name="identity">Um <see cref="T:System.ApplicationIdentity" /> que identifica um aplicativo de forma exclusiva.</param>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrust.#ctor(System.Security.PermissionSet,System.Collections.Generic.IEnumerable{System.Security.Policy.StrongName})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Policy.ApplicationTrust" /> usando o conjunto de concessões e a coleção de assemblies totalmente confiáveis fornecidos.</summary>
      <param name="defaultGrantSet">Um conjunto de permissões padrão concedido a todos os assemblies que não têm concessões específicas.</param>
      <param name="fullTrustAssemblies">Uma matriz de nomes fortes que representa os assemblies que devem ser considerados totalmente confiáveis em um domínio do aplicativo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fullTrustAssemblies" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="fullTrustAssemblies" /> contém um assembly que não tem um <see cref="T:System.Security.Policy.StrongName" />.</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrust.FromXml(System.Security.SecurityElement)">
      <summary>Recria um objeto <see cref="T:System.Security.Policy.ApplicationTrust" /> com um determinado estado de uma codificação XML.</summary>
      <param name="element">A codificação XML a ser usada para reconstruir o objeto <see cref="T:System.Security.Policy.ApplicationTrust" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">A codificação de XML usada para <paramref name="element" /> é inválida.</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrust.ToXml">
      <summary>Cria uma codificação XML do objeto <see cref="T:System.Security.Policy.ApplicationTrust" /> e seu estado atual.</summary>
      <returns>Uma codificação XML do objeto de segurança, incluindo quaisquer informações de estado.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity">
      <summary>Obtém ou define a identidade do aplicativo para o objeto de confiança do aplicativo.</summary>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.ApplicationIdentity" /> não pode ser definido porque ele tem um valor de <see langword="null" />.</exception>
      <returns>Um <see cref="T:System.ApplicationIdentity" /> do objeto de confiança do aplicativo.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.DefaultGrantSet">
      <summary>Obtém ou define a instrução de política que define o conjunto de concessões padrão.</summary>
      <returns>Um <see cref="T:System.Security.Policy.PolicyStatement" /> que descreve as concessões padrão.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.ExtraInfo">
      <summary>Obtém ou define informações de segurança adicionais sobre o aplicativo.</summary>
      <returns>Um objeto que contém informações de segurança adicionas sobre o aplicativo.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.FullTrustAssemblies">
      <summary>Obtém a lista de assemblies de confiança total para essa relação de confiança do aplicativo.</summary>
      <returns>Uma lista de assemblies de confiança total.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun">
      <summary>Obtém ou define um valor que indica se o aplicativo tem as concessões de permissão necessárias e é confiável para ser executado.</summary>
      <returns>
        <see langword="true" /> Se o aplicativo for confiável para execução; caso contrário, <see langword="false" /> . O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.Persist">
      <summary>Obtém ou define um valor que indica se as informações da relação de confiança do aplicativo são mantidas.</summary>
      <returns>
        <see langword="true" /> Se as informações de confiança do aplicativo forem persistidas; caso contrário, <see langword="false" /> . O padrão é <see langword="false" />.</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationTrustCollection">
      <summary>Representa uma coleção de objetos <see cref="T:System.Security.Policy.ApplicationTrust" /> . Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.Add(System.Security.Policy.ApplicationTrust)">
      <summary>Adiciona um elemento à coleção.</summary>
      <param name="trust">O objeto <see cref="T:System.Security.Policy.ApplicationTrust" /> a ser adicionado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="trust" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">A propriedade <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" /> do <see cref="T:System.Security.Policy.ApplicationTrust" /> especificado no <paramref name="trust" /> é <see langword="null" />.</exception>
      <returns>O índice no qual o novo elemento foi inserido.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.AddRange(System.Security.Policy.ApplicationTrust[])">
      <summary>Copia os elementos da matriz <see cref="T:System.Security.Policy.ApplicationTrust" /> especificada para o fim da coleção.</summary>
      <param name="trusts">A matriz do tipo <see cref="T:System.Security.Policy.ApplicationTrust" /> que contém os objetos a serem adicionados à coleção.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="trusts" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">A propriedade <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" /> de um <see cref="T:System.Security.Policy.ApplicationTrust" /> especificado no <paramref name="trust" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.AddRange(System.Security.Policy.ApplicationTrustCollection)">
      <summary>Copia os elementos da <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> especificada para o fim da coleção.</summary>
      <param name="trusts">Um <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> que contém os objetos a serem adicionados à coleção.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="trusts" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">A propriedade <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" /> de um <see cref="T:System.Security.Policy.ApplicationTrust" /> especificado no <paramref name="trust" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.Clear">
      <summary>Remove todas as relações de confiança do aplicativo da coleção.</summary>
      <exception cref="T:System.ArgumentException">A propriedade <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" /> de um item na coleção é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.CopyTo(System.Security.Policy.ApplicationTrust[],System.Int32)">
      <summary>Copia toda a coleção em uma matriz unidimensional compatível a partir do índice especificado da matriz de destino.</summary>
      <param name="array">A matriz unidimensional do tipo <see cref="T:System.Security.Policy.ApplicationTrust" /> que é o destino dos elementos copiados da coleção atual.</param>
      <param name="index">O índice com base em zero em <paramref name="array" /> no qual a cópia começa.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> é menor que o limite inferior de <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> é multidimensional.  
  
- ou - 
O número de elementos no <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> é maior do que o espaço disponível de <paramref name="index" /> até o final do <paramref name="array" /> de destino.</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.Find(System.ApplicationIdentity,System.Security.Policy.ApplicationVersionMatch)">
      <summary>Obtém as relações de confiança do aplicativo na coleção que correspondem à identidade do aplicativo especificado.</summary>
      <param name="applicationIdentity">Um objeto <see cref="T:System.ApplicationIdentity" /> que descreve o aplicativo a ser localizado.</param>
      <param name="versionMatch">Um dos valores de <see cref="T:System.Security.Policy.ApplicationVersionMatch" />.</param>
      <returns>Um <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> que contém todos os objetos <see cref="T:System.Security.Policy.ApplicationTrust" /> correspondentes.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.GetEnumerator">
      <summary>Retorna um objeto que pode ser usado para iterar na coleção.</summary>
      <returns>Um <see cref="T:System.Security.Policy.ApplicationTrustEnumerator" /> que pode ser usado para iterar pela coleção.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.Remove(System.ApplicationIdentity,System.Security.Policy.ApplicationVersionMatch)">
      <summary>Remove todos os objetos de confiança do aplicativo que correspondem aos critérios especificados da coleção.</summary>
      <param name="applicationIdentity">O <see cref="T:System.ApplicationIdentity" /> do objeto <see cref="T:System.Security.Policy.ApplicationTrust" /> a ser removido.</param>
      <param name="versionMatch">Um dos valores de <see cref="T:System.Security.Policy.ApplicationVersionMatch" />.</param>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.Remove(System.Security.Policy.ApplicationTrust)">
      <summary>Remove a relação de confiança do aplicativo especificada da coleção.</summary>
      <param name="trust">O objeto <see cref="T:System.Security.Policy.ApplicationTrust" /> a ser removido.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="trust" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">A propriedade <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" /> do objeto <see cref="T:System.Security.Policy.ApplicationTrust" /> especificada por <paramref name="trust" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.RemoveRange(System.Security.Policy.ApplicationTrust[])">
      <summary>Remove os objetos de confiança do aplicativo na matriz especificada da coleção.</summary>
      <param name="trusts">Uma matriz unidimensional de tipo <see cref="T:System.Security.Policy.ApplicationTrust" /> que contém itens a serem removidos da coleção atual.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="trusts" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.RemoveRange(System.Security.Policy.ApplicationTrustCollection)">
      <summary>Remove os objetos de confiança do aplicativo na coleção especificada da coleção.</summary>
      <param name="trusts">Um <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> que contém itens a serem removidos da coleção atual.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="trusts" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia os elementos da <see cref="T:System.Collections.ICollection" /> para o <see cref="T:System.Array" /> especificado, começando no índice <see cref="T:System.Array" /> especificado.</summary>
      <param name="array">Um <see cref="T:System.Array" /> unidimensional que é o destino dos elementos copiados do <see cref="T:System.Collections.ICollection" />. O <see cref="T:System.Array" /> deve ter indexação com base em zero.</param>
      <param name="index">O índice com base em zero em <paramref name="array" /> no qual a cópia começa.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> é menor que zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> é multidimensional.  
  
- ou - 
O número de elementos na origem <see cref="T:System.Collections.ICollection" /> é maior do que o espaço disponível de <paramref name="index" /> até o final do <paramref name="array" /> de destino.</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retorna um enumerador que itera pela coleção.</summary>
      <returns>Um <see cref="T:System.Collections.IEnumerator" /> que pode ser usado para iterar pela coleção.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustCollection.Count">
      <summary>Obtém o número de itens contidos na coleção.</summary>
      <returns>O número de itens contidos na coleção.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustCollection.IsSynchronized">
      <summary>Obtém um valor que indica se o acesso à coleção é sincronizado (thread-safe).</summary>
      <returns>
        <see langword="false" /> em todos os casos.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustCollection.Item(System.Int32)">
      <summary>Obtém o objeto <see cref="T:System.Security.Policy.ApplicationTrust" /> localizado no índice especificado na coleção.</summary>
      <param name="index">O índice baseado em zero do objeto dentro da coleção.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> é maior ou igual à contagem de objetos na coleção.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="index" /> é negativo.</exception>
      <returns>O objeto <see cref="T:System.Security.Policy.ApplicationTrust" /> no índice especificado na coleção.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustCollection.Item(System.String)">
      <summary>Obtém o objeto <see cref="T:System.Security.Policy.ApplicationTrust" /> para o aplicativo especificado.</summary>
      <param name="appFullName">O nome completo do aplicativo.</param>
      <returns>O <see cref="T:System.Security.Policy.ApplicationTrust" /> objeto para o aplicativo especificado ou <see langword="null" /> se o objeto não puder ser encontrado.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustCollection.SyncRoot">
      <summary>Obtém um objeto que pode ser usado para sincronizar o acesso à coleção.</summary>
      <returns>O objeto a ser usado para sincronizar o acesso à coleção.</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationTrustEnumerator">
      <summary>Representa o enumerador para objetos <see cref="T:System.Security.Policy.ApplicationTrust" /> na coleção <see cref="T:System.Security.Policy.ApplicationTrustCollection" />.</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustEnumerator.MoveNext">
      <summary>Move para o próximo elemento na coleção <see cref="T:System.Security.Policy.ApplicationTrustCollection" />.</summary>
      <returns>
        <see langword="true" /> se o enumerador foi avançado com êxito para o próximo elemento; <see langword="false" /> se o enumerador passou o final da coleção.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustEnumerator.Reset">
      <summary>Redefine o enumerador para o início da coleção <see cref="T:System.Security.Policy.ApplicationTrustCollection" />.</summary>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustEnumerator.Current">
      <summary>Obtém o objeto <see cref="T:System.Security.Policy.ApplicationTrust" /> atual na coleção <see cref="T:System.Security.Policy.ApplicationTrustCollection" />.</summary>
      <returns>O atual <see cref="T:System.Security.Policy.ApplicationTrust" /> no <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> .</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current">
      <summary>Obtém o <see cref="T:System.Object" /> atual na coleção <see cref="T:System.Security.Policy.ApplicationTrustCollection" />.</summary>
      <returns>O atual <see cref="T:System.Object" /> no <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> .</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationVersionMatch">
      <summary>Especifica como fazer a correspondência de versões quando localizar relações de confiança de aplicativo em uma coleção.</summary>
    </member>
    <member name="F:System.Security.Policy.ApplicationVersionMatch.MatchAllVersions">
      <summary>Corresponder em todas as versões.</summary>
    </member>
    <member name="F:System.Security.Policy.ApplicationVersionMatch.MatchExactVersion">
      <summary>Corresponder na versão exata.</summary>
    </member>
    <member name="T:System.Security.Policy.CodeConnectAccess">
      <summary>Especifica o acesso de recurso de rede que é concedido ao código.</summary>
    </member>
    <member name="F:System.Security.Policy.CodeConnectAccess.AnyScheme">
      <summary>Contém o valor de cadeia de caracteres que representa o caractere curinga de esquema.</summary>
    </member>
    <member name="F:System.Security.Policy.CodeConnectAccess.DefaultPort">
      <summary>Contém o valor usado para representar a porta padrão.</summary>
    </member>
    <member name="F:System.Security.Policy.CodeConnectAccess.OriginPort">
      <summary>Contém o valor usado para representar o valor da porta no URI em que o código é originado.</summary>
    </member>
    <member name="F:System.Security.Policy.CodeConnectAccess.OriginScheme">
      <summary>Contém o valor usado para representar o esquema na URL em que o código é originado.</summary>
    </member>
    <member name="M:System.Security.Policy.CodeConnectAccess.#ctor(System.String,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Policy.CodeConnectAccess" />.</summary>
      <param name="allowScheme">O esquema do URI representado pela instância atual.</param>
      <param name="allowPort">A porta representada pela instância atual.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="allowScheme" /> é <see langword="null" />.  
  
- ou - 
 <paramref name="allowScheme" /> é uma cadeia de caracteres vazia ("").  
  
- ou - 
 <paramref name="allowScheme" /> contém caracteres que não são permitidos em esquemas.  
  
- ou - 
 <paramref name="allowPort" /> é menor que 0.  
  
- ou - 
 <paramref name="allowPort" /> é maior que 65.535.</exception>
    </member>
    <member name="M:System.Security.Policy.CodeConnectAccess.CreateAnySchemeAccess(System.Int32)">
      <summary>Retorna uma instância <see cref="T:System.Security.Policy.CodeConnectAccess" /> que representa o acesso à porta especificada usando qualquer esquema.</summary>
      <param name="allowPort">A porta representada pela instância retornada.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="allowPort" /> é menor que 0.  
  
- ou - 
 <paramref name="allowPort" /> é maior que 65.535.</exception>
      <returns>Uma instância <see cref="T:System.Security.Policy.CodeConnectAccess" /> para a porta especificada.</returns>
    </member>
    <member name="M:System.Security.Policy.CodeConnectAccess.CreateOriginSchemeAccess(System.Int32)">
      <summary>Retorna uma instância <see cref="T:System.Security.Policy.CodeConnectAccess" /> que representa o acesso à porta especificada usando o esquema de origem do código.</summary>
      <param name="allowPort">A porta representada pela instância retornada.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="allowPort" /> é menor que 0.  
  
- ou - 
 <paramref name="allowPort" /> é maior que 65.535.</exception>
      <returns>Uma instância <see cref="T:System.Security.Policy.CodeConnectAccess" /> para a porta especificada.</returns>
    </member>
    <member name="M:System.Security.Policy.CodeConnectAccess.Equals(System.Object)">
      <summary>Retorna um valor que indica se dois objetos <see cref="T:System.Security.Policy.CodeConnectAccess" /> representam o mesmo esquema e porta.</summary>
      <param name="o">O objeto a ser comparado com o objeto <see cref="T:System.Security.Policy.CodeConnectAccess" /> atual.</param>
      <returns>
        <see langword="true" /> se os dois objetos representarem o mesmo esquema e porta, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.CodeConnectAccess.GetHashCode">
      <summary>Serve como uma função hash para um tipo particular.</summary>
      <returns>Um código hash do <see cref="T:System.Object" /> atual.</returns>
    </member>
    <member name="P:System.Security.Policy.CodeConnectAccess.Port">
      <summary>Obtém a porta representada pela instância atual.</summary>
      <returns>Um <see cref="T:System.Int32" /> valor que identifica uma porta de computador usada em conjunto com a <see cref="P:System.Security.Policy.CodeConnectAccess.Scheme" /> propriedade.</returns>
    </member>
    <member name="P:System.Security.Policy.CodeConnectAccess.Scheme">
      <summary>Obtém o esquema do URI representado pela instância atual.</summary>
      <returns>Um <see cref="T:System.String" /> que identifica um esquema de URI, convertido em minúsculas.</returns>
    </member>
    <member name="T:System.Security.Policy.CodeGroup">
      <summary>Representa a classe base abstrata da qual todas as implementações de grupos de códigos devem derivar.</summary>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
      <summary>Inicializa uma nova instância de <see cref="T:System.Security.Policy.CodeGroup" />.</summary>
      <param name="membershipCondition">Uma condição de associação que testa a evidência para determinar se este grupo de códigos aplica a política.</param>
      <param name="policy">A declaração de política para o grupo de códigos na forma de um conjunto de permissões e atributos a serem concedidos a código que corresponda à condição de associação.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="membershipCondition" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O tipo do parâmetro <paramref name="membershipCondition" /> não é válido.  
  
- ou - 
O tipo do parâmetro <paramref name="policy" /> não é válido.</exception>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.AddChild(System.Security.Policy.CodeGroup)">
      <summary>Adiciona um grupo de códigos filho ao grupo de códigos adicional.</summary>
      <param name="group">O grupo de códigos a ser adicionado como um filho. Esse novo grupo de códigos filho é adicionado ao final da lista.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="group" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="group" /> não é um grupo de códigos válido.</exception>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.Copy">
      <summary>Quando substituído em uma classe derivada, cria uma cópia em profundidade do grupo de códigos atual.</summary>
      <returns>Uma cópia equivalente do grupo de códigos atual, incluindo as respectivas condições de associação e grupos de códigos filhos.</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Quando substituído em uma classe derivada, serializa as propriedades e o estado interno específicos a um grupo de códigos derivado e adiciona a serialização ao <see cref="T:System.Security.SecurityElement" /> especificado.</summary>
      <param name="element">A codificação XML à qual adicionar a serialização.</param>
      <param name="level">O nível de política no qual existe o grupo de códigos.</param>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.Equals(System.Object)">
      <summary>Determina se o grupo de códigos especificado é equivalente ao grupo de códigos atual.</summary>
      <param name="o">O grupo de códigos a ser comparado com o grupo de códigos atual.</param>
      <returns>
        <see langword="true" /> se o grupo de códigos especificado for equivalente ao grupo de códigos atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.Equals(System.Security.Policy.CodeGroup,System.Boolean)">
      <summary>Determina se o grupo de códigos especificado é equivalente ao grupo de códigos atual, verificando os grupos de códigos filho também, se especificado.</summary>
      <param name="cg">O grupo de códigos a ser comparado com o grupo de códigos atual.</param>
      <param name="compareChildren">
        <see langword="true" /> para comparar os grupos de códigos filho também, caso contrário, <see langword="false" />.</param>
      <returns>
        <see langword="true" /> se o grupo de códigos especificado for equivalente ao grupo de códigos atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)">
      <summary>Recria um objeto de segurança com um estado determinado de uma codificação XML.</summary>
      <param name="e">A codificação XML a ser usada para reconstruir o objeto de segurança.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="e" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Recria um objeto de segurança com um estado e um nível de política determinados de uma codificação XML.</summary>
      <param name="e">A codificação XML a ser usada para reconstruir o objeto de segurança.</param>
      <param name="level">O nível de política no qual existe o grupo de códigos.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="e" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.GetHashCode">
      <summary>Obtém o código hash do grupo de códigos atual.</summary>
      <returns>O código hash do grupo de códigos atual.</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Quando substituído em uma classe derivada, recria as propriedades e o estado interno específicos para um grupo de códigos derivado do <see cref="T:System.Security.SecurityElement" /> especificado.</summary>
      <param name="e">A codificação XML a ser usada para reconstruir o objeto de segurança.</param>
      <param name="level">O nível de política no qual existe o grupo de códigos.</param>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.RemoveChild(System.Security.Policy.CodeGroup)">
      <summary>Remove o grupo de códigos filho especificado.</summary>
      <param name="group">O grupo de códigos a ser removido como um filho.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="group" /> não é um grupo de códigos filho imediato do grupo de códigos atual.</exception>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.Resolve(System.Security.Policy.Evidence)">
      <summary>Quando substituída em uma classe derivada, resolve a política para o grupo de códigos e seus descendentes para um conjunto de evidências.</summary>
      <param name="evidence">A evidência para o assembly.</param>
      <returns>Uma declaração de política que consiste das permissões concedidas pelo grupo de códigos com atributos opcionais ou então <see langword="null" /> se o grupo de códigos não se aplica (se a condição de associação não corresponde à evidência especificada).</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary>Quando substituído em uma classe derivada, resolve os grupos de códigos correspondentes.</summary>
      <param name="evidence">A evidência para o assembly.</param>
      <returns>Um <see cref="T:System.Security.Policy.CodeGroup" /> que é a raiz da árvore de grupos de código correspondentes.</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.ToXml">
      <summary>Cria uma codificação XML do objeto de segurança e seu estado atual.</summary>
      <returns>Uma codificação XML do objeto de segurança, incluindo quaisquer informações de estado.</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>Cria uma codificação de XML do objeto de segurança, seu estado atual e o nível de política no qual o código existe.</summary>
      <param name="level">O nível de política no qual existe o grupo de códigos.</param>
      <returns>Uma codificação XML do objeto de segurança, incluindo quaisquer informações de estado.</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.AttributeString">
      <summary>Obtém uma representação de cadeia de caracteres dos atributos da declaração de política para o grupo de códigos.</summary>
      <returns>Uma representação de cadeia de caracteres dos atributos da instrução de política para o grupo de códigos.</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.Children">
      <summary>Obtém ou define uma lista ordenada dos grupos de códigos filho de um grupo de códigos.</summary>
      <exception cref="T:System.ArgumentNullException">É feita uma tentativa de definir essa propriedade como <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">É feita uma tentativa de definir essa propriedade com uma lista de filhos que não são objetos <see cref="T:System.Security.Policy.CodeGroup" />.</exception>
      <returns>Uma lista de grupos de códigos filho.</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.Description">
      <summary>Obtém ou define a descrição do grupo de códigos.</summary>
      <returns>A descrição do grupo de códigos.</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.MembershipCondition">
      <summary>Obtém ou define a condição de associação do grupo de códigos.</summary>
      <exception cref="T:System.ArgumentNullException">É feita uma tentativa de definir esse parâmetro como <see langword="null" />.</exception>
      <returns>A condição de associação que determina a quais evidências o grupo de códigos é aplicável.</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.MergeLogic">
      <summary>Quando substituído em uma classe derivada, obtém a lógica de mesclagem para o grupo de códigos.</summary>
      <returns>Uma descrição da lógica de mesclagem do grupo de códigos.</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.Name">
      <summary>Obtém ou define o nome do grupo de códigos.</summary>
      <returns>O nome do grupo de códigos.</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.PermissionSetName">
      <summary>Obtém o nome do conjunto de permissões nomeadas para o grupo de códigos.</summary>
      <returns>O nome de um conjunto de permissões nomeadas do nível de política.</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.PolicyStatement">
      <summary>Obtém ou define a declaração de política associada ao grupo de códigos.</summary>
      <returns>A declaração de política para o grupo de códigos.</returns>
    </member>
    <member name="T:System.Security.Policy.Evidence">
      <summary>Define o conjunto de informações que constituem a entrada para decisões de política de segurança. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Policy.Evidence.#ctor">
      <summary>Inicializa uma nova instância vazia da classe <see cref="T:System.Security.Policy.Evidence" />.</summary>
    </member>
    <member name="M:System.Security.Policy.Evidence.#ctor(System.Object[],System.Object[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Policy.Evidence" /> de vários conjuntos de evidência de assembly e de host.</summary>
      <param name="hostEvidence">A evidência do host do qual criar a nova instância.</param>
      <param name="assemblyEvidence">A evidência do assembly da qual criar a nova instância.</param>
    </member>
    <member name="M:System.Security.Policy.Evidence.#ctor(System.Security.Policy.Evidence)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Policy.Evidence" /> de uma cópia superficial de outra existente.</summary>
      <param name="evidence">A instância de <see cref="T:System.Security.Policy.Evidence" /> da qual criar a nova instância. Esta instância não é copiada profundamente.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="evidence" /> não é uma instância de valor de <see cref="T:System.Security.Policy.Evidence" />.</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.#ctor(System.Security.Policy.EvidenceBase[],System.Security.Policy.EvidenceBase[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Policy.Evidence" /> de vários conjuntos de evidência de assembly e de host.</summary>
      <param name="hostEvidence">A evidência do host do qual criar a nova instância.</param>
      <param name="assemblyEvidence">A evidência do assembly da qual criar a nova instância.</param>
    </member>
    <member name="M:System.Security.Policy.Evidence.AddAssembly(System.Object)">
      <summary>Adiciona a evidência de assembly especificada ao conjunto de evidências.</summary>
      <param name="id">Qualquer objeto de evidência.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> é nulo.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="id" /> não pode ser serializado.</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.AddAssemblyEvidence``1(``0)">
      <summary>Adiciona um objeto de evidência do tipo especificado à lista de evidências fornecida pelo assembly.</summary>
      <param name="evidence">A evidência do assembly a ser adicionada.</param>
      <typeparam name="T">O tipo do objeto no <paramref name="evidence" /> .</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Evidência do tipo <paramref name="T" /> já está na lista.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="evidence" /> não pode ser serializado.</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.AddHost(System.Object)">
      <summary>Adiciona a evidência especificada fornecida pelo host para o conjunto de evidências.</summary>
      <param name="id">Qualquer objeto de evidência.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> é nulo.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="id" /> não pode ser serializado.</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.AddHostEvidence``1(``0)">
      <summary>Adiciona evidência de host do tipo especificado à coleção de evidências de host.</summary>
      <param name="evidence">A evidência de host a ser adicionada.</param>
      <typeparam name="T">O tipo do objeto no <paramref name="evidence" /> .</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Evidência do tipo <paramref name="T" /> já está na lista.</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.Clear">
      <summary>Remove a evidência de host e de assembly do conjunto de evidência.</summary>
    </member>
    <member name="M:System.Security.Policy.Evidence.Clone">
      <summary>Retorna uma duplicata deste objeto de evidência.</summary>
      <returns>Uma duplicata deste objeto de evidência.</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.CopyTo(System.Array,System.Int32)">
      <summary>Copia objetos de evidência em um <see cref="T:System.Array" />.</summary>
      <param name="array">A matriz de destino para os objetos de evidência a serem copiados.</param>
      <param name="index">A posição de base zero na matriz para o qual começar a copiar objetos de evidência.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é nulo.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> está fora do intervalo da matriz de destino.</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.GetAssemblyEnumerator">
      <summary>Enumera a evidência fornecida pelo assembly.</summary>
      <returns>Um enumerador para evidência adicionada pelo método <see cref="M:System.Security.Policy.Evidence.AddAssembly(System.Object)" />.</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.GetAssemblyEvidence``1">
      <summary>Obtém a evidência de assembly do tipo especificado da coleção.</summary>
      <typeparam name="T">O tipo de evidência a ser obtido.</typeparam>
      <returns>Evidência do tipo <paramref name="T" /> na coleção de evidências de assembly.</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.GetEnumerator">
      <summary>Enumera todas as evidências no conjunto, tanto fornecidas pelo host quanto fornecidas pelo assembly.</summary>
      <returns>Um enumerador para evidência adicionado por ambos os métodos <see cref="M:System.Security.Policy.Evidence.AddHost(System.Object)" /> e <see cref="M:System.Security.Policy.Evidence.AddAssembly(System.Object)" />.</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.GetHostEnumerator">
      <summary>Enumera a evidência fornecida pelo host.</summary>
      <returns>Um enumerador para evidência adicionada pelo método <see cref="M:System.Security.Policy.Evidence.AddHost(System.Object)" />.</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.GetHostEvidence``1">
      <summary>Obtém a evidência do host do tipo especificado da coleção.</summary>
      <typeparam name="T">O tipo de evidência a ser obtido.</typeparam>
      <returns>Evidência do tipo <paramref name="T" /> na coleção de evidências de host.</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.Merge(System.Security.Policy.Evidence)">
      <summary>Mescla o conjunto de evidências especificado com o conjunto de evidências atual.</summary>
      <param name="evidence">O conjunto de evidências a ser mesclado com o conjunto de evidência atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="evidence" /> não é uma instância de valor de <see cref="T:System.Security.Policy.Evidence" />.</exception>
      <exception cref="T:System.Security.SecurityException">
        <see cref="P:System.Security.Policy.Evidence.Locked" /> é <see langword="true" />, o código que chama esse método não tem <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /> e o parâmetro <paramref name="evidence" /> tem uma lista de hosts que não está vazia.</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.RemoveType(System.Type)">
      <summary>Remove a evidência de determinado tipo das enumerações de host e de assembly.</summary>
      <param name="t">O tipo de evidência a ser removido.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="t" /> é nulo.</exception>
    </member>
    <member name="P:System.Security.Policy.Evidence.Count">
      <summary>Obtém o número de objetos de evidência no conjunto de evidências.</summary>
      <returns>O número de objetos de evidência no conjunto de evidências.</returns>
    </member>
    <member name="P:System.Security.Policy.Evidence.IsReadOnly">
      <summary>Obtém um valor que indica se o conjunto de evidências é somente leitura.</summary>
      <returns>Sempre <see langword="false" /> , porque não há suporte para conjuntos de evidência somente leitura.</returns>
    </member>
    <member name="P:System.Security.Policy.Evidence.IsSynchronized">
      <summary>Obtém um valor que indica se o conjunto de evidências é thread-safe.</summary>
      <returns>Sempre <see langword="false" /> porque não há suporte para conjuntos de evidência thread-safe.</returns>
    </member>
    <member name="P:System.Security.Policy.Evidence.Locked">
      <summary>Obtém ou define um valor que indica se a evidência está bloqueada.</summary>
      <returns>
        <see langword="true" /> se a evidência estiver bloqueada; caso contrário, <see langword="false" /> . O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Policy.Evidence.SyncRoot">
      <summary>Obtém a raiz de sincronização.</summary>
      <returns>Sempre <see langword="this" /> ( <see langword="Me" /> em Visual Basic), porque não há suporte para a sincronização de conjuntos de evidência.</returns>
    </member>
    <member name="T:System.Security.Policy.EvidenceBase">
      <summary>Fornece uma classe base da qual todos os objetos a serem usadas como evidência precisam derivar.</summary>
    </member>
    <member name="M:System.Security.Policy.EvidenceBase.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Policy.EvidenceBase" />.</summary>
      <exception cref="T:System.InvalidOperationException">Um objeto a ser usado como evidência não é serializável.</exception>
    </member>
    <member name="M:System.Security.Policy.EvidenceBase.Clone">
      <summary>Cria um novo objeto que é uma cópia completa da instância atual.</summary>
      <returns>Uma duplicata deste objeto de evidência.</returns>
    </member>
    <member name="T:System.Security.Policy.FileCodeGroup">
      <summary>Concede permissão para manipular os arquivos localizados em assemblies de código para assemblies de código que correspondem à condição de associação. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Permissions.FileIOPermissionAccess)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Policy.FileCodeGroup" />.</summary>
      <param name="membershipCondition">Uma condição de associação que testa a evidência para determinar se este grupo de códigos aplica a política.</param>
      <param name="access">Um dos valores de <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />. Esse valor é usado para construir o <see cref="T:System.Security.Permissions.FileIOPermission" /> que é concedido.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="membershipCondition" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O tipo do parâmetro <paramref name="membershipCondition" /> não é válido.  
  
- ou - 
O tipo do parâmetro <paramref name="access" /> não é válido.</exception>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.Copy">
      <summary>Faz uma cópia em profundidade do grupo de códigos atual.</summary>
      <returns>Uma cópia equivalente do grupo de códigos atual, incluindo as respectivas condições de associação e grupos de códigos filhos.</returns>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.Equals(System.Object)">
      <summary>Determina se o grupo de códigos especificado é equivalente ao grupo de códigos atual.</summary>
      <param name="o">O grupo de códigos a ser comparado com o grupo de códigos atual.</param>
      <returns>
        <see langword="true" /> se o grupo de códigos especificado for equivalente ao grupo de códigos atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.GetHashCode">
      <summary>Obtém o código hash do grupo de códigos atual.</summary>
      <returns>O código hash do grupo de códigos atual.</returns>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.Resolve(System.Security.Policy.Evidence)">
      <summary>Resolve a política para o grupo de códigos e seus descendentes para um conjunto de evidências.</summary>
      <param name="evidence">A evidência para o assembly.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="evidence" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Security.Policy.PolicyException">A política atual é <see langword="null" />.  
  
- ou - 
Mais de um grupo de códigos (incluindo o grupo de códigos pai e todos os grupos de códigos filhos) está marcado como <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />.</exception>
      <returns>Uma declaração de política que consiste das permissões concedidas pelo grupo de códigos com atributos opcionais ou <see langword="null" />, se o grupo de códigos não se aplica (se a condição de associação não corresponde à evidência especificada).</returns>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary>Resolve os grupos de códigos correspondentes.</summary>
      <param name="evidence">A evidência para o assembly.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="evidence" /> é <see langword="null" />.</exception>
      <returns>Um <see cref="T:System.Security.Policy.CodeGroup" /> que é a raiz da árvore de grupos de código correspondentes.</returns>
    </member>
    <member name="P:System.Security.Policy.FileCodeGroup.AttributeString">
      <summary>Obtém uma representação de cadeia de caracteres dos atributos da declaração de política para o grupo de códigos.</summary>
      <returns>Sempre <see langword="null" />.</returns>
    </member>
    <member name="P:System.Security.Policy.FileCodeGroup.MergeLogic">
      <summary>Obtém a lógica de mesclagem.</summary>
      <returns>A cadeia de caracteres "Union".</returns>
    </member>
    <member name="P:System.Security.Policy.FileCodeGroup.PermissionSetName">
      <summary>Obtém o nome do conjunto de permissões nomeadas para o grupo de códigos.</summary>
      <returns>A concatenação da cadeia de caracteres "mesmo diretório FileIO-" e o tipo de acesso.</returns>
    </member>
    <member name="T:System.Security.Policy.FirstMatchCodeGroup">
      <summary>Permite que a política de segurança a ser definida pela união da declaração de política de um grupo de códigos e aquela do primeiro grupo de códigos filho que corresponda. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Policy.FirstMatchCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Policy.FirstMatchCodeGroup" />.</summary>
      <param name="membershipCondition">Uma condição de associação que testa a evidência para determinar se este grupo de códigos aplica a política.</param>
      <param name="policy">A declaração de política para o grupo de códigos na forma de um conjunto de permissões e atributos a serem concedidos a código que corresponda à condição de associação.</param>
      <exception cref="T:System.ArgumentException">O tipo do parâmetro <paramref name="membershipCondition" /> não é válido.  
  
- ou - 
O tipo do parâmetro <paramref name="policy" /> não é válido.</exception>
    </member>
    <member name="M:System.Security.Policy.FirstMatchCodeGroup.Copy">
      <summary>Faz uma cópia em profundidade do grupo de códigos.</summary>
      <returns>Uma cópia equivalente do grupo de códigos, incluindo as respectivas condições de associação e grupos de códigos filhos.</returns>
    </member>
    <member name="M:System.Security.Policy.FirstMatchCodeGroup.Resolve(System.Security.Policy.Evidence)">
      <summary>Resolve a política para o grupo de códigos e seus descendentes para um conjunto de evidências.</summary>
      <param name="evidence">A evidência para o assembly.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="evidence" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Security.Policy.PolicyException">Mais de um grupo de códigos (incluindo o grupo de códigos pai e os grupos de códigos filhos) está marcado como <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />.</exception>
      <returns>Uma declaração de política que consiste das permissões concedidas pelo grupo de códigos com atributos opcionais ou <see langword="null" />, se o grupo de códigos não se aplica (se a condição de associação não corresponde à evidência especificada).</returns>
    </member>
    <member name="M:System.Security.Policy.FirstMatchCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary>Resolve os grupos de códigos correspondentes.</summary>
      <param name="evidence">A evidência para o assembly.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="evidence" /> é <see langword="null" />.</exception>
      <returns>Um <see cref="T:System.Security.Policy.CodeGroup" /> que é a raiz da árvore de grupos de código correspondentes.</returns>
    </member>
    <member name="P:System.Security.Policy.FirstMatchCodeGroup.MergeLogic">
      <summary>Obtém a lógica de mesclagem.</summary>
      <returns>A cadeia de caracteres "primeira correspondência".</returns>
    </member>
    <member name="T:System.Security.Policy.GacInstalled">
      <summary>Confirma que um assembly de código é originado no GAC (cache de assembly global) como evidência para avaliação de política. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Policy.GacInstalled" />.</summary>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.Copy">
      <summary>Cria uma cópia equivalente do objeto atual.</summary>
      <returns>Uma cópia equivalente de <see cref="T:System.Security.Policy.GacInstalled" />.</returns>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>Cria uma nova permissão de identidade que corresponde ao objeto atual.</summary>
      <param name="evidence">O <see cref="T:System.Security.Policy.Evidence" /> do qual criar a permissão de identidade.</param>
      <returns>Uma nova permissão de identidade que corresponde ao objeto atual.</returns>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.Equals(System.Object)">
      <summary>indica se o objeto especificado é igual ao objeto atual.</summary>
      <param name="o">O objeto a ser comparado com o objeto atual.</param>
      <returns>
        <see langword="true" /> se <paramref name="o" /> é um objeto <see cref="T:System.Security.Policy.GacInstalled" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.GetHashCode">
      <summary>Retorna um código hash para o objeto atual.</summary>
      <returns>Um código hash do objeto atual.</returns>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.ToString">
      <summary>Retorna uma representação de cadeia de caracteres do objeto atual.</summary>
      <returns>Uma representação de cadeia de caracteres do objeto atual.</returns>
    </member>
    <member name="T:System.Security.Policy.GacMembershipCondition">
      <summary>Determina se um assembly pertence a um grupo de códigos testando sua associação de cache de assembly global. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Policy.GacMembershipCondition" />.</summary>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>Indica se a evidência especificada satisfaz a condição de associação.</summary>
      <param name="evidence">O <see cref="T:System.Security.Policy.Evidence" /> no qual realizar o teste.</param>
      <returns>
        <see langword="true" /> se a evidência especificada satisfizer a condição de associação; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.Copy">
      <summary>Cria uma cópia equivalente da condição de associação.</summary>
      <returns>Um novo objeto <see cref="T:System.Security.Policy.GacMembershipCondition" />.</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.Equals(System.Object)">
      <summary>indica se o objeto especificado é igual ao objeto atual.</summary>
      <param name="o">O objeto a ser comparado com o objeto atual.</param>
      <returns>
        <see langword="true" /> se <paramref name="o" /> for um <see cref="T:System.Security.Policy.GacMembershipCondition" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>Usa a codificação XML especificada para reconstruir um objeto de segurança.</summary>
      <param name="e">O <see cref="T:System.Security.SecurityElement" /> que contém a codificação XML a ser usada para reconstruir o objeto de segurança.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> não é um elemento de condição de associação válido.</exception>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Usa a codificação XML especificada para reconstruir um objeto de segurança, usando o contexto do nível de política especificado.</summary>
      <param name="e">O <see cref="T:System.Security.SecurityElement" /> que contém a codificação XML a ser usada para reconstruir o objeto de segurança.</param>
      <param name="level">O contexto <see cref="T:System.Security.Policy.PolicyLevel" /> para resolver referências <see cref="T:System.Security.NamedPermissionSet" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> não é um elemento de condição de associação válido.</exception>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.GetHashCode">
      <summary>Obtém um código hash para a condição de associação atual.</summary>
      <returns>0 (zero).</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.ToString">
      <summary>Retorna uma representação de cadeia de caracteres da condição de associação.</summary>
      <returns>Uma representação de cadeia de caracteres da condição de associação.</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.ToXml">
      <summary>Cria uma codificação XML do objeto de segurança e seu estado atual.</summary>
      <returns>Um <see cref="T:System.Security.SecurityElement" /> que contém a codificação XML do objeto de segurança, incluindo quaisquer informações de estado.</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>Cria uma codificação XML do objeto de segurança e de seu estado atual, usando o contexto de nível de política especificado.</summary>
      <param name="level">O contexto <see cref="T:System.Security.Policy.PolicyLevel" /> para resolver referências <see cref="T:System.Security.NamedPermissionSet" />.</param>
      <returns>Um <see cref="T:System.Security.SecurityElement" /> que contém a codificação XML do objeto de segurança, incluindo quaisquer informações de estado.</returns>
    </member>
    <member name="T:System.Security.Policy.Hash">
      <summary>Fornece evidência sobre o valor de hash para um assembly. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Policy.Hash.#ctor(System.Reflection.Assembly)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Policy.Hash" />.</summary>
      <param name="assembly">O assembly para o qual o calcular o valor de hash.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="assembly" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assembly" /> não é um objeto <see cref="T:System.Reflection.Assembly" /> de tempo de execução.</exception>
    </member>
    <member name="M:System.Security.Policy.Hash.CreateMD5(System.Byte[])">
      <summary>Cria um objeto <see cref="T:System.Security.Policy.Hash" /> que contém um valor de hash <see cref="T:System.Security.Cryptography.MD5" />.</summary>
      <param name="md5">Uma matriz de bytes que contém um valor de hash <see cref="T:System.Security.Cryptography.MD5" />.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="md5" /> é <see langword="null" />.</exception>
      <returns>Um objeto que contém o valor de hash fornecido pelo parâmetro <paramref name="md5" />.</returns>
    </member>
    <member name="M:System.Security.Policy.Hash.CreateSHA1(System.Byte[])">
      <summary>Cria um objeto <see cref="T:System.Security.Policy.Hash" /> que contém um valor de hash <see cref="T:System.Security.Cryptography.SHA1" />.</summary>
      <param name="sha1">Uma matriz de bytes que contém um valor de hash <see cref="T:System.Security.Cryptography.SHA1" />.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="sha1" /> é <see langword="null" />.</exception>
      <returns>Um objeto que contém o valor de hash fornecido pelo parâmetro <paramref name="sha1" />.</returns>
    </member>
    <member name="M:System.Security.Policy.Hash.CreateSHA256(System.Byte[])">
      <summary>Cria um objeto <see cref="T:System.Security.Policy.Hash" /> que contém um valor de hash <see cref="T:System.Security.Cryptography.SHA256" />.</summary>
      <param name="sha256">Uma matriz de bytes que contém um valor de hash <see cref="T:System.Security.Cryptography.SHA256" />.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="sha256" /> é <see langword="null" />.</exception>
      <returns>Um objeto de hash que contém o valor de hash fornecido pelo parâmetro <paramref name="sha256" />.</returns>
    </member>
    <member name="M:System.Security.Policy.Hash.GenerateHash(System.Security.Cryptography.HashAlgorithm)">
      <summary>Calcula o valor de hash para o assembly usando o algoritmo de hash especificado.</summary>
      <param name="hashAlg">O algoritmo de hash a ser usado para calcular o valor de hash para o assembly.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="hashAlg" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">O valor de hash do assembly não pode ser gerado.</exception>
      <returns>Uma matriz de bytes que representa o valor de hash para o assembly.</returns>
    </member>
    <member name="M:System.Security.Policy.Hash.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Obtém o objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> com o nome do parâmetro e informações adicionais de exceção.</summary>
      <param name="info">O objeto que mantém os dados de objeto serializados.</param>
      <param name="context">As informações contextuais sobre a origem ou o destino.</param>
    </member>
    <member name="M:System.Security.Policy.Hash.ToString">
      <summary>Retorna uma representação de cadeia de caracteres do <see cref="T:System.Security.Policy.Hash" /> atual.</summary>
      <returns>Uma representação do <see cref="T:System.Security.Policy.Hash" /> atual.</returns>
    </member>
    <member name="P:System.Security.Policy.Hash.MD5">
      <summary>Obtém o valor do hash <see cref="T:System.Security.Cryptography.MD5" /> para o assembly.</summary>
      <returns>Uma matriz de bytes que representa o <see cref="T:System.Security.Cryptography.MD5" /> valor de hash para o assembly.</returns>
    </member>
    <member name="P:System.Security.Policy.Hash.SHA1">
      <summary>Obtém o valor do hash <see cref="T:System.Security.Cryptography.SHA1" /> para o assembly.</summary>
      <returns>Uma matriz de bytes que representa o <see cref="T:System.Security.Cryptography.SHA1" /> valor de hash para o assembly.</returns>
    </member>
    <member name="P:System.Security.Policy.Hash.SHA256">
      <summary>Obtém o valor do hash <see cref="T:System.Security.Cryptography.SHA256" /> para o assembly.</summary>
      <returns>Uma matriz de bytes que representa o <see cref="T:System.Security.Cryptography.SHA256" /> valor de hash para o assembly.</returns>
    </member>
    <member name="T:System.Security.Policy.HashMembershipCondition">
      <summary>Determina se um assembly pertence a um grupo de códigos testando seu valor de hash. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.#ctor(System.Security.Cryptography.HashAlgorithm,System.Byte[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Policy.HashMembershipCondition" /> com o algoritmo de hash e o valor de hash que determinam a associação.</summary>
      <param name="hashAlg">O algoritmo de hash a ser usado para calcular o valor de hash para o assembly.</param>
      <param name="value">O valor de hash para o qual testar.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="hashAlg" /> é <see langword="null" />.  
  
- ou - 
O parâmetro <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="hashAlg" /> não é um algoritmo de hash válido.</exception>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>Determina se a evidência especificada satisfaz a condição de associação.</summary>
      <param name="evidence">O conjunto de evidências no qual realizar o teste.</param>
      <returns>
        <see langword="true" /> se a evidência especificada satisfizer a condição de associação; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.Copy">
      <summary>Cria uma cópia equivalente da condição de associação.</summary>
      <returns>Uma nova cópia idêntica da condição de associação atual.</returns>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.Equals(System.Object)">
      <summary>Determina se o <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" /> e o <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" /> do objeto especificado são equivalentes ao <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" /> e o <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" /> contidos na <see cref="T:System.Security.Policy.HashMembershipCondition" /> atual.</summary>
      <param name="o">O objeto a ser comparado com o <see cref="T:System.Security.Policy.HashMembershipCondition" /> atual.</param>
      <returns>
        <see langword="true" /> se o <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" /> e o <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" /> do objeto especificado forem equivalentes ao <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" /> e ao <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" /> contidos na <see cref="T:System.Security.Policy.HashMembershipCondition" /> atual, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói um objeto de segurança com um estado especificado de uma codificação XML.</summary>
      <param name="e">A codificação XML a ser usada para reconstruir o objeto de segurança.</param>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Reconstrói um objeto de segurança com um estado especificado de uma codificação XML.</summary>
      <param name="e">A codificação XML a ser usada para reconstruir o objeto de segurança.</param>
      <param name="level">O contexto do nível de política usado para resolver referências de conjunto de permissões nomeadas.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="e" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="e" /> não é um elemento de condição de associação válido.</exception>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.GetHashCode">
      <summary>Obtém o código hash para a condição de associação atual.</summary>
      <returns>O código hash para a condição de associação atual.</returns>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
      <summary>É executado quando o todo o grafo de objeto tiver sido desserializado.</summary>
      <param name="sender">O objeto que iniciou o retorno de chamada. A funcionalidade desse parâmetro não está implementada no momento.</param>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Popula um <see cref="T:System.Runtime.Serialization.SerializationInfo" /> com os dados necessários para serializar o objeto de destino.</summary>
      <param name="info">O <see cref="T:System.Runtime.Serialization.SerializationInfo" /> a ser preenchido com dados.</param>
      <param name="context">O destino <see cref="T:System.Runtime.Serialization.StreamingContext" /> dessa serialização.</param>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.ToString">
      <summary>Cria e retorna uma representação de cadeia de caracteres da condição de associação.</summary>
      <returns>Uma representação de cadeia de caracteres do estado da condição de associação.</returns>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.ToXml">
      <summary>Cria uma codificação XML do objeto de segurança e seu estado atual.</summary>
      <returns>Uma codificação XML do objeto de segurança, incluindo quaisquer informações de estado.</returns>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>Cria uma codificação XML do objeto de segurança e de seu estado atual com o <see cref="T:System.Security.Policy.PolicyLevel" /> especificado.</summary>
      <param name="level">O contexto do nível de política para resolver as referências do conjunto de permissões nomeadas.</param>
      <returns>Uma codificação XML do objeto de segurança, incluindo quaisquer informações de estado.</returns>
    </member>
    <member name="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm">
      <summary>Obtém ou define o algoritmo de hash a ser usado para a condição de associação.</summary>
      <exception cref="T:System.ArgumentNullException">É feita uma tentativa de definir <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" /> como <see langword="null" />.</exception>
      <returns>O algoritmo de hash a ser usado para a condição de associação.</returns>
    </member>
    <member name="P:System.Security.Policy.HashMembershipCondition.HashValue">
      <summary>Obtém ou define o valor de hash para o qual o teste da condição de associação é realizado.</summary>
      <exception cref="T:System.ArgumentNullException">É feita uma tentativa de definir <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" /> como <see langword="null" />.</exception>
      <returns>O valor de hash para o qual a condição de associação é testada.</returns>
    </member>
    <member name="T:System.Security.Policy.IIdentityPermissionFactory">
      <summary>Define o método que cria uma nova permissão de identidade.</summary>
    </member>
    <member name="M:System.Security.Policy.IIdentityPermissionFactory.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>Cria uma nova permissão de identidade para a evidência especificada.</summary>
      <param name="evidence">A evidência da qual criar a nova permissão de identidade.</param>
      <returns>A nova permissão de identidade.</returns>
    </member>
    <member name="T:System.Security.Policy.IMembershipCondition">
      <summary>Define o teste para determinar se um assembly de código é um membro de um grupo de códigos.</summary>
    </member>
    <member name="M:System.Security.Policy.IMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>Determina se a evidência especificada satisfaz a condição de associação.</summary>
      <param name="evidence">O conjunto de evidências no qual realizar o teste.</param>
      <returns>
        <see langword="true" /> se a evidência especificada satisfizer a condição de associação; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.IMembershipCondition.Copy">
      <summary>Cria uma cópia equivalente da condição de associação.</summary>
      <returns>Uma nova cópia idêntica da condição de associação atual.</returns>
    </member>
    <member name="M:System.Security.Policy.IMembershipCondition.Equals(System.Object)">
      <summary>Determina se o <see cref="T:System.Object" /> especificado é igual ao <see cref="T:System.Object" /> atual.</summary>
      <param name="obj">O <see cref="T:System.Object" /> a ser comparado com o <see cref="T:System.Object" /> atual.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Object" /> especificado for igual ao <see cref="T:System.Object" /> atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.IMembershipCondition.ToString">
      <summary>Cria e retorna uma representação de cadeia de caracteres da condição de associação.</summary>
      <returns>Uma representação de cadeia de caracteres do estado da condição de associação atual.</returns>
    </member>
    <member name="T:System.Security.Policy.NetCodeGroup">
      <summary>Concede permissão da Web para o site do qual o assembly foi baixado. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="F:System.Security.Policy.NetCodeGroup.AbsentOriginScheme">
      <summary>Contém um valor usado para especificar o acesso de conexão para o código com um esquema de origem desconhecido ou não reconhecido.</summary>
    </member>
    <member name="F:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme">
      <summary>Contém um valor usado para especificar qualquer outro esquema de origem não especificado.</summary>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.#ctor(System.Security.Policy.IMembershipCondition)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Policy.NetCodeGroup" />.</summary>
      <param name="membershipCondition">Uma condição de associação que testa a evidência para determinar se este grupo de códigos aplica a política de segurança de acesso do código.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="membershipCondition" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O tipo do parâmetro <paramref name="membershipCondition" /> não é válido.</exception>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)">
      <summary>Adiciona o acesso de conexão especificado ao grupo de códigos atual.</summary>
      <param name="originScheme">Um <see cref="T:System.String" /> que contém o esquema a ser correspondido ao esquema do código.</param>
      <param name="connectAccess">Um <see cref="T:System.Security.Policy.CodeConnectAccess" /> que especifica o esquema e a porta que o código pode usar para se conectar novamente ao seu servidor de origem.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="originScheme" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="originScheme" /> contém caracteres que não são permitidos em esquemas.  
  
- ou - 
 <paramref name="originScheme" /> = <see cref="F:System.Security.Policy.NetCodeGroup.AbsentOriginScheme" /> e <paramref name="connectAccess" /> especifica <see cref="F:System.Security.Policy.CodeConnectAccess.OriginScheme" /> como seu esquema.</exception>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.Copy">
      <summary>Faz uma cópia em profundidade do grupo de códigos atual.</summary>
      <returns>Uma cópia equivalente do grupo de códigos atual, incluindo as respectivas condições de associação e grupos de códigos filhos.</returns>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.Equals(System.Object)">
      <summary>Determina se o grupo de códigos especificado é equivalente ao grupo de códigos atual.</summary>
      <param name="o">O objeto <see cref="T:System.Security.Policy.NetCodeGroup" /> a ser comparado com o grupo de códigos atual.</param>
      <returns>
        <see langword="true" /> se o grupo de códigos especificado for equivalente ao grupo de códigos atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.GetConnectAccessRules">
      <summary>Obtém as informações de acesso de conexão para o grupo de códigos atual.</summary>
      <returns>Uma matriz <see cref="T:System.Collections.DictionaryEntry" /> que contém informações de acesso de conexão.</returns>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.GetHashCode">
      <summary>Obtém o código hash do grupo de códigos atual.</summary>
      <returns>O código hash do grupo de códigos atual.</returns>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.ResetConnectAccess">
      <summary>Remove todas as informações de acesso de conexão para o grupo de códigos atual.</summary>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.Resolve(System.Security.Policy.Evidence)">
      <summary>Resolve a política para o grupo de códigos e seus descendentes para um conjunto de evidências.</summary>
      <param name="evidence">O <see cref="T:System.Security.Policy.Evidence" /> para o assembly.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="evidence" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Security.Policy.PolicyException">Mais de um grupo de códigos (incluindo o grupo de códigos pai e os grupos de códigos filhos) está marcado como <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />.</exception>
      <returns>Um <see cref="T:System.Security.Policy.PolicyStatement" /> que consiste das permissões concedidas pelo grupo de códigos com atributos opcionais ou então <see langword="null" />, se o grupo de códigos não se aplica (se a condição de associação não corresponde à evidência especificada).</returns>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary>Resolve os grupos de códigos correspondentes.</summary>
      <param name="evidence">A evidência para o assembly.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="evidence" /> é <see langword="null" />.</exception>
      <returns>O conjunto completo de grupos de códigos que corresponderam à evidência.</returns>
    </member>
    <member name="P:System.Security.Policy.NetCodeGroup.AttributeString">
      <summary>Obtém uma representação de cadeia de caracteres dos atributos da declaração de política para o grupo de códigos.</summary>
      <returns>Sempre <see langword="null" />.</returns>
    </member>
    <member name="P:System.Security.Policy.NetCodeGroup.MergeLogic">
      <summary>Obtém a lógica a ser usada para mesclagem de grupos.</summary>
      <returns>A cadeia de caracteres "Union".</returns>
    </member>
    <member name="P:System.Security.Policy.NetCodeGroup.PermissionSetName">
      <summary>Obtém o nome do <see cref="T:System.Security.NamedPermissionSet" /> para o grupo de códigos.</summary>
      <returns>Sempre a cadeia de caracteres "mesma Web do site".</returns>
    </member>
    <member name="T:System.Security.Policy.PermissionRequestEvidence">
      <summary>Define a evidência que representa as solicitações de permissão. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Policy.PermissionRequestEvidence.#ctor(System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Policy.PermissionRequestEvidence" /> com a solicitação de permissão de um assembly de código.</summary>
      <param name="request">As permissões mínimas de que o código precisa para ser executado.</param>
      <param name="optional">As permissões que o código poderá usar se elas forem concedidas, mas não obrigatórias.</param>
      <param name="denied">As permissões que o código pede explicitamente para não serem concedidas.</param>
    </member>
    <member name="M:System.Security.Policy.PermissionRequestEvidence.Copy">
      <summary>Cria uma cópia equivalente do <see cref="T:System.Security.Policy.PermissionRequestEvidence" /> atual.</summary>
      <returns>Uma cópia equivalente do <see cref="T:System.Security.Policy.PermissionRequestEvidence" /> atual.</returns>
    </member>
    <member name="M:System.Security.Policy.PermissionRequestEvidence.ToString">
      <summary>Obtém uma representação de cadeia de caracteres do estado de <see cref="T:System.Security.Policy.PermissionRequestEvidence" />.</summary>
      <returns>Uma representação do estado do <see cref="T:System.Security.Policy.PermissionRequestEvidence" />.</returns>
    </member>
    <member name="P:System.Security.Policy.PermissionRequestEvidence.DeniedPermissions">
      <summary>Obtém as permissões que o código pede explicitamente para não serem concedidas.</summary>
      <returns>As permissões que o código pede explicitamente para não serem concedidas.</returns>
    </member>
    <member name="P:System.Security.Policy.PermissionRequestEvidence.OptionalPermissions">
      <summary>As permissões que o código poderá usar se elas forem concedidas, mas que não são obrigatórias.</summary>
      <returns>As permissões que o código pode usar se forem concedidas, mas não são necessárias.</returns>
    </member>
    <member name="P:System.Security.Policy.PermissionRequestEvidence.RequestedPermissions">
      <summary>Obtém as permissões mínimas de que o código precisa para ser executado.</summary>
      <returns>As permissões mínimas de que o código precisa para ser executado.</returns>
    </member>
    <member name="T:System.Security.Policy.PolicyException">
      <summary>A exceção que é gerada quando a política proíbe a execução de código.</summary>
    </member>
    <member name="M:System.Security.Policy.PolicyException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Policy.PolicyException" /> com propriedades padrão.</summary>
    </member>
    <member name="M:System.Security.Policy.PolicyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Policy.PolicyException" /> com dados serializados.</summary>
      <param name="info">O objeto que mantém os dados de objeto serializados.</param>
      <param name="context">As informações contextuais sobre a origem ou o destino.</param>
    </member>
    <member name="M:System.Security.Policy.PolicyException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Policy.PolicyException" /> com uma mensagem de erro especificada.</summary>
      <param name="message">A mensagem de erro que explica a razão da exceção.</param>
    </member>
    <member name="M:System.Security.Policy.PolicyException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Policy.PolicyException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message">A mensagem de erro que explica a razão da exceção.</param>
      <param name="exception">A exceção que é a causa da exceção atual. Caso o parâmetro <paramref name="exception" /> não seja <see langword="null" />, a exceção atual é acionada em um bloco <see langword="catch" /> que identifica a exceção interna.</param>
    </member>
    <member name="T:System.Security.Policy.PolicyLevel">
      <summary>Representa os níveis de política de segurança para o Common Language Runtime. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongName)">
      <summary>Adiciona um <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> correspondendo ao <see cref="T:System.Security.Policy.StrongName" /> especificado para a lista de objetos <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> usados para determinar se um assembly é um membro do grupo de assemblies não devem ser avaliados.</summary>
      <param name="sn">O <see cref="T:System.Security.Policy.StrongName" /> usado para criar o <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> a adicionar à lista de objetos <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> usados para determinar se um assembly é um membro do grupo de assemblies não devem ser avaliados.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="sn" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O <see cref="T:System.Security.Policy.StrongName" /> especificado pelo parâmetro <paramref name="sn" /> já tem confiança total.</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)">
      <summary>Adiciona o <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> especificado à lista de objetos <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> usados para determinar se um assembly é um membro do grupo de assemblies não devem ser avaliados.</summary>
      <param name="snMC">O <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> a adicionar à lista de objetos <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> usados para determinar se um assembly é um membro do grupo de assemblies não devem ser avaliados.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="snMC" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> especificado pelo parâmetro <paramref name="snMC" /> já tem confiança total.</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.AddNamedPermissionSet(System.Security.NamedPermissionSet)">
      <summary>Adiciona um <see cref="T:System.Security.NamedPermissionSet" /> ao nível de política atual.</summary>
      <param name="permSet">O <see cref="T:System.Security.NamedPermissionSet" /> a adicionar ao nível de política atual.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="permSet" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="permSet" /> tem o mesmo nome de um <see cref="T:System.Security.NamedPermissionSet" /> existente no <see cref="T:System.Security.Policy.PolicyLevel" />.</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.ChangeNamedPermissionSet(System.String,System.Security.PermissionSet)">
      <summary>Substitui um <see cref="T:System.Security.NamedPermissionSet" /> no nível de política atual pelo <see cref="T:System.Security.PermissionSet" /> especificado.</summary>
      <param name="name">O nome do <see cref="T:System.Security.NamedPermissionSet" /> a substituir.</param>
      <param name="pSet">O <see cref="T:System.Security.PermissionSet" /> que substitui o <see cref="T:System.Security.NamedPermissionSet" /> especificado pelo parâmetro <paramref name="name" />.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="name" /> é <see langword="null" />.  
  
- ou - 
O parâmetro <paramref name="pSet" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="name" /> é igual ao nome de um conjunto de permissões reservado.  
  
- ou - 
Não é possível encontrar o <see cref="T:System.Security.PermissionSet" /> especificado pelo parâmetro <paramref name="pSet" />.</exception>
      <returns>Uma cópia do <see cref="T:System.Security.NamedPermissionSet" /> que foi substituído.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.CreateAppDomainLevel">
      <summary>Cria um novo nível de política para uso no nível de política de domínio de aplicativo.</summary>
      <returns>O <see cref="T:System.Security.Policy.PolicyLevel" /> recém-criado.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.FromXml(System.Security.SecurityElement)">
      <summary>Recria um objeto de segurança com um estado determinado de uma codificação XML.</summary>
      <param name="e">A codificação XML a ser usada para reconstruir o objeto de segurança.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="e" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O <see cref="T:System.Security.SecurityElement" /> especificado pelo parâmetro <paramref name="e" /> é inválido.</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.GetNamedPermissionSet(System.String)">
      <summary>Retorna o <see cref="T:System.Security.NamedPermissionSet" /> no nível de política atual com o nome especificado.</summary>
      <param name="name">O nome do <see cref="T:System.Security.NamedPermissionSet" /> a ser localizado.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="name" /> é <see langword="null" />.</exception>
      <returns>O <see cref="T:System.Security.NamedPermissionSet" /> no nível de política com o nome especificado, se encontrado; caso contrário, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.Recover">
      <summary>Substitui o arquivo de configuração para este <see cref="T:System.Security.Policy.PolicyLevel" /> com o último backup (refletindo o estado da política antes da última vez em que ele foi salvo) e retorna-o para o estado do último salvamento.</summary>
      <exception cref="T:System.Security.Policy.PolicyException">O nível de política não tem um arquivo de configuração válido.</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongName)">
      <summary>Remove um assembly com o <see cref="T:System.Security.Policy.StrongName" /> especificado da lista de assemblies que o nível de política usa para avaliar a política.</summary>
      <param name="sn">O <see cref="T:System.Security.Policy.StrongName" /> do assembly a ser removido da lista de assemblies usados para avaliar a política.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="sn" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O assembly com o <see cref="T:System.Security.Policy.StrongName" /> especificado pelo parâmetro <paramref name="sn" /> não tem a confiança total.</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)">
      <summary>Remove um assembly com o <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> especificado da lista de assemblies que o nível de política usa para avaliar a política.</summary>
      <param name="snMC">O <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> do assembly a ser removido da lista de assemblies usados para avaliar a política.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="snMC" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> especificado pelo parâmetro <paramref name="snMC" /> não tem a confiança total.</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.Security.NamedPermissionSet)">
      <summary>Remove o <see cref="T:System.Security.NamedPermissionSet" /> especificado do nível de política atual.</summary>
      <param name="permSet">O <see cref="T:System.Security.NamedPermissionSet" /> a remover do nível de política atual.</param>
      <exception cref="T:System.ArgumentException">O <see cref="T:System.Security.NamedPermissionSet" /> especificado pelo parâmetro <paramref name="permSet" /> não foi encontrado.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="permSet" /> é <see langword="null" />.</exception>
      <returns>O <see cref="T:System.Security.NamedPermissionSet" /> que foi removido.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.String)">
      <summary>Remove o <see cref="T:System.Security.NamedPermissionSet" /> com o nome especificado do nível de política atual.</summary>
      <param name="name">O nome do <see cref="T:System.Security.NamedPermissionSet" /> a ser removido.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="name" /> é igual ao nome de um conjunto de permissões reservado.  
  
- ou - 
Não foi possível localizar um <see cref="T:System.Security.NamedPermissionSet" /> com o nome especificado.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="name" /> é <see langword="null" />.</exception>
      <returns>O <see cref="T:System.Security.NamedPermissionSet" /> que foi removido.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.Reset">
      <summary>Retorna o nível de política atual para o estado padrão.</summary>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.Resolve(System.Security.Policy.Evidence)">
      <summary>Resolve a política com base na evidência para o nível de política e retorna o <see cref="T:System.Security.Policy.PolicyStatement" /> resultante.</summary>
      <param name="evidence">O <see cref="T:System.Security.Policy.Evidence" /> usado para resolver o <see cref="T:System.Security.Policy.PolicyLevel" />.</param>
      <exception cref="T:System.Security.Policy.PolicyException">O nível de política contém vários grupos de código correspondentes marcados como exclusivos.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="evidence" /> é <see langword="null" />.</exception>
      <returns>O <see cref="T:System.Security.Policy.PolicyStatement" /> resultante.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary>Resolve política no nível de política e retorna a raiz de uma árvore de grupo de códigos que corresponde à evidência.</summary>
      <param name="evidence">O <see cref="T:System.Security.Policy.Evidence" /> usado para resolver a política.</param>
      <exception cref="T:System.Security.Policy.PolicyException">O nível de política contém vários grupos de código correspondentes marcados como exclusivos.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="evidence" /> é <see langword="null" />.</exception>
      <returns>Um <see cref="T:System.Security.Policy.CodeGroup" /> que representa a raiz de uma árvore de grupos de código correspondentes à evidência especificada.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.ToXml">
      <summary>Cria uma codificação XML do objeto de segurança e seu estado atual.</summary>
      <returns>Uma codificação XML do objeto de segurança, incluindo quaisquer informações de estado.</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.FullTrustAssemblies">
      <summary>Obtém uma lista de objetos <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> usados para determinar se um assembly é um membro do grupo de assemblies usados para avaliar a política de segurança.</summary>
      <returns>Uma lista de <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> objetos usados para determinar se um assembly é membro do grupo de assemblies usado para avaliar a política de segurança. Esses assemblies recebem confiança total durante a avaliação da política de segurança de assemblies que não estão na lista.</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.Label">
      <summary>Obtém um rótulo descritivo para o nível de política.</summary>
      <returns>O rótulo associado ao nível de política.</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.NamedPermissionSets">
      <summary>Obtém uma lista de conjuntos de permissões nomeadas definidas para o nível de política.</summary>
      <returns>Uma lista de conjuntos de permissões nomeados definida para o nível de política.</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.RootCodeGroup">
      <summary>Obtém ou define o grupo de códigos raiz para o nível de política.</summary>
      <exception cref="T:System.ArgumentNullException">O valor para <see cref="P:System.Security.Policy.PolicyLevel.RootCodeGroup" /> é <see langword="null" />.</exception>
      <returns>O <see cref="T:System.Security.Policy.CodeGroup" /> que é a raiz da árvore de grupos de códigos de nível de política.</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.StoreLocation">
      <summary>Obtém o caminho no qual o arquivo de política está armazenado.</summary>
      <returns>O caminho em que o arquivo de política é armazenado ou <see langword="null" /> se o não <see cref="T:System.Security.Policy.PolicyLevel" /> tem um local de armazenamento.</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.Type">
      <summary>Obtém o tipo de nível de política.</summary>
      <returns>Um dos valores de <see cref="T:System.Security.PolicyLevelType" />.</returns>
    </member>
    <member name="T:System.Security.Policy.PolicyStatement">
      <summary>Representa a instrução de um <see cref="T:System.Security.Policy.CodeGroup" /> que descreve as permissões e outras informações que se aplicam ao código com um conjunto específico de evidência. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.#ctor(System.Security.PermissionSet)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Policy.PolicyStatement" /> com o <see cref="T:System.Security.PermissionSet" /> especificado.</summary>
      <param name="permSet">O <see cref="T:System.Security.PermissionSet" /> com o qual inicializar a nova instância.</param>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.#ctor(System.Security.PermissionSet,System.Security.Policy.PolicyStatementAttribute)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Policy.PolicyStatement" /> com o <see cref="T:System.Security.PermissionSet" /> e os atributos especificados.</summary>
      <param name="permSet">O <see cref="T:System.Security.PermissionSet" /> com o qual inicializar a nova instância.</param>
      <param name="attributes">Uma combinação bit a bit dos valores <see cref="T:System.Security.Policy.PolicyStatementAttribute" />.</param>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.Copy">
      <summary>Cria uma cópia equivalente da instrução da política atual.</summary>
      <returns>Uma nova cópia do <see cref="T:System.Security.Policy.PolicyStatement" /> com <see cref="P:System.Security.Policy.PolicyStatement.PermissionSet" /> e <see cref="P:System.Security.Policy.PolicyStatement.Attributes" /> idênticos aos do atual <see cref="T:System.Security.Policy.PolicyStatement" />.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.Equals(System.Object)">
      <summary>Determina se o objeto <see cref="T:System.Security.Policy.PolicyStatement" /> especificado é igual ao <see cref="T:System.Security.Policy.PolicyStatement" /> atual.</summary>
      <param name="o">O objeto <see cref="T:System.Security.Policy.PolicyStatement" /> a ser comparado com o <see cref="T:System.Security.Policy.PolicyStatement" /> atual.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Security.Policy.PolicyStatement" /> especificado for igual ao objeto <see cref="T:System.Security.Policy.PolicyStatement" /> atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.FromXml(System.Security.SecurityElement)">
      <summary>Recria um objeto de segurança com um estado determinado de uma codificação XML.</summary>
      <param name="et">A codificação XML a ser usada para reconstruir o objeto de segurança.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="et" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="et" /> não é uma codificação <see cref="T:System.Security.Policy.PolicyStatement" /> válida.</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Recria um objeto de segurança com um estado determinado de uma codificação XML.</summary>
      <param name="et">A codificação XML a ser usada para reconstruir o objeto de segurança.</param>
      <param name="level">O contexto <see cref="T:System.Security.Policy.PolicyLevel" /> para a pesquisa de valores <see cref="T:System.Security.NamedPermissionSet" />.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="et" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="et" /> não é uma codificação <see cref="T:System.Security.Policy.PolicyStatement" /> válida.</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.GetHashCode">
      <summary>Obtém um código hash para o objeto <see cref="T:System.Security.Policy.PolicyStatement" /> atual, adequado para algoritmos de hash e estruturas de dados, tais como uma tabela de hash.</summary>
      <returns>Um código hash para o objeto <see cref="T:System.Security.Policy.PolicyStatement" /> atual.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.ToXml">
      <summary>Cria uma codificação XML do objeto de segurança e seu estado atual.</summary>
      <returns>Uma codificação XML do objeto de segurança, incluindo quaisquer informações de estado.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>Cria uma codificação XML do objeto de segurança e seu estado atual.</summary>
      <param name="level">O contexto <see cref="T:System.Security.Policy.PolicyLevel" /> para a pesquisa de valores <see cref="T:System.Security.NamedPermissionSet" />.</param>
      <returns>Uma codificação XML do objeto de segurança, incluindo quaisquer informações de estado.</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyStatement.Attributes">
      <summary>Obtém ou define os atributos da declaração de política.</summary>
      <returns>Os atributos da declaração de política.</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyStatement.AttributeString">
      <summary>Obtém uma representação de cadeia de caracteres dos atributos da declaração de política.</summary>
      <returns>Uma cadeia de texto que representa os atributos da declaração da política.</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyStatement.PermissionSet">
      <summary>Obtém ou define o <see cref="T:System.Security.PermissionSet" /> da declaração de política.</summary>
      <returns>O <see cref="T:System.Security.PermissionSet" /> da declaração de política.</returns>
    </member>
    <member name="T:System.Security.Policy.PolicyStatementAttribute">
      <summary>Define os sinalizadores especiais de atributo para a política de segurança em grupos de códigos.</summary>
    </member>
    <member name="F:System.Security.Policy.PolicyStatementAttribute.All">
      <summary>Todos os sinalizadores de atributo são definidos.</summary>
    </member>
    <member name="F:System.Security.Policy.PolicyStatementAttribute.Exclusive">
      <summary>O sinalizador de grupo de códigos exclusivo. Quando um grupo de códigos tem esse sinalizador definido, somente as permissões associadas àquele grupo de códigos serão concedidas ao código que pertencem ao grupo de códigos. No máximo, um grupo de códigos que corresponde a uma determinada parte do código pode ser definido como exclusivo.</summary>
    </member>
    <member name="F:System.Security.Policy.PolicyStatementAttribute.LevelFinal">
      <summary>O sinalizador que representa uma instrução de política que faz níveis inferiores de política não serem avaliados como parte da operação de resolução, permitindo efetivamente ao nível de política substituir os níveis inferiores.</summary>
    </member>
    <member name="F:System.Security.Policy.PolicyStatementAttribute.Nothing">
      <summary>Nenhum sinalizador está definido.</summary>
    </member>
    <member name="T:System.Security.Policy.Publisher">
      <summary>Fornece a assinatura digital Authenticode X.509v3 de um assembly de código como evidência para avaliação de política. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Policy.Publisher.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Policy.Publisher" /> com o certificado Authenticode X.509v3 que contém a chave pública do editor.</summary>
      <param name="cert">Um <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> que contém a chave pública do editor de software.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="cert" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.Publisher.Copy">
      <summary>Cria uma cópia equivalente do <see cref="T:System.Security.Policy.Publisher" />.</summary>
      <returns>Uma nova cópia idêntica do <see cref="T:System.Security.Policy.Publisher" />.</returns>
    </member>
    <member name="M:System.Security.Policy.Publisher.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>Cria uma permissão de identidade que corresponde à instância atual da classe <see cref="T:System.Security.Policy.Publisher" />.</summary>
      <param name="evidence">O <see cref="T:System.Security.Policy.Evidence" /> do qual criar a permissão de identidade.</param>
      <returns>Um <see cref="T:System.Security.Permissions.PublisherIdentityPermission" /> para o <see cref="T:System.Security.Policy.Publisher" /> especificado.</returns>
    </member>
    <member name="M:System.Security.Policy.Publisher.Equals(System.Object)">
      <summary>Compara o <see cref="T:System.Security.Policy.Publisher" /> atual ao objeto especificado quanto à equivalência.</summary>
      <param name="o">O <see cref="T:System.Security.Policy.Publisher" /> a ser testado quanto à equivalência com o objeto atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="o" /> não é um objeto <see cref="T:System.Security.Policy.Publisher" />.</exception>
      <returns>
        <see langword="true" /> se as duas instâncias da classe <see cref="T:System.Security.Policy.Publisher" /> forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.Publisher.GetHashCode">
      <summary>Obtém o código hash do <see cref="P:System.Security.Policy.Publisher.Certificate" /> atual.</summary>
      <returns>O código hash do <see cref="P:System.Security.Policy.Publisher.Certificate" /> atual.</returns>
    </member>
    <member name="M:System.Security.Policy.Publisher.ToString">
      <summary>Retorna uma representação de cadeia de caracteres do <see cref="T:System.Security.Policy.Publisher" /> atual.</summary>
      <returns>Uma representação do <see cref="T:System.Security.Policy.Publisher" /> atual.</returns>
    </member>
    <member name="P:System.Security.Policy.Publisher.Certificate">
      <summary>Obtém o certificado Authenticode X.509v3 do editor.</summary>
      <returns>O editor <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> .</returns>
    </member>
    <member name="T:System.Security.Policy.PublisherMembershipCondition">
      <summary>Determina se um assembly pertence a um grupo de códigos testando seu certificado Authenticode X.509v3 de editor de software. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Policy.PublisherMembershipCondition" /> com o certificado Authenticode X.509v3 que determina a associação.</summary>
      <param name="certificate">Um <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> que contém a chave pública do editor de software.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="certificate" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>Determina se a evidência especificada satisfaz a condição de associação.</summary>
      <param name="evidence">O <see cref="T:System.Security.Policy.Evidence" /> no qual realizar o teste.</param>
      <exception cref="T:System.ArgumentNullException">A propriedade <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> é <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se a evidência especificada satisfizer a condição de associação; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.Copy">
      <summary>Cria uma cópia equivalente da condição de associação.</summary>
      <exception cref="T:System.ArgumentNullException">A propriedade <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> é <see langword="null" />.</exception>
      <returns>Uma nova cópia idêntica da condição de associação atual.</returns>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.Equals(System.Object)">
      <summary>Determina se o certificado de editor do objeto especificado é equivalente ao certificado de editor contido no atual <see cref="T:System.Security.Policy.PublisherMembershipCondition" />.</summary>
      <param name="o">O objeto a ser comparado com o <see cref="T:System.Security.Policy.PublisherMembershipCondition" /> atual.</param>
      <exception cref="T:System.ArgumentNullException">A propriedade <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> é <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se o certificado de editor de objeto especificado for equivalente ao certificado de editor contido no atual <see cref="T:System.Security.Policy.PublisherMembershipCondition" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói um objeto de segurança com um estado especificado de uma codificação XML.</summary>
      <param name="e">A codificação XML a ser usada para reconstruir o objeto de segurança.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="e" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="e" /> não é um elemento de condição de associação válido.</exception>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Reconstrói um objeto de segurança com um estado especificado de uma codificação XML.</summary>
      <param name="e">A codificação XML a ser usada para reconstruir o objeto de segurança.</param>
      <param name="level">O contexto <see cref="T:System.Security.Policy.PolicyLevel" />, usado para resolver referências <see cref="T:System.Security.NamedPermissionSet" />.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="e" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="e" /> não é um elemento de condição de associação válido.</exception>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.GetHashCode">
      <summary>Obtém o código hash para a condição de associação atual.</summary>
      <exception cref="T:System.ArgumentNullException">A propriedade <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> é <see langword="null" />.</exception>
      <returns>O código hash para a condição de associação atual.</returns>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.ToString">
      <summary>Cria e retorna uma representação de cadeia de caracteres do <see cref="T:System.Security.Policy.PublisherMembershipCondition" />.</summary>
      <exception cref="T:System.ArgumentNullException">A propriedade <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> é <see langword="null" />.</exception>
      <returns>Uma representação de <see cref="T:System.Security.Policy.PublisherMembershipCondition" />.</returns>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.ToXml">
      <summary>Cria uma codificação XML do objeto de segurança e seu estado atual.</summary>
      <exception cref="T:System.ArgumentNullException">A propriedade <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> é <see langword="null" />.</exception>
      <returns>Uma codificação XML do objeto de segurança, incluindo quaisquer informações de estado.</returns>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>Cria uma codificação XML do objeto de segurança e de seu estado atual com o <see cref="T:System.Security.Policy.PolicyLevel" /> especificado.</summary>
      <param name="level">O contexto <see cref="T:System.Security.Policy.PolicyLevel" />, que é usado para resolver referências <see cref="T:System.Security.NamedPermissionSet" />.</param>
      <exception cref="T:System.ArgumentNullException">A propriedade <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> é <see langword="null" />.</exception>
      <returns>Uma codificação XML do objeto de segurança, incluindo quaisquer informações de estado.</returns>
    </member>
    <member name="P:System.Security.Policy.PublisherMembershipCondition.Certificate">
      <summary>Obtém ou define o certificado Authenticode X.509v3 para o qual a condição de associação testa.</summary>
      <exception cref="T:System.ArgumentNullException">O valor da propriedade é <see langword="null" />.</exception>
      <returns>O <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> para o qual a condição de associação é testada.</returns>
    </member>
    <member name="T:System.Security.Policy.Site">
      <summary>Fornece o site em que um assembly de código tem origem como evidência para avaliação da política. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Policy.Site.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Policy.Site" /> com o site do qual um assembly de código se origina.</summary>
      <param name="name">O site de origem do assembly de código associado.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="name" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.Site.Copy">
      <summary>Cria uma cópia equivalente do objeto <see cref="T:System.Security.Policy.Site" />.</summary>
      <returns>Um novo objeto que é idêntico ao objeto <see cref="T:System.Security.Policy.Site" /> atual.</returns>
    </member>
    <member name="M:System.Security.Policy.Site.CreateFromUrl(System.String)">
      <summary>Cria um novo objeto <see cref="T:System.Security.Policy.Site" /> com base na URL especificada.</summary>
      <param name="url">A URL da qual o novo objeto <see cref="T:System.Security.Policy.Site" /> deve ser criado.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="url" /> não é uma URL válida.  
  
- ou - 
O parâmetro <paramref name="url" /> é um nome de arquivo.</exception>
      <returns>Um novo objeto do site.</returns>
    </member>
    <member name="M:System.Security.Policy.Site.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>Cria uma permissão de identidade que corresponde ao objeto <see cref="T:System.Security.Policy.Site" /> atual.</summary>
      <param name="evidence">A evidência da qual a permissão de identidade deve ser construída.</param>
      <returns>Uma permissão de identidade do site para o objeto <see cref="T:System.Security.Policy.Site" /> atual.</returns>
    </member>
    <member name="M:System.Security.Policy.Site.Equals(System.Object)">
      <summary>Compara o <see cref="T:System.Security.Policy.Site" /> atual ao objeto especificado quanto à equivalência.</summary>
      <param name="o">O objeto a ser testado quanto à equivalência com o objeto atual.</param>
      <returns>
        <see langword="true" /> se as duas instâncias da classe <see cref="T:System.Security.Policy.Site" /> forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.Site.GetHashCode">
      <summary>Retorna o código hash do nome do site atual.</summary>
      <returns>O código hash do nome do site atual.</returns>
    </member>
    <member name="M:System.Security.Policy.Site.ToString">
      <summary>Retorna uma representação de cadeia de caracteres do objeto <see cref="T:System.Security.Policy.Site" /> atual.</summary>
      <returns>Uma representação do site atual.</returns>
    </member>
    <member name="P:System.Security.Policy.Site.Name">
      <summary>Obtém o site do qual o assembly de código se origina.</summary>
      <returns>O nome do site do qual se origina o assembly de código.</returns>
    </member>
    <member name="T:System.Security.Policy.SiteMembershipCondition">
      <summary>Determina se um assembly pertence a um grupo de códigos testando o site de origem. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Policy.SiteMembershipCondition" /> com o nome do site que determina a associação.</summary>
      <param name="site">A expressão de caractere curinga ou de nome de site.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="site" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="site" /> não é um <see cref="T:System.Security.Policy.Site" /> válido.</exception>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>Determina se a evidência especificada satisfaz a condição de associação.</summary>
      <param name="evidence">O <see cref="T:System.Security.Policy.Evidence" /> no qual realizar o teste.</param>
      <exception cref="T:System.ArgumentException">A propriedade <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> é <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se a evidência especificada satisfizer a condição de associação; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.Copy">
      <summary>Cria uma cópia equivalente da condição de associação.</summary>
      <exception cref="T:System.ArgumentException">A propriedade <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> é <see langword="null" />.</exception>
      <returns>Uma nova cópia idêntica da condição de associação atual.</returns>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.Equals(System.Object)">
      <summary>Determina se o site do objeto <see cref="T:System.Security.Policy.SiteMembershipCondition" /> especificado é equivalente ao site contido no <see cref="T:System.Security.Policy.SiteMembershipCondition" /> atual.</summary>
      <param name="o">O objeto <see cref="T:System.Security.Policy.SiteMembershipCondition" /> a ser comparado ao <see cref="T:System.Security.Policy.SiteMembershipCondition" /> atual.</param>
      <exception cref="T:System.ArgumentException">A propriedade <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> do objeto atual ou do objeto especificado é <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se o site do objeto <see cref="T:System.Security.Policy.SiteMembershipCondition" /> especificado for equivalente ao site contido no <see cref="T:System.Security.Policy.SiteMembershipCondition" /> atual, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói um objeto de segurança com um estado especificado de uma codificação XML.</summary>
      <param name="e">A codificação XML a ser usada para reconstruir o objeto de segurança.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="e" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="e" /> não é um elemento de condição de associação válido.</exception>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Reconstrói um objeto de segurança com um estado especificado de uma codificação XML.</summary>
      <param name="e">A codificação XML a ser usada para reconstruir o objeto de segurança.</param>
      <param name="level">O contexto <see cref="T:System.Security.Policy.PolicyLevel" />, usado para resolver referências <see cref="T:System.Security.NamedPermissionSet" />.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="e" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="e" /> não é um elemento de condição de associação válido.</exception>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.GetHashCode">
      <summary>Obtém o código hash para a condição de associação atual.</summary>
      <exception cref="T:System.ArgumentException">A propriedade <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> é <see langword="null" />.</exception>
      <returns>O código hash para a condição de associação atual.</returns>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.ToString">
      <summary>Cria e retorna uma representação de cadeia de caracteres da condição de associação.</summary>
      <exception cref="T:System.ArgumentException">A propriedade <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> é <see langword="null" />.</exception>
      <returns>Uma representação de cadeia de caracteres da condição de associação.</returns>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.ToXml">
      <summary>Cria uma codificação XML do objeto de segurança e seu estado atual.</summary>
      <exception cref="T:System.ArgumentException">A propriedade <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> é <see langword="null" />.</exception>
      <returns>Uma codificação XML do objeto de segurança, incluindo quaisquer informações de estado.</returns>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>Cria uma codificação XML do objeto de segurança e de seu estado atual com o <see cref="T:System.Security.Policy.PolicyLevel" /> especificado.</summary>
      <param name="level">O contexto <see cref="T:System.Security.Policy.PolicyLevel" />, usado para resolver referências <see cref="T:System.Security.NamedPermissionSet" />.</param>
      <exception cref="T:System.ArgumentException">A propriedade <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> é <see langword="null" />.</exception>
      <returns>Uma codificação XML do objeto de segurança, incluindo quaisquer informações de estado.</returns>
    </member>
    <member name="P:System.Security.Policy.SiteMembershipCondition.Site">
      <summary>Obtém ou define o site para a qual a condição de associação é testada.</summary>
      <exception cref="T:System.ArgumentNullException">É feita uma tentativa de definir <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> como <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">É feita uma tentativa de definir <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> como uma <see cref="T:System.Security.Policy.Site" /> inválida.</exception>
      <returns>O site para o qual a condição de associação é testada.</returns>
    </member>
    <member name="T:System.Security.Policy.StrongName">
      <summary>Fornece o nome forte de um assembly de código como evidência para avaliação de política. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Policy.StrongName.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Policy.StrongName" /> com o blob, o nome e a versão da chave pública do nome forte.</summary>
      <param name="blob">O <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> do editor de software.</param>
      <param name="name">A parte do nome simples do nome forte.</param>
      <param name="version">O <see cref="T:System.Version" /> do nome forte.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="blob" /> é <see langword="null" />.  
  
- ou - 
O parâmetro <paramref name="name" /> é <see langword="null" />.  
  
- ou - 
O parâmetro <paramref name="version" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="name" /> é uma cadeia de caracteres vazia ("").</exception>
    </member>
    <member name="M:System.Security.Policy.StrongName.Copy">
      <summary>Cria uma cópia equivalente do <see cref="T:System.Security.Policy.StrongName" /> atual.</summary>
      <returns>Uma nova cópia idêntica do <see cref="T:System.Security.Policy.StrongName" /> atual.</returns>
    </member>
    <member name="M:System.Security.Policy.StrongName.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>Cria um <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> que corresponde ao <see cref="T:System.Security.Policy.StrongName" /> atual.</summary>
      <param name="evidence">O <see cref="T:System.Security.Policy.Evidence" /> do qual construir o <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" />.</param>
      <returns>Um <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> para o <see cref="T:System.Security.Policy.StrongName" /> especificado.</returns>
    </member>
    <member name="M:System.Security.Policy.StrongName.Equals(System.Object)">
      <summary>Determina se o nome forte especificado é igual ao atual.</summary>
      <param name="o">O nome forte a ser comparado com o nome forte atual.</param>
      <returns>
        <see langword="true" /> se o nome forte especificado for igual ao nome forte atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.StrongName.GetHashCode">
      <summary>Obtém o código hash do <see cref="T:System.Security.Policy.StrongName" /> atual.</summary>
      <returns>O código hash do <see cref="T:System.Security.Policy.StrongName" /> atual.</returns>
    </member>
    <member name="M:System.Security.Policy.StrongName.ToString">
      <summary>Cria uma representação de cadeia de caracteres do <see cref="T:System.Security.Policy.StrongName" /> atual.</summary>
      <returns>Uma representação do <see cref="T:System.Security.Policy.StrongName" /> atual.</returns>
    </member>
    <member name="P:System.Security.Policy.StrongName.Name">
      <summary>Obtém o nome simples do <see cref="T:System.Security.Policy.StrongName" /> atual.</summary>
      <returns>A parte de nome simples do <see cref="T:System.Security.Policy.StrongName" /> .</returns>
    </member>
    <member name="P:System.Security.Policy.StrongName.PublicKey">
      <summary>Obtém o <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> da <see cref="T:System.Security.Policy.StrongName" /> atual.</summary>
      <returns>O <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> do atual <see cref="T:System.Security.Policy.StrongName" />.</returns>
    </member>
    <member name="P:System.Security.Policy.StrongName.Version">
      <summary>Obtém o <see cref="T:System.Version" /> da <see cref="T:System.Security.Policy.StrongName" /> atual.</summary>
      <returns>O <see cref="T:System.Version" /> do atual <see cref="T:System.Security.Policy.StrongName" />.</returns>
    </member>
    <member name="T:System.Security.Policy.StrongNameMembershipCondition">
      <summary>Determina se um assembly pertence a um grupo de códigos testando seu nome forte. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> com o blob, o nome e o número de versão do blob da chave pública do nome forte que determinam a associação.</summary>
      <param name="blob">O blob da chave pública do nome forte do editor de software.</param>
      <param name="name">A parte do nome simples do nome forte.</param>
      <param name="version">O número de versão do nome forte.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="blob" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="name" /> é <see langword="null" />.  
  
- ou - 
O parâmetro <paramref name="name" /> é uma cadeia de caracteres vazia ("").</exception>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>Determina se a evidência especificada satisfaz a condição de associação.</summary>
      <param name="evidence">O <see cref="T:System.Security.Policy.Evidence" /> no qual realizar o teste.</param>
      <returns>
        <see langword="true" /> se a evidência especificada satisfizer a condição de associação; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.Copy">
      <summary>Cria uma cópia equivalente do <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> atual.</summary>
      <returns>Uma nova cópia idêntica do <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> atual</returns>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.Equals(System.Object)">
      <summary>Determina se a <see cref="T:System.Security.Policy.StrongName" /> do objeto especificado é equivalente à <see cref="T:System.Security.Policy.StrongName" /> contida na <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> atual.</summary>
      <param name="o">O objeto a ser comparado com o <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> atual.</param>
      <exception cref="T:System.ArgumentException">A propriedade <see cref="P:System.Security.Policy.StrongNameMembershipCondition.PublicKey" /> do objeto atual ou do objeto especificado é <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se a <see cref="T:System.Security.Policy.StrongName" /> do objeto especificado for equivalente à <see cref="T:System.Security.Policy.StrongName" /> contida na <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> atual, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói um objeto de segurança com um estado especificado de uma codificação XML.</summary>
      <param name="e">A codificação XML a ser usada para reconstruir o objeto de segurança.</param>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Reconstrói um objeto de segurança com um estado especificado de uma codificação XML.</summary>
      <param name="e">A codificação XML a ser usada para reconstruir o objeto de segurança.</param>
      <param name="level">O contexto <see cref="T:System.Security.Policy.PolicyLevel" />, usado para resolver referências <see cref="T:System.Security.NamedPermissionSet" />.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="e" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="e" /> não é um elemento de condição de associação válido.</exception>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.GetHashCode">
      <summary>Retorna o código hash do <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> atual.</summary>
      <exception cref="T:System.ArgumentException">A propriedade <see cref="P:System.Security.Policy.StrongNameMembershipCondition.PublicKey" /> é <see langword="null" />.</exception>
      <returns>O código hash do <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> atual.</returns>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.ToString">
      <summary>Cria e retorna uma representação de cadeia de caracteres do <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> atual.</summary>
      <returns>Uma representação do <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> atual.</returns>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.ToXml">
      <summary>Cria uma codificação XML do objeto de segurança e seu estado atual.</summary>
      <returns>Uma codificação XML do objeto de segurança, incluindo quaisquer informações de estado.</returns>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>Cria uma codificação XML do objeto de segurança e de seu estado atual com o <see cref="T:System.Security.Policy.PolicyLevel" /> especificado.</summary>
      <param name="level">O contexto <see cref="T:System.Security.Policy.PolicyLevel" />, que é usado para resolver referências <see cref="T:System.Security.NamedPermissionSet" />.</param>
      <returns>Uma codificação XML do objeto de segurança, incluindo quaisquer informações de estado.</returns>
    </member>
    <member name="P:System.Security.Policy.StrongNameMembershipCondition.Name">
      <summary>Obtém ou define o nome simples do <see cref="T:System.Security.Policy.StrongName" /> para o qual o teste da condição de associação é realizado.</summary>
      <exception cref="T:System.ArgumentException">O valor é <see langword="null" />.  
  
- ou - 
O valor é uma cadeia de caracteres vazia ("").</exception>
      <returns>O nome simples do <see cref="T:System.Security.Policy.StrongName" /> para o qual a condição de associação é testada.</returns>
    </member>
    <member name="P:System.Security.Policy.StrongNameMembershipCondition.PublicKey">
      <summary>Obtém ou define o <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> do <see cref="T:System.Security.Policy.StrongName" /> para o qual o teste da condição de associação é realizado.</summary>
      <exception cref="T:System.ArgumentNullException">Foi feita uma tentativa de definir <see cref="P:System.Security.Policy.StrongNameMembershipCondition.PublicKey" /> como <see langword="null" />.</exception>
      <returns>O <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> do <see cref="T:System.Security.Policy.StrongName" /> para o qual a condição de associação é testada.</returns>
    </member>
    <member name="P:System.Security.Policy.StrongNameMembershipCondition.Version">
      <summary>Obtém ou define o <see cref="T:System.Version" /> do <see cref="T:System.Security.Policy.StrongName" /> para o qual o teste da condição de associação é realizado.</summary>
      <returns>O <see cref="T:System.Version" /> do <see cref="T:System.Security.Policy.StrongName" /> para o qual a condição de associação é testada.</returns>
    </member>
    <member name="T:System.Security.Policy.TrustManagerContext">
      <summary>Representa o contexto do gerenciador de confiança a ser considerado ao tomar a decisão de executar um aplicativo e ao configurar a segurança em um novo <see cref="T:System.AppDomain" /> no qual executar um aplicativo.</summary>
    </member>
    <member name="M:System.Security.Policy.TrustManagerContext.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Policy.TrustManagerContext" />.</summary>
    </member>
    <member name="M:System.Security.Policy.TrustManagerContext.#ctor(System.Security.Policy.TrustManagerUIContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Policy.TrustManagerContext" /> usando o objeto <see cref="T:System.Security.Policy.TrustManagerUIContext" /> especificado.</summary>
      <param name="uiContext">Um dos valores <see cref="T:System.Security.Policy.TrustManagerUIContext" /> que especifica o tipo de interface do usuário do gerenciador de confiança a ser utilizada.</param>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.IgnorePersistedDecision">
      <summary>Obtém ou define um valor que indica se o gerenciador de segurança do aplicativo deve ignorar quaisquer decisões persistentes e chamar o gerenciador de confiança.</summary>
      <returns>
        <see langword="true" /> para chamar o Gerenciador de confiança; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.KeepAlive">
      <summary>Obtém ou define um valor que indica se o gerenciador de confiança deve armazenar em cache o estado desse aplicativo a fim de facilitar futuras solicitações para determinar a confiança do aplicativo.</summary>
      <returns>
        <see langword="true" /> para armazenar em cache os dados de estado; caso contrário, <see langword="false" /> . O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.NoPrompt">
      <summary>Obtém ou define um valor que indica se o gerenciador de confiança deve solicitar do usuário decisões sobre confiança.</summary>
      <returns>
        <see langword="true" /> para não avisar o usuário; <see langword="false" /> para solicitar o usuário. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.Persist">
      <summary>Obtém ou define um valor que indica se a resposta do usuário ao diálogo de consentimento deve ser persistente.</summary>
      <returns>
        <see langword="true" /> para armazenar em cache os dados de estado; caso contrário, <see langword="false" /> . O padrão é <see langword="true" />.</returns>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity">
      <summary>Obtém ou define a identidade da identidade do aplicativo anterior.</summary>
      <returns>Um <see cref="T:System.ApplicationIdentity" /> objeto que representa o anterior <see cref="T:System.ApplicationIdentity" /> .</returns>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.UIContext">
      <summary>Obtém ou define o tipo de interface do usuário que o gerenciador de confiança deve exibir.</summary>
      <returns>Um dos valores de <see cref="T:System.Security.Policy.TrustManagerUIContext" />. O padrão é <see cref="F:System.Security.Policy.TrustManagerUIContext.Run" />.</returns>
    </member>
    <member name="T:System.Security.Policy.TrustManagerUIContext">
      <summary>Especifica que o tipo de interface do usuário que o gerenciador de confiança deve usar para decisões de confiança.</summary>
    </member>
    <member name="F:System.Security.Policy.TrustManagerUIContext.Install">
      <summary>Uma interface do usuário de instalação.</summary>
    </member>
    <member name="F:System.Security.Policy.TrustManagerUIContext.Run">
      <summary>Uma interface do usuário de execução.</summary>
    </member>
    <member name="F:System.Security.Policy.TrustManagerUIContext.Upgrade">
      <summary>Uma interface do usuário de atualização.</summary>
    </member>
    <member name="T:System.Security.Policy.UnionCodeGroup">
      <summary>Representa um grupo de códigos cuja declaração da política é a união da declaração da política do grupo de códigos atual e da declaração da política de todos seus grupo de códigos filho correspondentes. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Policy.UnionCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Policy.UnionCodeGroup" />.</summary>
      <param name="membershipCondition">Uma condição de associação que testa a evidência para determinar se este grupo de códigos aplica a política.</param>
      <param name="policy">A declaração de política para o grupo de códigos na forma de um conjunto de permissões e atributos a serem concedidos a código que corresponda à condição de associação.</param>
      <exception cref="T:System.ArgumentException">O tipo do parâmetro <paramref name="membershipCondition" /> não é válido.  
  
- ou - 
O tipo do parâmetro <paramref name="policy" /> não é válido.</exception>
    </member>
    <member name="M:System.Security.Policy.UnionCodeGroup.Copy">
      <summary>Faz uma cópia em profundidade do grupo de códigos atual.</summary>
      <returns>Uma cópia equivalente do grupo de códigos atual, incluindo as respectivas condições de associação e grupos de códigos filhos.</returns>
    </member>
    <member name="M:System.Security.Policy.UnionCodeGroup.Resolve(System.Security.Policy.Evidence)">
      <summary>Resolve a política para o grupo de códigos e seus descendentes para um conjunto de evidências.</summary>
      <param name="evidence">A evidência para o assembly.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="evidence" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Security.Policy.PolicyException">Mais de um grupo de códigos (incluindo o grupo de códigos pai e os grupos de códigos filhos) está marcado como <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />.</exception>
      <returns>Uma declaração de política que consiste das permissões concedidas pelo grupo de códigos com atributos opcionais ou <see langword="null" />, se o grupo de códigos não se aplica (se a condição de associação não corresponde à evidência especificada).</returns>
    </member>
    <member name="M:System.Security.Policy.UnionCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary>Resolve os grupos de códigos correspondentes.</summary>
      <param name="evidence">A evidência para o assembly.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="evidence" /> é <see langword="null" />.</exception>
      <returns>O conjunto completo de grupos de códigos que corresponderam à evidência.</returns>
    </member>
    <member name="P:System.Security.Policy.UnionCodeGroup.MergeLogic">
      <summary>Obtém a lógica de mesclagem.</summary>
      <returns>Sempre a cadeia de caracteres "Union".</returns>
    </member>
    <member name="T:System.Security.Policy.Url">
      <summary>Fornece a URL em que um assembly de código tem origem como evidência para avaliação da política. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Policy.Url.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Policy.Url" /> com a URL da qual um assembly de código se origina.</summary>
      <param name="name">A URL de origem do assembly de código associado.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="name" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.Url.Copy">
      <summary>Cria uma nova cópia do objeto de evidência.</summary>
      <returns>Uma nova cópia idêntica do objeto de evidência.</returns>
    </member>
    <member name="M:System.Security.Policy.Url.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>Cria uma permissão de identidade que corresponde à instância atual da classe de evidência <see cref="T:System.Security.Policy.Url" />.</summary>
      <param name="evidence">O conjunto de evidências do qual a permissão de identidade deve ser construída.</param>
      <returns>Uma <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> para a evidência <see cref="T:System.Security.Policy.Url" /> especificada.</returns>
    </member>
    <member name="M:System.Security.Policy.Url.Equals(System.Object)">
      <summary>Compara o objeto de evidência <see cref="T:System.Security.Policy.Url" /> atual com o objeto especificado quanto à equivalência.</summary>
      <param name="o">O objeto de evidência <see cref="T:System.Security.Policy.Url" /> a ser testado quanto à equivalência com o objeto atual.</param>
      <returns>
        <see langword="true" /> se os dois objetos <see cref="T:System.Security.Policy.Url" /> forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.Url.GetHashCode">
      <summary>Obtém o código hash da URL atual.</summary>
      <returns>O código hash da URL atual.</returns>
    </member>
    <member name="M:System.Security.Policy.Url.ToString">
      <summary>Retorna uma representação de cadeia de caracteres do <see cref="T:System.Security.Policy.Url" /> atual.</summary>
      <returns>Uma representação do <see cref="T:System.Security.Policy.Url" /> atual.</returns>
    </member>
    <member name="P:System.Security.Policy.Url.Value">
      <summary>Obtém a URL da qual o assembly de código se origina.</summary>
      <returns>A URL da qual o assembly de código se origina.</returns>
    </member>
    <member name="T:System.Security.Policy.UrlMembershipCondition">
      <summary>Determina se um assembly pertence a um grupo de códigos testando sua URL. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Policy.UrlMembershipCondition" /> com a URL que determina a associação.</summary>
      <param name="url">A URL para a qual o teste deve ser realizado.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="url" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="url" /> deve ser uma URL absoluta.</exception>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>Determina se a evidência especificada satisfaz a condição de associação.</summary>
      <param name="evidence">O conjunto de evidências no qual realizar o teste.</param>
      <exception cref="T:System.ArgumentNullException">A propriedade <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> é <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se a evidência especificada satisfizer a condição de associação; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.Copy">
      <summary>Cria uma cópia equivalente da condição de associação.</summary>
      <exception cref="T:System.ArgumentNullException">A propriedade <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> é <see langword="null" />.</exception>
      <returns>Uma nova cópia idêntica da condição de associação atual.</returns>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.Equals(System.Object)">
      <summary>Determina se a URL do objeto especificado é equivalente à URL contida no <see cref="T:System.Security.Policy.UrlMembershipCondition" /> atual.</summary>
      <param name="o">O objeto a ser comparado com o <see cref="T:System.Security.Policy.UrlMembershipCondition" /> atual.</param>
      <exception cref="T:System.ArgumentNullException">A propriedade <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> do objeto atual ou do objeto especificado é <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se a URL do objeto especificado for equivalente à URL contida no <see cref="T:System.Security.Policy.UrlMembershipCondition" /> atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói um objeto de segurança com um estado especificado de uma codificação XML.</summary>
      <param name="e">A codificação XML a ser usada para reconstruir o objeto de segurança.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="e" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="e" /> não é um elemento de condição de associação válido.</exception>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Reconstrói um objeto de segurança com um estado especificado de uma codificação XML.</summary>
      <param name="e">A codificação XML a ser usada para reconstruir o objeto de segurança.</param>
      <param name="level">O contexto do nível de política usado para resolver referências de conjunto de permissões nomeadas.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="e" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="e" /> não é um elemento de condição de associação válido.</exception>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.GetHashCode">
      <summary>Obtém o código hash para a condição de associação atual.</summary>
      <exception cref="T:System.ArgumentNullException">A propriedade <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> é <see langword="null" />.</exception>
      <returns>O código hash para a condição de associação atual.</returns>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.ToString">
      <summary>Cria e retorna uma representação de cadeia de caracteres da condição de associação.</summary>
      <exception cref="T:System.ArgumentNullException">A propriedade <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> é <see langword="null" />.</exception>
      <returns>Uma representação de cadeia de caracteres do estado da condição de associação.</returns>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.ToXml">
      <summary>Cria uma codificação XML do objeto de segurança e seu estado atual.</summary>
      <returns>Uma codificação XML do objeto de segurança, incluindo quaisquer informações de estado.</returns>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>Cria uma codificação XML do objeto de segurança e de seu estado atual com o <see cref="T:System.Security.Policy.PolicyLevel" /> especificado.</summary>
      <param name="level">O contexto do nível de política para resolver as referências do conjunto de permissões nomeadas.</param>
      <exception cref="T:System.ArgumentNullException">A propriedade <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> é <see langword="null" />.</exception>
      <returns>Uma codificação XML do objeto de segurança, incluindo quaisquer informações de estado.</returns>
    </member>
    <member name="P:System.Security.Policy.UrlMembershipCondition.Url">
      <summary>Obtém ou define a URL para a qual a condição de associação é testada.</summary>
      <exception cref="T:System.ArgumentNullException">É feita uma tentativa de definir <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> como <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Valor não é uma URL absoluta.</exception>
      <returns>A URL para a qual a condição de associação é testada.</returns>
    </member>
    <member name="T:System.Security.Policy.Zone">
      <summary>Fornece a zona de segurança de um assembly de código como evidência para avaliação de política. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Policy.Zone.#ctor(System.Security.SecurityZone)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Policy.Zone" /> com a zona da qual um assembly de código se origina.</summary>
      <param name="zone">A zona de origem do assembly de código associado.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="zone" /> não é um <see cref="T:System.Security.SecurityZone" /> válido.</exception>
    </member>
    <member name="M:System.Security.Policy.Zone.Copy">
      <summary>Cria uma cópia equivalente do objeto de evidência.</summary>
      <returns>Uma nova cópia idêntica do objeto de evidência.</returns>
    </member>
    <member name="M:System.Security.Policy.Zone.CreateFromUrl(System.String)">
      <summary>Cria uma nova zona com a URL especificada.</summary>
      <param name="url">A URL da qual a zona deve ser criada.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="url" /> é <see langword="null" />.</exception>
      <returns>Uma nova zona com a URL especificada.</returns>
    </member>
    <member name="M:System.Security.Policy.Zone.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>Cria uma permissão de identidade que corresponde à instância atual da classe de evidência <see cref="T:System.Security.Policy.Zone" />.</summary>
      <param name="evidence">O conjunto de evidências do qual a permissão de identidade deve ser construída.</param>
      <returns>Uma <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> para a evidência <see cref="T:System.Security.Policy.Zone" /> especificada.</returns>
    </member>
    <member name="M:System.Security.Policy.Zone.Equals(System.Object)">
      <summary>Compara o objeto de evidência <see cref="T:System.Security.Policy.Zone" /> atual com o objeto especificado quanto à equivalência.</summary>
      <param name="o">O objeto de evidência <see cref="T:System.Security.Policy.Zone" /> a ser testado quanto à equivalência com o objeto atual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="o" /> não é um objeto <see cref="T:System.Security.Policy.Zone" />.</exception>
      <returns>
        <see langword="true" /> se os dois objetos <see cref="T:System.Security.Policy.Zone" /> forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.Zone.GetHashCode">
      <summary>Obtém o código hash da zona atual.</summary>
      <returns>O código hash da zona atual.</returns>
    </member>
    <member name="M:System.Security.Policy.Zone.ToString">
      <summary>Retorna uma representação de cadeia de caracteres do <see cref="T:System.Security.Policy.Zone" /> atual.</summary>
      <returns>Uma representação do <see cref="T:System.Security.Policy.Zone" /> atual.</returns>
    </member>
    <member name="P:System.Security.Policy.Zone.SecurityZone">
      <summary>Obtém a zona da qual o assembly de código se origina.</summary>
      <returns>A zona da qual o assembly de código se origina.</returns>
    </member>
    <member name="T:System.Security.Policy.ZoneMembershipCondition">
      <summary>Determina se um assembly pertence a um grupo de códigos testando sua zona de origem. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.#ctor(System.Security.SecurityZone)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Policy.ZoneMembershipCondition" /> com a zona que determina a associação.</summary>
      <param name="zone">A <see cref="T:System.Security.SecurityZone" /> para a qual o teste deve ser realizado.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="zone" /> não é um <see cref="T:System.Security.SecurityZone" /> válido.</exception>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>Determina se a evidência especificada satisfaz a condição de associação.</summary>
      <param name="evidence">O conjunto de evidências no qual realizar o teste.</param>
      <exception cref="T:System.ArgumentNullException">A propriedade <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">A propriedade <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> não é uma <see cref="T:System.Security.SecurityZone" /> válida.</exception>
      <returns>
        <see langword="true" /> se a evidência especificada satisfizer a condição de associação; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.Copy">
      <summary>Cria uma cópia equivalente da condição de associação.</summary>
      <exception cref="T:System.ArgumentNullException">A propriedade <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">A propriedade <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> não é uma <see cref="T:System.Security.SecurityZone" /> válida.</exception>
      <returns>Uma nova cópia idêntica da condição de associação atual.</returns>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.Equals(System.Object)">
      <summary>Determina se a zona do objeto especificado é equivalente à zona contida na <see cref="T:System.Security.Policy.ZoneMembershipCondition" /> atual.</summary>
      <param name="o">O objeto a ser comparado com o <see cref="T:System.Security.Policy.ZoneMembershipCondition" /> atual.</param>
      <exception cref="T:System.ArgumentNullException">A propriedade <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> do objeto atual ou do objeto especificado é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">A propriedade <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> do objeto atual ou do objeto especificado não é uma <see cref="T:System.Security.SecurityZone" /> válida.</exception>
      <returns>
        <see langword="true" /> se a zona do objeto especificado for equivalente à zona contida na <see cref="T:System.Security.Policy.ZoneMembershipCondition" /> atual, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói um objeto de segurança com um estado especificado de uma codificação XML.</summary>
      <param name="e">A codificação XML a ser usada para reconstruir o objeto de segurança.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="e" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="e" /> não é um elemento de condição de associação válido.</exception>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Reconstrói um objeto de segurança com um estado especificado de uma codificação XML.</summary>
      <param name="e">A codificação XML a ser usada para reconstruir o objeto de segurança.</param>
      <param name="level">O contexto do nível de política usado para resolver referências de conjunto de permissões nomeadas.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="e" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="e" /> não é um elemento de condição de associação válido.</exception>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.GetHashCode">
      <summary>Obtém o código hash para a condição de associação atual.</summary>
      <exception cref="T:System.ArgumentNullException">A propriedade <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">A propriedade <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> não é uma <see cref="T:System.Security.SecurityZone" /> válida.</exception>
      <returns>O código hash para a condição de associação atual.</returns>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.ToString">
      <summary>Cria e retorna uma representação de cadeia de caracteres da condição de associação.</summary>
      <exception cref="T:System.ArgumentNullException">A propriedade <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">A propriedade <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> não é uma <see cref="T:System.Security.SecurityZone" /> válida.</exception>
      <returns>Uma representação de cadeia de caracteres do estado da condição de associação.</returns>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.ToXml">
      <summary>Cria uma codificação XML do objeto de segurança e seu estado atual.</summary>
      <exception cref="T:System.ArgumentNullException">A propriedade <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">A propriedade <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> não é uma <see cref="T:System.Security.SecurityZone" /> válida.</exception>
      <returns>Uma codificação XML do objeto de segurança, incluindo quaisquer informações de estado.</returns>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>Cria uma codificação XML do objeto de segurança e de seu estado atual com o <see cref="T:System.Security.Policy.PolicyLevel" /> especificado.</summary>
      <param name="level">O contexto do nível de política para resolver as referências do conjunto de permissões nomeadas.</param>
      <exception cref="T:System.ArgumentNullException">A propriedade <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">A propriedade <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> não é uma <see cref="T:System.Security.SecurityZone" /> válida.</exception>
      <returns>Uma codificação XML do objeto de segurança, incluindo quaisquer informações de estado.</returns>
    </member>
    <member name="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone">
      <summary>Obtém ou define a zona para a qual a condição de associação é testada.</summary>
      <exception cref="T:System.ArgumentNullException">O valor é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">É feita uma tentativa de definir <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> como uma <see cref="T:System.Security.SecurityZone" /> inválida.</exception>
      <returns>A zona para a qual a condição de associação é testada.</returns>
    </member>
    <member name="T:System.Security.PolicyLevelType">
      <summary>Especifica o tipo de um nível de política de código gerenciado.</summary>
    </member>
    <member name="F:System.Security.PolicyLevelType.AppDomain">
      <summary>Política de segurança para todo o código gerenciado em um aplicativo.</summary>
    </member>
    <member name="F:System.Security.PolicyLevelType.Enterprise">
      <summary>Política de segurança para todo o código gerenciado em uma empresa.</summary>
    </member>
    <member name="F:System.Security.PolicyLevelType.Machine">
      <summary>Política de segurança para todo o código gerenciado executado no computador.</summary>
    </member>
    <member name="F:System.Security.PolicyLevelType.User">
      <summary>Política de segurança para todo o código gerenciado executado pelo usuário.</summary>
    </member>
    <member name="T:System.Security.SecurityContext">
      <summary>Encapsula e propaga todos os dados relacionados à segurança para contextos de execução transferidos entre threads. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.SecurityContext.Capture">
      <summary>Captura o contexto de segurança para o thread atual.</summary>
      <returns>O contexto de segurança para o thread atual.</returns>
    </member>
    <member name="M:System.Security.SecurityContext.CreateCopy">
      <summary>Cria uma cópia do contexto de segurança atual.</summary>
      <exception cref="T:System.InvalidOperationException">O contexto de segurança atual foi usado anteriormente, passou por marshalling entre domínios de aplicativo ou não foi adquirido por meio do método <see cref="M:System.Security.SecurityContext.Capture" />.</exception>
      <returns>O contexto de segurança para o thread atual.</returns>
    </member>
    <member name="M:System.Security.SecurityContext.Dispose">
      <summary>Libera todos os recursos usados pela instância atual da classe <see cref="T:System.Security.SecurityContext" />.</summary>
    </member>
    <member name="M:System.Security.SecurityContext.IsFlowSuppressed">
      <summary>Determina se o fluxo do contexto de segurança foi suprimido.</summary>
      <returns>
        <see langword="true" /> se o fluxo tiver sido suprimido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed">
      <summary>Determina se o fluxo da porção de identidade de Windows do contexto de segurança atual foi suprimido.</summary>
      <returns>
        <see langword="true" /> se o fluxo tiver sido suprimido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.SecurityContext.RestoreFlow">
      <summary>Restaura o fluxo do contexto de segurança entre threads assíncronos.</summary>
      <exception cref="T:System.InvalidOperationException">O contexto de segurança é <see langword="null" /> ou uma cadeia de caracteres vazia.</exception>
    </member>
    <member name="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)">
      <summary>Executa o método especificado no contexto de segurança especificado no thread atual.</summary>
      <param name="securityContext">O contexto de segurança a definir.</param>
      <param name="callback">O delegado que representa o método a ser executado no contexto de segurança especificado.</param>
      <param name="state">O objeto a passar para o método de retorno de chamada.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="securityContext" /> é <see langword="null" />.  
  
- ou - 
 <paramref name="securityContext" /> não foi adquirido por meio de uma operação de captura.  
  
- ou - 
 <paramref name="securityContext" /> já foi usado como argumento para uma chamada de método <see cref="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)" />.</exception>
    </member>
    <member name="M:System.Security.SecurityContext.SuppressFlow">
      <summary>Suprime o fluxo do contexto de segurança entre threads assíncronos.</summary>
      <returns>Uma estrutura <see cref="T:System.Threading.AsyncFlowControl" /> para restaurar o fluxo.</returns>
    </member>
    <member name="M:System.Security.SecurityContext.SuppressFlowWindowsIdentity">
      <summary>Suprime o fluxo da porção de identidade de Windows do contexto de segurança atual entre threads assíncronos.</summary>
      <returns>Uma estrutura para restaurar o fluxo.</returns>
    </member>
    <member name="T:System.Security.SecurityContextSource">
      <summary>Identifica a origem para o contexto de segurança.</summary>
    </member>
    <member name="F:System.Security.SecurityContextSource.CurrentAppDomain">
      <summary>O atual domínio de aplicativo é a origem para o contexto de segurança.</summary>
    </member>
    <member name="F:System.Security.SecurityContextSource.CurrentAssembly">
      <summary>O assembly atual é a origem para o contexto de segurança.</summary>
    </member>
    <member name="T:System.Security.SecurityManager">
      <summary>Fornece o ponto de acesso principal para as classes que interagem com o sistema de segurança. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture">
      <summary>Determina se o thread atual requer uma captura de contexto de segurança se o estado de segurança precisar ser recriado em um momento posterior.</summary>
      <returns>
        <see langword="false" /> se a pilha não contiver nenhum domínio de aplicativo parcialmente confiável, nenhum assembly parcialmente confiável e nenhum modificador <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> ou <see cref="M:System.Security.CodeAccessPermission.Deny" /> ativo no momento; <see langword="true" /> se o Common Language Runtime não puder garantir que a pilha não contém nenhum desses itens.</returns>
    </member>
    <member name="M:System.Security.SecurityManager.GetStandardSandbox(System.Security.Policy.Evidence)">
      <summary>Obtém um conjunto de permissões que é seguro conceder a um aplicativo que tem a evidência fornecida.</summary>
      <param name="evidence">A evidência de host a ser correspondida a um conjunto de permissões.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> é <see langword="null" />.</exception>
      <returns>Um conjunto de permissões que pode ser usado como um conjunto de concessões para o aplicativo que tem a evidência fornecida.</returns>
    </member>
    <member name="M:System.Security.SecurityManager.GetZoneAndOrigin(System.Collections.ArrayList@,System.Collections.ArrayList@)">
      <summary>Obtém a identidade de zona concedida e os conjuntos de permissões de identidade URL para o assembly atual.</summary>
      <param name="zone">Um parâmetro de saída que contém um <see cref="T:System.Collections.ArrayList" /> de objetos <see cref="P:System.Security.Permissions.ZoneIdentityPermissionAttribute.Zone" /> concedidos.</param>
      <param name="origin">Um parâmetro de saída que contém um <see cref="T:System.Collections.ArrayList" /> de objetos <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> concedidos.</param>
      <exception cref="T:System.Security.SecurityException">A solicitação para <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> falhou.</exception>
    </member>
    <member name="M:System.Security.SecurityManager.IsGranted(System.Security.IPermission)">
      <summary>Determina se uma permissão é concedida ao chamador.</summary>
      <param name="perm">A permissão a ser testada na concessão do chamador.</param>
      <returns>
        <see langword="true" /> se as permissões concedidas ao chamador incluírem a permissão <paramref name="perm" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)">
      <summary>Carrega um <see cref="T:System.Security.Policy.PolicyLevel" /> do arquivo especificado.</summary>
      <param name="path">O caminho de arquivo físico para um arquivo que contém as informações da política de segurança.</param>
      <param name="type">Um dos valores de enumeração que especificam o tipo de nível de política a ser carregado.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="path" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O arquivo indicado pelo parâmetro <paramref name="path" /> não existe.</exception>
      <exception cref="T:System.Security.SecurityException">O código que chama esse método não tem <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.  
  
- ou - 
O código que chama esse método não tem <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.  
  
- ou - 
O código que chama esse método não tem <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.  
  
- ou - 
O código que chama esse método não tem <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</exception>
      <exception cref="T:System.NotSupportedException">Esse método usa a política de CAS (segurança de acesso do código), que está obsoleta no .NET Framework 4. Para habilitar a política de CAS para compatibilidade com versões anteriores do .NET Framework, use o elemento &lt;legacyCasPolicy&gt;.</exception>
      <returns>O nível de política carregado.</returns>
    </member>
    <member name="M:System.Security.SecurityManager.LoadPolicyLevelFromString(System.String,System.Security.PolicyLevelType)">
      <summary>Carrega um <see cref="T:System.Security.Policy.PolicyLevel" /> da cadeia de caracteres especificada.</summary>
      <param name="str">A representação XML de um nível de política de segurança no mesmo formato em que aparece em um arquivo de configuração.</param>
      <param name="type">Um dos valores de enumeração que especificam o tipo de nível de política a ser carregado.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="str" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="str" /> não é válido.</exception>
      <exception cref="T:System.Security.SecurityException">O código que chama esse método não tem <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.</exception>
      <returns>O nível de política carregado.</returns>
    </member>
    <member name="M:System.Security.SecurityManager.PolicyHierarchy">
      <summary>Fornece um enumerador para acessar a hierarquia de política de segurança por níveis, como a política de computador e a política de usuário.</summary>
      <exception cref="T:System.NotSupportedException">Esse método usa a política de CAS (segurança de acesso do código), que está obsoleta no .NET Framework 4. Para habilitar a política de CAS para compatibilidade com versões anteriores do .NET Framework, use o elemento &lt;legacyCasPolicy&gt;.</exception>
      <exception cref="T:System.Security.SecurityException">O código que chama esse método não tem <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.</exception>
      <returns>Um enumerador para objetos <see cref="T:System.Security.Policy.PolicyLevel" /> que compõem a hierarquia de política de segurança.</returns>
    </member>
    <member name="M:System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence)">
      <summary>Determina quais permissões conceder ao código com base na evidência especificada.</summary>
      <param name="evidence">O conjunto de evidências usado para avaliar a política.</param>
      <exception cref="T:System.NotSupportedException">Esse método usa a política de CAS (segurança de acesso do código), que está obsoleta no .NET Framework 4. Para habilitar a política de CAS para compatibilidade com versões anteriores do .NET Framework, use o elemento &lt;legacyCasPolicy&gt;.</exception>
      <returns>O conjunto de permissões que podem ser concedidas pelo sistema de segurança.</returns>
    </member>
    <member name="M:System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet@)">
      <summary>Determina quais permissões conceder ao código com base na evidência e nas solicitações especificadas.</summary>
      <param name="evidence">O conjunto de evidências usado para avaliar a política.</param>
      <param name="reqdPset">As permissões necessárias para a execução do código.</param>
      <param name="optPset">As permissões opcionais que serão usadas, se concedidas, mas que não são obrigatórias para a execução do código.</param>
      <param name="denyPset">As permissões negadas que nunca devem ser concedidas ao código, mesmo que a política permita.</param>
      <param name="denied">Um parâmetro de saída que contém o conjunto de permissões não concedidas.</param>
      <exception cref="T:System.NotSupportedException">Esse método usa a política de CAS (segurança de acesso do código), que está obsoleta no .NET Framework 4. Para habilitar a política de CAS para compatibilidade com versões anteriores do .NET Framework, use o elemento &lt;legacyCasPolicy&gt;.</exception>
      <exception cref="T:System.Security.Policy.PolicyException">A política falha em conceder as permissões mínimas necessárias especificadas pelo parâmetro <paramref name="reqdPset" />.</exception>
      <returns>O conjunto de permissões que seriam concedidas pelo sistema de segurança.</returns>
    </member>
    <member name="M:System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence[])">
      <summary>Determina quais permissões conceder ao código com base na evidência especificada.</summary>
      <param name="evidences">Uma matriz de objetos de evidência usados para avaliar a política.</param>
      <exception cref="T:System.NotSupportedException">Esse método usa a política de CAS (segurança de acesso do código), que está obsoleta no .NET Framework 4. Para habilitar a política de CAS para compatibilidade com versões anteriores do .NET Framework, use o elemento &lt;legacyCasPolicy&gt;.</exception>
      <returns>O conjunto de permissões apropriado para todas as evidências fornecidas.</returns>
    </member>
    <member name="M:System.Security.SecurityManager.ResolvePolicyGroups(System.Security.Policy.Evidence)">
      <summary>Obtém uma coleção de grupos de código correspondentes à evidência especificada.</summary>
      <param name="evidence">O conjunto de evidências em relação ao qual a política é avaliada.</param>
      <exception cref="T:System.NotSupportedException">Esse método usa a política de CAS (segurança de acesso do código), que está obsoleta no .NET Framework 4. Para habilitar a política de CAS para compatibilidade com versões anteriores do .NET Framework, use o elemento &lt;legacyCasPolicy&gt;.</exception>
      <returns>Uma enumeração do conjunto de grupos de código correspondente à evidência.</returns>
    </member>
    <member name="M:System.Security.SecurityManager.ResolveSystemPolicy(System.Security.Policy.Evidence)">
      <summary>Determina quais permissões conceder ao código com base na evidência especificada, exceto pela política para o nível <see cref="T:System.AppDomain" />.</summary>
      <param name="evidence">O conjunto de evidências usado para avaliar a política.</param>
      <exception cref="T:System.NotSupportedException">Esse método usa a política de CAS (segurança de acesso do código), que está obsoleta no .NET Framework 4. Para habilitar a política de CAS para compatibilidade com versões anteriores do .NET Framework, use o elemento &lt;legacyCasPolicy&gt;.</exception>
      <returns>O conjunto de permissões que podem ser concedidas pelo sistema de segurança.</returns>
    </member>
    <member name="M:System.Security.SecurityManager.SavePolicy">
      <summary>Salva o estado da política de segurança modificada.</summary>
      <exception cref="T:System.NotSupportedException">Esse método usa a política de CAS (segurança de acesso do código), que está obsoleta no .NET Framework 4. Para habilitar a política de CAS para compatibilidade com versões anteriores do .NET Framework, use o elemento &lt;legacyCasPolicy&gt;.</exception>
      <exception cref="T:System.Security.SecurityException">O código que chama esse método não tem <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.</exception>
    </member>
    <member name="M:System.Security.SecurityManager.SavePolicyLevel(System.Security.Policy.PolicyLevel)">
      <summary>Salva um nível de política de segurança modificada carregado com <see cref="M:System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)" />.</summary>
      <param name="level">O objeto de nível da política a ser salvo.</param>
      <exception cref="T:System.Security.SecurityException">O código que chama esse método não tem <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.</exception>
      <exception cref="T:System.NotSupportedException">Esse método usa a política de CAS (segurança de acesso do código), que está obsoleta no .NET Framework 4. Para habilitar a política de CAS para compatibilidade com versões anteriores do .NET Framework, use o elemento &lt;legacyCasPolicy&gt;.</exception>
    </member>
    <member name="P:System.Security.SecurityManager.CheckExecutionRights">
      <summary>Obtém ou define um valor que indica se o código deve ter <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> para ser executado.</summary>
      <exception cref="T:System.Security.SecurityException">O código que chama esse método não tem <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.</exception>
      <returns>
        <see langword="true" /> Se o código deve ter para <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> ser executado; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Security.SecurityManager.SecurityEnabled">
      <summary>Obtém ou define um valor que indica se a segurança está habilitada.</summary>
      <exception cref="T:System.Security.SecurityException">O código que chama esse método não tem <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.</exception>
      <returns>
        <see langword="true" /> se a segurança estiver habilitada; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="T:System.Security.SecurityState">
      <summary>Fornece uma classe base para solicitar o status de segurança de uma ação do objeto <see cref="T:System.AppDomainManager" />.</summary>
    </member>
    <member name="M:System.Security.SecurityState.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.SecurityState" />.</summary>
    </member>
    <member name="M:System.Security.SecurityState.EnsureState">
      <summary>Quando substituído em uma classe derivada, garante que o estado representado por <see cref="T:System.Security.SecurityState" /> esteja disponível no host.</summary>
    </member>
    <member name="M:System.Security.SecurityState.IsStateAvailable">
      <summary>Obtém um valor que indica se o estado para essa implementação da classe <see cref="T:System.Security.SecurityState" /> está disponível no host atual.</summary>
      <returns>
        <see langword="true" /> se o estado estiver disponível; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Security.SecurityZone">
      <summary>Define os valores inteiros correspondentes às zonas de segurança usadas pela política de segurança.</summary>
    </member>
    <member name="F:System.Security.SecurityZone.Internet">
      <summary>A zona da Internet é usada para sites a Internet que não pertencem a outra zona.</summary>
    </member>
    <member name="F:System.Security.SecurityZone.Intranet">
      <summary>A zona da intranet local é usada para o conteúdo localizado na intranet da empresa. Como os servidores e as informações estarão no firewall de uma empresa, um usuário ou uma empresa poderá atribuir um nível de confiança mais alto ao conteúdo na intranet.</summary>
    </member>
    <member name="F:System.Security.SecurityZone.MyComputer">
      <summary>A zona do computador local é uma zona implícita usada para o conteúdo existente no computador do usuário.</summary>
    </member>
    <member name="F:System.Security.SecurityZone.NoZone">
      <summary>Nenhuma zona está especificada.</summary>
    </member>
    <member name="F:System.Security.SecurityZone.Trusted">
      <summary>A zona de sites confiáveis é usada para o conteúdo localizado em sites considerados mais confiáveis do que outros sites na Internet. Os usuários podem usar essa zona para atribuir um nível de confiança mais alto a esses sites para minimizar o número de solicitações de autenticação. As URLs desses sites confiáveis precisam ser mapeadas para essa zona pelo usuário.</summary>
    </member>
    <member name="F:System.Security.SecurityZone.Untrusted">
      <summary>A zona de sites restritos é usada para sites com conteúdo que poderá causar ou que pode ter causado problemas quando baixado. As URLs desses sites não confiáveis precisam ser mapeadas para essa zona pelo usuário.</summary>
    </member>
    <member name="T:System.Security.XmlSyntaxException">
      <summary>A exceção que é gerada quando há um erro de sintaxe ao analisar o XML. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.XmlSyntaxException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.XmlSyntaxException" /> com propriedades padrão.</summary>
    </member>
    <member name="M:System.Security.XmlSyntaxException.#ctor(System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.XmlSyntaxException" /> com o número de linha em que a exceção foi detectada.</summary>
      <param name="lineNumber">O número de linha do fluxo XML no qual o erro de sintaxe XML foi detectado.</param>
    </member>
    <member name="M:System.Security.XmlSyntaxException.#ctor(System.Int32,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.XmlSyntaxException" /> com uma mensagem de erro especificada e o número de linha em que a exceção foi detectada.</summary>
      <param name="lineNumber">O número de linha do fluxo XML no qual o erro de sintaxe XML foi detectado.</param>
      <param name="message">A mensagem de erro que explica a razão da exceção.</param>
    </member>
    <member name="M:System.Security.XmlSyntaxException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.XmlSyntaxException" /> com uma mensagem de erro especificada.</summary>
      <param name="message">A mensagem de erro que explica a razão da exceção.</param>
    </member>
    <member name="M:System.Security.XmlSyntaxException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.XmlSyntaxException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message">A mensagem de erro que explica a razão da exceção.</param>
      <param name="inner">A exceção que é a causa da exceção atual. Caso o parâmetro <paramref name="inner" /> não seja <see langword="null" />, a exceção atual é acionada em um bloco <see langword="catch" /> que identifica a exceção interna.</param>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermission">
      <summary>Permite o controle de permissões de segurança de acesso a códigos para controladores de serviço.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceProcess.ServiceControllerPermission" />.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceProcess.ServiceControllerPermission" /> com o acesso aos recursos especificado.</summary>
      <param name="state">Um dos valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="state" /> não é um valor válido de <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.ServiceProcess.ServiceControllerPermissionAccess,System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceProcess.ServiceControllerPermission" /> com os níveis de permissão de acesso especificados, o nome do computador no qual reside o serviço e o nome curto que identifica o serviço para o sistema.</summary>
      <param name="permissionAccess">Um dos valores de <see cref="T:System.ServiceProcess.ServiceControllerPermissionAccess" />.</param>
      <param name="machineName">O nome do computador no qual o serviço reside.</param>
      <param name="serviceName">O nome curto que identifica o serviço para o sistema.</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.ServiceProcess.ServiceControllerPermissionEntry[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceProcess.ServiceControllerPermission" /> com as entradas de permissão especificadas.</summary>
      <param name="permissionAccessEntries">Uma matriz de objetos de <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" />. A propriedade <see cref="P:System.ServiceProcess.ServiceControllerPermission.PermissionEntries" /> é definida para esse valor.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="permissionAccessEntries" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermission.PermissionEntries">
      <summary>Obtém a coleção de entradas de permissão para esta solicitação de permissões.</summary>
      <returns>Um <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" /> que contém as entradas de permissão para essa solicitação de permissões.</returns>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermissionAccess">
      <summary>Define os níveis de acesso usados pelas classes de permissão <see cref="T:System.ServiceProcess.ServiceController" />.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerPermissionAccess.Browse">
      <summary>O <see cref="T:System.ServiceProcess.ServiceController" /> pode se conectar a serviços existentes, mas não pode controlá-los.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control">
      <summary>O <see cref="T:System.ServiceProcess.ServiceController" /> pode se conectar a serviços existentes e pode controlá-los.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerPermissionAccess.None">
      <summary>O <see cref="T:System.ServiceProcess.ServiceController" /> não tem permissões.</summary>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermissionAttribute">
      <summary>Permite verificações de permissão de controlador de serviço declarativo.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceProcess.ServiceControllerPermissionAttribute" />.</summary>
      <param name="action">Um dos valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionAttribute.CreatePermission">
      <summary>Cria a permissão com base nos níveis de acesso solicitados definidos por meio da propriedade <see cref="P:System.ServiceProcess.ServiceControllerPermissionAttribute.PermissionAccess" /> no atributo.</summary>
      <returns>Um <see cref="T:System.Security.IPermission" /> que representa a permissão criada.</returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionAttribute.MachineName">
      <summary>Obtém ou define o nome do computador no qual o serviço reside.</summary>
      <exception cref="T:System.ArgumentException">A sintaxe <see cref="P:System.ServiceProcess.ServiceControllerPermissionAttribute.MachineName" /> é inválida.</exception>
      <returns>O nome do computador que está executando o serviço associado ao <see cref="T:System.ServiceProcess.ServiceController" /> .</returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionAttribute.PermissionAccess">
      <summary>Obtém ou define os níveis de acesso usados na solicitação de permissões.</summary>
      <returns>Uma combinação bit a bit dos valores <see cref="T:System.ServiceProcess.ServiceControllerPermissionAccess" />.</returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionAttribute.ServiceName">
      <summary>Obtém ou define o nome curto que identifica o serviço para o sistema.</summary>
      <exception cref="T:System.ArgumentNullException">O <see cref="P:System.ServiceProcess.ServiceControllerPermissionAttribute.ServiceName" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">A sintaxe da propriedade <see cref="P:System.ServiceProcess.ServiceControllerPermissionAttribute.ServiceName" /> é inválida.</exception>
      <returns>O nome do serviço.</returns>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermissionEntry">
      <summary>Define a menor unidade de uma permissão de segurança de acesso do código definida para um <see cref="T:System.ServiceProcess.ServiceController" />.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntry.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" />.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntry.#ctor(System.ServiceProcess.ServiceControllerPermissionAccess,System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> com os níveis de acesso de permissões especificados, o nome do computador e um nome curto que identifica o serviço.</summary>
      <param name="permissionAccess">Um dos valores de <see cref="T:System.ServiceProcess.ServiceControllerPermissionAccess" />.</param>
      <param name="machineName">O nome do computador no qual o serviço reside.</param>
      <param name="serviceName">O nome curto que identifica o serviço para o sistema.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceName" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="machineName" /> não é válido.  
  
- ou - 
 <paramref name="serviceName" /> não é válido.</exception>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionEntry.MachineName">
      <summary>Obtém o nome do computador no qual o serviço reside.</summary>
      <returns>O nome do computador que está executando o serviço associado ao <see cref="T:System.ServiceProcess.ServiceController" /> .</returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionEntry.PermissionAccess">
      <summary>Obtém os níveis de acesso usados na solicitação de permissões.</summary>
      <returns>Uma combinação bit a bit dos valores <see cref="T:System.ServiceProcess.ServiceControllerPermissionAccess" />.</returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionEntry.ServiceName">
      <summary>Obtém o nome curto que identifica o serviço para o sistema.</summary>
      <returns>O nome do serviço.</returns>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection">
      <summary>Contém uma coleção fortemente tipada dos objetos <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" />.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Add(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>Adiciona um <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> especificado a esta coleção.</summary>
      <param name="value">O objeto <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> a ser adicionado.</param>
      <returns>O índice de base zero do objeto <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> adicionado.</returns>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.AddRange(System.ServiceProcess.ServiceControllerPermissionEntry[])">
      <summary>Anexa um conjunto de entradas de permissões especificadas a essa coleção.</summary>
      <param name="value">Uma matriz de objetos tipo <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> que contém as entradas de permissão a adicionar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.AddRange(System.ServiceProcess.ServiceControllerPermissionEntryCollection)">
      <summary>Anexa um conjunto de entradas de permissões especificadas a essa coleção.</summary>
      <param name="value">Um <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" /> que contém as entradas de permissão a adicionar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Contains(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>Determina se esta coleção contém um objeto <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> especificado.</summary>
      <param name="value">O objeto <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> a ser localizado.</param>
      <returns>
        <see langword="true" /> se o objeto <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> especificado pertence a esta coleção; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.CopyTo(System.ServiceProcess.ServiceControllerPermissionEntry[],System.Int32)">
      <summary>Copia as entradas de permissão desta coleção para uma matriz, começando em um índice específico da matriz.</summary>
      <param name="array">Uma matriz do tipo <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> que recebe as entradas de permissão copiadas.</param>
      <param name="index">O índice de base zero no qual começar a copiar as entradas de permissão.</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.IndexOf(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>Determina o índice de uma entrada de permissão especificada nesta coleção.</summary>
      <param name="value">A entrada de permissão a pesquisar.</param>
      <returns>O índice de base zero da entrada de permissão especificada ou -1, se a entrada de permissão não tiver sido encontrada na coleção.</returns>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Insert(System.Int32,System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>Insere uma entrada de permissão nesta coleção em um índice especificado.</summary>
      <param name="index">O índice de base zero da coleção no qual inserir a entrada de permissão.</param>
      <param name="value">A entrada de permissão para inserir nesta coleção.</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Remove(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>Remove uma entrada de permissão especificada dessa coleção.</summary>
      <param name="value">A entrada de permissão a remover.</param>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Item(System.Int32)">
      <summary>Obtém ou define o objeto em um índice especificado.</summary>
      <param name="index">O índice de base zero na coleção.</param>
      <returns>O <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> objeto que existe no índice especificado.</returns>
    </member>
    <member name="T:System.Transactions.DistributedTransactionPermission">
      <summary>A permissão que é exigida pelo <see cref="N:System.Transactions" /> quando o gerenciamento de uma transação é escalonado para o MSDTC. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Transactions.DistributedTransactionPermission" />.</summary>
      <param name="state">Um dos valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.Copy">
      <summary>Cria e retorna uma cópia idêntica da permissão atual.</summary>
      <returns>Uma cópia da permissão atual.</returns>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói um a permissão com um estado especificado de uma codificação XML.</summary>
      <param name="securityElement">A codificação de XML usada para reconstruir a permissão.</param>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.Intersect(System.Security.IPermission)">
      <summary>Cria e retorna uma permissão que é a interseção de permissão atual e da permissão especificada.</summary>
      <param name="target">Uma permissão para ter interseção com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <returns>Uma nova permissão que representa a interseção da permissão atual e da permissão especificada. Essa nova permissão é <see langword="null" /> se a interseção estiver vazia.</returns>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Retorna um valor que indica se a permissão atual é um subconjunto da permissão especificada.</summary>
      <param name="target">Uma permissão para testar a relação de subconjunto. Essa permissão deve ser do mesmo tipo que a permissão atual.</param>
      <returns>
        <see langword="true" /> se a <see cref="T:System.Security.IPermission" /> atual for um subconjunto da <see cref="T:System.Security.IPermission" /> especificada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.IsUnrestricted">
      <summary>Retorna um valor que indica se o acesso irrestrito ao recurso que é protegido pela permissão atual é permitido.</summary>
      <returns>
        <see langword="true" /> se o uso irrestrito do recurso protegido pela permissão for permitido, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.ToXml">
      <summary>Cria uma codificação XML do objeto de segurança e seu estado atual.</summary>
      <returns>Um <see cref="T:System.Security.SecurityElement" /> que contém a codificação XML do objeto de segurança, incluindo quaisquer informações de estado.</returns>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.Union(System.Security.IPermission)">
      <summary>Cria uma permissão que é a união entre a permissão atual e a permissão especificada.</summary>
      <param name="target">Uma permissão a ser combinada com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <returns>Uma <see cref="T:System.Security.IPermission" /> que representa a união da permissão atual e da permissão especificada.</returns>
    </member>
    <member name="T:System.Transactions.DistributedTransactionPermissionAttribute">
      <summary>Permite que as ações de segurança para <see cref="T:System.Transactions.DistributedTransactionPermission" /> sejam aplicadas ao código usando a segurança declarativa. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Transactions.DistributedTransactionPermissionAttribute" /> com o <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Um dos valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermissionAttribute.CreatePermission">
      <summary>Cria um objeto de permissão que pode ser serializado em formato binário e persistentemente armazenado juntamente com o <see cref="T:System.Security.Permissions.SecurityAction" /> nos metadados do assembly.</summary>
      <returns>Um objeto de permissão serializável.</returns>
    </member>
    <member name="P:System.Transactions.DistributedTransactionPermissionAttribute.Unrestricted">
      <summary>Obtém ou define um valor que indica se a permissão total (irrestrita) para o recurso protegido pelo atributo é declarada.</summary>
      <returns>
        <see langword="true" /> se a permissão total para o recurso protegido for declarada; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="T:System.Web.AspNetHostingPermission">
      <summary>Controla as permissões de acesso em ambientes hospedados do ASP.NET. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.AspNetHostingPermission" /> com o valor de enumeração <see cref="T:System.Security.Permissions.PermissionState" /> especificado.</summary>
      <param name="state">Um valor de enumeração <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> não é definido como um dos valores de enumeração <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.#ctor(System.Web.AspNetHostingPermissionLevel)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.AspNetHostingPermission" /> com o nível de permissão especificado.</summary>
      <param name="level">Um valor de enumeração <see cref="T:System.Web.AspNetHostingPermissionLevel" />.</param>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.Copy">
      <summary>Quando implementada por uma classe derivada, cria e retorna uma cópia idêntica do objeto de permissão atual.</summary>
      <returns>Uma cópia do objeto de permissão atual.</returns>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói um objeto de permissão com um estado especificado de uma codificação XML.</summary>
      <param name="securityElement">O <see cref="T:System.Security.SecurityElement" /> que contém a codificação XML a ser usada para reconstruir o objeto de permissão.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">A propriedade <see cref="P:System.Security.SecurityElement.Tag" /> de <paramref name="securityElement" /> não é igual a "IPermission".  
  
- ou - 
A classe <see cref="M:System.Security.SecurityElement.Attribute(System.String)" /> de <paramref name="securityElement" /> é <see langword="null" /> ou uma cadeia de caracteres vazia ("").</exception>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.Intersect(System.Security.IPermission)">
      <summary>Quando implementada por uma classe derivada, cria e retorna uma permissão que é a interseção de permissão atual e da permissão especificada.</summary>
      <param name="target">Uma permissão a ser combinada com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> não é um <see cref="T:System.Web.AspNetHostingPermission" />.</exception>
      <returns>Uma <see cref="T:System.Security.IPermission" /> que representa a interseção da permissão atual e da permissão especificada; caso contrário, <see langword="null" /> se a interseção estiver vazia.</returns>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Retorna um valor que indica se a permissão atual é um subconjunto da permissão especificada.</summary>
      <param name="target">A <see cref="T:System.Security.IPermission" /> a ser combinada com a permissão atual. Ela deve ser do mesmo tipo da <see cref="T:System.Security.IPermission" /> atual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> não é um <see cref="T:System.Web.AspNetHostingPermission" />.</exception>
      <returns>
        <see langword="true" /> se a <see cref="T:System.Security.IPermission" /> atual for um subconjunto da <see cref="T:System.Security.IPermission" /> especificada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.IsUnrestricted">
      <summary>Retorna um valor que indica se o acesso irrestrito ao recurso que é protegido pela permissão atual é permitido.</summary>
      <returns>
        <see langword="true" /> se o uso irrestrito do recurso protegido pela permissão for permitido, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.ToXml">
      <summary>Cria uma codificação XML do objeto de permissão e de seu estado atual.</summary>
      <returns>Um <see cref="T:System.Security.SecurityElement" /> que contém a codificação XML do objeto de permissão, incluindo qualquer informação sobre o estado.</returns>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.Union(System.Security.IPermission)">
      <summary>Cria uma permissão que é a união entre a permissão atual e a permissão especificada.</summary>
      <param name="target">Uma permissão a ser combinada com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> não é um <see cref="T:System.Web.AspNetHostingPermission" />.</exception>
      <returns>Uma <see cref="T:System.Security.IPermission" /> que representa a união da permissão atual e da permissão especificada.</returns>
    </member>
    <member name="P:System.Web.AspNetHostingPermission.Level">
      <summary>Obtém ou define o nível de permissão de hospedagem atual para um aplicativo ASP.NET.</summary>
      <returns>Um dos valores de enumeração <see cref="T:System.Web.AspNetHostingPermissionLevel" />.</returns>
    </member>
    <member name="T:System.Web.AspNetHostingPermissionAttribute">
      <summary>Permite que as ações de segurança para <see cref="T:System.Web.AspNetHostingPermission" /> sejam aplicadas ao código usando a segurança declarativa. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Web.AspNetHostingPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.AspNetHostingPermissionAttribute" />.</summary>
      <param name="action">Um dos valores de enumeração <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Web.AspNetHostingPermissionAttribute.CreatePermission">
      <summary>Cria um novo <see cref="T:System.Web.AspNetHostingPermission" /> com o nível de permissão anteriormente definido pela propriedade <see cref="P:System.Web.AspNetHostingPermissionAttribute.Level" />.</summary>
      <returns>Um <see cref="T:System.Security.IPermission" /> que é o novo <see cref="T:System.Web.AspNetHostingPermission" />.</returns>
    </member>
    <member name="P:System.Web.AspNetHostingPermissionAttribute.Level">
      <summary>Obtém ou define o nível de permissão de hospedagem atual.</summary>
      <returns>Um dos valores de enumeração <see cref="T:System.Web.AspNetHostingPermissionLevel" />.</returns>
    </member>
    <member name="T:System.Web.AspNetHostingPermissionLevel">
      <summary>Especifica o nível de confiança que é concedido a um aplicativo Web ASP .NET.</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.High">
      <summary>Indica que recursos protegidos com uma demanda de qualquer nível menor ou igual ao nível de confiança <see langword="High" /> serão bem-sucedidos. Esse nível destina-se a aplicativos de código gerenciado altamente confiáveis que precisam usar a maioria das permissões gerenciadas que oferecem suporte ao acesso semi confiável. Ele não concede algumas das permissões mais elevadas (por exemplo, a capacidade de chamar em código nativo), mas fornece uma maneira de executar aplicativos confiáveis com menor privilégio ou de fornecer algum nível de restrição para aplicativos altamente confiáveis. Esse nível é concedido através da configuração de, pelo menos, o nível de confiança <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /> na seção trust em um arquivo de configuração.</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.Low">
      <summary>Indica que recursos protegidos com uma demanda de qualquer nível menor ou igual ao nível <see cref="F:System.Web.AspNetHostingPermissionLevel.Low" /> serão bem-sucedidos. Esse nível destina-se a permitir acesso somente leitura a recursos limitados em um ambiente restrito. Esse nível é concedido através da especificação do nível de confiança <see cref="F:System.Web.AspNetHostingPermissionLevel.Low" /> na seção trust em um arquivo de configuração.</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.Medium">
      <summary>Indica que recursos protegidos com uma demanda de qualquer nível menor ou igual ao nível <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> serão bem-sucedidos. Esse nível é concedido através da configuração de, pelo menos, o nível de confiança <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> na seção trust em um arquivo de configuração.</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.Minimal">
      <summary>Indica que recursos protegidos com uma demanda pelo nível <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" /> serão bem-sucedidos. Esse nível permite que o código seja executado, mas não interaja com recursos presentes no sistema. Esse nível é concedido através da configuração de, pelo menos, o nível de confiança <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" /> usando a seção trust em um arquivo de configuração.</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.None">
      <summary>Indica que nenhuma permissão é concedida. Todas as demandas por <see cref="T:System.Web.AspNetHostingPermission" /> falharão.</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.Unrestricted">
      <summary>Indica que todas as demandas de permissão para usar todos os recursos de um aplicativo serão concedidas. Isso é equivalente à concessão do nível de confiança <see langword="Full" /> na seção trust em um arquivo de configuração.</summary>
    </member>
    <member name="T:System.Xaml.Permissions.XamlLoadPermission">
      <summary>Declara as permissões para o carregamento de tipos de assemblies usados por um leitor ou gravador XAML.</summary>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Collections.Generic.IEnumerable{System.Xaml.Permissions.XamlAccessLevel})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> usando um conjunto enumerável de valores <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> específicos.</summary>
      <param name="allowedAccess">Um conjunto enumerável de valores <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> específicos.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="allowedAccess" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="allowedAccess" /> continha informações inválidas, como um item nulo.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> usando as permissões existentes.</summary>
      <param name="state">Um valor de enumeração <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Xaml.Permissions.XamlAccessLevel)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> usando um único valor <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />.</summary>
      <param name="allowedAccess">O valor <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> de definição.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="allowedAccess" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Copy">
      <summary>Cria e retorna uma cópia idêntica da <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> atual.</summary>
      <returns>Uma cópia das <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> atuais.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Equals(System.Object)">
      <param name="obj" />
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói um objeto de segurança com um estado especificado de uma codificação XML.</summary>
      <param name="elem">A codificação XML a ser usada para reconstruir o objeto de segurança.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elem" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elem" /> não contém a codificação XML para um <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.  
  
- ou - 
O atributo de versão em <paramref name="elem" /> não é compatível.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.GetHashCode" />
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Includes(System.Xaml.Permissions.XamlAccessLevel)">
      <summary>Retorna se este <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> inclui um <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> especificado na sua lista <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" />.</summary>
      <param name="requestedAccess">O <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> específico a verificar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestedAccess" /> é nulo.</exception>
      <returns>
        <see langword="true" /> se <paramref name="requestedAccess" /> existir como um item na lista <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /> do <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> atual. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Intersect(System.Security.IPermission)">
      <summary>Cria e retorna um <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> que é a interseção do <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> atual e a permissão especificada.</summary>
      <param name="target">O <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> a ser cruzado com o <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> atual. Pode ser <see langword="null" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> não é <see langword="null" /> ou não é um <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
      <returns>Uma nova permissão que representa a interseção da <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> atual e da <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> especificada. Essa nova permissão é <see langword="null" /> se a interseção estiver vazia.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina se a <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> atual é um subconjunto da permissão especificada.</summary>
      <param name="target">Uma permissão que deve ser testada quanto à relação de subconjunto. Pode ser <see langword="null" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> não é <see langword="null" /> ou não é um <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
      <returns>
        <see langword="true" /> se a <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> atual for um subconjunto da permissão especificada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted">
      <summary>Retorna se este <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> denota permissões irrestritas.</summary>
      <returns>
        <see langword="true" /> se este <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> denotar permissões irrestritas. <see langword="false" /> se este <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> tiver restrições de nível de acesso específicas em <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /> ou não tiver permissões.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.ToXml">
      <summary>Cria uma codificação XML deste <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> e seu estado atual.</summary>
      <returns>Uma codificação de XML deste <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, incluindo quaisquer informações de estado.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Union(System.Security.IPermission)">
      <summary>Cria uma permissão que é a união entre a <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> atual e a permissão especificada.</summary>
      <param name="other">Um <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> a ser combinado ao <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> atual. Pode ser <see langword="null" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> não é <see langword="null" /> ou não é um <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
      <returns>Um novo <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> que representa a união do <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> atual e do <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> especificado.</returns>
    </member>
    <member name="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess">
      <summary>Obtém a lista de todos os valores <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> que esse <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> representa.</summary>
      <returns>Uma lista de valores somente leitura <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> ou <see langword="null" /> .</returns>
    </member>
  </members>
</doc>